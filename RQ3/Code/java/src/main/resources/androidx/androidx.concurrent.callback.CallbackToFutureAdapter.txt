androidx.concurrent.callback.CallbackToFutureAdapter
    private void <init>()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter r0;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.concurrent.ListenableFuture getFuture(androidx.concurrent.callback.CallbackToFutureAdapter$Resolver)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Resolver r0;
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r1, $r5;
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r2, $r6;
        java.lang.Object r3;
        java.lang.Throwable r4, $r8;
        java.lang.Class $r7;

        r0 := @parameter0: androidx.concurrent.callback.CallbackToFutureAdapter$Resolver;

        $r5 = new androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        specialinvoke $r5.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: void <init>()>();

        r1 = $r5;

        $r6 = new androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        specialinvoke $r6.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: void <init>(androidx.concurrent.callback.CallbackToFutureAdapter$Completer)>(r1);

        r2 = $r6;

        r1.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture future> = r2;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r1.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: java.lang.Object tag> = $r7;

     label1:
        r3 = interfaceinvoke r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Resolver: java.lang.Object attachCompleter(androidx.concurrent.callback.CallbackToFutureAdapter$Completer)>(r1);

        if r3 == null goto label2;

        r1.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: java.lang.Object tag> = r3;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        virtualinvoke r2.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: boolean setException(java.lang.Throwable)>(r4);

     label4:
        return r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

androidx.concurrent.callback.CallbackToFutureAdapter$Completer
<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: java.lang.Object tag>
<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture future>
<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.ResolvableFuture cancellationFuture>
<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: boolean attemptedSetting>
    void <init>()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r0;
        androidx.concurrent.callback.ResolvableFuture $r1;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.concurrent.callback.ResolvableFuture: androidx.concurrent.callback.ResolvableFuture create()>();

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.ResolvableFuture cancellationFuture> = $r1;

        return;
    }

    public boolean set(java.lang.Object)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r0;
        java.lang.Object r1;
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r2;
        boolean z0, $z1, $z2;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: boolean attemptedSetting> = 1;

        r2 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture future>;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: boolean set(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        specialinvoke r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: void setCompletedNormally()>();

     label3:
        return z0;
    }

    public boolean setException(java.lang.Throwable)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r0;
        java.lang.Throwable r1;
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r2;
        boolean z0, $z1, $z2;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        r1 := @parameter0: java.lang.Throwable;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: boolean attemptedSetting> = 1;

        r2 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture future>;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: boolean setException(java.lang.Throwable)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        specialinvoke r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: void setCompletedNormally()>();

     label3:
        return z0;
    }

    public boolean setCancelled()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r0;
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r1;
        boolean z0, $z1, $z2;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: boolean attemptedSetting> = 1;

        r1 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture future>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: boolean cancelWithoutNotifyingCompleter(boolean)>(1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        specialinvoke r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: void setCompletedNormally()>();

     label3:
        return z0;
    }

    public void addCancellationListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor r2;
        androidx.concurrent.callback.ResolvableFuture r3;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.ResolvableFuture cancellationFuture>;

        if r3 == null goto label1;

        interfaceinvoke r3.<androidx.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r1, r2);

     label1:
        return;
    }

    void fireCancellationListeners()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r0;
        androidx.concurrent.callback.ResolvableFuture $r1;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: java.lang.Object tag> = null;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture future> = null;

        $r1 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.ResolvableFuture cancellationFuture>;

        virtualinvoke $r1.<androidx.concurrent.callback.ResolvableFuture: boolean set(java.lang.Object)>(null);

        return;
    }

    private void setCompletedNormally()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r0;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: java.lang.Object tag> = null;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture future> = null;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.ResolvableFuture cancellationFuture> = null;

        return;
    }

    protected void finalize()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r0;
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r1;
        androidx.concurrent.callback.ResolvableFuture r2;
        boolean $z1, $z3;
        androidx.concurrent.callback.CallbackToFutureAdapter$FutureGarbageCollectedException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.Object $r6;
        java.lang.String $r8;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        r1 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture future>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: boolean isDone()>();

        if $z1 != 0 goto label1;

        $r3 = new androidx.concurrent.callback.CallbackToFutureAdapter$FutureGarbageCollectedException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The completer object was garbage collected - this future would otherwise never complete. The tag was: ");

        $r6 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: java.lang.Object tag>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<androidx.concurrent.callback.CallbackToFutureAdapter$FutureGarbageCollectedException: void <init>(java.lang.String)>($r8);

        virtualinvoke r1.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: boolean setException(java.lang.Throwable)>($r3);

     label1:
        $z3 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: boolean attemptedSetting>;

        if $z3 != 0 goto label2;

        r2 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: androidx.concurrent.callback.ResolvableFuture cancellationFuture>;

        if r2 == null goto label2;

        virtualinvoke r2.<androidx.concurrent.callback.ResolvableFuture: boolean set(java.lang.Object)>(null);

     label2:
        return;
    }

androidx.concurrent.callback.CallbackToFutureAdapter$FutureGarbageCollectedException
    void <init>(java.lang.String)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$FutureGarbageCollectedException r0;
        java.lang.String r1;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$FutureGarbageCollectedException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Throwable: void <init>(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.Throwable fillInStackTrace()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$FutureGarbageCollectedException r0;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$FutureGarbageCollectedException;

        return r0;
    }

androidx.concurrent.callback.CallbackToFutureAdapter$Resolver
<androidx.concurrent.callback.CallbackToFutureAdapter$Resolver: java.lang.Object attachCompleter(androidx.concurrent.callback.CallbackToFutureAdapter$Completer)>
androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1
<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture this$0>
    void <init>(androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1 r0;
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r1;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1;

        r1 := @parameter0: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture this$0> = r1;

        specialinvoke r0.<androidx.concurrent.callback.AbstractResolvableFuture: void <init>()>();

        return;
    }

    protected java.lang.String pendingToString()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1 r0;
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r1;
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture $r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4, $r7;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1;

        $r2 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture this$0>;

        $r3 = $r2.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: java.lang.ref.WeakReference completerWeakReference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (androidx.concurrent.callback.CallbackToFutureAdapter$Completer) $r4;

        if r1 != null goto label1;

        return "Completer object has been garbage collected, future will fail soon";

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tag=[");

        $r7 = r1.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: java.lang.Object tag>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture
<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: java.lang.ref.WeakReference completerWeakReference>
<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>
    void <init>(androidx.concurrent.callback.CallbackToFutureAdapter$Completer)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r1;
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1 $r2;
        java.lang.ref.WeakReference $r3;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        r1 := @parameter0: androidx.concurrent.callback.CallbackToFutureAdapter$Completer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1;

        specialinvoke $r2.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture$1: void <init>(androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture)>(r0);

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate> = $r2;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: java.lang.ref.WeakReference completerWeakReference> = $r3;

        return;
    }

    public boolean cancel(boolean)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        boolean z0, z1;
        androidx.concurrent.callback.CallbackToFutureAdapter$Completer r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        androidx.concurrent.callback.AbstractResolvableFuture $r4;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: java.lang.ref.WeakReference completerWeakReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (androidx.concurrent.callback.CallbackToFutureAdapter$Completer) $r3;

        $r4 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        z1 = virtualinvoke $r4.<androidx.concurrent.callback.AbstractResolvableFuture: boolean cancel(boolean)>(z0);

        if z1 == 0 goto label1;

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.concurrent.callback.CallbackToFutureAdapter$Completer: void fireCancellationListeners()>();

     label1:
        return z1;
    }

    boolean cancelWithoutNotifyingCompleter(boolean)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        boolean z0, $z1;
        androidx.concurrent.callback.AbstractResolvableFuture $r1;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        $z1 = virtualinvoke $r1.<androidx.concurrent.callback.AbstractResolvableFuture: boolean cancel(boolean)>(z0);

        return $z1;
    }

    boolean set(java.lang.Object)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        java.lang.Object r1;
        androidx.concurrent.callback.AbstractResolvableFuture $r2;
        boolean $z0;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r2.<androidx.concurrent.callback.AbstractResolvableFuture: boolean set(java.lang.Object)>(r1);

        return $z0;
    }

    boolean setException(java.lang.Throwable)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        java.lang.Throwable r1;
        androidx.concurrent.callback.AbstractResolvableFuture $r2;
        boolean $z0;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r2.<androidx.concurrent.callback.AbstractResolvableFuture: boolean setException(java.lang.Throwable)>(r1);

        return $z0;
    }

    public boolean isCancelled()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.callback.AbstractResolvableFuture $r1;
        boolean $z0;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        $r1 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r1.<androidx.concurrent.callback.AbstractResolvableFuture: boolean isCancelled()>();

        return $z0;
    }

    public boolean isDone()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.callback.AbstractResolvableFuture $r1;
        boolean $z0;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        $r1 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r1.<androidx.concurrent.callback.AbstractResolvableFuture: boolean isDone()>();

        return $z0;
    }

    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.callback.AbstractResolvableFuture $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        $r1 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        $r2 = virtualinvoke $r1.<androidx.concurrent.callback.AbstractResolvableFuture: java.lang.Object get()>();

        return $r2;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        androidx.concurrent.callback.AbstractResolvableFuture $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        $r3 = virtualinvoke $r2.<androidx.concurrent.callback.AbstractResolvableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $r3;
    }

    public void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor r2;
        androidx.concurrent.callback.AbstractResolvableFuture $r3;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        virtualinvoke $r3.<androidx.concurrent.callback.AbstractResolvableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r1, r2);

        return;
    }

    public java.lang.String toString()
    {
        androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.callback.AbstractResolvableFuture $r1;
        java.lang.String $r2;

        r0 := @this: androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture;

        $r1 = r0.<androidx.concurrent.callback.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.callback.AbstractResolvableFuture delegate>;

        $r2 = virtualinvoke $r1.<androidx.concurrent.callback.AbstractResolvableFuture: java.lang.String toString()>();

        return $r2;
    }

