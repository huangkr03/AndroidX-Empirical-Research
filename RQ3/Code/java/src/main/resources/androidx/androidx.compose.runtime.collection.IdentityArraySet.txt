androidx.compose.runtime.collection.IdentityArraySet
<androidx.compose.runtime.collection.IdentityArraySet: int size>
<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>
    public void <init>()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object[] $r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Object)[16];

        r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values> = $r1;

        return;
    }

    public int getSize()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        $i0 = r0.<androidx.compose.runtime.collection.IdentityArraySet: int size>;

        return $i0;
    }

    public void setSize(int)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        int i0;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.collection.IdentityArraySet: int size> = i0;

        return;
    }

    public final java.lang.Object[] getValues()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object[] $r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        return $r1;
    }

    public final void setValues(java.lang.Object[])
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object[] r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values> = r1;

        return;
    }

    public static void getValues$annotations()
    {
        return;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int find(java.lang.Object)>(r1);

        if $i0 < 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final java.lang.Object get(int)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $r2 = $r1[i0];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type T of androidx.compose.runtime.collection.IdentityArraySet");

        return $r2;
    }

    public final boolean add(java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        java.lang.Object[] $r2, $r3, $r4, $r6, $r7, $r8, $r10, r12;
        boolean z0;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        z0 = 0;

        $i1 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        if $i1 <= 0 goto label1;

        i12 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int find(java.lang.Object)>(r1);

        if i12 < 0 goto label2;

        return 0;

     label1:
        i12 = -1;

     label2:
        $i2 = i12 + 1;

        i0 = neg $i2;

        $i3 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        $r2 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $i4 = lengthof $r2;

        if $i3 != $i4 goto label3;

        $r7 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $i8 = lengthof $r7;

        $i9 = $i8 * 2;

        r12 = newarray (java.lang.Object)[$i9];

        $r8 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $i10 = i0 + 1;

        $i11 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>($r8, r12, $i10, i0, $i11);

        $r10 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)>($r10, r12, 0, 0, i0, 6, null);

        r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values> = r12;

        goto label4;

     label3:
        $r3 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $r4 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $i5 = i0 + 1;

        $i6 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>($r3, $r4, $i5, i0, $i6);

     label4:
        $r6 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $r6[i0] = r1;

        i13 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        $i7 = i13 + 1;

        virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: void setSize(int)>($i7);

        return 1;
    }

    public final void clear()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object[] $r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        staticinvoke <kotlin.collections.ArraysKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)>($r1, null, 0, 0, 6, null);

        virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: void setSize(int)>(0);

        return;
    }

    public final void fastForEach(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i1 = 0;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object get(int)>(i1);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isEmpty()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isNotEmpty()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object[] $r2, $r3, $r4;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int find(java.lang.Object)>(r1);

        if i0 < 0 goto label3;

        $i2 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        $i3 = $i2 - 1;

        if i0 >= $i3 goto label2;

        $r3 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $r4 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $i6 = i0 + 1;

        $i7 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>($r3, $r4, i0, $i6, $i7);

     label2:
        i1 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        $i4 = i1 + -1;

        virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: void setSize(int)>($i4);

        $r2 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        $i5 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        $r2[$i5] = null;

        return 1;

     label3:
        return 0;
    }

    public final void removeValueIf(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r2, $r5, $r6;
        java.lang.Object[] $r3, $r4, $r8;
        java.lang.Boolean $r7;
        boolean $z1;
        int i0, i1, i2, i3, i4;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = 0;

        i1 = 0;

        i2 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

     label1:
        if i1 >= i2 goto label4;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] getValues()>();

        $r5 = $r4[i1];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type T of androidx.compose.runtime.collection.IdentityArraySet");

        r2 = $r5;

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        if i0 == i1 goto label2;

        $r8 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] getValues()>();

        $r8[i0] = r2;

     label2:
        i0 = i0 + 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        i3 = i0;

        i4 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

     label5:
        if i3 >= i4 goto label6;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] getValues()>();

        $r3[i3] = null;

        i3 = i3 + 1;

        goto label5;

     label6:
        virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: void setSize(int)>(i0);

        return;
    }

    private final int find(java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object r1, r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.lang.Object;

        i8 = 0;

        $i3 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        i9 = $i3 - 1;

        i0 = staticinvoke <androidx.compose.runtime.ActualJvm_jvmKt: int identityHashCode(java.lang.Object)>(r1);

     label1:
        if i8 > i9 goto label5;

        $i6 = i8 + i9;

        i1 = $i6 >>> 1;

        r2 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object get(int)>(i1);

        i2 = staticinvoke <androidx.compose.runtime.ActualJvm_jvmKt: int identityHashCode(java.lang.Object)>(r2);

        if i2 >= i0 goto label2;

        i8 = i1 + 1;

        goto label1;

     label2:
        if i2 <= i0 goto label3;

        i9 = i1 - 1;

        goto label1;

     label3:
        if r2 != r1 goto label4;

        return i1;

     label4:
        $i7 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int findExactIndex(int,java.lang.Object,int)>(i1, r1, i0);

        return $i7;

     label5:
        $i4 = i8 + 1;

        $i5 = neg $i4;

        return $i5;
    }

    private final int findExactIndex(int, java.lang.Object, int)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        java.lang.Object r1, r2, r5;
        java.lang.Object[] $r3, $r4;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i9 = i0 - 1;

     label1:
        if -1 >= i9 goto label4;

        $r4 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        r5 = $r4[i9];

        if r5 != r1 goto label2;

        return i9;

     label2:
        $i8 = staticinvoke <androidx.compose.runtime.ActualJvm_jvmKt: int identityHashCode(java.lang.Object)>(r5);

        if $i8 == i1 goto label3;

        goto label4;

     label3:
        i9 = i9 + -1;

        goto label1;

     label4:
        i10 = i0 + 1;

        i11 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

     label5:
        if i10 >= i11 goto label8;

        $r3 = r0.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] values>;

        r2 = $r3[i10];

        if r2 != r1 goto label6;

        return i10;

     label6:
        $i5 = staticinvoke <androidx.compose.runtime.ActualJvm_jvmKt: int identityHashCode(java.lang.Object)>(r2);

        if $i5 == i1 goto label7;

        $i6 = i10 + 1;

        $i7 = neg $i6;

        return $i7;

     label7:
        i10 = i10 + 1;

        goto label5;

     label8:
        $i2 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        $i3 = $i2 + 1;

        $i4 = neg $i3;

        return $i4;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.util.Collection r1, $r6;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2, $z3, $z4, $z5;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = (java.lang.Iterable) r1;

        $r6 = (java.util.Collection) $r2;

        $z2 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $z5 = 1;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        $z4 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: boolean contains(java.lang.Object)>(r5);

        if $z4 != 0 goto label2;

        $z5 = 0;

        goto label4;

     label3:
        $z5 = 1;

     label4:
        return $z5;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        androidx.compose.runtime.collection.IdentityArraySet$iterator$1 $r1;
        java.util.Iterator $r2;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        $r1 = new androidx.compose.runtime.collection.IdentityArraySet$iterator$1;

        specialinvoke $r1.<androidx.compose.runtime.collection.IdentityArraySet$iterator$1: void <init>(androidx.compose.runtime.collection.IdentityArraySet)>(r0);

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

    public boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public final volatile int size()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityArraySet: int getSize()>();

        return $i0;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.lang.Object[] r1, $r3;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "array");

        $r2 = (java.util.Collection) r0;

        $r3 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])>($r2, r1);

        return $r3;
    }

    public java.lang.Object[] toArray()
    {
        androidx.compose.runtime.collection.IdentityArraySet r0;
        java.util.Collection $r1;
        java.lang.Object[] $r2;

        r0 := @this: androidx.compose.runtime.collection.IdentityArraySet;

        $r1 = (java.util.Collection) r0;

        $r2 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)>($r1);

        return $r2;
    }

