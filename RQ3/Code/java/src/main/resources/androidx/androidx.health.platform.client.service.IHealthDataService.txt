androidx.health.platform.client.service.IHealthDataService
<androidx.health.platform.client.service.IHealthDataService: java.lang.String DESCRIPTOR>
<androidx.health.platform.client.service.IHealthDataService: int CURRENT_API_VERSION>
<androidx.health.platform.client.service.IHealthDataService: int MIN_API_VERSION>
<androidx.health.platform.client.service.IHealthDataService: int getApiVersion()>
<androidx.health.platform.client.service.IHealthDataService: void getGrantedPermissions(androidx.health.platform.client.request.RequestContext,java.util.List,androidx.health.platform.client.service.IGetGrantedPermissionsCallback)>
<androidx.health.platform.client.service.IHealthDataService: void revokeAllPermissions(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.service.IRevokeAllPermissionsCallback)>
<androidx.health.platform.client.service.IHealthDataService: void insertData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.UpsertDataRequest,androidx.health.platform.client.service.IInsertDataCallback)>
<androidx.health.platform.client.service.IHealthDataService: void deleteData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.DeleteDataRequest,androidx.health.platform.client.service.IDeleteDataCallback)>
<androidx.health.platform.client.service.IHealthDataService: void deleteDataRange(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.DeleteDataRangeRequest,androidx.health.platform.client.service.IDeleteDataRangeCallback)>
<androidx.health.platform.client.service.IHealthDataService: void readData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.ReadDataRequest,androidx.health.platform.client.service.IReadDataCallback)>
<androidx.health.platform.client.service.IHealthDataService: void readDataRange(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.ReadDataRangeRequest,androidx.health.platform.client.service.IReadDataRangeCallback)>
<androidx.health.platform.client.service.IHealthDataService: void updateData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.UpsertDataRequest,androidx.health.platform.client.service.IUpdateDataCallback)>
<androidx.health.platform.client.service.IHealthDataService: void aggregate(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.AggregateDataRequest,androidx.health.platform.client.service.IAggregateDataCallback)>
<androidx.health.platform.client.service.IHealthDataService: void getChangesToken(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.GetChangesTokenRequest,androidx.health.platform.client.service.IGetChangesTokenCallback)>
<androidx.health.platform.client.service.IHealthDataService: void getChanges(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.GetChangesRequest,androidx.health.platform.client.service.IGetChangesCallback)>
androidx.health.platform.client.service.IHealthDataService$Default
    public void <init>()
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        return 0;
    }

    public void getGrantedPermissions(androidx.health.platform.client.request.RequestContext, java.util.List, androidx.health.platform.client.service.IGetGrantedPermissionsCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        java.util.List r2;
        androidx.health.platform.client.service.IGetGrantedPermissionsCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.health.platform.client.service.IGetGrantedPermissionsCallback;

        return;
    }

    public void revokeAllPermissions(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.service.IRevokeAllPermissionsCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.service.IRevokeAllPermissionsCallback r2;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.service.IRevokeAllPermissionsCallback;

        return;
    }

    public void insertData(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.UpsertDataRequest, androidx.health.platform.client.service.IInsertDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.UpsertDataRequest r2;
        androidx.health.platform.client.service.IInsertDataCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.UpsertDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IInsertDataCallback;

        return;
    }

    public void deleteData(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.DeleteDataRequest, androidx.health.platform.client.service.IDeleteDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.DeleteDataRequest r2;
        androidx.health.platform.client.service.IDeleteDataCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.DeleteDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IDeleteDataCallback;

        return;
    }

    public void deleteDataRange(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.DeleteDataRangeRequest, androidx.health.platform.client.service.IDeleteDataRangeCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.DeleteDataRangeRequest r2;
        androidx.health.platform.client.service.IDeleteDataRangeCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.DeleteDataRangeRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IDeleteDataRangeCallback;

        return;
    }

    public void readData(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.ReadDataRequest, androidx.health.platform.client.service.IReadDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.ReadDataRequest r2;
        androidx.health.platform.client.service.IReadDataCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.ReadDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IReadDataCallback;

        return;
    }

    public void readDataRange(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.ReadDataRangeRequest, androidx.health.platform.client.service.IReadDataRangeCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.ReadDataRangeRequest r2;
        androidx.health.platform.client.service.IReadDataRangeCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.ReadDataRangeRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IReadDataRangeCallback;

        return;
    }

    public void updateData(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.UpsertDataRequest, androidx.health.platform.client.service.IUpdateDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.UpsertDataRequest r2;
        androidx.health.platform.client.service.IUpdateDataCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.UpsertDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IUpdateDataCallback;

        return;
    }

    public void aggregate(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.AggregateDataRequest, androidx.health.platform.client.service.IAggregateDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.AggregateDataRequest r2;
        androidx.health.platform.client.service.IAggregateDataCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.AggregateDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IAggregateDataCallback;

        return;
    }

    public void getChangesToken(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.GetChangesTokenRequest, androidx.health.platform.client.service.IGetChangesTokenCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.GetChangesTokenRequest r2;
        androidx.health.platform.client.service.IGetChangesTokenCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.GetChangesTokenRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IGetChangesTokenCallback;

        return;
    }

    public void getChanges(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.GetChangesRequest, androidx.health.platform.client.service.IGetChangesCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.GetChangesRequest r2;
        androidx.health.platform.client.service.IGetChangesCallback r3;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.GetChangesRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IGetChangesCallback;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.platform.client.service.IHealthDataService$Default r0;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Default;

        return null;
    }

androidx.health.platform.client.service.IHealthDataService$Stub$Proxy
<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>
    void <init>(android.os.IBinder)
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        $r1 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        return "androidx.health.platform.client.service.IHealthDataService";
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean z0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        $r4 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void getGrantedPermissions(androidx.health.platform.client.request.RequestContext, java.util.List, androidx.health.platform.client.service.IGetGrantedPermissionsCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        java.util.List r2;
        androidx.health.platform.client.service.IGetGrantedPermissionsCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.health.platform.client.service.IGetGrantedPermissionsCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        virtualinvoke r4.<android.os.Parcel: void writeTypedList(java.util.List)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void revokeAllPermissions(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.service.IRevokeAllPermissionsCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.service.IRevokeAllPermissionsCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.service.IRevokeAllPermissionsCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void insertData(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.UpsertDataRequest, androidx.health.platform.client.service.IInsertDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.UpsertDataRequest r2;
        androidx.health.platform.client.service.IInsertDataCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.UpsertDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IInsertDataCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void deleteData(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.DeleteDataRequest, androidx.health.platform.client.service.IDeleteDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.DeleteDataRequest r2;
        androidx.health.platform.client.service.IDeleteDataCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.DeleteDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IDeleteDataCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void deleteDataRange(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.DeleteDataRangeRequest, androidx.health.platform.client.service.IDeleteDataRangeCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.DeleteDataRangeRequest r2;
        androidx.health.platform.client.service.IDeleteDataRangeCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.DeleteDataRangeRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IDeleteDataRangeCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void readData(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.ReadDataRequest, androidx.health.platform.client.service.IReadDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.ReadDataRequest r2;
        androidx.health.platform.client.service.IReadDataCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.ReadDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IReadDataCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void readDataRange(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.ReadDataRangeRequest, androidx.health.platform.client.service.IReadDataRangeCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.ReadDataRangeRequest r2;
        androidx.health.platform.client.service.IReadDataRangeCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.ReadDataRangeRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IReadDataRangeCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void updateData(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.UpsertDataRequest, androidx.health.platform.client.service.IUpdateDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.UpsertDataRequest r2;
        androidx.health.platform.client.service.IUpdateDataCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.UpsertDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IUpdateDataCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void aggregate(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.AggregateDataRequest, androidx.health.platform.client.service.IAggregateDataCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.AggregateDataRequest r2;
        androidx.health.platform.client.service.IAggregateDataCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.AggregateDataRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IAggregateDataCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void getChangesToken(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.GetChangesTokenRequest, androidx.health.platform.client.service.IGetChangesTokenCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.GetChangesTokenRequest r2;
        androidx.health.platform.client.service.IGetChangesTokenCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.GetChangesTokenRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IGetChangesTokenCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void getChanges(androidx.health.platform.client.request.RequestContext, androidx.health.platform.client.request.GetChangesRequest, androidx.health.platform.client.service.IGetChangesCallback) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy r0;
        androidx.health.platform.client.request.RequestContext r1;
        androidx.health.platform.client.request.GetChangesRequest r2;
        androidx.health.platform.client.service.IGetChangesCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        r1 := @parameter0: androidx.health.platform.client.request.RequestContext;

        r2 := @parameter1: androidx.health.platform.client.request.GetChangesRequest;

        r3 := @parameter2: androidx.health.platform.client.service.IGetChangesCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

androidx.health.platform.client.service.IHealthDataService$Stub
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_getApiVersion>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_getGrantedPermissions>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_revokeAllPermissions>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_insertData>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_deleteData>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_deleteDataRange>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_readData>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_readDataRange>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_updateData>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_aggregate>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_getChangesToken>
<androidx.health.platform.client.service.IHealthDataService$Stub: int TRANSACTION_getChanges>
    public void <init>()
    {
        androidx.health.platform.client.service.IHealthDataService$Stub r0;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "androidx.health.platform.client.service.IHealthDataService");

        return;
    }

    public static androidx.health.platform.client.service.IHealthDataService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        androidx.health.platform.client.service.IHealthDataService$Stub$Proxy $r2;
        boolean $z0;
        androidx.health.platform.client.service.IHealthDataService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("androidx.health.platform.client.service.IHealthDataService");

        if r1 == null goto label2;

        $z0 = r1 instanceof androidx.health.platform.client.service.IHealthDataService;

        if $z0 == 0 goto label2;

        $r3 = (androidx.health.platform.client.service.IHealthDataService) r1;

        return $r3;

     label2:
        $r2 = new androidx.health.platform.client.service.IHealthDataService$Stub$Proxy;

        specialinvoke $r2.<androidx.health.platform.client.service.IHealthDataService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.platform.client.service.IHealthDataService$Stub r0;
        android.os.IBinder r1;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        androidx.health.platform.client.service.IHealthDataService$Stub r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        java.lang.String r3;
        android.os.Parcelable$Creator $r4, $r6, $r9, $r11, $r14, $r16, $r19, $r21, $r24, $r26, $r29, $r31, $r34, $r36, $r39, $r41, $r44, $r46, $r49, $r52, $r54;
        java.lang.Object $r5, $r7, $r10, $r12, $r15, $r17, $r20, $r22, $r25, $r27, $r30, $r32, $r35, $r37, $r40, $r42, $r45, $r47, $r50, $r53;
        android.os.IBinder $r8, $r13, $r18, $r23, $r28, $r33, $r38, $r43, $r48, $r51, $r55;
        boolean $z0;
        androidx.health.platform.client.request.RequestContext r56, r59, r61, r64, r67, r70, r73, r76, r79, r82, r85;
        java.util.ArrayList r57;
        androidx.health.platform.client.service.IGetGrantedPermissionsCallback r58;
        androidx.health.platform.client.service.IRevokeAllPermissionsCallback r60;
        androidx.health.platform.client.request.UpsertDataRequest r62, r77;
        androidx.health.platform.client.service.IInsertDataCallback r63;
        androidx.health.platform.client.request.DeleteDataRequest r65;
        androidx.health.platform.client.service.IDeleteDataCallback r66;
        androidx.health.platform.client.request.DeleteDataRangeRequest r68;
        androidx.health.platform.client.service.IDeleteDataRangeCallback r69;
        androidx.health.platform.client.request.ReadDataRequest r71;
        androidx.health.platform.client.service.IReadDataCallback r72;
        androidx.health.platform.client.request.ReadDataRangeRequest r74;
        androidx.health.platform.client.service.IReadDataRangeCallback r75;
        androidx.health.platform.client.service.IUpdateDataCallback r78;
        androidx.health.platform.client.request.AggregateDataRequest r80;
        androidx.health.platform.client.service.IAggregateDataCallback r81;
        androidx.health.platform.client.request.GetChangesTokenRequest r83;
        androidx.health.platform.client.service.IGetChangesTokenCallback r84;
        androidx.health.platform.client.request.GetChangesRequest r86;
        androidx.health.platform.client.service.IGetChangesCallback r87;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r3 = "androidx.health.platform.client.service.IHealthDataService";

        if i0 < 1 goto label01;

        if i0 > 16777215 goto label01;

        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

     label01:
        lookupswitch(i0)
        {
            case 1598968902: goto label02;
            default: goto label03;
        };

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return 1;

     label03:
        tableswitch(i0)
        {
            case 1: goto label04;
            case 2: goto label16;
            case 3: goto label16;
            case 4: goto label05;
            case 5: goto label16;
            case 6: goto label16;
            case 7: goto label16;
            case 8: goto label16;
            case 9: goto label06;
            case 10: goto label07;
            case 11: goto label08;
            case 12: goto label10;
            case 13: goto label12;
            case 14: goto label09;
            case 15: goto label13;
            case 16: goto label11;
            case 17: goto label14;
            case 18: goto label15;
            default: goto label16;
        };

     label04:
        i2 = virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: int getApiVersion()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        goto label17;

     label05:
        $r52 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r53 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r52);

        r56 = (androidx.health.platform.client.request.RequestContext) $r53;

        $r54 = <androidx.health.platform.client.permission.Permission: android.os.Parcelable$Creator CREATOR>;

        r57 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r54);

        $r55 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r58 = staticinvoke <androidx.health.platform.client.service.IGetGrantedPermissionsCallback$Stub: androidx.health.platform.client.service.IGetGrantedPermissionsCallback asInterface(android.os.IBinder)>($r55);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void getGrantedPermissions(androidx.health.platform.client.request.RequestContext,java.util.List,androidx.health.platform.client.service.IGetGrantedPermissionsCallback)>(r56, r57, r58);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label06:
        $r49 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r50 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r49);

        r59 = (androidx.health.platform.client.request.RequestContext) $r50;

        $r51 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r60 = staticinvoke <androidx.health.platform.client.service.IRevokeAllPermissionsCallback$Stub: androidx.health.platform.client.service.IRevokeAllPermissionsCallback asInterface(android.os.IBinder)>($r51);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void revokeAllPermissions(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.service.IRevokeAllPermissionsCallback)>(r59, r60);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label07:
        $r44 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r45 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r44);

        r61 = (androidx.health.platform.client.request.RequestContext) $r45;

        $r46 = <androidx.health.platform.client.request.UpsertDataRequest: android.os.Parcelable$Creator CREATOR>;

        $r47 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r46);

        r62 = (androidx.health.platform.client.request.UpsertDataRequest) $r47;

        $r48 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r63 = staticinvoke <androidx.health.platform.client.service.IInsertDataCallback$Stub: androidx.health.platform.client.service.IInsertDataCallback asInterface(android.os.IBinder)>($r48);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void insertData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.UpsertDataRequest,androidx.health.platform.client.service.IInsertDataCallback)>(r61, r62, r63);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label08:
        $r39 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r40 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r39);

        r64 = (androidx.health.platform.client.request.RequestContext) $r40;

        $r41 = <androidx.health.platform.client.request.DeleteDataRequest: android.os.Parcelable$Creator CREATOR>;

        $r42 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r41);

        r65 = (androidx.health.platform.client.request.DeleteDataRequest) $r42;

        $r43 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r66 = staticinvoke <androidx.health.platform.client.service.IDeleteDataCallback$Stub: androidx.health.platform.client.service.IDeleteDataCallback asInterface(android.os.IBinder)>($r43);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void deleteData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.DeleteDataRequest,androidx.health.platform.client.service.IDeleteDataCallback)>(r64, r65, r66);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label09:
        $r24 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r25 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r24);

        r67 = (androidx.health.platform.client.request.RequestContext) $r25;

        $r26 = <androidx.health.platform.client.request.DeleteDataRangeRequest: android.os.Parcelable$Creator CREATOR>;

        $r27 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r26);

        r68 = (androidx.health.platform.client.request.DeleteDataRangeRequest) $r27;

        $r28 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r69 = staticinvoke <androidx.health.platform.client.service.IDeleteDataRangeCallback$Stub: androidx.health.platform.client.service.IDeleteDataRangeCallback asInterface(android.os.IBinder)>($r28);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void deleteDataRange(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.DeleteDataRangeRequest,androidx.health.platform.client.service.IDeleteDataRangeCallback)>(r67, r68, r69);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label10:
        $r34 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r35 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r34);

        r70 = (androidx.health.platform.client.request.RequestContext) $r35;

        $r36 = <androidx.health.platform.client.request.ReadDataRequest: android.os.Parcelable$Creator CREATOR>;

        $r37 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r36);

        r71 = (androidx.health.platform.client.request.ReadDataRequest) $r37;

        $r38 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r72 = staticinvoke <androidx.health.platform.client.service.IReadDataCallback$Stub: androidx.health.platform.client.service.IReadDataCallback asInterface(android.os.IBinder)>($r38);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void readData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.ReadDataRequest,androidx.health.platform.client.service.IReadDataCallback)>(r70, r71, r72);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label11:
        $r14 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r15 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r14);

        r73 = (androidx.health.platform.client.request.RequestContext) $r15;

        $r16 = <androidx.health.platform.client.request.ReadDataRangeRequest: android.os.Parcelable$Creator CREATOR>;

        $r17 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r16);

        r74 = (androidx.health.platform.client.request.ReadDataRangeRequest) $r17;

        $r18 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r75 = staticinvoke <androidx.health.platform.client.service.IReadDataRangeCallback$Stub: androidx.health.platform.client.service.IReadDataRangeCallback asInterface(android.os.IBinder)>($r18);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void readDataRange(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.ReadDataRangeRequest,androidx.health.platform.client.service.IReadDataRangeCallback)>(r73, r74, r75);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label12:
        $r29 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r30 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r29);

        r76 = (androidx.health.platform.client.request.RequestContext) $r30;

        $r31 = <androidx.health.platform.client.request.UpsertDataRequest: android.os.Parcelable$Creator CREATOR>;

        $r32 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r31);

        r77 = (androidx.health.platform.client.request.UpsertDataRequest) $r32;

        $r33 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r78 = staticinvoke <androidx.health.platform.client.service.IUpdateDataCallback$Stub: androidx.health.platform.client.service.IUpdateDataCallback asInterface(android.os.IBinder)>($r33);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void updateData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.UpsertDataRequest,androidx.health.platform.client.service.IUpdateDataCallback)>(r76, r77, r78);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label13:
        $r19 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r20 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r19);

        r79 = (androidx.health.platform.client.request.RequestContext) $r20;

        $r21 = <androidx.health.platform.client.request.AggregateDataRequest: android.os.Parcelable$Creator CREATOR>;

        $r22 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r21);

        r80 = (androidx.health.platform.client.request.AggregateDataRequest) $r22;

        $r23 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r81 = staticinvoke <androidx.health.platform.client.service.IAggregateDataCallback$Stub: androidx.health.platform.client.service.IAggregateDataCallback asInterface(android.os.IBinder)>($r23);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void aggregate(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.AggregateDataRequest,androidx.health.platform.client.service.IAggregateDataCallback)>(r79, r80, r81);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label14:
        $r9 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r10 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r9);

        r82 = (androidx.health.platform.client.request.RequestContext) $r10;

        $r11 = <androidx.health.platform.client.request.GetChangesTokenRequest: android.os.Parcelable$Creator CREATOR>;

        $r12 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r11);

        r83 = (androidx.health.platform.client.request.GetChangesTokenRequest) $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r84 = staticinvoke <androidx.health.platform.client.service.IGetChangesTokenCallback$Stub: androidx.health.platform.client.service.IGetChangesTokenCallback asInterface(android.os.IBinder)>($r13);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void getChangesToken(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.GetChangesTokenRequest,androidx.health.platform.client.service.IGetChangesTokenCallback)>(r82, r83, r84);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label15:
        $r4 = <androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR>;

        $r5 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r4);

        r85 = (androidx.health.platform.client.request.RequestContext) $r5;

        $r6 = <androidx.health.platform.client.request.GetChangesRequest: android.os.Parcelable$Creator CREATOR>;

        $r7 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r6);

        r86 = (androidx.health.platform.client.request.GetChangesRequest) $r7;

        $r8 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r87 = staticinvoke <androidx.health.platform.client.service.IGetChangesCallback$Stub: androidx.health.platform.client.service.IGetChangesCallback asInterface(android.os.IBinder)>($r8);

        virtualinvoke r0.<androidx.health.platform.client.service.IHealthDataService$Stub: void getChanges(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.GetChangesRequest,androidx.health.platform.client.service.IGetChangesCallback)>(r85, r86, r87);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label17;

     label16:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;

     label17:
        return 1;
    }

androidx.health.platform.client.service.IHealthDataService$_Parcel
    public void <init>()
    {
        androidx.health.platform.client.service.IHealthDataService$_Parcel r0;

        r0 := @this: androidx.health.platform.client.service.IHealthDataService$_Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Object readTypedObject(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        return $r2;

     label1:
        return null;
    }

    private static void writeTypedObject(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    static java.lang.Object access$000(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $r2 = staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)>(r0, r1);

        return $r2;
    }

    static void access$100(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        staticinvoke <androidx.health.platform.client.service.IHealthDataService$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)>(r0, r1, i0);

        return;
    }

