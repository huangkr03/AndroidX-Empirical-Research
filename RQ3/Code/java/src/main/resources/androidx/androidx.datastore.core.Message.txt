androidx.datastore.core.Message
    private void <init>()
    {
        androidx.datastore.core.Message r0;

        r0 := @this: androidx.datastore.core.Message;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.datastore.core.Message: androidx.datastore.core.State getLastState()>
    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.core.Message r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.datastore.core.Message;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.datastore.core.Message: void <init>()>();

        return;
    }

androidx.datastore.core.Message$Read
<androidx.datastore.core.Message$Read: androidx.datastore.core.State lastState>
    public void <init>(androidx.datastore.core.State)
    {
        androidx.datastore.core.Message$Read r0;
        androidx.datastore.core.State r1;

        r0 := @this: androidx.datastore.core.Message$Read;

        r1 := @parameter0: androidx.datastore.core.State;

        specialinvoke r0.<androidx.datastore.core.Message: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<androidx.datastore.core.Message$Read: androidx.datastore.core.State lastState> = r1;

        return;
    }

    public androidx.datastore.core.State getLastState()
    {
        androidx.datastore.core.Message$Read r0;
        androidx.datastore.core.State $r1;

        r0 := @this: androidx.datastore.core.Message$Read;

        $r1 = r0.<androidx.datastore.core.Message$Read: androidx.datastore.core.State lastState>;

        return $r1;
    }

androidx.datastore.core.Message$Update
<androidx.datastore.core.Message$Update: kotlin.jvm.functions.Function2 transform>
<androidx.datastore.core.Message$Update: kotlinx.coroutines.CompletableDeferred ack>
<androidx.datastore.core.Message$Update: androidx.datastore.core.State lastState>
<androidx.datastore.core.Message$Update: kotlin.coroutines.CoroutineContext callerContext>
    public void <init>(kotlin.jvm.functions.Function2, kotlinx.coroutines.CompletableDeferred, androidx.datastore.core.State, kotlin.coroutines.CoroutineContext)
    {
        androidx.datastore.core.Message$Update r0;
        kotlin.jvm.functions.Function2 r1;
        kotlinx.coroutines.CompletableDeferred r2;
        androidx.datastore.core.State r3;
        kotlin.coroutines.CoroutineContext r4;

        r0 := @this: androidx.datastore.core.Message$Update;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        r2 := @parameter1: kotlinx.coroutines.CompletableDeferred;

        r3 := @parameter2: androidx.datastore.core.State;

        r4 := @parameter3: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "ack");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "callerContext");

        specialinvoke r0.<androidx.datastore.core.Message: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<androidx.datastore.core.Message$Update: kotlin.jvm.functions.Function2 transform> = r1;

        r0.<androidx.datastore.core.Message$Update: kotlinx.coroutines.CompletableDeferred ack> = r2;

        r0.<androidx.datastore.core.Message$Update: androidx.datastore.core.State lastState> = r3;

        r0.<androidx.datastore.core.Message$Update: kotlin.coroutines.CoroutineContext callerContext> = r4;

        return;
    }

    public final kotlin.jvm.functions.Function2 getTransform()
    {
        androidx.datastore.core.Message$Update r0;
        kotlin.jvm.functions.Function2 $r1;

        r0 := @this: androidx.datastore.core.Message$Update;

        $r1 = r0.<androidx.datastore.core.Message$Update: kotlin.jvm.functions.Function2 transform>;

        return $r1;
    }

    public final kotlinx.coroutines.CompletableDeferred getAck()
    {
        androidx.datastore.core.Message$Update r0;
        kotlinx.coroutines.CompletableDeferred $r1;

        r0 := @this: androidx.datastore.core.Message$Update;

        $r1 = r0.<androidx.datastore.core.Message$Update: kotlinx.coroutines.CompletableDeferred ack>;

        return $r1;
    }

    public androidx.datastore.core.State getLastState()
    {
        androidx.datastore.core.Message$Update r0;
        androidx.datastore.core.State $r1;

        r0 := @this: androidx.datastore.core.Message$Update;

        $r1 = r0.<androidx.datastore.core.Message$Update: androidx.datastore.core.State lastState>;

        return $r1;
    }

    public final kotlin.coroutines.CoroutineContext getCallerContext()
    {
        androidx.datastore.core.Message$Update r0;
        kotlin.coroutines.CoroutineContext $r1;

        r0 := @this: androidx.datastore.core.Message$Update;

        $r1 = r0.<androidx.datastore.core.Message$Update: kotlin.coroutines.CoroutineContext callerContext>;

        return $r1;
    }

