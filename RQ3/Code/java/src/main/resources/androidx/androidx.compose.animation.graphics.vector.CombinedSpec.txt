androidx.compose.animation.graphics.vector.CombinedSpec
<androidx.compose.animation.graphics.vector.CombinedSpec: java.util.List specs>
    public void <init>(java.util.List)
    {
        androidx.compose.animation.graphics.vector.CombinedSpec r0;
        java.util.List r1;

        r0 := @this: androidx.compose.animation.graphics.vector.CombinedSpec;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "specs");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.graphics.vector.CombinedSpec: java.util.List specs> = r1;

        return;
    }

    public androidx.compose.animation.core.VectorizedFiniteAnimationSpec vectorize(androidx.compose.animation.core.TwoWayConverter)
    {
        androidx.compose.animation.graphics.vector.CombinedSpec r0;
        androidx.compose.animation.core.TwoWayConverter r1;
        java.lang.Iterable $r2;
        java.util.Collection r3, r8;
        java.util.Iterator r4;
        java.lang.Object r5, $r14, $r16;
        kotlin.Pair r6, $r19;
        int i0, $i1;
        androidx.compose.animation.core.FiniteAnimationSpec r7;
        java.util.List r9, $r10;
        java.util.ArrayList $r11;
        boolean $z3;
        androidx.compose.animation.graphics.vector.VectorizedCombinedSpec $r12;
        androidx.compose.animation.core.VectorizedFiniteAnimationSpec $r13, $r18;
        java.lang.Number $r15;
        long $l2, $l3;
        java.lang.Long $r17;

        r0 := @this: androidx.compose.animation.graphics.vector.CombinedSpec;

        r1 := @parameter0: androidx.compose.animation.core.TwoWayConverter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "converter");

        $r10 = r0.<androidx.compose.animation.graphics.vector.CombinedSpec: java.util.List specs>;

        $r2 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i1);

        r3 = (java.util.Collection) $r11;

        r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (kotlin.Pair) r5;

        r8 = r3;

        $r14 = virtualinvoke r6.<kotlin.Pair: java.lang.Object component1()>();

        $r15 = (java.lang.Number) $r14;

        i0 = virtualinvoke $r15.<java.lang.Number: int intValue()>();

        $r16 = virtualinvoke r6.<kotlin.Pair: java.lang.Object component2()>();

        r7 = (androidx.compose.animation.core.FiniteAnimationSpec) $r16;

        $l2 = (long) i0;

        $l3 = $l2 * 1000000L;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r18 = interfaceinvoke r7.<androidx.compose.animation.core.FiniteAnimationSpec: androidx.compose.animation.core.VectorizedFiniteAnimationSpec vectorize(androidx.compose.animation.core.TwoWayConverter)>(r1);

        $r19 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r17, $r18);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r19);

        goto label1;

     label2:
        r9 = (java.util.List) r3;

        $r12 = new androidx.compose.animation.graphics.vector.VectorizedCombinedSpec;

        specialinvoke $r12.<androidx.compose.animation.graphics.vector.VectorizedCombinedSpec: void <init>(java.util.List)>(r9);

        $r13 = (androidx.compose.animation.core.VectorizedFiniteAnimationSpec) $r12;

        return $r13;
    }

    public volatile androidx.compose.animation.core.VectorizedAnimationSpec vectorize(androidx.compose.animation.core.TwoWayConverter)
    {
        androidx.compose.animation.graphics.vector.CombinedSpec r0;
        androidx.compose.animation.core.TwoWayConverter r1;
        androidx.compose.animation.core.VectorizedFiniteAnimationSpec $r2;
        androidx.compose.animation.core.VectorizedAnimationSpec $r3;

        r0 := @this: androidx.compose.animation.graphics.vector.CombinedSpec;

        r1 := @parameter0: androidx.compose.animation.core.TwoWayConverter;

        $r2 = virtualinvoke r0.<androidx.compose.animation.graphics.vector.CombinedSpec: androidx.compose.animation.core.VectorizedFiniteAnimationSpec vectorize(androidx.compose.animation.core.TwoWayConverter)>(r1);

        $r3 = (androidx.compose.animation.core.VectorizedAnimationSpec) $r2;

        return $r3;
    }

