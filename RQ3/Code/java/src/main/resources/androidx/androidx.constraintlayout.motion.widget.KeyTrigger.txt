androidx.constraintlayout.motion.widget.KeyTrigger
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String NAME>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String TAG>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String VIEW_TRANSITION_ON_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String VIEW_TRANSITION_ON_POSITIVE_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String VIEW_TRANSITION_ON_NEGATIVE_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String POST_LAYOUT>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String TRIGGER_SLACK>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String TRIGGER_COLLISION_VIEW>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String TRIGGER_COLLISION_ID>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String TRIGGER_ID>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String POSITIVE_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String NEGATIVE_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String TRIGGER_RECEIVER>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger: int mCurveFit>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross>
<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mNegativeCross>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mPositiveCross>
<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerID>
<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId>
<androidx.constraintlayout.motion.widget.KeyTrigger: android.view.View mTriggerCollisionView>
<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack>
<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset>
<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset>
<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset>
<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>
<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireLastPos>
<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout>
<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnNegativeCross>
<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnPositiveCross>
<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnCross>
<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mCollisionRect>
<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mTargetRect>
<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mMethodHashMap>
<androidx.constraintlayout.motion.widget.KeyTrigger: int KEY_TYPE>
    public void <init>()
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.RectF $r1, $r2;
        java.util.HashMap $r3, $r4;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        specialinvoke r0.<androidx.constraintlayout.motion.widget.Key: void <init>()>();

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mCurveFit> = -1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross> = null;

        $i0 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver> = $i0;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mNegativeCross> = null;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mPositiveCross> = null;

        $i1 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerID> = $i1;

        $i2 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId> = $i2;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.view.View mTriggerCollisionView> = null;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack> = 0.1F;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset> = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset> = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset> = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout> = 0;

        $i3 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnNegativeCross> = $i3;

        $i4 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnPositiveCross> = $i4;

        $i5 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnCross> = $i5;

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>()>();

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mCollisionRect> = $r1;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mTargetRect> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mMethodHashMap> = $r3;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mType> = 5;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mCustomConstraints> = $r4;

        return;
    }

    public void load(android.content.Context, android.util.AttributeSet)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int[] $r4;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r4 = <androidx.constraintlayout.widget.R$styleable: int[] KeyTrigger>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: void read(androidx.constraintlayout.motion.widget.KeyTrigger,android.content.res.TypedArray,android.content.Context)>(r0, r3, r1);

        return;
    }

    int getCurveFit()
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        $i0 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mCurveFit>;

        return $i0;
    }

    public void getAttributeNames(java.util.HashSet)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        java.util.HashSet r1;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter0: java.util.HashSet;

        return;
    }

    public void addValues(java.util.HashMap)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        java.util.HashMap r1;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter0: java.util.HashMap;

        return;
    }

    public void setValue(java.lang.String, java.lang.Object)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        java.lang.String r1, r3, $r5, $r6, $r7;
        java.lang.Object r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        float $f0;
        android.view.View $r4;
        byte b7;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 = r1;

        b7 = -1;

        $i0 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1594793529: goto label04;
            case -966421266: goto label11;
            case -786670827: goto label06;
            case -648752941: goto label05;
            case -638126837: goto label03;
            case -76025313: goto label07;
            case -9754574: goto label10;
            case 64397344: goto label01;
            case 364489912: goto label08;
            case 1301930599: goto label12;
            case 1401391082: goto label09;
            case 1535404999: goto label02;
            default: goto label13;
        };

     label01:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("CROSS");

        if $z5 == 0 goto label13;

        b7 = 0;

        goto label13;

     label02:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("triggerReceiver");

        if $z0 == 0 goto label13;

        b7 = 1;

        goto label13;

     label03:
        $z8 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("negativeCross");

        if $z8 == 0 goto label13;

        b7 = 2;

        goto label13;

     label04:
        $z12 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("positiveCross");

        if $z12 == 0 goto label13;

        b7 = 3;

        goto label13;

     label05:
        $z9 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("triggerID");

        if $z9 == 0 goto label13;

        b7 = 4;

        goto label13;

     label06:
        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("triggerCollisionId");

        if $z10 == 0 goto label13;

        b7 = 5;

        goto label13;

     label07:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("triggerCollisionView");

        if $z7 == 0 goto label13;

        b7 = 6;

        goto label13;

     label08:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("triggerSlack");

        if $z4 == 0 goto label13;

        b7 = 7;

        goto label13;

     label09:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("postLayout");

        if $z2 == 0 goto label13;

        b7 = 8;

        goto label13;

     label10:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("viewTransitionOnNegativeCross");

        if $z6 == 0 goto label13;

        b7 = 9;

        goto label13;

     label11:
        $z11 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("viewTransitionOnPositiveCross");

        if $z11 == 0 goto label13;

        b7 = 10;

        goto label13;

     label12:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("viewTransitionOnCross");

        if $z3 == 0 goto label13;

        b7 = 11;

     label13:
        tableswitch(b7)
        {
            case 0: goto label14;
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label17;
            case 4: goto label18;
            case 5: goto label19;
            case 6: goto label20;
            case 7: goto label21;
            case 8: goto label22;
            case 9: goto label23;
            case 10: goto label24;
            case 11: goto label25;
            default: goto label26;
        };

     label14:
        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross> = $r7;

        goto label26;

     label15:
        $i6 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int toInt(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver> = $i6;

        goto label26;

     label16:
        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mNegativeCross> = $r6;

        goto label26;

     label17:
        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mPositiveCross> = $r5;

        goto label26;

     label18:
        $i5 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int toInt(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerID> = $i5;

        goto label26;

     label19:
        $i4 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int toInt(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId> = $i4;

        goto label26;

     label20:
        $r4 = (android.view.View) r2;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.view.View mTriggerCollisionView> = $r4;

        goto label26;

     label21:
        $f0 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float toFloat(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack> = $f0;

        goto label26;

     label22:
        $z1 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean toBoolean(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout> = $z1;

        goto label26;

     label23:
        $i3 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int toInt(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnNegativeCross> = $i3;

        goto label26;

     label24:
        $i2 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int toInt(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnPositiveCross> = $i2;

        goto label26;

     label25:
        $i1 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int toInt(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnCross> = $i1;

     label26:
        return;
    }

    private void setUpRect(android.graphics.RectF, android.view.View, boolean)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        android.graphics.RectF r1;
        android.view.View r2;
        boolean z0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        android.graphics.Matrix $r3;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r2.<android.view.View: int getTop()>();

        $f0 = (float) $i0;

        r1.<android.graphics.RectF: float top> = $f0;

        $i1 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $f1 = (float) $i1;

        r1.<android.graphics.RectF: float bottom> = $f1;

        $i2 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $f2 = (float) $i2;

        r1.<android.graphics.RectF: float left> = $f2;

        $i3 = virtualinvoke r2.<android.view.View: int getRight()>();

        $f3 = (float) $i3;

        r1.<android.graphics.RectF: float right> = $f3;

        if z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r3.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r1);

     label1:
        return;
    }

    public void conditionallyFire(float, android.view.View)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25, f26, f27, f28, f29, f30;
        android.view.View r1, $r19, $r20, $r27, $r30, r31;
        int $i0, $i1, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i20, $i21, $i22, $i23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, z10, $z11, $z12;
        byte $b2, $b3, $b4, $b15, $b16, $b17, $b18, $b19;
        android.view.ViewParent $r2, $r5, $r10, $r15, $r25, $r28;
        androidx.constraintlayout.motion.widget.MotionLayout $r3, $r7, $r12, $r17, $r29;
        java.lang.String $r4, $r8, $r9, $r13, $r14, $r18;
        android.view.View[] $r6, $r11, $r16;
        android.graphics.RectF $r21, $r22, $r23, $r24;
        android.view.ViewGroup $r26;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.View;

        z7 = 0;

        z8 = 0;

        z9 = 0;

        $i1 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId>;

        $i0 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        if $i1 == $i0 goto label08;

        $r19 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.view.View mTriggerCollisionView>;

        if $r19 != null goto label01;

        $r25 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r26 = (android.view.ViewGroup) $r25;

        $i20 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId>;

        $r27 = virtualinvoke $r26.<android.view.ViewGroup: android.view.View findViewById(int)>($i20);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.view.View mTriggerCollisionView> = $r27;

     label01:
        $r21 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mCollisionRect>;

        $r20 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.view.View mTriggerCollisionView>;

        $z1 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout>;

        specialinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: void setUpRect(android.graphics.RectF,android.view.View,boolean)>($r21, $r20, $z1);

        $r22 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mTargetRect>;

        $z2 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout>;

        specialinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: void setUpRect(android.graphics.RectF,android.view.View,boolean)>($r22, r1, $z2);

        $r24 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mCollisionRect>;

        $r23 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mTargetRect>;

        z10 = virtualinvoke $r24.<android.graphics.RectF: boolean intersect(android.graphics.RectF)>($r23);

        if z10 == 0 goto label04;

        $z5 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset>;

        if $z5 == 0 goto label02;

        z7 = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset> = 0;

     label02:
        $z6 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset>;

        if $z6 == 0 goto label03;

        z9 = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset> = 0;

     label03:
        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset> = 1;

        goto label07;

     label04:
        $z3 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset>;

        if $z3 != 0 goto label05;

        z7 = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset> = 1;

     label05:
        $z4 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset>;

        if $z4 == 0 goto label06;

        z8 = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset> = 0;

     label06:
        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset> = 1;

     label07:
        goto label17;

     label08:
        $z0 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset>;

        if $z0 == 0 goto label10;

        $f21 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        f25 = f0 - $f21;

        $f23 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireLastPos>;

        $f22 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        f26 = $f23 - $f22;

        $f24 = f25 * f26;

        $b19 = $f24 cmpg 0.0F;

        if $b19 >= 0 goto label09;

        z7 = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset> = 0;

     label09:
        goto label11;

     label10:
        $f1 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        $f2 = f0 - $f1;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f4 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack>;

        $b2 = $f3 cmpl $f4;

        if $b2 <= 0 goto label11;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset> = 1;

     label11:
        $z11 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset>;

        if $z11 == 0 goto label13;

        $f17 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        f27 = f0 - $f17;

        $f19 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireLastPos>;

        $f18 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        f28 = $f19 - $f18;

        $f20 = f27 * f28;

        $b17 = $f20 cmpg 0.0F;

        if $b17 >= 0 goto label12;

        $b18 = f27 cmpg 0.0F;

        if $b18 >= 0 goto label12;

        z8 = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset> = 0;

     label12:
        goto label14;

     label13:
        $f5 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        $f6 = f0 - $f5;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f8 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack>;

        $b3 = $f7 cmpl $f8;

        if $b3 <= 0 goto label14;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset> = 1;

     label14:
        $z12 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset>;

        if $z12 == 0 goto label16;

        $f13 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        f29 = f0 - $f13;

        $f15 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireLastPos>;

        $f14 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        f30 = $f15 - $f14;

        $f16 = f29 * f30;

        $b15 = $f16 cmpg 0.0F;

        if $b15 >= 0 goto label15;

        $b16 = f29 cmpl 0.0F;

        if $b16 <= 0 goto label15;

        z9 = 1;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset> = 0;

     label15:
        goto label17;

     label16:
        $f9 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        $f10 = f0 - $f9;

        $f11 = staticinvoke <java.lang.Math: float abs(float)>($f10);

        $f12 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack>;

        $b4 = $f11 cmpl $f12;

        if $b4 <= 0 goto label17;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset> = 1;

     label17:
        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireLastPos> = f0;

        if z8 != 0 goto label18;

        if z7 != 0 goto label18;

        if z9 == 0 goto label19;

     label18:
        $r28 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r29 = (androidx.constraintlayout.motion.widget.MotionLayout) $r28;

        $i21 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerID>;

        virtualinvoke $r29.<androidx.constraintlayout.motion.widget.MotionLayout: void fireTrigger(int,boolean,float)>($i21, z9, f0);

     label19:
        $i22 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver>;

        $i23 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        if $i22 != $i23 goto label20;

        $r30 = r1;

        goto label21;

     label20:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = (androidx.constraintlayout.motion.widget.MotionLayout) $r2;

        $i5 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver>;

        $r30 = virtualinvoke $r3.<androidx.constraintlayout.motion.widget.MotionLayout: android.view.View findViewById(int)>($i5);

     label21:
        r31 = $r30;

        if z8 == 0 goto label23;

        $r14 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mNegativeCross>;

        if $r14 == null goto label22;

        $r18 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mNegativeCross>;

        specialinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: void fire(java.lang.String,android.view.View)>($r18, r31);

     label22:
        $i13 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnNegativeCross>;

        $i12 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        if $i13 == $i12 goto label23;

        $r15 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r17 = (androidx.constraintlayout.motion.widget.MotionLayout) $r15;

        $i14 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnNegativeCross>;

        $r16 = newarray (android.view.View)[1];

        $r16[0] = r31;

        virtualinvoke $r17.<androidx.constraintlayout.motion.widget.MotionLayout: void viewTransition(int,android.view.View[])>($i14, $r16);

     label23:
        if z9 == 0 goto label25;

        $r9 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mPositiveCross>;

        if $r9 == null goto label24;

        $r13 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mPositiveCross>;

        specialinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: void fire(java.lang.String,android.view.View)>($r13, r31);

     label24:
        $i10 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnPositiveCross>;

        $i9 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        if $i10 == $i9 goto label25;

        $r10 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r12 = (androidx.constraintlayout.motion.widget.MotionLayout) $r10;

        $i11 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnPositiveCross>;

        $r11 = newarray (android.view.View)[1];

        $r11[0] = r31;

        virtualinvoke $r12.<androidx.constraintlayout.motion.widget.MotionLayout: void viewTransition(int,android.view.View[])>($i11, $r11);

     label25:
        if z7 == 0 goto label27;

        $r4 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross>;

        if $r4 == null goto label26;

        $r8 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross>;

        specialinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: void fire(java.lang.String,android.view.View)>($r8, r31);

     label26:
        $i7 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnCross>;

        $i6 = <androidx.constraintlayout.motion.widget.KeyTrigger: int UNSET>;

        if $i7 == $i6 goto label27;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r7 = (androidx.constraintlayout.motion.widget.MotionLayout) $r5;

        $i8 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnCross>;

        $r6 = newarray (android.view.View)[1];

        $r6[0] = r31;

        virtualinvoke $r7.<androidx.constraintlayout.motion.widget.MotionLayout: void viewTransition(int,android.view.View[])>($i8, $r6);

     label27:
        return;
    }

    private void fire(java.lang.String, android.view.View)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        java.lang.String r1, $r20, $r23, $r25, $r29, $r33, $r36, $r38;
        android.view.View r2;
        boolean $z0, $z1;
        java.util.HashMap $r3, $r8, $r10, $r13;
        java.lang.Object[] $r4;
        java.lang.Class $r6, $r19, $r32;
        java.lang.Class[] $r7;
        java.lang.Object $r11;
        java.lang.Throwable $r12, $r26, r40, r41;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r21, $r22, $r24, $r27, $r28, $r30, $r31, $r34, $r35, $r37;
        java.lang.reflect.Method r39;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.View;

        if r1 != null goto label01;

        return;

     label01:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label02;

        specialinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: void fireCustom(java.lang.String,android.view.View)>(r1, r2);

        return;

     label02:
        r39 = null;

        $r3 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mMethodHashMap>;

        $z1 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label03;

        $r10 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mMethodHashMap>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r39 = (java.lang.reflect.Method) $r11;

        if r39 != null goto label03;

        return;

     label03:
        if r39 != null goto label07;

     label04:
        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = newarray (java.lang.Class)[0];

        r39 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, $r7);

        $r8 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mMethodHashMap>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r39);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        r40 = $r12;

        $r13 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mMethodHashMap>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, null);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find method \"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"on class ");

        $r19 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = staticinvoke <androidx.constraintlayout.motion.widget.Debug: java.lang.String getName(android.view.View)>(r2);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyTrigger", $r25);

        return;

     label07:
        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke r39.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r4);

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

        r41 = $r26;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in call \"");

        $r29 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"on class ");

        $r32 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getSimpleName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r36 = staticinvoke <androidx.constraintlayout.motion.widget.Debug: java.lang.String getName(android.view.View)>(r2);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyTrigger", $r38);

     label10:
        return;

        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private void fireCustom(java.lang.String, android.view.View)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        android.view.View r1;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r2;
        java.lang.String r3, r4, $r12, r14;
        androidx.constraintlayout.widget.ConstraintAttribute r5;
        int $i0;
        java.util.HashMap $r6, $r10;
        java.util.Set $r7;
        java.lang.Object $r8, $r11;
        java.util.Locale $r9, $r13;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: android.view.View;

        $i0 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 != 0 goto label3;

        $r12 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>(1);

        $r13 = <java.util.Locale: java.util.Locale ROOT>;

        r14 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13);

     label3:
        $r6 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mCustomConstraints>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r8;

        $r9 = <java.util.Locale: java.util.Locale ROOT>;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        if z0 != 0 goto label5;

        $z1 = virtualinvoke r4.<java.lang.String: boolean matches(java.lang.String)>(r14);

        if $z1 == 0 goto label6;

     label5:
        $r10 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mCustomConstraints>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (androidx.constraintlayout.widget.ConstraintAttribute) $r11;

        if r5 == null goto label6;

        virtualinvoke r5.<androidx.constraintlayout.widget.ConstraintAttribute: void applyCustom(android.view.View)>(r1);

     label6:
        goto label4;

     label7:
        return;
    }

    public androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0, r2;
        androidx.constraintlayout.motion.widget.Key r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r5, $r6;
        android.view.View $r7;
        float $f0, $f1, $f2;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.RectF $r8, $r9;
        java.util.HashMap $r10;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter0: androidx.constraintlayout.motion.widget.Key;

        specialinvoke r0.<androidx.constraintlayout.motion.widget.Key: androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key)>(r1);

        r2 = (androidx.constraintlayout.motion.widget.KeyTrigger) r1;

        $i0 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: int mCurveFit>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mCurveFit> = $i0;

        $r4 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross> = $r4;

        $i1 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver> = $i1;

        $r5 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mNegativeCross>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mNegativeCross> = $r5;

        $r6 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mPositiveCross>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mPositiveCross> = $r6;

        $i2 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerID>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerID> = $i2;

        $i3 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId> = $i3;

        $r7 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: android.view.View mTriggerCollisionView>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.view.View mTriggerCollisionView> = $r7;

        $f0 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack> = $f0;

        $z0 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireCrossReset> = $z0;

        $z1 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFireNegativeReset> = $z1;

        $z2 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mFirePositiveReset> = $z2;

        $f1 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold> = $f1;

        $f2 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireLastPos>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireLastPos> = $f2;

        $z3 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout> = $z3;

        $r8 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mCollisionRect>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mCollisionRect> = $r8;

        $r9 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mTargetRect>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: android.graphics.RectF mTargetRect> = $r9;

        $r10 = r2.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mMethodHashMap>;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.util.HashMap mMethodHashMap> = $r10;

        return r0;
    }

    public androidx.constraintlayout.motion.widget.Key clone()
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0, $r1;
        androidx.constraintlayout.motion.widget.Key $r2;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        $r1 = new androidx.constraintlayout.motion.widget.KeyTrigger;

        specialinvoke $r1.<androidx.constraintlayout.motion.widget.KeyTrigger: void <init>()>();

        $r2 = virtualinvoke $r1.<androidx.constraintlayout.motion.widget.KeyTrigger: androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key)>(r0);

        return $r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        androidx.constraintlayout.motion.widget.Key $r1;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger;

        $r1 = virtualinvoke r0.<androidx.constraintlayout.motion.widget.KeyTrigger: androidx.constraintlayout.motion.widget.Key clone()>();

        return $r1;
    }

    static float access$002(androidx.constraintlayout.motion.widget.KeyTrigger, float)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        float f0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        f0 := @parameter1: float;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mFireThreshold> = f0;

        return f0;
    }

    static java.lang.String access$102(androidx.constraintlayout.motion.widget.KeyTrigger, java.lang.String)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        java.lang.String r1;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter1: java.lang.String;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mNegativeCross> = r1;

        return r1;
    }

    static java.lang.String access$202(androidx.constraintlayout.motion.widget.KeyTrigger, java.lang.String)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        java.lang.String r1;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter1: java.lang.String;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mPositiveCross> = r1;

        return r1;
    }

    static java.lang.String access$302(androidx.constraintlayout.motion.widget.KeyTrigger, java.lang.String)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        java.lang.String r1;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter1: java.lang.String;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mCross> = r1;

        return r1;
    }

    static int access$402(androidx.constraintlayout.motion.widget.KeyTrigger, int)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        int i0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        i0 := @parameter1: int;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerID> = i0;

        return i0;
    }

    static int access$400(androidx.constraintlayout.motion.widget.KeyTrigger)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        int $i0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        $i0 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerID>;

        return $i0;
    }

    static int access$502(androidx.constraintlayout.motion.widget.KeyTrigger, int)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        int i0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        i0 := @parameter1: int;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId> = i0;

        return i0;
    }

    static int access$500(androidx.constraintlayout.motion.widget.KeyTrigger)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        int $i0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        $i0 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerCollisionId>;

        return $i0;
    }

    static boolean access$602(androidx.constraintlayout.motion.widget.KeyTrigger, boolean)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        boolean z0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        z0 := @parameter1: boolean;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout> = z0;

        return z0;
    }

    static boolean access$600(androidx.constraintlayout.motion.widget.KeyTrigger)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        boolean $z0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        $z0 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: boolean mPostLayout>;

        return $z0;
    }

    static int access$702(androidx.constraintlayout.motion.widget.KeyTrigger, int)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        int i0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        i0 := @parameter1: int;

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver> = i0;

        return i0;
    }

    static int access$700(androidx.constraintlayout.motion.widget.KeyTrigger)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        int $i0;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        $i0 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTriggerReceiver>;

        return $i0;
    }

androidx.constraintlayout.motion.widget.KeyTrigger$Loader
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int NEGATIVE_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int POSITIVE_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int TRIGGER_SLACK>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int TRIGGER_ID>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int TARGET_ID>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int FRAME_POS>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int COLLISION>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int POST_LAYOUT>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int TRIGGER_RECEIVER>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int VT_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int VT_NEGATIVE_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: int VT_POSITIVE_CROSS>
<androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>
    private void <init>()
    {
        androidx.constraintlayout.motion.widget.KeyTrigger$Loader r0;

        r0 := @this: androidx.constraintlayout.motion.widget.KeyTrigger$Loader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void read(androidx.constraintlayout.motion.widget.KeyTrigger, android.content.res.TypedArray, android.content.Context)
    {
        androidx.constraintlayout.motion.widget.KeyTrigger r0;
        android.content.res.TypedArray r1;
        android.content.Context r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, i29;
        android.util.SparseIntArray $r3, $r18;
        boolean $z0, $z1, $z3;
        float $f0, $f1, $f2, $f4, $f5;
        android.util.TypedValue $r4;
        java.lang.String $r5, $r6, $r7, $r9, $r11, $r15, $r20;
        java.lang.StringBuilder $r13, $r14, $r16, $r17, $r19;

        r0 := @parameter0: androidx.constraintlayout.motion.widget.KeyTrigger;

        r1 := @parameter1: android.content.res.TypedArray;

        r2 := @parameter2: android.content.Context;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getIndexCount()>();

        i29 = 0;

     label01:
        if i29 >= i0 goto label19;

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getIndex(int)>(i29);

        $r3 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i2 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int)>(i1);

        tableswitch($i2)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label17;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label03;
            case 8: goto label02;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label16;
            case 13: goto label14;
            case 14: goto label15;
            default: goto label17;
        };

     label02:
        $i15 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mFramePosition>;

        $i16 = virtualinvoke r1.<android.content.res.TypedArray: int getInteger(int,int)>(i1, $i15);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mFramePosition> = $i16;

        $i17 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mFramePosition>;

        $f0 = (float) $i17;

        $f1 = $f0 + 0.5F;

        $f2 = $f1 / 100.0F;

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: float access$002(androidx.constraintlayout.motion.widget.KeyTrigger,float)>(r0, $f2);

        goto label18;

     label03:
        $z3 = <androidx.constraintlayout.motion.widget.MotionLayout: boolean IS_IN_EDIT_MODE>;

        if $z3 == 0 goto label04;

        $i21 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTargetId>;

        $i22 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i21);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTargetId> = $i22;

        $i23 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTargetId>;

        if $i23 != -1 goto label18;

        $r6 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mTargetString> = $r6;

        goto label18;

     label04:
        $r4 = virtualinvoke r1.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i1);

        $i18 = $r4.<android.util.TypedValue: int type>;

        if $i18 != 3 goto label05;

        $r5 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String mTargetString> = $r5;

        goto label18;

     label05:
        $i19 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTargetId>;

        $i20 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i19);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mTargetId> = $i20;

        goto label18;

     label06:
        $r11 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String access$102(androidx.constraintlayout.motion.widget.KeyTrigger,java.lang.String)>(r0, $r11);

        goto label18;

     label07:
        $r9 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String access$202(androidx.constraintlayout.motion.widget.KeyTrigger,java.lang.String)>(r0, $r9);

        goto label18;

     label08:
        $r7 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: java.lang.String access$302(androidx.constraintlayout.motion.widget.KeyTrigger,java.lang.String)>(r0, $r7);

        goto label18;

     label09:
        $f4 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack>;

        $f5 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f4);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: float mTriggerSlack> = $f5;

        goto label18;

     label10:
        $i24 = staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: int access$400(androidx.constraintlayout.motion.widget.KeyTrigger)>(r0);

        $i25 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i24);

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: int access$402(androidx.constraintlayout.motion.widget.KeyTrigger,int)>(r0, $i25);

        goto label18;

     label11:
        $i12 = staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: int access$500(androidx.constraintlayout.motion.widget.KeyTrigger)>(r0);

        $i13 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i12);

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: int access$502(androidx.constraintlayout.motion.widget.KeyTrigger,int)>(r0, $i13);

        goto label18;

     label12:
        $z0 = staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: boolean access$600(androidx.constraintlayout.motion.widget.KeyTrigger)>(r0);

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z0);

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: boolean access$602(androidx.constraintlayout.motion.widget.KeyTrigger,boolean)>(r0, $z1);

        goto label18;

     label13:
        $i9 = staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: int access$700(androidx.constraintlayout.motion.widget.KeyTrigger)>(r0);

        $i10 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i9);

        staticinvoke <androidx.constraintlayout.motion.widget.KeyTrigger: int access$702(androidx.constraintlayout.motion.widget.KeyTrigger,int)>(r0, $i10);

        goto label18;

     label14:
        $i5 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnNegativeCross>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i5);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnNegativeCross> = $i6;

        goto label18;

     label15:
        $i3 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnPositiveCross>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i3);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnPositiveCross> = $i4;

        goto label18;

     label16:
        $i7 = r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnCross>;

        $i8 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i7);

        r0.<androidx.constraintlayout.motion.widget.KeyTrigger: int mViewTransitionOnCross> = $i8;

        goto label18;

     label17:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unused attribute 0x");

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r18 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i27 = virtualinvoke $r18.<android.util.SparseIntArray: int get(int)>(i1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyTrigger", $r20);

     label18:
        i29 = i29 + 1;

        goto label01;

     label19:
        return;
    }

    static void <clinit>()
    {
        android.util.SparseIntArray $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        $r0 = new android.util.SparseIntArray;

        specialinvoke $r0.<android.util.SparseIntArray: void <init>()>();

        <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap> = $r0;

        $r1 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i0 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_framePosition>;

        virtualinvoke $r1.<android.util.SparseIntArray: void append(int,int)>($i0, 8);

        $r2 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i1 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_onCross>;

        virtualinvoke $r2.<android.util.SparseIntArray: void append(int,int)>($i1, 4);

        $r3 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i2 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_onNegativeCross>;

        virtualinvoke $r3.<android.util.SparseIntArray: void append(int,int)>($i2, 1);

        $r4 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i3 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_onPositiveCross>;

        virtualinvoke $r4.<android.util.SparseIntArray: void append(int,int)>($i3, 2);

        $r5 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i4 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_motionTarget>;

        virtualinvoke $r5.<android.util.SparseIntArray: void append(int,int)>($i4, 7);

        $r6 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i5 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_triggerId>;

        virtualinvoke $r6.<android.util.SparseIntArray: void append(int,int)>($i5, 6);

        $r7 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i6 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_triggerSlack>;

        virtualinvoke $r7.<android.util.SparseIntArray: void append(int,int)>($i6, 5);

        $r8 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i7 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_motion_triggerOnCollision>;

        virtualinvoke $r8.<android.util.SparseIntArray: void append(int,int)>($i7, 9);

        $r9 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i8 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_motion_postLayoutCollision>;

        virtualinvoke $r9.<android.util.SparseIntArray: void append(int,int)>($i8, 10);

        $r10 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i9 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_triggerReceiver>;

        virtualinvoke $r10.<android.util.SparseIntArray: void append(int,int)>($i9, 11);

        $r11 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i10 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_viewTransitionOnCross>;

        virtualinvoke $r11.<android.util.SparseIntArray: void append(int,int)>($i10, 12);

        $r12 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i11 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_viewTransitionOnNegativeCross>;

        virtualinvoke $r12.<android.util.SparseIntArray: void append(int,int)>($i11, 13);

        $r13 = <androidx.constraintlayout.motion.widget.KeyTrigger$Loader: android.util.SparseIntArray mAttrMap>;

        $i12 = <androidx.constraintlayout.widget.R$styleable: int KeyTrigger_viewTransitionOnPositiveCross>;

        virtualinvoke $r13.<android.util.SparseIntArray: void append(int,int)>($i12, 14);

        return;
    }

