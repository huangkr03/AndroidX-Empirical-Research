androidx.compose.ui.semantics.SemanticsOwnerKt
    public static final java.util.List getAllSemanticsNodes(androidx.compose.ui.semantics.SemanticsOwner, boolean)
    {
        androidx.compose.ui.semantics.SemanticsOwner $r0;
        boolean z0, $z1;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.lang.Iterable $r3;
        java.util.List $r4;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsOwner;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r1 = staticinvoke <androidx.compose.ui.semantics.SemanticsOwnerKt: java.util.Map getAllSemanticsNodesToMap(androidx.compose.ui.semantics.SemanticsOwner,boolean)>($r0, $z1);

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r3);

        return $r4;
    }

    public static final java.util.Map getAllSemanticsNodesToMap(androidx.compose.ui.semantics.SemanticsOwner, boolean)
    {
        androidx.compose.ui.semantics.SemanticsOwner $r0;
        boolean z0;
        java.util.Map r1;
        androidx.compose.ui.semantics.SemanticsNode r2, $r4;
        java.util.LinkedHashMap $r3;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsOwner;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r1 = (java.util.Map) $r3;

        if z0 == 0 goto label1;

        $r4 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.semantics.SemanticsNode getUnmergedRootSemanticsNode()>();

        goto label2;

     label1:
        $r4 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.semantics.SemanticsNode getRootSemanticsNode()>();

     label2:
        r2 = $r4;

        staticinvoke <androidx.compose.ui.semantics.SemanticsOwnerKt: void getAllSemanticsNodesToMap$findAllSemanticNodesRecursive(java.util.Map,androidx.compose.ui.semantics.SemanticsNode)>(r1, r2);

        return r1;
    }

    public static java.util.Map getAllSemanticsNodesToMap$default(androidx.compose.ui.semantics.SemanticsOwner, boolean, int, java.lang.Object)
    {
        androidx.compose.ui.semantics.SemanticsOwner r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean z0;

        r0 := @parameter0: androidx.compose.ui.semantics.SemanticsOwner;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsOwnerKt: java.util.Map getAllSemanticsNodesToMap(androidx.compose.ui.semantics.SemanticsOwner,boolean)>(r0, z0);

        return $r2;
    }

    private static final void getAllSemanticsNodesToMap$findAllSemanticNodesRecursive(java.util.Map, androidx.compose.ui.semantics.SemanticsNode)
    {
        java.util.Map r0;
        androidx.compose.ui.semantics.SemanticsNode r1, r4;
        java.util.List $r2;
        int i0, $i1, i2;
        java.lang.Object r3;
        java.lang.Integer $r5;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: androidx.compose.ui.semantics.SemanticsNode;

        $i1 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        $r2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getChildren()>();

        i2 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label2;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (androidx.compose.ui.semantics.SemanticsNode) r3;

        staticinvoke <androidx.compose.ui.semantics.SemanticsOwnerKt: void getAllSemanticsNodesToMap$findAllSemanticNodesRecursive(java.util.Map,androidx.compose.ui.semantics.SemanticsNode)>(r0, r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

