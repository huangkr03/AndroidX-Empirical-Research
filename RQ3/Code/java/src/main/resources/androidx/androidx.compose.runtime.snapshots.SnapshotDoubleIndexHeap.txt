androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap
<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>
<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>
<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] index>
<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>
<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int firstFreeHandle>
    public void <init>()
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0, r2;
        int[] r1, $r3, $r4;
        int i0, $i1, i2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (int)[16];

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values> = $r3;

        $r4 = newarray (int)[16];

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] index> = $r4;

        i2 = 0;

        r1 = newarray (int)[16];

        r2 = r0;

     label1:
        if i2 >= 16 goto label2;

        i0 = i2;

        $i1 = i0 + 1;

        r1[i0] = $i1;

        i2 = i2 + 1;

        goto label1;

     label2:
        r2.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles> = r1;

        return;
    }

    public final int getSize()
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        $i0 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

        return $i0;
    }

    public final int lowestOrDefault(int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

        if $i1 <= 0 goto label1;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        $i2 = $r1[0];

        goto label2;

     label1:
        $i2 = i0;

     label2:
        return $i2;
    }

    public static int lowestOrDefault$default(androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap, int, int, java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, $i1, $i2, i3;
        java.lang.Object r1;

        r0 := @parameter0: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i3 = 0;

     label1:
        $i2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int lowestOrDefault(int)>(i3);

        return $i2;
    }

    public final int add(int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        int[] $r1, $r2, $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

        $i3 = $i2 + 1;

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void ensure(int)>($i3);

        i5 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

        $i4 = i5 + 1;

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size> = $i4;

        i1 = i5;

        i6 = specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int allocateHandle()>();

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        $r1[i1] = i0;

        $r2 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] index>;

        $r2[i1] = i6;

        $r3 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>;

        $r3[i6] = i1;

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void shiftUp(int)>(i1);

        return i6;
    }

    public final void remove(int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>;

        i1 = $r1[i0];

        $i3 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

        $i4 = $i3 - 1;

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void swap(int,int)>(i1, $i4);

        i2 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

        $i5 = i2 + -1;

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size> = $i5;

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void shiftUp(int)>(i1);

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void shiftDown(int)>(i1);

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void freeHandle(int)>(i0);

        return;
    }

    public final void validate()
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        int[] $r1, $r2;
        java.lang.StringBuilder $r5, $r6, $r7, r10;
        java.lang.String $r8, $r9;
        java.lang.IllegalStateException r11;
        java.lang.Throwable r12;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i6 = 1;

        i0 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

     label1:
        if i6 >= i0 goto label3;

        $i2 = i6 + 1;

        $i3 = $i2 >> 1;

        i1 = $i3 - 1;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        $i5 = $r1[i1];

        $r2 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        $i4 = $r2[i6];

        if $i5 <= $i4 goto label2;

        r11 = new java.lang.IllegalStateException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of place");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        r12 = (java.lang.Throwable) r11;

        throw r12;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return;
    }

    public final void validateHandle(int, int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, i2, $i3, $i4, $i5;
        int[] $r1, $r2, $r3, $r9;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12, $r17, $r18, $r19, r22, r24;
        java.lang.String $r13, $r14, $r20, $r21;
        java.lang.IllegalStateException r23, r25;
        java.lang.Throwable r26, r27;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>;

        i2 = $r1[i0];

        $r2 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] index>;

        $i3 = $r2[i2];

        if $i3 == i0 goto label1;

        r23 = new java.lang.IllegalStateException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index for handle ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is corrupted");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        r26 = (java.lang.Throwable) r23;

        throw r26;

     label1:
        $r3 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        $i4 = $r3[i2];

        if $i4 == i1 goto label2;

        r25 = new java.lang.IllegalStateException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value for handle ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was ");

        $r9 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        $i5 = $r9[i2];

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was supposed to be ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        r27 = (java.lang.Throwable) r25;

        throw r27;

     label2:
        return;
    }

    private final void shiftUp(int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        int[] r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        i1 = r1[i0];

        i6 = i0;

     label1:
        if i6 <= 0 goto label2;

        $i3 = i6 + 1;

        $i4 = $i3 >> 1;

        i2 = $i4 - 1;

        $i5 = r1[i2];

        if $i5 <= i1 goto label2;

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void swap(int,int)>(i2, i6);

        i6 = i2;

        goto label1;

     label2:
        return;
    }

    private final void shiftDown(int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        int[] r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        $i4 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

        i1 = $i4 >> 1;

        i13 = i0;

     label1:
        if i13 >= i1 goto label5;

        $i5 = i13 + 1;

        i2 = $i5 << 1;

        i3 = i2 - 1;

        $i6 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int size>;

        if i2 >= $i6 goto label3;

        $i10 = r1[i2];

        $i9 = r1[i3];

        if $i10 >= $i9 goto label3;

        $i12 = r1[i2];

        $i11 = r1[i13];

        if $i12 >= $i11 goto label2;

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void swap(int,int)>(i2, i13);

        i13 = i2;

        goto label1;

     label2:
        return;

     label3:
        $i8 = r1[i3];

        $i7 = r1[i13];

        if $i8 >= $i7 goto label4;

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void swap(int,int)>(i3, i13);

        i13 = i3;

        goto label1;

     label4:
        return;

     label5:
        return;
    }

    private final void swap(int, int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        int[] r1, r2, r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        r2 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] index>;

        r3 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>;

        i6 = r1[i0];

        $i2 = r1[i1];

        r1[i0] = $i2;

        r1[i1] = i6;

        i7 = r2[i0];

        $i3 = r2[i1];

        r2[i0] = $i3;

        r2[i1] = i7;

        $i4 = r2[i0];

        r3[$i4] = i0;

        $i5 = r2[i1];

        r3[$i5] = i1;

        return;
    }

    private final void ensure(int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, i2;
        int[] r1, r2, $r3, $r4, $r6;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        i1 = lengthof $r3;

        if i0 > i1 goto label1;

        return;

     label1:
        i2 = i1 * 2;

        r1 = newarray (int)[i2];

        r2 = newarray (int)[i2];

        $r4 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values>;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)>($r4, r1, 0, 0, 0, 14, null);

        $r6 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] index>;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)>($r6, r2, 0, 0, 0, 14, null);

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] values> = r1;

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] index> = r2;

        return;
    }

    private final int allocateHandle()
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8;
        int[] r1, $r2, $r3, $r4, r6;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        $r2 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>;

        i0 = lengthof $r2;

        $i3 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int firstFreeHandle>;

        if $i3 < i0 goto label3;

        i7 = 0;

        i1 = i0 * 2;

        r1 = newarray (int)[i1];

     label1:
        if i7 >= i1 goto label2;

        i2 = i7;

        $i6 = i2 + 1;

        r1[i2] = $i6;

        i7 = i7 + 1;

        goto label1;

     label2:
        r6 = r1;

        $r4 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)>($r4, r6, 0, 0, 0, 14, null);

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles> = r6;

     label3:
        i8 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int firstFreeHandle>;

        $r3 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>;

        $i4 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int firstFreeHandle>;

        $i5 = $r3[$i4];

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int firstFreeHandle> = $i5;

        return i8;
    }

    private final void freeHandle(int)
    {
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int[] handles>;

        $i1 = r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int firstFreeHandle>;

        $r1[i0] = $i1;

        r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int firstFreeHandle> = i0;

        return;
    }

