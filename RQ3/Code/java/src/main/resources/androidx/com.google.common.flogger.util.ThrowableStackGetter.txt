com.google.common.flogger.util.ThrowableStackGetter
    void <init>()
    {
        com.google.common.flogger.util.ThrowableStackGetter $r0;

        $r0 := @this: com.google.common.flogger.util.ThrowableStackGetter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private int findCallerIndex(java.lang.StackTraceElement[], java.lang.Class, int)
    {
        com.google.common.flogger.util.ThrowableStackGetter $r0;
        java.lang.StackTraceElement[] $r1;
        java.lang.Class $r2;
        int $i0, $i1;
        java.lang.String $r3, $r5;
        boolean $z0, $z1;
        java.lang.StackTraceElement $r4;

        $r0 := @this: com.google.common.flogger.util.ThrowableStackGetter;

        $r1 := @parameter0: java.lang.StackTraceElement[];

        $r2 := @parameter1: java.lang.Class;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label4;

        $r4 = $r1[$i0];

        $r5 = virtualinvoke $r4.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        if $z0 == 0 goto label3;

        return $i0;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return -1;
    }

    public java.lang.StackTraceElement callerOf(java.lang.Class, int)
    {
        com.google.common.flogger.util.ThrowableStackGetter $r0;
        java.lang.Class $r1;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.StackTraceElement[] $r3;
        java.lang.StackTraceElement $r4;

        $r0 := @this: com.google.common.flogger.util.ThrowableStackGetter;

        $r1 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.flogger.util.Checks: void checkArgument(boolean,java.lang.String)>($z0, "skipFrames must be >= 0");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = $i0 + 1;

        $i0 = specialinvoke $r0.<com.google.common.flogger.util.ThrowableStackGetter: int findCallerIndex(java.lang.StackTraceElement[],java.lang.Class,int)>($r3, $r1, $i0);

        if $i0 == -1 goto label3;

        $r4 = $r3[$i0];

        return $r4;

     label3:
        return null;
    }

    public java.lang.StackTraceElement[] getStackForCaller(java.lang.Class, int, int)
    {
        com.google.common.flogger.util.ThrowableStackGetter $r0;
        java.lang.Class $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.StackTraceElement[] $r3, $r4;

        $r0 := @this: com.google.common.flogger.util.ThrowableStackGetter;

        $r1 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 == -1 goto label2;

        if $i0 <= 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 1;

     label3:
        staticinvoke <com.google.common.flogger.util.Checks: void checkArgument(boolean,java.lang.String)>($z0, "maxDepth must be > 0 or -1");

        if $i1 < 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        staticinvoke <com.google.common.flogger.util.Checks: void checkArgument(boolean,java.lang.String)>($z0, "skipFrames must be >= 0");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i1 = $i1 + 1;

        $i1 = specialinvoke $r0.<com.google.common.flogger.util.ThrowableStackGetter: int findCallerIndex(java.lang.StackTraceElement[],java.lang.Class,int)>($r3, $r1, $i1);

        if $i1 != -1 goto label6;

        $r3 = newarray (java.lang.StackTraceElement)[0];

        return $r3;

     label6:
        $i2 = lengthof $r3;

        $i2 = $i2 - $i1;

        if $i0 <= 0 goto label7;

        if $i0 >= $i2 goto label7;

        goto label8;

     label7:
        $i0 = $i2;

     label8:
        $r4 = newarray (java.lang.StackTraceElement)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r4, 0, $i0);

        return $r4;
    }

