kotlin.internal.PlatformImplementations
    public void <init>()
    {
        kotlin.internal.PlatformImplementations $r0;

        $r0 := @this: kotlin.internal.PlatformImplementations;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addSuppressed(java.lang.Throwable, java.lang.Throwable)
    {
        kotlin.internal.PlatformImplementations $r0;
        java.lang.Throwable $r1, $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;

        $r0 := @this: kotlin.internal.PlatformImplementations;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "cause");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "exception");

        $r3 = <kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed>;

        if $r3 == null goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label1:
        return;
    }

    public kotlin.random.Random defaultPlatformRandom()
    {
        kotlin.internal.PlatformImplementations $r0;
        kotlin.random.FallbackThreadLocalRandom $r1;

        $r0 := @this: kotlin.internal.PlatformImplementations;

        $r1 = new kotlin.random.FallbackThreadLocalRandom;

        specialinvoke $r1.<kotlin.random.FallbackThreadLocalRandom: void <init>()>();

        return $r1;
    }

    public kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult, java.lang.String)
    {
        kotlin.internal.PlatformImplementations $r0;
        java.util.regex.MatchResult $r1;
        java.lang.String $r2;
        java.lang.UnsupportedOperationException $r3;

        $r0 := @this: kotlin.internal.PlatformImplementations;

        $r1 := @parameter0: java.util.regex.MatchResult;

        $r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "matchResult");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "name");

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Retrieving groups by name is not supported on this platform.");

        throw $r3;
    }

    public java.util.List getSuppressed(java.lang.Throwable)
    {
        kotlin.internal.PlatformImplementations $r0;
        java.lang.Throwable $r1;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.Throwable[] $r5;
        java.util.List $r6;

        $r0 := @this: kotlin.internal.PlatformImplementations;

        $r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "exception");

        $r2 = <kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed>;

        if $r2 == null goto label2;

        $r3 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r3);

        if $r4 == null goto label2;

        $r5 = (java.lang.Throwable[]) $r4;

        $r6 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r5);

        if $r6 != null goto label1;

        goto label2;

     label1:
        return $r6;

     label2:
        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r6;
    }

kotlin.internal.PlatformImplementations$ReflectThrowable
<kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE>
<kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed>
<kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed>
    static void <clinit>()
    {
        kotlin.internal.PlatformImplementations$ReflectThrowable $r0;
        java.lang.Class $r1;
        java.lang.reflect.Method[] $r2;
        int $i0, $i1, $i2;
        java.lang.reflect.Method $r3, $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Class[] $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r8;

        $r0 = new kotlin.internal.PlatformImplementations$ReflectThrowable;

        specialinvoke $r0.<kotlin.internal.PlatformImplementations$ReflectThrowable: void <init>()>();

        <kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE> = $r0;

        $r1 = class "Ljava/lang/Throwable;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "throwableMethods");

        $i0 = lengthof $r2;

        $i1 = 0;

        $i2 = 0;

     label1:
        $r3 = null;

        if $i2 >= $i0 goto label5;

        $r4 = $r2[$i2];

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, "addSuppressed");

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "it.parameterTypes");

        $r7 = (java.lang.Object[]) $r6;

        $r8 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])>($r7);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, class "Ljava/lang/Throwable;");

        if $z0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        goto label6;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        $r4 = null;

     label6:
        <kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed> = $r4;

        $i0 = lengthof $r2;

     label7:
        if $i1 >= $i0 goto label9;

        $r4 = $r2[$i1];

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, "getSuppressed");

        if $z0 == 0 goto label8;

        $r3 = $r4;

        goto label9;

     label8:
        $i1 = $i1 + 1;

        goto label7;

     label9:
        <kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed> = $r3;

        return;
    }

    private void <init>()
    {
        kotlin.internal.PlatformImplementations$ReflectThrowable $r0;

        $r0 := @this: kotlin.internal.PlatformImplementations$ReflectThrowable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

