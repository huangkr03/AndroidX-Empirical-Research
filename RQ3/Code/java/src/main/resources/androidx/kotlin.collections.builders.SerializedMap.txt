kotlin.collections.builders.SerializedMap
<kotlin.collections.builders.SerializedMap: kotlin.collections.builders.SerializedMap$Companion Companion>
<kotlin.collections.builders.SerializedMap: long serialVersionUID>
<kotlin.collections.builders.SerializedMap: java.util.Map map>
    static void <clinit>()
    {
        kotlin.collections.builders.SerializedMap$Companion $r0;

        $r0 = new kotlin.collections.builders.SerializedMap$Companion;

        specialinvoke $r0.<kotlin.collections.builders.SerializedMap$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.collections.builders.SerializedMap: kotlin.collections.builders.SerializedMap$Companion Companion> = $r0;

        return;
    }

    public void <init>()
    {
        kotlin.collections.builders.SerializedMap $r0;
        java.util.Map $r1;

        $r0 := @this: kotlin.collections.builders.SerializedMap;

        $r1 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        specialinvoke $r0.<kotlin.collections.builders.SerializedMap: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(java.util.Map)
    {
        kotlin.collections.builders.SerializedMap $r0;
        java.util.Map $r1;

        $r0 := @this: kotlin.collections.builders.SerializedMap;

        $r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "map");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.collections.builders.SerializedMap: java.util.Map map> = $r1;

        return;
    }

    private final java.lang.Object readResolve()
    {
        kotlin.collections.builders.SerializedMap $r0;
        java.util.Map r1;

        $r0 := @this: kotlin.collections.builders.SerializedMap;

        r1 = $r0.<kotlin.collections.builders.SerializedMap: java.util.Map map>;

        return r1;
    }

    public void readExternal(java.io.ObjectInput)
    {
        kotlin.collections.builders.SerializedMap $r0;
        java.io.ObjectInput $r1;
        byte $b0;
        int $i1, $i2;
        java.util.Map $r2;
        java.lang.Object $r3, $r4;
        java.io.InvalidObjectException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: kotlin.collections.builders.SerializedMap;

        $r1 := @parameter0: java.io.ObjectInput;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "input");

        $b0 = interfaceinvoke $r1.<java.io.ObjectInput: byte readByte()>();

        if $b0 != 0 goto label4;

        $i1 = interfaceinvoke $r1.<java.io.ObjectInput: int readInt()>();

        if $i1 < 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.MapsKt: java.util.Map createMapBuilder(int)>($i1);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r3 = interfaceinvoke $r1.<java.io.ObjectInput: java.lang.Object readObject()>();

        $r4 = interfaceinvoke $r1.<java.io.ObjectInput: java.lang.Object readObject()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <kotlin.collections.MapsKt: java.util.Map build(java.util.Map)>($r2);

        $r0.<kotlin.collections.builders.SerializedMap: java.util.Map map> = $r2;

        return;

     label3:
        $r5 = new java.io.InvalidObjectException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal size value: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label4:
        $r5 = new java.io.InvalidObjectException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported flags value: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r7);

        goto label5;

     label5:
        throw $r5;
    }

    public void writeExternal(java.io.ObjectOutput)
    {
        kotlin.collections.builders.SerializedMap $r0;
        java.io.ObjectOutput $r1;
        java.util.Map $r2;
        int $i0;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry $r6;

        $r0 := @this: kotlin.collections.builders.SerializedMap;

        $r1 := @parameter0: java.io.ObjectOutput;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "output");

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeByte(int)>(0);

        $r2 = $r0.<kotlin.collections.builders.SerializedMap: java.util.Map map>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeInt(int)>($i0);

        $r2 = $r0.<kotlin.collections.builders.SerializedMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r5);

        goto label1;

     label2:
        return;
    }

kotlin.collections.builders.SerializedMap$Companion
    private void <init>()
    {
        kotlin.collections.builders.SerializedMap$Companion $r0;

        $r0 := @this: kotlin.collections.builders.SerializedMap$Companion;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.collections.builders.SerializedMap$Companion $r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        $r0 := @this: kotlin.collections.builders.SerializedMap$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke $r0.<kotlin.collections.builders.SerializedMap$Companion: void <init>()>();

        return;
    }

