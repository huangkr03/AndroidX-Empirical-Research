kotlin.io.ByteStreamsKt
    private static final java.io.BufferedInputStream buffered(java.io.InputStream, int)
    {
        int $i0;
        java.io.InputStream $r0;
        boolean $z0;
        java.io.BufferedInputStream $r1;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.io.BufferedInputStream;

        if $z0 == 0 goto label1;

        $r1 = (java.io.BufferedInputStream) $r0;

        return $r1;

     label1:
        $r1 = new java.io.BufferedInputStream;

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r0, $i0);

        return $r1;
    }

    private static final java.io.BufferedOutputStream buffered(java.io.OutputStream, int)
    {
        int $i0;
        java.io.OutputStream $r0;
        boolean $z0;
        java.io.BufferedOutputStream $r1;

        $r0 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.io.BufferedOutputStream;

        if $z0 == 0 goto label1;

        $r1 = (java.io.BufferedOutputStream) $r0;

        return $r1;

     label1:
        $r1 = new java.io.BufferedOutputStream;

        specialinvoke $r1.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r0, $i0);

        return $r1;
    }

    static java.io.BufferedInputStream buffered$default(java.io.InputStream, int, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.io.InputStream $r1;
        int $i0, $i1;
        boolean $z0;
        java.io.BufferedInputStream $r2;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 8192;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $z0 = $r1 instanceof java.io.BufferedInputStream;

        if $z0 == 0 goto label2;

        $r2 = (java.io.BufferedInputStream) $r1;

        return $r2;

     label2:
        $r2 = new java.io.BufferedInputStream;

        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r1, $i0);

        return $r2;
    }

    static java.io.BufferedOutputStream buffered$default(java.io.OutputStream, int, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.io.OutputStream $r1;
        int $i0, $i1;
        boolean $z0;
        java.io.BufferedOutputStream $r2;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 8192;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $z0 = $r1 instanceof java.io.BufferedOutputStream;

        if $z0 == 0 goto label2;

        $r2 = (java.io.BufferedOutputStream) $r1;

        return $r2;

     label2:
        $r2 = new java.io.BufferedOutputStream;

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r1, $i0);

        return $r2;
    }

    private static final java.io.BufferedReader bufferedReader(java.io.InputStream, java.nio.charset.Charset)
    {
        java.io.InputStream $r0;
        java.nio.charset.Charset $r1;
        java.io.InputStreamReader $r2;
        java.io.BufferedReader $r3;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "charset");

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r0, $r1);

        $r3 = new java.io.BufferedReader;

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r2, 8192);

        return $r3;
    }

    static java.io.BufferedReader bufferedReader$default(java.io.InputStream, java.nio.charset.Charset, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.io.InputStream $r1;
        java.nio.charset.Charset $r2;
        int $i0;
        java.io.InputStreamReader $r3;
        java.io.BufferedReader $r4;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.nio.charset.Charset;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "charset");

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r1, $r2);

        $r4 = new java.io.BufferedReader;

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, 8192);

        return $r4;
    }

    private static final java.io.BufferedWriter bufferedWriter(java.io.OutputStream, java.nio.charset.Charset)
    {
        java.io.OutputStream $r0;
        java.nio.charset.Charset $r1;
        java.io.OutputStreamWriter $r2;
        java.io.BufferedWriter $r3;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "charset");

        $r2 = new java.io.OutputStreamWriter;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r0, $r1);

        $r3 = new java.io.BufferedWriter;

        specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r2, 8192);

        return $r3;
    }

    static java.io.BufferedWriter bufferedWriter$default(java.io.OutputStream, java.nio.charset.Charset, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.io.OutputStream $r1;
        java.nio.charset.Charset $r2;
        int $i0;
        java.io.OutputStreamWriter $r3;
        java.io.BufferedWriter $r4;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.nio.charset.Charset;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "charset");

        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r1, $r2);

        $r4 = new java.io.BufferedWriter;

        specialinvoke $r4.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r3, 8192);

        return $r4;
    }

    private static final java.io.ByteArrayInputStream byteInputStream(java.lang.String, java.nio.charset.Charset)
    {
        byte[] $r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        java.io.ByteArrayInputStream $r3;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "charset");

        $r3 = new java.io.ByteArrayInputStream;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).getBytes(charset)");

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        return $r3;
    }

    static java.io.ByteArrayInputStream byteInputStream$default(java.lang.String, java.nio.charset.Charset, int, java.lang.Object)
    {
        java.lang.Object $r0;
        byte[] $r1;
        java.lang.String $r2;
        java.nio.charset.Charset $r3;
        int $i0;
        java.io.ByteArrayInputStream $r4;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.nio.charset.Charset;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r3 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "charset");

        $r4 = new java.io.ByteArrayInputStream;

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this as java.lang.String).getBytes(charset)");

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        return $r4;
    }

    public static final long copyTo(java.io.InputStream, java.io.OutputStream, int)
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        int $i0;
        byte[] $r2;
        long $l1, $l2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "out");

        $r2 = newarray (byte)[$i0];

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

        $l1 = 0L;

     label1:
        if $i0 < 0 goto label2;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        $l2 = (long) $i0;

        $l1 = $l1 + $l2;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

        goto label1;

     label2:
        return $l1;
    }

    public static long copyTo$default(java.io.InputStream, java.io.OutputStream, int, int, java.lang.Object)
    {
        java.io.OutputStream $r0;
        java.lang.Object $r1;
        long $l0;
        java.io.InputStream $r2;
        int $i1, $i2;

        $r2 := @parameter0: java.io.InputStream;

        $r0 := @parameter1: java.io.OutputStream;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i2 = $i2 & 2;

        if $i2 == 0 goto label1;

        $i1 = 8192;

     label1:
        $l0 = staticinvoke <kotlin.io.ByteStreamsKt: long copyTo(java.io.InputStream,java.io.OutputStream,int)>($r2, $r0, $i1);

        return $l0;
    }

    private static final java.io.ByteArrayInputStream inputStream(byte[])
    {
        byte[] $r0;
        java.io.ByteArrayInputStream $r1;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        return $r1;
    }

    private static final java.io.ByteArrayInputStream inputStream(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.io.ByteArrayInputStream $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r0, $i0, $i1);

        return $r1;
    }

    public static final kotlin.collections.ByteIterator iterator(java.io.BufferedInputStream)
    {
        java.io.BufferedInputStream $r0;
        kotlin.io.ByteStreamsKt$iterator$1 $r1;

        $r0 := @parameter0: java.io.BufferedInputStream;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.io.ByteStreamsKt$iterator$1;

        specialinvoke $r1.<kotlin.io.ByteStreamsKt$iterator$1: void <init>(java.io.BufferedInputStream)>($r0);

        return $r1;
    }

    public static final byte[] readBytes(java.io.InputStream)
    {
        java.io.InputStream $r0;
        java.io.ByteArrayOutputStream $r1;
        int $i0;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.io.ByteArrayOutputStream;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int available()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(8192, $i0);

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        staticinvoke <kotlin.io.ByteStreamsKt: long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object)>($r0, $r1, 0, 2, null);

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "buffer.toByteArray()");

        return $r2;
    }

    public static final byte[] readBytes(java.io.InputStream, int)
    {
        java.io.InputStream $r0;
        int $i0, $i1;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.io.ByteArrayOutputStream;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int available()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        staticinvoke <kotlin.io.ByteStreamsKt: long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object)>($r0, $r1, 0, 2, null);

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "buffer.toByteArray()");

        return $r2;
    }

    public static byte[] readBytes$default(java.io.InputStream, int, int, java.lang.Object)
    {
        java.lang.Object $r0;
        byte[] $r1;
        java.io.InputStream $r2;
        int $i0, $i1;

        $r2 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 8192;

     label1:
        $r1 = staticinvoke <kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream,int)>($r2, $i0);

        return $r1;
    }

    private static final java.io.InputStreamReader reader(java.io.InputStream, java.nio.charset.Charset)
    {
        java.io.InputStream $r0;
        java.nio.charset.Charset $r1;
        java.io.InputStreamReader $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "charset");

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r0, $r1);

        return $r2;
    }

    static java.io.InputStreamReader reader$default(java.io.InputStream, java.nio.charset.Charset, int, java.lang.Object)
    {
        java.io.InputStream $r0;
        java.lang.Object $r1;
        java.nio.charset.Charset $r2;
        int $i0;
        java.io.InputStreamReader $r3;

        $r0 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.nio.charset.Charset;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "charset");

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r0, $r2);

        return $r3;
    }

    private static final java.io.OutputStreamWriter writer(java.io.OutputStream, java.nio.charset.Charset)
    {
        java.io.OutputStream $r0;
        java.nio.charset.Charset $r1;
        java.io.OutputStreamWriter $r2;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "charset");

        $r2 = new java.io.OutputStreamWriter;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r0, $r1);

        return $r2;
    }

    static java.io.OutputStreamWriter writer$default(java.io.OutputStream, java.nio.charset.Charset, int, java.lang.Object)
    {
        java.io.OutputStream $r0;
        java.lang.Object $r1;
        java.nio.charset.Charset $r2;
        int $i0;
        java.io.OutputStreamWriter $r3;

        $r0 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.nio.charset.Charset;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "charset");

        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r0, $r2);

        return $r3;
    }

