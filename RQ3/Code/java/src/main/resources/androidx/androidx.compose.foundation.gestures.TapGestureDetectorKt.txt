androidx.compose.foundation.gestures.TapGestureDetectorKt
<androidx.compose.foundation.gestures.TapGestureDetectorKt: kotlin.jvm.functions.Function3 NoPressGesture>
    public static final java.lang.Object detectTapGestures(androidx.compose.ui.input.pointer.PointerInputScope, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function3, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.PointerInputScope $r0;
        kotlin.jvm.functions.Function1 r1, r2, r4;
        kotlin.jvm.functions.Function3 r3;
        kotlin.coroutines.Continuation $r5;
        androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapGestures$2 $r6;
        kotlin.jvm.functions.Function2 $r7;
        java.lang.Object $r8, $r9;
        kotlin.Unit $r10;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        r3 := @parameter3: kotlin.jvm.functions.Function3;

        r4 := @parameter4: kotlin.jvm.functions.Function1;

        $r5 := @parameter5: kotlin.coroutines.Continuation;

        $r6 = new androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapGestures$2;

        specialinvoke $r6.<androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapGestures$2: void <init>(androidx.compose.ui.input.pointer.PointerInputScope,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r0, r3, r2, r1, r4, null);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        $r8 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r7, $r5);

        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r8 != $r9 goto label1;

        return $r8;

     label1:
        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r10;
    }

    public static java.lang.Object detectTapGestures$default(androidx.compose.ui.input.pointer.PointerInputScope, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function3, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.ui.input.pointer.PointerInputScope r0;
        kotlin.coroutines.Continuation r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2, $r3;
        kotlin.jvm.functions.Function1 r4, r5, r7;
        kotlin.jvm.functions.Function3 r6;

        r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r4 := @parameter1: kotlin.jvm.functions.Function1;

        r5 := @parameter2: kotlin.jvm.functions.Function1;

        r6 := @parameter3: kotlin.jvm.functions.Function3;

        r7 := @parameter4: kotlin.jvm.functions.Function1;

        r1 := @parameter5: kotlin.coroutines.Continuation;

        i0 := @parameter6: int;

        r2 := @parameter7: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r5 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r6 = <androidx.compose.foundation.gestures.TapGestureDetectorKt: kotlin.jvm.functions.Function3 NoPressGesture>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r7 = null;

     label4:
        $r3 = staticinvoke <androidx.compose.foundation.gestures.TapGestureDetectorKt: java.lang.Object detectTapGestures(androidx.compose.ui.input.pointer.PointerInputScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r0, r4, r5, r6, r7, r1);

        return $r3;
    }

    private static final java.lang.Object consumeUntilUp(androidx.compose.ui.input.pointer.AwaitPointerEventScope, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r20;
        androidx.compose.ui.input.pointer.PointerEvent r1;
        java.lang.Object r2, $r4, r5, $r7, $r12, r14, r17;
        androidx.compose.ui.input.pointer.PointerInputChange r3, r15;
        boolean $z2, $z3, z5, $z8;
        kotlin.Unit $r8;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7, i8;
        androidx.compose.ui.input.pointer.AwaitPointerEventScope $r10;
        androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1 $r11, r18;
        java.util.List $r13, r16;
        java.lang.IllegalStateException r19;

        $r10 := @parameter0: androidx.compose.ui.input.pointer.AwaitPointerEventScope;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z2 = r0 instanceof androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1;

        if $z2 == 0 goto label01;

        $r11 = (androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1) r0;

        $i0 = $r11.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r11.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: int label>;

        $i3 = $i2 - -2147483648;

        $r11.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: int label> = $i3;

        goto label02;

     label01:
        r18 = new androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1;

        specialinvoke r18.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: void <init>(kotlin.coroutines.Continuation)>(r0);

        $r11 = r18;

     label02:
        $r4 = $r11.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r11.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label05;
            default: goto label13;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label04:
        $r11.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: java.lang.Object L$0> = $r10;

        $r11.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: int label> = 1;

        r20 = (kotlin.coroutines.Continuation) $r11;

        $r12 = staticinvoke <androidx.compose.ui.input.pointer.AwaitPointerEventScope: java.lang.Object awaitPointerEvent$default(androidx.compose.ui.input.pointer.AwaitPointerEventScope,androidx.compose.ui.input.pointer.PointerEventPass,kotlin.coroutines.Continuation,int,java.lang.Object)>($r10, null, r20, 1, null);

        if $r12 != r5 goto label06;

        return r5;

     label05:
        $r7 = $r11.<androidx.compose.foundation.gestures.TapGestureDetectorKt$consumeUntilUp$1: java.lang.Object L$0>;

        $r10 = (androidx.compose.ui.input.pointer.AwaitPointerEventScope) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r12 = $r4;

     label06:
        r1 = (androidx.compose.ui.input.pointer.PointerEvent) $r12;

        $r13 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerEvent: java.util.List getChanges()>();

        i5 = 0;

        $i6 = interfaceinvoke $r13.<java.util.List: int size()>();

     label07:
        if i5 >= $i6 goto label08;

        r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i5);

        r15 = (androidx.compose.ui.input.pointer.PointerInputChange) r14;

        z5 = 0;

        virtualinvoke r15.<androidx.compose.ui.input.pointer.PointerInputChange: void consume()>();

        i5 = i5 + 1;

        goto label07;

     label08:
        r16 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerEvent: java.util.List getChanges()>();

        i7 = 0;

        i8 = interfaceinvoke r16.<java.util.List: int size()>();

     label09:
        if i7 >= i8 goto label11;

        r17 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(i7);

        r2 = r17;

        r3 = (androidx.compose.ui.input.pointer.PointerInputChange) r2;

        $z3 = virtualinvoke r3.<androidx.compose.ui.input.pointer.PointerInputChange: boolean getPressed()>();

        if $z3 == 0 goto label10;

        $z8 = 1;

        goto label12;

     label10:
        i7 = i7 + 1;

        goto label09;

     label11:
        $z8 = 0;

     label12:
        if $z8 != 0 goto label04;

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label13:
        r19 = new java.lang.IllegalStateException;

        specialinvoke r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r19;
    }

    private static final java.lang.Object awaitSecondDown(androidx.compose.ui.input.pointer.AwaitPointerEventScope, androidx.compose.ui.input.pointer.PointerInputChange, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.AwaitPointerEventScope $r0;
        androidx.compose.ui.input.pointer.PointerInputChange r1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.ui.platform.ViewConfiguration $r3;
        long $l0;
        androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitSecondDown$2 $r4;
        kotlin.jvm.functions.Function2 $r5;
        java.lang.Object $r6;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.AwaitPointerEventScope;

        r1 := @parameter1: androidx.compose.ui.input.pointer.PointerInputChange;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.compose.ui.input.pointer.AwaitPointerEventScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l0 = interfaceinvoke $r3.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapTimeoutMillis()>();

        $r4 = new androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitSecondDown$2;

        specialinvoke $r4.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitSecondDown$2: void <init>(androidx.compose.ui.input.pointer.PointerInputChange,kotlin.coroutines.Continuation)>(r1, null);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        $r6 = interfaceinvoke $r0.<androidx.compose.ui.input.pointer.AwaitPointerEventScope: java.lang.Object withTimeoutOrNull(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($l0, $r5, $r2);

        return $r6;
    }

    public static final java.lang.Object detectTapAndPress(androidx.compose.ui.input.pointer.PointerInputScope, kotlin.jvm.functions.Function3, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.PointerInputScope $r0;
        kotlin.jvm.functions.Function3 r1;
        kotlin.jvm.functions.Function1 r2;
        kotlin.coroutines.Continuation $r3;
        androidx.compose.foundation.gestures.PressGestureScopeImpl r4, $r5;
        androidx.compose.ui.unit.Density $r6;
        androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapAndPress$2 $r7;
        kotlin.jvm.functions.Function2 $r8;
        java.lang.Object $r9, $r10;
        kotlin.Unit $r11;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r1 := @parameter1: kotlin.jvm.functions.Function3;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r5 = new androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $r6 = (androidx.compose.ui.unit.Density) $r0;

        specialinvoke $r5.<androidx.compose.foundation.gestures.PressGestureScopeImpl: void <init>(androidx.compose.ui.unit.Density)>($r6);

        r4 = $r5;

        $r7 = new androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapAndPress$2;

        specialinvoke $r7.<androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapAndPress$2: void <init>(androidx.compose.foundation.gestures.PressGestureScopeImpl,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r4, r1, r2, null);

        $r8 = (kotlin.jvm.functions.Function2) $r7;

        $r9 = staticinvoke <androidx.compose.foundation.gestures.ForEachGestureKt: java.lang.Object forEachGesture(androidx.compose.ui.input.pointer.PointerInputScope,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, $r8, $r3);

        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r9 != $r10 goto label1;

        return $r9;

     label1:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r11;
    }

    public static java.lang.Object detectTapAndPress$default(androidx.compose.ui.input.pointer.PointerInputScope, kotlin.jvm.functions.Function3, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.ui.input.pointer.PointerInputScope r0;
        kotlin.coroutines.Continuation r1;
        int i0, $i1, $i2;
        java.lang.Object r2, $r3;
        kotlin.jvm.functions.Function3 r4;
        kotlin.jvm.functions.Function1 r5;

        r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r4 := @parameter1: kotlin.jvm.functions.Function3;

        r5 := @parameter2: kotlin.jvm.functions.Function1;

        r1 := @parameter3: kotlin.coroutines.Continuation;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r4 = <androidx.compose.foundation.gestures.TapGestureDetectorKt: kotlin.jvm.functions.Function3 NoPressGesture>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r5 = null;

     label2:
        $r3 = staticinvoke <androidx.compose.foundation.gestures.TapGestureDetectorKt: java.lang.Object detectTapAndPress(androidx.compose.ui.input.pointer.PointerInputScope,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r0, r4, r5, r1);

        return $r3;
    }

    public static final java.lang.Object awaitFirstDown(androidx.compose.ui.input.pointer.AwaitPointerEventScope, boolean, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.AwaitPointerEventScope $r0;
        boolean z0;
        kotlin.coroutines.Continuation $r1;
        androidx.compose.ui.input.pointer.PointerEventPass $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.AwaitPointerEventScope;

        z0 := @parameter1: boolean;

        $r1 := @parameter2: kotlin.coroutines.Continuation;

        $r2 = <androidx.compose.ui.input.pointer.PointerEventPass: androidx.compose.ui.input.pointer.PointerEventPass Main>;

        $r3 = staticinvoke <androidx.compose.foundation.gestures.TapGestureDetectorKt: java.lang.Object awaitFirstDownOnPass(androidx.compose.ui.input.pointer.AwaitPointerEventScope,androidx.compose.ui.input.pointer.PointerEventPass,boolean,kotlin.coroutines.Continuation)>($r0, $r2, z0, $r1);

        return $r3;
    }

    public static java.lang.Object awaitFirstDown$default(androidx.compose.ui.input.pointer.AwaitPointerEventScope, boolean, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.ui.input.pointer.AwaitPointerEventScope r0;
        kotlin.coroutines.Continuation r1;
        int i0, $i1;
        java.lang.Object r2, $r3;
        boolean z0;

        r0 := @parameter0: androidx.compose.ui.input.pointer.AwaitPointerEventScope;

        z0 := @parameter1: boolean;

        r1 := @parameter2: kotlin.coroutines.Continuation;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        $r3 = staticinvoke <androidx.compose.foundation.gestures.TapGestureDetectorKt: java.lang.Object awaitFirstDown(androidx.compose.ui.input.pointer.AwaitPointerEventScope,boolean,kotlin.coroutines.Continuation)>(r0, z0, r1);

        return $r3;
    }

    public static final java.lang.Object awaitFirstDownOnPass(androidx.compose.ui.input.pointer.AwaitPointerEventScope, androidx.compose.ui.input.pointer.PointerEventPass, boolean, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r20;
        androidx.compose.ui.input.pointer.PointerEvent r1;
        java.util.List $r2, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object r3, r4, $r6, r7, $r9, $r10, $r12, $r17;
        androidx.compose.ui.input.pointer.PointerInputChange r5;
        boolean $z4, z5, $z6, $z7;
        androidx.compose.ui.input.pointer.AwaitPointerEventScope $r14;
        androidx.compose.ui.input.pointer.PointerEventPass r15;
        androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1 $r16, r18;
        java.lang.IllegalStateException r19;

        $r14 := @parameter0: androidx.compose.ui.input.pointer.AwaitPointerEventScope;

        r15 := @parameter1: androidx.compose.ui.input.pointer.PointerEventPass;

        z5 := @parameter2: boolean;

        r0 := @parameter3: kotlin.coroutines.Continuation;

        $z4 = r0 instanceof androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1;

        if $z4 == 0 goto label01;

        $r16 = (androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1) r0;

        $i1 = $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label01;

        $i3 = $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: int label>;

        $i4 = $i3 - -2147483648;

        $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: int label> = $i4;

        goto label02;

     label01:
        r18 = new androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1;

        specialinvoke r18.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: void <init>(kotlin.coroutines.Continuation)>(r0);

        $r16 = r18;

     label02:
        $r6 = $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: java.lang.Object result>;

        r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label03;
            case 1: goto label05;
            default: goto label13;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

     label04:
        $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: java.lang.Object L$0> = $r14;

        $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: java.lang.Object L$1> = r15;

        $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: boolean Z$0> = z5;

        $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: int label> = 1;

        r20 = (kotlin.coroutines.Continuation) $r16;

        $r17 = interfaceinvoke $r14.<androidx.compose.ui.input.pointer.AwaitPointerEventScope: java.lang.Object awaitPointerEvent(androidx.compose.ui.input.pointer.PointerEventPass,kotlin.coroutines.Continuation)>(r15, r20);

        if $r17 != r7 goto label06;

        return r7;

     label05:
        z5 = $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: boolean Z$0>;

        $r9 = $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: java.lang.Object L$1>;

        r15 = (androidx.compose.ui.input.pointer.PointerEventPass) $r9;

        $r10 = $r16.<androidx.compose.foundation.gestures.TapGestureDetectorKt$awaitFirstDownOnPass$1: java.lang.Object L$0>;

        $r14 = (androidx.compose.ui.input.pointer.AwaitPointerEventScope) $r10;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        $r17 = $r6;

     label06:
        r1 = (androidx.compose.ui.input.pointer.PointerEvent) $r17;

        $r2 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerEvent: java.util.List getChanges()>();

        i6 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label07:
        if i6 >= i0 goto label11;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i6);

        r4 = r3;

        r5 = (androidx.compose.ui.input.pointer.PointerInputChange) r4;

        if z5 == 0 goto label08;

        $z6 = staticinvoke <androidx.compose.ui.input.pointer.PointerEventKt: boolean changedToDown(androidx.compose.ui.input.pointer.PointerInputChange)>(r5);

        goto label09;

     label08:
        $z6 = staticinvoke <androidx.compose.ui.input.pointer.PointerEventKt: boolean changedToDownIgnoreConsumed(androidx.compose.ui.input.pointer.PointerInputChange)>(r5);

     label09:
        if $z6 != 0 goto label10;

        $z7 = 0;

        goto label12;

     label10:
        i6 = i6 + 1;

        goto label07;

     label11:
        $z7 = 1;

     label12:
        if $z7 == 0 goto label04;

        $r11 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerEvent: java.util.List getChanges()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        return $r12;

     label13:
        r19 = new java.lang.IllegalStateException;

        specialinvoke r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r19;
    }

    public static final java.lang.Object waitForUpOrCancellation(androidx.compose.ui.input.pointer.AwaitPointerEventScope, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r31, r32;
        androidx.compose.ui.input.pointer.PointerEvent r1, $r8;
        java.lang.Object $r2, r3, $r5, $r10, $r11, $r15, r17, r18, r21, r22, $r24, r26, r27;
        boolean $z1, $z2, $z3, $z4, $z5, z8, z9, $z10, z13, z14, $z15, $z16, z18, z19, $z20;
        androidx.compose.ui.input.pointer.PointerEventPass $r6, $r7;
        long $l0, $l1;
        java.util.List $r9, $r16, $r20, $r25;
        int $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12;
        androidx.compose.ui.input.pointer.AwaitPointerEventScope $r13;
        androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1 $r14, r29;
        androidx.compose.ui.input.pointer.PointerInputChange r19, r23, r28;
        java.lang.IllegalStateException r30;

        $r13 := @parameter0: androidx.compose.ui.input.pointer.AwaitPointerEventScope;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z1 = r0 instanceof androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1;

        if $z1 == 0 goto label01;

        $r14 = (androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1) r0;

        $i2 = $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: int label>;

        $i3 = $i2 & -2147483648;

        if $i3 == 0 goto label01;

        $i4 = $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: int label>;

        $i5 = $i4 - -2147483648;

        $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: int label> = $i5;

        goto label02;

     label01:
        r29 = new androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1;

        specialinvoke r29.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: void <init>(kotlin.coroutines.Continuation)>(r0);

        $r14 = r29;

     label02:
        $r2 = $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i6 = $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: int label>;

        tableswitch($i6)
        {
            case 0: goto label03;
            case 1: goto label05;
            case 2: goto label20;
            default: goto label26;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label04:
        $r6 = <androidx.compose.ui.input.pointer.PointerEventPass: androidx.compose.ui.input.pointer.PointerEventPass Main>;

        $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: java.lang.Object L$0> = $r13;

        $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: int label> = 1;

        r31 = (kotlin.coroutines.Continuation) $r14;

        $r15 = interfaceinvoke $r13.<androidx.compose.ui.input.pointer.AwaitPointerEventScope: java.lang.Object awaitPointerEvent(androidx.compose.ui.input.pointer.PointerEventPass,kotlin.coroutines.Continuation)>($r6, r31);

        if $r15 != r3 goto label06;

        return r3;

     label05:
        $r11 = $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: java.lang.Object L$0>;

        $r13 = (androidx.compose.ui.input.pointer.AwaitPointerEventScope) $r11;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r15 = $r2;

     label06:
        r1 = (androidx.compose.ui.input.pointer.PointerEvent) $r15;

        $r16 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerEvent: java.util.List getChanges()>();

        i7 = 0;

        i8 = interfaceinvoke $r16.<java.util.List: int size()>();

     label07:
        if i7 >= i8 goto label09;

        r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i7);

        r18 = r17;

        z8 = 0;

        r19 = (androidx.compose.ui.input.pointer.PointerInputChange) r18;

        z9 = 0;

        $z4 = staticinvoke <androidx.compose.ui.input.pointer.PointerEventKt: boolean changedToUp(androidx.compose.ui.input.pointer.PointerInputChange)>(r19);

        if $z4 != 0 goto label08;

        $z10 = 0;

        goto label10;

     label08:
        i7 = i7 + 1;

        goto label07;

     label09:
        $z10 = 1;

     label10:
        if $z10 == 0 goto label11;

        $r9 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerEvent: java.util.List getChanges()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        return $r10;

     label11:
        $r20 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerEvent: java.util.List getChanges()>();

        i9 = 0;

        i10 = interfaceinvoke $r20.<java.util.List: int size()>();

     label12:
        if i9 >= i10 goto label17;

        r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i9);

        r22 = r21;

        z13 = 0;

        r23 = (androidx.compose.ui.input.pointer.PointerInputChange) r22;

        z14 = 0;

        $z2 = virtualinvoke r23.<androidx.compose.ui.input.pointer.PointerInputChange: boolean isConsumed()>();

        if $z2 != 0 goto label13;

        $l0 = interfaceinvoke $r13.<androidx.compose.ui.input.pointer.AwaitPointerEventScope: long getSize-YbymL2g()>();

        $l1 = interfaceinvoke $r13.<androidx.compose.ui.input.pointer.AwaitPointerEventScope: long getExtendedTouchPadding-NH-jbRc()>();

        $z3 = staticinvoke <androidx.compose.ui.input.pointer.PointerEventKt: boolean isOutOfBounds-jwHxaWs(androidx.compose.ui.input.pointer.PointerInputChange,long,long)>(r23, $l0, $l1);

        if $z3 == 0 goto label14;

     label13:
        $z15 = 1;

        goto label15;

     label14:
        $z15 = 0;

     label15:
        if $z15 == 0 goto label16;

        $z16 = 1;

        goto label18;

     label16:
        i9 = i9 + 1;

        goto label12;

     label17:
        $z16 = 0;

     label18:
        if $z16 == 0 goto label19;

        return null;

     label19:
        $r7 = <androidx.compose.ui.input.pointer.PointerEventPass: androidx.compose.ui.input.pointer.PointerEventPass Final>;

        $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: java.lang.Object L$0> = $r13;

        $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: int label> = 2;

        r32 = (kotlin.coroutines.Continuation) $r14;

        $r24 = interfaceinvoke $r13.<androidx.compose.ui.input.pointer.AwaitPointerEventScope: java.lang.Object awaitPointerEvent(androidx.compose.ui.input.pointer.PointerEventPass,kotlin.coroutines.Continuation)>($r7, r32);

        if $r24 != r3 goto label21;

        return r3;

     label20:
        $r5 = $r14.<androidx.compose.foundation.gestures.TapGestureDetectorKt$waitForUpOrCancellation$1: java.lang.Object L$0>;

        $r13 = (androidx.compose.ui.input.pointer.AwaitPointerEventScope) $r5;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r24 = $r2;

     label21:
        $r8 = (androidx.compose.ui.input.pointer.PointerEvent) $r24;

        $r25 = virtualinvoke $r8.<androidx.compose.ui.input.pointer.PointerEvent: java.util.List getChanges()>();

        z18 = 0;

        i11 = 0;

        i12 = interfaceinvoke $r25.<java.util.List: int size()>();

     label22:
        if i11 >= i12 goto label24;

        r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i11);

        r27 = r26;

        z19 = 0;

        r28 = (androidx.compose.ui.input.pointer.PointerInputChange) r27;

        $z5 = virtualinvoke r28.<androidx.compose.ui.input.pointer.PointerInputChange: boolean isConsumed()>();

        if $z5 == 0 goto label23;

        $z20 = 1;

        goto label25;

     label23:
        i11 = i11 + 1;

        goto label22;

     label24:
        $z20 = 0;

     label25:
        if $z20 == 0 goto label04;

        return null;

     label26:
        r30 = new java.lang.IllegalStateException;

        specialinvoke r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r30;
    }

    public static final kotlin.jvm.functions.Function3 access$getNoPressGesture$p()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.foundation.gestures.TapGestureDetectorKt: kotlin.jvm.functions.Function3 NoPressGesture>;

        return $r0;
    }

    public static final java.lang.Object access$consumeUntilUp(androidx.compose.ui.input.pointer.AwaitPointerEventScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.AwaitPointerEventScope $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.AwaitPointerEventScope;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <androidx.compose.foundation.gestures.TapGestureDetectorKt: java.lang.Object consumeUntilUp(androidx.compose.ui.input.pointer.AwaitPointerEventScope,kotlin.coroutines.Continuation)>($r0, $r1);

        return $r2;
    }

    public static final java.lang.Object access$awaitSecondDown(androidx.compose.ui.input.pointer.AwaitPointerEventScope, androidx.compose.ui.input.pointer.PointerInputChange, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.AwaitPointerEventScope $r0;
        androidx.compose.ui.input.pointer.PointerInputChange r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.AwaitPointerEventScope;

        r1 := @parameter1: androidx.compose.ui.input.pointer.PointerInputChange;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = staticinvoke <androidx.compose.foundation.gestures.TapGestureDetectorKt: java.lang.Object awaitSecondDown(androidx.compose.ui.input.pointer.AwaitPointerEventScope,androidx.compose.ui.input.pointer.PointerInputChange,kotlin.coroutines.Continuation)>($r0, r1, $r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.gestures.TapGestureDetectorKt$NoPressGesture$1 $r0;
        kotlin.jvm.functions.Function3 $r1;

        $r0 = new androidx.compose.foundation.gestures.TapGestureDetectorKt$NoPressGesture$1;

        specialinvoke $r0.<androidx.compose.foundation.gestures.TapGestureDetectorKt$NoPressGesture$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r1 = (kotlin.jvm.functions.Function3) $r0;

        <androidx.compose.foundation.gestures.TapGestureDetectorKt: kotlin.jvm.functions.Function3 NoPressGesture> = $r1;

        return;
    }

