androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol liveLiteral>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol liveLiteralInfoAnnotation>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol liveLiteralFileInfoAnnotation>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol stateInterface>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol NoLiveLiteralsAnnotation>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrClass liveLiteralsClass>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrFile currentFile>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean liveLiteralsEnabled>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor keyVisitor>
    public void lower(org.jetbrains.kotlin.ir.declarations.IrModuleFragment)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrModuleFragment r1;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid $r2;
        org.jetbrains.kotlin.ir.IrElement $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrModuleFragment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "module");

        $r3 = (org.jetbrains.kotlin.ir.IrElement) r1;

        $r2 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid) r0;

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoidKt: void transformChildrenVoid(org.jetbrains.kotlin.ir.IrElement,org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid)>($r3, $r2);

        return;
    }

    private final boolean hasNoLiveLiteralsAnnotation(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r5;
        java.util.List $r6;
        boolean $z2, $z3, $z4, $z5, $z6;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r7, $r10;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r8, $r9;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r11;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol $r12;
        org.jetbrains.kotlin.ir.declarations.IrConstructor $r13, $r16;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r14;
        org.jetbrains.kotlin.ir.declarations.IrClass $r15;
        java.util.Collection $r17;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer;

        $r6 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer: java.util.List getAnnotations()>();

        $r2 = (java.lang.Iterable) $r6;

        $z2 = $r2 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r17 = (java.util.Collection) $r2;

        $z4 = interfaceinvoke $r17.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $z5 = 0;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jetbrains.kotlin.ir.expressions.IrConstructorCall) r4;

        $r7 = interfaceinvoke r5.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol getSymbol()>();

        $r8 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r7;

        $r9 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r8);

        $r10 = (org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol) $r9;

        $r11 = interfaceinvoke $r10.<org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        $r13 = (org.jetbrains.kotlin.ir.declarations.IrConstructor) $r11;

        $r12 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol NoLiveLiteralsAnnotation>;

        $r14 = interfaceinvoke $r12.<org.jetbrains.kotlin.ir.symbols.IrClassSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r15 = (org.jetbrains.kotlin.ir.declarations.IrClass) $r14;

        $r16 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrConstructor getPrimaryConstructor(org.jetbrains.kotlin.ir.declarations.IrClass)>($r15);

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r16);

        if $z3 == 0 goto label2;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    private final java.lang.Object enter(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor keyVisitor>;

        $r4 = virtualinvoke $r3.<androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>(r1, r2);

        return $r4;
    }

    private final java.lang.Object siblings(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor keyVisitor>;

        $r4 = virtualinvoke $r3.<androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor: java.lang.Object siblings(java.lang.String,kotlin.jvm.functions.Function0)>(r1, r2);

        return $r4;
    }

    private final java.lang.Object siblings(kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor keyVisitor>;

        $r3 = virtualinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor: java.lang.Object siblings(kotlin.jvm.functions.Function0)>(r1);

        return $r3;
    }

    private final org.jetbrains.kotlin.ir.expressions.IrExpression irGetLiveLiteralsClass()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.impl.IrGetObjectValueImpl $r1;
        org.jetbrains.kotlin.ir.declarations.IrClass $r2, $r4;
        org.jetbrains.kotlin.ir.types.IrSimpleType $r3;
        org.jetbrains.kotlin.ir.types.IrType $r5;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r6;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol $r7;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r8;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        $r1 = new org.jetbrains.kotlin.ir.expressions.impl.IrGetObjectValueImpl;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrClass liveLiteralsClass>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $r3 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: org.jetbrains.kotlin.ir.types.IrSimpleType getDefaultType(org.jetbrains.kotlin.ir.declarations.IrClass)>($r2);

        $r5 = (org.jetbrains.kotlin.ir.types.IrType) $r3;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrClass liveLiteralsClass>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r4.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.ir.symbols.IrSymbol getSymbol()>();

        $r7 = (org.jetbrains.kotlin.ir.symbols.IrClassSymbol) $r6;

        specialinvoke $r1.<org.jetbrains.kotlin.ir.expressions.impl.IrGetObjectValueImpl: void <init>(int,int,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.symbols.IrClassSymbol)>(-1, -1, $r5, $r7);

        $r8 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r1;

        return $r8;
    }

    private final java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.name.Name $r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        $r1 := @parameter0: org.jetbrains.kotlin.name.Name;

        $z0 = virtualinvoke $r1.<org.jetbrains.kotlin.name.Name: boolean isSpecial()>();

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke $r1.<org.jetbrains.kotlin.name.Name: java.lang.String getIdentifier()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "identifier");

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "asString()");

        $r3 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r2, 60, 36, 0, 4, null);

        $r4 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r3, 62, 36, 0, 4, null);

        $r5 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r4, 32, 45, 0, 4, null);

     label2:
        return $r5;
    }

    private final org.jetbrains.kotlin.ir.expressions.IrConstructorCall irLiveLiteralInfoAnnotation(java.lang.String, int)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        java.lang.String r1;
        int i0;
        org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl r2, $r4;
        boolean z0, z1;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol $r5, $r8;
        org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol $r6;
        org.jetbrains.kotlin.ir.types.IrType $r7;
        kotlin.sequences.Sequence $r9;
        java.lang.Object $r10;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r11;
        org.jetbrains.kotlin.ir.expressions.IrConst $r12, $r14;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r13, $r15;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r16;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = new org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol liveLiteralInfoAnnotation>;

        $r6 = (org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol) $r5;

        $r7 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypesKt: org.jetbrains.kotlin.ir.types.IrType getDefaultType(org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol)>($r6);

        $r8 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol liveLiteralInfoAnnotation>;

        $r9 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: kotlin.sequences.Sequence getConstructors(org.jetbrains.kotlin.ir.symbols.IrClassSymbol)>($r8);

        $r10 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object single(kotlin.sequences.Sequence)>($r9);

        $r11 = (org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol) $r10;

        specialinvoke $r4.<org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl: void <init>(int,int,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol,int,int,int,org.jetbrains.kotlin.ir.expressions.IrStatementOrigin,int,kotlin.jvm.internal.DefaultConstructorMarker)>(-1, -1, $r7, $r11, 0, 0, 2, null, 128, null);

        r2 = $r4;

        z0 = 0;

        z1 = 0;

        $r12 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrConst irConst(java.lang.String)>(r1);

        $r13 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r12;

        virtualinvoke r2.<org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(0, $r13);

        $r14 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrConst irConst(int)>(i0);

        $r15 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r14;

        virtualinvoke r2.<org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(1, $r15);

        $r16 = (org.jetbrains.kotlin.ir.expressions.IrConstructorCall) r2;

        return $r16;
    }

    private final org.jetbrains.kotlin.ir.expressions.IrConstructorCall irLiveLiteralFileInfoAnnotation(java.lang.String)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        java.lang.String r1;
        org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl r2, $r3;
        boolean z0, z1;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol $r4, $r7;
        org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol $r5;
        org.jetbrains.kotlin.ir.types.IrType $r6;
        kotlin.sequences.Sequence $r8;
        java.lang.Object $r9;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r10;
        org.jetbrains.kotlin.ir.expressions.IrConst $r11;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r12;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r13;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: java.lang.String;

        $r3 = new org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol liveLiteralFileInfoAnnotation>;

        $r5 = (org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol) $r4;

        $r6 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypesKt: org.jetbrains.kotlin.ir.types.IrType getDefaultType(org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol)>($r5);

        $r7 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol liveLiteralFileInfoAnnotation>;

        $r8 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: kotlin.sequences.Sequence getConstructors(org.jetbrains.kotlin.ir.symbols.IrClassSymbol)>($r7);

        $r9 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object single(kotlin.sequences.Sequence)>($r8);

        $r10 = (org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol) $r9;

        specialinvoke $r3.<org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl: void <init>(int,int,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol,int,int,int,org.jetbrains.kotlin.ir.expressions.IrStatementOrigin,int,kotlin.jvm.internal.DefaultConstructorMarker)>(-1, -1, $r6, $r10, 0, 0, 1, null, 128, null);

        r2 = $r3;

        z0 = 0;

        z1 = 0;

        $r11 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrConst irConst(java.lang.String)>(r1);

        $r12 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r11;

        virtualinvoke r2.<org.jetbrains.kotlin.ir.expressions.impl.IrConstructorCallImpl: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(0, $r12);

        $r13 = (org.jetbrains.kotlin.ir.expressions.IrConstructorCall) r2;

        return $r13;
    }

    private final org.jetbrains.kotlin.ir.declarations.IrSimpleFunction irLiveLiteralGetter(java.lang.String, org.jetbrains.kotlin.ir.expressions.IrExpression, org.jetbrains.kotlin.ir.types.IrType)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        java.lang.String r1, $r44, $r81, $r90, $r101, $r139;
        org.jetbrains.kotlin.ir.expressions.IrExpression r2, r9, $r67, $r70, $r124, $r127, $r164, $r169, $r195, $r199, $r210, $r215, $r219, $r221, $r227, $r233, $r243, $r245, $r250, $r252;
        org.jetbrains.kotlin.ir.types.IrType r3, r5, r10, $r23, $r143;
        org.jetbrains.kotlin.ir.declarations.IrClass r4, $r17, $r21;
        org.jetbrains.kotlin.ir.symbols.IrSimpleFunctionSymbol r6, $r25;
        org.jetbrains.kotlin.ir.declarations.IrProperty r7, $r263, r264, $r289, r291, r299, r311;
        org.jetbrains.kotlin.ir.builders.IrBuilderWithScope r11, $r63, $r64, $r65, $r120, $r121, $r122, $r161, $r162, $r167, $r191, $r193, $r201, $r207, $r208, $r212, $r213, $r224, $r225, $r231, $r237, $r242, $r253, $r281, $r307, $r320, $r328, r332;
        boolean z1, z2, z9, z15, z23, z26, z31, z34, z42, z47, z52, z66, z71, z72, z80;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression r13, r335;
        kotlin.Unit r14, r16, $r75, $r76, $r132, $r174, $r175, $r220, $r251, $r258, $r270, $r273, $r284, $r295, $r298, $r310, $r323;
        org.jetbrains.kotlin.ir.expressions.impl.IrIfThenElseImpl r15;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol $r18, $r24;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r19;
        org.jetbrains.kotlin.ir.types.IrType[] $r20;
        org.jetbrains.kotlin.ir.types.IrSimpleType $r22;
        org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder $r26, $r77;
        org.jetbrains.kotlin.name.Name $r27, $r32, $r41, $r45, $r82, $r91, $r98, $r102, $r136, $r140;
        org.jetbrains.kotlin.descriptors.Visibility $r28, $r33, $r46, $r83, $r92, $r103, $r144;
        java.util.List $r29, $r84, $r178, $r181;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationParent $r30, $r35, $r51, $r85, $r94, $r108, $r148;
        org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder $r31, $r86, r267;
        org.jetbrains.kotlin.ir.symbols.IrPropertySymbol $r34, $r50, $r93, $r107;
        org.jetbrains.kotlin.ir.expressions.impl.IrExpressionBodyImpl $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, i11, $i12;
        org.jetbrains.kotlin.ir.expressions.IrExpressionBody $r37;
        org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder $r38, $r95, $r133;
        java.lang.StringBuilder $r39, $r40, $r42, $r43, $r78, $r79, $r80, $r87, $r88, $r89, $r96, $r97, $r99, $r100, $r134, $r135, $r137, $r138;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR $r47, $r104, $r145;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin $r48, $r105, $r146;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r49, $r106, $r147, $r196, $r216, $r228, $r279, r304, r316, r325;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter $r52, $r109, $r149, $r177, $r280, $r306, $r318, $r319, r327;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r53, $r110, $r150, $r151;
        org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder $r54, $r111, $r152, $r182;
        org.jetbrains.kotlin.backend.common.extensions.IrPluginContext $r55, $r112, $r141, $r153, $r183;
        org.jetbrains.kotlin.ir.builders.IrGeneratorContext $r56, $r60, $r113, $r117, $r154, $r158, $r184, $r188, $r204;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r57, $r114, $r155, $r185, $r197, $r206, $r217, $r229, $r249;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r58, $r115, $r156, $r186;
        org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder $r59, $r116, $r157, $r187, r282, r283, r321;
        org.jetbrains.kotlin.ir.builders.Scope $r61, $r118, $r159, $r189, $r205;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration $r62, $r119, $r160, $r166, $r190, $r200, $r211, $r223, $r230, $r236, $r241;
        org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl $r66, $r123, $r163, $r168, $r194, $r202, $r214, $r226, $r232, $r238, $r244;
        org.jetbrains.kotlin.ir.declarations.IrField $r68, $r125, $r165, $r271, r296;
        org.jetbrains.kotlin.ir.expressions.impl.IrGetFieldImpl $r69, $r126;
        org.jetbrains.kotlin.ir.expressions.impl.IrReturnImpl $r71, $r128, $r254;
        org.jetbrains.kotlin.ir.IrStatement $r72, $r129, $r171, $r235, $r239, $r255;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody $r73, $r130, $r172, $r256;
        org.jetbrains.kotlin.ir.expressions.IrBody $r74, $r131, $r173, $r257;
        org.jetbrains.kotlin.ir.descriptors.IrBuiltIns $r142;
        org.jetbrains.kotlin.ir.expressions.impl.IrSetFieldImpl $r170;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer $r176, $r259, r285;
        java.util.Collection $r179;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r180;
        org.jetbrains.kotlin.ir.builders.IrStatementsBuilder $r192, $r222;
        org.jetbrains.kotlin.ir.expressions.IrCall $r198, $r218, $r234;
        org.jetbrains.kotlin.ir.builders.IrBlockBuilder $r203;
        org.jetbrains.kotlin.ir.expressions.impl.IrConstImpl $r209;
        org.jetbrains.kotlin.ir.expressions.IrContainerExpression $r240;
        org.jetbrains.kotlin.ir.expressions.impl.IrCallImpl $r246, r337, r338;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_ITERATOR $r247;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin $r248, $r333;
        org.jetbrains.kotlin.descriptors.PropertyDescriptor r260, $r286;
        org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl $r277, r278, r302, r314;
        org.jetbrains.kotlin.ir.declarations.IrVariable $r331, r336;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r3 := @parameter2: org.jetbrains.kotlin.ir.types.IrType;

        $r17 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrClass liveLiteralsClass>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r17);

        r4 = $r17;

        $r18 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol stateInterface>;

        $r19 = interfaceinvoke $r18.<org.jetbrains.kotlin.ir.symbols.IrClassSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r21 = (org.jetbrains.kotlin.ir.declarations.IrClass) $r19;

        $r20 = newarray (org.jetbrains.kotlin.ir.types.IrType)[1];

        $r20[0] = r3;

        $r22 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypesKt: org.jetbrains.kotlin.ir.types.IrSimpleType typeWith(org.jetbrains.kotlin.ir.declarations.IrClass,org.jetbrains.kotlin.ir.types.IrType[])>($r21, $r20);

        $r23 = (org.jetbrains.kotlin.ir.types.IrType) $r22;

        r5 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypesKt: org.jetbrains.kotlin.ir.types.IrType makeNullable(org.jetbrains.kotlin.ir.types.IrType)>($r23);

        $r24 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol stateInterface>;

        $r25 = staticinvoke <org.jetbrains.kotlin.ir.util.AdditionalIrUtilsKt: org.jetbrains.kotlin.ir.symbols.IrSimpleFunctionSymbol getPropertyGetter(org.jetbrains.kotlin.ir.symbols.IrClassSymbol,java.lang.String)>($r24, "value");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r25);

        r6 = $r25;

        $r259 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer) r4;

        r260 = (org.jetbrains.kotlin.descriptors.PropertyDescriptor) null;

        $r26 = new org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder;

        specialinvoke $r26.<org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder: void <init>()>();

        z9 = 0;

        $r27 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name identifier(java.lang.String)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "Name.identifier(key)");

        virtualinvoke $r26.<org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder: void setName(org.jetbrains.kotlin.name.Name)>($r27);

        $r28 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PRIVATE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r28, "Visibilities.PRIVATE");

        virtualinvoke $r26.<org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder: void setVisibility(org.jetbrains.kotlin.descriptors.Visibility)>($r28);

        $r263 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.IrProperty buildProperty(org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder,org.jetbrains.kotlin.descriptors.PropertyDescriptor)>($r26, r260);

        r264 = $r263;

        $r29 = interfaceinvoke $r259.<org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer: java.util.List getDeclarations()>();

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>(r264);

        $r30 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationParent) $r259;

        interfaceinvoke r264.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setParent(org.jetbrains.kotlin.ir.declarations.IrDeclarationParent)>($r30);

        z15 = 0;

        $r31 = new org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder;

        specialinvoke $r31.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void <init>()>();

        r267 = $r31;

        $r32 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name identifier(java.lang.String)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r32, "Name.identifier(key)");

        virtualinvoke r267.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void setName(org.jetbrains.kotlin.name.Name)>($r32);

        virtualinvoke r267.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void setStatic(boolean)>(1);

        virtualinvoke r267.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void setType(org.jetbrains.kotlin.ir.types.IrType)>(r3);

        $r33 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PRIVATE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "Visibilities.PRIVATE");

        virtualinvoke r267.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void setVisibility(org.jetbrains.kotlin.descriptors.Visibility)>($r33);

        $r270 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r271 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.IrField buildField(org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder)>(r267);

        z23 = 0;

        $r34 = interfaceinvoke $r263.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.symbols.IrPropertySymbol getSymbol()>();

        interfaceinvoke $r271.<org.jetbrains.kotlin.ir.declarations.IrField: void setCorrespondingPropertySymbol(org.jetbrains.kotlin.ir.symbols.IrPropertySymbol)>($r34);

        $r35 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationParent) r4;

        interfaceinvoke $r271.<org.jetbrains.kotlin.ir.declarations.IrField: void setParent(org.jetbrains.kotlin.ir.declarations.IrDeclarationParent)>($r35);

        $r36 = new org.jetbrains.kotlin.ir.expressions.impl.IrExpressionBodyImpl;

        $i0 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: int getStartOffset()>();

        $i1 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: int getEndOffset()>();

        specialinvoke $r36.<org.jetbrains.kotlin.ir.expressions.impl.IrExpressionBodyImpl: void <init>(int,int,org.jetbrains.kotlin.ir.expressions.IrExpression)>($i0, $i1, r2);

        $r37 = (org.jetbrains.kotlin.ir.expressions.IrExpressionBody) $r36;

        interfaceinvoke $r271.<org.jetbrains.kotlin.ir.declarations.IrField: void setInitializer(org.jetbrains.kotlin.ir.expressions.IrExpressionBody)>($r37);

        $r273 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r263.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setBackingField(org.jetbrains.kotlin.ir.declarations.IrField)>($r271);

        z26 = 0;

        $r38 = new org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder;

        specialinvoke $r38.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void <init>()>();

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<get-");

        $r41 = interfaceinvoke $r263.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.name.Name getName()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name special(java.lang.String)>($r44);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r45, "Name.special(\"<get-${this@addGetter.name}>\")");

        virtualinvoke $r38.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setName(org.jetbrains.kotlin.name.Name)>($r45);

        virtualinvoke $r38.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setReturnType(org.jetbrains.kotlin.ir.types.IrType)>(r3);

        $r46 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PRIVATE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r46, "Visibilities.PRIVATE");

        virtualinvoke $r38.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setVisibility(org.jetbrains.kotlin.descriptors.Visibility)>($r46);

        $r47 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR INSTANCE>;

        $r48 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin) $r47;

        virtualinvoke $r38.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setOrigin(org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin)>($r48);

        $r277 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl buildFun$default(org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder,org.jetbrains.kotlin.descriptors.FunctionDescriptor,int,java.lang.Object)>($r38, null, 1, null);

        z31 = 0;

        r278 = $r277;

        $r49 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) r278;

        interfaceinvoke $r263.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setGetter(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>($r49);

        $r50 = interfaceinvoke $r263.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.symbols.IrPropertySymbol getSymbol()>();

        virtualinvoke r278.<org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl: void setCorrespondingPropertySymbol(org.jetbrains.kotlin.ir.symbols.IrPropertySymbol)>($r50);

        $r51 = interfaceinvoke $r263.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrDeclarationParent getParent()>();

        virtualinvoke r278.<org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl: void setParent(org.jetbrains.kotlin.ir.declarations.IrDeclarationParent)>($r51);

        z34 = 0;

        $r279 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) $r277;

        $r52 = interfaceinvoke r4.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.ir.declarations.IrValueParameter getThisReceiver()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r52);

        $r53 = (org.jetbrains.kotlin.ir.declarations.IrFunction) $r279;

        $r280 = staticinvoke <org.jetbrains.kotlin.backend.common.ir.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrValueParameter copyTo$default(org.jetbrains.kotlin.ir.declarations.IrValueParameter,org.jetbrains.kotlin.ir.declarations.IrFunction,org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin,int,int,int,org.jetbrains.kotlin.name.Name,java.util.Map,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.expressions.IrExpressionBody,boolean,boolean,int,java.lang.Object)>($r52, $r53, null, 0, 0, 0, null, null, null, null, null, 0, 0, 4094, null);

        interfaceinvoke $r279.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: void setDispatchReceiverParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter)>($r280);

        $r54 = new org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder;

        $r55 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext getContext()>();

        $r56 = (org.jetbrains.kotlin.ir.builders.IrGeneratorContext) $r55;

        $r57 = interfaceinvoke $r279.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r58 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r57;

        specialinvoke $r54.<org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.symbols.IrSymbol,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r56, $r58, 0, 0, 12, null);

        $r281 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r54;

        $i3 = virtualinvoke $r281.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getStartOffset()>();

        $i4 = virtualinvoke $r281.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getEndOffset()>();

        $r59 = new org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder;

        $r60 = virtualinvoke $r281.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.IrGeneratorContext getContext()>();

        $r61 = virtualinvoke $r281.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.Scope getScope()>();

        specialinvoke $r59.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.builders.Scope,int,int)>($r60, $r61, $i3, $i4);

        r282 = $r59;

        r283 = r282;

        $r64 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) r283;

        $r65 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) r283;

        $r63 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) r283;

        $r62 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) $r280;

        $r66 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r63, $r62);

        $r67 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r66;

        $r68 = interfaceinvoke $r263.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrField getBackingField()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r68);

        $r69 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetFieldImpl irGetField(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.declarations.IrField)>($r65, $r67, $r68);

        $r70 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r69;

        $r71 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrReturnImpl irReturn(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.expressions.IrExpression)>($r64, $r70);

        $r72 = (org.jetbrains.kotlin.ir.IrStatement) $r71;

        virtualinvoke r283.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void unaryPlus(org.jetbrains.kotlin.ir.IrStatement)>($r72);

        $r284 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r73 = virtualinvoke r282.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: org.jetbrains.kotlin.ir.expressions.IrBlockBody doBuild()>();

        $r74 = (org.jetbrains.kotlin.ir.expressions.IrBody) $r73;

        interfaceinvoke $r279.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: void setBody(org.jetbrains.kotlin.ir.expressions.IrBody)>($r74);

        $r75 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r76 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r7 = $r263;

        r285 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer) r4;

        $r286 = (org.jetbrains.kotlin.descriptors.PropertyDescriptor) null;

        $r77 = new org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder;

        specialinvoke $r77.<org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder: void <init>()>();

        z42 = 0;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("State$");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        $r82 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name identifier(java.lang.String)>($r81);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r82, "Name.identifier(\"State\\$$key\")");

        virtualinvoke $r77.<org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder: void setName(org.jetbrains.kotlin.name.Name)>($r82);

        $r83 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PRIVATE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r83, "Visibilities.PRIVATE");

        virtualinvoke $r77.<org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder: void setVisibility(org.jetbrains.kotlin.descriptors.Visibility)>($r83);

        virtualinvoke $r77.<org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder: void setVar(boolean)>(1);

        $r289 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.IrProperty buildProperty(org.jetbrains.kotlin.ir.builders.declarations.IrPropertyBuilder,org.jetbrains.kotlin.descriptors.PropertyDescriptor)>($r77, $r286);

        z47 = 0;

        $r84 = interfaceinvoke r285.<org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer: java.util.List getDeclarations()>();

        interfaceinvoke $r84.<java.util.List: boolean add(java.lang.Object)>($r289);

        $r85 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationParent) r285;

        interfaceinvoke $r289.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setParent(org.jetbrains.kotlin.ir.declarations.IrDeclarationParent)>($r85);

        r291 = $r289;

        z52 = 0;

        $r86 = new org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder;

        specialinvoke $r86.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void <init>()>();

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("State$");

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        $r91 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name identifier(java.lang.String)>($r90);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r91, "Name.identifier(\"State\\$$key\")");

        virtualinvoke $r86.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void setName(org.jetbrains.kotlin.name.Name)>($r91);

        virtualinvoke $r86.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void setType(org.jetbrains.kotlin.ir.types.IrType)>(r5);

        $r92 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PRIVATE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r92, "Visibilities.PRIVATE");

        virtualinvoke $r86.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void setVisibility(org.jetbrains.kotlin.descriptors.Visibility)>($r92);

        virtualinvoke $r86.<org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder: void setStatic(boolean)>(1);

        $r295 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r296 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.IrField buildField(org.jetbrains.kotlin.ir.builders.declarations.IrFieldBuilder)>($r86);

        $r93 = interfaceinvoke r291.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.symbols.IrPropertySymbol getSymbol()>();

        interfaceinvoke r296.<org.jetbrains.kotlin.ir.declarations.IrField: void setCorrespondingPropertySymbol(org.jetbrains.kotlin.ir.symbols.IrPropertySymbol)>($r93);

        $r94 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationParent) r4;

        interfaceinvoke r296.<org.jetbrains.kotlin.ir.declarations.IrField: void setParent(org.jetbrains.kotlin.ir.declarations.IrDeclarationParent)>($r94);

        $r298 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke r291.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setBackingField(org.jetbrains.kotlin.ir.declarations.IrField)>(r296);

        r299 = r291;

        $r95 = new org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder;

        specialinvoke $r95.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void <init>()>();

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<get-");

        $r98 = interfaceinvoke r299.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.name.Name getName()>();

        $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r98);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        $r102 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name special(java.lang.String)>($r101);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r102, "Name.special(\"<get-${this@addGetter.name}>\")");

        virtualinvoke $r95.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setName(org.jetbrains.kotlin.name.Name)>($r102);

        virtualinvoke $r95.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setReturnType(org.jetbrains.kotlin.ir.types.IrType)>(r5);

        $r103 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PRIVATE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r103, "Visibilities.PRIVATE");

        virtualinvoke $r95.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setVisibility(org.jetbrains.kotlin.descriptors.Visibility)>($r103);

        $r104 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR INSTANCE>;

        $r105 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin) $r104;

        virtualinvoke $r95.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setOrigin(org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin)>($r105);

        r302 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl buildFun$default(org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder,org.jetbrains.kotlin.descriptors.FunctionDescriptor,int,java.lang.Object)>($r95, null, 1, null);

        z66 = 0;

        $r106 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) r302;

        interfaceinvoke r299.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setGetter(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>($r106);

        $r107 = interfaceinvoke r299.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.symbols.IrPropertySymbol getSymbol()>();

        virtualinvoke r302.<org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl: void setCorrespondingPropertySymbol(org.jetbrains.kotlin.ir.symbols.IrPropertySymbol)>($r107);

        $r108 = interfaceinvoke r299.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrDeclarationParent getParent()>();

        virtualinvoke r302.<org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl: void setParent(org.jetbrains.kotlin.ir.declarations.IrDeclarationParent)>($r108);

        r304 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) r302;

        $r109 = interfaceinvoke r4.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.ir.declarations.IrValueParameter getThisReceiver()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r109);

        $r110 = (org.jetbrains.kotlin.ir.declarations.IrFunction) r304;

        $r306 = staticinvoke <org.jetbrains.kotlin.backend.common.ir.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrValueParameter copyTo$default(org.jetbrains.kotlin.ir.declarations.IrValueParameter,org.jetbrains.kotlin.ir.declarations.IrFunction,org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin,int,int,int,org.jetbrains.kotlin.name.Name,java.util.Map,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.expressions.IrExpressionBody,boolean,boolean,int,java.lang.Object)>($r109, $r110, null, 0, 0, 0, null, null, null, null, null, 0, 0, 4094, null);

        interfaceinvoke r304.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: void setDispatchReceiverParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter)>($r306);

        $r111 = new org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder;

        $r112 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext getContext()>();

        $r113 = (org.jetbrains.kotlin.ir.builders.IrGeneratorContext) $r112;

        $r114 = interfaceinvoke r304.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r115 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r114;

        specialinvoke $r111.<org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.symbols.IrSymbol,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r113, $r115, 0, 0, 12, null);

        $r307 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r111;

        $i5 = virtualinvoke $r307.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getStartOffset()>();

        $i6 = virtualinvoke $r307.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getEndOffset()>();

        z71 = 0;

        $r116 = new org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder;

        $r117 = virtualinvoke $r307.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.IrGeneratorContext getContext()>();

        $r118 = virtualinvoke $r307.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.Scope getScope()>();

        specialinvoke $r116.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.builders.Scope,int,int)>($r117, $r118, $i5, $i6);

        z72 = 0;

        $r121 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r116;

        $r122 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r116;

        $r120 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r116;

        $r119 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) $r306;

        $r123 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r120, $r119);

        $r124 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r123;

        $r125 = interfaceinvoke r291.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrField getBackingField()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r125);

        $r126 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetFieldImpl irGetField(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.declarations.IrField)>($r122, $r124, $r125);

        $r127 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r126;

        $r128 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrReturnImpl irReturn(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.expressions.IrExpression)>($r121, $r127);

        $r129 = (org.jetbrains.kotlin.ir.IrStatement) $r128;

        virtualinvoke $r116.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void unaryPlus(org.jetbrains.kotlin.ir.IrStatement)>($r129);

        $r310 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r130 = virtualinvoke $r116.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: org.jetbrains.kotlin.ir.expressions.IrBlockBody doBuild()>();

        $r131 = (org.jetbrains.kotlin.ir.expressions.IrBody) $r130;

        interfaceinvoke r304.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: void setBody(org.jetbrains.kotlin.ir.expressions.IrBody)>($r131);

        $r132 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r311 = r291;

        $r133 = new org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder;

        specialinvoke $r133.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void <init>()>();

        $r134 = new java.lang.StringBuilder;

        specialinvoke $r134.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<set-");

        $r136 = interfaceinvoke r311.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.name.Name getName()>();

        $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r136);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        $r140 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name special(java.lang.String)>($r139);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r140, "Name.special(\"<set-${this@addSetter.name}>\")");

        virtualinvoke $r133.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setName(org.jetbrains.kotlin.name.Name)>($r140);

        $r141 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext getContext()>();

        $r142 = interfaceinvoke $r141.<org.jetbrains.kotlin.backend.common.extensions.IrPluginContext: org.jetbrains.kotlin.ir.descriptors.IrBuiltIns getIrBuiltIns()>();

        $r143 = virtualinvoke $r142.<org.jetbrains.kotlin.ir.descriptors.IrBuiltIns: org.jetbrains.kotlin.ir.types.IrType getUnitType()>();

        virtualinvoke $r133.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setReturnType(org.jetbrains.kotlin.ir.types.IrType)>($r143);

        $r144 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PRIVATE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r144, "Visibilities.PRIVATE");

        virtualinvoke $r133.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setVisibility(org.jetbrains.kotlin.descriptors.Visibility)>($r144);

        $r145 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR INSTANCE>;

        $r146 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin) $r145;

        virtualinvoke $r133.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setOrigin(org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin)>($r146);

        r314 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl buildFun$default(org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder,org.jetbrains.kotlin.descriptors.FunctionDescriptor,int,java.lang.Object)>($r133, null, 1, null);

        z80 = 0;

        $r147 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) r314;

        interfaceinvoke r311.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setSetter(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>($r147);

        $r148 = interfaceinvoke r311.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrDeclarationParent getParent()>();

        virtualinvoke r314.<org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl: void setParent(org.jetbrains.kotlin.ir.declarations.IrDeclarationParent)>($r148);

        r316 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) r314;

        $r149 = interfaceinvoke r4.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.ir.declarations.IrValueParameter getThisReceiver()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r149);

        $r150 = (org.jetbrains.kotlin.ir.declarations.IrFunction) r316;

        $r318 = staticinvoke <org.jetbrains.kotlin.backend.common.ir.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrValueParameter copyTo$default(org.jetbrains.kotlin.ir.declarations.IrValueParameter,org.jetbrains.kotlin.ir.declarations.IrFunction,org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin,int,int,int,org.jetbrains.kotlin.name.Name,java.util.Map,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.expressions.IrExpressionBody,boolean,boolean,int,java.lang.Object)>($r149, $r150, null, 0, 0, 0, null, null, null, null, null, 0, 0, 4094, null);

        interfaceinvoke r316.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: void setDispatchReceiverParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter)>($r318);

        $r151 = (org.jetbrains.kotlin.ir.declarations.IrFunction) r316;

        $r319 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.IrValueParameter addValueParameter$default(org.jetbrains.kotlin.ir.declarations.IrFunction,java.lang.String,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin,int,java.lang.Object)>($r151, "value", r5, null, 4, null);

        $r152 = new org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder;

        $r153 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext getContext()>();

        $r154 = (org.jetbrains.kotlin.ir.builders.IrGeneratorContext) $r153;

        $r155 = interfaceinvoke r316.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r156 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r155;

        specialinvoke $r152.<org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.symbols.IrSymbol,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r154, $r156, 0, 0, 12, null);

        $r320 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r152;

        $i7 = virtualinvoke $r320.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getStartOffset()>();

        i8 = virtualinvoke $r320.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getEndOffset()>();

        $r157 = new org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder;

        $r158 = virtualinvoke $r320.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.IrGeneratorContext getContext()>();

        $r159 = virtualinvoke $r320.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.Scope getScope()>();

        specialinvoke $r157.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.builders.Scope,int,int)>($r158, $r159, $i7, i8);

        r321 = $r157;

        $r162 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) r321;

        $r161 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) r321;

        $r160 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) $r318;

        $r163 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r161, $r160);

        $r164 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r163;

        $r165 = interfaceinvoke r291.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrField getBackingField()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r165);

        $r167 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) r321;

        $r166 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) $r319;

        $r168 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r167, $r166);

        $r169 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r168;

        $r170 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrSetFieldImpl irSetField(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.declarations.IrField,org.jetbrains.kotlin.ir.expressions.IrExpression)>($r162, $r164, $r165, $r169);

        $r171 = (org.jetbrains.kotlin.ir.IrStatement) $r170;

        virtualinvoke r321.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void unaryPlus(org.jetbrains.kotlin.ir.IrStatement)>($r171);

        $r323 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r172 = virtualinvoke r321.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: org.jetbrains.kotlin.ir.expressions.IrBlockBody doBuild()>();

        $r173 = (org.jetbrains.kotlin.ir.expressions.IrBody) $r172;

        interfaceinvoke r316.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: void setBody(org.jetbrains.kotlin.ir.expressions.IrBody)>($r173);

        $r174 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r175 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r176 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer) r4;

        r325 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction addFunction$default(org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer,java.lang.String,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.descriptors.Modality,org.jetbrains.kotlin.descriptors.Visibility,boolean,boolean,boolean,org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin,int,java.lang.Object)>($r176, r1, r3, null, null, 0, 0, 0, null, 252, null);

        $r177 = interfaceinvoke r325.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.declarations.IrValueParameter getDispatchReceiverParameter()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r177);

        r327 = $r177;

        $r178 = interfaceinvoke r325.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: java.util.List getAnnotations()>();

        $r179 = (java.util.Collection) $r178;

        $i2 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: int getStartOffset()>();

        $r180 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrConstructorCall irLiveLiteralInfoAnnotation(java.lang.String,int)>(r1, $i2);

        $r181 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r179, $r180);

        interfaceinvoke r325.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: void setAnnotations(java.util.List)>($r181);

        $r182 = new org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder;

        $r183 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext getContext()>();

        $r184 = (org.jetbrains.kotlin.ir.builders.IrGeneratorContext) $r183;

        $r185 = interfaceinvoke r325.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r186 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r185;

        specialinvoke $r182.<org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.symbols.IrSymbol,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r184, $r186, 0, 0, 12, null);

        $r328 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r182;

        $i9 = virtualinvoke $r328.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getStartOffset()>();

        $i10 = virtualinvoke $r328.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getEndOffset()>();

        $r187 = new org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder;

        $r188 = virtualinvoke $r328.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.IrGeneratorContext getContext()>();

        $r189 = virtualinvoke $r328.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.Scope getScope()>();

        specialinvoke $r187.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.builders.Scope,int,int)>($r188, $r189, $i9, $i10);

        $r192 = (org.jetbrains.kotlin.ir.builders.IrStatementsBuilder) $r187;

        $r193 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r187;

        $r191 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r187;

        $r190 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) r327;

        $r194 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r191, $r190);

        $r195 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r194;

        $r196 = interfaceinvoke r291.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getGetter()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r196);

        $r197 = interfaceinvoke $r196.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r198 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.IrCall irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol)>($r193, r5, $r195, $r197);

        $r199 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r198;

        $r331 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.declarations.IrVariable irTemporary$default(org.jetbrains.kotlin.ir.builders.IrStatementsBuilder,org.jetbrains.kotlin.ir.expressions.IrExpression,java.lang.String,org.jetbrains.kotlin.types.KotlinType,org.jetbrains.kotlin.ir.types.IrType,int,java.lang.Object)>($r192, $r199, null, null, null, 14, null);

        $r201 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r187;

        $r200 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) $r331;

        $r202 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r201, $r200);

        r332 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r187;

        i11 = virtualinvoke r332.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getStartOffset()>();

        $i12 = virtualinvoke r332.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getEndOffset()>();

        $r333 = (org.jetbrains.kotlin.ir.expressions.IrStatementOrigin) null;

        $r203 = new org.jetbrains.kotlin.ir.builders.IrBlockBuilder;

        $r204 = virtualinvoke r332.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.IrGeneratorContext getContext()>();

        $r205 = virtualinvoke r332.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.Scope getScope()>();

        specialinvoke $r203.<org.jetbrains.kotlin.ir.builders.IrBlockBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.builders.Scope,int,int,org.jetbrains.kotlin.ir.expressions.IrStatementOrigin,org.jetbrains.kotlin.ir.types.IrType,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r204, $r205, i11, $i12, $r333, r5, 0, 64, null);

        r9 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r202;

        r10 = r5;

        r11 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r187;

        $r207 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r203;

        $r206 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol liveLiteral>;

        r335 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression irCall(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol)>($r207, $r206);

        z1 = 0;

        z2 = 0;

        $r208 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r203;

        $r209 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrConstImpl irString(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,java.lang.String)>($r208, r1);

        $r210 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r209;

        interfaceinvoke r335.<org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(0, $r210);

        $r213 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r203;

        $r212 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r203;

        $r211 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) r327;

        $r214 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r212, $r211);

        $r215 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r214;

        $r216 = interfaceinvoke r7.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getGetter()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r216);

        $r217 = interfaceinvoke $r216.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r218 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.IrCall irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol)>($r213, r3, $r215, $r217);

        $r219 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r218;

        interfaceinvoke r335.<org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(1, $r219);

        interfaceinvoke r335.<org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression: void putTypeArgument(int,org.jetbrains.kotlin.ir.types.IrType)>(0, r3);

        $r220 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r13 = r335;

        $r222 = (org.jetbrains.kotlin.ir.builders.IrStatementsBuilder) $r203;

        $r221 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r13;

        r336 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.declarations.IrVariable irTemporary$default(org.jetbrains.kotlin.ir.builders.IrStatementsBuilder,org.jetbrains.kotlin.ir.expressions.IrExpression,java.lang.String,org.jetbrains.kotlin.types.KotlinType,org.jetbrains.kotlin.ir.types.IrType,int,java.lang.Object)>($r222, $r221, null, null, null, 14, null);

        $r225 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r203;

        $r224 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r203;

        $r223 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) r327;

        $r226 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r224, $r223);

        $r227 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r226;

        $r228 = interfaceinvoke r291.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getSetter()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r228);

        $r229 = interfaceinvoke $r228.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r231 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r203;

        $r230 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) r336;

        $r232 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r231, $r230);

        $r233 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r232;

        $r234 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.IrCall irSet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol,org.jetbrains.kotlin.ir.expressions.IrExpression)>($r225, r5, $r227, $r229, $r233);

        $r235 = (org.jetbrains.kotlin.ir.IrStatement) $r234;

        virtualinvoke $r203.<org.jetbrains.kotlin.ir.builders.IrBlockBuilder: void unaryPlus(org.jetbrains.kotlin.ir.IrStatement)>($r235);

        $r237 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r203;

        $r236 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) r336;

        $r238 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r237, $r236);

        $r239 = (org.jetbrains.kotlin.ir.IrStatement) $r238;

        virtualinvoke $r203.<org.jetbrains.kotlin.ir.builders.IrBlockBuilder: void unaryPlus(org.jetbrains.kotlin.ir.IrStatement)>($r239);

        r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r240 = virtualinvoke $r203.<org.jetbrains.kotlin.ir.builders.IrBlockBuilder: org.jetbrains.kotlin.ir.expressions.IrContainerExpression doBuild()>();

        $r243 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r240;

        $r242 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r187;

        $r241 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) $r331;

        $r244 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl irGet(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r242, $r241);

        $r245 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r244;

        r15 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrIfThenElseImpl irIfNull(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.expressions.IrExpression)>(r11, r10, r9, $r243, $r245);

        $r246 = new org.jetbrains.kotlin.ir.expressions.impl.IrCallImpl;

        $r249 = (org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol) r6;

        $r247 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_ITERATOR: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_ITERATOR INSTANCE>;

        $r248 = (org.jetbrains.kotlin.ir.expressions.IrStatementOrigin) $r247;

        specialinvoke $r246.<org.jetbrains.kotlin.ir.expressions.impl.IrCallImpl: void <init>(int,int,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol,org.jetbrains.kotlin.ir.expressions.IrStatementOrigin,org.jetbrains.kotlin.ir.symbols.IrClassSymbol,int,kotlin.jvm.internal.DefaultConstructorMarker)>(-1, -1, r3, $r249, $r248, null, 32, null);

        r337 = $r246;

        $r250 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r15;

        virtualinvoke r337.<org.jetbrains.kotlin.ir.expressions.impl.IrCallImpl: void setDispatchReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r250);

        $r251 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r338 = r337;

        $r253 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r187;

        $r252 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r338;

        $r254 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.impl.IrReturnImpl irReturn(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.expressions.IrExpression)>($r253, $r252);

        $r255 = (org.jetbrains.kotlin.ir.IrStatement) $r254;

        virtualinvoke $r187.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void unaryPlus(org.jetbrains.kotlin.ir.IrStatement)>($r255);

        r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r256 = virtualinvoke $r187.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: org.jetbrains.kotlin.ir.expressions.IrBlockBody doBuild()>();

        $r257 = (org.jetbrains.kotlin.ir.expressions.IrBody) $r256;

        interfaceinvoke r325.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: void setBody(org.jetbrains.kotlin.ir.expressions.IrBody)>($r257);

        $r258 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r325;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitConst(org.jetbrains.kotlin.ir.expressions.IrConst)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrConst r1, $r9;
        boolean z0, $z2, $z3, z4, z5, z6;
        org.jetbrains.kotlin.ir.expressions.IrConstKind$Null $r2;
        androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor $r3;
        org.jetbrains.kotlin.ir.expressions.IrConstKind $r4, r41;
        java.lang.String $r5, $r26, $r38, r43, r46;
        java.lang.Object $r6, $r7;
        java.lang.Boolean $r8;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r10, $r15, $r16, $r17, $r19, $r40;
        org.jetbrains.kotlin.ir.types.IrType $r11, $r13;
        org.jetbrains.kotlin.ir.expressions.impl.IrCallImpl $r12, r48;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r14;
        org.jetbrains.kotlin.ir.declarations.IrFile $r18, r44;
        org.jetbrains.kotlin.ir.SourceManager$FileEntry $r20;
        java.lang.StringBuilder $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        java.lang.IllegalStateException $r37;
        java.lang.Throwable $r39;
        kotlin.Pair r42;
        org.jetbrains.kotlin.ir.SourceRangeInfo r45;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r47;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConst;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        r41 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: org.jetbrains.kotlin.ir.expressions.IrConstKind getKind()>();

        $r2 = <org.jetbrains.kotlin.ir.expressions.IrConstKind$Null: org.jetbrains.kotlin.ir.expressions.IrConstKind$Null INSTANCE>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, $r2);

        if $z2 == 0 goto label1;

        $r40 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        return $r40;

     label1:
        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor keyVisitor>;

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: org.jetbrains.kotlin.ir.expressions.IrConstKind getKind()>();

        $r5 = virtualinvoke $r4.<org.jetbrains.kotlin.ir.expressions.IrConstKind: java.lang.String getAsString()>();

        r42 = virtualinvoke $r3.<androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor: kotlin.Pair buildPath(java.lang.String,java.lang.String,java.lang.String)>($r5, "$", "-");

        $r6 = virtualinvoke r42.<kotlin.Pair: java.lang.Object component1()>();

        r43 = (java.lang.String) $r6;

        $r7 = virtualinvoke r42.<kotlin.Pair: java.lang.Object component2()>();

        $r8 = (java.lang.Boolean) $r7;

        z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if z0 != 0 goto label4;

        $r18 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrFile currentFile>;

        if $r18 == null goto label2;

        goto label3;

     label2:
        $r19 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        return $r19;

     label3:
        r44 = $r18;

        $r20 = interfaceinvoke r44.<org.jetbrains.kotlin.ir.declarations.IrFile: org.jetbrains.kotlin.ir.SourceManager$FileEntry getFileEntry()>();

        $i2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: int getStartOffset()>();

        $i3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: int getEndOffset()>();

        r45 = interfaceinvoke $r20.<org.jetbrains.kotlin.ir.SourceManager$FileEntry: org.jetbrains.kotlin.ir.SourceRangeInfo getSourceRangeInfo(int,int)>($i2, $i3);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate live literal key found: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caused by element at: ");

        $r26 = virtualinvoke r45.<org.jetbrains.kotlin.ir.SourceRangeInfo: java.lang.String getFilePath()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i4 = virtualinvoke r45.<org.jetbrains.kotlin.ir.SourceRangeInfo: int getStartLineNumber()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i5 = virtualinvoke r45.<org.jetbrains.kotlin.ir.SourceRangeInfo: int getStartColumnNumber()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("If you encounter this error, please file a bug at ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("https://issuetracker.google.com/issues?q=componentid:610764\n");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try adding the `@NoLiveLiterals` annotation around the surrounding code to ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("avoid this exception.");

        r46 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        z4 = 0;

        $r37 = new java.lang.IllegalStateException;

        $r38 = virtualinvoke r46.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r38);

        $r39 = (java.lang.Throwable) $r37;

        throw $r39;

     label4:
        $z3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean liveLiteralsEnabled>;

        if $z3 != 0 goto label5;

        $r17 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        return $r17;

     label5:
        $r9 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: org.jetbrains.kotlin.ir.expressions.IrConst copy()>();

        $r10 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r9;

        $r11 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: org.jetbrains.kotlin.ir.types.IrType getType()>();

        r47 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction irLiveLiteralGetter(java.lang.String,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.types.IrType)>(r43, $r10, $r11);

        $r12 = new org.jetbrains.kotlin.ir.expressions.impl.IrCallImpl;

        $i0 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: int getStartOffset()>();

        $i1 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: int getEndOffset()>();

        $r13 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: org.jetbrains.kotlin.ir.types.IrType getType()>();

        $r14 = interfaceinvoke r47.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        specialinvoke $r12.<org.jetbrains.kotlin.ir.expressions.impl.IrCallImpl: void <init>(int,int,org.jetbrains.kotlin.ir.types.IrType,org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol,org.jetbrains.kotlin.ir.expressions.IrStatementOrigin,org.jetbrains.kotlin.ir.symbols.IrClassSymbol,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i0, $i1, $r13, $r14, null, null, 48, null);

        r48 = $r12;

        z5 = 0;

        z6 = 0;

        $r15 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrExpression irGetLiveLiteralsClass()>();

        virtualinvoke r48.<org.jetbrains.kotlin.ir.expressions.impl.IrCallImpl: void setDispatchReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r15);

        $r16 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r48;

        return $r16;
    }

    public org.jetbrains.kotlin.ir.IrStatement visitClass(org.jetbrains.kotlin.ir.declarations.IrClass)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrClass r1;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r7;
        org.jetbrains.kotlin.name.Name $r5;
        java.lang.String $r6, $r8;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1 $r9;
        kotlin.jvm.functions.Function0 $r10;
        java.lang.Object $r11;
        org.jetbrains.kotlin.ir.IrStatement $r12, $r13, $r14;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r2 = (org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer) r1;

        $z0 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean hasNoLiveLiteralsAnnotation(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer)>($r2);

        if $z0 == 0 goto label1;

        $r14 = (org.jetbrains.kotlin.ir.IrStatement) r1;

        return $r14;

     label1:
        $z1 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: boolean isAnnotationClass(org.jetbrains.kotlin.ir.declarations.IrClass)>(r1);

        if $z1 == 0 goto label2;

        $r13 = (org.jetbrains.kotlin.ir.IrStatement) r1;

        return $r13;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class-");

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.name.Name getName()>();

        $r6 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1;

        specialinvoke $r9.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrClass)>(r0, r1);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object siblings(java.lang.String,kotlin.jvm.functions.Function0)>($r8, $r10);

        $r12 = (org.jetbrains.kotlin.ir.IrStatement) $r11;

        return $r12;
    }

    public java.util.Set makeKeySet()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        boolean z0;
        java.util.LinkedHashSet $r1;
        java.util.Set $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        z0 = 0;

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public org.jetbrains.kotlin.ir.declarations.IrFile visitFile(org.jetbrains.kotlin.ir.declarations.IrFile)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrFile r1, $r15;
        java.lang.String r2, r3;
        java.util.Set r4;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r5;
        boolean $z0;
        org.jetbrains.kotlin.ir.SourceManager$FileEntry $r6;
        char[] $r7;
        java.lang.CharSequence $r8;
        java.util.List $r9;
        java.lang.Object $r10, $r14;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1 $r11;
        androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor $r12;
        kotlin.jvm.functions.Function0 $r13;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFile;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r5 = (org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer) r1;

        $z0 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean hasNoLiveLiteralsAnnotation(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer)>($r5);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrFile: org.jetbrains.kotlin.ir.SourceManager$FileEntry getFileEntry()>();

        r2 = interfaceinvoke $r6.<org.jetbrains.kotlin.ir.SourceManager$FileEntry: java.lang.String getName()>();

        $r8 = (java.lang.CharSequence) r2;

        $r7 = newarray (char)[1];

        $r7[0] = 47;

        $r9 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)>($r8, $r7, 0, 0, 6, null);

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r9);

        r3 = (java.lang.String) $r10;

        r4 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.util.Set makeKeySet()>();

        $r12 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor keyVisitor>;

        $r11 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1;

        specialinvoke $r11.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,org.jetbrains.kotlin.ir.declarations.IrFile,java.util.Set)>(r0, r3, r1, r4);

        $r13 = (kotlin.jvm.functions.Function0) $r11;

        $r14 = virtualinvoke $r12.<androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor: java.lang.Object root(java.util.Set,kotlin.jvm.functions.Function0)>(r4, $r13);

        $r15 = (org.jetbrains.kotlin.ir.declarations.IrFile) $r14;

        return $r15;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitTry(org.jetbrains.kotlin.ir.expressions.IrTry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrTry r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1 $r2;
        kotlin.jvm.functions.Function0 $r3, $r7, $r10;
        java.lang.Object $r4, $r11;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r12, $r13;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 $r6;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3 $r9;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrTry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "aTry");

        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrTry)>(r0, r1);

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("try", $r3);

        $r5 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r4;

        interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTry: void setTryResult(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r5);

        $r6 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2;

        specialinvoke $r6.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrTry)>(r0, r1);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object siblings(kotlin.jvm.functions.Function0)>($r7);

        $r9 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3;

        specialinvoke $r9.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrTry)>(r0, r1);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("finally", $r10);

        $r12 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r11;

        interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTry: void setFinallyExpression(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r12);

        $r13 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        return $r13;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitDelegatingConstructorCall(org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall r1;
        org.jetbrains.kotlin.ir.declarations.IrConstructor r2;
        java.lang.String r3, $r15;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r4, $r7;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r5, $r6;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r8;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration $r9;
        org.jetbrains.kotlin.ir.declarations.IrClass $r10;
        boolean $z0;
        org.jetbrains.kotlin.name.Name $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 $r16;
        kotlin.jvm.functions.Function0 $r17;
        java.lang.Object $r18;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r19, $r20;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall: org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol getSymbol()>();

        $r5 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r4;

        $r6 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r5);

        $r7 = (org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol) $r6;

        $r8 = interfaceinvoke $r7.<org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        r2 = (org.jetbrains.kotlin.ir.declarations.IrConstructor) $r8;

        $r9 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r2;

        $r10 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrClass getParentAsClass(org.jetbrains.kotlin.ir.declarations.IrDeclaration)>($r9);

        $z0 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: boolean isAnnotationClass(org.jetbrains.kotlin.ir.declarations.IrClass)>($r10);

        if $z0 == 0 goto label1;

        $r20 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        return $r20;

     label1:
        $r11 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrConstructor: org.jetbrains.kotlin.name.Name getName()>();

        r3 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call-");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1;

        specialinvoke $r16.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall)>(r0, r1);

        $r17 = (kotlin.jvm.functions.Function0) $r16;

        $r18 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r15, $r17);

        $r19 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r18;

        return $r19;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitEnumConstructorCall(org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall r1;
        org.jetbrains.kotlin.ir.declarations.IrConstructor r2;
        java.lang.String r3, $r13;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r4, $r7;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r5, $r6;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r8;
        org.jetbrains.kotlin.name.Name $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 $r14;
        kotlin.jvm.functions.Function0 $r15;
        java.lang.Object $r16;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r17;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall: org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol getSymbol()>();

        $r5 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r4;

        $r6 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r5);

        $r7 = (org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol) $r6;

        $r8 = interfaceinvoke $r7.<org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        r2 = (org.jetbrains.kotlin.ir.declarations.IrConstructor) $r8;

        $r9 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrConstructor: org.jetbrains.kotlin.name.Name getName()>();

        r3 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call-");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1;

        specialinvoke $r14.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall)>(r0, r1);

        $r15 = (kotlin.jvm.functions.Function0) $r14;

        $r16 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r13, $r15);

        $r17 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r16;

        return $r17;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitConstructorCall(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r1;
        org.jetbrains.kotlin.ir.declarations.IrConstructor r2;
        java.lang.String r3, $r15;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r4, $r7;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r5, $r6;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r8;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration $r9;
        org.jetbrains.kotlin.ir.declarations.IrClass $r10;
        boolean $z0;
        org.jetbrains.kotlin.name.Name $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 $r16;
        kotlin.jvm.functions.Function0 $r17;
        java.lang.Object $r18;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r19, $r20;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol getSymbol()>();

        $r5 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r4;

        $r6 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r5);

        $r7 = (org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol) $r6;

        $r8 = interfaceinvoke $r7.<org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        r2 = (org.jetbrains.kotlin.ir.declarations.IrConstructor) $r8;

        $r9 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r2;

        $r10 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrClass getParentAsClass(org.jetbrains.kotlin.ir.declarations.IrDeclaration)>($r9);

        $z0 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: boolean isAnnotationClass(org.jetbrains.kotlin.ir.declarations.IrClass)>($r10);

        if $z0 == 0 goto label1;

        $r20 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        return $r20;

     label1:
        $r11 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrConstructor: org.jetbrains.kotlin.name.Name getName()>();

        r3 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call-");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1;

        specialinvoke $r16.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrConstructorCall)>(r0, r1);

        $r17 = (kotlin.jvm.functions.Function0) $r16;

        $r18 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r15, $r17);

        $r19 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r18;

        return $r19;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitCall(org.jetbrains.kotlin.ir.expressions.IrCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrCall r1;
        org.jetbrains.kotlin.ir.declarations.IrFunction r2;
        java.lang.String r3, $r12;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r4, $r7;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r5, $r6;
        org.jetbrains.kotlin.name.Name $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 $r13;
        kotlin.jvm.functions.Function0 $r14;
        java.lang.Object $r15;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r16;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r5 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r4;

        $r6 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r5);

        $r7 = (org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol) $r6;

        r2 = interfaceinvoke $r7.<org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        $r8 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.name.Name getName()>();

        r3 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call-");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1;

        specialinvoke $r13.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrCall)>(r0, r1);

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        $r15 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r12, $r14);

        $r16 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r15;

        return $r16;
    }

    public org.jetbrains.kotlin.ir.IrStatement visitEnumEntry(org.jetbrains.kotlin.ir.declarations.IrEnumEntry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrEnumEntry r1;
        java.lang.StringBuilder $r2, $r3, $r6;
        org.jetbrains.kotlin.name.Name $r4;
        java.lang.String $r5, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1 $r8;
        kotlin.jvm.functions.Function0 $r9;
        java.lang.Object $r10;
        org.jetbrains.kotlin.ir.IrStatement $r11;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrEnumEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("entry-");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrEnumEntry: org.jetbrains.kotlin.name.Name getName()>();

        $r5 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrEnumEntry)>(r0, r1);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r7, $r9);

        $r11 = (org.jetbrains.kotlin.ir.IrStatement) $r10;

        return $r11;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitVararg(org.jetbrains.kotlin.ir.expressions.IrVararg)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrVararg r1;
        boolean $z0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 $r2;
        kotlin.jvm.functions.Function0 $r3;
        java.lang.Object $r4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrVararg;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $z0 = r1 instanceof org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl;

        if $z0 != 0 goto label1;

        $r6 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        return $r6;

     label1:
        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrVararg)>(r0, r1);

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("vararg", $r3);

        $r5 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r4;

        return $r5;
    }

    public org.jetbrains.kotlin.ir.IrStatement visitSimpleFunction(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r1;
        java.lang.String r2, r3, $r14;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r4;
        boolean $z0, $z1;
        org.jetbrains.kotlin.name.Name $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1 $r9;
        kotlin.jvm.functions.Function0 $r10;
        java.lang.Object $r11;
        org.jetbrains.kotlin.ir.IrStatement $r12, $r13;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r4 = (org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer) r1;

        $z0 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean hasNoLiveLiteralsAnnotation(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer)>($r4);

        if $z0 == 0 goto label1;

        $r13 = (org.jetbrains.kotlin.ir.IrStatement) r1;

        return $r13;

     label1:
        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.name.Name getName()>();

        r2 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r5);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, "<anonymous>");

        if $z1 == 0 goto label2;

        $r14 = "lambda";

        goto label3;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fun-");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r3 = $r14;

        $r9 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1;

        specialinvoke $r9.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>(r0, r1);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>(r3, $r10);

        $r12 = (org.jetbrains.kotlin.ir.IrStatement) $r11;

        return $r12;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitLoop(org.jetbrains.kotlin.ir.expressions.IrLoop)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrLoop r1;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin r2;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$WHILE_LOOP $r3;
        boolean $z0, $z1;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_INNER_WHILE $r4;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 $r5;
        kotlin.jvm.functions.Function0 $r6, $r9;
        java.lang.Object $r7, $r10;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 $r8;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r11;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrLoop;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loop");

        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrLoop: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        $r3 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$WHILE_LOOP: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$WHILE_LOOP INSTANCE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r4 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_INNER_WHILE: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_INNER_WHILE INSTANCE>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z1 == 0 goto label3;

     label2:
        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrLoop)>(r0, r1);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("loop", $r9);

        $r11 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r10;

        goto label4;

     label3:
        $r5 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2;

        specialinvoke $r5.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrLoop)>(r0, r1);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        $r7 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("loop", $r6);

        $r11 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r7;

     label4:
        return $r11;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitStringConcatenation(org.jetbrains.kotlin.ir.expressions.IrStringConcatenation)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrStringConcatenation r1;
        boolean $z0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 $r2;
        kotlin.jvm.functions.Function0 $r3;
        java.lang.Object $r4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $z0 = r1 instanceof org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl;

        if $z0 != 0 goto label1;

        $r6 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        return $r6;

     label1:
        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrStringConcatenation)>(r0, r1);

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("str", $r3);

        $r5 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r4;

        return $r5;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitWhen(org.jetbrains.kotlin.ir.expressions.IrWhen)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrWhen r1;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin r2;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$ANDAND $r3;
        boolean $z0, $z1, $z2;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OROR $r4;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$IF $r5;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2 $r6;
        kotlin.jvm.functions.Function0 $r7, $r10;
        java.lang.Object $r8, $r11, $r14, $r21;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1 $r9;
        java.util.List $r12, $r13, $r19, $r20;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r15, $r22;
        org.jetbrains.kotlin.ir.expressions.IrBranch $r16, $r17, $r23, $r24;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r26;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrWhen;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        $r3 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$ANDAND: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$ANDAND INSTANCE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $z0 == 0 goto label1;

        $r19 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r20 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(0);

        $r23 = (org.jetbrains.kotlin.ir.expressions.IrBranch) $r21;

        $r22 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) r0;

        $r24 = interfaceinvoke $r23.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrBranch transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r22, null);

        interfaceinvoke $r19.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r24);

        $r26 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        goto label4;

     label1:
        $r4 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OROR: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OROR INSTANCE>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z1 == 0 goto label2;

        $r12 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r13 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(1);

        $r16 = (org.jetbrains.kotlin.ir.expressions.IrBranch) $r14;

        $r15 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) r0;

        $r17 = interfaceinvoke $r16.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrBranch transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r15, null);

        interfaceinvoke $r12.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1, $r17);

        $r26 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        goto label4;

     label2:
        $r5 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$IF: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$IF INSTANCE>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z2 == 0 goto label3;

        $r9 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1;

        specialinvoke $r9.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrWhen)>(r0, r1);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object siblings(java.lang.String,kotlin.jvm.functions.Function0)>("if", $r10);

        $r26 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r11;

        goto label4;

     label3:
        $r6 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2;

        specialinvoke $r6.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrWhen)>(r0, r1);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object siblings(java.lang.String,kotlin.jvm.functions.Function0)>("when", $r7);

        $r26 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r8;

     label4:
        return $r26;
    }

    public org.jetbrains.kotlin.ir.IrStatement visitValueParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r1;
        java.lang.StringBuilder $r2, $r3, $r6;
        org.jetbrains.kotlin.name.Name $r4;
        java.lang.String $r5, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1 $r8;
        kotlin.jvm.functions.Function0 $r9;
        java.lang.Object $r10;
        org.jetbrains.kotlin.ir.IrStatement $r11;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrValueParameter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("param-");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: org.jetbrains.kotlin.name.Name getName()>();

        $r5 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrValueParameter)>(r0, r1);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r7, $r9);

        $r11 = (org.jetbrains.kotlin.ir.IrStatement) $r10;

        return $r11;
    }

    public org.jetbrains.kotlin.ir.expressions.IrElseBranch visitElseBranch(org.jetbrains.kotlin.ir.expressions.IrElseBranch)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrElseBranch r1, $r8;
        org.jetbrains.kotlin.ir.expressions.impl.IrElseBranchImpl $r2;
        int $i0, $i1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1 $r4;
        kotlin.jvm.functions.Function0 $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrElseBranch;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "branch");

        $r2 = new org.jetbrains.kotlin.ir.expressions.impl.IrElseBranchImpl;

        $i0 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrElseBranch: int getStartOffset()>();

        $i1 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrElseBranch: int getEndOffset()>();

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrElseBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r4 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1;

        specialinvoke $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrElseBranch)>(r0, r1);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("else", $r5);

        $r7 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r6;

        specialinvoke $r2.<org.jetbrains.kotlin.ir.expressions.impl.IrElseBranchImpl: void <init>(int,int,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.expressions.IrExpression)>($i0, $i1, $r3, $r7);

        $r8 = (org.jetbrains.kotlin.ir.expressions.IrElseBranch) $r2;

        return $r8;
    }

    public org.jetbrains.kotlin.ir.expressions.IrBranch visitBranch(org.jetbrains.kotlin.ir.expressions.IrBranch)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrBranch r1, $r11;
        org.jetbrains.kotlin.ir.expressions.impl.IrBranchImpl $r2;
        int $i0, $i1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1 $r3;
        kotlin.jvm.functions.Function0 $r4, $r8;
        java.lang.Object $r5, $r9;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2 $r6;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r7, $r10;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBranch;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "branch");

        $r2 = new org.jetbrains.kotlin.ir.expressions.impl.IrBranchImpl;

        $i0 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBranch: int getStartOffset()>();

        $i1 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBranch: int getEndOffset()>();

        $r3 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1;

        specialinvoke $r3.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrBranch)>(r0, r1);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r5 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("cond", $r4);

        $r7 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r5;

        $r6 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2;

        specialinvoke $r6.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrBranch)>(r0, r1);

        $r8 = (kotlin.jvm.functions.Function0) $r6;

        $r9 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>("branch", $r8);

        $r10 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r9;

        specialinvoke $r2.<org.jetbrains.kotlin.ir.expressions.impl.IrBranchImpl: void <init>(int,int,org.jetbrains.kotlin.ir.expressions.IrExpression,org.jetbrains.kotlin.ir.expressions.IrExpression)>($i0, $i1, $r7, $r10);

        $r11 = (org.jetbrains.kotlin.ir.expressions.IrBranch) $r2;

        return $r11;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitComposite(org.jetbrains.kotlin.ir.expressions.IrComposite)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrComposite r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1 $r2;
        kotlin.jvm.functions.Function0 $r3;
        java.lang.Object $r4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrComposite;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrComposite)>(r0, r1);

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object siblings(kotlin.jvm.functions.Function0)>($r3);

        $r5 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r4;

        return $r5;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitBlock(org.jetbrains.kotlin.ir.expressions.IrBlock)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrBlock r1;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin r2;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP $r3;
        boolean $z0, $z1;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_INNER_WHILE $r4;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1 $r5;
        kotlin.jvm.functions.Function0 $r6;
        java.lang.Object $r7, $r10;
        java.util.List $r8, $r9;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r11;
        org.jetbrains.kotlin.ir.IrStatement $r12, $r13;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r15;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBlock;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        $r3 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP INSTANCE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r4 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_INNER_WHILE: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP_INNER_WHILE INSTANCE>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z1 == 0 goto label3;

     label2:
        $r8 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        $r9 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(1);

        $r12 = (org.jetbrains.kotlin.ir.IrStatement) $r10;

        $r11 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) r0;

        $r13 = interfaceinvoke $r12.<org.jetbrains.kotlin.ir.IrStatement: org.jetbrains.kotlin.ir.IrStatement transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r11, null);

        interfaceinvoke $r8.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1, $r13);

        $r15 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        goto label4;

     label3:
        $r5 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1;

        specialinvoke $r5.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrBlock)>(r0, r1);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        $r7 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object siblings(kotlin.jvm.functions.Function0)>($r6);

        $r15 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r7;

     label4:
        return $r15;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitSetVariable(org.jetbrains.kotlin.ir.expressions.IrSetVariable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrSetVariable r1;
        org.jetbrains.kotlin.ir.declarations.IrVariable r2;
        org.jetbrains.kotlin.name.Name r3;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin r4;
        org.jetbrains.kotlin.ir.symbols.IrVariableSymbol $r5, $r8;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r6, $r7;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration $r9;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FOR_LOOP_IMPLICIT_VARIABLE $r10;
        boolean $z0, $z1, $z2;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$IR_TEMPORARY_VARIABLE $r11;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FOR_LOOP_VARIABLE $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r16;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1 $r17;
        kotlin.jvm.functions.Function0 $r18;
        java.lang.Object $r19;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r20;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSetVariable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrSetVariable: org.jetbrains.kotlin.ir.symbols.IrVariableSymbol getSymbol()>();

        $r6 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r5;

        $r7 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r6);

        $r8 = (org.jetbrains.kotlin.ir.symbols.IrVariableSymbol) $r7;

        $r9 = interfaceinvoke $r8.<org.jetbrains.kotlin.ir.symbols.IrVariableSymbol: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration getOwner()>();

        r2 = (org.jetbrains.kotlin.ir.declarations.IrVariable) $r9;

        r3 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.name.Name getName()>();

        r4 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin getOrigin()>();

        $r10 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FOR_LOOP_IMPLICIT_VARIABLE: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FOR_LOOP_IMPLICIT_VARIABLE INSTANCE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, $r10);

        if $z0 == 0 goto label1;

        $r20 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        goto label4;

     label1:
        $r11 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$IR_TEMPORARY_VARIABLE: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$IR_TEMPORARY_VARIABLE INSTANCE>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, $r11);

        if $z1 == 0 goto label2;

        $r20 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        goto label4;

     label2:
        $r12 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FOR_LOOP_VARIABLE: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FOR_LOOP_VARIABLE INSTANCE>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, $r12);

        if $z2 == 0 goto label3;

        $r20 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r1;

        goto label4;

     label3:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set-");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1;

        specialinvoke $r17.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrSetVariable)>(r0, r1);

        $r18 = (kotlin.jvm.functions.Function0) $r17;

        $r19 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r16, $r18);

        $r20 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r19;

     label4:
        return $r20;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitSetField(org.jetbrains.kotlin.ir.expressions.IrSetField)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrSetField r1;
        org.jetbrains.kotlin.name.Name r2;
        org.jetbrains.kotlin.ir.symbols.IrFieldSymbol $r3, $r6;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r4, $r5;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r7;
        org.jetbrains.kotlin.ir.declarations.IrField $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1 $r13;
        kotlin.jvm.functions.Function0 $r14;
        java.lang.Object $r15;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r16;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSetField;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrSetField: org.jetbrains.kotlin.ir.symbols.IrFieldSymbol getSymbol()>();

        $r4 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r3;

        $r5 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r4);

        $r6 = (org.jetbrains.kotlin.ir.symbols.IrFieldSymbol) $r5;

        $r7 = interfaceinvoke $r6.<org.jetbrains.kotlin.ir.symbols.IrFieldSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r8 = (org.jetbrains.kotlin.ir.declarations.IrField) $r7;

        r2 = interfaceinvoke $r8.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.name.Name getName()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set-");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1;

        specialinvoke $r13.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrSetField)>(r0, r1);

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        $r15 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r12, $r14);

        $r16 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r15;

        return $r16;
    }

    public org.jetbrains.kotlin.ir.expressions.IrBody visitBlockBody(org.jetbrains.kotlin.ir.expressions.IrBlockBody)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1 $r2;
        kotlin.jvm.functions.Function0 $r3;
        java.lang.Object $r4;
        org.jetbrains.kotlin.ir.expressions.IrBody $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBlockBody;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrBlockBody)>(r0, r1);

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object siblings(kotlin.jvm.functions.Function0)>($r3);

        $r5 = (org.jetbrains.kotlin.ir.expressions.IrBody) $r4;

        return $r5;
    }

    public org.jetbrains.kotlin.ir.IrStatement visitVariable(org.jetbrains.kotlin.ir.declarations.IrVariable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrVariable r1;
        java.lang.StringBuilder $r2, $r3, $r6;
        org.jetbrains.kotlin.name.Name $r4;
        java.lang.String $r5, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1 $r8;
        kotlin.jvm.functions.Function0 $r9;
        java.lang.Object $r10;
        org.jetbrains.kotlin.ir.IrStatement $r11;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrVariable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("val-");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.name.Name getName()>();

        $r5 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrVariable)>(r0, r1);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r7, $r9);

        $r11 = (org.jetbrains.kotlin.ir.IrStatement) $r10;

        return $r11;
    }

    public org.jetbrains.kotlin.ir.IrStatement visitProperty(org.jetbrains.kotlin.ir.declarations.IrProperty)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrProperty r1;
        org.jetbrains.kotlin.ir.declarations.IrField r2;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r3, r4;
        java.lang.String r5, $r11;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r6;
        boolean $z0;
        org.jetbrains.kotlin.name.Name $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 $r12;
        kotlin.jvm.functions.Function0 $r13;
        java.lang.Object $r14;
        org.jetbrains.kotlin.ir.IrStatement $r15, $r16;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrProperty;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r6 = (org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer) r1;

        $z0 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean hasNoLiveLiteralsAnnotation(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer)>($r6);

        if $z0 == 0 goto label1;

        $r16 = (org.jetbrains.kotlin.ir.IrStatement) r1;

        return $r16;

     label1:
        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrField getBackingField()>();

        r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getGetter()>();

        r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getSetter()>();

        $r7 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.name.Name getName()>();

        r5 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.String asJvmFriendlyString(org.jetbrains.kotlin.name.Name)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("val-");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1;

        specialinvoke $r12.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrProperty,org.jetbrains.kotlin.ir.declarations.IrField,org.jetbrains.kotlin.ir.declarations.IrSimpleFunction,org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>(r0, r1, r2, r3, r4);

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        $r14 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>($r11, $r13);

        $r15 = (org.jetbrains.kotlin.ir.IrStatement) $r14;

        return $r15;
    }

    public void <init>(boolean, androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor, org.jetbrains.kotlin.backend.common.extensions.IrPluginContext, org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper, org.jetbrains.kotlin.resolve.BindingTrace)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r0;
        boolean z0;
        androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor r1;
        org.jetbrains.kotlin.backend.common.extensions.IrPluginContext r2;
        org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper r3;
        org.jetbrains.kotlin.resolve.BindingTrace r4;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r5, $r8;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r6, $r7, $r10, $r11, $r14, $r15, $r20, $r21, $r26, $r27;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol $r9, $r12, $r13, $r16, $r19, $r22, $r25, $r28;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r17, $r23;
        org.jetbrains.kotlin.name.FqName $r18, $r24;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor;

        r2 := @parameter2: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext;

        r3 := @parameter3: org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper;

        r4 := @parameter4: org.jetbrains.kotlin.resolve.BindingTrace;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "keyVisitor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "symbolRemapper");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "bindingTrace");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: void <init>(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext,org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper,org.jetbrains.kotlin.resolve.BindingTrace)>(r2, r3, r4);

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean liveLiteralsEnabled> = z0;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor keyVisitor> = r1;

        $r5 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getInternalFunction(java.lang.String)>("liveLiteral");

        $r6 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r5;

        $r7 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r6);

        $r8 = (org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol) $r7;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol liveLiteral> = $r8;

        $r9 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol getInternalClass(java.lang.String)>("LiveLiteralInfo");

        $r10 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r9;

        $r11 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r10);

        $r12 = (org.jetbrains.kotlin.ir.symbols.IrClassSymbol) $r11;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol liveLiteralInfoAnnotation> = $r12;

        $r13 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol getInternalClass(java.lang.String)>("LiveLiteralFileInfo");

        $r14 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r13;

        $r15 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r14);

        $r16 = (org.jetbrains.kotlin.ir.symbols.IrClassSymbol) $r15;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol liveLiteralFileInfoAnnotation> = $r16;

        $r17 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r18 = virtualinvoke $r17.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("State");

        $r19 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol getTopLevelClass(org.jetbrains.kotlin.name.FqName)>($r18);

        $r20 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r19;

        $r21 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r20);

        $r22 = (org.jetbrains.kotlin.ir.symbols.IrClassSymbol) $r21;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol stateInterface> = $r22;

        $r23 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r24 = virtualinvoke $r23.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("NoLiveLiterals");

        $r25 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol getTopLevelClass(org.jetbrains.kotlin.name.FqName)>($r24);

        $r26 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r25;

        $r27 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r26);

        $r28 = (org.jetbrains.kotlin.ir.symbols.IrClassSymbol) $r27;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrClassSymbol NoLiveLiteralsAnnotation> = $r28;

        return;
    }

    public static final org.jetbrains.kotlin.ir.IrStatement access$visitClass$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrClass)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrClass r1;
        org.jetbrains.kotlin.ir.IrStatement $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrClass;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.IrStatement visitClass(org.jetbrains.kotlin.ir.declarations.IrClass)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.declarations.IrClass access$getLiveLiteralsClass$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrClass $r1;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        $r1 = $r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrClass liveLiteralsClass>;

        return $r1;
    }

    public static final void access$setLiveLiteralsClass$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrClass)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrClass r1;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrClass;

        $r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrClass liveLiteralsClass> = r1;

        return;
    }

    public static final org.jetbrains.kotlin.ir.expressions.IrConstructorCall access$irLiveLiteralFileInfoAnnotation(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, java.lang.String)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        java.lang.String r1;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrConstructorCall irLiveLiteralFileInfoAnnotation(java.lang.String)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.declarations.IrFile access$getCurrentFile$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrFile $r1;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        $r1 = $r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrFile currentFile>;

        return $r1;
    }

    public static final void access$setCurrentFile$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrFile)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrFile r1;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrFile;

        $r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrFile currentFile> = r1;

        return;
    }

    public static final org.jetbrains.kotlin.ir.declarations.IrFile access$visitFile$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrFile)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrFile r1, $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrFile;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.declarations.IrFile visitFile(org.jetbrains.kotlin.ir.declarations.IrFile)>(r1);

        return $r2;
    }

    public static final boolean access$getLiveLiteralsEnabled$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        $z0 = $r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean liveLiteralsEnabled>;

        return $z0;
    }

    public static final java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function0 r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object enter(java.lang.String,kotlin.jvm.functions.Function0)>(r1, r2);

        return $r3;
    }

    public static final org.jetbrains.kotlin.ir.IrStatement access$visitEnumEntry$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrEnumEntry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrEnumEntry r1;
        org.jetbrains.kotlin.ir.IrStatement $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrEnumEntry;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.IrStatement visitEnumEntry(org.jetbrains.kotlin.ir.declarations.IrEnumEntry)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.IrStatement access$visitSimpleFunction$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r1;
        org.jetbrains.kotlin.ir.IrStatement $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.IrStatement visitSimpleFunction(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>(r1);

        return $r2;
    }

    public static final java.lang.Object access$siblings(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object siblings(kotlin.jvm.functions.Function0)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.expressions.IrExpression access$visitWhen$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrWhen)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.expressions.IrWhen r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrWhen;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.expressions.IrExpression visitWhen(org.jetbrains.kotlin.ir.expressions.IrWhen)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.IrStatement access$visitValueParameter$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrValueParameter)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r1;
        org.jetbrains.kotlin.ir.IrStatement $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrValueParameter;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.IrStatement visitValueParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.expressions.IrExpression access$visitComposite$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrComposite)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.expressions.IrComposite r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrComposite;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.expressions.IrExpression visitComposite(org.jetbrains.kotlin.ir.expressions.IrComposite)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.expressions.IrExpression access$visitBlock$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrBlock)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.expressions.IrBlock r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrBlock;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.expressions.IrExpression visitBlock(org.jetbrains.kotlin.ir.expressions.IrBlock)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.expressions.IrExpression access$visitSetVariable$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrSetVariable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.expressions.IrSetVariable r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrSetVariable;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.expressions.IrExpression visitSetVariable(org.jetbrains.kotlin.ir.expressions.IrSetVariable)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.expressions.IrExpression access$visitSetField$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrSetField)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.expressions.IrSetField r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrSetField;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.expressions.IrExpression visitSetField(org.jetbrains.kotlin.ir.expressions.IrSetField)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.expressions.IrBody access$visitBlockBody$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrBlockBody)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody r1;
        org.jetbrains.kotlin.ir.expressions.IrBody $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrBlockBody;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.expressions.IrBody visitBlockBody(org.jetbrains.kotlin.ir.expressions.IrBlockBody)>(r1);

        return $r2;
    }

    public static final org.jetbrains.kotlin.ir.IrStatement access$visitVariable$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrVariable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r0;
        org.jetbrains.kotlin.ir.declarations.IrVariable r1;
        org.jetbrains.kotlin.ir.IrStatement $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrVariable;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering: org.jetbrains.kotlin.ir.IrStatement visitVariable(org.jetbrains.kotlin.ir.declarations.IrVariable)>(r1);

        return $r2;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1: org.jetbrains.kotlin.ir.expressions.IrBlock $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrBlock $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1: org.jetbrains.kotlin.ir.expressions.IrBlock $expression>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrExpression access$visitBlock$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrBlock)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrBlock)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrBlock r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrBlock;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlock$1: org.jetbrains.kotlin.ir.expressions.IrBlock $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1: org.jetbrains.kotlin.ir.expressions.IrBlockBody $body>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrBody $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1: org.jetbrains.kotlin.ir.expressions.IrBody invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrBody invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.expressions.IrBody $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1: org.jetbrains.kotlin.ir.expressions.IrBlockBody $body>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrBody access$visitBlockBody$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrBlockBody)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrBlockBody)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrBlockBody;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBlockBody$1: org.jetbrains.kotlin.ir.expressions.IrBlockBody $body> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1: org.jetbrains.kotlin.ir.expressions.IrBranch $branch>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrBranch $r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2, $r5;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1: org.jetbrains.kotlin.ir.expressions.IrBranch $branch>;

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        return $r5;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrBranch)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrBranch r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrBranch;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$1: org.jetbrains.kotlin.ir.expressions.IrBranch $branch> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2: org.jetbrains.kotlin.ir.expressions.IrBranch $branch>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrBranch $r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2, $r5;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2: org.jetbrains.kotlin.ir.expressions.IrBranch $branch>;

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        return $r5;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrBranch)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrBranch r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrBranch;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitBranch$2: org.jetbrains.kotlin.ir.expressions.IrBranch $branch> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrCall $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrCall $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: int $i>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    public final void invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 $r1, $r2;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r7;
        org.jetbrains.kotlin.ir.expressions.IrCall $r6;
        int $i0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>;

        $r6 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>;

        $i0 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: int $i>;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0>;

        $r3 = $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r7 = interfaceinvoke $r5.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        interfaceinvoke $r6.<org.jetbrains.kotlin.ir.expressions.IrCall: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>($i0, $r7);

        return;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1, int, org.jetbrains.kotlin.ir.expressions.IrExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 r1;
        int i0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1;

        i0 := @parameter1: int;

        r2 := @parameter2: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: int $i> = i0;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrCall $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrCall invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 r0;
        int i0, i1;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1, $r7, $r13;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1 $r2;
        org.jetbrains.kotlin.ir.expressions.IrCall $r3, $r9, $r14, $r15, $r16;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r4, $r10, $r18;
        kotlin.jvm.functions.Function0 $r5, $r11, $r23;
        java.lang.Object $r6, $r12;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2 $r8;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.lang.String $r21;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3 $r22;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r2;

        $r6 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r4, "$this", $r5);

        $r7 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r6;

        interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrCall: void setDispatchReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r7);

        $r9 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>;

        $r10 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r8;

        $r12 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r10, "$$this", $r11);

        $r13 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r12;

        interfaceinvoke $r9.<org.jetbrains.kotlin.ir.expressions.IrCall: void setExtensionReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r13);

        i1 = 0;

        $r14 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>;

        i0 = interfaceinvoke $r14.<org.jetbrains.kotlin.ir.expressions.IrCall: int getValueArgumentsCount()>();

     label1:
        if i1 >= i0 goto label3;

        $r16 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>;

        r1 = interfaceinvoke $r16.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(i1);

        if r1 == null goto label2;

        $r18 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arg-");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3;

        specialinvoke $r22.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1$3: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1,int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(r0, i1, r1);

        $r23 = (kotlin.jvm.functions.Function0) $r22;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r18, $r21, $r23);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r15 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression>;

        return $r15;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrCall r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrCall;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitCall$1: org.jetbrains.kotlin.ir.expressions.IrCall $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1: org.jetbrains.kotlin.ir.declarations.IrClass $declaration>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1 r0;
        org.jetbrains.kotlin.ir.IrStatement $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1: org.jetbrains.kotlin.ir.IrStatement invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.IrStatement invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrClass $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.IrStatement $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1: org.jetbrains.kotlin.ir.declarations.IrClass $declaration>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.IrStatement access$visitClass$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrClass)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrClass)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.declarations.IrClass r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrClass;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitClass$1: org.jetbrains.kotlin.ir.declarations.IrClass $declaration> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1: org.jetbrains.kotlin.ir.expressions.IrComposite $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrComposite $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1: org.jetbrains.kotlin.ir.expressions.IrComposite $expression>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrExpression access$visitComposite$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrComposite)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrComposite)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrComposite r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrComposite;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitComposite$1: org.jetbrains.kotlin.ir.expressions.IrComposite $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: int $i>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    public final void invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 $r1, $r2;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r7;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r6;
        int $i0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>;

        $r6 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>;

        $i0 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: int $i>;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0>;

        $r3 = $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r7 = interfaceinvoke $r5.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        interfaceinvoke $r6.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>($i0, $r7);

        return;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1, int, org.jetbrains.kotlin.ir.expressions.IrExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 r1;
        int i0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1;

        i0 := @parameter1: int;

        r2 := @parameter2: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: int $i> = i0;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrConstructorCall invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 r0;
        int i0, i1;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1, $r7, $r13;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1 $r2;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r3, $r9, $r14, $r15, $r16;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r4, $r10, $r18;
        kotlin.jvm.functions.Function0 $r5, $r11, $r23;
        java.lang.Object $r6, $r12;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2 $r8;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.lang.String $r21;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3 $r22;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r2;

        $r6 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r4, "$this", $r5);

        $r7 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r6;

        interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: void setDispatchReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r7);

        $r9 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>;

        $r10 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r8;

        $r12 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r10, "$$this", $r11);

        $r13 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r12;

        interfaceinvoke $r9.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: void setExtensionReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r13);

        i1 = 0;

        $r14 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>;

        i0 = interfaceinvoke $r14.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: int getValueArgumentsCount()>();

     label1:
        if i1 >= i0 goto label3;

        $r16 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>;

        r1 = interfaceinvoke $r16.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(i1);

        if r1 == null goto label2;

        $r18 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arg-");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3;

        specialinvoke $r22.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1$3: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1,int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(r0, i1, r1);

        $r23 = (kotlin.jvm.functions.Function0) $r22;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r18, $r21, $r23);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r15 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression>;

        return $r15;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: int $i>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    public final void invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 $r1, $r2;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r7;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $r6;
        int $i0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>;

        $r6 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>;

        $i0 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: int $i>;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0>;

        $r3 = $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r7 = interfaceinvoke $r5.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        interfaceinvoke $r6.<org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>($i0, $r7);

        return;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1, int, org.jetbrains.kotlin.ir.expressions.IrExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 r1;
        int i0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1;

        i0 := @parameter1: int;

        r2 := @parameter2: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: int $i> = i0;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 r0;
        int i0, i1;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1, $r7, $r13;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1 $r2;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $r3, $r9, $r14, $r15, $r16;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r4, $r10, $r18;
        kotlin.jvm.functions.Function0 $r5, $r11, $r23;
        java.lang.Object $r6, $r12;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2 $r8;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.lang.String $r21;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3 $r22;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r2;

        $r6 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r4, "$this", $r5);

        $r7 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r6;

        interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall: void setDispatchReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r7);

        $r9 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>;

        $r10 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r8;

        $r12 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r10, "$$this", $r11);

        $r13 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r12;

        interfaceinvoke $r9.<org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall: void setExtensionReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r13);

        i1 = 0;

        $r14 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>;

        i0 = interfaceinvoke $r14.<org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall: int getValueArgumentsCount()>();

     label1:
        if i1 >= i0 goto label3;

        $r16 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>;

        r1 = interfaceinvoke $r16.<org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(i1);

        if r1 == null goto label2;

        $r18 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arg-");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3;

        specialinvoke $r22.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1$3: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1,int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(r0, i1, r1);

        $r23 = (kotlin.jvm.functions.Function0) $r22;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r18, $r21, $r23);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r15 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression>;

        return $r15;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitDelegatingConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1: org.jetbrains.kotlin.ir.expressions.IrElseBranch $branch>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrElseBranch $r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2, $r5;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1: org.jetbrains.kotlin.ir.expressions.IrElseBranch $branch>;

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrElseBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        return $r5;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrElseBranch)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrElseBranch r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrElseBranch;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitElseBranch$1: org.jetbrains.kotlin.ir.expressions.IrElseBranch $branch> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: int $i>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    public final void invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 $r1, $r2;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r7;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $r6;
        int $i0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>;

        $r6 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>;

        $i0 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: int $i>;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0>;

        $r3 = $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r7 = interfaceinvoke $r5.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        interfaceinvoke $r6.<org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall: void putValueArgument(int,org.jetbrains.kotlin.ir.expressions.IrExpression)>($i0, $r7);

        return;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1, int, org.jetbrains.kotlin.ir.expressions.IrExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 r1;
        int i0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1;

        i0 := @parameter1: int;

        r2 := @parameter2: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: int $i> = i0;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: org.jetbrains.kotlin.ir.expressions.IrExpression $arg> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 r0;
        int i0, i1;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1, $r7, $r13;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1 $r2;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $r3, $r9, $r14, $r15, $r16;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r4, $r10, $r18;
        kotlin.jvm.functions.Function0 $r5, $r11, $r23;
        java.lang.Object $r6, $r12;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2 $r8;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.lang.String $r21;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3 $r22;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r2 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r2;

        $r6 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r4, "$this", $r5);

        $r7 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r6;

        interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall: void setDispatchReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r7);

        $r9 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>;

        $r10 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r8;

        $r12 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r10, "$$this", $r11);

        $r13 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r12;

        interfaceinvoke $r9.<org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall: void setExtensionReceiver(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r13);

        i1 = 0;

        $r14 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>;

        i0 = interfaceinvoke $r14.<org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall: int getValueArgumentsCount()>();

     label1:
        if i1 >= i0 goto label3;

        $r16 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>;

        r1 = interfaceinvoke $r16.<org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(i1);

        if r1 == null goto label2;

        $r18 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arg-");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3;

        specialinvoke $r22.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1$3: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1,int,org.jetbrains.kotlin.ir.expressions.IrExpression)>(r0, i1, r1);

        $r23 = (kotlin.jvm.functions.Function0) $r22;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r18, $r21, $r23);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r15 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression>;

        return $r15;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumConstructorCall$1: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1: org.jetbrains.kotlin.ir.declarations.IrEnumEntry $declaration>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1 r0;
        org.jetbrains.kotlin.ir.IrStatement $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1: org.jetbrains.kotlin.ir.IrStatement invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.IrStatement invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrEnumEntry $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.IrStatement $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1: org.jetbrains.kotlin.ir.declarations.IrEnumEntry $declaration>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.IrStatement access$visitEnumEntry$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrEnumEntry)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrEnumEntry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.declarations.IrEnumEntry r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrEnumEntry;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitEnumEntry$1: org.jetbrains.kotlin.ir.declarations.IrEnumEntry $declaration> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: java.lang.String $fileName>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: org.jetbrains.kotlin.ir.declarations.IrFile $declaration>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: java.util.Set $keys>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrFile $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: org.jetbrains.kotlin.ir.declarations.IrFile invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.declarations.IrFile invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrClass r1, r4, $r45, $r66, r67;
        org.jetbrains.kotlin.ir.declarations.impl.IrConstructorImpl r2, $r72, r73, r74;
        kotlin.Unit r3;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5, $r18, $r29, $r37, $r51, $r53, $r55, $r56, $r61, $r81;
        org.jetbrains.kotlin.ir.builders.declarations.IrClassBuilder $r6, r62;
        org.jetbrains.kotlin.descriptors.ClassKind $r7;
        org.jetbrains.kotlin.descriptors.Visibility $r8;
        java.lang.String $r9, $r13, $r20, r65;
        java.lang.StringBuilder $r10, $r11, $r12;
        org.jetbrains.kotlin.name.Name $r14;
        java.util.List $r15, $r22, $r26;
        org.jetbrains.kotlin.ir.declarations.IrFile $r16, $r52, $r54, $r78;
        java.util.Collection $r17, r79;
        org.jetbrains.kotlin.ir.SourceManager$FileEntry $r19;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r21;
        org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder $r23, r69;
        org.jetbrains.kotlin.ir.types.IrSimpleType $r24;
        org.jetbrains.kotlin.ir.types.IrType $r25;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationParent $r27;
        org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder $r28;
        org.jetbrains.kotlin.backend.common.extensions.IrPluginContext $r30;
        org.jetbrains.kotlin.ir.builders.IrGeneratorContext $r31, $r34, $r38;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r32, $r41, $r42;
        org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder $r33;
        org.jetbrains.kotlin.ir.builders.Scope $r35;
        org.jetbrains.kotlin.ir.builders.IrBuilderWithScope $r36, r75;
        org.jetbrains.kotlin.ir.descriptors.IrBuiltIns $r39;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol $r40, $r43;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r44;
        org.jetbrains.kotlin.ir.declarations.IrConstructor $r46;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall $r47;
        org.jetbrains.kotlin.ir.IrStatement $r48;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody $r49;
        org.jetbrains.kotlin.ir.expressions.IrBody $r50;
        boolean $z2, $z3, z5, z6, z9, z10, z15, z19, z27, $z28;
        java.util.Set $r57;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration $r58;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer $r59;
        java.lang.Throwable $r60, r82;
        int $i0, $i1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        r1 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrClass access$getLiveLiteralsClass$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer)>($r5);

        $r6 = new org.jetbrains.kotlin.ir.builders.declarations.IrClassBuilder;

        specialinvoke $r6.<org.jetbrains.kotlin.ir.builders.declarations.IrClassBuilder: void <init>()>();

        r62 = $r6;

        z5 = 0;

        z6 = 0;

        $r7 = <org.jetbrains.kotlin.descriptors.ClassKind: org.jetbrains.kotlin.descriptors.ClassKind OBJECT>;

        virtualinvoke r62.<org.jetbrains.kotlin.ir.builders.declarations.IrClassBuilder: void setKind(org.jetbrains.kotlin.descriptors.ClassKind)>($r7);

        $r8 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility INTERNAL>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "Visibilities.INTERNAL");

        virtualinvoke r62.<org.jetbrains.kotlin.ir.builders.declarations.IrClassBuilder: void setVisibility(org.jetbrains.kotlin.descriptors.Visibility)>($r8);

        $r9 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: java.lang.String $fileName>;

        r65 = staticinvoke <org.jetbrains.kotlin.load.kotlin.PackagePartClassUtils: java.lang.String getFilePartShortName(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LiveLiterals$");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name identifier(java.lang.String)>($r13);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "Name.identifier(\"LiveLiterals${\"$\"}$shortName\")");

        virtualinvoke r62.<org.jetbrains.kotlin.ir.builders.declarations.IrClassBuilder: void setName(org.jetbrains.kotlin.name.Name)>($r14);

        $r66 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.IrClass buildClass(org.jetbrains.kotlin.ir.builders.declarations.IrClassBuilder)>(r62);

        z9 = 0;

        z10 = 0;

        r67 = $r66;

        staticinvoke <org.jetbrains.kotlin.backend.common.ir.IrUtilsKt: void createParameterDeclarations(org.jetbrains.kotlin.ir.declarations.IrClass)>(r67);

        $r15 = interfaceinvoke r67.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getAnnotations()>();

        $r17 = (java.util.Collection) $r15;

        $r18 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r16 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: org.jetbrains.kotlin.ir.declarations.IrFile $declaration>;

        $r19 = interfaceinvoke $r16.<org.jetbrains.kotlin.ir.declarations.IrFile: org.jetbrains.kotlin.ir.SourceManager$FileEntry getFileEntry()>();

        $r20 = interfaceinvoke $r19.<org.jetbrains.kotlin.ir.SourceManager$FileEntry: java.lang.String getName()>();

        $r21 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrConstructorCall access$irLiveLiteralFileInfoAnnotation(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String)>($r18, $r20);

        $r22 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r17, $r21);

        interfaceinvoke r67.<org.jetbrains.kotlin.ir.declarations.IrClass: void setAnnotations(java.util.List)>($r22);

        $r23 = new org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder;

        specialinvoke $r23.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void <init>()>();

        r69 = $r23;

        z15 = 0;

        virtualinvoke r69.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setPrimary(boolean)>(1);

        $r24 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: org.jetbrains.kotlin.ir.types.IrSimpleType getDefaultType(org.jetbrains.kotlin.ir.declarations.IrClass)>(r67);

        $r25 = (org.jetbrains.kotlin.ir.types.IrType) $r24;

        virtualinvoke r69.<org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder: void setReturnType(org.jetbrains.kotlin.ir.types.IrType)>($r25);

        $r72 = staticinvoke <org.jetbrains.kotlin.ir.builders.declarations.DeclarationBuildersKt: org.jetbrains.kotlin.ir.declarations.impl.IrConstructorImpl buildConstructor(org.jetbrains.kotlin.ir.builders.declarations.IrFunctionBuilder)>(r69);

        z19 = 0;

        r73 = $r72;

        $r26 = interfaceinvoke r67.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getDeclarations()>();

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>(r73);

        $r27 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationParent) r67;

        virtualinvoke r73.<org.jetbrains.kotlin.ir.declarations.impl.IrConstructorImpl: void setParent(org.jetbrains.kotlin.ir.declarations.IrDeclarationParent)>($r27);

        r74 = $r72;

        $r28 = new org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder;

        $r29 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r30 = virtualinvoke $r29.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext getContext()>();

        $r31 = (org.jetbrains.kotlin.ir.builders.IrGeneratorContext) $r30;

        $r32 = interfaceinvoke r67.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.ir.symbols.IrSymbol getSymbol()>();

        specialinvoke $r28.<org.jetbrains.kotlin.backend.common.lower.DeclarationIrBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.symbols.IrSymbol,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r31, $r32, 0, 0, 12, null);

        r75 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r28;

        $i0 = virtualinvoke r75.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getStartOffset()>();

        $i1 = virtualinvoke r75.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: int getEndOffset()>();

        $r33 = new org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder;

        $r34 = virtualinvoke r75.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.IrGeneratorContext getContext()>();

        $r35 = virtualinvoke r75.<org.jetbrains.kotlin.ir.builders.IrBuilderWithScope: org.jetbrains.kotlin.ir.builders.Scope getScope()>();

        specialinvoke $r33.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void <init>(org.jetbrains.kotlin.ir.builders.IrGeneratorContext,org.jetbrains.kotlin.ir.builders.Scope,int,int)>($r34, $r35, $i0, $i1);

        r2 = r74;

        $r36 = (org.jetbrains.kotlin.ir.builders.IrBuilderWithScope) $r33;

        $r37 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r38 = virtualinvoke $r33.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: org.jetbrains.kotlin.ir.builders.IrGeneratorContext getContext()>();

        $r39 = interfaceinvoke $r38.<org.jetbrains.kotlin.ir.builders.IrGeneratorContext: org.jetbrains.kotlin.ir.descriptors.IrBuiltIns getIrBuiltIns()>();

        $r40 = virtualinvoke $r39.<org.jetbrains.kotlin.ir.descriptors.IrBuiltIns: org.jetbrains.kotlin.ir.symbols.IrClassSymbol getAnyClass()>();

        $r41 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r40;

        $r42 = virtualinvoke $r37.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.symbols.IrSymbol bindIfNecessary(org.jetbrains.kotlin.ir.symbols.IrSymbol)>($r41);

        $r43 = (org.jetbrains.kotlin.ir.symbols.IrClassSymbol) $r42;

        $r44 = interfaceinvoke $r43.<org.jetbrains.kotlin.ir.symbols.IrClassSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r45 = (org.jetbrains.kotlin.ir.declarations.IrClass) $r44;

        $r46 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrConstructor getPrimaryConstructor(org.jetbrains.kotlin.ir.declarations.IrClass)>($r45);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r46);

        $r47 = staticinvoke <org.jetbrains.kotlin.ir.builders.ExpressionHelpersKt: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall irDelegatingConstructorCall(org.jetbrains.kotlin.ir.builders.IrBuilderWithScope,org.jetbrains.kotlin.ir.declarations.IrConstructor)>($r36, $r46);

        $r48 = (org.jetbrains.kotlin.ir.IrStatement) $r47;

        virtualinvoke $r33.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: void unaryPlus(org.jetbrains.kotlin.ir.IrStatement)>($r48);

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r49 = virtualinvoke $r33.<org.jetbrains.kotlin.ir.builders.IrBlockBodyBuilder: org.jetbrains.kotlin.ir.expressions.IrBlockBody doBuild()>();

        $r50 = (org.jetbrains.kotlin.ir.expressions.IrBody) $r49;

        virtualinvoke r2.<org.jetbrains.kotlin.ir.declarations.impl.IrConstructorImpl: void setBody(org.jetbrains.kotlin.ir.expressions.IrBody)>($r50);

        r4 = $r66;

     label1:
        $r51 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: void access$setLiveLiteralsClass$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrClass)>($r51, r4);

        $r53 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r52 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: org.jetbrains.kotlin.ir.declarations.IrFile $declaration>;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: void access$setCurrentFile$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrFile)>($r53, $r52);

        $r55 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r54 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: org.jetbrains.kotlin.ir.declarations.IrFile $declaration>;

        $r78 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.declarations.IrFile access$visitFile$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrFile)>($r55, $r54);

        $r56 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $z2 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: boolean access$getLiveLiteralsEnabled$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer)>($r56);

        if $z2 == 0 goto label4;

        $r57 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: java.util.Set $keys>;

        r79 = (java.util.Collection) $r57;

        z27 = 0;

        $z3 = interfaceinvoke r79.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label2;

        $z28 = 1;

        goto label3;

     label2:
        $z28 = 0;

     label3:
        if $z28 == 0 goto label4;

        $r59 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer) $r78;

        $r58 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r4;

        staticinvoke <org.jetbrains.kotlin.backend.common.ir.IrUtilsKt: void addChild(org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer,org.jetbrains.kotlin.ir.declarations.IrDeclaration)>($r59, $r58);

     label4:
        $r81 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: void access$setLiveLiteralsClass$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrClass)>($r81, r1);

        goto label7;

     label5:
        $r60 := @caughtexception;

        r82 = $r60;

     label6:
        $r61 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: void access$setLiveLiteralsClass$p(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrClass)>($r61, r1);

        throw r82;

     label7:
        return $r78;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, java.lang.String, org.jetbrains.kotlin.ir.declarations.IrFile, java.util.Set)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        java.lang.String r2;
        org.jetbrains.kotlin.ir.declarations.IrFile r3;
        java.util.Set r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.jetbrains.kotlin.ir.declarations.IrFile;

        r4 := @parameter3: java.util.Set;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: java.lang.String $fileName> = r2;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: org.jetbrains.kotlin.ir.declarations.IrFile $declaration> = r3;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitFile$1: java.util.Set $keys> = r4;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrLoop $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrLoop: org.jetbrains.kotlin.ir.expressions.IrExpression getBody()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrLoop $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: org.jetbrains.kotlin.ir.expressions.IrLoop invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrLoop invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1 $r1;
        org.jetbrains.kotlin.ir.expressions.IrLoop $r2, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        kotlin.jvm.functions.Function0 $r4;
        java.lang.Object $r5;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1;

        specialinvoke $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1)>(r0);

        $r4 = (kotlin.jvm.functions.Function0) $r1;

        $r5 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r3, "body", $r4);

        $r6 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r5;

        interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrLoop: void setBody(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r6);

        $r7 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>;

        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrLoop)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrLoop r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrLoop;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$1: org.jetbrains.kotlin.ir.expressions.IrLoop $loop> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrLoop $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrLoop: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 $r1, $r4;
        org.jetbrains.kotlin.ir.expressions.IrLoop $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>;

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrLoop: org.jetbrains.kotlin.ir.expressions.IrExpression getBody()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrLoop $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: org.jetbrains.kotlin.ir.expressions.IrLoop invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrLoop invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1 $r1;
        org.jetbrains.kotlin.ir.expressions.IrLoop $r2, $r8, $r13;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3, $r9;
        kotlin.jvm.functions.Function0 $r4, $r10;
        java.lang.Object $r5, $r11;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r6, $r12;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2 $r7;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1;

        specialinvoke $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2)>(r0);

        $r4 = (kotlin.jvm.functions.Function0) $r1;

        $r5 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r3, "cond", $r4);

        $r6 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r5;

        interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrLoop: void setCondition(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r6);

        $r8 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>;

        $r9 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r7 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2;

        specialinvoke $r7.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2)>(r0);

        $r10 = (kotlin.jvm.functions.Function0) $r7;

        $r11 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r9, "body", $r10);

        $r12 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r11;

        interfaceinvoke $r8.<org.jetbrains.kotlin.ir.expressions.IrLoop: void setBody(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r12);

        $r13 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: org.jetbrains.kotlin.ir.expressions.IrLoop $loop>;

        return $r13;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrLoop)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrLoop r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrLoop;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitLoop$2: org.jetbrains.kotlin.ir.expressions.IrLoop $loop> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.declarations.IrSimpleFunction invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 $r1, $r4;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r2, $r3;
        boolean $z0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;
        org.jetbrains.kotlin.ir.IrStatement $r7;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $getter>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.IrStatement transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        $z0 = $r7 instanceof org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        if $z0 != 0 goto label3;

        $r7 = null;

     label3:
        $r3 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) $r7;

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2 r0;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.declarations.IrSimpleFunction invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 $r1, $r4;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r2, $r3;
        boolean $z0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r6;
        org.jetbrains.kotlin.ir.IrStatement $r7;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $setter>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 this$0>;

        $r5 = $r4.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r6 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r5;

        $r7 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.IrStatement transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r6, null);

        goto label2;

     label1:
        $r7 = null;

     label2:
        $z0 = $r7 instanceof org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        if $z0 != 0 goto label3;

        $r7 = null;

     label3:
        $r3 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) $r7;

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrProperty $declaration>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrField $backingField>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $getter>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $setter>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrProperty $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrProperty invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.declarations.IrProperty invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrField $r1;
        org.jetbrains.kotlin.ir.declarations.IrProperty $r2, $r4, $r10, $r15;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1 $r3;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r5, $r11;
        kotlin.jvm.functions.Function0 $r6, $r12;
        java.lang.Object $r7, $r13;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r8, $r14;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2 $r9;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrProperty $declaration>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrField $backingField>;

        interfaceinvoke $r2.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setBackingField(org.jetbrains.kotlin.ir.declarations.IrField)>($r1);

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrProperty $declaration>;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r3 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1;

        specialinvoke $r3.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1)>(r0);

        $r6 = (kotlin.jvm.functions.Function0) $r3;

        $r7 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r5, "get", $r6);

        $r8 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) $r7;

        interfaceinvoke $r4.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setGetter(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>($r8);

        $r10 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrProperty $declaration>;

        $r11 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r9 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2;

        specialinvoke $r9.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1)>(r0);

        $r12 = (kotlin.jvm.functions.Function0) $r9;

        $r13 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r11, "set", $r12);

        $r14 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) $r13;

        interfaceinvoke $r10.<org.jetbrains.kotlin.ir.declarations.IrProperty: void setSetter(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>($r14);

        $r15 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrProperty $declaration>;

        return $r15;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrProperty, org.jetbrains.kotlin.ir.declarations.IrField, org.jetbrains.kotlin.ir.declarations.IrSimpleFunction, org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.declarations.IrProperty r2;
        org.jetbrains.kotlin.ir.declarations.IrField r3;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r4, r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrProperty;

        r3 := @parameter2: org.jetbrains.kotlin.ir.declarations.IrField;

        r4 := @parameter3: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        r5 := @parameter4: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrProperty $declaration> = r2;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrField $backingField> = r3;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $getter> = r4;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitProperty$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $setter> = r5;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1: org.jetbrains.kotlin.ir.expressions.IrSetField $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrSetField $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1: org.jetbrains.kotlin.ir.expressions.IrSetField $expression>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrExpression access$visitSetField$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrSetField)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrSetField)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrSetField r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrSetField;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetField$1: org.jetbrains.kotlin.ir.expressions.IrSetField $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1: org.jetbrains.kotlin.ir.expressions.IrSetVariable $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrSetVariable $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1: org.jetbrains.kotlin.ir.expressions.IrSetVariable $expression>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrExpression access$visitSetVariable$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrSetVariable)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrSetVariable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrSetVariable r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrSetVariable;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSetVariable$1: org.jetbrains.kotlin.ir.expressions.IrSetVariable $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $declaration>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1 r0;
        org.jetbrains.kotlin.ir.IrStatement $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1: org.jetbrains.kotlin.ir.IrStatement invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.IrStatement invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.IrStatement $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $declaration>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.IrStatement access$visitSimpleFunction$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitSimpleFunction$1: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $declaration> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrExpression $expr>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 this$0>
    void <init>(org.jetbrains.kotlin.ir.expressions.IrExpression, androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r2 := @parameter1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrExpression $expr> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 this$0> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 $r2;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrExpression $expr>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 this$0>;

        $r3 = $r2.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r6 = interfaceinvoke $r5.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        return $r6;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 this$0>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 r0;
        org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3, $r21;
        int i0, i1, $i2, i3;
        boolean z1, $z3;
        org.jetbrains.kotlin.ir.expressions.IrExpression r4;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 $r5, $r9, $r12, $r16;
        org.jetbrains.kotlin.ir.expressions.IrStringConcatenation $r6, $r10, $r13;
        org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl $r7, $r11, $r14;
        java.util.List $r8, $r15;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r17;
        java.lang.String $r18;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1 $r19;
        kotlin.jvm.functions.Function0 $r20;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 this$0>;

        $r6 = $r5.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation $expression>;

        $r7 = (org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl) $r6;

        $r8 = virtualinvoke $r7.<org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl: java.util.List getArguments()>();

        $r1 = (java.lang.Iterable) $r8;

        i3 = 0;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i3;

        i3 = i3 + 1;

        i0 = $i2;

        z1 = 0;

        if i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        r4 = (org.jetbrains.kotlin.ir.expressions.IrExpression) r3;

        i1 = i0;

        $r12 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 this$0>;

        $r13 = $r12.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation $expression>;

        $r14 = (org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl) $r13;

        $r15 = virtualinvoke $r14.<org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl: java.util.List getArguments()>();

        $r16 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 this$0>;

        $r17 = $r16.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        $r19 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1;

        specialinvoke $r19.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1$$special$$inlined$forEachIndexed$lambda$1: void <init>(org.jetbrains.kotlin.ir.expressions.IrExpression,androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1)>(r4, r0);

        $r20 = (kotlin.jvm.functions.Function0) $r19;

        $r21 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r17, $r18, $r20);

        interfaceinvoke $r15.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r21);

        goto label1;

     label3:
        $r9 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 this$0>;

        $r10 = $r9.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation $expression>;

        $r11 = (org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl) $r10;

        return $r11;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 r0;
        org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1 $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        kotlin.jvm.functions.Function0 $r3;
        java.lang.Object $r4;
        org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1;

        specialinvoke $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1)>(r0);

        $r3 = (kotlin.jvm.functions.Function0) $r1;

        $r4 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$siblings(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,kotlin.jvm.functions.Function0)>($r2, $r3);

        $r5 = (org.jetbrains.kotlin.ir.expressions.impl.IrStringConcatenationImpl) $r4;

        return $r5;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrStringConcatenation)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrStringConcatenation r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitStringConcatenation$1: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1: org.jetbrains.kotlin.ir.expressions.IrTry $aTry>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrTry $r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2, $r5;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1: org.jetbrains.kotlin.ir.expressions.IrTry $aTry>;

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrTry: org.jetbrains.kotlin.ir.expressions.IrExpression getTryResult()>();

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        return $r5;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrTry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrTry r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrTry;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$1: org.jetbrains.kotlin.ir.expressions.IrTry $aTry> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1: org.jetbrains.kotlin.ir.expressions.IrCatch $it>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 this$0>
    void <init>(org.jetbrains.kotlin.ir.expressions.IrCatch, androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrCatch r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCatch;

        r2 := @parameter1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1: org.jetbrains.kotlin.ir.expressions.IrCatch $it> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 this$0> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrCatch $r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2, $r6;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 $r3;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r4;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1: org.jetbrains.kotlin.ir.expressions.IrCatch $it>;

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrCatch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 this$0>;

        $r4 = $r3.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r5 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r4;

        $r6 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r5, null);

        return $r6;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: org.jetbrains.kotlin.ir.expressions.IrTry $aTry>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    public final void invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3, $r10;
        org.jetbrains.kotlin.ir.expressions.IrCatch r4;
        org.jetbrains.kotlin.ir.expressions.IrTry $r5;
        java.util.List $r6;
        boolean $z2;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1 $r7;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r8;
        kotlin.jvm.functions.Function0 $r9;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r11;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: org.jetbrains.kotlin.ir.expressions.IrTry $aTry>;

        $r6 = interfaceinvoke $r5.<org.jetbrains.kotlin.ir.expressions.IrTry: java.util.List getCatches()>();

        $r1 = (java.lang.Iterable) $r6;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jetbrains.kotlin.ir.expressions.IrCatch) r3;

        $r8 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r7 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1;

        specialinvoke $r7.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2$$special$$inlined$forEach$lambda$1: void <init>(org.jetbrains.kotlin.ir.expressions.IrCatch,androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2)>(r4, r0);

        $r9 = (kotlin.jvm.functions.Function0) $r7;

        $r10 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r8, "catch", $r9);

        $r11 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r10;

        interfaceinvoke r4.<org.jetbrains.kotlin.ir.expressions.IrCatch: void setResult(org.jetbrains.kotlin.ir.expressions.IrExpression)>($r11);

        goto label1;

     label2:
        return;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrTry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrTry r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrTry;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$2: org.jetbrains.kotlin.ir.expressions.IrTry $aTry> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3: org.jetbrains.kotlin.ir.expressions.IrTry $aTry>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3 r0;
        org.jetbrains.kotlin.ir.expressions.IrTry $r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2, $r5;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r3;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3: org.jetbrains.kotlin.ir.expressions.IrTry $aTry>;

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrTry: org.jetbrains.kotlin.ir.expressions.IrExpression getFinallyExpression()>();

        if $r2 == null goto label1;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r4 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r3;

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.expressions.IrExpression transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r4, null);

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrTry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrTry r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrTry;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitTry$3: org.jetbrains.kotlin.ir.expressions.IrTry $aTry> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1: org.jetbrains.kotlin.ir.declarations.IrValueParameter $declaration>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1 r0;
        org.jetbrains.kotlin.ir.IrStatement $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1: org.jetbrains.kotlin.ir.IrStatement invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.IrStatement invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.IrStatement $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1: org.jetbrains.kotlin.ir.declarations.IrValueParameter $declaration>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.IrStatement access$visitValueParameter$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrValueParameter)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrValueParameter)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrValueParameter;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitValueParameter$1: org.jetbrains.kotlin.ir.declarations.IrValueParameter $declaration> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrVarargElement $arg>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 this$0>
    void <init>(org.jetbrains.kotlin.ir.expressions.IrVarargElement, androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrVarargElement r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrVarargElement;

        r2 := @parameter1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrVarargElement $arg> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 this$0> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrVarargElement $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrVarargElement invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrVarargElement invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformer $r3;
        org.jetbrains.kotlin.ir.expressions.IrVarargElement $r4, $r6;
        org.jetbrains.kotlin.ir.IrElement $r5;
        java.lang.NullPointerException $r7;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrVarargElement $arg>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 this$0>;

        $r2 = $r1.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r3 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformer) $r2;

        $r5 = interfaceinvoke $r4.<org.jetbrains.kotlin.ir.expressions.IrVarargElement: org.jetbrains.kotlin.ir.IrElement transform(org.jetbrains.kotlin.ir.visitors.IrElementTransformer,java.lang.Object)>($r3, null);

        if $r5 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type org.jetbrains.kotlin.ir.expressions.IrVarargElement");

        throw $r7;

     label1:
        $r6 = (org.jetbrains.kotlin.ir.expressions.IrVarargElement) $r5;

        return $r6;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: org.jetbrains.kotlin.ir.expressions.IrVararg $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 r0;
        org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3, $r17;
        int i0, i1, $i2, i3;
        boolean z1, $z3;
        org.jetbrains.kotlin.ir.expressions.IrVarargElement r4;
        org.jetbrains.kotlin.ir.expressions.IrVararg $r5, $r8, $r10;
        org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl $r6, $r9, $r11;
        java.util.List $r7, $r12;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r13;
        java.lang.String $r14;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1 $r15;
        kotlin.jvm.functions.Function0 $r16;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: org.jetbrains.kotlin.ir.expressions.IrVararg $expression>;

        $r6 = (org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl) $r5;

        $r7 = virtualinvoke $r6.<org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl: java.util.List getElements()>();

        $r1 = (java.lang.Iterable) $r7;

        i3 = 0;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i3;

        i3 = i3 + 1;

        i0 = $i2;

        z1 = 0;

        if i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        r4 = (org.jetbrains.kotlin.ir.expressions.IrVarargElement) r3;

        i1 = i0;

        $r10 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: org.jetbrains.kotlin.ir.expressions.IrVararg $expression>;

        $r11 = (org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl) $r10;

        $r12 = virtualinvoke $r11.<org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl: java.util.List getElements()>();

        $r13 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        $r15 = new androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1;

        specialinvoke $r15.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1$$special$$inlined$forEachIndexed$lambda$1: void <init>(org.jetbrains.kotlin.ir.expressions.IrVarargElement,androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1)>(r4, r0);

        $r16 = (kotlin.jvm.functions.Function0) $r15;

        $r17 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: java.lang.Object access$enter(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,java.lang.String,kotlin.jvm.functions.Function0)>($r13, $r14, $r16);

        interfaceinvoke $r12.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r17);

        goto label1;

     label3:
        $r8 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: org.jetbrains.kotlin.ir.expressions.IrVararg $expression>;

        $r9 = (org.jetbrains.kotlin.ir.expressions.impl.IrVarargImpl) $r8;

        return $r9;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrVararg)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrVararg r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrVararg;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVararg$1: org.jetbrains.kotlin.ir.expressions.IrVararg $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1: org.jetbrains.kotlin.ir.declarations.IrVariable $declaration>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1 r0;
        org.jetbrains.kotlin.ir.IrStatement $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1: org.jetbrains.kotlin.ir.IrStatement invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.IrStatement invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1 r0;
        org.jetbrains.kotlin.ir.declarations.IrVariable $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.IrStatement $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1: org.jetbrains.kotlin.ir.declarations.IrVariable $declaration>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.IrStatement access$visitVariable$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.declarations.IrVariable)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.declarations.IrVariable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.declarations.IrVariable r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrVariable;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitVariable$1: org.jetbrains.kotlin.ir.declarations.IrVariable $declaration> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1: org.jetbrains.kotlin.ir.expressions.IrWhen $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrWhen $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1: org.jetbrains.kotlin.ir.expressions.IrWhen $expression>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrExpression access$visitWhen$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrWhen)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrWhen)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrWhen r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrWhen;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$1: org.jetbrains.kotlin.ir.expressions.IrWhen $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>
<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2: org.jetbrains.kotlin.ir.expressions.IrWhen $expression>
    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2: org.jetbrains.kotlin.ir.expressions.IrExpression invoke()>();

        return $r1;
    }

    public final org.jetbrains.kotlin.ir.expressions.IrExpression invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2 r0;
        org.jetbrains.kotlin.ir.expressions.IrWhen $r1;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer $r2;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2: org.jetbrains.kotlin.ir.expressions.IrWhen $expression>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer: org.jetbrains.kotlin.ir.expressions.IrExpression access$visitWhen$s1031542550(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer,org.jetbrains.kotlin.ir.expressions.IrWhen)>($r2, $r1);

        return $r3;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer, org.jetbrains.kotlin.ir.expressions.IrWhen)
    {
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer r1;
        org.jetbrains.kotlin.ir.expressions.IrWhen r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrWhen;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2: androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer$visitWhen$2: org.jetbrains.kotlin.ir.expressions.IrWhen $expression> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

