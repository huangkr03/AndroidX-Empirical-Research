androidx.paging.ContiguousPagedList
<androidx.paging.ContiguousPagedList: androidx.paging.ContiguousPagedList$Companion Companion>
<androidx.paging.ContiguousPagedList: androidx.paging.PagingSource pagingSource>
<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback>
<androidx.paging.ContiguousPagedList: java.lang.Object initialLastKey>
<androidx.paging.ContiguousPagedList: int prependItemsRequested>
<androidx.paging.ContiguousPagedList: int appendItemsRequested>
<androidx.paging.ContiguousPagedList: boolean boundaryCallbackBeginDeferred>
<androidx.paging.ContiguousPagedList: boolean boundaryCallbackEndDeferred>
<androidx.paging.ContiguousPagedList: int lowestIndexAccessed>
<androidx.paging.ContiguousPagedList: int highestIndexAccessed>
<androidx.paging.ContiguousPagedList: boolean replacePagesWithNulls>
<androidx.paging.ContiguousPagedList: boolean shouldTrim>
<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>
    public void <init>(androidx.paging.PagingSource, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher, androidx.paging.PagedList$BoundaryCallback, androidx.paging.PagedList$Config, androidx.paging.PagingSource$LoadResult$Page, java.lang.Object)
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.PagingSource r1, $r11;
        kotlinx.coroutines.CoroutineScope r2;
        kotlinx.coroutines.CoroutineDispatcher r3, r4;
        androidx.paging.PagedList$BoundaryCallback r5;
        androidx.paging.PagedList$Config r6;
        androidx.paging.PagingSource$LoadResult$Page r7;
        java.lang.Object r8;
        androidx.paging.PagedStorage $r9, $r13, $r15, $r19;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i13, $i19, $i21, $i22, $i23;
        androidx.paging.LegacyPageFetcher $r10;
        androidx.paging.LegacyPageFetcher$PageConsumer $r12;
        androidx.paging.LegacyPageFetcher$KeyProvider $r14;
        boolean $z0, $z1, $z2;
        androidx.paging.PagedStorage$Callback $r16, $r21;
        androidx.paging.LoadType $r22;
        java.util.List $r23;

        r0 := @this: androidx.paging.ContiguousPagedList;

        r1 := @parameter0: androidx.paging.PagingSource;

        r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        r3 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        r4 := @parameter3: kotlinx.coroutines.CoroutineDispatcher;

        r5 := @parameter4: androidx.paging.PagedList$BoundaryCallback;

        r6 := @parameter5: androidx.paging.PagedList$Config;

        r7 := @parameter6: androidx.paging.PagingSource$LoadResult$Page;

        r8 := @parameter7: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pagingSource");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "coroutineScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "notifyDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "backgroundDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "initialPage");

        $r9 = new androidx.paging.PagedStorage;

        specialinvoke $r9.<androidx.paging.PagedStorage: void <init>()>();

        specialinvoke r0.<androidx.paging.PagedList: void <init>(androidx.paging.PagingSource,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher,androidx.paging.PagedStorage,androidx.paging.PagedList$Config)>(r1, r2, r3, $r9, r6);

        r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagingSource pagingSource> = r1;

        r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback> = r5;

        r0.<androidx.paging.ContiguousPagedList: java.lang.Object initialLastKey> = r8;

        r0.<androidx.paging.ContiguousPagedList: int lowestIndexAccessed> = 2147483647;

        r0.<androidx.paging.ContiguousPagedList: int highestIndexAccessed> = -2147483648;

        $i0 = r6.<androidx.paging.PagedList$Config: int maxSize>;

        if $i0 == 2147483647 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        r0.<androidx.paging.ContiguousPagedList: boolean shouldTrim> = $z1;

        $r10 = new androidx.paging.LegacyPageFetcher;

        $r11 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagingSource pagingSource>;

        $r12 = (androidx.paging.LegacyPageFetcher$PageConsumer) r0;

        $r13 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $r14 = (androidx.paging.LegacyPageFetcher$KeyProvider) $r13;

        specialinvoke $r10.<androidx.paging.LegacyPageFetcher: void <init>(kotlinx.coroutines.CoroutineScope,androidx.paging.PagedList$Config,androidx.paging.PagingSource,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,androidx.paging.LegacyPageFetcher$PageConsumer,androidx.paging.LegacyPageFetcher$KeyProvider)>(r2, r6, $r11, r3, r4, $r12, $r14);

        r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager> = $r10;

        $z0 = r6.<androidx.paging.PagedList$Config: boolean enablePlaceholders>;

        if $z0 == 0 goto label09;

        $r19 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i4 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: int getItemsBefore()>();

        if $i4 == -2147483648 goto label03;

        $i7 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: int getItemsBefore()>();

        $i13 = $i7;

        goto label04;

     label03:
        $i13 = 0;

     label04:
        $i5 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: int getItemsAfter()>();

        if $i5 == -2147483648 goto label05;

        $i6 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: int getItemsAfter()>();

        $i19 = $i6;

        goto label06;

     label05:
        $i19 = 0;

     label06:
        $r21 = (androidx.paging.PagedStorage$Callback) r0;

        $i21 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: int getItemsBefore()>();

        if $i21 == -2147483648 goto label07;

        $i22 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: int getItemsAfter()>();

        if $i22 == -2147483648 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        virtualinvoke $r19.<androidx.paging.PagedStorage: void init(int,androidx.paging.PagingSource$LoadResult$Page,int,int,androidx.paging.PagedStorage$Callback,boolean)>($i13, r7, $i19, 0, $r21, $z2);

        goto label12;

     label09:
        $r15 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i3 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: int getItemsBefore()>();

        if $i3 == -2147483648 goto label10;

        $i23 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: int getItemsBefore()>();

        goto label11;

     label10:
        $i23 = 0;

     label11:
        $r16 = (androidx.paging.PagedStorage$Callback) r0;

        virtualinvoke $r15.<androidx.paging.PagedStorage: void init(int,androidx.paging.PagingSource$LoadResult$Page,int,int,androidx.paging.PagedStorage$Callback,boolean)>(0, r7, 0, $i23, $r16, 0);

     label12:
        $r22 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r23 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        specialinvoke r0.<androidx.paging.ContiguousPagedList: void triggerBoundaryCallback(androidx.paging.LoadType,java.util.List)>($r22, $r23);

        return;
    }

    public final androidx.paging.PagingSource getPagingSource()
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.PagingSource $r1;

        r0 := @this: androidx.paging.ContiguousPagedList;

        $r1 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagingSource pagingSource>;

        return $r1;
    }

    public final androidx.paging.PagedList$BoundaryCallback getBoundaryCallback$paging_common()
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.PagedList$BoundaryCallback $r1;

        r0 := @this: androidx.paging.ContiguousPagedList;

        $r1 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback>;

        return $r1;
    }

    private static void getPager$annotations()
    {
        return;
    }

    public java.lang.Object getLastKey()
    {
        androidx.paging.ContiguousPagedList r0;
        java.lang.Object r1, $r8, $r9;
        androidx.paging.PagingState r2, r3, r4;
        boolean z0, z1;
        androidx.paging.PagedStorage $r5;
        androidx.paging.PagedList$Config $r6;
        androidx.paging.PagingSource $r7;

        r0 := @this: androidx.paging.ContiguousPagedList;

        $r5 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $r6 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$Config getConfig()>();

        r2 = virtualinvoke $r5.<androidx.paging.PagedStorage: androidx.paging.PagingState getRefreshKeyInfo(androidx.paging.PagedList$Config)>($r6);

        if r2 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        r3 = r2;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        $r7 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagingSource getPagingSource()>();

        $r8 = virtualinvoke $r7.<androidx.paging.PagingSource: java.lang.Object getRefreshKey(androidx.paging.PagingState)>(r4);

     label2:
        r1 = $r8;

        if r1 != null goto label3;

        $r9 = r0.<androidx.paging.ContiguousPagedList: java.lang.Object initialLastKey>;

        goto label4;

     label3:
        $r9 = r1;

     label4:
        return $r9;
    }

    public static void getLastKey$annotations()
    {
        return;
    }

    public boolean isDetached()
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.LegacyPageFetcher $r1;
        boolean $z0;

        r0 := @this: androidx.paging.ContiguousPagedList;

        $r1 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        $z0 = virtualinvoke $r1.<androidx.paging.LegacyPageFetcher: boolean isDetached()>();

        return $z0;
    }

    public boolean onPageResult(androidx.paging.LoadType, androidx.paging.PagingSource$LoadResult$Page)
    {
        androidx.paging.ContiguousPagedList r0, r39, r41;
        androidx.paging.LoadType r1, $r5, $r19, $r31, $r38;
        androidx.paging.PagingSource$LoadResult$Page r2;
        java.util.List r3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, $z14, z15, $z16, z17, $z18, $z19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        androidx.paging.PagedStorage $r4, $r8, $r13, $r25, $r34, $r36;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        androidx.paging.PagedStorage$Callback $r9, $r15, $r27, $r35;
        androidx.paging.LegacyPageFetcher $r10, $r16, $r22, $r28;
        androidx.paging.PagedList$LoadStateManager $r11, $r17, $r23, $r29;
        androidx.paging.LoadState $r12, $r21, $r24, $r33;
        androidx.paging.PagedList$Config $r14, $r26, $r37;
        androidx.paging.LoadState$NotLoading$Companion $r18, $r30;
        androidx.paging.LoadState$NotLoading $r20, $r32;
        java.util.Collection r40, r42;

        r0 := @this: androidx.paging.ContiguousPagedList;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.PagingSource$LoadResult$Page;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "page");

        z12 = 0;

        r3 = virtualinvoke r2.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i0 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: int lastLoad()>();

        $r4 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i1 = virtualinvoke $r4.<androidx.paging.PagedStorage: int getMiddleOfLoadedRange()>();

        if $i0 <= $i1 goto label01;

        $z13 = 1;

        goto label02;

     label01:
        $z13 = 0;

     label02:
        z0 = $z13;

        $z2 = r0.<androidx.paging.ContiguousPagedList: boolean shouldTrim>;

        if $z2 == 0 goto label03;

        $r36 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $r37 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$Config getConfig()>();

        $i14 = $r37.<androidx.paging.PagedList$Config: int maxSize>;

        $i15 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: int getRequiredRemainder$paging_common()>();

        $i16 = interfaceinvoke r3.<java.util.List: int size()>();

        $z11 = virtualinvoke $r36.<androidx.paging.PagedStorage: boolean shouldPreTrimNewPage(int,int,int)>($i14, $i15, $i16);

        if $z11 == 0 goto label03;

        $z14 = 1;

        goto label04;

     label03:
        $z14 = 0;

     label04:
        z1 = $z14;

        $r38 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        if r1 != $r38 goto label08;

        if z1 == 0 goto label05;

        if z0 != 0 goto label05;

        r0.<androidx.paging.ContiguousPagedList: int appendItemsRequested> = 0;

        goto label13;

     label05:
        $r34 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $r35 = (androidx.paging.PagedStorage$Callback) r0;

        virtualinvoke $r34.<androidx.paging.PagedStorage: void appendPage$paging_common(androidx.paging.PagingSource$LoadResult$Page,androidx.paging.PagedStorage$Callback)>(r2, $r35);

        r39 = r0;

        $i10 = r39.<androidx.paging.ContiguousPagedList: int appendItemsRequested>;

        $i11 = interfaceinvoke r3.<java.util.List: int size()>();

        $i12 = $i10 - $i11;

        r39.<androidx.paging.ContiguousPagedList: int appendItemsRequested> = $i12;

        $i13 = r0.<androidx.paging.ContiguousPagedList: int appendItemsRequested>;

        if $i13 <= 0 goto label13;

        r40 = (java.util.Collection) r3;

        z15 = 0;

        $z10 = interfaceinvoke r40.<java.util.Collection: boolean isEmpty()>();

        if $z10 != 0 goto label06;

        $z16 = 1;

        goto label07;

     label06:
        $z16 = 0;

     label07:
        if $z16 == 0 goto label13;

        z12 = 1;

        goto label13;

     label08:
        $r5 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        if r1 != $r5 goto label12;

        if z1 == 0 goto label09;

        if z0 == 0 goto label09;

        r0.<androidx.paging.ContiguousPagedList: int prependItemsRequested> = 0;

        goto label13;

     label09:
        $r8 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $r9 = (androidx.paging.PagedStorage$Callback) r0;

        virtualinvoke $r8.<androidx.paging.PagedStorage: void prependPage$paging_common(androidx.paging.PagingSource$LoadResult$Page,androidx.paging.PagedStorage$Callback)>(r2, $r9);

        r41 = r0;

        $i2 = r41.<androidx.paging.ContiguousPagedList: int prependItemsRequested>;

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        $i4 = $i2 - $i3;

        r41.<androidx.paging.ContiguousPagedList: int prependItemsRequested> = $i4;

        $i5 = r0.<androidx.paging.ContiguousPagedList: int prependItemsRequested>;

        if $i5 <= 0 goto label13;

        r42 = (java.util.Collection) r3;

        z17 = 0;

        $z9 = interfaceinvoke r42.<java.util.Collection: boolean isEmpty()>();

        if $z9 != 0 goto label10;

        $z18 = 1;

        goto label11;

     label10:
        $z18 = 0;

     label11:
        if $z18 == 0 goto label13;

        z12 = 1;

        goto label13;

     label12:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("unexpected result type ", r1);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label13:
        $z19 = r0.<androidx.paging.ContiguousPagedList: boolean shouldTrim>;

        if $z19 == 0 goto label15;

        if z0 == 0 goto label14;

        $r22 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        $r23 = virtualinvoke $r22.<androidx.paging.LegacyPageFetcher: androidx.paging.PagedList$LoadStateManager getLoadStateManager()>();

        $r24 = virtualinvoke $r23.<androidx.paging.PagedList$LoadStateManager: androidx.paging.LoadState getStartState()>();

        $z6 = $r24 instanceof androidx.paging.LoadState$Loading;

        if $z6 != 0 goto label15;

        $r25 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $z7 = r0.<androidx.paging.ContiguousPagedList: boolean replacePagesWithNulls>;

        $r26 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$Config getConfig()>();

        $i8 = $r26.<androidx.paging.PagedList$Config: int maxSize>;

        $i9 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: int getRequiredRemainder$paging_common()>();

        $r27 = (androidx.paging.PagedStorage$Callback) r0;

        $z8 = virtualinvoke $r25.<androidx.paging.PagedStorage: boolean trimFromFront$paging_common(boolean,int,int,androidx.paging.PagedStorage$Callback)>($z7, $i8, $i9, $r27);

        if $z8 == 0 goto label15;

        $r28 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        $r29 = virtualinvoke $r28.<androidx.paging.LegacyPageFetcher: androidx.paging.PagedList$LoadStateManager getLoadStateManager()>();

        $r31 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        $r30 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r32 = virtualinvoke $r30.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r33 = (androidx.paging.LoadState) $r32;

        virtualinvoke $r29.<androidx.paging.PagedList$LoadStateManager: void setState(androidx.paging.LoadType,androidx.paging.LoadState)>($r31, $r33);

        goto label15;

     label14:
        $r10 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        $r11 = virtualinvoke $r10.<androidx.paging.LegacyPageFetcher: androidx.paging.PagedList$LoadStateManager getLoadStateManager()>();

        $r12 = virtualinvoke $r11.<androidx.paging.PagedList$LoadStateManager: androidx.paging.LoadState getEndState()>();

        $z3 = $r12 instanceof androidx.paging.LoadState$Loading;

        if $z3 != 0 goto label15;

        $r13 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $z4 = r0.<androidx.paging.ContiguousPagedList: boolean replacePagesWithNulls>;

        $r14 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$Config getConfig()>();

        $i6 = $r14.<androidx.paging.PagedList$Config: int maxSize>;

        $i7 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: int getRequiredRemainder$paging_common()>();

        $r15 = (androidx.paging.PagedStorage$Callback) r0;

        $z5 = virtualinvoke $r13.<androidx.paging.PagedStorage: boolean trimFromEnd$paging_common(boolean,int,int,androidx.paging.PagedStorage$Callback)>($z4, $i6, $i7, $r15);

        if $z5 == 0 goto label15;

        $r16 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        $r17 = virtualinvoke $r16.<androidx.paging.LegacyPageFetcher: androidx.paging.PagedList$LoadStateManager getLoadStateManager()>();

        $r19 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        $r18 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r20 = virtualinvoke $r18.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r21 = (androidx.paging.LoadState) $r20;

        virtualinvoke $r17.<androidx.paging.PagedList$LoadStateManager: void setState(androidx.paging.LoadType,androidx.paging.LoadState)>($r19, $r21);

     label15:
        specialinvoke r0.<androidx.paging.ContiguousPagedList: void triggerBoundaryCallback(androidx.paging.LoadType,java.util.List)>(r1, r3);

        return z12;
    }

    public void onStateChanged(androidx.paging.LoadType, androidx.paging.LoadState)
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.LoadType r1;
        androidx.paging.LoadState r2;

        r0 := @this: androidx.paging.ContiguousPagedList;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.LoadState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "state");

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void dispatchStateChangeAsync$paging_common(androidx.paging.LoadType,androidx.paging.LoadState)>(r1, r2);

        return;
    }

    private final void triggerBoundaryCallback(androidx.paging.LoadType, java.util.List)
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.LoadType r1, $r5, $r6;
        java.util.List r2;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        androidx.paging.PagedList$BoundaryCallback $r3;
        androidx.paging.PagedStorage $r4;
        int $i0;

        r0 := @this: androidx.paging.ContiguousPagedList;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback>;

        if $r3 == null goto label7;

        $r4 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i0 = virtualinvoke $r4.<androidx.paging.PagedStorage: int size()>();

        if $i0 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        if z0 != 0 goto label3;

        $r6 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        if r1 != $r6 goto label3;

        $z4 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z1 = $z6;

        if z0 != 0 goto label5;

        $r5 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        if r1 != $r5 goto label5;

        $z3 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label5;

        $z7 = 1;

        goto label6;

     label5:
        $z7 = 0;

     label6:
        z2 = $z7;

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void deferBoundaryCallbacks$paging_common(boolean,boolean,boolean)>(z0, z1, z2);

     label7:
        return;
    }

    public final void deferBoundaryCallbacks$paging_common(boolean, boolean, boolean)
    {
        androidx.paging.ContiguousPagedList r0;
        boolean z0, z1, z2;
        androidx.paging.PagedList$BoundaryCallback $r1;
        int $i0, $i1, $i2;
        androidx.paging.PagedStorage $r3;
        java.lang.IllegalStateException $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        kotlinx.coroutines.CoroutineDispatcher $r6;
        kotlin.coroutines.CoroutineContext $r7;
        androidx.paging.ContiguousPagedList$deferBoundaryCallbacks$1 $r8;
        kotlin.jvm.functions.Function2 $r9;

        r0 := @this: androidx.paging.ContiguousPagedList;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r1 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t defer BoundaryCallback, no instance");

        throw $r4;

     label1:
        $i0 = r0.<androidx.paging.ContiguousPagedList: int lowestIndexAccessed>;

        if $i0 != 2147483647 goto label2;

        $r3 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i2 = virtualinvoke $r3.<androidx.paging.PagedStorage: int size()>();

        r0.<androidx.paging.ContiguousPagedList: int lowestIndexAccessed> = $i2;

     label2:
        $i1 = r0.<androidx.paging.ContiguousPagedList: int highestIndexAccessed>;

        if $i1 != -2147483648 goto label3;

        r0.<androidx.paging.ContiguousPagedList: int highestIndexAccessed> = 0;

     label3:
        if z0 != 0 goto label4;

        if z1 != 0 goto label4;

        if z2 == 0 goto label5;

     label4:
        $r5 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: kotlinx.coroutines.CoroutineScope getCoroutineScope$paging_common()>();

        $r6 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: kotlinx.coroutines.CoroutineDispatcher getNotifyDispatcher$paging_common()>();

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        $r8 = new androidx.paging.ContiguousPagedList$deferBoundaryCallbacks$1;

        specialinvoke $r8.<androidx.paging.ContiguousPagedList$deferBoundaryCallbacks$1: void <init>(boolean,androidx.paging.ContiguousPagedList,boolean,boolean,kotlin.coroutines.Continuation)>(z0, r0, z1, z2, null);

        $r9 = (kotlin.jvm.functions.Function2) $r8;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r5, $r7, null, $r9, 2, null);

     label5:
        return;
    }

    private final void tryDispatchBoundaryCallbacks(boolean)
    {
        androidx.paging.ContiguousPagedList r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlinx.coroutines.CoroutineDispatcher $r2;
        androidx.paging.ContiguousPagedList$tryDispatchBoundaryCallbacks$1 $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlin.jvm.functions.Function2 $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.paging.PagedList$Config $r7, $r8;

        r0 := @this: androidx.paging.ContiguousPagedList;

        z0 := @parameter0: boolean;

        $z3 = r0.<androidx.paging.ContiguousPagedList: boolean boundaryCallbackBeginDeferred>;

        if $z3 == 0 goto label1;

        $i5 = r0.<androidx.paging.ContiguousPagedList: int lowestIndexAccessed>;

        $r8 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$Config getConfig()>();

        $i6 = $r8.<androidx.paging.PagedList$Config: int prefetchDistance>;

        if $i5 > $i6 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z1 = $z4;

        $z5 = r0.<androidx.paging.ContiguousPagedList: boolean boundaryCallbackEndDeferred>;

        if $z5 == 0 goto label3;

        $i0 = r0.<androidx.paging.ContiguousPagedList: int highestIndexAccessed>;

        $i1 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: int size()>();

        $i2 = $i1 - 1;

        $r7 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$Config getConfig()>();

        $i3 = $r7.<androidx.paging.PagedList$Config: int prefetchDistance>;

        $i4 = $i2 - $i3;

        if $i0 < $i4 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z2 = $z6;

        if z1 != 0 goto label5;

        if z2 != 0 goto label5;

        return;

     label5:
        if z1 == 0 goto label6;

        r0.<androidx.paging.ContiguousPagedList: boolean boundaryCallbackBeginDeferred> = 0;

     label6:
        if z2 == 0 goto label7;

        r0.<androidx.paging.ContiguousPagedList: boolean boundaryCallbackEndDeferred> = 0;

     label7:
        if z0 == 0 goto label8;

        $r1 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: kotlinx.coroutines.CoroutineScope getCoroutineScope$paging_common()>();

        $r2 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: kotlinx.coroutines.CoroutineDispatcher getNotifyDispatcher$paging_common()>();

        $r4 = (kotlin.coroutines.CoroutineContext) $r2;

        $r3 = new androidx.paging.ContiguousPagedList$tryDispatchBoundaryCallbacks$1;

        specialinvoke $r3.<androidx.paging.ContiguousPagedList$tryDispatchBoundaryCallbacks$1: void <init>(androidx.paging.ContiguousPagedList,boolean,boolean,kotlin.coroutines.Continuation)>(r0, z1, z2, null);

        $r5 = (kotlin.jvm.functions.Function2) $r3;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r1, $r4, null, $r5, 2, null);

        goto label9;

     label8:
        specialinvoke r0.<androidx.paging.ContiguousPagedList: void dispatchBoundaryCallbacks(boolean,boolean)>(z1, z2);

     label9:
        return;
    }

    private final void dispatchBoundaryCallbacks(boolean, boolean)
    {
        androidx.paging.ContiguousPagedList r0;
        boolean z0, z1;
        androidx.paging.PagedList$BoundaryCallback $r1, $r4;
        androidx.paging.PagedStorage $r2, $r5;
        java.lang.Object $r3, $r6;

        r0 := @this: androidx.paging.ContiguousPagedList;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $r5 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $r6 = virtualinvoke $r5.<androidx.paging.PagedStorage: java.lang.Object getFirstLoadedItem$paging_common()>();

        virtualinvoke $r4.<androidx.paging.PagedList$BoundaryCallback: void onItemAtFrontLoaded(java.lang.Object)>($r6);

     label1:
        if z1 == 0 goto label2;

        $r1 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $r3 = virtualinvoke $r2.<androidx.paging.PagedStorage: java.lang.Object getLastLoadedItem$paging_common()>();

        virtualinvoke $r1.<androidx.paging.PagedList$BoundaryCallback: void onItemAtEndLoaded(java.lang.Object)>($r3);

     label2:
        return;
    }

    public void retry()
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.LoadState r1;
        boolean z0, z1, $z3;
        java.lang.Runnable r2;
        androidx.paging.LegacyPageFetcher $r3, $r4;
        androidx.paging.PagedList$LoadStateManager $r5;

        r0 := @this: androidx.paging.ContiguousPagedList;

        specialinvoke r0.<androidx.paging.PagedList: void retry()>();

        $r3 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        virtualinvoke $r3.<androidx.paging.LegacyPageFetcher: void retry()>();

        $r4 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        $r5 = virtualinvoke $r4.<androidx.paging.LegacyPageFetcher: androidx.paging.PagedList$LoadStateManager getLoadStateManager()>();

        r1 = virtualinvoke $r5.<androidx.paging.PagedList$LoadStateManager: androidx.paging.LoadState getRefreshState()>();

        z0 = 0;

        z1 = 0;

        $z3 = r1 instanceof androidx.paging.LoadState$Error;

        if $z3 == 0 goto label2;

        r2 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: java.lang.Runnable getRefreshRetryCallback$paging_common()>();

        if r2 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r2.<java.lang.Runnable: void run()>();

     label2:
        return;
    }

    public void dispatchCurrentLoadState(kotlin.jvm.functions.Function2)
    {
        androidx.paging.ContiguousPagedList r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.paging.LegacyPageFetcher $r2;
        androidx.paging.PagedList$LoadStateManager $r3;

        r0 := @this: androidx.paging.ContiguousPagedList;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r2 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        $r3 = virtualinvoke $r2.<androidx.paging.LegacyPageFetcher: androidx.paging.PagedList$LoadStateManager getLoadStateManager()>();

        virtualinvoke $r3.<androidx.paging.PagedList$LoadStateManager: void dispatchCurrentLoadState(kotlin.jvm.functions.Function2)>(r1);

        return;
    }

    public void setInitialLoadState(androidx.paging.LoadType, androidx.paging.LoadState)
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.LoadType r1;
        androidx.paging.LoadState r2;
        androidx.paging.LegacyPageFetcher $r3;
        androidx.paging.PagedList$LoadStateManager $r4;

        r0 := @this: androidx.paging.ContiguousPagedList;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.LoadState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "loadState");

        $r3 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        $r4 = virtualinvoke $r3.<androidx.paging.LegacyPageFetcher: androidx.paging.PagedList$LoadStateManager getLoadStateManager()>();

        virtualinvoke $r4.<androidx.paging.PagedList$LoadStateManager: void setState(androidx.paging.LoadType,androidx.paging.LoadState)>(r1, r2);

        return;
    }

    public void loadAroundInternal(int)
    {
        androidx.paging.ContiguousPagedList r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18;
        androidx.paging.ContiguousPagedList$Companion $r1, $r4;
        androidx.paging.PagedList$Config $r2, $r5;
        androidx.paging.PagedStorage $r3, $r6, $r7;
        androidx.paging.LegacyPageFetcher $r8, $r9;
        boolean z0, z1, z2, z3;

        r0 := @this: androidx.paging.ContiguousPagedList;

        i0 := @parameter0: int;

        $r1 = <androidx.paging.ContiguousPagedList: androidx.paging.ContiguousPagedList$Companion Companion>;

        $r2 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$Config getConfig()>();

        $i3 = $r2.<androidx.paging.PagedList$Config: int prefetchDistance>;

        $r3 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i4 = virtualinvoke $r3.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        i1 = virtualinvoke $r1.<androidx.paging.ContiguousPagedList$Companion: int getPrependItemsRequested$paging_common(int,int,int)>($i3, i0, $i4);

        $r4 = <androidx.paging.ContiguousPagedList: androidx.paging.ContiguousPagedList$Companion Companion>;

        $r5 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedList$Config getConfig()>();

        $i5 = $r5.<androidx.paging.PagedList$Config: int prefetchDistance>;

        $r6 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i6 = virtualinvoke $r6.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $r7 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i7 = virtualinvoke $r7.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i8 = $i6 + $i7;

        i2 = virtualinvoke $r4.<androidx.paging.ContiguousPagedList$Companion: int getAppendItemsRequested$paging_common(int,int,int)>($i5, i0, $i8);

        i15 = r0.<androidx.paging.ContiguousPagedList: int prependItemsRequested>;

        z0 = 0;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i15);

        r0.<androidx.paging.ContiguousPagedList: int prependItemsRequested> = $i9;

        $i10 = r0.<androidx.paging.ContiguousPagedList: int prependItemsRequested>;

        if $i10 <= 0 goto label1;

        $r9 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        virtualinvoke $r9.<androidx.paging.LegacyPageFetcher: void trySchedulePrepend()>();

     label1:
        i16 = r0.<androidx.paging.ContiguousPagedList: int appendItemsRequested>;

        z1 = 0;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i16);

        r0.<androidx.paging.ContiguousPagedList: int appendItemsRequested> = $i11;

        $i12 = r0.<androidx.paging.ContiguousPagedList: int appendItemsRequested>;

        if $i12 <= 0 goto label2;

        $r8 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        virtualinvoke $r8.<androidx.paging.LegacyPageFetcher: void tryScheduleAppend()>();

     label2:
        i17 = r0.<androidx.paging.ContiguousPagedList: int lowestIndexAccessed>;

        z2 = 0;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>(i17, i0);

        r0.<androidx.paging.ContiguousPagedList: int lowestIndexAccessed> = $i13;

        i18 = r0.<androidx.paging.ContiguousPagedList: int highestIndexAccessed>;

        z3 = 0;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>(i18, i0);

        r0.<androidx.paging.ContiguousPagedList: int highestIndexAccessed> = $i14;

        specialinvoke r0.<androidx.paging.ContiguousPagedList: void tryDispatchBoundaryCallbacks(boolean)>(1);

        return;
    }

    public void detach()
    {
        androidx.paging.ContiguousPagedList r0;
        androidx.paging.LegacyPageFetcher $r1;

        r0 := @this: androidx.paging.ContiguousPagedList;

        $r1 = r0.<androidx.paging.ContiguousPagedList: androidx.paging.LegacyPageFetcher pager>;

        virtualinvoke $r1.<androidx.paging.LegacyPageFetcher: void detach()>();

        return;
    }

    public void onInitialized(int)
    {
        androidx.paging.ContiguousPagedList r0;
        int i0, $i1, $i2;
        androidx.paging.PagedStorage $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.paging.ContiguousPagedList;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void notifyInserted$paging_common(int,int)>(0, i0);

        $r1 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i1 = virtualinvoke $r1.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        if $i1 > 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.paging.ContiguousPagedList: androidx.paging.PagedStorage getStorage$paging_common()>();

        $i2 = virtualinvoke $r2.<androidx.paging.PagedStorage: int getPlaceholdersAfter()>();

        if $i2 <= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<androidx.paging.ContiguousPagedList: boolean replacePagesWithNulls> = $z0;

        return;
    }

    public void onPagePrepended(int, int, int)
    {
        androidx.paging.ContiguousPagedList r0, r1, r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: androidx.paging.ContiguousPagedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void notifyChanged(int,int)>(i0, i1);

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void notifyInserted$paging_common(int,int)>(0, i2);

        r1 = r0;

        $i3 = r1.<androidx.paging.ContiguousPagedList: int lowestIndexAccessed>;

        $i4 = $i3 + i2;

        r1.<androidx.paging.ContiguousPagedList: int lowestIndexAccessed> = $i4;

        r2 = r0;

        $i5 = r2.<androidx.paging.ContiguousPagedList: int highestIndexAccessed>;

        $i6 = $i5 + i2;

        r2.<androidx.paging.ContiguousPagedList: int highestIndexAccessed> = $i6;

        return;
    }

    public void onPageAppended(int, int, int)
    {
        androidx.paging.ContiguousPagedList r0;
        int i0, i1, i2, $i3;

        r0 := @this: androidx.paging.ContiguousPagedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void notifyChanged(int,int)>(i0, i1);

        $i3 = i0 + i1;

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void notifyInserted$paging_common(int,int)>($i3, i2);

        return;
    }

    public void onPagesRemoved(int, int)
    {
        androidx.paging.ContiguousPagedList r0;
        int i0, i1;

        r0 := @this: androidx.paging.ContiguousPagedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void notifyRemoved(int,int)>(i0, i1);

        return;
    }

    public void onPagesSwappedToPlaceholder(int, int)
    {
        androidx.paging.ContiguousPagedList r0;
        int i0, i1;

        r0 := @this: androidx.paging.ContiguousPagedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.paging.ContiguousPagedList: void notifyChanged(int,int)>(i0, i1);

        return;
    }

    public static final void access$setBoundaryCallbackBeginDeferred$p(androidx.paging.ContiguousPagedList, boolean)
    {
        androidx.paging.ContiguousPagedList $r0;
        boolean z0;

        $r0 := @parameter0: androidx.paging.ContiguousPagedList;

        z0 := @parameter1: boolean;

        $r0.<androidx.paging.ContiguousPagedList: boolean boundaryCallbackBeginDeferred> = z0;

        return;
    }

    public static final void access$setBoundaryCallbackEndDeferred$p(androidx.paging.ContiguousPagedList, boolean)
    {
        androidx.paging.ContiguousPagedList $r0;
        boolean z0;

        $r0 := @parameter0: androidx.paging.ContiguousPagedList;

        z0 := @parameter1: boolean;

        $r0.<androidx.paging.ContiguousPagedList: boolean boundaryCallbackEndDeferred> = z0;

        return;
    }

    public static final void access$tryDispatchBoundaryCallbacks(androidx.paging.ContiguousPagedList, boolean)
    {
        androidx.paging.ContiguousPagedList $r0;
        boolean z0;

        $r0 := @parameter0: androidx.paging.ContiguousPagedList;

        z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.paging.ContiguousPagedList: void tryDispatchBoundaryCallbacks(boolean)>(z0);

        return;
    }

    public static final void access$dispatchBoundaryCallbacks(androidx.paging.ContiguousPagedList, boolean, boolean)
    {
        androidx.paging.ContiguousPagedList $r0;
        boolean z0, z1;

        $r0 := @parameter0: androidx.paging.ContiguousPagedList;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke $r0.<androidx.paging.ContiguousPagedList: void dispatchBoundaryCallbacks(boolean,boolean)>(z0, z1);

        return;
    }

    static void <clinit>()
    {
        androidx.paging.ContiguousPagedList$Companion $r0;

        $r0 = new androidx.paging.ContiguousPagedList$Companion;

        specialinvoke $r0.<androidx.paging.ContiguousPagedList$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.ContiguousPagedList: androidx.paging.ContiguousPagedList$Companion Companion> = $r0;

        return;
    }

