androidx.camera.camera2.internal.TorchControl
<androidx.camera.camera2.internal.TorchControl: java.lang.String TAG>
<androidx.camera.camera2.internal.TorchControl: int DEFAULT_TORCH_STATE>
<androidx.camera.camera2.internal.TorchControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>
<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.MutableLiveData mTorchState>
<androidx.camera.camera2.internal.TorchControl: boolean mHasFlashUnit>
<androidx.camera.camera2.internal.TorchControl: java.util.concurrent.Executor mExecutor>
<androidx.camera.camera2.internal.TorchControl: boolean mIsActive>
<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter>
<androidx.camera.camera2.internal.TorchControl: boolean mTargetTorchEnabled>
    void <init>(androidx.camera.camera2.internal.Camera2CameraControlImpl, androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat, java.util.concurrent.Executor)
    {
        androidx.camera.camera2.internal.TorchControl r0;
        androidx.camera.camera2.internal.Camera2CameraControlImpl r1, $r7;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat r2;
        java.util.concurrent.Executor r3;
        androidx.camera.camera2.internal.Camera2CameraControlImpl$CaptureResultListener r4;
        boolean $z0;
        androidx.lifecycle.MutableLiveData $r5;
        java.lang.Integer $r6;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        r1 := @parameter0: androidx.camera.camera2.internal.Camera2CameraControlImpl;

        r2 := @parameter1: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat;

        r3 := @parameter2: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.TorchControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl> = r1;

        r0.<androidx.camera.camera2.internal.TorchControl: java.util.concurrent.Executor mExecutor> = r3;

        $z0 = staticinvoke <androidx.camera.camera2.internal.compat.workaround.FlashAvailabilityChecker: boolean isFlashAvailable(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r2);

        r0.<androidx.camera.camera2.internal.TorchControl: boolean mHasFlashUnit> = $z0;

        $r5 = new androidx.lifecycle.MutableLiveData;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke $r5.<androidx.lifecycle.MutableLiveData: void <init>(java.lang.Object)>($r6);

        r0.<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.MutableLiveData mTorchState> = $r5;

        r4 = dynamicinvoke "onCaptureResult" <androidx.camera.camera2.internal.Camera2CameraControlImpl$CaptureResultListener (androidx.camera.camera2.internal.TorchControl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(android.hardware.camera2.TotalCaptureResult), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.camera2.internal.TorchControl: boolean lambda$new$0(android.hardware.camera2.TotalCaptureResult)>, methodtype: boolean __METHODTYPE__(android.hardware.camera2.TotalCaptureResult));

        $r7 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        virtualinvoke $r7.<androidx.camera.camera2.internal.Camera2CameraControlImpl: void addCaptureResultListener(androidx.camera.camera2.internal.Camera2CameraControlImpl$CaptureResultListener)>(r4);

        return;
    }

    void setActive(boolean)
    {
        androidx.camera.camera2.internal.TorchControl r0;
        boolean z0, $z1, $z2;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r1, $r3;
        androidx.camera.core.CameraControl$OperationCanceledException $r2;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r4;
        androidx.lifecycle.MutableLiveData $r5;
        java.lang.Integer $r6;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.camera.camera2.internal.TorchControl: boolean mIsActive>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<androidx.camera.camera2.internal.TorchControl: boolean mIsActive> = z0;

        if z0 != 0 goto label3;

        $z2 = r0.<androidx.camera.camera2.internal.TorchControl: boolean mTargetTorchEnabled>;

        if $z2 == 0 goto label2;

        r0.<androidx.camera.camera2.internal.TorchControl: boolean mTargetTorchEnabled> = 0;

        $r4 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        virtualinvoke $r4.<androidx.camera.camera2.internal.Camera2CameraControlImpl: void enableTorchInternal(boolean)>(0);

        $r5 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.MutableLiveData mTorchState>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r0.<androidx.camera.camera2.internal.TorchControl: void setLiveDataValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r5, $r6);

     label2:
        $r1 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter>;

        if $r1 == null goto label3;

        $r3 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter>;

        $r2 = new androidx.camera.core.CameraControl$OperationCanceledException;

        specialinvoke $r2.<androidx.camera.core.CameraControl$OperationCanceledException: void <init>(java.lang.String)>("Camera is not active.");

        virtualinvoke $r3.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>($r2);

        r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter> = null;

     label3:
        return;
    }

    com.google.common.util.concurrent.ListenableFuture enableTorch(boolean)
    {
        androidx.camera.camera2.internal.TorchControl r0;
        boolean z0, $z1;
        androidx.lifecycle.MutableLiveData $r1;
        java.lang.Integer $r2;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r3;
        com.google.common.util.concurrent.ListenableFuture $r4, $r7;
        java.lang.IllegalStateException $r6;
        byte $b0;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.camera.camera2.internal.TorchControl: boolean mHasFlashUnit>;

        if $z1 != 0 goto label1;

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TorchControl", "Unable to enableTorch due to there is no flash unit.");

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No flash unit");

        $r7 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>($r6);

        return $r7;

     label1:
        $r1 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.MutableLiveData mTorchState>;

        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0);

        specialinvoke r0.<androidx.camera.camera2.internal.TorchControl: void setLiveDataValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r1, $r2);

        $r3 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.camera2.internal.TorchControl,boolean)>(r0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.camera2.internal.TorchControl: java.lang.Object lambda$enableTorch$2(boolean,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r4 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r3);

        return $r4;
    }

    androidx.lifecycle.LiveData getTorchState()
    {
        androidx.camera.camera2.internal.TorchControl r0;
        androidx.lifecycle.MutableLiveData $r1;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        $r1 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.MutableLiveData mTorchState>;

        return $r1;
    }

    void enableTorchInternal(androidx.concurrent.futures.CallbackToFutureAdapter$Completer, boolean)
    {
        androidx.camera.camera2.internal.TorchControl r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1, $r5, $r7;
        boolean z0, $z1, $z2;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r2;
        androidx.lifecycle.MutableLiveData $r3, $r9;
        java.lang.Integer $r4, $r10;
        androidx.camera.core.CameraControl$OperationCanceledException $r6, $r11;
        java.lang.IllegalStateException $r12;
        byte $b0;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        z0 := @parameter1: boolean;

        $z1 = r0.<androidx.camera.camera2.internal.TorchControl: boolean mHasFlashUnit>;

        if $z1 != 0 goto label2;

        if r1 == null goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No flash unit");

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>($r12);

     label1:
        return;

     label2:
        $z2 = r0.<androidx.camera.camera2.internal.TorchControl: boolean mIsActive>;

        if $z2 != 0 goto label4;

        $r9 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.MutableLiveData mTorchState>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r0.<androidx.camera.camera2.internal.TorchControl: void setLiveDataValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r9, $r10);

        if r1 == null goto label3;

        $r11 = new androidx.camera.core.CameraControl$OperationCanceledException;

        specialinvoke $r11.<androidx.camera.core.CameraControl$OperationCanceledException: void <init>(java.lang.String)>("Camera is not active.");

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>($r11);

     label3:
        return;

     label4:
        r0.<androidx.camera.camera2.internal.TorchControl: boolean mTargetTorchEnabled> = z0;

        $r2 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        virtualinvoke $r2.<androidx.camera.camera2.internal.Camera2CameraControlImpl: void enableTorchInternal(boolean)>(z0);

        $r3 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.MutableLiveData mTorchState>;

        if z0 == 0 goto label5;

        $b0 = 1;

        goto label6;

     label5:
        $b0 = 0;

     label6:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0);

        specialinvoke r0.<androidx.camera.camera2.internal.TorchControl: void setLiveDataValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r3, $r4);

        $r5 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter>;

        if $r5 == null goto label7;

        $r7 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter>;

        $r6 = new androidx.camera.core.CameraControl$OperationCanceledException;

        specialinvoke $r6.<androidx.camera.core.CameraControl$OperationCanceledException: void <init>(java.lang.String)>("There is a new enableTorch being set");

        virtualinvoke $r7.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>($r6);

     label7:
        r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter> = r1;

        return;
    }

    private void setLiveDataValue(androidx.lifecycle.MutableLiveData, java.lang.Object)
    {
        androidx.camera.camera2.internal.TorchControl r0;
        androidx.lifecycle.MutableLiveData r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        r1 := @parameter0: androidx.lifecycle.MutableLiveData;

        r2 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <androidx.camera.core.impl.utils.Threads: boolean isMainThread()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(r2);

        goto label2;

     label1:
        virtualinvoke r1.<androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)>(r2);

     label2:
        return;
    }

    private java.lang.Object lambda$enableTorch$2(boolean, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.camera2.internal.TorchControl r0;
        boolean z0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r2 = r0.<androidx.camera.camera2.internal.TorchControl: java.util.concurrent.Executor mExecutor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.camera2.internal.TorchControl,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,boolean)>(r0, r1, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.camera2.internal.TorchControl: void lambda$enableTorch$1(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,boolean)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enableTorch: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void lambda$enableTorch$1(androidx.concurrent.futures.CallbackToFutureAdapter$Completer, boolean)
    {
        androidx.camera.camera2.internal.TorchControl r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        boolean z0;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<androidx.camera.camera2.internal.TorchControl: void enableTorchInternal(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,boolean)>(r1, z0);

        return;
    }

    private boolean lambda$new$0(android.hardware.camera2.TotalCaptureResult)
    {
        androidx.camera.camera2.internal.TorchControl r0;
        android.hardware.camera2.TotalCaptureResult r1;
        android.hardware.camera2.CaptureRequest r2;
        java.lang.Integer r3;
        boolean z0, $z2, $z3;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r4, $r7;
        android.hardware.camera2.CaptureRequest$Key $r5;
        java.lang.Object $r6;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.TorchControl;

        r1 := @parameter0: android.hardware.camera2.TotalCaptureResult;

        $r4 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter>;

        if $r4 == null goto label3;

        r2 = virtualinvoke r1.<android.hardware.camera2.TotalCaptureResult: android.hardware.camera2.CaptureRequest getRequest()>();

        $r5 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key FLASH_MODE>;

        $r6 = virtualinvoke r2.<android.hardware.camera2.CaptureRequest: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r5);

        r3 = (java.lang.Integer) $r6;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i0 != 2 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $z3 = r0.<androidx.camera.camera2.internal.TorchControl: boolean mTargetTorchEnabled>;

        if z0 != $z3 goto label3;

        $r7 = r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter>;

        virtualinvoke $r7.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(null);

        r0.<androidx.camera.camera2.internal.TorchControl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mEnableTorchCompleter> = null;

     label3:
        return 0;
    }

