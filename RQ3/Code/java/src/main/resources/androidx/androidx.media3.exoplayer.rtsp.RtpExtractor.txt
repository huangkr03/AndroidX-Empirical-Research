androidx.media3.exoplayer.rtsp.RtpExtractor
<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader payloadReader>
<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketScratchBuffer>
<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketDataBuffer>
<androidx.media3.exoplayer.rtsp.RtpExtractor: int trackId>
<androidx.media3.exoplayer.rtsp.RtpExtractor: java.lang.Object lock>
<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue reorderingQueue>
<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.extractor.ExtractorOutput output>
<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean firstPacketRead>
<androidx.media3.exoplayer.rtsp.RtpExtractor: long firstTimestamp>
<androidx.media3.exoplayer.rtsp.RtpExtractor: int firstSequenceNumber>
<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean isSeekPending>
<androidx.media3.exoplayer.rtsp.RtpExtractor: long nextRtpTimestamp>
<androidx.media3.exoplayer.rtsp.RtpExtractor: long playbackStartTimeUs>
    public void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat, int)
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        androidx.media3.exoplayer.rtsp.RtpPayloadFormat r1;
        int i0;
        androidx.media3.exoplayer.rtsp.reader.DefaultRtpPayloadReaderFactory $r2;
        androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader $r3, $r5;
        java.lang.Object $r4, $r8;
        androidx.media3.common.util.ParsableByteArray $r6, $r7;
        androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue $r9;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        r1 := @parameter0: androidx.media3.exoplayer.rtsp.RtpPayloadFormat;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: int trackId> = i0;

        $r2 = new androidx.media3.exoplayer.rtsp.reader.DefaultRtpPayloadReaderFactory;

        specialinvoke $r2.<androidx.media3.exoplayer.rtsp.reader.DefaultRtpPayloadReaderFactory: void <init>()>();

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.rtsp.reader.DefaultRtpPayloadReaderFactory: androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader createPayloadReader(androidx.media3.exoplayer.rtsp.RtpPayloadFormat)>(r1);

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader) $r4;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader payloadReader> = $r5;

        $r6 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r6.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(65507);

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketScratchBuffer> = $r6;

        $r7 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r7.<androidx.media3.common.util.ParsableByteArray: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketDataBuffer> = $r7;

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: java.lang.Object lock> = $r8;

        $r9 = new androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue;

        specialinvoke $r9.<androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue reorderingQueue> = $r9;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long firstTimestamp> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: int firstSequenceNumber> = -1;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long nextRtpTimestamp> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long playbackStartTimeUs> = -9223372036854775807L;

        return;
    }

    public void setFirstTimestamp(long)
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long firstTimestamp> = l0;

        return;
    }

    public void setFirstSequenceNumber(int)
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: int firstSequenceNumber> = i0;

        return;
    }

    public boolean hasReadFirstRtpPacket()
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        $z0 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean firstPacketRead>;

        return $z0;
    }

    public void preSeek()
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        java.lang.Object r1, $r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        $r2 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: java.lang.Object lock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean isSeekPending> = 1;

        exitmonitor r1;

        goto label1;

     label1:
        return;
    }

    public boolean sniff(androidx.media3.extractor.ExtractorInput)
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RTP packets are transmitted in a packet stream do not support sniffing.");

        throw $r2;
    }

    public void init(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        androidx.media3.extractor.ExtractorOutput r1;
        int $i0;
        androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader $r2;
        androidx.media3.extractor.SeekMap$Unseekable $r3;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        $r2 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader payloadReader>;

        $i0 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: int trackId>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader: void createTracks(androidx.media3.extractor.ExtractorOutput,int)>(r1, $i0);

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: void endTracks()>();

        $r3 = new androidx.media3.extractor.SeekMap$Unseekable;

        specialinvoke $r3.<androidx.media3.extractor.SeekMap$Unseekable: void <init>(long)>(-9223372036854775807L);

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>($r3);

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.extractor.ExtractorOutput output> = r1;

        return;
    }

    public int read(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        int i0, $i3, $i13, $i14, $i16;
        long l1, l2, $l4, $l5, $l7, $l9, $l10, $l11, $l15, $l17;
        androidx.media3.exoplayer.rtsp.RtpPacket r3, r24, r25;
        java.lang.Object r4, $r26;
        java.lang.Throwable r5, $r23;
        androidx.media3.extractor.ExtractorOutput $r6;
        androidx.media3.common.util.ParsableByteArray $r8, $r10, $r11, $r12, $r16, $r17;
        byte[] $r9, $r15;
        androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue $r13, $r14, $r19, $r20;
        boolean $z1, $z2, $z3;
        androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader $r18, $r21, $r22;
        byte $b6, $b8, $b12;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        $r6 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.extractor.ExtractorOutput output>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketScratchBuffer>;

        $r9 = virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        i0 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: int read(byte[],int,int)>($r9, 0, 65507);

        if i0 != -1 goto label01;

        return -1;

     label01:
        if i0 != 0 goto label02;

        return 0;

     label02:
        $r10 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketScratchBuffer>;

        virtualinvoke $r10.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r11 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketScratchBuffer>;

        virtualinvoke $r11.<androidx.media3.common.util.ParsableByteArray: void setLimit(int)>(i0);

        $r12 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketScratchBuffer>;

        r24 = staticinvoke <androidx.media3.exoplayer.rtsp.RtpPacket: androidx.media3.exoplayer.rtsp.RtpPacket parse(androidx.media3.common.util.ParsableByteArray)>($r12);

        if r24 != null goto label03;

        return 0;

     label03:
        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <androidx.media3.exoplayer.rtsp.RtpExtractor: long getCutoffTimeMs(long)>(l1);

        $r13 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue reorderingQueue>;

        virtualinvoke $r13.<androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue: boolean offer(androidx.media3.exoplayer.rtsp.RtpPacket,long)>(r24, l1);

        $r14 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue reorderingQueue>;

        r3 = virtualinvoke $r14.<androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue: androidx.media3.exoplayer.rtsp.RtpPacket poll(long)>(l2);

        if r3 != null goto label04;

        return 0;

     label04:
        r25 = r3;

        $z1 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean firstPacketRead>;

        if $z1 != 0 goto label07;

        $l11 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long firstTimestamp>;

        $b12 = $l11 cmp -9223372036854775807L;

        if $b12 != 0 goto label05;

        $l17 = r25.<androidx.media3.exoplayer.rtsp.RtpPacket: long timestamp>;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long firstTimestamp> = $l17;

     label05:
        $i13 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: int firstSequenceNumber>;

        if $i13 != -1 goto label06;

        $i16 = r25.<androidx.media3.exoplayer.rtsp.RtpPacket: int sequenceNumber>;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: int firstSequenceNumber> = $i16;

     label06:
        $r22 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader payloadReader>;

        $l15 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long firstTimestamp>;

        $i14 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: int firstSequenceNumber>;

        interfaceinvoke $r22.<androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader: void onReceivingFirstPacket(long,int)>($l15, $i14);

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean firstPacketRead> = 1;

     label07:
        $r26 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: java.lang.Object lock>;

        r4 = $r26;

        entermonitor $r26;

     label08:
        $z3 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean isSeekPending>;

        if $z3 == 0 goto label09;

        $l5 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long nextRtpTimestamp>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 == 0 goto label10;

        $l7 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long playbackStartTimeUs>;

        $b8 = $l7 cmp -9223372036854775807L;

        if $b8 == 0 goto label10;

        $r20 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue reorderingQueue>;

        virtualinvoke $r20.<androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue: void reset()>();

        $r21 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader payloadReader>;

        $l10 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long nextRtpTimestamp>;

        $l9 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long playbackStartTimeUs>;

        interfaceinvoke $r21.<androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader: void seek(long,long)>($l10, $l9);

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean isSeekPending> = 0;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long nextRtpTimestamp> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long playbackStartTimeUs> = -9223372036854775807L;

        goto label10;

     label09:
        $r16 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketDataBuffer>;

        $r15 = r25.<androidx.media3.exoplayer.rtsp.RtpPacket: byte[] payloadData>;

        virtualinvoke $r16.<androidx.media3.common.util.ParsableByteArray: void reset(byte[])>($r15);

        $r18 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader payloadReader>;

        $r17 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.common.util.ParsableByteArray rtpPacketDataBuffer>;

        $l4 = r25.<androidx.media3.exoplayer.rtsp.RtpPacket: long timestamp>;

        $i3 = r25.<androidx.media3.exoplayer.rtsp.RtpPacket: int sequenceNumber>;

        $z2 = r25.<androidx.media3.exoplayer.rtsp.RtpPacket: boolean marker>;

        interfaceinvoke $r18.<androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader: void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean)>($r17, $l4, $i3, $z2);

        $r19 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue reorderingQueue>;

        r25 = virtualinvoke $r19.<androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue: androidx.media3.exoplayer.rtsp.RtpPacket poll(long)>(l2);

        if r25 != null goto label09;

     label10:
        exitmonitor r4;

     label11:
        goto label14;

     label12:
        $r23 := @caughtexception;

        r5 = $r23;

        exitmonitor r4;

     label13:
        throw r5;

     label14:
        return 0;

        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void seek(long, long)
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;
        long l0, l1;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: java.lang.Object lock>;

        r1 = $r2;

        entermonitor $r2;

        $z0 = r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean isSeekPending>;

        if $z0 != 0 goto label1;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: boolean isSeekPending> = 1;

     label1:
        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long nextRtpTimestamp> = l0;

        r0.<androidx.media3.exoplayer.rtsp.RtpExtractor: long playbackStartTimeUs> = l1;

        exitmonitor r1;

        goto label2;

     label2:
        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.rtsp.RtpExtractor r0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtpExtractor;

        return;
    }

    private static long getCutoffTimeMs(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = l0 - 30L;

        return $l1;
    }

