androidx.work.multiprocess.ListenableWorkerImplClient
<androidx.work.multiprocess.ListenableWorkerImplClient: java.lang.String TAG>
<androidx.work.multiprocess.ListenableWorkerImplClient: android.content.Context mContext>
<androidx.work.multiprocess.ListenableWorkerImplClient: java.util.concurrent.Executor mExecutor>
<androidx.work.multiprocess.ListenableWorkerImplClient: java.lang.Object mLock>
<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>
    public void <init>(android.content.Context, java.util.concurrent.Executor)
    {
        androidx.work.multiprocess.ListenableWorkerImplClient r0;
        android.content.Context r1;
        java.util.concurrent.Executor r2;
        java.lang.Object $r3;

        r0 := @this: androidx.work.multiprocess.ListenableWorkerImplClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.multiprocess.ListenableWorkerImplClient: android.content.Context mContext> = r1;

        r0.<androidx.work.multiprocess.ListenableWorkerImplClient: java.util.concurrent.Executor mExecutor> = r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<androidx.work.multiprocess.ListenableWorkerImplClient: java.lang.Object mLock> = $r3;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture getListenableWorkerImpl(android.content.ComponentName)
    {
        androidx.work.multiprocess.ListenableWorkerImplClient r0;
        android.content.ComponentName r1;
        java.lang.Object r2, $r4;
        boolean z0;
        java.lang.Throwable r3, $r23, $r25, r27;
        androidx.work.multiprocess.ListenableWorkerImplClient$Connection $r5, $r16, $r19, $r22, $r24, $r28;
        androidx.work.Logger $r6;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r14;
        java.lang.String $r8, $r10, $r13, $r15;
        android.content.Intent $r17, r26;
        android.content.Context $r20;
        java.lang.RuntimeException $r21;
        androidx.work.impl.utils.futures.SettableFuture $r29;

        r0 := @this: androidx.work.multiprocess.ListenableWorkerImplClient;

        r1 := @parameter0: android.content.ComponentName;

        $r4 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>;

        if $r5 != null goto label5;

        $r6 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r8 = <androidx.work.multiprocess.ListenableWorkerImplClient: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding to ");

        $r10 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r13 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r8, $r15);

        $r16 = new androidx.work.multiprocess.ListenableWorkerImplClient$Connection;

        specialinvoke $r16.<androidx.work.multiprocess.ListenableWorkerImplClient$Connection: void <init>()>();

        r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection> = $r16;

     label2:
        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>()>();

        r26 = $r17;

        virtualinvoke r26.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r1);

        $r20 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: android.content.Context mContext>;

        $r19 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>;

        z0 = virtualinvoke $r20.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r26, $r19, 1);

        if z0 != 0 goto label3;

        $r22 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>;

        $r21 = new java.lang.RuntimeException;

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unable to bind to service");

        staticinvoke <androidx.work.multiprocess.ListenableWorkerImplClient: void unableToBind(androidx.work.multiprocess.ListenableWorkerImplClient$Connection,java.lang.Throwable)>($r22, $r21);

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        r27 = $r23;

        $r24 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>;

        staticinvoke <androidx.work.multiprocess.ListenableWorkerImplClient: void unableToBind(androidx.work.multiprocess.ListenableWorkerImplClient$Connection,java.lang.Throwable)>($r24, r27);

     label5:
        $r28 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>;

        $r29 = $r28.<androidx.work.multiprocess.ListenableWorkerImplClient$Connection: androidx.work.impl.utils.futures.SettableFuture mFuture>;

        exitmonitor r2;

     label6:
        return $r29;

     label7:
        $r25 := @caughtexception;

        r3 = $r25;

        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public com.google.common.util.concurrent.ListenableFuture execute(android.content.ComponentName, androidx.work.multiprocess.RemoteDispatcher)
    {
        androidx.work.multiprocess.ListenableWorkerImplClient r0;
        android.content.ComponentName r1;
        androidx.work.multiprocess.RemoteDispatcher r2;
        com.google.common.util.concurrent.ListenableFuture r3, $r5;
        androidx.work.multiprocess.RemoteCallback $r4;

        r0 := @this: androidx.work.multiprocess.ListenableWorkerImplClient;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: androidx.work.multiprocess.RemoteDispatcher;

        r3 = virtualinvoke r0.<androidx.work.multiprocess.ListenableWorkerImplClient: com.google.common.util.concurrent.ListenableFuture getListenableWorkerImpl(android.content.ComponentName)>(r1);

        $r4 = new androidx.work.multiprocess.RemoteCallback;

        specialinvoke $r4.<androidx.work.multiprocess.RemoteCallback: void <init>()>();

        $r5 = virtualinvoke r0.<androidx.work.multiprocess.ListenableWorkerImplClient: com.google.common.util.concurrent.ListenableFuture execute(com.google.common.util.concurrent.ListenableFuture,androidx.work.multiprocess.RemoteDispatcher,androidx.work.multiprocess.RemoteCallback)>(r3, r2, $r4);

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture execute(com.google.common.util.concurrent.ListenableFuture, androidx.work.multiprocess.RemoteDispatcher, androidx.work.multiprocess.RemoteCallback)
    {
        androidx.work.multiprocess.ListenableWorkerImplClient r0;
        com.google.common.util.concurrent.ListenableFuture r1, $r6;
        androidx.work.multiprocess.RemoteDispatcher r2;
        androidx.work.multiprocess.RemoteCallback r3;
        androidx.work.multiprocess.ListenableWorkerImplClient$1 $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: androidx.work.multiprocess.ListenableWorkerImplClient;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r2 := @parameter1: androidx.work.multiprocess.RemoteDispatcher;

        r3 := @parameter2: androidx.work.multiprocess.RemoteCallback;

        $r4 = new androidx.work.multiprocess.ListenableWorkerImplClient$1;

        specialinvoke $r4.<androidx.work.multiprocess.ListenableWorkerImplClient$1: void <init>(androidx.work.multiprocess.ListenableWorkerImplClient,com.google.common.util.concurrent.ListenableFuture,androidx.work.multiprocess.RemoteCallback,androidx.work.multiprocess.RemoteDispatcher)>(r0, r1, r3, r2);

        $r5 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: java.util.concurrent.Executor mExecutor>;

        interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r4, $r5);

        $r6 = virtualinvoke r3.<androidx.work.multiprocess.RemoteCallback: com.google.common.util.concurrent.ListenableFuture getFuture()>();

        return $r6;
    }

    public void unbindService()
    {
        androidx.work.multiprocess.ListenableWorkerImplClient r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        androidx.work.multiprocess.ListenableWorkerImplClient$Connection $r4, $r5;
        android.content.Context $r6;

        r0 := @this: androidx.work.multiprocess.ListenableWorkerImplClient;

        $r3 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>;

        if $r4 == null goto label2;

        $r6 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: android.content.Context mContext>;

        $r5 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>;

        virtualinvoke $r6.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r5);

        r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection> = null;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public androidx.work.multiprocess.ListenableWorkerImplClient$Connection getConnection()
    {
        androidx.work.multiprocess.ListenableWorkerImplClient r0;
        androidx.work.multiprocess.ListenableWorkerImplClient$Connection $r1;

        r0 := @this: androidx.work.multiprocess.ListenableWorkerImplClient;

        $r1 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient: androidx.work.multiprocess.ListenableWorkerImplClient$Connection mConnection>;

        return $r1;
    }

    private static void unableToBind(androidx.work.multiprocess.ListenableWorkerImplClient$Connection, java.lang.Throwable)
    {
        androidx.work.multiprocess.ListenableWorkerImplClient$Connection r0;
        java.lang.Throwable r1;
        androidx.work.Logger $r2;
        java.lang.String $r3;
        androidx.work.impl.utils.futures.SettableFuture $r4;

        r0 := @parameter0: androidx.work.multiprocess.ListenableWorkerImplClient$Connection;

        r1 := @parameter1: java.lang.Throwable;

        $r2 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r3 = <androidx.work.multiprocess.ListenableWorkerImplClient: java.lang.String TAG>;

        virtualinvoke $r2.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Unable to bind to service", r1);

        $r4 = r0.<androidx.work.multiprocess.ListenableWorkerImplClient$Connection: androidx.work.impl.utils.futures.SettableFuture mFuture>;

        virtualinvoke $r4.<androidx.work.impl.utils.futures.SettableFuture: boolean setException(java.lang.Throwable)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("ListenableWorkerImplClient");

        <androidx.work.multiprocess.ListenableWorkerImplClient: java.lang.String TAG> = $r0;

        return;
    }

