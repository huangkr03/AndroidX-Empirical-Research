androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl
<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: android.hardware.camera2.CameraManager mCameraManager>
<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: java.lang.Object mObject>
    void <init>(android.content.Context, java.lang.Object)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl r0;
        android.content.Context r1;
        java.lang.Object r2, $r3;
        android.hardware.camera2.CameraManager $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("camera");

        $r4 = (android.hardware.camera2.CameraManager) $r3;

        r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: android.hardware.camera2.CameraManager mCameraManager> = $r4;

        r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: java.lang.Object mObject> = r2;

        return;
    }

    static androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl create(android.content.Context, android.os.Handler)
    {
        android.content.Context r0;
        android.os.Handler r1;
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl $r2;
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21 $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        $r2 = new androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl;

        $r3 = new androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21;

        specialinvoke $r3.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: void <init>(android.os.Handler)>(r1);

        specialinvoke $r2.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: void <init>(android.content.Context,java.lang.Object)>(r0, $r3);

        return $r2;
    }

    public java.lang.String[] getCameraIdList() throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl r0;
        java.lang.Throwable r1, $r4, r6;
        android.hardware.camera2.CameraManager $r2;
        java.lang.String[] $r3;
        androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat $r5;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl;

     label1:
        $r2 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: android.hardware.camera2.CameraManager mCameraManager>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdList()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = staticinvoke <androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat: androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat toCameraAccessExceptionCompat(android.hardware.camera2.CameraAccessException)>(r1);

        r6 = (java.lang.Throwable) $r5;

        throw r6;

        catch android.hardware.camera2.CameraAccessException from label1 to label2 with label3;
    }

    public void registerAvailabilityCallback(java.util.concurrent.Executor, android.hardware.camera2.CameraManager$AvailabilityCallback)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl r0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.CameraManager$AvailabilityCallback r2;
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21 r3;
        java.util.Map r4, $r9, $r10, $r13;
        java.lang.Throwable r5, $r16;
        java.lang.Object $r6, $r11;
        android.os.Handler $r7;
        android.hardware.camera2.CameraManager $r8;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper $r12, r17;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.hardware.camera2.CameraManager$AvailabilityCallback;

        if r1 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor was null");

        throw $r15;

     label1:
        r17 = null;

        $r6 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: java.lang.Object mObject>;

        r3 = (androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21) $r6;

        if r2 == null goto label7;

        $r9 = r3.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: java.util.Map mWrapperMap>;

        r4 = $r9;

        entermonitor $r9;

     label2:
        $r10 = r3.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: java.util.Map mWrapperMap>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r17 = (androidx.camera.camera2.internal.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper) $r11;

        if r17 != null goto label3;

        $r12 = new androidx.camera.camera2.internal.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper;

        specialinvoke $r12.<androidx.camera.camera2.internal.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper: void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraManager$AvailabilityCallback)>(r1, r2);

        r17 = $r12;

        $r13 = r3.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: java.util.Map mWrapperMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r17);

     label3:
        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        $r8 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: android.hardware.camera2.CameraManager mCameraManager>;

        $r7 = r3.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: android.os.Handler mCompatHandler>;

        virtualinvoke $r8.<android.hardware.camera2.CameraManager: void registerAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback,android.os.Handler)>(r17, $r7);

        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl r0;
        android.hardware.camera2.CameraManager$AvailabilityCallback r1;
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21 r2;
        java.util.Map r3, $r7, $r8;
        java.lang.Throwable r4, $r10;
        android.hardware.camera2.CameraManager $r5;
        java.lang.Object $r6, $r9;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper r11;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl;

        r1 := @parameter0: android.hardware.camera2.CameraManager$AvailabilityCallback;

        r11 = null;

        if r1 == null goto label5;

        $r6 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: java.lang.Object mObject>;

        r2 = (androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21) $r6;

        $r7 = r2.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: java.util.Map mWrapperMap>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r2.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: java.util.Map mWrapperMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r11 = (androidx.camera.camera2.internal.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper) $r9;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r11 == null goto label6;

        virtualinvoke r11.<androidx.camera.camera2.internal.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper: void setDisabled()>();

     label6:
        $r5 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: android.hardware.camera2.CameraManager mCameraManager>;

        virtualinvoke $r5.<android.hardware.camera2.CameraManager: void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback)>(r11);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r5, r7;
        android.hardware.camera2.CameraManager $r3;
        android.hardware.camera2.CameraCharacteristics $r4;
        androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat $r6;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: android.hardware.camera2.CameraManager mCameraManager>;

        $r4 = virtualinvoke $r3.<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = staticinvoke <androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat: androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat toCameraAccessExceptionCompat(android.hardware.camera2.CameraAccessException)>(r2);

        r7 = (java.lang.Throwable) $r6;

        throw r7;

        catch android.hardware.camera2.CameraAccessException from label1 to label2 with label3;
    }

    public void openCamera(java.lang.String, java.util.concurrent.Executor, android.hardware.camera2.CameraDevice$StateCallback) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl r0;
        java.lang.String r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraDevice$StateCallback r3;
        androidx.camera.camera2.internal.compat.CameraDeviceCompat$StateCallbackExecutorWrapper r4, r15;
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21 r5;
        java.lang.Throwable r6, $r13, r16;
        java.lang.Object $r10;
        android.os.Handler $r11;
        android.hardware.camera2.CameraManager $r12;
        androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat $r14;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraDevice$StateCallback;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        r15 = new androidx.camera.camera2.internal.compat.CameraDeviceCompat$StateCallbackExecutorWrapper;

        specialinvoke r15.<androidx.camera.camera2.internal.compat.CameraDeviceCompat$StateCallbackExecutorWrapper: void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback)>(r2, r3);

        r4 = r15;

        $r10 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: java.lang.Object mObject>;

        r5 = (androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21) $r10;

     label1:
        $r12 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: android.hardware.camera2.CameraManager mCameraManager>;

        $r11 = r5.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: android.os.Handler mCompatHandler>;

        virtualinvoke $r12.<android.hardware.camera2.CameraManager: void openCamera(java.lang.String,android.hardware.camera2.CameraDevice$StateCallback,android.os.Handler)>(r1, r4, $r11);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r6 = $r13;

        $r14 = staticinvoke <androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat: androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat toCameraAccessExceptionCompat(android.hardware.camera2.CameraAccessException)>(r6);

        r16 = (java.lang.Throwable) $r14;

        throw r16;

     label4:
        return;

        catch android.hardware.camera2.CameraAccessException from label1 to label2 with label3;
    }

    public android.hardware.camera2.CameraManager getCameraManager()
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl r0;
        android.hardware.camera2.CameraManager $r1;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl;

        $r1 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl: android.hardware.camera2.CameraManager mCameraManager>;

        return $r1;
    }

androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21
<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: java.util.Map mWrapperMap>
<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: android.os.Handler mCompatHandler>
    void <init>(android.os.Handler)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21 r0;
        android.os.Handler r1;
        java.util.HashMap $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21;

        r1 := @parameter0: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: java.util.Map mWrapperMap> = $r2;

        r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21: android.os.Handler mCompatHandler> = r1;

        return;
    }

