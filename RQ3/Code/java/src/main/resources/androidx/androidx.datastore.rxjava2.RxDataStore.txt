androidx.datastore.rxjava2.RxDataStore
<androidx.datastore.rxjava2.RxDataStore: androidx.datastore.rxjava2.RxDataStore$Companion Companion>
<androidx.datastore.rxjava2.RxDataStore: androidx.datastore.core.DataStore delegateDs>
<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope>
    private void <init>(androidx.datastore.core.DataStore, kotlinx.coroutines.CoroutineScope)
    {
        androidx.datastore.rxjava2.RxDataStore r0;
        androidx.datastore.core.DataStore r1;
        kotlinx.coroutines.CoroutineScope r2;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore;

        r1 := @parameter0: androidx.datastore.core.DataStore;

        r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.rxjava2.RxDataStore: androidx.datastore.core.DataStore delegateDs> = r1;

        r0.<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope> = r2;

        return;
    }

    public void dispose()
    {
        androidx.datastore.rxjava2.RxDataStore r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.Job $r3;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore;

        $r1 = r0.<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope>;

        $r2 = interfaceinvoke $r1.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r3 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)>($r2);

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>($r3, null, 1, null);

        return;
    }

    public boolean isDisposed()
    {
        androidx.datastore.rxjava2.RxDataStore r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.Job $r3;
        boolean $z0;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore;

        $r1 = r0.<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope>;

        $r2 = interfaceinvoke $r1.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r3 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)>($r2);

        $z0 = interfaceinvoke $r3.<kotlinx.coroutines.Job: boolean isActive()>();

        return $z0;
    }

    public final io.reactivex.Completable shutdownComplete()
    {
        androidx.datastore.rxjava2.RxDataStore r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlin.coroutines.CoroutineContext $r2, $r5;
        kotlinx.coroutines.Job$Key $r3;
        kotlin.coroutines.CoroutineContext$Key $r4;
        androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1 $r6;
        kotlin.jvm.functions.Function2 $r7;
        io.reactivex.Completable $r8;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore;

        $r1 = r0.<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope>;

        $r2 = interfaceinvoke $r1.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r3 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

        $r4 = (kotlin.coroutines.CoroutineContext$Key) $r3;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)>($r4);

        $r6 = new androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1;

        specialinvoke $r6.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: void <init>(androidx.datastore.rxjava2.RxDataStore,kotlin.coroutines.Continuation)>(r0, null);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        $r8 = staticinvoke <kotlinx.coroutines.rx2.RxCompletableKt: io.reactivex.Completable rxCompletable(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>($r5, $r7);

        return $r8;
    }

    public final io.reactivex.Flowable data()
    {
        androidx.datastore.rxjava2.RxDataStore r0;
        androidx.datastore.core.DataStore $r1;
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlin.coroutines.CoroutineContext $r4;
        io.reactivex.Flowable $r5;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore;

        $r1 = r0.<androidx.datastore.rxjava2.RxDataStore: androidx.datastore.core.DataStore delegateDs>;

        $r2 = interfaceinvoke $r1.<androidx.datastore.core.DataStore: kotlinx.coroutines.flow.Flow getData()>();

        $r3 = r0.<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope>;

        $r4 = interfaceinvoke $r3.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r5 = staticinvoke <kotlinx.coroutines.rx2.RxConvertKt: io.reactivex.Flowable asFlowable(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)>($r2, $r4);

        return $r5;
    }

    public final io.reactivex.Single updateDataAsync(io.reactivex.functions.Function)
    {
        androidx.datastore.rxjava2.RxDataStore r0;
        io.reactivex.functions.Function r1;
        kotlinx.coroutines.CoroutineScope $r2, $r8;
        kotlinx.coroutines.CompletableJob $r3;
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1 $r4;
        kotlin.coroutines.CoroutineContext $r5, $r9, $r12;
        kotlin.jvm.functions.Function2 $r6;
        kotlinx.coroutines.Deferred $r7;
        kotlinx.coroutines.Job$Key $r10;
        kotlin.coroutines.CoroutineContext$Key $r11;
        io.reactivex.Single $r13;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore;

        r1 := @parameter0: io.reactivex.functions.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        $r2 = r0.<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope>;

        $r3 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r5 = (kotlin.coroutines.CoroutineContext) $r3;

        $r4 = new androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1;

        specialinvoke $r4.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: void <init>(androidx.datastore.rxjava2.RxDataStore,io.reactivex.functions.Function,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r6 = (kotlin.jvm.functions.Function2) $r4;

        $r7 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, $r5, null, $r6, 2, null);

        $r8 = r0.<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope>;

        $r9 = interfaceinvoke $r8.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r10 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

        $r11 = (kotlin.coroutines.CoroutineContext$Key) $r10;

        $r12 = interfaceinvoke $r9.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)>($r11);

        $r13 = staticinvoke <kotlinx.coroutines.rx2.RxConvertKt: io.reactivex.Single asSingle(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext)>($r7, $r12);

        return $r13;
    }

    public void <init>(androidx.datastore.core.DataStore, kotlinx.coroutines.CoroutineScope, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.rxjava2.RxDataStore r0;
        androidx.datastore.core.DataStore r1;
        kotlinx.coroutines.CoroutineScope r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore;

        r1 := @parameter0: androidx.datastore.core.DataStore;

        r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        $r3 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.datastore.rxjava2.RxDataStore: void <init>(androidx.datastore.core.DataStore,kotlinx.coroutines.CoroutineScope)>(r1, r2);

        return;
    }

    public static final kotlinx.coroutines.CoroutineScope access$getScope$p(androidx.datastore.rxjava2.RxDataStore)
    {
        androidx.datastore.rxjava2.RxDataStore $r0;
        kotlinx.coroutines.CoroutineScope $r1;

        $r0 := @parameter0: androidx.datastore.rxjava2.RxDataStore;

        $r1 = $r0.<androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope scope>;

        return $r1;
    }

    public static final androidx.datastore.core.DataStore access$getDelegateDs$p(androidx.datastore.rxjava2.RxDataStore)
    {
        androidx.datastore.rxjava2.RxDataStore $r0;
        androidx.datastore.core.DataStore $r1;

        $r0 := @parameter0: androidx.datastore.rxjava2.RxDataStore;

        $r1 = $r0.<androidx.datastore.rxjava2.RxDataStore: androidx.datastore.core.DataStore delegateDs>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.datastore.rxjava2.RxDataStore$Companion $r0;

        $r0 = new androidx.datastore.rxjava2.RxDataStore$Companion;

        specialinvoke $r0.<androidx.datastore.rxjava2.RxDataStore$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.datastore.rxjava2.RxDataStore: androidx.datastore.rxjava2.RxDataStore$Companion Companion> = $r0;

        return;
    }

androidx.datastore.rxjava2.RxDataStore$Companion
    private void <init>()
    {
        androidx.datastore.rxjava2.RxDataStore$Companion r0;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.datastore.rxjava2.RxDataStore create(androidx.datastore.core.DataStore, kotlinx.coroutines.CoroutineScope)
    {
        androidx.datastore.rxjava2.RxDataStore$Companion r0;
        androidx.datastore.core.DataStore r1;
        kotlinx.coroutines.CoroutineScope r2;
        androidx.datastore.rxjava2.RxDataStore $r3;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$Companion;

        r1 := @parameter0: androidx.datastore.core.DataStore;

        r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegateDs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "scope");

        $r3 = new androidx.datastore.rxjava2.RxDataStore;

        specialinvoke $r3.<androidx.datastore.rxjava2.RxDataStore: void <init>(androidx.datastore.core.DataStore,kotlinx.coroutines.CoroutineScope,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, null);

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.rxjava2.RxDataStore$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.datastore.rxjava2.RxDataStore$Companion: void <init>()>();

        return;
    }

androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1
<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: int label>
<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: androidx.datastore.rxjava2.RxDataStore this$0>
    void <init>(androidx.datastore.rxjava2.RxDataStore, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1 r0;
        androidx.datastore.rxjava2.RxDataStore $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1;

        $r1 := @parameter0: androidx.datastore.rxjava2.RxDataStore;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: androidx.datastore.rxjava2.RxDataStore this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1 r0;
        java.lang.Object $r1, r2, $r9;
        int $i0;
        kotlin.Unit $r3;
        androidx.datastore.rxjava2.RxDataStore $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        kotlin.coroutines.CoroutineContext $r6;
        kotlinx.coroutines.Job $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: androidx.datastore.rxjava2.RxDataStore this$0>;

        $r5 = staticinvoke <androidx.datastore.rxjava2.RxDataStore: kotlinx.coroutines.CoroutineScope access$getScope$p(androidx.datastore.rxjava2.RxDataStore)>($r4);

        $r6 = interfaceinvoke $r5.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r7 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)>($r6);

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: int label> = 1;

        $r9 = interfaceinvoke $r7.<kotlinx.coroutines.Job: java.lang.Object join(kotlin.coroutines.Continuation)>($r8);

        if $r9 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.datastore.rxjava2.RxDataStore $r4;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1;

        $r4 = r0.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: androidx.datastore.rxjava2.RxDataStore this$0>;

        specialinvoke $r3.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: void <init>(androidx.datastore.rxjava2.RxDataStore,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.datastore.rxjava2.RxDataStore$shutdownComplete$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1
<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: int label>
<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: java.lang.Object L$0>
<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: io.reactivex.functions.Function $transform>
    void <init>(io.reactivex.functions.Function, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1 r0;
        io.reactivex.functions.Function $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1;

        $r1 := @parameter0: io.reactivex.functions.Function;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: io.reactivex.functions.Function $transform> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1 r0;
        java.lang.Object $r1, r2, r3, r4, r5, $r10;
        int $i0;
        io.reactivex.functions.Function $r6;
        io.reactivex.SingleSource $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r2 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: java.lang.Object L$0>;

        $r6 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: io.reactivex.functions.Function $transform>;

        r4 = interfaceinvoke $r6.<io.reactivex.functions.Function: java.lang.Object apply(java.lang.Object)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "transform.apply(it)");

        $r7 = (io.reactivex.SingleSource) r4;

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: int label> = 1;

        $r10 = staticinvoke <kotlinx.coroutines.rx2.RxAwaitKt: java.lang.Object await(io.reactivex.SingleSource,kotlin.coroutines.Continuation)>($r7, $r8);

        if $r10 != r5 goto label3;

        return r5;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r10 = $r1;

     label3:
        r3 = $r10;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "transform.apply(it).await()");

        return r3;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        io.reactivex.functions.Function $r5;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1;

        $r5 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: io.reactivex.functions.Function $transform>;

        specialinvoke $r4.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: void <init>(io.reactivex.functions.Function,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1 r0, $r5;
        java.lang.Object r1, $r6;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1 r0;
        java.lang.Object r1, r2, $r4;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        return $r4;
    }

androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1
<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: int label>
<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: androidx.datastore.rxjava2.RxDataStore this$0>
<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: io.reactivex.functions.Function $transform>
    void <init>(androidx.datastore.rxjava2.RxDataStore, io.reactivex.functions.Function, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1 r0;
        androidx.datastore.rxjava2.RxDataStore $r1;
        io.reactivex.functions.Function $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1;

        $r1 := @parameter0: androidx.datastore.rxjava2.RxDataStore;

        $r2 := @parameter1: io.reactivex.functions.Function;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: androidx.datastore.rxjava2.RxDataStore this$0> = $r1;

        r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: io.reactivex.functions.Function $transform> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1 r0;
        java.lang.Object $r1, r2, $r10;
        int $i0;
        androidx.datastore.rxjava2.RxDataStore $r3;
        androidx.datastore.core.DataStore $r4;
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1 $r5;
        io.reactivex.functions.Function $r6;
        kotlin.jvm.functions.Function2 $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: androidx.datastore.rxjava2.RxDataStore this$0>;

        $r4 = staticinvoke <androidx.datastore.rxjava2.RxDataStore: androidx.datastore.core.DataStore access$getDelegateDs$p(androidx.datastore.rxjava2.RxDataStore)>($r3);

        $r5 = new androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1;

        $r6 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: io.reactivex.functions.Function $transform>;

        specialinvoke $r5.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1$1: void <init>(io.reactivex.functions.Function,kotlin.coroutines.Continuation)>($r6, null);

        $r7 = (kotlin.jvm.functions.Function2) $r5;

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: int label> = 1;

        $r10 = interfaceinvoke $r4.<androidx.datastore.core.DataStore: java.lang.Object updateData(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r7, $r8);

        if $r10 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r10 = $r1;

     label3:
        return $r10;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        io.reactivex.functions.Function $r4;
        androidx.datastore.rxjava2.RxDataStore $r5;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1;

        $r5 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: androidx.datastore.rxjava2.RxDataStore this$0>;

        $r4 = r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: io.reactivex.functions.Function $transform>;

        specialinvoke $r3.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: void <init>(androidx.datastore.rxjava2.RxDataStore,io.reactivex.functions.Function,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.datastore.rxjava2.RxDataStore$updateDataAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

