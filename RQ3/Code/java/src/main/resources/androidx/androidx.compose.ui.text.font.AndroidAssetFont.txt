androidx.compose.ui.text.font.AndroidAssetFont
<androidx.compose.ui.text.font.AndroidAssetFont: android.content.res.AssetManager assetManager>
<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>
<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String cacheKey>
    private void <init>(android.content.res.AssetManager, java.lang.String, androidx.compose.ui.text.font.FontWeight, int, androidx.compose.ui.text.font.FontVariation$Settings)
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        android.content.res.AssetManager r1;
        java.lang.String r2, $r8, $r10;
        androidx.compose.ui.text.font.FontWeight r3;
        int i0;
        androidx.compose.ui.text.font.FontVariation$Settings r4;
        android.graphics.Typeface $r5;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        r1 := @parameter0: android.content.res.AssetManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.compose.ui.text.font.FontWeight;

        i0 := @parameter3: int;

        r4 := @parameter4: androidx.compose.ui.text.font.FontVariation$Settings;

        specialinvoke r0.<androidx.compose.ui.text.font.AndroidPreloadedFont: void <init>(androidx.compose.ui.text.font.FontWeight,int,androidx.compose.ui.text.font.FontVariation$Settings,kotlin.jvm.internal.DefaultConstructorMarker)>(r3, i0, r4, null);

        r0.<androidx.compose.ui.text.font.AndroidAssetFont: android.content.res.AssetManager assetManager> = r1;

        r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path> = r2;

        $r5 = virtualinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: android.graphics.Typeface doLoad$ui_text_release(android.content.Context)>(null);

        virtualinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: void setTypeface$ui_text_release(android.graphics.Typeface)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("asset:");

        $r8 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String cacheKey> = $r10;

        return;
    }

    public void <init>(android.content.res.AssetManager, java.lang.String, androidx.compose.ui.text.font.FontWeight, int, androidx.compose.ui.text.font.FontVariation$Settings, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        android.content.res.AssetManager r1;
        java.lang.String r2;
        androidx.compose.ui.text.font.FontVariation$Settings r3;
        int i0, $i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r4;
        androidx.compose.ui.text.font.FontStyle$Companion $r5;
        androidx.compose.ui.text.font.FontWeight$Companion $r6;
        androidx.compose.ui.text.font.FontWeight r7;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        r1 := @parameter0: android.content.res.AssetManager;

        r2 := @parameter1: java.lang.String;

        r7 := @parameter2: androidx.compose.ui.text.font.FontWeight;

        i3 := @parameter3: int;

        r3 := @parameter4: androidx.compose.ui.text.font.FontVariation$Settings;

        i0 := @parameter5: int;

        r4 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $r6 = <androidx.compose.ui.text.font.FontWeight: androidx.compose.ui.text.font.FontWeight$Companion Companion>;

        r7 = virtualinvoke $r6.<androidx.compose.ui.text.font.FontWeight$Companion: androidx.compose.ui.text.font.FontWeight getNormal()>();

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        $r5 = <androidx.compose.ui.text.font.FontStyle: androidx.compose.ui.text.font.FontStyle$Companion Companion>;

        i3 = virtualinvoke $r5.<androidx.compose.ui.text.font.FontStyle$Companion: int getNormal-_-LCdwA()>();

     label2:
        specialinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: void <init>(android.content.res.AssetManager,java.lang.String,androidx.compose.ui.text.font.FontWeight,int,androidx.compose.ui.text.font.FontVariation$Settings,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r7, i3, r3, null);

        return;
    }

    public final android.content.res.AssetManager getAssetManager()
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        android.content.res.AssetManager $r1;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        $r1 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: android.content.res.AssetManager assetManager>;

        return $r1;
    }

    public final java.lang.String getPath()
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        $r1 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>;

        return $r1;
    }

    public android.graphics.Typeface doLoad$ui_text_release(android.content.Context)
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        android.content.Context r1;
        int $i0;
        java.lang.String $r2, $r6;
        android.content.res.AssetManager $r3, $r5;
        androidx.compose.ui.text.font.TypefaceBuilderCompat $r4;
        androidx.compose.ui.text.font.FontVariation$Settings $r7;
        android.graphics.Typeface $r8;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        r1 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r4 = <androidx.compose.ui.text.font.TypefaceBuilderCompat: androidx.compose.ui.text.font.TypefaceBuilderCompat INSTANCE>;

        $r5 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: android.content.res.AssetManager assetManager>;

        $r6 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>;

        $r7 = virtualinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: androidx.compose.ui.text.font.FontVariation$Settings getVariationSettings()>();

        $r8 = virtualinvoke $r4.<androidx.compose.ui.text.font.TypefaceBuilderCompat: android.graphics.Typeface createFromAssets(android.content.res.AssetManager,java.lang.String,android.content.Context,androidx.compose.ui.text.font.FontVariation$Settings)>($r5, $r6, r1, $r7);

        goto label2;

     label1:
        $r3 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: android.content.res.AssetManager assetManager>;

        $r2 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>;

        $r8 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r3, $r2);

     label2:
        return $r8;
    }

    public java.lang.String getCacheKey()
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        $r1 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String cacheKey>;

        return $r1;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r3, $r9, $r12;
        androidx.compose.ui.text.font.FontWeight $r6;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Font(assetManager, path=");

        $r3 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", weight=");

        $r6 = virtualinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: androidx.compose.ui.text.font.FontWeight getWeight()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", style=");

        $i0 = virtualinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: int getStyle-_-LCdwA()>();

        $r9 = staticinvoke <androidx.compose.ui.text.font.FontStyle: java.lang.String toString-impl(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0, $r2, $r6;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4;
        androidx.compose.ui.text.font.FontVariation$Settings $r5, $r7;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.ui.text.font.AndroidAssetFont;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>;

        $r2 = (androidx.compose.ui.text.font.AndroidAssetFont) r1;

        $r3 = $r2.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r5 = virtualinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: androidx.compose.ui.text.font.FontVariation$Settings getVariationSettings()>();

        $r6 = (androidx.compose.ui.text.font.AndroidAssetFont) r1;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.text.font.AndroidAssetFont: androidx.compose.ui.text.font.FontVariation$Settings getVariationSettings()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r7);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        java.lang.String $r1;
        int $i0, $i1, i2, i3;
        androidx.compose.ui.text.font.FontVariation$Settings $r2;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        $r1 = r0.<androidx.compose.ui.text.font.AndroidAssetFont: java.lang.String path>;

        i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = 31 * i2;

        $r2 = virtualinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: androidx.compose.ui.text.font.FontVariation$Settings getVariationSettings()>();

        $i1 = virtualinvoke $r2.<androidx.compose.ui.text.font.FontVariation$Settings: int hashCode()>();

        i3 = $i0 + $i1;

        return i3;
    }

    public void <init>(android.content.res.AssetManager, java.lang.String, androidx.compose.ui.text.font.FontWeight, int, androidx.compose.ui.text.font.FontVariation$Settings, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.font.AndroidAssetFont r0;
        android.content.res.AssetManager r1;
        java.lang.String r2;
        androidx.compose.ui.text.font.FontWeight r3;
        int i0;
        androidx.compose.ui.text.font.FontVariation$Settings r4;
        kotlin.jvm.internal.DefaultConstructorMarker $r5;

        r0 := @this: androidx.compose.ui.text.font.AndroidAssetFont;

        r1 := @parameter0: android.content.res.AssetManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.compose.ui.text.font.FontWeight;

        i0 := @parameter3: int;

        r4 := @parameter4: androidx.compose.ui.text.font.FontVariation$Settings;

        $r5 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.text.font.AndroidAssetFont: void <init>(android.content.res.AssetManager,java.lang.String,androidx.compose.ui.text.font.FontWeight,int,androidx.compose.ui.text.font.FontVariation$Settings)>(r1, r2, r3, i0, r4);

        return;
    }

