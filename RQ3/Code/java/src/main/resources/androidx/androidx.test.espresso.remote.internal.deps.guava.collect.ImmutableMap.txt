androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: java.util.Map$Entry[] EMPTY_ENTRY_ARRAY>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet entrySet>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet keySet>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection values>
    public int hashCode()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r1;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet entrySet()>();

        $i0 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.Sets: int hashCodeImpl(java.util.Set)>($r1);

        return $i0;
    }

<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection createValues()>
    public androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection values()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection r1, r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection values>;

        if r1 != null goto label1;

        r2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection createValues()>();

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection values> = r2;

        return r2;

     label1:
        return r1;
    }

    public static androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap copyOf(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r1;
        boolean $z0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap $r3;
        java.util.Collection $r4;
        int i0;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label2;

        $r4 = (java.util.Collection) r0;

        i0 = interfaceinvoke $r4.<java.util.Collection: int size()>();

     label1:
        r1 = new androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: void <init>(int)>(i0);

        virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder putAll(java.lang.Iterable)>(r0);

        $r3 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap build()>();

        return $r3;

     label2:
        i0 = 4;

        goto label1;
    }

    public static androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap copyOf(java.util.Map)
    {
        java.util.Map r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r1, $r3;
        boolean $z0, $z1, $z2;
        java.util.Set $r2;
        java.lang.Iterable r4;

        r0 := @parameter0: java.util.Map;

        $z0 = r0 instanceof androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        if $z0 == 0 goto label1;

        $z1 = r0 instanceof java.util.SortedMap;

        if $z1 != 0 goto label1;

        r1 = (androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap) r0;

        $z2 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: boolean isPartialView()>();

        if $z2 != 0 goto label1;

        return r1;

     label1:
        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r4 = (java.lang.Iterable) $r2;

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap copyOf(java.lang.Iterable)>(r4);

        return $r3;
    }

<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet createEntrySet()>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet createKeySet()>
    public androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet entrySet()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r1, r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet entrySet>;

        if r1 != null goto label1;

        r2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet createEntrySet()>();

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet entrySet> = r2;

        return r2;

     label1:
        return r1;
    }

    public androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet keySet()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r1, r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet keySet>;

        if r1 != null goto label1;

        r2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet createKeySet()>();

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet keySet> = r2;

        return r2;

     label1:
        return r1;
    }

<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>
    public final java.lang.Object getOrDefault(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r3;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r2;

        r2 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r3 = virtualinvoke r2.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r0);

        if r3 == null goto label1;

        return r3;

     label1:
        return r1;
    }

    public final java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r2;
        java.lang.UnsupportedOperationException r3;

        r2 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r3 = new java.lang.UnsupportedOperationException;

        specialinvoke r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r3;
    }

    public final java.lang.Object remove(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r1;
        java.lang.UnsupportedOperationException r2;

        r1 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r0 := @parameter0: java.lang.Object;

        r2 = new java.lang.UnsupportedOperationException;

        specialinvoke r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r2;
    }

    java.lang.Object writeReplace()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r1 = new androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: void <init>(androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap)>(r0);

        return r1;
    }

    public java.lang.String toString()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.Maps: java.lang.String toStringImpl(java.util.Map)>(r0);

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection $r1;
        java.util.Collection r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection values()>();

        r2 = (java.util.Collection) $r1;

        return r2;
    }

    public volatile java.util.Set entrySet()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet entrySet()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet keySet()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.util.Map$Entry[] $r0;

        $r0 = newarray (java.util.Map$Entry)[0];

        <androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: java.util.Map$Entry[] EMPTY_ENTRY_ARRAY> = $r0;

        return;
    }

    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void clear()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        java.lang.UnsupportedOperationException r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r1 = new java.lang.UnsupportedOperationException;

        specialinvoke r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r1;
    }

    public final void putAll(java.util.Map)
    {
        java.util.Map r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r1;
        java.lang.UnsupportedOperationException r2;

        r1 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r0 := @parameter0: java.util.Map;

        r2 = new java.lang.UnsupportedOperationException;

        specialinvoke r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r2;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException
    {
        java.io.ObjectInputStream r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r1;
        java.io.InvalidObjectException r2;

        r1 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        r2 = new java.io.InvalidObjectException;

        specialinvoke r2.<java.io.InvalidObjectException: void <init>(java.lang.String)>("Use SerializedForm");

        throw r2;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.lang.Object r0, $r1;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r2;
        boolean z0;

        r2 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r2.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r0);

        if $r1 == null goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean containsValue(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        java.lang.Object r1;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection values()>();

        $z0 = virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.Maps: boolean equalsImpl(java.util.Map,java.lang.Object)>(r0, r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        int $i0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: int size()>();

        if $i0 != 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: boolean isPartialView()>
androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object key>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object value1>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object value2>
    java.lang.IllegalArgumentException exception()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey r0;
        java.lang.IllegalArgumentException r1;
        java.lang.StringBuilder r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14;
        java.lang.Object $r4, $r7, $r10, $r13;
        java.lang.String $r15;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey;

        r1 = new java.lang.IllegalArgumentException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple entries with same key: ");

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object key>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object value1>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r10 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object key>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r13 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object value2>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        return r1;
    }

    void <init>(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey r0;
        java.lang.Object r1, r2, r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object key> = r1;

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object value1> = r2;

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.Object value2> = r3;

        return;
    }

androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.util.Comparator valueComparator>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: boolean entriesUsed>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey duplicateKey>
    public androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder put(java.util.Map$Entry)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0, $r4;
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r4;
    }

    public androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder put(java.lang.Object, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0;
        java.lang.Object r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.Object[] r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>;

        $i2 = $i1 + 1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: void ensureCapacity(int)>($i2);

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r1);

        r3 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>;

        $i3 = i0 + i0;

        r3[$i3] = r2;

        r4 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        i8 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>;

        $i4 = i8 + i8;

        $i5 = $i4 + 1;

        r4[$i5] = r1;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>;

        $i7 = $i6 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size> = $i7;

        return r0;
    }

    public androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder putAll(java.lang.Iterable)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;
        java.util.Collection $r4;
        int $i0, $i1, $i2;
        java.lang.Iterable r5;
        java.util.Iterator r6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        r5 := @parameter0: java.lang.Iterable;

        $z0 = r5 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>;

        $r4 = (java.util.Collection) r5;

        $i1 = interfaceinvoke $r4.<java.util.Collection: int size()>();

        $i2 = $i0 + $i1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: void ensureCapacity(int)>($i2);

     label1:
        r6 = interfaceinvoke r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r1 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.util.Map$Entry) $r1;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder put(java.util.Map$Entry)>($r2);

        goto label2;

     label3:
        return r0;
    }

    public androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap build()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap buildOrThrow()>();

        return $r1;
    }

    private androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap build(boolean)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.util.Comparator $r1, $r13;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey $r2, $r3, $r7, $r8;
        java.lang.IllegalArgumentException $r4, $r9;
        java.lang.Object[] $r5, $r6, r10, r12;
        androidx.test.espresso.remote.internal.deps.guava.collect.RegularImmutableMap r11;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r7 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey duplicateKey>;

        if $r7 == null goto label1;

        $r8 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey duplicateKey>;

        $r9 = virtualinvoke $r8.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.IllegalArgumentException exception()>();

        throw $r9;

     label1:
        i6 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.util.Comparator valueComparator>;

        if $r1 != null goto label4;

        r10 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

     label2:
        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: boolean entriesUsed> = 1;

        r11 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.RegularImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.RegularImmutableMap create(int,java.lang.Object[],androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder)>(i6, r10, r0);

        if z0 == 0 goto label3;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey duplicateKey>;

        if $r2 == null goto label3;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey duplicateKey>;

        $r4 = virtualinvoke $r3.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.IllegalArgumentException exception()>();

        throw $r4;

     label3:
        return r11;

     label4:
        $z1 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: boolean entriesUsed>;

        if $z1 == 0 goto label5;

        r12 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>;

        $i5 = i0 + i0;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r12, $i5);

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues> = $r6;

     label5:
        r10 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        if z0 != 0 goto label6;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size>;

        r10 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] lastEntryForEachKey(java.lang.Object[],int)>(r10, $i1);

        $i3 = lengthof r10;

        $r5 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        $i2 = lengthof $r5;

        if $i3 >= $i2 goto label6;

        $i4 = lengthof r10;

        i6 = $i4 >>> 1;

     label6:
        $r13 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.util.Comparator valueComparator>;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: void sortEntries(java.lang.Object[],int,java.util.Comparator)>(r10, i6, $r13);

        goto label2;
    }

    public androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap buildOrThrow()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        $r1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap build(boolean)>(1);

        return $r1;
    }

    public void <init>()
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: void <init>(int)>(4);

        return;
    }

    void <init>(int)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0;
        int i0, $i1;
        java.lang.Object[] $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = i0 + i0;

        $r1 = newarray (java.lang.Object)[$i1];

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues> = $r1;

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: int size> = 0;

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: boolean entriesUsed> = 0;

        return;
    }

    private void ensureCapacity(int)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r1, $r2, $r3, $r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        i0 := @parameter0: int;

        $i2 = i0 + i0;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        $i1 = lengthof $r1;

        if $i2 <= $i1 goto label1;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        $i4 = lengthof $r2;

        $i3 = i0 + i0;

        $i5 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection$Builder: int expandedCapacity(int,int)>($i4, $i3);

        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r3, $i5);

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues> = $r4;

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: boolean entriesUsed> = 0;

        return;

     label1:
        return;
    }

    static void sortEntries(java.lang.Object[], int, java.util.Comparator)
    {
        java.lang.Object[] r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.Object r2, r3, $r8, $r9, $r10, $r11;
        java.util.AbstractMap$SimpleImmutableEntry r4, r15;
        androidx.test.espresso.remote.internal.deps.guava.collect.Ordering $r5, $r7;
        androidx.test.espresso.remote.internal.deps.guava.base.Function $r6;
        java.util.Comparator r14;
        java.util.Map$Entry r16, r17;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r14 := @parameter2: java.util.Comparator;

        r1 = newarray (java.util.Map$Entry)[i0];

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        $i4 = i7 + i7;

        r2 = r0[$i4];

        virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $i5 = i7 + i7;

        $i6 = $i5 + 1;

        r3 = r0[$i6];

        virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        r15 = new java.util.AbstractMap$SimpleImmutableEntry;

        r4 = r15;

        specialinvoke r15.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(r2, r3);

        r1[i7] = r4;

        i7 = i7 + 1;

        goto label1;

     label2:
        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.Ordering: androidx.test.espresso.remote.internal.deps.guava.collect.Ordering 'from'(java.util.Comparator)>(r14);

        $r6 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.collect.Maps: androidx.test.espresso.remote.internal.deps.guava.base.Function valueFunction()>();

        $r7 = virtualinvoke $r5.<androidx.test.espresso.remote.internal.deps.guava.collect.Ordering: androidx.test.espresso.remote.internal.deps.guava.collect.Ordering onResultOf(androidx.test.espresso.remote.internal.deps.guava.base.Function)>($r6);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>(r1, 0, i0, $r7);

        i8 = 0;

     label3:
        if i8 >= i0 goto label4;

        $i1 = i8 + i8;

        $r8 = r1[i8];

        r16 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        r0[$i1] = $r9;

        $i2 = i8 + i8;

        $i3 = $i2 + 1;

        $r10 = r1[i8];

        r17 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        r0[$i3] = $r11;

        i8 = i8 + 1;

        goto label3;

     label4:
        return;
    }

    private java.lang.Object[] lastEntryForEachKey(java.lang.Object[], int)
    {
        java.lang.Object[] r0, r8;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, $i10, i11;
        java.util.BitSet r1, r12;
        boolean $z0, $z1, $z2;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r5;
        java.util.HashSet r6, r11;
        java.lang.Object r7, r9, r10;
        java.util.Set r13;

        r5 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r11 = new java.util.HashSet;

        r6 = r11;

        specialinvoke r11.<java.util.HashSet: void <init>()>();

        r12 = new java.util.BitSet;

        r1 = r12;

        specialinvoke r12.<java.util.BitSet: void <init>()>();

        i6 = i0 + -1;

     label1:
        if i6 < 0 goto label3;

        $i5 = i6 + i6;

        r7 = r0[$i5];

        virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        r13 = (java.util.Set) r6;

        $z2 = interfaceinvoke r13.<java.util.Set: boolean add(java.lang.Object)>(r7);

        if $z2 != 0 goto label2;

        virtualinvoke r1.<java.util.BitSet: void set(int)>(i6);

     label2:
        i6 = i6 + -1;

        goto label1;

     label3:
        $z0 = virtualinvoke r1.<java.util.BitSet: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        return r0;

     label4:
        $i2 = virtualinvoke r1.<java.util.BitSet: int cardinality()>();

        i7 = i0 - $i2;

        $i3 = i7 + i7;

        r8 = newarray (java.lang.Object)[$i3];

        i8 = 0;

        i9 = 0;

     label5:
        $i10 = i0 + i0;

        if i8 >= $i10 goto label7;

        $i4 = i8 >>> 1;

        $z1 = virtualinvoke r1.<java.util.BitSet: boolean get(int)>($i4);

        if $z1 == 0 goto label6;

        i8 = i8 + 2;

        goto label5;

     label6:
        i1 = i9 + 1;

        i11 = i8 + 1;

        r9 = r0[i8];

        virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        r8[i9] = r9;

        i9 = i1 + 1;

        i8 = i11 + 1;

        r10 = r0[i11];

        virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        r8[i1] = r10;

        goto label5;

     label7:
        return r8;
    }

androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: long serialVersionUID>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object keys>
<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object values>
    androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder makeBuilder(int)
    {
        int i0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm r0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm;

        i0 := @parameter0: int;

        r1 = new androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: void <init>(int)>(i0);

        return r1;
    }

    final java.lang.Object legacyReadResolve()
    {
        java.lang.Object[] r0, r1;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r2;
        java.lang.Object $r3, $r4, $r6, $r7;
        int $i0, $i1, i2;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap $r5;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm r9;

        r9 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm;

        $r3 = r9.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object keys>;

        r0 = (java.lang.Object[]) $r3;

        $r4 = r9.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object values>;

        r1 = (java.lang.Object[]) $r4;

        $i0 = lengthof r0;

        r2 = virtualinvoke r9.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder makeBuilder(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r7 = r0[i2];

        $r6 = r1[i2];

        virtualinvoke r2.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r7, $r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke r2.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap buildOrThrow()>();

        return $r5;
    }

    final java.lang.Object readResolve()
    {
        java.lang.Object $r0, $r1, $r3, $r4, $r6, r9;
        boolean $z0, $z1;
        int $i0;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap $r2;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm r7;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r8;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection r10;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder r11;
        androidx.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator r12, r13;

        r7 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm;

        $r0 = r7.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object keys>;

        $z0 = $r0 instanceof androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r7.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object legacyReadResolve()>();

        return $r6;

     label1:
        $r1 = r7.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object keys>;

        r8 = (androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet) $r1;

        r9 = r7.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object values>;

        r10 = (androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection) r9;

        $i0 = virtualinvoke r8.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: int size()>();

        r11 = virtualinvoke r7.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder makeBuilder(int)>($i0);

        r12 = virtualinvoke r8.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: androidx.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

        r13 = virtualinvoke r10.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection: androidx.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

     label2:
        $z1 = virtualinvoke r12.<androidx.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r12.<androidx.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator: java.lang.Object next()>();

        $r4 = virtualinvoke r13.<androidx.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator: java.lang.Object next()>();

        virtualinvoke r11.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label2;

     label3:
        $r2 = virtualinvoke r11.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap buildOrThrow()>();

        return $r2;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap)
    {
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm r0;
        java.lang.Object[] r1, r2;
        androidx.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator r3;
        java.util.Map$Entry r4;
        int $i0, $i1, i2;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r5;
        boolean $z0;
        java.lang.Object $r6, $r7, $r8;
        androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap r9;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm;

        r9 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r9.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        $i1 = virtualinvoke r9.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: int size()>();

        r2 = newarray (java.lang.Object)[$i1];

        $r5 = virtualinvoke r9.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap: androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet entrySet()>();

        r3 = virtualinvoke $r5.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: androidx.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

        i2 = 0;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r1[i2] = $r7;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r2[i2] = $r8;

        i2 = i2 + 1;

        goto label1;

     label2:
        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object keys> = r1;

        r0.<androidx.test.espresso.remote.internal.deps.guava.collect.ImmutableMap$SerializedForm: java.lang.Object values> = r2;

        return;
    }

