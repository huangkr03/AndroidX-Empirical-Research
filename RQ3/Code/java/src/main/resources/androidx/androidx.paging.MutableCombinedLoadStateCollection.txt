androidx.paging.MutableCombinedLoadStateCollection
<androidx.paging.MutableCombinedLoadStateCollection: boolean isInitialized>
<androidx.paging.MutableCombinedLoadStateCollection: java.util.concurrent.CopyOnWriteArrayList listeners>
<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState refresh>
<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState prepend>
<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState append>
<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>
<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>
<androidx.paging.MutableCombinedLoadStateCollection: kotlinx.coroutines.flow.MutableStateFlow _stateFlow>
<androidx.paging.MutableCombinedLoadStateCollection: kotlinx.coroutines.flow.Flow flow>
    public void <init>()
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;
        androidx.paging.LoadState$NotLoading$Companion $r2, $r5, $r8;
        androidx.paging.LoadState$NotLoading $r3, $r6, $r9;
        androidx.paging.LoadState $r4, $r7, $r10;
        androidx.paging.LoadStates$Companion $r11;
        androidx.paging.LoadStates $r12;
        kotlinx.coroutines.flow.MutableStateFlow $r13, $r14;
        kotlinx.coroutines.flow.Flow $r15, $r16;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.paging.MutableCombinedLoadStateCollection: java.util.concurrent.CopyOnWriteArrayList listeners> = $r1;

        $r2 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r4 = (androidx.paging.LoadState) $r3;

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState refresh> = $r4;

        $r5 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r7 = (androidx.paging.LoadState) $r6;

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState prepend> = $r7;

        $r8 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r10 = (androidx.paging.LoadState) $r9;

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState append> = $r10;

        $r11 = <androidx.paging.LoadStates: androidx.paging.LoadStates$Companion Companion>;

        $r12 = virtualinvoke $r11.<androidx.paging.LoadStates$Companion: androidx.paging.LoadStates getIDLE()>();

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source> = $r12;

        $r13 = staticinvoke <kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)>(null);

        r0.<androidx.paging.MutableCombinedLoadStateCollection: kotlinx.coroutines.flow.MutableStateFlow _stateFlow> = $r13;

        $r14 = r0.<androidx.paging.MutableCombinedLoadStateCollection: kotlinx.coroutines.flow.MutableStateFlow _stateFlow>;

        $r15 = (kotlinx.coroutines.flow.Flow) $r14;

        $r16 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)>($r15);

        r0.<androidx.paging.MutableCombinedLoadStateCollection: kotlinx.coroutines.flow.Flow flow> = $r16;

        return;
    }

    public final androidx.paging.LoadStates getSource()
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        androidx.paging.LoadStates $r1;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        $r1 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        return $r1;
    }

    public final androidx.paging.LoadStates getMediator()
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        androidx.paging.LoadStates $r1;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        $r1 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        return $r1;
    }

    public final kotlinx.coroutines.flow.Flow getFlow()
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        kotlinx.coroutines.flow.Flow $r1;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        $r1 = r0.<androidx.paging.MutableCombinedLoadStateCollection: kotlinx.coroutines.flow.Flow flow>;

        return $r1;
    }

    public final void set(androidx.paging.LoadStates, androidx.paging.LoadStates)
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        androidx.paging.LoadStates r1, r2;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        r1 := @parameter0: androidx.paging.LoadStates;

        r2 := @parameter1: androidx.paging.LoadStates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sourceLoadStates");

        r0.<androidx.paging.MutableCombinedLoadStateCollection: boolean isInitialized> = 1;

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source> = r1;

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator> = r2;

        specialinvoke r0.<androidx.paging.MutableCombinedLoadStateCollection: void updateHelperStatesAndDispatch()>();

        return;
    }

    public final boolean set(androidx.paging.LoadType, boolean, androidx.paging.LoadState)
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        androidx.paging.LoadType r1;
        boolean z0, z1, $z2, $z3, $z4;
        androidx.paging.LoadState r2;
        androidx.paging.LoadStates r3, $r4, $r5, $r6, $r7, $r8, r11, $r12, r13;
        androidx.paging.LoadStates$Companion $r9;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        r1 := @parameter0: androidx.paging.LoadType;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.paging.LoadState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "state");

        r0.<androidx.paging.MutableCombinedLoadStateCollection: boolean isInitialized> = 1;

        if z0 == 0 goto label4;

        r11 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        r3 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        if r3 != null goto label1;

        $r9 = <androidx.paging.LoadStates: androidx.paging.LoadStates$Companion Companion>;

        $r12 = virtualinvoke $r9.<androidx.paging.LoadStates$Companion: androidx.paging.LoadStates getIDLE()>();

        goto label2;

     label1:
        $r12 = r3;

     label2:
        $r7 = virtualinvoke $r12.<androidx.paging.LoadStates: androidx.paging.LoadStates modifyState$paging_common(androidx.paging.LoadType,androidx.paging.LoadState)>(r1, r2);

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator> = $r7;

        $r8 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, r11);

        if $z3 != 0 goto label3;

        $z4 = 1;

        goto label6;

     label3:
        $z4 = 0;

        goto label6;

     label4:
        r13 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r4 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r5 = virtualinvoke $r4.<androidx.paging.LoadStates: androidx.paging.LoadStates modifyState$paging_common(androidx.paging.LoadType,androidx.paging.LoadState)>(r1, r2);

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source> = $r5;

        $r6 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r13);

        if $z2 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        z1 = $z4;

        specialinvoke r0.<androidx.paging.MutableCombinedLoadStateCollection: void updateHelperStatesAndDispatch()>();

        return z1;
    }

    public final androidx.paging.LoadState get(androidx.paging.LoadType, boolean)
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        androidx.paging.LoadType r1;
        boolean z0;
        androidx.paging.LoadStates r2, $r3;
        androidx.paging.LoadState $r4;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        r1 := @parameter0: androidx.paging.LoadType;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        if z0 == 0 goto label1;

        $r3 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        goto label2;

     label1:
        $r3 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

     label2:
        r2 = $r3;

        if r2 != null goto label3;

        $r4 = null;

        goto label4;

     label3:
        $r4 = virtualinvoke r2.<androidx.paging.LoadStates: androidx.paging.LoadState get$paging_common(androidx.paging.LoadType)>(r1);

     label4:
        return $r4;
    }

    public final void addListener(kotlin.jvm.functions.Function1)
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.CombinedLoadStates r2, r3, r4;
        boolean z0, z1;
        java.util.concurrent.CopyOnWriteArrayList $r5;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r5 = r0.<androidx.paging.MutableCombinedLoadStateCollection: java.util.concurrent.CopyOnWriteArrayList listeners>;

        virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        r2 = specialinvoke r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.CombinedLoadStates snapshot()>();

        if r2 != null goto label1;

        goto label2;

     label1:
        r3 = r2;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

     label2:
        return;
    }

    public final void removeListener(kotlin.jvm.functions.Function1)
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        kotlin.jvm.functions.Function1 r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.MutableCombinedLoadStateCollection: java.util.concurrent.CopyOnWriteArrayList listeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    private final androidx.paging.CombinedLoadStates snapshot()
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        boolean $z0;
        androidx.paging.LoadStates $r1, $r2;
        androidx.paging.LoadState $r3, $r4, $r5;
        androidx.paging.CombinedLoadStates $r6;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        $z0 = r0.<androidx.paging.MutableCombinedLoadStateCollection: boolean isInitialized>;

        if $z0 != 0 goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = new androidx.paging.CombinedLoadStates;

        $r5 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState refresh>;

        $r4 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState prepend>;

        $r3 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState append>;

        $r2 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r1 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        specialinvoke $r6.<androidx.paging.CombinedLoadStates: void <init>(androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadStates,androidx.paging.LoadStates)>($r5, $r4, $r3, $r2, $r1);

     label2:
        return $r6;
    }

    private final void updateHelperStatesAndDispatch()
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        kotlin.jvm.functions.Function1 r4;
        androidx.paging.LoadStates $r5, $r8, $r11, $r14, $r17, $r20, r32, r34, r36;
        androidx.paging.LoadState $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r33, $r35, $r37;
        kotlinx.coroutines.flow.MutableStateFlow $r23;
        java.util.concurrent.CopyOnWriteArrayList $r24;
        boolean $z2;
        androidx.paging.CombinedLoadStates r38;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        $r6 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState refresh>;

        $r5 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r7 = virtualinvoke $r5.<androidx.paging.LoadStates: androidx.paging.LoadState getRefresh()>();

        $r8 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r9 = virtualinvoke $r8.<androidx.paging.LoadStates: androidx.paging.LoadState getRefresh()>();

        r32 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        if r32 != null goto label1;

        $r33 = null;

        goto label2;

     label1:
        $r33 = virtualinvoke r32.<androidx.paging.LoadStates: androidx.paging.LoadState getRefresh()>();

     label2:
        $r10 = specialinvoke r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState computeHelperState(androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState)>($r6, $r7, $r9, $r33);

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState refresh> = $r10;

        $r12 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState prepend>;

        $r11 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r13 = virtualinvoke $r11.<androidx.paging.LoadStates: androidx.paging.LoadState getRefresh()>();

        $r14 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r15 = virtualinvoke $r14.<androidx.paging.LoadStates: androidx.paging.LoadState getPrepend()>();

        r34 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        if r34 != null goto label3;

        $r35 = null;

        goto label4;

     label3:
        $r35 = virtualinvoke r34.<androidx.paging.LoadStates: androidx.paging.LoadState getPrepend()>();

     label4:
        $r16 = specialinvoke r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState computeHelperState(androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState)>($r12, $r13, $r15, $r35);

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState prepend> = $r16;

        $r18 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState append>;

        $r17 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r19 = virtualinvoke $r17.<androidx.paging.LoadStates: androidx.paging.LoadState getRefresh()>();

        $r20 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates source>;

        $r21 = virtualinvoke $r20.<androidx.paging.LoadStates: androidx.paging.LoadState getAppend()>();

        r36 = r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadStates mediator>;

        if r36 != null goto label5;

        $r37 = null;

        goto label6;

     label5:
        $r37 = virtualinvoke r36.<androidx.paging.LoadStates: androidx.paging.LoadState getAppend()>();

     label6:
        $r22 = specialinvoke r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState computeHelperState(androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState)>($r18, $r19, $r21, $r37);

        r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.LoadState append> = $r22;

        r38 = specialinvoke r0.<androidx.paging.MutableCombinedLoadStateCollection: androidx.paging.CombinedLoadStates snapshot()>();

        if r38 == null goto label8;

        $r23 = r0.<androidx.paging.MutableCombinedLoadStateCollection: kotlinx.coroutines.flow.MutableStateFlow _stateFlow>;

        interfaceinvoke $r23.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>(r38);

        $r24 = r0.<androidx.paging.MutableCombinedLoadStateCollection: java.util.concurrent.CopyOnWriteArrayList listeners>;

        $r1 = (java.lang.Iterable) $r24;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (kotlin.jvm.functions.Function1) r3;

        interfaceinvoke r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r38);

        goto label7;

     label8:
        return;
    }

    private final androidx.paging.LoadState computeHelperState(androidx.paging.LoadState, androidx.paging.LoadState, androidx.paging.LoadState, androidx.paging.LoadState)
    {
        androidx.paging.MutableCombinedLoadStateCollection r0;
        androidx.paging.LoadState r1, r2, r3, r4, r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.paging.MutableCombinedLoadStateCollection;

        r1 := @parameter0: androidx.paging.LoadState;

        r2 := @parameter1: androidx.paging.LoadState;

        r3 := @parameter2: androidx.paging.LoadState;

        r4 := @parameter3: androidx.paging.LoadState;

        if r4 != null goto label1;

        return r3;

     label1:
        r5 = r1;

        $z0 = r5 instanceof androidx.paging.LoadState$Loading;

        if $z0 == 0 goto label4;

        $z1 = r2 instanceof androidx.paging.LoadState$NotLoading;

        if $z1 == 0 goto label2;

        $z3 = r4 instanceof androidx.paging.LoadState$NotLoading;

        if $z3 == 0 goto label2;

        $r6 = r4;

        goto label5;

     label2:
        $z2 = r4 instanceof androidx.paging.LoadState$Error;

        if $z2 == 0 goto label3;

        $r6 = r4;

        goto label5;

     label3:
        $r6 = r1;

        goto label5;

     label4:
        $r6 = r4;

     label5:
        return $r6;
    }

