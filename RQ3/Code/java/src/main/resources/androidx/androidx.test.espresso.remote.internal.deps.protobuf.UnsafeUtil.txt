androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: sun.misc.Unsafe UNSAFE>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: java.lang.Class MEMORY_CLASS>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_ANDROID_64>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_ANDROID_32>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean HAS_UNSAFE_BYTEBUFFER_OPERATIONS>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean HAS_UNSAFE_ARRAY_OPERATIONS>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BYTE_ARRAY_BASE_OFFSET>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BOOLEAN_ARRAY_BASE_OFFSET>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BOOLEAN_ARRAY_INDEX_SCALE>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long INT_ARRAY_BASE_OFFSET>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long INT_ARRAY_INDEX_SCALE>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long LONG_ARRAY_BASE_OFFSET>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long LONG_ARRAY_INDEX_SCALE>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long FLOAT_ARRAY_BASE_OFFSET>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long FLOAT_ARRAY_INDEX_SCALE>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long DOUBLE_ARRAY_BASE_OFFSET>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long DOUBLE_ARRAY_INDEX_SCALE>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long OBJECT_ARRAY_BASE_OFFSET>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long OBJECT_ARRAY_INDEX_SCALE>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BUFFER_ADDRESS_OFFSET>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int BYTE_ARRAY_ALIGNMENT>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>
    static volatile byte '-$$Nest$smgetByteBigEndian'(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        byte $b1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $b1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByteBigEndian(java.lang.Object,long)>(r0, l0);

        return $b1;
    }

    static volatile byte '-$$Nest$smgetByteLittleEndian'(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        byte $b1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $b1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByteLittleEndian(java.lang.Object,long)>(r0, l0);

        return $b1;
    }

    static byte getByte(long)
    {
        long l0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r0;
        byte $b1;

        l0 := @parameter0: long;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $b1 = virtualinvoke $r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: byte getByte(long)>(l0);

        return $b1;
    }

    static byte getByte(byte[], long)
    {
        byte[] r0;
        long l0, $l1, $l2;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;
        byte $b3;

        r0 := @parameter0: byte[];

        l0 := @parameter1: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $l1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BYTE_ARRAY_BASE_OFFSET>;

        $l2 = $l1 + l0;

        $b3 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: byte getByte(java.lang.Object,long)>(r0, $l2);

        return $b3;
    }

    private static byte getByteBigEndian(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0, $l1, $l3, $l4, $l5;
        int $i2, $i6, $i7, $i8;
        byte $b9;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $l1 = l0 & -4L;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int getInt(java.lang.Object,long)>(r0, $l1);

        $l3 = l0 ^ -1L;

        $l4 = $l3 & 3L;

        $l5 = $l4 << 3;

        $i6 = (int) $l5;

        $i7 = $i2 >>> $i6;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        return $b9;
    }

    private static byte getByteLittleEndian(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0, $l1, $l3, $l4;
        int $i2, $i5, $i6, $i7;
        byte $b8;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $l1 = l0 & -4L;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int getInt(java.lang.Object,long)>(r0, $l1);

        $l3 = l0 & 3L;

        $l4 = $l3 << 3;

        $i5 = (int) $l4;

        $i6 = $i2 >>> $i5;

        $i7 = $i6 & 255;

        $b8 = (byte) $i7;

        return $b8;
    }

    static double getDouble(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;
        double $d0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $d0 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: double getDouble(java.lang.Object,long)>(r0, l0);

        return $d0;
    }

    static float getFloat(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;
        float $f0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $f0 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: float getFloat(java.lang.Object,long)>(r0, l0);

        return $f0;
    }

    private static int arrayBaseOffset(java.lang.Class)
    {
        boolean $z0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r0;
        java.lang.Class r1;
        int i0;

        r1 := @parameter0: java.lang.Class;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean HAS_UNSAFE_ARRAY_OPERATIONS>;

        if $z0 == 0 goto label2;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        i0 = virtualinvoke $r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: int arrayBaseOffset(java.lang.Class)>(r1);

     label1:
        return i0;

     label2:
        i0 = -1;

        goto label1;
    }

    private static int arrayIndexScale(java.lang.Class)
    {
        boolean $z0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r0;
        java.lang.Class r1;
        int i0;

        r1 := @parameter0: java.lang.Class;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean HAS_UNSAFE_ARRAY_OPERATIONS>;

        if $z0 == 0 goto label2;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        i0 = virtualinvoke $r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: int arrayIndexScale(java.lang.Class)>(r1);

     label1:
        return i0;

     label2:
        i0 = -1;

        goto label1;
    }

    static int getInt(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;
        int $i1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $i1 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: int getInt(java.lang.Object,long)>(r0, l0);

        return $i1;
    }

    static long addressOffset(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        long $l0, $l1;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $l0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BUFFER_ADDRESS_OFFSET>;

        $l1 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: long getLong(java.lang.Object,long)>(r0, $l0);

        return $l1;
    }

    private static long fieldOffset(java.lang.reflect.Field)
    {
        java.lang.reflect.Field r0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1, $r2;
        long l0;

        r0 := @parameter0: java.lang.reflect.Field;

        if r0 == null goto label1;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        if $r1 != null goto label3;

     label1:
        l0 = -1L;

     label2:
        return l0;

     label3:
        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        l0 = virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: long objectFieldOffset(java.lang.reflect.Field)>(r0);

        goto label2;
    }

    static long getLong(long)
    {
        long l0, $l1;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r0;

        l0 := @parameter0: long;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $l1 = virtualinvoke $r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: long getLong(long)>(l0);

        return $l1;
    }

    static long getLong(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0, $l1;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $l1 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: long getLong(java.lang.Object,long)>(r0, l0);

        return $l1;
    }

    static long objectFieldOffset(java.lang.reflect.Field)
    {
        java.lang.reflect.Field r0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;
        long $l0;

        r0 := @parameter0: java.lang.reflect.Field;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $l0 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: long objectFieldOffset(java.lang.reflect.Field)>(r0);

        return $l0;
    }

    private static androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor getMemoryAccessor()
    {
        sun.misc.Unsafe $r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r4;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r5;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r6;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: sun.misc.Unsafe UNSAFE>;

        if $r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 == 0 goto label4;

        $z1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_ANDROID_64>;

        if $z1 == 0 goto label2;

        r4 = new androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: sun.misc.Unsafe UNSAFE>;

        specialinvoke r4.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor: void <init>(sun.misc.Unsafe)>($r3);

        return r4;

     label2:
        $z2 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_ANDROID_32>;

        if $z2 == 0 goto label3;

        r5 = new androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: sun.misc.Unsafe UNSAFE>;

        specialinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor: void <init>(sun.misc.Unsafe)>($r2);

        return r5;

     label3:
        return null;

     label4:
        r6 = new androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: sun.misc.Unsafe UNSAFE>;

        specialinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: void <init>(sun.misc.Unsafe)>($r1);

        return r6;
    }

    static java.lang.Object allocateInstance(java.lang.Class)
    {
        java.lang.IllegalStateException r0;
        sun.misc.Unsafe $r1;
        java.lang.Throwable $r2, r5;
        java.lang.Class r3;
        java.lang.Object r4;

        r3 := @parameter0: java.lang.Class;

     label1:
        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: sun.misc.Unsafe UNSAFE>;

        r4 = virtualinvoke $r1.<sun.misc.Unsafe: java.lang.Object allocateInstance(java.lang.Class)>(r3);

        goto label3;

     label2:
        $r2 := @caughtexception;

        r5 = $r2;

        r0 = new java.lang.IllegalStateException;

        specialinvoke r0.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r5);

        throw r0;

     label3:
        return r4;

        catch java.lang.InstantiationException from label1 to label2 with label2;
    }

    static java.lang.Object getObject(java.lang.Object, long)
    {
        java.lang.Object r0, $r2;
        long l0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $r2 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: java.lang.Object getObject(java.lang.Object,long)>(r0, l0);

        return $r2;
    }

    static volatile java.lang.reflect.Field '-$$Nest$smbufferAddressField'()
    {
        java.lang.reflect.Field $r0;

        $r0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: java.lang.reflect.Field bufferAddressField()>();

        return $r0;
    }

    private static java.lang.reflect.Field bufferAddressField()
    {
        boolean $z0;
        java.lang.Class $r0, $r1;
        java.lang.reflect.Field r2, r3;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 == 0 goto label1;

        r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: java.lang.reflect.Field field(java.lang.Class,java.lang.String)>(class "Ljava/nio/Buffer;", "effectiveDirectAddress");

        if r2 == null goto label1;

        return r2;

     label1:
        r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: java.lang.reflect.Field field(java.lang.Class,java.lang.String)>(class "Ljava/nio/Buffer;", "address");

        if r3 == null goto label2;

        $r0 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r1 = <java.lang.Long: java.lang.Class TYPE>;

        if $r0 != $r1 goto label2;

        return r3;

     label2:
        return null;
    }

    private static java.lang.reflect.Field field(java.lang.Class, java.lang.String)
    {
        java.lang.String r0;
        java.lang.Throwable $r1;
        java.lang.Class r2;
        java.lang.reflect.Field r3;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.String;

     label1:
        r3 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r0);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        r3 = null;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static sun.misc.Unsafe getUnsafe()
    {
        java.lang.Object $r0;
        java.lang.Throwable $r1;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1 r2;
        sun.misc.Unsafe r3;

     label1:
        r2 = new androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1;

        specialinvoke r2.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1: void <init>()>();

        $r0 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>(r2);

        r3 = (sun.misc.Unsafe) $r0;

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        r3 = null;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static volatile void '-$$Nest$smlogMissingMethod'(java.lang.Throwable)
    {
        java.lang.Throwable r0;

        r0 := @parameter0: java.lang.Throwable;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void logMissingMethod(java.lang.Throwable)>(r0);

        return;
    }

    static volatile void '-$$Nest$smputBooleanBigEndian'(java.lang.Object, long, boolean)
    {
        java.lang.Object r0;
        long l0;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putBooleanBigEndian(java.lang.Object,long,boolean)>(r0, l0, z0);

        return;
    }

    static volatile void '-$$Nest$smputBooleanLittleEndian'(java.lang.Object, long, boolean)
    {
        java.lang.Object r0;
        long l0;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putBooleanLittleEndian(java.lang.Object,long,boolean)>(r0, l0, z0);

        return;
    }

    static volatile void '-$$Nest$smputByteBigEndian'(java.lang.Object, long, byte)
    {
        java.lang.Object r0;
        long l0;
        byte b1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        b1 := @parameter2: byte;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByteBigEndian(java.lang.Object,long,byte)>(r0, l0, b1);

        return;
    }

    static volatile void '-$$Nest$smputByteLittleEndian'(java.lang.Object, long, byte)
    {
        java.lang.Object r0;
        long l0;
        byte b1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        b1 := @parameter2: byte;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByteLittleEndian(java.lang.Object,long,byte)>(r0, l0, b1);

        return;
    }

    static void <clinit>()
    {
        sun.misc.Unsafe $r0;
        java.lang.Class $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, z4;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r4;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i29;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l23, $l25, $l26, $l27, $l28;
        java.lang.reflect.Field $r5;
        java.nio.ByteOrder $r6, $r7;

        $r0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: sun.misc.Unsafe getUnsafe()>();

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: sun.misc.Unsafe UNSAFE> = $r0;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Android: java.lang.Class getMemoryClass()>();

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: java.lang.Class MEMORY_CLASS> = $r1;

        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean determineAndroidSupportByAddressSize(java.lang.Class)>($r2);

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_ANDROID_64> = $z0;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $z1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean determineAndroidSupportByAddressSize(java.lang.Class)>($r3);

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_ANDROID_32> = $z1;

        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor getMemoryAccessor()>();

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR> = $r4;

        $z2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean supportsUnsafeByteBufferOperations()>();

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean HAS_UNSAFE_BYTEBUFFER_OPERATIONS> = $z2;

        $z3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean supportsUnsafeArrayOperations()>();

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean HAS_UNSAFE_ARRAY_OPERATIONS> = $z3;

        $i0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayBaseOffset(java.lang.Class)>(class "[B");

        $l1 = (long) $i0;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BYTE_ARRAY_BASE_OFFSET> = $l1;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayBaseOffset(java.lang.Class)>(class "[Z");

        $l3 = (long) $i2;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BOOLEAN_ARRAY_BASE_OFFSET> = $l3;

        $i4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayIndexScale(java.lang.Class)>(class "[Z");

        $l5 = (long) $i4;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BOOLEAN_ARRAY_INDEX_SCALE> = $l5;

        $i6 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayBaseOffset(java.lang.Class)>(class "[I");

        $l7 = (long) $i6;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long INT_ARRAY_BASE_OFFSET> = $l7;

        $i8 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayIndexScale(java.lang.Class)>(class "[I");

        $l9 = (long) $i8;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long INT_ARRAY_INDEX_SCALE> = $l9;

        $i10 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayBaseOffset(java.lang.Class)>(class "[J");

        $l11 = (long) $i10;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long LONG_ARRAY_BASE_OFFSET> = $l11;

        $i12 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayIndexScale(java.lang.Class)>(class "[J");

        $l13 = (long) $i12;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long LONG_ARRAY_INDEX_SCALE> = $l13;

        $i14 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayBaseOffset(java.lang.Class)>(class "[F");

        $l15 = (long) $i14;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long FLOAT_ARRAY_BASE_OFFSET> = $l15;

        $i16 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayIndexScale(java.lang.Class)>(class "[F");

        $l17 = (long) $i16;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long FLOAT_ARRAY_INDEX_SCALE> = $l17;

        $i18 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayBaseOffset(java.lang.Class)>(class "[D");

        $l19 = (long) $i18;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long DOUBLE_ARRAY_BASE_OFFSET> = $l19;

        $i20 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayIndexScale(java.lang.Class)>(class "[D");

        $l21 = (long) $i20;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long DOUBLE_ARRAY_INDEX_SCALE> = $l21;

        $i22 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayBaseOffset(java.lang.Class)>(class "[Ljava/lang/Object;");

        $l23 = (long) $i22;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long OBJECT_ARRAY_BASE_OFFSET> = $l23;

        $i24 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int arrayIndexScale(java.lang.Class)>(class "[Ljava/lang/Object;");

        $l25 = (long) $i24;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long OBJECT_ARRAY_INDEX_SCALE> = $l25;

        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: java.lang.reflect.Field bufferAddressField()>();

        $l26 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long fieldOffset(java.lang.reflect.Field)>($r5);

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BUFFER_ADDRESS_OFFSET> = $l26;

        $l27 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BYTE_ARRAY_BASE_OFFSET>;

        $l28 = $l27 & 7L;

        $i29 = (int) $l28;

        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int BYTE_ARRAY_ALIGNMENT> = $i29;

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r7 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r6 != $r7 goto label2;

        z4 = 1;

     label1:
        <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN> = z4;

        return;

     label2:
        z4 = 0;

        goto label1;
    }

    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void copyMemory(long, byte[], long, long)
    {
        long l0, l1, l2;
        byte[] r0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        l0 := @parameter0: long;

        r0 := @parameter1: byte[];

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void copyMemory(long,byte[],long,long)>(l0, r0, l1, l2);

        return;
    }

    private static void logMissingMethod(java.lang.Throwable)
    {
        java.util.logging.Level r0;
        java.lang.StringBuilder r1, $r2, $r3;
        java.lang.String $r4, r7, r9;
        java.lang.Throwable r5;
        java.lang.Class r6;
        java.util.logging.Logger r8;

        r5 := @parameter0: java.lang.Throwable;

        r6 = class "Landroidx/test/espresso/remote/internal/deps/protobuf/UnsafeUtil;";

        r7 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>();

        r8 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(r7);

        r0 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("platform method missing - proto runtime falling back to safer methods: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>(r0, "androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil", "logMissingMethod", $r4);

        return;
    }

    static void putBoolean(java.lang.Object, long, boolean)
    {
        java.lang.Object r0;
        long l0;
        boolean z0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putBoolean(java.lang.Object,long,boolean)>(r0, l0, z0);

        return;
    }

    private static void putBooleanBigEndian(java.lang.Object, long, boolean)
    {
        java.lang.Object r0;
        long l0;
        boolean z0;
        byte b1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByteBigEndian(java.lang.Object,long,byte)>(r0, l0, b1);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    private static void putBooleanLittleEndian(java.lang.Object, long, boolean)
    {
        java.lang.Object r0;
        long l0;
        boolean z0;
        byte b1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByteLittleEndian(java.lang.Object,long,byte)>(r0, l0, b1);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    static void putByte(byte[], long, byte)
    {
        byte[] r0;
        long l0, $l2, $l3;
        byte b1;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: byte[];

        l0 := @parameter1: long;

        b1 := @parameter2: byte;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $l2 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BYTE_ARRAY_BASE_OFFSET>;

        $l3 = $l2 + l0;

        virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putByte(java.lang.Object,long,byte)>(r0, $l3, b1);

        return;
    }

    private static void putByteBigEndian(java.lang.Object, long, byte)
    {
        java.lang.Object r0;
        long l0, $l6, $l7;
        byte b1;
        int i2, $i3, $i4, $i5, $i8, $i9, $i10, $i12, $i13, $i14;
        short $s11;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        b1 := @parameter2: byte;

        $i3 = (int) l0;

        $i4 = $i3 ^ -1;

        $i5 = $i4 & 3;

        i2 = $i5 << 3;

        $l7 = l0 & -4L;

        $l6 = l0 & -4L;

        $i8 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int getInt(java.lang.Object,long)>(r0, $l6);

        $i9 = 255 << i2;

        $i10 = $i9 ^ -1;

        $i13 = $i8 & $i10;

        $s11 = b1 & 255;

        $i12 = $s11 << i2;

        $i14 = $i13 | $i12;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putInt(java.lang.Object,long,int)>(r0, $l7, $i14);

        return;
    }

    private static void putByteLittleEndian(java.lang.Object, long, byte)
    {
        java.lang.Object r0;
        long l0, $l5, $l6;
        byte b1;
        int i2, $i3, $i4, $i7, $i8, $i9, $i11, $i12, $i13;
        short $s10;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        b1 := @parameter2: byte;

        $i3 = (int) l0;

        $i4 = $i3 & 3;

        i2 = $i4 << 3;

        $l6 = l0 & -4L;

        $l5 = l0 & -4L;

        $i7 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: int getInt(java.lang.Object,long)>(r0, $l5);

        $i8 = 255 << i2;

        $i9 = $i8 ^ -1;

        $i12 = $i7 & $i9;

        $s10 = b1 & 255;

        $i11 = $s10 << i2;

        $i13 = $i12 | $i11;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putInt(java.lang.Object,long,int)>(r0, $l6, $i13);

        return;
    }

    static void putDouble(java.lang.Object, long, double)
    {
        java.lang.Object r0;
        long l0;
        double d0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        d0 := @parameter2: double;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putDouble(java.lang.Object,long,double)>(r0, l0, d0);

        return;
    }

    static void putFloat(java.lang.Object, long, float)
    {
        java.lang.Object r0;
        long l0;
        float f0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putFloat(java.lang.Object,long,float)>(r0, l0, f0);

        return;
    }

    static void putInt(java.lang.Object, long, int)
    {
        java.lang.Object r0;
        long l0;
        int i1;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putInt(java.lang.Object,long,int)>(r0, l0, i1);

        return;
    }

    static void putLong(java.lang.Object, long, long)
    {
        java.lang.Object r0;
        long l0, l1;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putLong(java.lang.Object,long,long)>(r0, l0, l1);

        return;
    }

    static void putObject(java.lang.Object, long, java.lang.Object)
    {
        java.lang.Object r0, r1;
        long l0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r2;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.Object;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putObject(java.lang.Object,long,java.lang.Object)>(r0, l0, r1);

        return;
    }

    static volatile boolean '-$$Nest$smgetBooleanBigEndian'(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean getBooleanBigEndian(java.lang.Object,long)>(r0, l0);

        return $z0;
    }

    static volatile boolean '-$$Nest$smgetBooleanLittleEndian'(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean getBooleanLittleEndian(java.lang.Object,long)>(r0, l0);

        return $z0;
    }

    static boolean determineAndroidSupportByAddressSize(java.lang.Class)
    {
        java.lang.Class r0, r1, $r2, $r4, $r5, $r7, $r8, $r10, $r12, $r15, $r16, $r18, $r19;
        boolean $z0;
        java.lang.Throwable $r21;
        java.lang.String r22, r24, r26, r28, r30, r33, r35;
        java.lang.Class[] r23, r25, r27, r29, r31, r32, r34, r36;

        r0 := @parameter0: java.lang.Class;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: java.lang.Class MEMORY_CLASS>;

        r22 = "peekLong";

        r23 = newarray (java.lang.Class)[2];

        r23[0] = r0;

     label02:
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        r23[1] = $r2;

        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r22, r23);

        r24 = "pokeLong";

        r25 = newarray (java.lang.Class)[3];

        r25[0] = r0;

     label03:
        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        r25[1] = $r4;

     label04:
        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        r25[2] = $r5;

        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r24, r25);

        r26 = "pokeInt";

        r27 = newarray (java.lang.Class)[3];

        r27[0] = r0;

     label05:
        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        r27[1] = $r7;

     label06:
        $r8 = <java.lang.Boolean: java.lang.Class TYPE>;

        r27[2] = $r8;

        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r26, r27);

        r28 = "peekInt";

        r29 = newarray (java.lang.Class)[2];

        r29[0] = r0;

     label07:
        $r10 = <java.lang.Boolean: java.lang.Class TYPE>;

        r29[1] = $r10;

        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r28, r29);

        r30 = "pokeByte";

        r31 = newarray (java.lang.Class)[2];

        r31[0] = r0;

     label08:
        $r12 = <java.lang.Byte: java.lang.Class TYPE>;

        r31[1] = $r12;

        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r30, r31);

        r32 = newarray (java.lang.Class)[1];

        r32[0] = r0;

        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("peekByte", r32);

        r33 = "pokeByteArray";

        r34 = newarray (java.lang.Class)[4];

        r34[0] = r0;

     label09:
        r34[1] = class "[B";

     label10:
        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

        r34[2] = $r15;

     label11:
        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

        r34[3] = $r16;

        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r33, r34);

        r35 = "peekByteArray";

        r36 = newarray (java.lang.Class)[4];

        r36[0] = r0;

     label12:
        r36[1] = class "[B";

     label13:
        $r18 = <java.lang.Integer: java.lang.Class TYPE>;

        r36[2] = $r18;

     label14:
        $r19 = <java.lang.Integer: java.lang.Class TYPE>;

        r36[3] = $r19;

        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r35, r36);

     label15:
        return 1;

     label16:
        $r21 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    static boolean getBoolean(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $z0 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: boolean getBoolean(java.lang.Object,long)>(r0, l0);

        return $z0;
    }

    private static boolean getBooleanBigEndian(java.lang.Object, long)
    {
        long l0;
        byte $b1;
        java.lang.Object r0;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $b1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByteBigEndian(java.lang.Object,long)>(r0, l0);

        if $b1 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    private static boolean getBooleanLittleEndian(java.lang.Object, long)
    {
        long l0;
        byte $b1;
        java.lang.Object r0;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $b1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByteLittleEndian(java.lang.Object,long)>(r0, l0);

        if $b1 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    static boolean hasUnsafeArrayOperations()
    {
        boolean $z0;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean HAS_UNSAFE_ARRAY_OPERATIONS>;

        return $z0;
    }

    static boolean hasUnsafeByteBufferOperations()
    {
        boolean $z0;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean HAS_UNSAFE_BYTEBUFFER_OPERATIONS>;

        return $z0;
    }

    private static boolean supportsUnsafeArrayOperations()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r0, $r1;
        boolean $z0;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $z0 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: boolean supportsUnsafeArrayOperations()>();

        return $z0;
    }

    private static boolean supportsUnsafeByteBufferOperations()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor $r0, $r1;
        boolean $z0;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR>;

        $z0 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: boolean supportsUnsafeByteBufferOperations()>();

        return $z0;
    }

androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1
    public volatile java.lang.Object run() throws java.lang.Exception
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1 r0;
        sun.misc.Unsafe $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1: sun.misc.Unsafe run()>();

        return $r1;
    }

    public sun.misc.Unsafe run() throws java.lang.Exception
    {
        java.lang.Class r0;
        java.lang.reflect.Field[] r1;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r2, r6;
        sun.misc.Unsafe $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1 r4;
        java.lang.reflect.Field r5;

        r4 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1;

        r0 = class "Lsun/misc/Unsafe;";

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r5 = r1[i1];

        virtualinvoke r5.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        r6 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r6);

        $r3 = (sun.misc.Unsafe) $r2;

        return $r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1 r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor
    public byte getByte(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        long l0;
        int $i1;
        byte $b2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        l0 := @parameter0: long;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor: int smallAddress(long)>(l0);

        $b2 = staticinvoke <libcore.io.Memory: byte peekByte(int)>($i1);

        return $b2;
    }

    public byte getByte(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        boolean $z0;
        byte $b1, $b2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>;

        if $z0 == 0 goto label1;

        $b2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte '-$$Nest$smgetByteBigEndian'(java.lang.Object,long)>(r1, l0);

        return $b2;

     label1:
        $b1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte '-$$Nest$smgetByteLittleEndian'(java.lang.Object,long)>(r1, l0);

        return $b1;
    }

    public double getDouble(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        java.lang.Object r1;
        long l0, $l1;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $l1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor: long getLong(java.lang.Object,long)>(r1, l0);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l1);

        return $d0;
    }

    public float getFloat(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        int $i1;
        float $f0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor: int getInt(java.lang.Object,long)>(r1, l0);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        return $f0;
    }

    private static int smallAddress(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = (int) l0;

        return $i1;
    }

    public long getLong(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        long l0, $l2;
        int $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        l0 := @parameter0: long;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor: int smallAddress(long)>(l0);

        $l2 = staticinvoke <libcore.io.Memory: long peekLong(int,boolean)>($i1, 0);

        return $l2;
    }

    void <init>(sun.misc.Unsafe)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        sun.misc.Unsafe r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: sun.misc.Unsafe;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void <init>(sun.misc.Unsafe)>(r1);

        return;
    }

    public void copyMemory(long, byte[], long, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        long l0, l1, l2;
        byte[] r1;
        int $i3, $i4, $i5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor: int smallAddress(long)>(l0);

        $i5 = (int) l1;

        $i4 = (int) l2;

        staticinvoke <libcore.io.Memory: void peekByteArray(int,byte[],int,int)>($i3, r1, $i5, $i4);

        return;
    }

    public void putBoolean(java.lang.Object, long, boolean)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        boolean z0, $z1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        $z1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>;

        if $z1 == 0 goto label1;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smputBooleanBigEndian'(java.lang.Object,long,boolean)>(r1, l0, z0);

        return;

     label1:
        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smputBooleanLittleEndian'(java.lang.Object,long,boolean)>(r1, l0, z0);

        return;
    }

    public void putByte(java.lang.Object, long, byte)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        byte b1;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        b1 := @parameter2: byte;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>;

        if $z0 == 0 goto label1;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smputByteBigEndian'(java.lang.Object,long,byte)>(r1, l0, b1);

        return;

     label1:
        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smputByteLittleEndian'(java.lang.Object,long,byte)>(r1, l0, b1);

        return;
    }

    public void putDouble(java.lang.Object, long, double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        java.lang.Object r1;
        long l0, $l1;
        double d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        d0 := @parameter2: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor: void putLong(java.lang.Object,long,long)>(r1, l0, $l1);

        return;
    }

    public void putFloat(java.lang.Object, long, float)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        float f0;
        int $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor: void putInt(java.lang.Object,long,int)>(r1, l0, $i1);

        return;
    }

    public boolean getBoolean(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>;

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean '-$$Nest$smgetBooleanBigEndian'(java.lang.Object,long)>(r1, l0);

        return $z2;

     label1:
        $z1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean '-$$Nest$smgetBooleanLittleEndian'(java.lang.Object,long)>(r1, l0);

        return $z1;
    }

    public boolean supportsUnsafeByteBufferOperations()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android32MemoryAccessor;

        $z0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: boolean supportsUnsafeByteBufferOperations()>();

        return $z0;
    }

androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor
    public byte getByte(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        long l0;
        byte $b1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        l0 := @parameter0: long;

        $b1 = staticinvoke <libcore.io.Memory: byte peekByte(long)>(l0);

        return $b1;
    }

    public byte getByte(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        boolean $z0;
        byte $b1, $b2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>;

        if $z0 == 0 goto label1;

        $b2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte '-$$Nest$smgetByteBigEndian'(java.lang.Object,long)>(r1, l0);

        return $b2;

     label1:
        $b1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte '-$$Nest$smgetByteLittleEndian'(java.lang.Object,long)>(r1, l0);

        return $b1;
    }

    public double getDouble(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        java.lang.Object r1;
        long l0, $l1;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $l1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor: long getLong(java.lang.Object,long)>(r1, l0);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l1);

        return $d0;
    }

    public float getFloat(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        int $i1;
        float $f0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor: int getInt(java.lang.Object,long)>(r1, l0);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        return $f0;
    }

    public long getLong(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        long l0, $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        l0 := @parameter0: long;

        $l1 = staticinvoke <libcore.io.Memory: long peekLong(long,boolean)>(l0, 0);

        return $l1;
    }

    void <init>(sun.misc.Unsafe)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        sun.misc.Unsafe r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: sun.misc.Unsafe;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void <init>(sun.misc.Unsafe)>(r1);

        return;
    }

    public void copyMemory(long, byte[], long, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        long l0, l1, l2;
        byte[] r1;
        int $i3, $i4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $i4 = (int) l1;

        $i3 = (int) l2;

        staticinvoke <libcore.io.Memory: void peekByteArray(long,byte[],int,int)>(l0, r1, $i4, $i3);

        return;
    }

    public void putBoolean(java.lang.Object, long, boolean)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        boolean z0, $z1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        $z1 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>;

        if $z1 == 0 goto label1;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smputBooleanBigEndian'(java.lang.Object,long,boolean)>(r1, l0, z0);

        return;

     label1:
        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smputBooleanLittleEndian'(java.lang.Object,long,boolean)>(r1, l0, z0);

        return;
    }

    public void putByte(java.lang.Object, long, byte)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        byte b1;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        b1 := @parameter2: byte;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>;

        if $z0 == 0 goto label1;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smputByteBigEndian'(java.lang.Object,long,byte)>(r1, l0, b1);

        return;

     label1:
        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smputByteLittleEndian'(java.lang.Object,long,byte)>(r1, l0, b1);

        return;
    }

    public void putDouble(java.lang.Object, long, double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        java.lang.Object r1;
        long l0, $l1;
        double d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        d0 := @parameter2: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor: void putLong(java.lang.Object,long,long)>(r1, l0, $l1);

        return;
    }

    public void putFloat(java.lang.Object, long, float)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        float f0;
        int $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor: void putInt(java.lang.Object,long,int)>(r1, l0, $i1);

        return;
    }

    public boolean getBoolean(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $z0 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN>;

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean '-$$Nest$smgetBooleanBigEndian'(java.lang.Object,long)>(r1, l0);

        return $z2;

     label1:
        $z1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean '-$$Nest$smgetBooleanLittleEndian'(java.lang.Object,long)>(r1, l0);

        return $z1;
    }

    public boolean supportsUnsafeByteBufferOperations()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$Android64MemoryAccessor;

        $z0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: boolean supportsUnsafeByteBufferOperations()>();

        return $z0;
    }

androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor
    public byte getByte(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        long l0;
        sun.misc.Unsafe $r1;
        byte $b1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        $b1 = virtualinvoke $r1.<sun.misc.Unsafe: byte getByte(long)>(l0);

        return $b1;
    }

    public byte getByte(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        sun.misc.Unsafe $r2;
        byte $b1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        $b1 = virtualinvoke $r2.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(r1, l0);

        return $b1;
    }

    public double getDouble(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        sun.misc.Unsafe $r2;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        $d0 = virtualinvoke $r2.<sun.misc.Unsafe: double getDouble(java.lang.Object,long)>(r1, l0);

        return $d0;
    }

    public float getFloat(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        sun.misc.Unsafe $r2;
        float $f0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        $f0 = virtualinvoke $r2.<sun.misc.Unsafe: float getFloat(java.lang.Object,long)>(r1, l0);

        return $f0;
    }

    public long getLong(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        long l0, $l1;
        sun.misc.Unsafe $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        $l1 = virtualinvoke $r1.<sun.misc.Unsafe: long getLong(long)>(l0);

        return $l1;
    }

    void <init>(sun.misc.Unsafe)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        sun.misc.Unsafe r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: sun.misc.Unsafe;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void <init>(sun.misc.Unsafe)>(r1);

        return;
    }

    public void copyMemory(long, byte[], long, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        long l0, l1, l2, $l3, $l4;
        byte[] r1;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        $l3 = <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long BYTE_ARRAY_BASE_OFFSET>;

        $l4 = $l3 + l1;

        virtualinvoke $r2.<sun.misc.Unsafe: void copyMemory(java.lang.Object,long,java.lang.Object,long,long)>(null, l0, r1, $l4, l2);

        return;
    }

    public void putBoolean(java.lang.Object, long, boolean)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        boolean z0;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        virtualinvoke $r2.<sun.misc.Unsafe: void putBoolean(java.lang.Object,long,boolean)>(r1, l0, z0);

        return;
    }

    public void putByte(java.lang.Object, long, byte)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        byte b1;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        b1 := @parameter2: byte;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        virtualinvoke $r2.<sun.misc.Unsafe: void putByte(java.lang.Object,long,byte)>(r1, l0, b1);

        return;
    }

    public void putDouble(java.lang.Object, long, double)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        double d0;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        d0 := @parameter2: double;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        virtualinvoke $r2.<sun.misc.Unsafe: void putDouble(java.lang.Object,long,double)>(r1, l0, d0);

        return;
    }

    public void putFloat(java.lang.Object, long, float)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        float f0;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        virtualinvoke $r2.<sun.misc.Unsafe: void putFloat(java.lang.Object,long,float)>(r1, l0, f0);

        return;
    }

    public boolean getBoolean(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        sun.misc.Unsafe $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        $z0 = virtualinvoke $r2.<sun.misc.Unsafe: boolean getBoolean(java.lang.Object,long)>(r1, l0);

        return $z0;
    }

    public boolean supportsUnsafeArrayOperations()
    {
        boolean $z0;
        sun.misc.Unsafe $r0;
        java.lang.Class $r1, $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r16, $r18, $r19, r23;
        java.lang.Throwable $r21, r40;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r22;
        java.lang.String r24, r26, r28, r30, r32, r34, r36, r38;
        java.lang.Class[] r25, r27, r29, r31, r33, r35, r37, r39;

        r22 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        $z0 = specialinvoke r22.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: boolean supportsUnsafeArrayOperations()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r0 = r22.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        r23 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        r24 = "getByte";

        r25 = newarray (java.lang.Class)[2];

     label02:
        r25[0] = class "Ljava/lang/Object;";

     label03:
        $r1 = <java.lang.Long: java.lang.Class TYPE>;

        r25[1] = $r1;

        virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r24, r25);

        r26 = "putByte";

        r27 = newarray (java.lang.Class)[3];

     label04:
        r27[0] = class "Ljava/lang/Object;";

     label05:
        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        r27[1] = $r3;

     label06:
        $r4 = <java.lang.Byte: java.lang.Class TYPE>;

        r27[2] = $r4;

        virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r26, r27);

        r28 = "getBoolean";

        r29 = newarray (java.lang.Class)[2];

     label07:
        r29[0] = class "Ljava/lang/Object;";

     label08:
        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        r29[1] = $r6;

        virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r28, r29);

        r30 = "putBoolean";

        r31 = newarray (java.lang.Class)[3];

     label09:
        r31[0] = class "Ljava/lang/Object;";

     label10:
        $r8 = <java.lang.Long: java.lang.Class TYPE>;

        r31[1] = $r8;

     label11:
        $r9 = <java.lang.Boolean: java.lang.Class TYPE>;

        r31[2] = $r9;

        virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r30, r31);

        r32 = "getFloat";

        r33 = newarray (java.lang.Class)[2];

     label12:
        r33[0] = class "Ljava/lang/Object;";

     label13:
        $r11 = <java.lang.Long: java.lang.Class TYPE>;

        r33[1] = $r11;

        virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r32, r33);

        r34 = "putFloat";

        r35 = newarray (java.lang.Class)[3];

     label14:
        r35[0] = class "Ljava/lang/Object;";

     label15:
        $r13 = <java.lang.Long: java.lang.Class TYPE>;

        r35[1] = $r13;

     label16:
        $r14 = <java.lang.Float: java.lang.Class TYPE>;

        r35[2] = $r14;

        virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r34, r35);

        r36 = "getDouble";

        r37 = newarray (java.lang.Class)[2];

     label17:
        r37[0] = class "Ljava/lang/Object;";

     label18:
        $r16 = <java.lang.Long: java.lang.Class TYPE>;

        r37[1] = $r16;

        virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r36, r37);

        r38 = "putDouble";

        r39 = newarray (java.lang.Class)[3];

     label19:
        r39[0] = class "Ljava/lang/Object;";

     label20:
        $r18 = <java.lang.Long: java.lang.Class TYPE>;

        r39[1] = $r18;

     label21:
        $r19 = <java.lang.Double: java.lang.Class TYPE>;

        r39[2] = $r19;

        virtualinvoke r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r38, r39);

     label22:
        return 1;

     label23:
        $r21 := @caughtexception;

        r40 = $r21;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smlogMissingMethod'(java.lang.Throwable)>(r40);

        return 0;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
    }

    public boolean supportsUnsafeByteBufferOperations()
    {
        boolean $z0;
        sun.misc.Unsafe $r0;
        java.lang.Class $r1, $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, r26;
        java.lang.Throwable $r24, r43;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor r25;
        java.lang.String r27, r29, r31, r33, r35, r37, r39, r41;
        java.lang.Class[] r28, r30, r32, r34, r36, r38, r40, r42;

        r25 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor;

        $z0 = specialinvoke r25.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: boolean supportsUnsafeByteBufferOperations()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r0 = r25.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$JvmMemoryAccessor: sun.misc.Unsafe unsafe>;

        r26 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        r27 = "getByte";

        r28 = newarray (java.lang.Class)[1];

     label02:
        $r1 = <java.lang.Long: java.lang.Class TYPE>;

        r28[0] = $r1;

        virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r27, r28);

        r29 = "putByte";

        r30 = newarray (java.lang.Class)[2];

     label03:
        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        r30[0] = $r3;

     label04:
        $r4 = <java.lang.Byte: java.lang.Class TYPE>;

        r30[1] = $r4;

        virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r29, r30);

        r31 = "getInt";

        r32 = newarray (java.lang.Class)[1];

     label05:
        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        r32[0] = $r6;

        virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r31, r32);

        r33 = "putInt";

        r34 = newarray (java.lang.Class)[2];

     label06:
        $r8 = <java.lang.Long: java.lang.Class TYPE>;

        r34[0] = $r8;

     label07:
        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        r34[1] = $r9;

        virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r33, r34);

        r35 = "getLong";

        r36 = newarray (java.lang.Class)[1];

     label08:
        $r11 = <java.lang.Long: java.lang.Class TYPE>;

        r36[0] = $r11;

        virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r35, r36);

        r37 = "putLong";

        r38 = newarray (java.lang.Class)[2];

     label09:
        $r13 = <java.lang.Long: java.lang.Class TYPE>;

        r38[0] = $r13;

     label10:
        $r14 = <java.lang.Long: java.lang.Class TYPE>;

        r38[1] = $r14;

        virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r37, r38);

        r39 = "copyMemory";

        r40 = newarray (java.lang.Class)[3];

     label11:
        $r16 = <java.lang.Long: java.lang.Class TYPE>;

        r40[0] = $r16;

     label12:
        $r17 = <java.lang.Long: java.lang.Class TYPE>;

        r40[1] = $r17;

     label13:
        $r18 = <java.lang.Long: java.lang.Class TYPE>;

        r40[2] = $r18;

        virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r39, r40);

        r41 = "copyMemory";

        r42 = newarray (java.lang.Class)[5];

     label14:
        r42[0] = class "Ljava/lang/Object;";

     label15:
        $r20 = <java.lang.Long: java.lang.Class TYPE>;

        r42[1] = $r20;

     label16:
        r42[2] = class "Ljava/lang/Object;";

     label17:
        $r21 = <java.lang.Long: java.lang.Class TYPE>;

        r42[3] = $r21;

     label18:
        $r22 = <java.lang.Long: java.lang.Class TYPE>;

        r42[4] = $r22;

        virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r41, r42);

     label19:
        return 1;

     label20:
        $r24 := @caughtexception;

        r43 = $r24;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smlogMissingMethod'(java.lang.Throwable)>(r43);

        return 0;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: byte getByte(long)>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: byte getByte(java.lang.Object,long)>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: double getDouble(java.lang.Object,long)>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: float getFloat(java.lang.Object,long)>
    public final int arrayBaseOffset(java.lang.Class)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.Class r1;
        sun.misc.Unsafe $r2;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        $i0 = virtualinvoke $r2.<sun.misc.Unsafe: int arrayBaseOffset(java.lang.Class)>(r1);

        return $i0;
    }

    public final int arrayIndexScale(java.lang.Class)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.Class r1;
        sun.misc.Unsafe $r2;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        $i0 = virtualinvoke $r2.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>(r1);

        return $i0;
    }

    public final int getInt(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        sun.misc.Unsafe $r2;
        int $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        $i1 = virtualinvoke $r2.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r1, l0);

        return $i1;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: long getLong(long)>
    public final long getLong(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.Object r1;
        long l0, $l1;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        $l1 = virtualinvoke $r2.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r1, l0);

        return $l1;
    }

    public final long objectFieldOffset(java.lang.reflect.Field)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.reflect.Field r1;
        sun.misc.Unsafe $r2;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.reflect.Field;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        $l0 = virtualinvoke $r2.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>(r1);

        return $l0;
    }

    public final java.lang.Object getObject(java.lang.Object, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.Object r1, $r3;
        long l0;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        $r3 = virtualinvoke $r2.<sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>(r1, l0);

        return $r3;
    }

    void <init>(sun.misc.Unsafe)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        sun.misc.Unsafe r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: sun.misc.Unsafe;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe> = r1;

        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void copyMemory(long,byte[],long,long)>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putBoolean(java.lang.Object,long,boolean)>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putByte(java.lang.Object,long,byte)>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putDouble(java.lang.Object,long,double)>
<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: void putFloat(java.lang.Object,long,float)>
    public final void putInt(java.lang.Object, long, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.Object r1;
        long l0;
        int i1;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        virtualinvoke $r2.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r1, l0, i1);

        return;
    }

    public final void putLong(java.lang.Object, long, long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.Object r1;
        long l0, l1;
        sun.misc.Unsafe $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        virtualinvoke $r2.<sun.misc.Unsafe: void putLong(java.lang.Object,long,long)>(r1, l0, l1);

        return;
    }

    public final void putObject(java.lang.Object, long, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r0;
        java.lang.Object r1, r2;
        long l0;
        sun.misc.Unsafe $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        virtualinvoke $r3.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>(r1, l0, r2);

        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: boolean getBoolean(java.lang.Object,long)>
    public boolean supportsUnsafeArrayOperations()
    {
        sun.misc.Unsafe $r0, $r1;
        java.lang.Class $r5, $r7, $r8, $r10, $r12, $r13, $r15, $r17, r21;
        java.lang.Throwable $r19, r40;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r20;
        java.lang.String r22, r24, r26, r28, r30, r32, r34, r36, r38;
        java.lang.Class[] r23, r25, r27, r29, r31, r33, r35, r37, r39;

        r20 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        $r0 = r20.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        if $r0 != null goto label01;

        return 0;

     label01:
        $r1 = r20.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        r21 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        r22 = "objectFieldOffset";

        r23 = newarray (java.lang.Class)[1];

     label02:
        r23[0] = class "Ljava/lang/reflect/Field;";

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r22, r23);

        r24 = "arrayBaseOffset";

        r25 = newarray (java.lang.Class)[1];

     label03:
        r25[0] = class "Ljava/lang/Class;";

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r24, r25);

        r26 = "arrayIndexScale";

        r27 = newarray (java.lang.Class)[1];

     label04:
        r27[0] = class "Ljava/lang/Class;";

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r26, r27);

        r28 = "getInt";

        r29 = newarray (java.lang.Class)[2];

     label05:
        r29[0] = class "Ljava/lang/Object;";

     label06:
        $r5 = <java.lang.Long: java.lang.Class TYPE>;

        r29[1] = $r5;

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r28, r29);

        r30 = "putInt";

        r31 = newarray (java.lang.Class)[3];

     label07:
        r31[0] = class "Ljava/lang/Object;";

     label08:
        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        r31[1] = $r7;

     label09:
        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        r31[2] = $r8;

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r30, r31);

        r32 = "getLong";

        r33 = newarray (java.lang.Class)[2];

     label10:
        r33[0] = class "Ljava/lang/Object;";

     label11:
        $r10 = <java.lang.Long: java.lang.Class TYPE>;

        r33[1] = $r10;

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r32, r33);

        r34 = "putLong";

        r35 = newarray (java.lang.Class)[3];

     label12:
        r35[0] = class "Ljava/lang/Object;";

     label13:
        $r12 = <java.lang.Long: java.lang.Class TYPE>;

        r35[1] = $r12;

     label14:
        $r13 = <java.lang.Long: java.lang.Class TYPE>;

        r35[2] = $r13;

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r34, r35);

        r36 = "getObject";

        r37 = newarray (java.lang.Class)[2];

     label15:
        r37[0] = class "Ljava/lang/Object;";

     label16:
        $r15 = <java.lang.Long: java.lang.Class TYPE>;

        r37[1] = $r15;

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r36, r37);

        r38 = "putObject";

        r39 = newarray (java.lang.Class)[3];

     label17:
        r39[0] = class "Ljava/lang/Object;";

     label18:
        $r17 = <java.lang.Long: java.lang.Class TYPE>;

        r39[1] = $r17;

     label19:
        r39[2] = class "Ljava/lang/Object;";

        virtualinvoke r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r38, r39);

     label20:
        return 1;

     label21:
        $r19 := @caughtexception;

        r40 = $r19;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smlogMissingMethod'(java.lang.Throwable)>(r40);

        return 0;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
    }

    public boolean supportsUnsafeByteBufferOperations()
    {
        sun.misc.Unsafe $r0, $r1;
        java.lang.Class $r3, r7;
        java.lang.Throwable $r5, r13;
        androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor r6;
        java.lang.String r8, r10;
        java.lang.Class[] r9, r11;
        java.lang.reflect.Field r12;

        r6 := @this: androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor;

        $r0 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = r6.<androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe>;

        r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        r8 = "objectFieldOffset";

        r9 = newarray (java.lang.Class)[1];

     label2:
        r9[0] = class "Ljava/lang/reflect/Field;";

        virtualinvoke r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r8, r9);

        r10 = "getLong";

        r11 = newarray (java.lang.Class)[2];

     label3:
        r11[0] = class "Ljava/lang/Object;";

     label4:
        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        r11[1] = $r3;

        virtualinvoke r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r10, r11);

     label5:
        r12 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: java.lang.reflect.Field '-$$Nest$smbufferAddressField'()>();

     label6:
        if r12 != null goto label7;

        return 0;

     label7:
        return 1;

     label8:
        $r5 := @caughtexception;

        r13 = $r5;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void '-$$Nest$smlogMissingMethod'(java.lang.Throwable)>(r13);

        return 0;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

