androidx.camera.core.impl.CameraControlInternal
<androidx.camera.core.impl.CameraControlInternal: androidx.camera.core.impl.CameraControlInternal DEFAULT_EMPTY_INSTANCE>
<androidx.camera.core.impl.CameraControlInternal: int getFlashMode()>
<androidx.camera.core.impl.CameraControlInternal: void setFlashMode(int)>
<androidx.camera.core.impl.CameraControlInternal: void addZslConfig(androidx.camera.core.impl.SessionConfig$Builder)>
<androidx.camera.core.impl.CameraControlInternal: void setZslDisabledByUserCaseConfig(boolean)>
<androidx.camera.core.impl.CameraControlInternal: boolean isZslDisabledByByUserCaseConfig()>
<androidx.camera.core.impl.CameraControlInternal: com.google.common.util.concurrent.ListenableFuture submitStillCaptureRequests(java.util.List,int,int)>
<androidx.camera.core.impl.CameraControlInternal: androidx.camera.core.impl.SessionConfig getSessionConfig()>
<androidx.camera.core.impl.CameraControlInternal: android.graphics.Rect getSensorRect()>
<androidx.camera.core.impl.CameraControlInternal: void addInteropConfig(androidx.camera.core.impl.Config)>
<androidx.camera.core.impl.CameraControlInternal: void clearInteropConfig()>
<androidx.camera.core.impl.CameraControlInternal: androidx.camera.core.impl.Config getInteropConfig()>
    static void <clinit>()
    {
        androidx.camera.core.impl.CameraControlInternal$1 $r0;

        $r0 = new androidx.camera.core.impl.CameraControlInternal$1;

        specialinvoke $r0.<androidx.camera.core.impl.CameraControlInternal$1: void <init>()>();

        <androidx.camera.core.impl.CameraControlInternal: androidx.camera.core.impl.CameraControlInternal DEFAULT_EMPTY_INSTANCE> = $r0;

        return;
    }

androidx.camera.core.impl.CameraControlInternal$1
    void <init>()
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getFlashMode()
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        return 2;
    }

    public void setFlashMode(int)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        int i0;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        i0 := @parameter0: int;

        return;
    }

    public void setZslDisabledByUserCaseConfig(boolean)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        boolean z0;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean isZslDisabledByByUserCaseConfig()
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        return 0;
    }

    public void addZslConfig(androidx.camera.core.impl.SessionConfig$Builder)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        androidx.camera.core.impl.SessionConfig$Builder r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        r1 := @parameter0: androidx.camera.core.impl.SessionConfig$Builder;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture enableTorch(boolean)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        boolean z0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(null);

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture setExposureCompensationIndex(int)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        int i0;
        java.lang.Integer $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r2 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r1);

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture submitStillCaptureRequests(java.util.List, int, int)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        java.util.List r1, $r2;
        int i0, i1;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r3 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r2);

        return $r3;
    }

    public androidx.camera.core.impl.SessionConfig getSessionConfig()
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        androidx.camera.core.impl.SessionConfig $r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        $r1 = staticinvoke <androidx.camera.core.impl.SessionConfig: androidx.camera.core.impl.SessionConfig defaultEmptySessionConfig()>();

        return $r1;
    }

    public android.graphics.Rect getSensorRect()
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        android.graphics.Rect $r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture startFocusAndMetering(androidx.camera.core.FocusMeteringAction)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        androidx.camera.core.FocusMeteringAction r1;
        androidx.camera.core.FocusMeteringResult $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        r1 := @parameter0: androidx.camera.core.FocusMeteringAction;

        $r2 = staticinvoke <androidx.camera.core.FocusMeteringResult: androidx.camera.core.FocusMeteringResult emptyInstance()>();

        $r3 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r2);

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture cancelFocusAndMetering()
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        $r1 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(null);

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture setZoomRatio(float)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        float f0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        f0 := @parameter0: float;

        $r1 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(null);

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture setLinearZoom(float)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        float f0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        f0 := @parameter0: float;

        $r1 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(null);

        return $r1;
    }

    public void addInteropConfig(androidx.camera.core.impl.Config)
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;
        androidx.camera.core.impl.Config r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        r1 := @parameter0: androidx.camera.core.impl.Config;

        return;
    }

    public void clearInteropConfig()
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        return;
    }

    public androidx.camera.core.impl.Config getInteropConfig()
    {
        androidx.camera.core.impl.CameraControlInternal$1 r0;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$1;

        return null;
    }

androidx.camera.core.impl.CameraControlInternal$CameraControlException
<androidx.camera.core.impl.CameraControlInternal$CameraControlException: androidx.camera.core.impl.CameraCaptureFailure mCameraCaptureFailure>
    public void <init>(androidx.camera.core.impl.CameraCaptureFailure)
    {
        androidx.camera.core.impl.CameraControlInternal$CameraControlException r0;
        androidx.camera.core.impl.CameraCaptureFailure r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$CameraControlException;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureFailure;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        r0.<androidx.camera.core.impl.CameraControlInternal$CameraControlException: androidx.camera.core.impl.CameraCaptureFailure mCameraCaptureFailure> = r1;

        return;
    }

    public void <init>(androidx.camera.core.impl.CameraCaptureFailure, java.lang.Throwable)
    {
        androidx.camera.core.impl.CameraControlInternal$CameraControlException r0;
        androidx.camera.core.impl.CameraCaptureFailure r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$CameraControlException;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureFailure;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r2);

        r0.<androidx.camera.core.impl.CameraControlInternal$CameraControlException: androidx.camera.core.impl.CameraCaptureFailure mCameraCaptureFailure> = r1;

        return;
    }

    public androidx.camera.core.impl.CameraCaptureFailure getCameraCaptureFailure()
    {
        androidx.camera.core.impl.CameraControlInternal$CameraControlException r0;
        androidx.camera.core.impl.CameraCaptureFailure $r1;

        r0 := @this: androidx.camera.core.impl.CameraControlInternal$CameraControlException;

        $r1 = r0.<androidx.camera.core.impl.CameraControlInternal$CameraControlException: androidx.camera.core.impl.CameraCaptureFailure mCameraCaptureFailure>;

        return $r1;
    }

androidx.camera.core.impl.CameraControlInternal$ControlUpdateCallback
<androidx.camera.core.impl.CameraControlInternal$ControlUpdateCallback: void onCameraControlUpdateSessionConfig()>
<androidx.camera.core.impl.CameraControlInternal$ControlUpdateCallback: void onCameraControlCaptureRequests(java.util.List)>
