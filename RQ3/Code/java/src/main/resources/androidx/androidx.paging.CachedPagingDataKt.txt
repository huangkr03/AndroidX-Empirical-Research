androidx.paging.CachedPagingDataKt
    public static final kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.CoroutineScope)
    {
        kotlinx.coroutines.flow.Flow $r0, $r2;
        kotlinx.coroutines.CoroutineScope r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        $r2 = staticinvoke <androidx.paging.CachedPagingDataKt: kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,androidx.paging.ActiveFlowTracker)>($r0, r1, null);

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.CoroutineScope, androidx.paging.ActiveFlowTracker)
    {
        kotlinx.coroutines.flow.Flow $r0, $r3, $r6, $r11, $r13, $r16, $r20;
        kotlinx.coroutines.CoroutineScope r1;
        androidx.paging.ActiveFlowTracker r2;
        androidx.paging.CachedPagingDataKt$cachedIn$$inlined$simpleMapLatest$1 $r4;
        kotlin.jvm.functions.Function3 $r5, $r8, $r15;
        androidx.paging.CachedPagingDataKt$cachedIn$2 $r7;
        androidx.paging.CachedPagingDataKt$cachedIn$$inlined$map$1 $r9;
        androidx.paging.CachedPagingDataKt$cachedIn$4 $r10;
        kotlin.jvm.functions.Function2 $r12;
        androidx.paging.CachedPagingDataKt$cachedIn$5 $r14;
        kotlinx.coroutines.flow.SharingStarted$Companion $r17;
        kotlinx.coroutines.flow.SharingStarted $r18;
        kotlinx.coroutines.flow.SharedFlow $r19;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter2: androidx.paging.ActiveFlowTracker;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        $r4 = new androidx.paging.CachedPagingDataKt$cachedIn$$inlined$simpleMapLatest$1;

        specialinvoke $r4.<androidx.paging.CachedPagingDataKt$cachedIn$$inlined$simpleMapLatest$1: void <init>(kotlin.coroutines.Continuation,kotlinx.coroutines.CoroutineScope)>(null, r1);

        $r5 = (kotlin.jvm.functions.Function3) $r4;

        $r6 = staticinvoke <androidx.paging.FlowExtKt: kotlinx.coroutines.flow.Flow simpleTransformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r0, $r5);

        $r7 = new androidx.paging.CachedPagingDataKt$cachedIn$2;

        specialinvoke $r7.<androidx.paging.CachedPagingDataKt$cachedIn$2: void <init>(kotlin.coroutines.Continuation)>(null);

        $r8 = (kotlin.jvm.functions.Function3) $r7;

        $r3 = staticinvoke <androidx.paging.FlowExtKt: kotlinx.coroutines.flow.Flow simpleRunningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r6, $r8);

        $r9 = new androidx.paging.CachedPagingDataKt$cachedIn$$inlined$map$1;

        specialinvoke $r9.<androidx.paging.CachedPagingDataKt$cachedIn$$inlined$map$1: void <init>(kotlinx.coroutines.flow.Flow)>($r3);

        $r11 = (kotlinx.coroutines.flow.Flow) $r9;

        $r10 = new androidx.paging.CachedPagingDataKt$cachedIn$4;

        specialinvoke $r10.<androidx.paging.CachedPagingDataKt$cachedIn$4: void <init>(androidx.paging.ActiveFlowTracker,kotlin.coroutines.Continuation)>(r2, null);

        $r12 = (kotlin.jvm.functions.Function2) $r10;

        $r13 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r11, $r12);

        $r14 = new androidx.paging.CachedPagingDataKt$cachedIn$5;

        specialinvoke $r14.<androidx.paging.CachedPagingDataKt$cachedIn$5: void <init>(androidx.paging.ActiveFlowTracker,kotlin.coroutines.Continuation)>(r2, null);

        $r15 = (kotlin.jvm.functions.Function3) $r14;

        $r16 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r13, $r15);

        $r17 = <kotlinx.coroutines.flow.SharingStarted: kotlinx.coroutines.flow.SharingStarted$Companion Companion>;

        $r18 = virtualinvoke $r17.<kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted getLazily()>();

        $r19 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow shareIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int)>($r16, r1, $r18, 1);

        $r20 = (kotlinx.coroutines.flow.Flow) $r19;

        return $r20;
    }

    public static kotlinx.coroutines.flow.Flow cachedIn$default(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.CoroutineScope, androidx.paging.ActiveFlowTracker, int, java.lang.Object)
    {
        kotlinx.coroutines.flow.Flow r0, $r3;
        kotlinx.coroutines.CoroutineScope r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.paging.ActiveFlowTracker r4;

        r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlinx.coroutines.CoroutineScope;

        r4 := @parameter2: androidx.paging.ActiveFlowTracker;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $r3 = staticinvoke <androidx.paging.CachedPagingDataKt: kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,androidx.paging.ActiveFlowTracker)>(r0, r1, r4);

        return $r3;
    }

