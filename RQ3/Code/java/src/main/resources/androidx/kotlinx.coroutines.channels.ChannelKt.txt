kotlinx.coroutines.channels.ChannelKt
    public static final kotlinx.coroutines.channels.Channel Channel(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        kotlinx.coroutines.channels.BufferOverflow $r1, $r2;
        kotlinx.coroutines.channels.ConflatedChannel $r3;
        kotlinx.coroutines.channels.LinkedListChannel $r4;
        kotlinx.coroutines.channels.RendezvousChannel $r5;
        kotlinx.coroutines.channels.ArrayChannel $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;
        kotlinx.coroutines.channels.Channel$Factory $r9;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlinx.coroutines.channels.BufferOverflow;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "onBufferOverflow");

        $i1 = 1;

        if $i0 == 2147483647 goto label02;

        lookupswitch($i0)
        {
            case -2: goto label09;
            case -1: goto label05;
            case 0: goto label03;
            default: goto label01;
        };

     label01:
        if $i0 != 1 goto label11;

        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST>;

        if $r1 != $r2 goto label11;

        $r3 = new kotlinx.coroutines.channels.ConflatedChannel;

        specialinvoke $r3.<kotlinx.coroutines.channels.ConflatedChannel: void <init>(kotlin.jvm.functions.Function1)>($r0);

        return $r3;

     label02:
        $r4 = new kotlinx.coroutines.channels.LinkedListChannel;

        specialinvoke $r4.<kotlinx.coroutines.channels.LinkedListChannel: void <init>(kotlin.jvm.functions.Function1)>($r0);

        return $r4;

     label03:
        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        if $r1 != $r2 goto label04;

        $r5 = new kotlinx.coroutines.channels.RendezvousChannel;

        specialinvoke $r5.<kotlinx.coroutines.channels.RendezvousChannel: void <init>(kotlin.jvm.functions.Function1)>($r0);

        return $r5;

     label04:
        $r6 = new kotlinx.coroutines.channels.ArrayChannel;

        specialinvoke $r6.<kotlinx.coroutines.channels.ArrayChannel: void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>(1, $r1, $r0);

        return $r6;

     label05:
        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        if $r1 != $r2 goto label06;

        goto label07;

     label06:
        $i1 = 0;

     label07:
        if $i1 == 0 goto label08;

        $r3 = new kotlinx.coroutines.channels.ConflatedChannel;

        specialinvoke $r3.<kotlinx.coroutines.channels.ConflatedChannel: void <init>(kotlin.jvm.functions.Function1)>($r0);

        return $r3;

     label08:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = "CONFLATED capacity cannot be used with non-default onBufferOverflow";

        $r8 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label09:
        $r6 = new kotlinx.coroutines.channels.ArrayChannel;

        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        if $r1 != $r2 goto label10;

        $r9 = <kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory>;

        $i1 = virtualinvoke $r9.<kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>();

        goto label10;

     label10:
        specialinvoke $r6.<kotlinx.coroutines.channels.ArrayChannel: void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>($i1, $r1, $r0);

        return $r6;

     label11:
        $r6 = new kotlinx.coroutines.channels.ArrayChannel;

        specialinvoke $r6.<kotlinx.coroutines.channels.ArrayChannel: void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>($i0, $r1, $r0);

        return $r6;
    }

    public static kotlinx.coroutines.channels.Channel Channel$default(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlinx.coroutines.channels.Channel $r0;
        int $i0, $i1, $i2;
        kotlinx.coroutines.channels.BufferOverflow $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlinx.coroutines.channels.BufferOverflow;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $i0 = 0;

     label1:
        $i2 = $i1 & 2;

        if $i2 == 0 goto label2;

        $r1 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

     label2:
        $i1 = $i1 & 4;

        if $i1 == 0 goto label3;

        $r2 = null;

     label3:
        $r0 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>($i0, $r1, $r2);

        return $r0;
    }

