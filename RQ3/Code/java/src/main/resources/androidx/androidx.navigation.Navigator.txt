androidx.navigation.Navigator
<androidx.navigation.Navigator: androidx.navigation.NavigatorState _state>
<androidx.navigation.Navigator: boolean isAttached>
    public void <init>()
    {
        androidx.navigation.Navigator r0;

        r0 := @this: androidx.navigation.Navigator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected final androidx.navigation.NavigatorState getState()
    {
        androidx.navigation.Navigator r0;
        androidx.navigation.NavigatorState $r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.navigation.Navigator;

        $r1 = r0.<androidx.navigation.Navigator: androidx.navigation.NavigatorState _state>;

        if $r1 != null goto label1;

        $r4 = "You cannot access the Navigator\'s state until the Navigator is attached";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        return $r1;
    }

    public final boolean isAttached()
    {
        androidx.navigation.Navigator r0;
        boolean $z0;

        r0 := @this: androidx.navigation.Navigator;

        $z0 = r0.<androidx.navigation.Navigator: boolean isAttached>;

        return $z0;
    }

    public void onAttach(androidx.navigation.NavigatorState)
    {
        androidx.navigation.Navigator r0;
        androidx.navigation.NavigatorState r1;

        r0 := @this: androidx.navigation.Navigator;

        r1 := @parameter0: androidx.navigation.NavigatorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        r0.<androidx.navigation.Navigator: androidx.navigation.NavigatorState _state> = r1;

        r0.<androidx.navigation.Navigator: boolean isAttached> = 1;

        return;
    }

<androidx.navigation.Navigator: androidx.navigation.NavDestination createDestination()>
    public void navigate(java.util.List, androidx.navigation.NavOptions, androidx.navigation.Navigator$Extras)
    {
        androidx.navigation.Navigator r0;
        java.util.List r1;
        androidx.navigation.NavOptions r2;
        androidx.navigation.Navigator$Extras r3;
        kotlin.sequences.Sequence $r4, $r9, $r12;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.navigation.NavBackStackEntry r7;
        java.lang.Iterable $r8;
        androidx.navigation.Navigator$navigate$1 $r10;
        kotlin.jvm.functions.Function1 $r11;
        boolean $z2;
        androidx.navigation.NavigatorState $r13;

        r0 := @this: androidx.navigation.Navigator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.navigation.NavOptions;

        r3 := @parameter2: androidx.navigation.Navigator$Extras;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "entries");

        $r8 = (java.lang.Iterable) r1;

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r8);

        $r10 = new androidx.navigation.Navigator$navigate$1;

        specialinvoke $r10.<androidx.navigation.Navigator$navigate$1: void <init>(androidx.navigation.Navigator,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras)>(r0, r2, r3);

        $r11 = (kotlin.jvm.functions.Function1) $r10;

        $r12 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r9, $r11);

        $r4 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)>($r12);

        r5 = interfaceinvoke $r4.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.navigation.NavBackStackEntry) r6;

        $r13 = virtualinvoke r0.<androidx.navigation.Navigator: androidx.navigation.NavigatorState getState()>();

        virtualinvoke $r13.<androidx.navigation.NavigatorState: void push(androidx.navigation.NavBackStackEntry)>(r7);

        goto label1;

     label2:
        return;
    }

    public void onLaunchSingleTop(androidx.navigation.NavBackStackEntry)
    {
        androidx.navigation.Navigator r0;
        androidx.navigation.NavBackStackEntry r1;
        androidx.navigation.NavDestination r2, r3, $r9;
        boolean $z0;
        androidx.navigation.Navigator$onLaunchSingleTop$1 $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.navigation.NavOptions $r6;
        androidx.navigation.NavigatorState $r8;

        r0 := @this: androidx.navigation.Navigator;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "backStackEntry");

        r3 = virtualinvoke r1.<androidx.navigation.NavBackStackEntry: androidx.navigation.NavDestination getDestination()>();

        $z0 = r3 instanceof androidx.navigation.NavDestination;

        if $z0 == 0 goto label1;

        $r9 = r3;

        goto label2;

     label1:
        $r9 = null;

     label2:
        if $r9 != null goto label3;

        return;

     label3:
        r2 = $r9;

        $r4 = <androidx.navigation.Navigator$onLaunchSingleTop$1: androidx.navigation.Navigator$onLaunchSingleTop$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.navigation.NavOptionsBuilderKt: androidx.navigation.NavOptions navOptions(kotlin.jvm.functions.Function1)>($r5);

        virtualinvoke r0.<androidx.navigation.Navigator: androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras)>(r2, null, $r6, null);

        $r8 = virtualinvoke r0.<androidx.navigation.Navigator: androidx.navigation.NavigatorState getState()>();

        virtualinvoke $r8.<androidx.navigation.NavigatorState: void onLaunchSingleTop(androidx.navigation.NavBackStackEntry)>(r1);

        return;
    }

    public androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination, android.os.Bundle, androidx.navigation.NavOptions, androidx.navigation.Navigator$Extras)
    {
        androidx.navigation.Navigator r0;
        androidx.navigation.NavDestination r1;
        android.os.Bundle r2;
        androidx.navigation.NavOptions r3;
        androidx.navigation.Navigator$Extras r4;

        r0 := @this: androidx.navigation.Navigator;

        r1 := @parameter0: androidx.navigation.NavDestination;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: androidx.navigation.NavOptions;

        r4 := @parameter3: androidx.navigation.Navigator$Extras;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "destination");

        return r1;
    }

    public void popBackStack(androidx.navigation.NavBackStackEntry, boolean)
    {
        androidx.navigation.Navigator r0;
        androidx.navigation.NavBackStackEntry r1, $r17;
        boolean z0, $z1, $z2, $z3;
        java.util.List r2;
        java.util.ListIterator r3;
        androidx.navigation.NavigatorState $r4, $r8;
        kotlinx.coroutines.flow.StateFlow $r5;
        java.lang.Object $r6, $r7;
        int $i0;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;
        java.lang.IllegalStateException $r14;
        java.lang.String $r15, $r16;

        r0 := @this: androidx.navigation.Navigator;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "popUpTo");

        $r4 = virtualinvoke r0.<androidx.navigation.Navigator: androidx.navigation.NavigatorState getState()>();

        $r5 = virtualinvoke $r4.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow getBackStack()>();

        $r6 = interfaceinvoke $r5.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        r2 = (java.util.List) $r6;

        $z1 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("popBackStack was called with ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which does not exist in back stack ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        r3 = interfaceinvoke r2.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

        $r17 = null;

     label2:
        $z2 = virtualinvoke r0.<androidx.navigation.Navigator: boolean popBackStack()>();

        if $z2 != 0 goto label3;

        goto label4;

     label3:
        $r7 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();

        $r17 = (androidx.navigation.NavBackStackEntry) $r7;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r17, r1);

        if $z3 == 0 goto label2;

     label4:
        if $r17 == null goto label5;

        $r8 = virtualinvoke r0.<androidx.navigation.Navigator: androidx.navigation.NavigatorState getState()>();

        virtualinvoke $r8.<androidx.navigation.NavigatorState: void pop(androidx.navigation.NavBackStackEntry,boolean)>($r17, z0);

     label5:
        return;
    }

    public boolean popBackStack()
    {
        androidx.navigation.Navigator r0;

        r0 := @this: androidx.navigation.Navigator;

        return 1;
    }

    public android.os.Bundle onSaveState()
    {
        androidx.navigation.Navigator r0;

        r0 := @this: androidx.navigation.Navigator;

        return null;
    }

    public void onRestoreState(android.os.Bundle)
    {
        androidx.navigation.Navigator r0;
        android.os.Bundle r1;

        r0 := @this: androidx.navigation.Navigator;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "savedState");

        return;
    }

androidx.navigation.Navigator$Extras
androidx.navigation.Navigator$Name
<androidx.navigation.Navigator$Name: java.lang.String value()>
androidx.navigation.Navigator$navigate$1
<androidx.navigation.Navigator$navigate$1: androidx.navigation.Navigator this$0>
<androidx.navigation.Navigator$navigate$1: androidx.navigation.NavOptions $navOptions>
<androidx.navigation.Navigator$navigate$1: androidx.navigation.Navigator$Extras $navigatorExtras>
    void <init>(androidx.navigation.Navigator, androidx.navigation.NavOptions, androidx.navigation.Navigator$Extras)
    {
        androidx.navigation.Navigator$navigate$1 r0;
        androidx.navigation.Navigator $r1;
        androidx.navigation.NavOptions $r2;
        androidx.navigation.Navigator$Extras $r3;

        r0 := @this: androidx.navigation.Navigator$navigate$1;

        $r1 := @parameter0: androidx.navigation.Navigator;

        $r2 := @parameter1: androidx.navigation.NavOptions;

        $r3 := @parameter2: androidx.navigation.Navigator$Extras;

        r0.<androidx.navigation.Navigator$navigate$1: androidx.navigation.Navigator this$0> = $r1;

        r0.<androidx.navigation.Navigator$navigate$1: androidx.navigation.NavOptions $navOptions> = $r2;

        r0.<androidx.navigation.Navigator$navigate$1: androidx.navigation.Navigator$Extras $navigatorExtras> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.navigation.NavBackStackEntry invoke(androidx.navigation.NavBackStackEntry)
    {
        androidx.navigation.Navigator$navigate$1 r0;
        androidx.navigation.NavBackStackEntry r1, $r15;
        androidx.navigation.NavDestination r2, r3, r12, $r13, r14;
        boolean $z0, $z1;
        androidx.navigation.Navigator $r4, $r8;
        android.os.Bundle $r5, $r10, $r11;
        androidx.navigation.Navigator$Extras $r6;
        androidx.navigation.NavOptions $r7;
        androidx.navigation.NavigatorState $r9;

        r0 := @this: androidx.navigation.Navigator$navigate$1;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "backStackEntry");

        r12 = virtualinvoke r1.<androidx.navigation.NavBackStackEntry: androidx.navigation.NavDestination getDestination()>();

        $z0 = r12 instanceof androidx.navigation.NavDestination;

        if $z0 == 0 goto label1;

        $r13 = r12;

        goto label2;

     label1:
        $r13 = null;

     label2:
        if $r13 != null goto label3;

        return null;

     label3:
        r2 = $r13;

        $r4 = r0.<androidx.navigation.Navigator$navigate$1: androidx.navigation.Navigator this$0>;

        $r5 = virtualinvoke r1.<androidx.navigation.NavBackStackEntry: android.os.Bundle getArguments()>();

        $r7 = r0.<androidx.navigation.Navigator$navigate$1: androidx.navigation.NavOptions $navOptions>;

        $r6 = r0.<androidx.navigation.Navigator$navigate$1: androidx.navigation.Navigator$Extras $navigatorExtras>;

        r3 = virtualinvoke $r4.<androidx.navigation.Navigator: androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras)>(r2, $r5, $r7, $r6);

        r14 = r3;

        if r14 != null goto label4;

        $r15 = null;

        goto label6;

     label4:
        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r14, r2);

        if $z1 == 0 goto label5;

        $r15 = r1;

        goto label6;

     label5:
        $r8 = r0.<androidx.navigation.Navigator$navigate$1: androidx.navigation.Navigator this$0>;

        $r9 = virtualinvoke $r8.<androidx.navigation.Navigator: androidx.navigation.NavigatorState getState()>();

        $r10 = virtualinvoke r1.<androidx.navigation.NavBackStackEntry: android.os.Bundle getArguments()>();

        $r11 = virtualinvoke r3.<androidx.navigation.NavDestination: android.os.Bundle addInDefaultArgs(android.os.Bundle)>($r10);

        $r15 = virtualinvoke $r9.<androidx.navigation.NavigatorState: androidx.navigation.NavBackStackEntry createBackStackEntry(androidx.navigation.NavDestination,android.os.Bundle)>(r3, $r11);

     label6:
        return $r15;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.navigation.Navigator$navigate$1 r0;
        java.lang.Object r1;
        androidx.navigation.NavBackStackEntry $r2, $r3;

        r0 := @this: androidx.navigation.Navigator$navigate$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.navigation.NavBackStackEntry) r1;

        $r3 = virtualinvoke r0.<androidx.navigation.Navigator$navigate$1: androidx.navigation.NavBackStackEntry invoke(androidx.navigation.NavBackStackEntry)>($r2);

        return $r3;
    }

androidx.navigation.Navigator$onLaunchSingleTop$1
<androidx.navigation.Navigator$onLaunchSingleTop$1: androidx.navigation.Navigator$onLaunchSingleTop$1 INSTANCE>
    void <init>()
    {
        androidx.navigation.Navigator$onLaunchSingleTop$1 r0;

        r0 := @this: androidx.navigation.Navigator$onLaunchSingleTop$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.navigation.NavOptionsBuilder)
    {
        androidx.navigation.Navigator$onLaunchSingleTop$1 r0;
        androidx.navigation.NavOptionsBuilder $r1;

        r0 := @this: androidx.navigation.Navigator$onLaunchSingleTop$1;

        $r1 := @parameter0: androidx.navigation.NavOptionsBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$navOptions");

        virtualinvoke $r1.<androidx.navigation.NavOptionsBuilder: void setLaunchSingleTop(boolean)>(1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.navigation.Navigator$onLaunchSingleTop$1 r0;
        java.lang.Object r1;
        androidx.navigation.NavOptionsBuilder $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.navigation.Navigator$onLaunchSingleTop$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.navigation.NavOptionsBuilder) r1;

        virtualinvoke r0.<androidx.navigation.Navigator$onLaunchSingleTop$1: void invoke(androidx.navigation.NavOptionsBuilder)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.navigation.Navigator$onLaunchSingleTop$1 $r0;

        $r0 = new androidx.navigation.Navigator$onLaunchSingleTop$1;

        specialinvoke $r0.<androidx.navigation.Navigator$onLaunchSingleTop$1: void <init>()>();

        <androidx.navigation.Navigator$onLaunchSingleTop$1: androidx.navigation.Navigator$onLaunchSingleTop$1 INSTANCE> = $r0;

        return;
    }

