androidx.lifecycle.CloseableCoroutineScope
<androidx.lifecycle.CloseableCoroutineScope: kotlin.coroutines.CoroutineContext coroutineContext>
    public void <init>(kotlin.coroutines.CoroutineContext)
    {
        androidx.lifecycle.CloseableCoroutineScope r0;
        kotlin.coroutines.CoroutineContext r1;

        r0 := @this: androidx.lifecycle.CloseableCoroutineScope;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.CloseableCoroutineScope: kotlin.coroutines.CoroutineContext coroutineContext> = r1;

        return;
    }

    public kotlin.coroutines.CoroutineContext getCoroutineContext()
    {
        androidx.lifecycle.CloseableCoroutineScope r0;
        kotlin.coroutines.CoroutineContext $r1;

        r0 := @this: androidx.lifecycle.CloseableCoroutineScope;

        $r1 = r0.<androidx.lifecycle.CloseableCoroutineScope: kotlin.coroutines.CoroutineContext coroutineContext>;

        return $r1;
    }

    public void close()
    {
        androidx.lifecycle.CloseableCoroutineScope r0;
        kotlin.coroutines.CoroutineContext $r1;

        r0 := @this: androidx.lifecycle.CloseableCoroutineScope;

        $r1 = virtualinvoke r0.<androidx.lifecycle.CloseableCoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        staticinvoke <kotlinx.coroutines.JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)>($r1, null, 1, null);

        return;
    }

