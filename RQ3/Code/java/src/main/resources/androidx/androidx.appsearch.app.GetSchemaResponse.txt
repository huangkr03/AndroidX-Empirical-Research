androidx.appsearch.app.GetSchemaResponse
<androidx.appsearch.app.GetSchemaResponse: java.lang.String VERSION_FIELD>
<androidx.appsearch.app.GetSchemaResponse: java.lang.String SCHEMAS_FIELD>
<androidx.appsearch.app.GetSchemaResponse: java.lang.String SCHEMAS_NOT_DISPLAYED_BY_SYSTEM_FIELD>
<androidx.appsearch.app.GetSchemaResponse: java.lang.String SCHEMAS_VISIBLE_TO_PACKAGES_FIELD>
<androidx.appsearch.app.GetSchemaResponse: java.lang.String SCHEMAS_VISIBLE_TO_PERMISSION_FIELD>
<androidx.appsearch.app.GetSchemaResponse: java.lang.String ALL_REQUIRED_PERMISSION_FIELD>
<androidx.appsearch.app.GetSchemaResponse: java.util.Set mSchemasNotDisplayedBySystem>
<androidx.appsearch.app.GetSchemaResponse: java.util.Map mSchemasVisibleToPackages>
<androidx.appsearch.app.GetSchemaResponse: java.util.Map mSchemasVisibleToPermissions>
<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle>
    void <init>(android.os.Bundle)
    {
        androidx.appsearch.app.GetSchemaResponse r0;
        android.os.Bundle r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.os.Bundle) $r2;

        r0.<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle> = $r3;

        return;
    }

    public android.os.Bundle getBundle()
    {
        androidx.appsearch.app.GetSchemaResponse r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse;

        $r1 = r0.<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle>;

        return $r1;
    }

    public int getVersion()
    {
        androidx.appsearch.app.GetSchemaResponse r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse;

        $r1 = r0.<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("version");

        return $i0;
    }

    public java.util.Set getSchemas()
    {
        androidx.appsearch.app.GetSchemaResponse r0;
        java.util.ArrayList r1, $r4;
        androidx.collection.ArraySet r2, $r6;
        android.os.Bundle $r3, $r9;
        java.lang.Object $r5, $r8;
        int $i0, $i1, i2;
        androidx.appsearch.app.AppSearchSchema $r7;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse;

        $r3 = r0.<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle>;

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("schemas");

        $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        r1 = (java.util.ArrayList) $r5;

        $r6 = new androidx.collection.ArraySet;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        specialinvoke $r6.<androidx.collection.ArraySet: void <init>(int)>($i0);

        r2 = $r6;

        i2 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label2;

        $r7 = new androidx.appsearch.app.AppSearchSchema;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = (android.os.Bundle) $r8;

        specialinvoke $r7.<androidx.appsearch.app.AppSearchSchema: void <init>(android.os.Bundle)>($r9);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.util.Set getSchemaTypesNotDisplayedBySystem()
    {
        androidx.appsearch.app.GetSchemaResponse r0;
        java.util.ArrayList r1;
        java.util.Set $r2, $r3, $r6;
        android.os.Bundle $r4;
        androidx.collection.ArraySet $r5;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse;

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse: void checkGetVisibilitySettingSupported()>();

        $r2 = r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Set mSchemasNotDisplayedBySystem>;

        if $r2 != null goto label1;

        $r4 = r0.<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle>;

        r1 = virtualinvoke $r4.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("schemasNotDisplayedBySystem");

        $r5 = new androidx.collection.ArraySet;

        specialinvoke $r5.<androidx.collection.ArraySet: void <init>(java.util.Collection)>(r1);

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);

        r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Set mSchemasNotDisplayedBySystem> = $r6;

     label1:
        $r3 = r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Set mSchemasNotDisplayedBySystem>;

        return $r3;
    }

    public java.util.Map getSchemaTypesVisibleToPackages()
    {
        androidx.appsearch.app.GetSchemaResponse r0;
        android.os.Bundle r1, $r9, $r10, $r22;
        androidx.collection.ArrayMap r2, $r12;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.List r5;
        androidx.collection.ArraySet r6, $r18;
        java.util.Map $r7, $r8, $r14;
        java.lang.Object $r11, $r15, $r17, $r21;
        java.util.Set $r13;
        boolean $z0;
        java.util.ArrayList $r16;
        int $i0, $i1, i2;
        androidx.appsearch.app.PackageIdentifier $r20;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse;

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse: void checkGetVisibilitySettingSupported()>();

        $r7 = r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Map mSchemasVisibleToPackages>;

        if $r7 != null goto label5;

        $r9 = r0.<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle>;

        $r10 = virtualinvoke $r9.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("schemasVisibleToPackages");

        $r11 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r10);

        r1 = (android.os.Bundle) $r11;

        $r12 = new androidx.collection.ArrayMap;

        specialinvoke $r12.<androidx.collection.ArrayMap: void <init>()>();

        r2 = $r12;

        $r13 = virtualinvoke r1.<android.os.Bundle: java.util.Set keySet()>();

        r3 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r15;

        $r16 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>(r4);

        $r17 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r16);

        r5 = (java.util.List) $r17;

        $r18 = new androidx.collection.ArraySet;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        specialinvoke $r18.<androidx.collection.ArraySet: void <init>(int)>($i0);

        r6 = $r18;

        i2 = 0;

     label2:
        $i1 = interfaceinvoke r5.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r20 = new androidx.appsearch.app.PackageIdentifier;

        $r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i2);

        $r22 = (android.os.Bundle) $r21;

        specialinvoke $r20.<androidx.appsearch.app.PackageIdentifier: void <init>(android.os.Bundle)>($r22);

        interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r20);

        i2 = i2 + 1;

        goto label2;

     label3:
        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r6);

        goto label1;

     label4:
        $r14 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r2);

        r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Map mSchemasVisibleToPackages> = $r14;

     label5:
        $r8 = r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Map mSchemasVisibleToPackages>;

        return $r8;
    }

    public java.util.Map getRequiredPermissionsForSchemaTypeVisibility()
    {
        androidx.appsearch.app.GetSchemaResponse r0;
        androidx.collection.ArrayMap r1, $r9;
        android.os.Bundle r2, $r10, $r11, $r20;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.ArrayList r5, $r21;
        androidx.collection.ArraySet r6, $r16, $r18;
        java.util.Map $r7, $r8, $r14;
        java.lang.Object $r12, $r15, $r19;
        java.util.Set $r13;
        boolean $z0;
        int $i0, i1;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse;

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse: void checkGetVisibilitySettingSupported()>();

        $r7 = r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Map mSchemasVisibleToPermissions>;

        if $r7 != null goto label5;

        $r9 = new androidx.collection.ArrayMap;

        specialinvoke $r9.<androidx.collection.ArrayMap: void <init>()>();

        r1 = $r9;

        $r10 = r0.<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle>;

        $r11 = virtualinvoke $r10.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("schemasVisibleToPermissions");

        $r12 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        r2 = (android.os.Bundle) $r12;

        $r13 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r3 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r15;

        r5 = virtualinvoke r2.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>(r4);

        $r16 = new androidx.collection.ArraySet;

        specialinvoke $r16.<androidx.collection.ArraySet: void <init>()>();

        r6 = $r16;

        if r5 == null goto label3;

        i1 = 0;

     label2:
        $i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r18 = new androidx.collection.ArraySet;

        $r19 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r20 = (android.os.Bundle) $r19;

        $r21 = virtualinvoke $r20.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>("allRequiredPermission");

        specialinvoke $r18.<androidx.collection.ArraySet: void <init>(java.util.Collection)>($r21);

        interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r18);

        i1 = i1 + 1;

        goto label2;

     label3:
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r6);

        goto label1;

     label4:
        $r14 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Map mSchemasVisibleToPermissions> = $r14;

     label5:
        $r8 = r0.<androidx.appsearch.app.GetSchemaResponse: java.util.Map mSchemasVisibleToPermissions>;

        return $r8;
    }

    private void checkGetVisibilitySettingSupported()
    {
        androidx.appsearch.app.GetSchemaResponse r0;
        android.os.Bundle $r1;
        boolean $z0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse;

        $r1 = r0.<androidx.appsearch.app.GetSchemaResponse: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("schemasVisibleToPackages");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Get visibility setting is not supported with this backend/Android API level combination.");

        throw $r2;

     label1:
        return;
    }

androidx.appsearch.app.GetSchemaResponse$Builder
<androidx.appsearch.app.GetSchemaResponse$Builder: int mVersion>
<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemaBundles>
<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem>
<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPackages>
<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPermissions>
<androidx.appsearch.app.GetSchemaResponse$Builder: boolean mBuilt>
    public void <init>()
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse$Builder: void <init>(boolean)>(1);

        return;
    }

    public void <init>(boolean)
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;
        boolean z0;
        java.util.ArrayList $r1, $r2;
        android.os.Bundle $r3, $r4;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: int mVersion> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemaBundles> = $r1;

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: boolean mBuilt> = 0;

        if z0 == 0 goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem> = $r2;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPackages> = $r3;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPermissions> = $r4;

     label1:
        return;
    }

    public androidx.appsearch.app.GetSchemaResponse$Builder setVersion(int)
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;
        int i0;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse$Builder: void resetIfBuilt()>();

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: int mVersion> = i0;

        return r0;
    }

    public androidx.appsearch.app.GetSchemaResponse$Builder addSchema(androidx.appsearch.app.AppSearchSchema)
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;
        androidx.appsearch.app.AppSearchSchema r1;
        java.util.ArrayList $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        r1 := @parameter0: androidx.appsearch.app.AppSearchSchema;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse$Builder: void resetIfBuilt()>();

        $r3 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemaBundles>;

        $r4 = virtualinvoke r1.<androidx.appsearch.app.AppSearchSchema: android.os.Bundle getBundle()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return r0;
    }

    public androidx.appsearch.app.GetSchemaResponse$Builder addSchemaTypeNotDisplayedBySystem(java.lang.String)
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;
        java.lang.String r1;
        java.util.ArrayList $r3, $r4, $r5;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse$Builder: void resetIfBuilt()>();

        $r3 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem>;

        if $r3 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem> = $r5;

     label1:
        $r4 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.appsearch.app.GetSchemaResponse$Builder setSchemaTypeVisibleToPackages(java.lang.String, java.util.Set)
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;
        java.lang.String r1;
        java.util.Set r2;
        java.util.ArrayList r3, $r8;
        java.util.Iterator r4;
        androidx.appsearch.app.PackageIdentifier r5;
        int $i0;
        boolean $z0;
        android.os.Bundle $r9, $r11;
        java.lang.Object $r10;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse$Builder: void resetIfBuilt()>();

        $r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = $r8;

        r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.appsearch.app.PackageIdentifier) $r10;

        $r11 = virtualinvoke r5.<androidx.appsearch.app.PackageIdentifier: android.os.Bundle getBundle()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $r9 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPackages>;

        virtualinvoke $r9.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>(r1, r3);

        return r0;
    }

    public androidx.appsearch.app.GetSchemaResponse$Builder setRequiredPermissionsForSchemaTypeVisibility(java.lang.String, java.util.Set)
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;
        java.lang.String r1;
        java.util.Set r2, r5;
        java.util.ArrayList r3, $r8, $r12;
        java.util.Iterator r4, r15;
        int i0;
        boolean $z0, $z1;
        android.os.Bundle $r9, $r11, r16;
        java.lang.Object $r10, $r13;
        java.lang.Integer $r14;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        specialinvoke r0.<androidx.appsearch.app.GetSchemaResponse$Builder: void resetIfBuilt()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Set) $r10;

        r15 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r13 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (java.lang.Integer) $r13;

        i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        staticinvoke <androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i0, 1, 6, "permission");

        goto label2;

     label3:
        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        r16 = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);

        virtualinvoke r16.<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>("allRequiredPermission", $r12);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

        goto label1;

     label4:
        $r9 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPermissions>;

        virtualinvoke $r9.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>(r1, r3);

        return r0;
    }

    public androidx.appsearch.app.GetSchemaResponse build()
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;
        android.os.Bundle r1, $r2, $r7, $r8;
        int $i0;
        java.util.ArrayList $r3, $r4, $r6;
        androidx.appsearch.app.GetSchemaResponse $r5;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $i0 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: int mVersion>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("version", $i0);

        $r3 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemaBundles>;

        virtualinvoke r1.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>("schemas", $r3);

        $r4 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem>;

        if $r4 == null goto label1;

        $r6 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem>;

        virtualinvoke r1.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("schemasNotDisplayedBySystem", $r6);

        $r7 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPackages>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("schemasVisibleToPackages", $r7);

        $r8 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPermissions>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("schemasVisibleToPermissions", $r8);

     label1:
        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: boolean mBuilt> = 1;

        $r5 = new androidx.appsearch.app.GetSchemaResponse;

        specialinvoke $r5.<androidx.appsearch.app.GetSchemaResponse: void <init>(android.os.Bundle)>(r1);

        return $r5;
    }

    private void resetIfBuilt()
    {
        androidx.appsearch.app.GetSchemaResponse$Builder r0;
        android.os.Bundle r1, r2, $r8, $r9, $r10, $r11;
        boolean $z0;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r7;

        r0 := @this: androidx.appsearch.app.GetSchemaResponse$Builder;

        $z0 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: boolean mBuilt>;

        if $z0 == 0 goto label2;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemaBundles>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemaBundles> = $r3;

        $r5 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem>;

        if $r5 == null goto label1;

        $r6 = new java.util.ArrayList;

        $r7 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: java.util.ArrayList mSchemasNotDisplayedBySystem> = $r6;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r1 = $r8;

        $r9 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPackages>;

        virtualinvoke r1.<android.os.Bundle: void putAll(android.os.Bundle)>($r9);

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPackages> = r1;

        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>()>();

        r2 = $r10;

        $r11 = r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPermissions>;

        virtualinvoke r2.<android.os.Bundle: void putAll(android.os.Bundle)>($r11);

        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: android.os.Bundle mSchemasVisibleToPermissions> = r2;

     label1:
        r0.<androidx.appsearch.app.GetSchemaResponse$Builder: boolean mBuilt> = 0;

     label2:
        return;
    }

