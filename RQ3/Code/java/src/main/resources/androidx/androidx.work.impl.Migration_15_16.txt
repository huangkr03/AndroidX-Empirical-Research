androidx.work.impl.Migration_15_16
<androidx.work.impl.Migration_15_16: androidx.work.impl.Migration_15_16 INSTANCE>
    private void <init>()
    {
        androidx.work.impl.Migration_15_16 r0;

        r0 := @this: androidx.work.impl.Migration_15_16;

        specialinvoke r0.<androidx.room.migration.Migration: void <init>(int,int)>(15, 16);

        return;
    }

    public void migrate(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.work.impl.Migration_15_16 r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;

        r0 := @this: androidx.work.impl.Migration_15_16;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "db");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM SystemIdInfo WHERE work_spec_id IN (SELECT work_spec_id FROM SystemIdInfo LEFT JOIN WorkSpec ON work_spec_id = id WHERE WorkSpec.id IS NULL)");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE `WorkSpec` ADD COLUMN `generation` INTEGER NOT NULL DEFAULT 0");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS `_new_SystemIdInfo` (\n            `work_spec_id` TEXT NOT NULL, \n            `generation` INTEGER NOT NULL DEFAULT 0, \n            `system_id` INTEGER NOT NULL, \n            PRIMARY KEY(`work_spec_id`, `generation`), \n            FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) \n                ON UPDATE CASCADE ON DELETE CASCADE )");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("INSERT INTO `_new_SystemIdInfo` (`work_spec_id`,`system_id`) SELECT `work_spec_id`,`system_id` FROM `SystemIdInfo`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE `SystemIdInfo`");

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE `_new_SystemIdInfo` RENAME TO `SystemIdInfo`");

        return;
    }

    static void <clinit>()
    {
        androidx.work.impl.Migration_15_16 $r0;

        $r0 = new androidx.work.impl.Migration_15_16;

        specialinvoke $r0.<androidx.work.impl.Migration_15_16: void <init>()>();

        <androidx.work.impl.Migration_15_16: androidx.work.impl.Migration_15_16 INSTANCE> = $r0;

        return;
    }

