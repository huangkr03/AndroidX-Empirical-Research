androidx.work.impl.model.WorkNameDao_Impl
<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>
<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkName>
    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkNameDao_Impl r0;
        androidx.room.RoomDatabase r1;
        androidx.work.impl.model.WorkNameDao_Impl$1 $r2;

        r0 := @this: androidx.work.impl.model.WorkNameDao_Impl;

        r1 := @parameter0: androidx.room.RoomDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db> = r1;

        $r2 = new androidx.work.impl.model.WorkNameDao_Impl$1;

        specialinvoke $r2.<androidx.work.impl.model.WorkNameDao_Impl$1: void <init>(androidx.work.impl.model.WorkNameDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkName> = $r2;

        return;
    }

    public void insert(androidx.work.impl.model.WorkName)
    {
        androidx.work.impl.model.WorkNameDao_Impl r0;
        androidx.work.impl.model.WorkName r1;
        java.lang.Throwable r2, $r8;
        androidx.room.RoomDatabase $r3, $r4, $r6, $r7, $r9;
        androidx.room.EntityInsertionAdapter $r5;

        r0 := @this: androidx.work.impl.model.WorkNameDao_Impl;

        r1 := @parameter0: androidx.work.impl.model.WorkName;

        $r3 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r4 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void beginTransaction()>();

     label1:
        $r5 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkName>;

        virtualinvoke $r5.<androidx.room.EntityInsertionAdapter: void insert(java.lang.Object)>(r1);

        $r6 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label2:
        $r7 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void endTransaction()>();

        goto label4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r9.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List getWorkSpecIdsWithName(java.lang.String)
    {
        androidx.work.impl.model.WorkNameDao_Impl r0;
        java.lang.String r1, r2, r11;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        android.database.Cursor r4;
        java.util.ArrayList r5, $r9, r12;
        java.lang.Throwable r6, $r10;
        androidx.room.RoomDatabase $r7, $r8;
        int $i1;
        boolean $z0, $z2;

        r0 := @this: androidx.work.impl.model.WorkNameDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT work_spec_id FROM workname WHERE name=?";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT work_spec_id FROM workname WHERE name=?", 1);

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label02;

     label01:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label02:
        $r7 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r8 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r8, r3, 0, null);

     label03:
        $r9 = new java.util.ArrayList;

        $i1 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        r5 = $r9;

     label04:
        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label07;

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(0);

        if $z0 == 0 goto label05;

        r11 = null;

        goto label06;

     label05:
        r11 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

     label06:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r11);

        goto label04;

     label07:
        r12 = r5;

     label08:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        return r12;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

     label10:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r6;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.List getNamesForWorkSpecId(java.lang.String)
    {
        androidx.work.impl.model.WorkNameDao_Impl r0;
        java.lang.String r1, r2, r11;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        android.database.Cursor r4;
        java.util.ArrayList r5, $r9, r12;
        java.lang.Throwable r6, $r10;
        androidx.room.RoomDatabase $r7, $r8;
        int $i1;
        boolean $z0, $z2;

        r0 := @this: androidx.work.impl.model.WorkNameDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT name FROM workname WHERE work_spec_id=?";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT name FROM workname WHERE work_spec_id=?", 1);

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label02;

     label01:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label02:
        $r7 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r8 = r0.<androidx.work.impl.model.WorkNameDao_Impl: androidx.room.RoomDatabase __db>;

        r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r8, r3, 0, null);

     label03:
        $r9 = new java.util.ArrayList;

        $i1 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        r5 = $r9;

     label04:
        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label07;

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(0);

        if $z0 == 0 goto label05;

        r11 = null;

        goto label06;

     label05:
        r11 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

     label06:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r11);

        goto label04;

     label07:
        r12 = r5;

     label08:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        return r12;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

     label10:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r6;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static java.util.List getRequiredConverters()
    {
        java.util.List $r0;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

androidx.work.impl.model.WorkNameDao_Impl$1
<androidx.work.impl.model.WorkNameDao_Impl$1: androidx.work.impl.model.WorkNameDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkNameDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkNameDao_Impl$1 r0;
        androidx.work.impl.model.WorkNameDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkNameDao_Impl$1;

        r1 := @parameter0: androidx.work.impl.model.WorkNameDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkNameDao_Impl$1: androidx.work.impl.model.WorkNameDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.EntityInsertionAdapter: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkNameDao_Impl$1 r0;

        r0 := @this: androidx.work.impl.model.WorkNameDao_Impl$1;

        return "INSERT OR IGNORE INTO `WorkName` (`name`,`work_spec_id`) VALUES (?,?)";
    }

    public void bind(androidx.sqlite.db.SupportSQLiteStatement, androidx.work.impl.model.WorkName)
    {
        androidx.work.impl.model.WorkNameDao_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        androidx.work.impl.model.WorkName r2;
        java.lang.String $r3, $r4, $r5, $r6;

        r0 := @this: androidx.work.impl.model.WorkNameDao_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteStatement;

        r2 := @parameter1: androidx.work.impl.model.WorkName;

        $r3 = virtualinvoke r2.<androidx.work.impl.model.WorkName: java.lang.String getName()>();

        if $r3 != null goto label1;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(1);

        goto label2;

     label1:
        $r4 = virtualinvoke r2.<androidx.work.impl.model.WorkName: java.lang.String getName()>();

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(1, $r4);

     label2:
        $r5 = virtualinvoke r2.<androidx.work.impl.model.WorkName: java.lang.String getWorkSpecId()>();

        if $r5 != null goto label3;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(2);

        goto label4;

     label3:
        $r6 = virtualinvoke r2.<androidx.work.impl.model.WorkName: java.lang.String getWorkSpecId()>();

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(2, $r6);

     label4:
        return;
    }

    public volatile void bind(androidx.sqlite.db.SupportSQLiteStatement, java.lang.Object)
    {
        androidx.work.impl.model.WorkNameDao_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        java.lang.Object r2;
        androidx.work.impl.model.WorkName $r3;

        r0 := @this: androidx.work.impl.model.WorkNameDao_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteStatement;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.work.impl.model.WorkName) r2;

        virtualinvoke r0.<androidx.work.impl.model.WorkNameDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkName)>(r1, $r3);

        return;
    }

