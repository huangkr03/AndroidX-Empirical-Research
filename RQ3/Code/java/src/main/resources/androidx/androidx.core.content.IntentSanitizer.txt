androidx.core.content.IntentSanitizer
<androidx.core.content.IntentSanitizer: java.lang.String TAG>
<androidx.core.content.IntentSanitizer: int mAllowedFlags>
<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedActions>
<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedData>
<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedTypes>
<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedCategories>
<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedPackages>
<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedComponents>
<androidx.core.content.IntentSanitizer: boolean mAllowAnyComponent>
<androidx.core.content.IntentSanitizer: java.util.Map mAllowedExtras>
<androidx.core.content.IntentSanitizer: boolean mAllowClipDataText>
<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedClipDataUri>
<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedClipData>
<androidx.core.content.IntentSanitizer: boolean mAllowIdentifier>
<androidx.core.content.IntentSanitizer: boolean mAllowSelector>
<androidx.core.content.IntentSanitizer: boolean mAllowSourceBounds>
    private void <init>()
    {
        androidx.core.content.IntentSanitizer r0;

        r0 := @this: androidx.core.content.IntentSanitizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.content.Intent sanitizeByFiltering(android.content.Intent)
    {
        androidx.core.content.IntentSanitizer r0;
        android.content.Intent r1, $r3;
        androidx.core.util.Consumer $r2;

        r0 := @this: androidx.core.content.IntentSanitizer;

        r1 := @parameter0: android.content.Intent;

        $r2 = dynamicinvoke "accept" <androidx.core.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer: void lambda$sanitizeByFiltering$0(java.lang.String)>, methodtype: void __METHODTYPE__(java.lang.String));

        $r3 = virtualinvoke r0.<androidx.core.content.IntentSanitizer: android.content.Intent sanitize(android.content.Intent,androidx.core.util.Consumer)>(r1, $r2);

        return $r3;
    }

    public android.content.Intent sanitizeByThrowing(android.content.Intent)
    {
        androidx.core.content.IntentSanitizer r0;
        android.content.Intent r1, $r3;
        androidx.core.util.Consumer $r2;

        r0 := @this: androidx.core.content.IntentSanitizer;

        r1 := @parameter0: android.content.Intent;

        $r2 = dynamicinvoke "accept" <androidx.core.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer: void lambda$sanitizeByThrowing$1(java.lang.String)>, methodtype: void __METHODTYPE__(java.lang.String));

        $r3 = virtualinvoke r0.<androidx.core.content.IntentSanitizer: android.content.Intent sanitize(android.content.Intent,androidx.core.util.Consumer)>(r1, $r2);

        return $r3;
    }

    public android.content.Intent sanitize(android.content.Intent, androidx.core.util.Consumer)
    {
        androidx.core.content.IntentSanitizer r0;
        android.content.Intent r1, r3, $r13, $r39, $r42, $r45;
        androidx.core.util.Consumer r2;
        android.content.ComponentName r4, $r19;
        java.lang.String r5, r6, r8, r10, $r18, $r25, $r27, $r37, $r44, $r46, $r49, $r51, $r52, $r65, $r71, $r77, $r82, $r87, $r93, r96;
        android.net.Uri r7, $r30;
        java.util.Set r9, $r56;
        java.lang.Object r11, $r57, $r59, $r66;
        androidx.core.util.Predicate r12, $r14, $r54, $r55, $r67, $r73, $r78, $r83, $r89;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.StringBuilder $r15, $r16, $r17, $r23, $r24, $r26, $r33, $r34, $r36, $r40, $r41, $r43, $r47, $r48, $r50, $r60, $r61, $r62, $r63, $r64, $r68, $r69, $r70, $r74, $r75, $r76, $r79, $r80, $r81, $r84, $r85, $r86, $r90, $r91, $r92;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.graphics.Rect $r32, $r35, $r38;
        java.util.Map $r58;
        java.util.Iterator r95, r98;
        android.os.Bundle r97;

        r0 := @this: androidx.core.content.IntentSanitizer;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.core.util.Consumer;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>()>();

        r3 = $r13;

        r4 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = r0.<androidx.core.content.IntentSanitizer: boolean mAllowAnyComponent>;

        if $z0 == 0 goto label01;

        if r4 == null goto label02;

     label01:
        $r14 = r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedComponents>;

        $z1 = interfaceinvoke $r14.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r4);

        if $z1 == 0 goto label03;

     label02:
        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r4);

        goto label04;

     label03:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component is not allowed: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r18);

        $r19 = new android.content.ComponentName;

        specialinvoke $r19.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", "java.lang.Void");

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r19);

     label04:
        r5 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

        if r5 == null goto label05;

        $r89 = r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedPackages>;

        $z13 = interfaceinvoke $r89.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r5);

        if $z13 == 0 goto label06;

     label05:
        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r5);

        goto label07;

     label06:
        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package is not allowed: ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r93);

     label07:
        $i0 = r0.<androidx.core.content.IntentSanitizer: int mAllowedFlags>;

        $i1 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i3 = $i0 | $i1;

        $i2 = r0.<androidx.core.content.IntentSanitizer: int mAllowedFlags>;

        if $i3 != $i2 goto label08;

        $i18 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent setFlags(int)>($i18);

        goto label09;

     label08:
        $i4 = r0.<androidx.core.content.IntentSanitizer: int mAllowedFlags>;

        $i5 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i6 = $i4 & $i5;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setFlags(int)>($i6);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The intent contains flags that are not allowed: 0x");

        $i7 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i8 = r0.<androidx.core.content.IntentSanitizer: int mAllowedFlags>;

        $i9 = $i8 ^ -1;

        $i10 = $i7 & $i9;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r27);

     label09:
        r6 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        if r6 == null goto label10;

        $r83 = r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedActions>;

        $z12 = interfaceinvoke $r83.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r6);

        if $z12 == 0 goto label11;

     label10:
        virtualinvoke r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>(r6);

        goto label12;

     label11:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Action is not allowed: ");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r87);

     label12:
        r7 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        if r7 == null goto label13;

        $r78 = r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedData>;

        $z11 = interfaceinvoke $r78.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r7);

        if $z11 == 0 goto label14;

     label13:
        virtualinvoke r3.<android.content.Intent: android.content.Intent setData(android.net.Uri)>(r7);

        goto label15;

     label14:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data is not allowed: ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r82);

     label15:
        r8 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        if r8 == null goto label16;

        $r73 = r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedTypes>;

        $z10 = interfaceinvoke $r73.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r8);

        if $z10 == 0 goto label17;

     label16:
        $r30 = virtualinvoke r3.<android.content.Intent: android.net.Uri getData()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r30, r8);

        goto label18;

     label17:
        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is not allowed: ");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r77);

     label18:
        r9 = virtualinvoke r1.<android.content.Intent: java.util.Set getCategories()>();

        if r9 == null goto label22;

        r95 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z8 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label22;

        $r66 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        r96 = (java.lang.String) $r66;

        $r67 = r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedCategories>;

        $z9 = interfaceinvoke $r67.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r96);

        if $z9 == 0 goto label20;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(r96);

        goto label21;

     label20:
        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Category is not allowed: ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r96);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r71);

     label21:
        goto label19;

     label22:
        r97 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        if r97 == null goto label28;

        $r56 = virtualinvoke r97.<android.os.Bundle: java.util.Set keySet()>();

        r98 = interfaceinvoke $r56.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z14 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label28;

        $r57 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r57;

        $z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.extra.STREAM");

        if $z5 == 0 goto label24;

        $i16 = r0.<androidx.core.content.IntentSanitizer: int mAllowedFlags>;

        $i17 = $i16 & 1;

        if $i17 != 0 goto label24;

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>("Allowing Extra Stream requires also allowing at least  FLAG_GRANT_READ_URI_PERMISSION Flag.");

        goto label23;

     label24:
        $z6 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("output");

        if $z6 == 0 goto label25;

        $i13 = r0.<androidx.core.content.IntentSanitizer: int mAllowedFlags>;

        $i14 = $i13 ^ -1;

        $i15 = $i14 & 3;

        if $i15 == 0 goto label25;

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>("Allowing Extra Output requires also allowing FLAG_GRANT_READ_URI_PERMISSION and FLAG_GRANT_WRITE_URI_PERMISSION Flags.");

        goto label23;

     label25:
        r11 = virtualinvoke r97.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r10);

        $r58 = r0.<androidx.core.content.IntentSanitizer: java.util.Map mAllowedExtras>;

        $r59 = interfaceinvoke $r58.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r12 = (androidx.core.util.Predicate) $r59;

        if r12 == null goto label26;

        $z7 = interfaceinvoke r12.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r11);

        if $z7 == 0 goto label26;

        specialinvoke r0.<androidx.core.content.IntentSanitizer: void putExtra(android.content.Intent,java.lang.String,java.lang.Object)>(r3, r10, r11);

        goto label27;

     label26:
        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extra is not allowed. Key: ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Value: ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r65);

     label27:
        goto label23;

     label28:
        $i11 = <android.os.Build$VERSION: int SDK_INT>;

        if $i11 < 16 goto label29;

        $r55 = r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedClipData>;

        $z4 = r0.<androidx.core.content.IntentSanitizer: boolean mAllowClipDataText>;

        $r54 = r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedClipDataUri>;

        staticinvoke <androidx.core.content.IntentSanitizer$Api16Impl: void sanitizeClipData(android.content.Intent,android.content.Intent,androidx.core.util.Predicate,boolean,androidx.core.util.Predicate,androidx.core.util.Consumer)>(r1, r3, $r55, $z4, $r54, r2);

     label29:
        $i12 = <android.os.Build$VERSION: int SDK_INT>;

        if $i12 < 29 goto label31;

        $z3 = r0.<androidx.core.content.IntentSanitizer: boolean mAllowIdentifier>;

        if $z3 == 0 goto label30;

        $r52 = staticinvoke <androidx.core.content.IntentSanitizer$Api29Impl: java.lang.String getIdentifier(android.content.Intent)>(r1);

        staticinvoke <androidx.core.content.IntentSanitizer$Api29Impl: android.content.Intent setIdentifier(android.content.Intent,java.lang.String)>(r3, $r52);

        goto label31;

     label30:
        $r46 = staticinvoke <androidx.core.content.IntentSanitizer$Api29Impl: java.lang.String getIdentifier(android.content.Intent)>(r1);

        if $r46 == null goto label31;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Identifier is not allowed: ");

        $r49 = staticinvoke <androidx.core.content.IntentSanitizer$Api29Impl: java.lang.String getIdentifier(android.content.Intent)>(r1);

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r51);

     label31:
        $i19 = <android.os.Build$VERSION: int SDK_INT>;

        if $i19 < 15 goto label33;

        $z2 = r0.<androidx.core.content.IntentSanitizer: boolean mAllowSelector>;

        if $z2 == 0 goto label32;

        $r45 = staticinvoke <androidx.core.content.IntentSanitizer$Api15Impl: android.content.Intent getSelector(android.content.Intent)>(r1);

        staticinvoke <androidx.core.content.IntentSanitizer$Api15Impl: void setSelector(android.content.Intent,android.content.Intent)>(r3, $r45);

        goto label33;

     label32:
        $r39 = staticinvoke <androidx.core.content.IntentSanitizer$Api15Impl: android.content.Intent getSelector(android.content.Intent)>(r1);

        if $r39 == null goto label33;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selector is not allowed: ");

        $r42 = staticinvoke <androidx.core.content.IntentSanitizer$Api15Impl: android.content.Intent getSelector(android.content.Intent)>(r1);

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r44);

     label33:
        $z15 = r0.<androidx.core.content.IntentSanitizer: boolean mAllowSourceBounds>;

        if $z15 == 0 goto label34;

        $r38 = virtualinvoke r1.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        virtualinvoke r3.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>($r38);

        goto label35;

     label34:
        $r32 = virtualinvoke r1.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        if $r32 == null goto label35;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SourceBounds is not allowed: ");

        $r35 = virtualinvoke r1.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r37);

     label35:
        return r3;
    }

    private void putExtra(android.content.Intent, java.lang.String, java.lang.Object)
    {
        androidx.core.content.IntentSanitizer r0;
        android.content.Intent r1;
        java.lang.String r2, $r9;
        java.lang.Object r3;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.Class $r7;
        java.io.Serializable $r10;
        android.os.Parcelable[] $r12;
        android.os.Parcelable $r14;
        android.os.Bundle $r16;

        r0 := @this: androidx.core.content.IntentSanitizer;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        if r3 != null goto label1;

        $r16 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        virtualinvoke $r16.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r2, null);

        goto label5;

     label1:
        $z0 = r3 instanceof android.os.Parcelable;

        if $z0 == 0 goto label2;

        $r14 = (android.os.Parcelable) r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>(r2, $r14);

        goto label5;

     label2:
        $z1 = r3 instanceof android.os.Parcelable[];

        if $z1 == 0 goto label3;

        $r12 = (android.os.Parcelable[]) r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>(r2, $r12);

        goto label5;

     label3:
        $z2 = r3 instanceof java.io.Serializable;

        if $z2 == 0 goto label4;

        $r10 = (java.io.Serializable) r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>(r2, $r10);

        goto label5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type ");

        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label5:
        return;
    }

    private static void lambda$sanitizeByThrowing$1(java.lang.String)
    {
        java.lang.String r0;
        java.lang.SecurityException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>(r0);

        throw $r1;
    }

    private static void lambda$sanitizeByFiltering$0(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    void <init>(androidx.core.content.IntentSanitizer$1)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.content.IntentSanitizer$1 r1;

        r0 := @this: androidx.core.content.IntentSanitizer;

        r1 := @parameter0: androidx.core.content.IntentSanitizer$1;

        specialinvoke r0.<androidx.core.content.IntentSanitizer: void <init>()>();

        return;
    }

    static int access$102(androidx.core.content.IntentSanitizer, int)
    {
        androidx.core.content.IntentSanitizer r0;
        int i0;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        i0 := @parameter1: int;

        r0.<androidx.core.content.IntentSanitizer: int mAllowedFlags> = i0;

        return i0;
    }

    static androidx.core.util.Predicate access$202(androidx.core.content.IntentSanitizer, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.util.Predicate r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: androidx.core.util.Predicate;

        r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedActions> = r1;

        return r1;
    }

    static androidx.core.util.Predicate access$302(androidx.core.content.IntentSanitizer, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.util.Predicate r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: androidx.core.util.Predicate;

        r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedData> = r1;

        return r1;
    }

    static androidx.core.util.Predicate access$402(androidx.core.content.IntentSanitizer, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.util.Predicate r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: androidx.core.util.Predicate;

        r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedTypes> = r1;

        return r1;
    }

    static androidx.core.util.Predicate access$502(androidx.core.content.IntentSanitizer, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.util.Predicate r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: androidx.core.util.Predicate;

        r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedCategories> = r1;

        return r1;
    }

    static androidx.core.util.Predicate access$602(androidx.core.content.IntentSanitizer, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.util.Predicate r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: androidx.core.util.Predicate;

        r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedPackages> = r1;

        return r1;
    }

    static boolean access$702(androidx.core.content.IntentSanitizer, boolean)
    {
        androidx.core.content.IntentSanitizer r0;
        boolean z0;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        z0 := @parameter1: boolean;

        r0.<androidx.core.content.IntentSanitizer: boolean mAllowAnyComponent> = z0;

        return z0;
    }

    static androidx.core.util.Predicate access$802(androidx.core.content.IntentSanitizer, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.util.Predicate r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: androidx.core.util.Predicate;

        r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedComponents> = r1;

        return r1;
    }

    static java.util.Map access$902(androidx.core.content.IntentSanitizer, java.util.Map)
    {
        androidx.core.content.IntentSanitizer r0;
        java.util.Map r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: java.util.Map;

        r0.<androidx.core.content.IntentSanitizer: java.util.Map mAllowedExtras> = r1;

        return r1;
    }

    static boolean access$1002(androidx.core.content.IntentSanitizer, boolean)
    {
        androidx.core.content.IntentSanitizer r0;
        boolean z0;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        z0 := @parameter1: boolean;

        r0.<androidx.core.content.IntentSanitizer: boolean mAllowClipDataText> = z0;

        return z0;
    }

    static androidx.core.util.Predicate access$1102(androidx.core.content.IntentSanitizer, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.util.Predicate r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: androidx.core.util.Predicate;

        r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedClipDataUri> = r1;

        return r1;
    }

    static androidx.core.util.Predicate access$1202(androidx.core.content.IntentSanitizer, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer r0;
        androidx.core.util.Predicate r1;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        r1 := @parameter1: androidx.core.util.Predicate;

        r0.<androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedClipData> = r1;

        return r1;
    }

    static boolean access$1302(androidx.core.content.IntentSanitizer, boolean)
    {
        androidx.core.content.IntentSanitizer r0;
        boolean z0;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        z0 := @parameter1: boolean;

        r0.<androidx.core.content.IntentSanitizer: boolean mAllowIdentifier> = z0;

        return z0;
    }

    static boolean access$1402(androidx.core.content.IntentSanitizer, boolean)
    {
        androidx.core.content.IntentSanitizer r0;
        boolean z0;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        z0 := @parameter1: boolean;

        r0.<androidx.core.content.IntentSanitizer: boolean mAllowSelector> = z0;

        return z0;
    }

    static boolean access$1502(androidx.core.content.IntentSanitizer, boolean)
    {
        androidx.core.content.IntentSanitizer r0;
        boolean z0;

        r0 := @parameter0: androidx.core.content.IntentSanitizer;

        z0 := @parameter1: boolean;

        r0.<androidx.core.content.IntentSanitizer: boolean mAllowSourceBounds> = z0;

        return z0;
    }

androidx.core.content.IntentSanitizer$1
androidx.core.content.IntentSanitizer$Api15Impl
    private void <init>()
    {
        androidx.core.content.IntentSanitizer$Api15Impl r0;

        r0 := @this: androidx.core.content.IntentSanitizer$Api15Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void setSelector(android.content.Intent, android.content.Intent)
    {
        android.content.Intent r0, r1;

        r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.content.Intent;

        virtualinvoke r0.<android.content.Intent: void setSelector(android.content.Intent)>(r1);

        return;
    }

    static android.content.Intent getSelector(android.content.Intent)
    {
        android.content.Intent r0, $r1;

        r0 := @parameter0: android.content.Intent;

        $r1 = virtualinvoke r0.<android.content.Intent: android.content.Intent getSelector()>();

        return $r1;
    }

androidx.core.content.IntentSanitizer$Api16Impl$Api31Impl
    private void <init>()
    {
        androidx.core.content.IntentSanitizer$Api16Impl$Api31Impl r0;

        r0 := @this: androidx.core.content.IntentSanitizer$Api16Impl$Api31Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void checkOtherMembers(int, android.content.ClipData$Item, androidx.core.util.Consumer)
    {
        int i0;
        android.content.ClipData$Item r0;
        androidx.core.util.Consumer r1;
        java.lang.String $r2, $r10;
        android.content.Intent $r3;
        android.view.textclassifier.TextLinks $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.ClipData$Item;

        r1 := @parameter2: androidx.core.util.Consumer;

        $r2 = virtualinvoke r0.<android.content.ClipData$Item: java.lang.String getHtmlText()>();

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if $r3 != null goto label1;

        $r4 = virtualinvoke r0.<android.content.ClipData$Item: android.view.textclassifier.TextLinks getTextLinks()>();

        if $r4 == null goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClipData item at position ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contains htmlText, textLinks or intent: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r10);

     label2:
        return;
    }

androidx.core.content.IntentSanitizer$Api16Impl
    private void <init>()
    {
        androidx.core.content.IntentSanitizer$Api16Impl r0;

        r0 := @this: androidx.core.content.IntentSanitizer$Api16Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void sanitizeClipData(android.content.Intent, android.content.Intent, androidx.core.util.Predicate, boolean, androidx.core.util.Predicate, androidx.core.util.Consumer)
    {
        android.content.Intent r0, r1;
        androidx.core.util.Predicate r2, r3;
        boolean z0, $z1, $z2;
        androidx.core.util.Consumer r4;
        android.content.ClipData r5, $r10, r36;
        android.content.ClipData$Item r6, $r9, $r12;
        int $i0, i1, $i2;
        java.lang.CharSequence $r7, $r33, r37;
        android.net.Uri $r8, $r13, $r18, $r21, $r26, r38;
        android.content.ClipDescription $r11;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19, $r22, $r23, $r24, $r25, $r27, $r29, $r30, $r31, $r32, $r34;
        java.lang.String $r20, $r28, $r35;

        r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: androidx.core.util.Predicate;

        z0 := @parameter3: boolean;

        r3 := @parameter4: androidx.core.util.Predicate;

        r4 := @parameter5: androidx.core.util.Consumer;

        r5 = virtualinvoke r0.<android.content.Intent: android.content.ClipData getClipData()>();

        if r5 != null goto label01;

        return;

     label01:
        r36 = null;

        if r2 == null goto label02;

        $z2 = interfaceinvoke r2.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r5);

        if $z2 == 0 goto label02;

        virtualinvoke r1.<android.content.Intent: void setClipData(android.content.ClipData)>(r5);

        goto label16;

     label02:
        i1 = 0;

     label03:
        $i2 = virtualinvoke r5.<android.content.ClipData: int getItemCount()>();

        if i1 >= $i2 goto label15;

        r6 = virtualinvoke r5.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 31 goto label04;

        staticinvoke <androidx.core.content.IntentSanitizer$Api16Impl$Api31Impl: void checkOtherMembers(int,android.content.ClipData$Item,androidx.core.util.Consumer)>(i1, r6, r4);

        goto label05;

     label04:
        staticinvoke <androidx.core.content.IntentSanitizer$Api16Impl: void checkOtherMembers(int,android.content.ClipData$Item,androidx.core.util.Consumer)>(i1, r6, r4);

     label05:
        r37 = null;

        if z0 == 0 goto label06;

        r37 = virtualinvoke r6.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        goto label07;

     label06:
        $r7 = virtualinvoke r6.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        if $r7 == null goto label07;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item text cannot contain value. Item position: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Text: ");

        $r33 = virtualinvoke r6.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r35);

     label07:
        r38 = null;

        if r3 != null goto label08;

        $r21 = virtualinvoke r6.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r21 == null goto label11;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item URI is not allowed. Item position: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". URI: ");

        $r26 = virtualinvoke r6.<android.content.ClipData$Item: android.net.Uri getUri()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r28);

        goto label11;

     label08:
        $r8 = virtualinvoke r6.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r8 == null goto label09;

        $r13 = virtualinvoke r6.<android.content.ClipData$Item: android.net.Uri getUri()>();

        $z1 = interfaceinvoke r3.<androidx.core.util.Predicate: boolean test(java.lang.Object)>($r13);

        if $z1 == 0 goto label10;

     label09:
        r38 = virtualinvoke r6.<android.content.ClipData$Item: android.net.Uri getUri()>();

        goto label11;

     label10:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item URI is not allowed. Item position: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". URI: ");

        $r18 = virtualinvoke r6.<android.content.ClipData$Item: android.net.Uri getUri()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r20);

     label11:
        if r37 != null goto label12;

        if r38 == null goto label14;

     label12:
        if r36 != null goto label13;

        $r10 = new android.content.ClipData;

        $r11 = virtualinvoke r5.<android.content.ClipData: android.content.ClipDescription getDescription()>();

        $r12 = new android.content.ClipData$Item;

        specialinvoke $r12.<android.content.ClipData$Item: void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri)>(r37, null, r38);

        specialinvoke $r10.<android.content.ClipData: void <init>(android.content.ClipDescription,android.content.ClipData$Item)>($r11, $r12);

        r36 = $r10;

        goto label14;

     label13:
        $r9 = new android.content.ClipData$Item;

        specialinvoke $r9.<android.content.ClipData$Item: void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri)>(r37, null, r38);

        virtualinvoke r36.<android.content.ClipData: void addItem(android.content.ClipData$Item)>($r9);

     label14:
        i1 = i1 + 1;

        goto label03;

     label15:
        if r36 == null goto label16;

        virtualinvoke r1.<android.content.Intent: void setClipData(android.content.ClipData)>(r36);

     label16:
        return;
    }

    private static void checkOtherMembers(int, android.content.ClipData$Item, androidx.core.util.Consumer)
    {
        int i0;
        android.content.ClipData$Item r0;
        androidx.core.util.Consumer r1;
        java.lang.String $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        android.content.Intent $r9;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.ClipData$Item;

        r1 := @parameter2: androidx.core.util.Consumer;

        $r2 = virtualinvoke r0.<android.content.ClipData$Item: java.lang.String getHtmlText()>();

        if $r2 != null goto label1;

        $r9 = virtualinvoke r0.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if $r9 == null goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClipData item at position ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contains htmlText, textLinks or intent: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r8);

     label2:
        return;
    }

androidx.core.content.IntentSanitizer$Api29Impl
    private void <init>()
    {
        androidx.core.content.IntentSanitizer$Api29Impl r0;

        r0 := @this: androidx.core.content.IntentSanitizer$Api29Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.content.Intent setIdentifier(android.content.Intent, java.lang.String)
    {
        android.content.Intent r0, $r2;
        java.lang.String r1;

        r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.Intent: android.content.Intent setIdentifier(java.lang.String)>(r1);

        return $r2;
    }

    static java.lang.String getIdentifier(android.content.Intent)
    {
        android.content.Intent r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.Intent;

        $r1 = virtualinvoke r0.<android.content.Intent: java.lang.String getIdentifier()>();

        return $r1;
    }

androidx.core.content.IntentSanitizer$Builder
<androidx.core.content.IntentSanitizer$Builder: int HISTORY_STACK_FLAGS>
<androidx.core.content.IntentSanitizer$Builder: int RECEIVER_FLAGS>
<androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags>
<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedActions>
<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedData>
<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedTypes>
<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedCategories>
<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedPackages>
<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedComponents>
<androidx.core.content.IntentSanitizer$Builder: boolean mAllowAnyComponent>
<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSomeComponents>
<androidx.core.content.IntentSanitizer$Builder: java.util.Map mAllowedExtras>
<androidx.core.content.IntentSanitizer$Builder: boolean mAllowClipDataText>
<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipDataUri>
<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipData>
<androidx.core.content.IntentSanitizer$Builder: boolean mAllowIdentifier>
<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSelector>
<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSourceBounds>
    public void <init>()
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9;
        java.util.HashMap $r7;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$0(java.lang.String)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedActions> = $r1;

        $r2 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$1(android.net.Uri)>, methodtype: boolean __METHODTYPE__(android.net.Uri));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedData> = $r2;

        $r3 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$2(java.lang.String)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedTypes> = $r3;

        $r4 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$3(java.lang.String)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedCategories> = $r4;

        $r5 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$4(java.lang.String)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedPackages> = $r5;

        $r6 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$5(android.content.ComponentName)>, methodtype: boolean __METHODTYPE__(android.content.ComponentName));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedComponents> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<androidx.core.content.IntentSanitizer$Builder: java.util.Map mAllowedExtras> = $r7;

        r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowClipDataText> = 0;

        $r8 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$6(android.net.Uri)>, methodtype: boolean __METHODTYPE__(android.net.Uri));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipDataUri> = $r8;

        $r9 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$7(android.content.ClipData)>, methodtype: boolean __METHODTYPE__(android.content.ClipData));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipData> = $r9;

        return;
    }

    public androidx.core.content.IntentSanitizer$Builder allowFlags(int)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        int i0, $i1, $i2;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags>;

        $i2 = $i1 | i0;

        r0.<androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags> = $i2;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowHistoryStackFlags()
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        int $i0, $i1;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        $i0 = r0.<androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags>;

        $i1 = $i0 | 2112614400;

        r0.<androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags> = $i1;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowReceiverFlags()
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        int $i0, $i1;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        $i0 = r0.<androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags>;

        $i1 = $i0 | 2015363072;

        r0.<androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags> = $i1;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowAction(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        java.lang.String r1;
        androidx.core.util.Predicate $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <java.lang.String: boolean equals(java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowAction(androidx.core.util.Predicate)>($r4);

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowAction(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1, $r3, $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedActions>;

        $r4 = interfaceinvoke $r3.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedActions> = $r4;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowDataWithAuthority(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        java.lang.String r1;
        androidx.core.util.Predicate $r3;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowDataWithAuthority$8(java.lang.String,android.net.Uri)>, methodtype: boolean __METHODTYPE__(android.net.Uri));

        virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowData(androidx.core.util.Predicate)>($r3);

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowData(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1, $r3, $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedData>;

        $r4 = interfaceinvoke $r3.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedData> = $r4;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowType(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0, $r5;
        java.lang.String r1;
        androidx.core.util.Predicate $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <java.lang.String: boolean equals(java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        $r5 = virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowType(androidx.core.util.Predicate)>($r4);

        return $r5;
    }

    public androidx.core.content.IntentSanitizer$Builder allowType(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1, $r3, $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedTypes>;

        $r4 = interfaceinvoke $r3.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedTypes> = $r4;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowCategory(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0, $r5;
        java.lang.String r1;
        androidx.core.util.Predicate $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <java.lang.String: boolean equals(java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        $r5 = virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowCategory(androidx.core.util.Predicate)>($r4);

        return $r5;
    }

    public androidx.core.content.IntentSanitizer$Builder allowCategory(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1, $r3, $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedCategories>;

        $r4 = interfaceinvoke $r3.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedCategories> = $r4;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowPackage(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0, $r5;
        java.lang.String r1;
        androidx.core.util.Predicate $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <java.lang.String: boolean equals(java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        $r5 = virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowPackage(androidx.core.util.Predicate)>($r4);

        return $r5;
    }

    public androidx.core.content.IntentSanitizer$Builder allowPackage(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1, $r3, $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedPackages>;

        $r4 = interfaceinvoke $r3.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedPackages> = $r4;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowComponent(android.content.ComponentName)
    {
        androidx.core.content.IntentSanitizer$Builder r0, $r5;
        android.content.ComponentName r1;
        androidx.core.util.Predicate $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: android.content.ComponentName;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = dynamicinvoke "test" <androidx.core.util.Predicate (android.content.ComponentName)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <android.content.ComponentName: boolean equals(java.lang.Object)>, methodtype: boolean __METHODTYPE__(android.content.ComponentName));

        $r5 = virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowComponent(androidx.core.util.Predicate)>($r4);

        return $r5;
    }

    public androidx.core.content.IntentSanitizer$Builder allowComponent(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1, $r3, $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSomeComponents> = 1;

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedComponents>;

        $r4 = interfaceinvoke $r3.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedComponents> = $r4;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowComponentWithPackage(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0, $r4;
        java.lang.String r1;
        androidx.core.util.Predicate $r3;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowComponentWithPackage$9(java.lang.String,android.content.ComponentName)>, methodtype: boolean __METHODTYPE__(android.content.ComponentName));

        $r4 = virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowComponent(androidx.core.util.Predicate)>($r3);

        return $r4;
    }

    public androidx.core.content.IntentSanitizer$Builder allowAnyComponent()
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate $r1;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowAnyComponent> = 1;

        $r1 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowAnyComponent$10(android.content.ComponentName)>, methodtype: boolean __METHODTYPE__(android.content.ComponentName));

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedComponents> = $r1;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowClipDataText()
    {
        androidx.core.content.IntentSanitizer$Builder r0;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowClipDataText> = 1;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowClipDataUriWithAuthority(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0, $r4;
        java.lang.String r1;
        androidx.core.util.Predicate $r3;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowClipDataUriWithAuthority$11(java.lang.String,android.net.Uri)>, methodtype: boolean __METHODTYPE__(android.net.Uri));

        $r4 = virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowClipDataUri(androidx.core.util.Predicate)>($r3);

        return $r4;
    }

    public androidx.core.content.IntentSanitizer$Builder allowClipDataUri(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1, $r3, $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipDataUri>;

        $r4 = interfaceinvoke $r3.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipDataUri> = $r4;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowClipData(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1, $r3, $r4;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipData>;

        $r4 = interfaceinvoke $r3.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r1);

        r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipData> = $r4;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String, java.lang.Class)
    {
        androidx.core.content.IntentSanitizer$Builder r0, $r4;
        java.lang.String r1;
        java.lang.Class r2;
        androidx.core.util.Predicate $r3;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtra$12(java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.Object));

        $r4 = virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,java.lang.Class,androidx.core.util.Predicate)>(r1, r2, $r3);

        return $r4;
    }

    public androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String, java.lang.Class, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0, $r8;
        java.lang.String r1;
        java.lang.Class r2;
        androidx.core.util.Predicate r3, $r7;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r7 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.Class,androidx.core.util.Predicate)>(r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtra$13(java.lang.Class,androidx.core.util.Predicate,java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.Object));

        $r8 = virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,androidx.core.util.Predicate)>(r1, $r7);

        return $r8;
    }

    public androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String, androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        java.lang.String r1;
        androidx.core.util.Predicate r2, r9, r10;
        java.util.Map $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.core.util.Predicate;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = r0.<androidx.core.content.IntentSanitizer$Builder: java.util.Map mAllowedExtras>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (androidx.core.util.Predicate) $r6;

        if r9 != null goto label1;

        r9 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtra$14(java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.Object));

     label1:
        r10 = interfaceinvoke r9.<androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)>(r2);

        $r7 = r0.<androidx.core.content.IntentSanitizer$Builder: java.util.Map mAllowedExtras>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowExtraStreamUriWithAuthority(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        java.lang.String r1;
        androidx.core.util.Predicate $r3;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtraStreamUriWithAuthority$15(java.lang.String,android.net.Uri)>, methodtype: boolean __METHODTYPE__(android.net.Uri));

        virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,java.lang.Class,androidx.core.util.Predicate)>("android.intent.extra.STREAM", class "Landroid/net/Uri;", $r3);

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowExtraStream(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,java.lang.Class,androidx.core.util.Predicate)>("android.intent.extra.STREAM", class "Landroid/net/Uri;", r1);

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowExtraOutput(java.lang.String)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        java.lang.String r1;
        androidx.core.util.Predicate $r2;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.String)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtraOutput$16(java.lang.String,android.net.Uri)>, methodtype: boolean __METHODTYPE__(android.net.Uri));

        virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,java.lang.Class,androidx.core.util.Predicate)>("output", class "Landroid/net/Uri;", $r2);

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowExtraOutput(androidx.core.util.Predicate)
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.util.Predicate r1;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r1 := @parameter0: androidx.core.util.Predicate;

        virtualinvoke r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,java.lang.Class,androidx.core.util.Predicate)>("output", class "Landroid/net/Uri;", r1);

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowIdentifier()
    {
        androidx.core.content.IntentSanitizer$Builder r0;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowIdentifier> = 1;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowSelector()
    {
        androidx.core.content.IntentSanitizer$Builder r0;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSelector> = 1;

        return r0;
    }

    public androidx.core.content.IntentSanitizer$Builder allowSourceBounds()
    {
        androidx.core.content.IntentSanitizer$Builder r0;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSourceBounds> = 1;

        return r0;
    }

    public androidx.core.content.IntentSanitizer build()
    {
        androidx.core.content.IntentSanitizer$Builder r0;
        androidx.core.content.IntentSanitizer r1, $r2;
        boolean $z0, $z1, $z2, $z4, $z6, $z8, $z10, $z12, $z13;
        int $i0;
        androidx.core.util.Predicate $r3, $r5, $r7, $r9, $r11, $r13, $r17, $r19;
        java.util.Map $r15;
        java.lang.SecurityException $r21;

        r0 := @this: androidx.core.content.IntentSanitizer$Builder;

        $z0 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowAnyComponent>;

        if $z0 == 0 goto label1;

        $z13 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSomeComponents>;

        if $z13 != 0 goto label2;

     label1:
        $z1 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowAnyComponent>;

        if $z1 != 0 goto label3;

        $z12 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSomeComponents>;

        if $z12 != 0 goto label3;

     label2:
        $r21 = new java.lang.SecurityException;

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.String)>("You must call either allowAnyComponent or one or more of the allowComponent methods; but not both.");

        throw $r21;

     label3:
        $r2 = new androidx.core.content.IntentSanitizer;

        specialinvoke $r2.<androidx.core.content.IntentSanitizer: void <init>(androidx.core.content.IntentSanitizer$1)>(null);

        r1 = $r2;

        $i0 = r0.<androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags>;

        staticinvoke <androidx.core.content.IntentSanitizer: int access$102(androidx.core.content.IntentSanitizer,int)>(r1, $i0);

        $r3 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedActions>;

        staticinvoke <androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$202(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)>(r1, $r3);

        $r5 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedData>;

        staticinvoke <androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$302(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)>(r1, $r5);

        $r7 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedTypes>;

        staticinvoke <androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$402(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)>(r1, $r7);

        $r9 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedCategories>;

        staticinvoke <androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$502(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)>(r1, $r9);

        $r11 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedPackages>;

        staticinvoke <androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$602(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)>(r1, $r11);

        $z2 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowAnyComponent>;

        staticinvoke <androidx.core.content.IntentSanitizer: boolean access$702(androidx.core.content.IntentSanitizer,boolean)>(r1, $z2);

        $r13 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedComponents>;

        staticinvoke <androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$802(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)>(r1, $r13);

        $r15 = r0.<androidx.core.content.IntentSanitizer$Builder: java.util.Map mAllowedExtras>;

        staticinvoke <androidx.core.content.IntentSanitizer: java.util.Map access$902(androidx.core.content.IntentSanitizer,java.util.Map)>(r1, $r15);

        $z4 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowClipDataText>;

        staticinvoke <androidx.core.content.IntentSanitizer: boolean access$1002(androidx.core.content.IntentSanitizer,boolean)>(r1, $z4);

        $r17 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipDataUri>;

        staticinvoke <androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$1102(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)>(r1, $r17);

        $r19 = r0.<androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipData>;

        staticinvoke <androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$1202(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)>(r1, $r19);

        $z6 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowIdentifier>;

        staticinvoke <androidx.core.content.IntentSanitizer: boolean access$1302(androidx.core.content.IntentSanitizer,boolean)>(r1, $z6);

        $z8 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSelector>;

        staticinvoke <androidx.core.content.IntentSanitizer: boolean access$1402(androidx.core.content.IntentSanitizer,boolean)>(r1, $z8);

        $z10 = r0.<androidx.core.content.IntentSanitizer$Builder: boolean mAllowSourceBounds>;

        staticinvoke <androidx.core.content.IntentSanitizer: boolean access$1502(androidx.core.content.IntentSanitizer,boolean)>(r1, $z10);

        return r1;
    }

    private static boolean lambda$allowExtraOutput$16(java.lang.String, android.net.Uri)
    {
        java.lang.String r0, $r2;
        android.net.Uri r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private static boolean lambda$allowExtraStreamUriWithAuthority$15(java.lang.String, android.net.Uri)
    {
        java.lang.String r0, $r2;
        android.net.Uri r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private static boolean lambda$allowExtra$14(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        return 0;
    }

    private static boolean lambda$allowExtra$13(java.lang.Class, androidx.core.util.Predicate, java.lang.Object)
    {
        java.lang.Class r0;
        androidx.core.util.Predicate r1;
        java.lang.Object r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: androidx.core.util.Predicate;

        r2 := @parameter2: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r2);

        $z1 = interfaceinvoke r1.<androidx.core.util.Predicate: boolean test(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean lambda$allowExtra$12(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        return 1;
    }

    private static boolean lambda$allowClipDataUriWithAuthority$11(java.lang.String, android.net.Uri)
    {
        java.lang.String r0, $r2;
        android.net.Uri r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private static boolean lambda$allowAnyComponent$10(android.content.ComponentName)
    {
        android.content.ComponentName r0;

        r0 := @parameter0: android.content.ComponentName;

        return 1;
    }

    private static boolean lambda$allowComponentWithPackage$9(java.lang.String, android.content.ComponentName)
    {
        java.lang.String r0, $r2;
        android.content.ComponentName r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.ComponentName;

        $r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private static boolean lambda$allowDataWithAuthority$8(java.lang.String, android.net.Uri)
    {
        java.lang.String r0, $r2;
        android.net.Uri r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private static boolean lambda$new$7(android.content.ClipData)
    {
        android.content.ClipData r0;

        r0 := @parameter0: android.content.ClipData;

        return 0;
    }

    private static boolean lambda$new$6(android.net.Uri)
    {
        android.net.Uri r0;

        r0 := @parameter0: android.net.Uri;

        return 0;
    }

    private static boolean lambda$new$5(android.content.ComponentName)
    {
        android.content.ComponentName r0;

        r0 := @parameter0: android.content.ComponentName;

        return 0;
    }

    private static boolean lambda$new$4(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return 0;
    }

    private static boolean lambda$new$3(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return 0;
    }

    private static boolean lambda$new$2(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return 0;
    }

    private static boolean lambda$new$1(android.net.Uri)
    {
        android.net.Uri r0;

        r0 := @parameter0: android.net.Uri;

        return 0;
    }

    private static boolean lambda$new$0(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return 0;
    }

