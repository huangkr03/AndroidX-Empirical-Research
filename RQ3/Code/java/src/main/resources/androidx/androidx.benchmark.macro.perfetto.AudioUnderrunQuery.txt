androidx.benchmark.macro.perfetto.AudioUnderrunQuery
<androidx.benchmark.macro.perfetto.AudioUnderrunQuery: androidx.benchmark.macro.perfetto.AudioUnderrunQuery INSTANCE>
<androidx.benchmark.macro.perfetto.AudioUnderrunQuery: int VAL_NAME>
<androidx.benchmark.macro.perfetto.AudioUnderrunQuery: int VAL_VALUE>
<androidx.benchmark.macro.perfetto.AudioUnderrunQuery: int VAL_TS>
<androidx.benchmark.macro.perfetto.AudioUnderrunQuery: int VAL_MAX>
    private void <init>()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery r0;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final java.lang.String getFullQuery()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery r0;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery;

        return "SELECT track.name, counter.value, counter.ts\nFROM track\nJOIN counter ON track.id = counter.track_id\nWHERE track.type = \'process_counter_track\' AND track.name LIKE \'nRdy%\'";
    }

    public final androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics getSubMetrics(java.lang.String)
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery r0;
        java.lang.String r1, r2, r7, $r11, $r19, $r21, $r23, $r26, $r28, $r30;
        java.util.List r3, r9, $r15, $r16;
        java.lang.Iterable $r4, $r14;
        java.util.Iterator r5;
        java.lang.Object r6, $r13, $r20, $r22, $r25, $r27, $r29, r36;
        java.lang.String[] r8, r35;
        long l0, $l3, $l4, $l5, $l6, $l10, $l11, $l12, $l13, l14, l15;
        int i1, $i2, $i7, $i8, $i9;
        androidx.benchmark.macro.perfetto.PerfettoTraceProcessor $r10;
        java.lang.CharSequence $r12, $r18;
        boolean $z2, $z3, $z4;
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics $r17;
        java.lang.Number $r24;
        double $d0;
        java.lang.RuntimeException $r31, $r33;
        java.lang.IllegalStateException $r32, $r34;
        java.lang.Long r37;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "absoluteTracePath");

        $r10 = <androidx.benchmark.macro.perfetto.PerfettoTraceProcessor: androidx.benchmark.macro.perfetto.PerfettoTraceProcessor INSTANCE>;

        $r11 = specialinvoke r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery: java.lang.String getFullQuery()>();

        r2 = virtualinvoke $r10.<androidx.benchmark.macro.perfetto.PerfettoTraceProcessor: java.lang.String rawQuery$benchmark_macro_release(java.lang.String,java.lang.String)>(r1, $r11);

        $r12 = (java.lang.CharSequence) r2;

        r35 = newarray (java.lang.String)[1];

        r35[0] = "\n";

        r3 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r12, r35, 0, 0, 6, null);

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r3);

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, "\"name\",\"value\",\"ts\"");

        if $z2 != 0 goto label1;

        $r34 = new java.lang.IllegalStateException;

        specialinvoke $r34.<java.lang.IllegalStateException: void <init>(java.lang.String)>("query failed!");

        throw $r34;

     label1:
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i2 > 3 goto label2;

        $r33 = new java.lang.RuntimeException;

        specialinvoke $r33.<java.lang.RuntimeException: void <init>(java.lang.String)>("No playing audio detected");

        throw $r33;

     label2:
        r36 = null;

        r37 = null;

        l14 = 0L;

        l15 = 0L;

        $r14 = (java.lang.Iterable) r3;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List drop(java.lang.Iterable,int)>($r14, 1);

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List dropLast(java.util.List,int)>($r15, 1);

        $r4 = (java.lang.Iterable) $r16;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label9;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) r6;

        $r18 = (java.lang.CharSequence) r7;

        r8 = newarray (java.lang.String)[1];

        r8[0] = ",";

        r9 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r18, r8, 0, 0, 6, null);

        $i9 = interfaceinvoke r9.<java.util.List: int size()>();

        if $i9 == 3 goto label4;

        $r32 = new java.lang.IllegalStateException;

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>("query failed");

        throw $r32;

     label4:
        if r36 != null goto label5;

        r36 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(0);

        goto label6;

     label5:
        $r19 = (java.lang.String) r36;

        $r20 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (java.lang.String) $r20;

        $z4 = staticinvoke <kotlin.text.StringsKt: boolean equals$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r19, $r21, 0, 2, null);

        if $z4 != 0 goto label6;

        $r31 = new java.lang.RuntimeException;

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>("There could be only one AudioTrack per measure");

        throw $r31;

     label6:
        if r37 != null goto label7;

        $r29 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(2);

        $r30 = (java.lang.String) $r29;

        $l13 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r30);

        r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l13);

        goto label8;

     label7:
        $r22 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(2);

        $r23 = (java.lang.String) $r22;

        $l10 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r23);

        $r24 = (java.lang.Number) r37;

        $l11 = virtualinvoke $r24.<java.lang.Number: long longValue()>();

        l0 = $l10 - $l11;

        $r25 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(2);

        $r26 = (java.lang.String) $r25;

        $l12 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r26);

        r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);

        l14 = l14 + l0;

        $r27 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(1);

        $r28 = (java.lang.String) $r27;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r28);

        i1 = (int) $d0;

        if i1 != 0 goto label8;

        l15 = l15 + l0;

     label8:
        goto label3;

     label9:
        $r17 = new androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        $l3 = (long) 1000000;

        $l4 = l14 / $l3;

        $i8 = (int) $l4;

        $l5 = (long) 1000000;

        $l6 = l15 / $l5;

        $i7 = (int) $l6;

        specialinvoke $r17.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: void <init>(int,int)>($i8, $i7);

        return $r17;
    }

    static void <clinit>()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery $r0;

        $r0 = new androidx.benchmark.macro.perfetto.AudioUnderrunQuery;

        specialinvoke $r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery: void <init>()>();

        <androidx.benchmark.macro.perfetto.AudioUnderrunQuery: androidx.benchmark.macro.perfetto.AudioUnderrunQuery INSTANCE> = $r0;

        return;
    }

androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics
<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs>
<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs>
    public void <init>(int, int)
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0;
        int i0, i1;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs> = i0;

        r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs> = i1;

        return;
    }

    public final int getTotalMs()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0;
        int $i0;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        $i0 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs>;

        return $i0;
    }

    public final int getZeroMs()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0;
        int $i0;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        $i0 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs>;

        return $i0;
    }

    public final int component1()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0;
        int $i0;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        $i0 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs>;

        return $i0;
    }

    public final int component2()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0;
        int $i0;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        $i0 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs>;

        return $i0;
    }

    public final androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics copy(int, int)
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0, $r1;
        int i0, i1;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        specialinvoke $r1.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: void <init>(int,int)>(i0, i1);

        return $r1;
    }

    public static androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics copy$default(androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics, int, int, int, java.lang.Object)
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0, $r2;
        int i0, $i1, $i2, i3, i4;
        java.lang.Object r1;

        r0 := @parameter0: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i3 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i4 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs>;

     label2:
        $r2 = virtualinvoke r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics copy(int,int)>(i3, i4);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SubMetrics(totalMs=");

        $i0 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", zeroMs=");

        $i1 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int hashCode()
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0;
        int $i0, $i1, $i2, $i3, i4, i5;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        $i0 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs>;

        i4 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        $i2 = i4 * 31;

        $i1 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs>;

        $i3 = staticinvoke <java.lang.Integer: int hashCode(int)>($i1);

        i5 = $i2 + $i3;

        return i5;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics r0, r2;
        java.lang.Object r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics) r1;

        $i1 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs>;

        $i0 = r2.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int totalMs>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $i3 = r0.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs>;

        $i2 = r2.<androidx.benchmark.macro.perfetto.AudioUnderrunQuery$SubMetrics: int zeroMs>;

        if $i3 == $i2 goto label4;

        return 0;

     label4:
        return 1;
    }

