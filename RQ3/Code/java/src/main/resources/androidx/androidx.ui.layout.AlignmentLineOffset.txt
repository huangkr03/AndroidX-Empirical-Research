androidx.ui.layout.AlignmentLineOffset
<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine>
<androidx.ui.layout.AlignmentLineOffset: float before>
<androidx.ui.layout.AlignmentLineOffset: float after>
    private void <init>(androidx.ui.core.AlignmentLine, float, float)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.AlignmentLine r1;
        float f0, f1, $f2, $f3;
        boolean z0, z1, $z3, z4;
        byte $b0, $b1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: androidx.ui.core.AlignmentLine;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine> = r1;

        r0.<androidx.ui.layout.AlignmentLineOffset: float before> = f0;

        r0.<androidx.ui.layout.AlignmentLineOffset: float after> = f1;

        $f2 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: float getBefore()>();

        $b0 = $f2 cmpl 0.0F;

        if $b0 < 0 goto label1;

        $f3 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: float getAfter()>();

        $b1 = $f3 cmpl 0.0F;

        if $b1 < 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label3;

        r5 = "Padding from alignment line must be non-negative";

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label3:
        return;
    }

    public void <init>(androidx.ui.core.AlignmentLine, float, float, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.AlignmentLine r1;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        float $f0, $f1, f2, f3;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: androidx.ui.core.AlignmentLine;

        f2 := @parameter1: float;

        f3 := @parameter2: float;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $f1 = (float) 0;

        f2 = staticinvoke <androidx.ui.unit.Dp: float constructor-impl(float)>($f1);

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $f0 = (float) 0;

        f3 = staticinvoke <androidx.ui.unit.Dp: float constructor-impl(float)>($f0);

     label2:
        specialinvoke r0.<androidx.ui.layout.AlignmentLineOffset: void <init>(androidx.ui.core.AlignmentLine,float,float,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, f2, f3, null);

        return;
    }

    public final androidx.ui.core.AlignmentLine getAlignmentLine()
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.AlignmentLine $r1;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 = r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine>;

        return $r1;
    }

    public final float getBefore()
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        float $f0;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $f0 = r0.<androidx.ui.layout.AlignmentLineOffset: float before>;

        return $f0;
    }

    public final float getAfter()
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        float $f0;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $f0 = r0.<androidx.ui.layout.AlignmentLineOffset: float after>;

        return $f0;
    }

    public androidx.ui.core.MeasureScope$MeasureResult measure(androidx.ui.core.MeasureScope, androidx.ui.core.Measurable, androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.MeasureScope $r1;
        androidx.ui.core.Measurable r2;
        androidx.ui.core.Constraints r3, $r17;
        androidx.ui.core.LayoutDirection r4;
        androidx.ui.core.Placeable r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, $i17, i18, $i19, i20, i21, i22, $i23, $i24, $i25;
        androidx.ui.core.AlignmentLine $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6;
        float $f0, $f1;
        androidx.ui.layout.AlignmentLineOffset$measure$1 $r12;
        kotlin.jvm.functions.Function1 $r13;
        androidx.ui.core.MeasureScope$MeasureResult $r14;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 := @parameter0: androidx.ui.core.MeasureScope;

        r2 := @parameter1: androidx.ui.core.Measurable;

        r3 := @parameter2: androidx.ui.core.Constraints;

        r4 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "layoutDirection");

        $r6 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine getAlignmentLine()>();

        $z0 = staticinvoke <androidx.ui.layout.AlignmentLineKt: boolean access$getHorizontal(androidx.ui.core.AlignmentLine)>($r6);

        if $z0 == 0 goto label01;

        $r17 = staticinvoke <androidx.ui.core.Constraints: androidx.ui.core.Constraints copy$default(androidx.ui.core.Constraints,int,int,int,int,int,java.lang.Object)>(r3, 0, 0, 0, 0, 11, null);

        goto label02;

     label01:
        $r17 = staticinvoke <androidx.ui.core.Constraints: androidx.ui.core.Constraints copy$default(androidx.ui.core.Constraints,int,int,int,int,int,java.lang.Object)>(r3, 0, 0, 0, 0, 14, null);

     label02:
        r5 = virtualinvoke $r1.<androidx.ui.core.MeasureScope: androidx.ui.core.Placeable measure(androidx.ui.core.Measurable,androidx.ui.core.Constraints)>(r2, $r17);

        $r7 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine getAlignmentLine()>();

        i14 = virtualinvoke r5.<androidx.ui.core.Placeable: int get(androidx.ui.core.AlignmentLine)>($r7);

        z5 = 0;

        z6 = 0;

        i15 = i14;

        if i15 == -2147483648 goto label03;

        $i16 = i15;

        goto label04;

     label03:
        $i16 = 0;

     label04:
        i0 = $i16;

        $r8 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine getAlignmentLine()>();

        $z1 = staticinvoke <androidx.ui.layout.AlignmentLineKt: boolean access$getHorizontal(androidx.ui.core.AlignmentLine)>($r8);

        if $z1 == 0 goto label05;

        $i17 = virtualinvoke r5.<androidx.ui.core.Placeable: int getHeight()>();

        goto label06;

     label05:
        $i17 = virtualinvoke r5.<androidx.ui.core.Placeable: int getWidth()>();

     label06:
        i18 = $i17;

        $r9 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine getAlignmentLine()>();

        $z2 = staticinvoke <androidx.ui.layout.AlignmentLineKt: boolean access$getHorizontal(androidx.ui.core.AlignmentLine)>($r9);

        if $z2 == 0 goto label07;

        $i19 = virtualinvoke r3.<androidx.ui.core.Constraints: int getMaxHeight()>();

        goto label08;

     label07:
        $i19 = virtualinvoke r3.<androidx.ui.core.Constraints: int getMaxWidth()>();

     label08:
        i20 = $i19;

        $f0 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: float getBefore()>();

        $i2 = virtualinvoke $r1.<androidx.ui.core.MeasureScope: int toIntPx-ipo6vVg(float)>($f0);

        $i4 = $i2 - i0;

        $i3 = i20 - i18;

        i21 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i4, 0, $i3);

        $f1 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: float getAfter()>();

        $i5 = virtualinvoke $r1.<androidx.ui.core.MeasureScope: int toIntPx-ipo6vVg(float)>($f1);

        $i6 = $i5 - i18;

        $i9 = $i6 + i0;

        $i7 = i20 - i18;

        $i8 = $i7 - i21;

        i22 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i9, 0, $i8);

        $r10 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine getAlignmentLine()>();

        $z3 = staticinvoke <androidx.ui.layout.AlignmentLineKt: boolean access$getHorizontal(androidx.ui.core.AlignmentLine)>($r10);

        if $z3 == 0 goto label09;

        $i23 = virtualinvoke r5.<androidx.ui.core.Placeable: int getWidth()>();

        goto label10;

     label09:
        $i10 = virtualinvoke r5.<androidx.ui.core.Placeable: int getWidth()>();

        $i11 = i21 + $i10;

        $i23 = $i11 + i22;

     label10:
        $i24 = $i23;

        $r11 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine getAlignmentLine()>();

        $z4 = staticinvoke <androidx.ui.layout.AlignmentLineKt: boolean access$getHorizontal(androidx.ui.core.AlignmentLine)>($r11);

        if $z4 == 0 goto label11;

        $i12 = virtualinvoke r5.<androidx.ui.core.Placeable: int getHeight()>();

        $i13 = i21 + $i12;

        $i25 = $i13 + i22;

        goto label12;

     label11:
        $i25 = virtualinvoke r5.<androidx.ui.core.Placeable: int getHeight()>();

     label12:
        i1 = $i25;

        $r12 = new androidx.ui.layout.AlignmentLineOffset$measure$1;

        specialinvoke $r12.<androidx.ui.layout.AlignmentLineOffset$measure$1: void <init>(androidx.ui.layout.AlignmentLineOffset,int,androidx.ui.core.Placeable)>(r0, i21, r5);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        $r14 = staticinvoke <androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$MeasureResult layout$default(androidx.ui.core.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $i24, i1, null, $r13, 4, null);

        return $r14;
    }

    public java.lang.Object foldIn(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;
        androidx.ui.core.Modifier$Element r4;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        r4 = (androidx.ui.core.Modifier$Element) r0;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldIn(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r4, r1, r2);

        return $r3;
    }

    public java.lang.Object foldOut(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;
        androidx.ui.core.Modifier$Element r4;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        r4 = (androidx.ui.core.Modifier$Element) r0;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldOut(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r4, r1, r2);

        return $r3;
    }

    public boolean all(kotlin.jvm.functions.Function1)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;
        androidx.ui.core.Modifier$Element r2;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = (androidx.ui.core.Modifier$Element) r0;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean all(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r2, r1);

        return $z0;
    }

    public int maxIntrinsicHeight(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        $i1 = staticinvoke <androidx.ui.core.LayoutModifier$DefaultImpls: int maxIntrinsicHeight(androidx.ui.core.LayoutModifier,androidx.ui.core.IntrinsicMeasureScope,androidx.ui.core.IntrinsicMeasurable,int,androidx.ui.core.LayoutDirection)>(r0, $r1, r2, i0, r3);

        return $i1;
    }

    public int maxIntrinsicWidth(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        $i1 = staticinvoke <androidx.ui.core.LayoutModifier$DefaultImpls: int maxIntrinsicWidth(androidx.ui.core.LayoutModifier,androidx.ui.core.IntrinsicMeasureScope,androidx.ui.core.IntrinsicMeasurable,int,androidx.ui.core.LayoutDirection)>(r0, $r1, r2, i0, r3);

        return $i1;
    }

    public int minIntrinsicHeight(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        $i1 = staticinvoke <androidx.ui.core.LayoutModifier$DefaultImpls: int minIntrinsicHeight(androidx.ui.core.LayoutModifier,androidx.ui.core.IntrinsicMeasureScope,androidx.ui.core.IntrinsicMeasurable,int,androidx.ui.core.LayoutDirection)>(r0, $r1, r2, i0, r3);

        return $i1;
    }

    public int minIntrinsicWidth(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        $i1 = staticinvoke <androidx.ui.core.LayoutModifier$DefaultImpls: int minIntrinsicWidth(androidx.ui.core.LayoutModifier,androidx.ui.core.IntrinsicMeasureScope,androidx.ui.core.IntrinsicMeasurable,int,androidx.ui.core.LayoutDirection)>(r0, $r1, r2, i0, r3);

        return $i1;
    }

    public boolean any(kotlin.jvm.functions.Function1)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;
        androidx.ui.core.Modifier$Element r2;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = (androidx.ui.core.Modifier$Element) r0;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean any(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r2, r1);

        return $z0;
    }

    public androidx.ui.core.Modifier plus(androidx.ui.core.Modifier)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.Modifier r1, $r2, r3;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: androidx.ui.core.Modifier;

        r3 = (androidx.ui.core.Modifier) r0;

        $r2 = staticinvoke <androidx.ui.core.Modifier$DefaultImpls: androidx.ui.core.Modifier plus(androidx.ui.core.Modifier,androidx.ui.core.Modifier)>(r3, r1);

        return $r2;
    }

    public final androidx.ui.core.AlignmentLine component1()
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.AlignmentLine $r1;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 = r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine>;

        return $r1;
    }

    public final float component2()
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        float $f0;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $f0 = r0.<androidx.ui.layout.AlignmentLineOffset: float before>;

        return $f0;
    }

    public final float component3()
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        float $f0;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $f0 = r0.<androidx.ui.layout.AlignmentLineOffset: float after>;

        return $f0;
    }

    public final androidx.ui.layout.AlignmentLineOffset copy-9oeMsl0(androidx.ui.core.AlignmentLine, float, float)
    {
        androidx.ui.layout.AlignmentLineOffset r0, $r2;
        androidx.ui.core.AlignmentLine r1;
        float f0, f1;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: androidx.ui.core.AlignmentLine;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignmentLine");

        $r2 = new androidx.ui.layout.AlignmentLineOffset;

        specialinvoke $r2.<androidx.ui.layout.AlignmentLineOffset: void <init>(androidx.ui.core.AlignmentLine,float,float,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, f0, f1, null);

        return $r2;
    }

    public static androidx.ui.layout.AlignmentLineOffset copy-9oeMsl0$default(androidx.ui.layout.AlignmentLineOffset, androidx.ui.core.AlignmentLine, float, float, int, java.lang.Object)
    {
        androidx.ui.layout.AlignmentLineOffset r0, $r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        androidx.ui.core.AlignmentLine r3;
        float f0, f1;

        r0 := @parameter0: androidx.ui.layout.AlignmentLineOffset;

        r3 := @parameter1: androidx.ui.core.AlignmentLine;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f0 = r0.<androidx.ui.layout.AlignmentLineOffset: float before>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        f1 = r0.<androidx.ui.layout.AlignmentLineOffset: float after>;

     label3:
        $r2 = virtualinvoke r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.layout.AlignmentLineOffset copy-9oeMsl0(androidx.ui.core.AlignmentLine,float,float)>(r3, f0, f1);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11;
        androidx.ui.core.AlignmentLine $r3;
        float $f0, $f1;
        java.lang.String $r6, $r9, $r12;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AlignmentLineOffset(alignmentLine=");

        $r3 = r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", before=");

        $f0 = r0.<androidx.ui.layout.AlignmentLineOffset: float before>;

        $r6 = staticinvoke <androidx.ui.unit.Dp: java.lang.String toString-impl(float)>($f0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", after=");

        $f1 = r0.<androidx.ui.layout.AlignmentLineOffset: float after>;

        $r9 = staticinvoke <androidx.ui.unit.Dp: java.lang.String toString-impl(float)>($f1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public int hashCode()
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.AlignmentLine $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        $r1 = r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine>;

        $i0 = virtualinvoke $r1.<androidx.ui.core.AlignmentLine: int hashCode()>();

        $i1 = $i0 * 31;

        $f0 = r0.<androidx.ui.layout.AlignmentLineOffset: float before>;

        $i2 = staticinvoke <androidx.ui.unit.Dp: int hashCode-impl(float)>($f0);

        $i3 = $i1 + $i2;

        $i4 = $i3 * 31;

        $f1 = r0.<androidx.ui.layout.AlignmentLineOffset: float after>;

        $i5 = staticinvoke <androidx.ui.unit.Dp: int hashCode-impl(float)>($f1);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.ui.layout.AlignmentLineOffset r0, r2;
        java.lang.Object r1, r3;
        boolean $z0, $z1, $z2, $z3;
        androidx.ui.core.AlignmentLine $r4, $r5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.ui.layout.AlignmentLineOffset;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = r1;

        r2 = (androidx.ui.layout.AlignmentLineOffset) r3;

        $r5 = r0.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine>;

        $r4 = r2.<androidx.ui.layout.AlignmentLineOffset: androidx.ui.core.AlignmentLine alignmentLine>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $f1 = r0.<androidx.ui.layout.AlignmentLineOffset: float before>;

        $f0 = r2.<androidx.ui.layout.AlignmentLineOffset: float before>;

        $z2 = staticinvoke <androidx.ui.unit.Dp: boolean equals-impl0(float,float)>($f1, $f0);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $f3 = r0.<androidx.ui.layout.AlignmentLineOffset: float after>;

        $f2 = r2.<androidx.ui.layout.AlignmentLineOffset: float after>;

        $z3 = staticinvoke <androidx.ui.unit.Dp: boolean equals-impl0(float,float)>($f3, $f2);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public void <init>(androidx.ui.core.AlignmentLine, float, float, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.layout.AlignmentLineOffset r0;
        androidx.ui.core.AlignmentLine r1;
        float f0, f1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.ui.layout.AlignmentLineOffset;

        r1 := @parameter0: androidx.ui.core.AlignmentLine;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.layout.AlignmentLineOffset: void <init>(androidx.ui.core.AlignmentLine,float,float)>(r1, f0, f1);

        return;
    }

