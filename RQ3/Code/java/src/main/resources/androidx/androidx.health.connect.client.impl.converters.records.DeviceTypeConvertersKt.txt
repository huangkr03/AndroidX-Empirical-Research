androidx.health.connect.client.impl.converters.records.DeviceTypeConvertersKt
<androidx.health.connect.client.impl.converters.records.DeviceTypeConvertersKt: java.util.Map DEVICE_TYPE_STRING_TO_INT_MAP>
<androidx.health.connect.client.impl.converters.records.DeviceTypeConvertersKt: java.util.Map DEVICE_TYPE_INT_TO_STRING_MAP>
    public static final java.util.Map getDEVICE_TYPE_STRING_TO_INT_MAP()
    {
        java.util.Map $r0;

        $r0 = <androidx.health.connect.client.impl.converters.records.DeviceTypeConvertersKt: java.util.Map DEVICE_TYPE_STRING_TO_INT_MAP>;

        return $r0;
    }

    public static final java.util.Map getDEVICE_TYPE_INT_TO_STRING_MAP()
    {
        java.util.Map $r0;

        $r0 = <androidx.health.connect.client.impl.converters.records.DeviceTypeConvertersKt: java.util.Map DEVICE_TYPE_INT_TO_STRING_MAP>;

        return $r0;
    }

    static void <clinit>()
    {
        int i0, $i1, $i2;
        java.util.Map r0, r3, $r22, $r23;
        java.util.Iterator r1;
        java.lang.Object r2, $r26, $r27, $r28, $r29;
        java.lang.Integer $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;
        kotlin.Pair $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, r34;
        java.util.Set $r24;
        java.util.LinkedHashMap $r25;
        boolean $z3;
        kotlin.Pair[] $r31;
        java.lang.Iterable $r32;
        java.util.Map$Entry r33;

        $r31 = newarray (kotlin.Pair)[9];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("UNKNOWN", $r4);

        $r31[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r7 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("CHEST_STRAP", $r6);

        $r31[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("FITNESS_BAND", $r8);

        $r31[2] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r11 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("HEAD_MOUNTED", $r10);

        $r31[3] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r13 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("PHONE", $r12);

        $r31[4] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r15 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("RING", $r14);

        $r31[5] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r17 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("SCALE", $r16);

        $r31[6] = $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r19 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("SMART_DISPLAY", $r18);

        $r31[7] = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r21 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("WATCH", $r20);

        $r31[8] = $r21;

        $r22 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair[])>($r31);

        <androidx.health.connect.client.impl.converters.records.DeviceTypeConvertersKt: java.util.Map DEVICE_TYPE_STRING_TO_INT_MAP> = $r22;

        $r23 = <androidx.health.connect.client.impl.converters.records.DeviceTypeConvertersKt: java.util.Map DEVICE_TYPE_STRING_TO_INT_MAP>;

        $r24 = interfaceinvoke $r23.<java.util.Map: java.util.Set entrySet()>();

        $r32 = (java.lang.Iterable) $r24;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r32, 10);

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        $r25 = new java.util.LinkedHashMap;

        specialinvoke $r25.<java.util.LinkedHashMap: void <init>(int)>(i0);

        r0 = (java.util.Map) $r25;

        r1 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = r0;

        r33 = (java.util.Map$Entry) r2;

        $r26 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getKey()>();

        r34 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r28 = virtualinvoke r34.<kotlin.Pair: java.lang.Object getFirst()>();

        $r29 = virtualinvoke r34.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r29);

        goto label1;

     label2:
        <androidx.health.connect.client.impl.converters.records.DeviceTypeConvertersKt: java.util.Map DEVICE_TYPE_INT_TO_STRING_MAP> = r0;

        return;
    }

