androidx.test.platform.tracing.AndroidXTracer
<androidx.test.platform.tracing.AndroidXTracer: java.lang.String TAG>
<androidx.test.platform.tracing.AndroidXTracer: int MAX_SECTION_NAME_LEN>
    public androidx.test.platform.tracing.Tracer$Span beginSpan(java.lang.String)
    {
        androidx.test.platform.tracing.AndroidXTracer r0;
        java.lang.String r1, $r2;
        androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan $r3;

        r0 := @this: androidx.test.platform.tracing.AndroidXTracer;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <androidx.test.platform.tracing.AndroidXTracer: java.lang.String sanitizeSpanName(java.lang.String)>(r1);

        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>($r2);

        $r3 = new androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan;

        specialinvoke $r3.<androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan: void <init>(androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan-IA)>(null);

        return $r3;
    }

    static volatile java.lang.String '-$$Nest$smsanitizeSpanName'(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <androidx.test.platform.tracing.AndroidXTracer: java.lang.String sanitizeSpanName(java.lang.String)>(r0);

        return $r1;
    }

    private static java.lang.String sanitizeSpanName(java.lang.String)
    {
        java.lang.String r0, $r2, $r5, r6;
        int $i0;
        java.lang.StringBuilder $r1, $r3, $r4;

        r6 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 <= 127 goto label1;

        $r2 = <androidx.test.platform.tracing.AndroidXTracer: java.lang.String TAG>;

        r0 = r6;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span name exceeds limits: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r5);

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, 127);

     label1:
        return r6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/platform/tracing/AndroidXTracer;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.platform.tracing.AndroidXTracer: java.lang.String TAG> = $r1;

        return;
    }

    void <init>()
    {
        androidx.test.platform.tracing.AndroidXTracer r0;

        r0 := @this: androidx.test.platform.tracing.AndroidXTracer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan-IA
androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan
<androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan: java.util.ArrayDeque nestedSpans>
    public androidx.test.platform.tracing.Tracer$Span beginChildSpan(java.lang.String)
    {
        androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan r0, r2, $r4;
        java.lang.String r1, $r3;
        java.util.ArrayDeque $r5;

        r0 := @this: androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan;

        r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <androidx.test.platform.tracing.AndroidXTracer: java.lang.String '-$$Nest$smsanitizeSpanName'(java.lang.String)>(r1);

        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>($r3);

        $r4 = new androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan;

        specialinvoke $r4.<androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan: void <init>()>();

        r2 = $r4;

        $r5 = r0.<androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan: java.util.ArrayDeque nestedSpans>;

        virtualinvoke $r5.<java.util.ArrayDeque: boolean add(java.lang.Object)>(r2);

        return r2;
    }

    private void <init>()
    {
        androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan r0;
        java.util.ArrayDeque $r1;

        r0 := @this: androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan: java.util.ArrayDeque nestedSpans> = $r1;

        return;
    }

    void <init>(androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan-IA)
    {
        androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan r0;
        androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan-IA r1;

        r0 := @this: androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan;

        r1 := @parameter0: androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan-IA;

        specialinvoke r0.<androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan: void <init>()>();

        return;
    }

    public void close()
    {
        androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan r0, r1, $r4;
        java.util.ArrayDeque $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan;

     label1:
        $r2 = r0.<androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan: java.util.ArrayDeque nestedSpans>;

        $r3 = virtualinvoke $r2.<java.util.ArrayDeque: java.lang.Object pollLast()>();

        $r4 = (androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan) $r3;

        r1 = $r4;

        if $r4 == null goto label2;

        virtualinvoke r1.<androidx.test.platform.tracing.AndroidXTracer$AndroidXTracerSpan: void close()>();

        goto label1;

     label2:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        return;
    }

