androidx.test.uiautomator.ByMatcher
<androidx.test.uiautomator.ByMatcher: java.lang.String TAG>
<androidx.test.uiautomator.ByMatcher: androidx.test.uiautomator.UiDevice mDevice>
<androidx.test.uiautomator.ByMatcher: androidx.test.uiautomator.BySelector mSelector>
<androidx.test.uiautomator.ByMatcher: boolean mShortCircuit>
    private void <init>(androidx.test.uiautomator.UiDevice, androidx.test.uiautomator.BySelector, boolean)
    {
        androidx.test.uiautomator.ByMatcher r0;
        androidx.test.uiautomator.UiDevice r1;
        androidx.test.uiautomator.BySelector r2;
        boolean z0;

        r0 := @this: androidx.test.uiautomator.ByMatcher;

        r1 := @parameter0: androidx.test.uiautomator.UiDevice;

        r2 := @parameter1: androidx.test.uiautomator.BySelector;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.uiautomator.ByMatcher: androidx.test.uiautomator.UiDevice mDevice> = r1;

        r0.<androidx.test.uiautomator.ByMatcher: androidx.test.uiautomator.BySelector mSelector> = r2;

        r0.<androidx.test.uiautomator.ByMatcher: boolean mShortCircuit> = z0;

        return;
    }

    static transient android.view.accessibility.AccessibilityNodeInfo findMatch(androidx.test.uiautomator.UiDevice, androidx.test.uiautomator.BySelector, android.view.accessibility.AccessibilityNodeInfo[])
    {
        androidx.test.uiautomator.UiDevice r0;
        androidx.test.uiautomator.BySelector r1;
        android.view.accessibility.AccessibilityNodeInfo[] r2, r4;
        androidx.test.uiautomator.ByMatcher r3, $r7;
        int i0, i1;
        android.view.accessibility.AccessibilityNodeInfo r5, $r9;
        java.util.List r6;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @parameter0: androidx.test.uiautomator.UiDevice;

        r1 := @parameter1: androidx.test.uiautomator.BySelector;

        r2 := @parameter2: android.view.accessibility.AccessibilityNodeInfo[];

        $r7 = new androidx.test.uiautomator.ByMatcher;

        specialinvoke $r7.<androidx.test.uiautomator.ByMatcher: void <init>(androidx.test.uiautomator.UiDevice,androidx.test.uiautomator.BySelector,boolean)>(r0, r1, 1);

        r3 = $r7;

        r4 = r2;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r5 = r4[i1];

        r6 = specialinvoke r3.<androidx.test.uiautomator.ByMatcher: java.util.List findMatches(android.view.accessibility.AccessibilityNodeInfo)>(r5);

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r8 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (android.view.accessibility.AccessibilityNodeInfo) $r8;

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    static transient java.util.List findMatches(androidx.test.uiautomator.UiDevice, androidx.test.uiautomator.BySelector, android.view.accessibility.AccessibilityNodeInfo[])
    {
        androidx.test.uiautomator.UiDevice r0;
        androidx.test.uiautomator.BySelector r1;
        android.view.accessibility.AccessibilityNodeInfo[] r2, r5;
        java.util.ArrayList r3, $r7;
        androidx.test.uiautomator.ByMatcher r4, $r8;
        int i0, i1;
        android.view.accessibility.AccessibilityNodeInfo r6;
        java.util.List $r9;

        r0 := @parameter0: androidx.test.uiautomator.UiDevice;

        r1 := @parameter1: androidx.test.uiautomator.BySelector;

        r2 := @parameter2: android.view.accessibility.AccessibilityNodeInfo[];

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        $r8 = new androidx.test.uiautomator.ByMatcher;

        specialinvoke $r8.<androidx.test.uiautomator.ByMatcher: void <init>(androidx.test.uiautomator.UiDevice,androidx.test.uiautomator.BySelector,boolean)>(r0, r1, 0);

        r4 = $r8;

        r5 = r2;

        i0 = lengthof r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r6 = r5[i1];

        $r9 = specialinvoke r4.<androidx.test.uiautomator.ByMatcher: java.util.List findMatches(android.view.accessibility.AccessibilityNodeInfo)>(r6);

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    private java.util.List findMatches(android.view.accessibility.AccessibilityNodeInfo)
    {
        androidx.test.uiautomator.ByMatcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList $r2, $r4;
        boolean $z0;
        androidx.test.uiautomator.UiDevice $r3;
        java.util.List r5;

        r0 := @this: androidx.test.uiautomator.ByMatcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = new androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        specialinvoke $r2.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: void <init>()>();

        r5 = specialinvoke r0.<androidx.test.uiautomator.ByMatcher: java.util.List findMatches(android.view.accessibility.AccessibilityNodeInfo,int,int,androidx.test.uiautomator.ByMatcher$SinglyLinkedList)>(r1, 0, 0, $r2);

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.test.uiautomator.ByMatcher: androidx.test.uiautomator.UiDevice mDevice>;

        virtualinvoke $r3.<androidx.test.uiautomator.UiDevice: void runWatchers()>();

        $r4 = new androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        specialinvoke $r4.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: void <init>()>();

        r5 = specialinvoke r0.<androidx.test.uiautomator.ByMatcher: java.util.List findMatches(android.view.accessibility.AccessibilityNodeInfo,int,int,androidx.test.uiautomator.ByMatcher$SinglyLinkedList)>(r1, 0, 0, $r4);

     label1:
        return r5;
    }

    private java.util.List findMatches(android.view.accessibility.AccessibilityNodeInfo, int, int, androidx.test.uiautomator.ByMatcher$SinglyLinkedList)
    {
        androidx.test.uiautomator.ByMatcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r3, $r6;
        int i0, i1, $i2, i5, i6;
        java.util.ArrayList r2, $r4;
        boolean $z0, $z1, $z2, $z5, $z6, z7;
        androidx.test.uiautomator.BySelector $r5;
        java.util.List $r7;
        java.lang.Object[] $r8, $r13;
        java.lang.String $r9, $r12, $r14, $r15, $r16;
        java.lang.Integer $r10, $r11;
        java.lang.Object $r17;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList r18;
        java.util.Iterator r19;
        androidx.test.uiautomator.ByMatcher$PartialMatch r20, r21;

        r0 := @this: androidx.test.uiautomator.ByMatcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r18 := @parameter3: androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        if $z0 != 0 goto label01;

        return r2;

     label01:
        r19 = virtualinvoke r18.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r17 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (androidx.test.uiautomator.ByMatcher$PartialMatch) $r17;

        r18 = virtualinvoke r20.<androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.ByMatcher$SinglyLinkedList update(android.view.accessibility.AccessibilityNodeInfo,int,int,androidx.test.uiautomator.ByMatcher$SinglyLinkedList)>(r1, i0, i1, r18);

        goto label02;

     label03:
        $r5 = r0.<androidx.test.uiautomator.ByMatcher: androidx.test.uiautomator.BySelector mSelector>;

        r21 = staticinvoke <androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.ByMatcher$PartialMatch accept(android.view.accessibility.AccessibilityNodeInfo,androidx.test.uiautomator.BySelector,int,int)>(r1, $r5, i0, i1);

        if r21 == null goto label04;

        r18 = staticinvoke <androidx.test.uiautomator.ByMatcher$SinglyLinkedList: androidx.test.uiautomator.ByMatcher$SinglyLinkedList prepend(java.lang.Object,androidx.test.uiautomator.ByMatcher$SinglyLinkedList)>(r21, r18);

     label04:
        i5 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        z7 = 0;

        i6 = 0;

     label05:
        if i6 >= i5 goto label09;

        r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>(i6);

        if r3 != null goto label07;

        if z7 != 0 goto label06;

        $r14 = <androidx.test.uiautomator.ByMatcher: java.lang.String TAG>;

        $r13 = newarray (java.lang.Object)[1];

        $r15 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r13[0] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Node returned null child: %s", $r13);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r14, $r16);

     label06:
        z7 = 1;

        $r9 = <androidx.test.uiautomator.ByMatcher: java.lang.String TAG>;

        $r8 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Skipping null child (%s of %s)", $r8);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r9, $r12);

        goto label08;

     label07:
        $i2 = i1 + 1;

        $r7 = specialinvoke r0.<androidx.test.uiautomator.ByMatcher: java.util.List findMatches(android.view.accessibility.AccessibilityNodeInfo,int,int,androidx.test.uiautomator.ByMatcher$SinglyLinkedList)>(r3, i6, $i2, r18);

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void recycle()>();

        $z5 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z5 != 0 goto label08;

        $z6 = r0.<androidx.test.uiautomator.ByMatcher: boolean mShortCircuit>;

        if $z6 == 0 goto label08;

        return r2;

     label08:
        i6 = i6 + 1;

        goto label05;

     label09:
        if r21 == null goto label10;

        $z2 = virtualinvoke r21.<androidx.test.uiautomator.ByMatcher$PartialMatch: boolean finalizeMatch()>();

        if $z2 == 0 goto label10;

        $r6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

     label10:
        return r2;
    }

    private static boolean checkCriteria(java.util.regex.Pattern, java.lang.CharSequence)
    {
        java.util.regex.Pattern r0;
        java.lang.CharSequence r1, r5;
        java.util.regex.Matcher $r2;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.regex.Pattern;

        r1 := @parameter1: java.lang.CharSequence;

        if r0 != null goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r4 = r1;

        goto label3;

     label2:
        $r4 = "";

     label3:
        r5 = (java.lang.CharSequence) $r4;

        $r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    private static boolean checkCriteria(java.lang.Boolean, boolean)
    {
        java.lang.Boolean r0, $r1;
        boolean z0, $z1;

        r0 := @parameter0: java.lang.Boolean;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        return 1;

     label1:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $z1 = virtualinvoke r0.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        return $z1;
    }

    static boolean access$000(java.util.regex.Pattern, java.lang.CharSequence)
    {
        java.util.regex.Pattern r0;
        java.lang.CharSequence r1;
        boolean $z0;

        r0 := @parameter0: java.util.regex.Pattern;

        r1 := @parameter1: java.lang.CharSequence;

        $z0 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean checkCriteria(java.util.regex.Pattern,java.lang.CharSequence)>(r0, r1);

        return $z0;
    }

    static boolean access$100(java.lang.Boolean, boolean)
    {
        java.lang.Boolean r0;
        boolean z0, $z1;

        r0 := @parameter0: java.lang.Boolean;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean checkCriteria(java.lang.Boolean,boolean)>(r0, z0);

        return $z1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/uiautomator/ByMatcher;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.uiautomator.ByMatcher: java.lang.String TAG> = $r1;

        return;
    }

androidx.test.uiautomator.ByMatcher$PartialMatch
<androidx.test.uiautomator.ByMatcher$PartialMatch: int matchDepth>
<androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.BySelector matchSelector>
<androidx.test.uiautomator.ByMatcher$PartialMatch: java.util.List partialMatches>
    private void <init>(androidx.test.uiautomator.BySelector, int)
    {
        androidx.test.uiautomator.ByMatcher$PartialMatch r0;
        androidx.test.uiautomator.BySelector r1;
        int i0;
        java.util.ArrayList $r2;

        r0 := @this: androidx.test.uiautomator.ByMatcher$PartialMatch;

        r1 := @parameter0: androidx.test.uiautomator.BySelector;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.test.uiautomator.ByMatcher$PartialMatch: java.util.List partialMatches> = $r2;

        r0.<androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.BySelector matchSelector> = r1;

        r0.<androidx.test.uiautomator.ByMatcher$PartialMatch: int matchDepth> = i0;

        return;
    }

    public static androidx.test.uiautomator.ByMatcher$PartialMatch accept(android.view.accessibility.AccessibilityNodeInfo, androidx.test.uiautomator.BySelector, int, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        androidx.test.uiautomator.BySelector r1;
        int i0, i1;
        androidx.test.uiautomator.ByMatcher$PartialMatch $r2;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter1: androidx.test.uiautomator.BySelector;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = staticinvoke <androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.ByMatcher$PartialMatch accept(android.view.accessibility.AccessibilityNodeInfo,androidx.test.uiautomator.BySelector,int,int,int)>(r0, r1, i0, i1, i1);

        return $r2;
    }

    public static androidx.test.uiautomator.ByMatcher$PartialMatch accept(android.view.accessibility.AccessibilityNodeInfo, androidx.test.uiautomator.BySelector, int, int, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        androidx.test.uiautomator.BySelector r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.Integer $r2, $r3, $r24, $r25;
        java.util.regex.Pattern $r4, $r6, $r8, $r10, $r12;
        java.lang.CharSequence $r5, $r7, $r9, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.lang.String $r11;
        java.lang.Boolean $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        androidx.test.uiautomator.ByMatcher$PartialMatch $r23, r26;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter1: androidx.test.uiautomator.BySelector;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r2 = r1.<androidx.test.uiautomator.BySelector: java.lang.Integer mMinDepth>;

        if $r2 == null goto label1;

        $r25 = r1.<androidx.test.uiautomator.BySelector: java.lang.Integer mMinDepth>;

        $i4 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        if i2 < $i4 goto label2;

     label1:
        $r3 = r1.<androidx.test.uiautomator.BySelector: java.lang.Integer mMaxDepth>;

        if $r3 == null goto label3;

        $r24 = r1.<androidx.test.uiautomator.BySelector: java.lang.Integer mMaxDepth>;

        $i3 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        if i2 <= $i3 goto label3;

     label2:
        return null;

     label3:
        r26 = null;

        $r4 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mClazz>;

        $r5 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>();

        $z0 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$000(java.util.regex.Pattern,java.lang.CharSequence)>($r4, $r5);

        if $z0 == 0 goto label4;

        $r6 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mDesc>;

        $r7 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>();

        $z1 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$000(java.util.regex.Pattern,java.lang.CharSequence)>($r6, $r7);

        if $z1 == 0 goto label4;

        $r8 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mPkg>;

        $r9 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        $z2 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$000(java.util.regex.Pattern,java.lang.CharSequence)>($r8, $r9);

        if $z2 == 0 goto label4;

        $r10 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mRes>;

        $r11 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>();

        $z3 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$000(java.util.regex.Pattern,java.lang.CharSequence)>($r10, $r11);

        if $z3 == 0 goto label4;

        $r12 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mText>;

        $r13 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        $z4 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$000(java.util.regex.Pattern,java.lang.CharSequence)>($r12, $r13);

        if $z4 == 0 goto label4;

        $r14 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mChecked>;

        $z5 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>();

        $z6 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r14, $z5);

        if $z6 == 0 goto label4;

        $r15 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mCheckable>;

        $z7 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>();

        $z8 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r15, $z7);

        if $z8 == 0 goto label4;

        $r16 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mClickable>;

        $z9 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>();

        $z10 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r16, $z9);

        if $z10 == 0 goto label4;

        $r17 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mEnabled>;

        $z11 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>();

        $z12 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r17, $z11);

        if $z12 == 0 goto label4;

        $r18 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocused>;

        $z13 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        $z14 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r18, $z13);

        if $z14 == 0 goto label4;

        $r19 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocusable>;

        $z15 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>();

        $z16 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r19, $z15);

        if $z16 == 0 goto label4;

        $r20 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mLongClickable>;

        $z17 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>();

        $z18 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r20, $z17);

        if $z18 == 0 goto label4;

        $r21 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mScrollable>;

        $z19 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>();

        $z20 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r21, $z19);

        if $z20 == 0 goto label4;

        $r22 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mSelected>;

        $z21 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>();

        $z22 = staticinvoke <androidx.test.uiautomator.ByMatcher: boolean access$100(java.lang.Boolean,boolean)>($r22, $z21);

        if $z22 == 0 goto label4;

        $r23 = new androidx.test.uiautomator.ByMatcher$PartialMatch;

        specialinvoke $r23.<androidx.test.uiautomator.ByMatcher$PartialMatch: void <init>(androidx.test.uiautomator.BySelector,int)>(r1, i1);

        r26 = $r23;

     label4:
        return r26;
    }

    public androidx.test.uiautomator.ByMatcher$SinglyLinkedList update(android.view.accessibility.AccessibilityNodeInfo, int, int, androidx.test.uiautomator.ByMatcher$SinglyLinkedList)
    {
        androidx.test.uiautomator.ByMatcher$PartialMatch r0, r4;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0, i1, $i2, $i3;
        java.util.Iterator r2;
        androidx.test.uiautomator.BySelector r3, $r5;
        java.util.List $r6, $r8;
        boolean $z0;
        java.lang.Object $r7;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList r9;

        r0 := @this: androidx.test.uiautomator.ByMatcher$PartialMatch;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r9 := @parameter3: androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        $r5 = r0.<androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.BySelector matchSelector>;

        $r6 = $r5.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.test.uiautomator.BySelector) $r7;

        $i2 = r0.<androidx.test.uiautomator.ByMatcher$PartialMatch: int matchDepth>;

        $i3 = i1 - $i2;

        r4 = staticinvoke <androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.ByMatcher$PartialMatch accept(android.view.accessibility.AccessibilityNodeInfo,androidx.test.uiautomator.BySelector,int,int,int)>(r1, r3, i0, i1, $i3);

        if r4 == null goto label2;

        $r8 = r0.<androidx.test.uiautomator.ByMatcher$PartialMatch: java.util.List partialMatches>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r4);

        r9 = staticinvoke <androidx.test.uiautomator.ByMatcher$SinglyLinkedList: androidx.test.uiautomator.ByMatcher$SinglyLinkedList prepend(java.lang.Object,androidx.test.uiautomator.ByMatcher$SinglyLinkedList)>(r4, r9);

     label2:
        goto label1;

     label3:
        return r9;
    }

    public boolean finalizeMatch()
    {
        androidx.test.uiautomator.ByMatcher$PartialMatch r0, r3;
        java.util.HashSet r1, $r4;
        java.util.Iterator r2;
        java.util.List $r5, $r7;
        boolean $z0, $z1, $z2;
        androidx.test.uiautomator.BySelector $r6, $r9;
        java.lang.Object $r8;

        r0 := @this: androidx.test.uiautomator.ByMatcher$PartialMatch;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r1 = $r4;

        $r5 = r0.<androidx.test.uiautomator.ByMatcher$PartialMatch: java.util.List partialMatches>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.test.uiautomator.ByMatcher$PartialMatch) $r8;

        $z2 = virtualinvoke r3.<androidx.test.uiautomator.ByMatcher$PartialMatch: boolean finalizeMatch()>();

        if $z2 == 0 goto label2;

        $r9 = r3.<androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.BySelector matchSelector>;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        $r6 = r0.<androidx.test.uiautomator.ByMatcher$PartialMatch: androidx.test.uiautomator.BySelector matchSelector>;

        $r7 = $r6.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors>;

        $z1 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>($r7);

        return $z1;
    }

androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1
<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mNext>
<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList this$0>
    void <init>(androidx.test.uiautomator.ByMatcher$SinglyLinkedList)
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1 r0;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList r1, $r2;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node $r3;

        r0 := @this: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1;

        r1 := @parameter0: androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList this$0>;

        $r3 = staticinvoke <androidx.test.uiautomator.ByMatcher$SinglyLinkedList: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node access$200(androidx.test.uiautomator.ByMatcher$SinglyLinkedList)>($r2);

        r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mNext> = $r3;

        return;
    }

    public boolean hasNext()
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1 r0;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node $r1;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1;

        $r1 = r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mNext>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1 r0;
        java.lang.Object r1;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node $r2, $r3, $r4;

        r0 := @this: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1;

        $r2 = r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mNext>;

        r1 = $r2.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node: java.lang.Object data>;

        $r3 = r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mNext>;

        $r4 = $r3.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node next>;

        r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mNext> = $r4;

        return r1;
    }

    public void remove()
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node
<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node: java.lang.Object data>
<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node next>
    public void <init>(java.lang.Object, androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node)
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node r0, r2;
        java.lang.Object r1;

        r0 := @this: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node: java.lang.Object data> = r1;

        r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node next> = r2;

        return;
    }

androidx.test.uiautomator.ByMatcher$SinglyLinkedList
<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mHead>
    public void <init>()
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList r0;

        r0 := @this: androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        specialinvoke r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: void <init>(androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node)>(null);

        return;
    }

    private void <init>(androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node)
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList r0;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node r1;

        r0 := @this: androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        r1 := @parameter0: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mHead> = r1;

        return;
    }

    public static androidx.test.uiautomator.ByMatcher$SinglyLinkedList prepend(java.lang.Object, androidx.test.uiautomator.ByMatcher$SinglyLinkedList)
    {
        java.lang.Object r0;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList r1, $r2;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node $r3, $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        $r2 = new androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        $r3 = new androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node;

        $r4 = r1.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mHead>;

        specialinvoke $r3.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node: void <init>(java.lang.Object,androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node)>(r0, $r4);

        specialinvoke $r2.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: void <init>(androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node)>($r3);

        return $r2;
    }

    public java.util.Iterator iterator()
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList r0;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1 $r1;

        r0 := @this: androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        $r1 = new androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1;

        specialinvoke $r1.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList$1: void <init>(androidx.test.uiautomator.ByMatcher$SinglyLinkedList)>(r0);

        return $r1;
    }

    static androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node access$200(androidx.test.uiautomator.ByMatcher$SinglyLinkedList)
    {
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList r0;
        androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node $r1;

        r0 := @parameter0: androidx.test.uiautomator.ByMatcher$SinglyLinkedList;

        $r1 = r0.<androidx.test.uiautomator.ByMatcher$SinglyLinkedList: androidx.test.uiautomator.ByMatcher$SinglyLinkedList$Node mHead>;

        return $r1;
    }

