androidx.room.compiler.processing.compat.XConverters
<androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.compat.XConverters INSTANCE>
    private void <init>()
    {
        androidx.room.compiler.processing.compat.XConverters r0;

        r0 := @this: androidx.room.compiler.processing.compat.XConverters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final javax.'annotation'.processing.ProcessingEnvironment toJavac(androidx.room.compiler.processing.XProcessingEnv)
    {
        androidx.room.compiler.processing.XProcessingEnv $r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r1;
        javax.'annotation'.processing.ProcessingEnvironment $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment getDelegate()>();

        return $r2;
    }

    public static final javax.'annotation'.processing.RoundEnvironment toJavac(androidx.room.compiler.processing.XRoundEnv)
    {
        androidx.room.compiler.processing.XRoundEnv $r0;
        androidx.room.compiler.processing.javac.JavacRoundEnv $r1;
        javax.'annotation'.processing.RoundEnvironment $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XRoundEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacRoundEnv) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacRoundEnv: javax.'annotation'.processing.RoundEnvironment getDelegate()>();

        return $r2;
    }

    public static final javax.'annotation'.processing.Messager toJavac(androidx.room.compiler.processing.XMessager)
    {
        androidx.room.compiler.processing.XMessager $r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnvMessager $r1;
        javax.'annotation'.processing.Messager $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XMessager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacProcessingEnvMessager) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacProcessingEnvMessager: javax.'annotation'.processing.Messager getDelegate()>();

        return $r2;
    }

    public static final javax.'annotation'.processing.Filer toJavac(androidx.room.compiler.processing.XFiler)
    {
        androidx.room.compiler.processing.XFiler $r0;
        androidx.room.compiler.processing.javac.JavacFiler $r1;
        javax.'annotation'.processing.Filer $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XFiler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacFiler) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacFiler: javax.'annotation'.processing.Filer getDelegate()>();

        return $r2;
    }

    public static final javax.lang.model.element.Element toJavac(androidx.room.compiler.processing.XElement)
    {
        androidx.room.compiler.processing.XElement $r0;
        androidx.room.compiler.processing.javac.JavacElement $r1;
        javax.lang.model.element.Element $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacElement) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacElement: javax.lang.model.element.Element getElement()>();

        return $r2;
    }

    public static final javax.lang.model.element.TypeElement toJavac(androidx.room.compiler.processing.XTypeElement)
    {
        androidx.room.compiler.processing.XTypeElement $r0;
        androidx.room.compiler.processing.javac.JavacTypeElement $r1;
        javax.lang.model.element.TypeElement $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XTypeElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacTypeElement) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        return $r2;
    }

    public static final javax.lang.model.element.ExecutableElement toJavac(androidx.room.compiler.processing.XExecutableElement)
    {
        androidx.room.compiler.processing.XExecutableElement $r0;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r1;
        javax.lang.model.element.ExecutableElement $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XExecutableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacExecutableElement) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacExecutableElement: javax.lang.model.element.ExecutableElement getElement()>();

        return $r2;
    }

    public static final javax.lang.model.element.VariableElement toJavac(androidx.room.compiler.processing.XVariableElement)
    {
        androidx.room.compiler.processing.XVariableElement $r0;
        androidx.room.compiler.processing.javac.JavacVariableElement $r1;
        javax.lang.model.element.VariableElement $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XVariableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacVariableElement) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacVariableElement: javax.lang.model.element.VariableElement getElement()>();

        return $r2;
    }

    public static final javax.lang.model.element.AnnotationMirror toJavac(androidx.room.compiler.processing.XAnnotation)
    {
        androidx.room.compiler.processing.XAnnotation $r0;
        androidx.room.compiler.processing.javac.JavacAnnotation $r1;
        javax.lang.model.element.AnnotationMirror $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacAnnotation) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacAnnotation: javax.lang.model.element.AnnotationMirror getMirror()>();

        return $r2;
    }

    public static final javax.lang.model.element.AnnotationValue toJavac(androidx.room.compiler.processing.XAnnotationValue)
    {
        androidx.room.compiler.processing.XAnnotationValue $r0;
        androidx.room.compiler.processing.javac.JavacAnnotationValue $r1;
        javax.lang.model.element.AnnotationValue $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XAnnotationValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacAnnotationValue) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacAnnotationValue: javax.lang.model.element.AnnotationValue getAnnotationValue()>();

        return $r2;
    }

    public static final javax.lang.model.type.TypeMirror toJavac(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        androidx.room.compiler.processing.javac.JavacType $r1;
        javax.lang.model.type.TypeMirror $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacType) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        return $r2;
    }

    public static final javax.lang.model.type.ExecutableType toJavac(androidx.room.compiler.processing.XExecutableType)
    {
        androidx.room.compiler.processing.XExecutableType $r0;
        androidx.room.compiler.processing.javac.JavacExecutableType $r1;
        javax.lang.model.type.ExecutableType $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.javac.JavacExecutableType) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType getExecutableType()>();

        return $r2;
    }

    public static final androidx.room.compiler.processing.XElement toXProcessing(javax.lang.model.element.Element, androidx.room.compiler.processing.XProcessingEnv)
    {
        javax.lang.model.element.Element $r0, r2;
        androidx.room.compiler.processing.XProcessingEnv r1;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9;
        java.lang.Class $r6;
        kotlin.reflect.KClass $r7;
        java.lang.String $r10, $r11;
        androidx.room.compiler.processing.compat.XConverters $r12, $r15, $r18;
        javax.lang.model.element.VariableElement $r13;
        androidx.room.compiler.processing.XVariableElement $r14;
        javax.lang.model.element.ExecutableElement $r16;
        androidx.room.compiler.processing.XExecutableElement $r17;
        javax.lang.model.element.TypeElement $r19;
        androidx.room.compiler.processing.XTypeElement $r20;
        androidx.room.compiler.processing.XElement $r21;

        $r0 := @parameter0: javax.lang.model.element.Element;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        r2 = $r0;

        $z0 = r2 instanceof javax.lang.model.element.TypeElement;

        if $z0 == 0 goto label1;

        $r18 = <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.compat.XConverters INSTANCE>;

        $r19 = (javax.lang.model.element.TypeElement) $r0;

        $r20 = staticinvoke <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.XTypeElement toXProcessing(javax.lang.model.element.TypeElement,androidx.room.compiler.processing.XProcessingEnv)>($r19, r1);

        $r21 = (androidx.room.compiler.processing.XElement) $r20;

        goto label4;

     label1:
        $z1 = r2 instanceof javax.lang.model.element.ExecutableElement;

        if $z1 == 0 goto label2;

        $r15 = <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.compat.XConverters INSTANCE>;

        $r16 = (javax.lang.model.element.ExecutableElement) $r0;

        $r17 = staticinvoke <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.XExecutableElement toXProcessing(javax.lang.model.element.ExecutableElement,androidx.room.compiler.processing.XProcessingEnv)>($r16, r1);

        $r21 = (androidx.room.compiler.processing.XElement) $r17;

        goto label4;

     label2:
        $z2 = r2 instanceof javax.lang.model.element.VariableElement;

        if $z2 == 0 goto label3;

        $r12 = <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.compat.XConverters INSTANCE>;

        $r13 = (javax.lang.model.element.VariableElement) $r0;

        $r14 = staticinvoke <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.XVariableElement toXProcessing(javax.lang.model.element.VariableElement,androidx.room.compiler.processing.XProcessingEnv)>($r13, r1);

        $r21 = (androidx.room.compiler.processing.XElement) $r14;

        goto label4;

     label3:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Don\'t know how to convert element of type \'");

        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to a XElement");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label4:
        return $r21;
    }

    public static final androidx.room.compiler.processing.XTypeElement toXProcessing(javax.lang.model.element.TypeElement, androidx.room.compiler.processing.XProcessingEnv)
    {
        javax.lang.model.element.TypeElement $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        androidx.room.compiler.processing.javac.JavacTypeElement $r3;
        androidx.room.compiler.processing.XTypeElement $r4;

        $r0 := @parameter0: javax.lang.model.element.TypeElement;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r2 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) r1;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement wrapTypeElement(javax.lang.model.element.TypeElement)>($r0);

        $r4 = (androidx.room.compiler.processing.XTypeElement) $r3;

        return $r4;
    }

    public static final androidx.room.compiler.processing.XExecutableElement toXProcessing(javax.lang.model.element.ExecutableElement, androidx.room.compiler.processing.XProcessingEnv)
    {
        javax.lang.model.element.ExecutableElement $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r3;
        androidx.room.compiler.processing.XExecutableElement $r4;

        $r0 := @parameter0: javax.lang.model.element.ExecutableElement;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r2 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) r1;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacExecutableElement wrapExecutableElement(javax.lang.model.element.ExecutableElement)>($r0);

        $r4 = (androidx.room.compiler.processing.XExecutableElement) $r3;

        return $r4;
    }

    public static final androidx.room.compiler.processing.XVariableElement toXProcessing(javax.lang.model.element.VariableElement, androidx.room.compiler.processing.XProcessingEnv)
    {
        javax.lang.model.element.VariableElement $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        androidx.room.compiler.processing.javac.JavacVariableElement $r3;
        androidx.room.compiler.processing.XVariableElement $r4;

        $r0 := @parameter0: javax.lang.model.element.VariableElement;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r2 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) r1;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacVariableElement wrapVariableElement(javax.lang.model.element.VariableElement)>($r0);

        $r4 = (androidx.room.compiler.processing.XVariableElement) $r3;

        return $r4;
    }

    public static final androidx.room.compiler.processing.XAnnotation toXProcessing(javax.lang.model.element.AnnotationMirror, androidx.room.compiler.processing.XProcessingEnv)
    {
        javax.lang.model.element.AnnotationMirror $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacAnnotation $r2;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r3;
        androidx.room.compiler.processing.XAnnotation $r4;

        $r0 := @parameter0: javax.lang.model.element.AnnotationMirror;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r2 = new androidx.room.compiler.processing.javac.JavacAnnotation;

        $r3 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) r1;

        specialinvoke $r2.<androidx.room.compiler.processing.javac.JavacAnnotation: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.AnnotationMirror)>($r3, $r0);

        $r4 = (androidx.room.compiler.processing.XAnnotation) $r2;

        return $r4;
    }

    public static final androidx.room.compiler.processing.XAnnotationValue toXProcessing(javax.lang.model.element.AnnotationValue, javax.lang.model.element.ExecutableElement, androidx.room.compiler.processing.XProcessingEnv)
    {
        javax.lang.model.element.AnnotationValue $r0;
        javax.lang.model.element.ExecutableElement r1;
        androidx.room.compiler.processing.XProcessingEnv r2;
        androidx.room.compiler.processing.javac.JavacAnnotationValue $r3;
        androidx.room.compiler.processing.compat.XConverters $r4;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r5;
        androidx.room.compiler.processing.XExecutableElement $r6;
        androidx.room.compiler.processing.XMethodElement $r7;
        androidx.room.compiler.processing.XAnnotationValue $r8;

        $r0 := @parameter0: javax.lang.model.element.AnnotationValue;

        r1 := @parameter1: javax.lang.model.element.ExecutableElement;

        r2 := @parameter2: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "method");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "env");

        $r3 = new androidx.room.compiler.processing.javac.JavacAnnotationValue;

        $r5 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) r2;

        $r4 = <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.compat.XConverters INSTANCE>;

        $r6 = staticinvoke <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.XExecutableElement toXProcessing(javax.lang.model.element.ExecutableElement,androidx.room.compiler.processing.XProcessingEnv)>(r1, r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.room.compiler.processing.XMethodElement");

        $r7 = (androidx.room.compiler.processing.XMethodElement) $r6;

        specialinvoke $r3.<androidx.room.compiler.processing.javac.JavacAnnotationValue: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.XMethodElement,javax.lang.model.element.AnnotationValue,androidx.room.compiler.processing.XType,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r5, $r7, $r0, null, null, 24, null);

        $r8 = (androidx.room.compiler.processing.XAnnotationValue) $r3;

        return $r8;
    }

    public static final androidx.room.compiler.processing.XFiler toXProcessing(javax.'annotation'.processing.Filer, androidx.room.compiler.processing.XProcessingEnv)
    {
        javax.'annotation'.processing.Filer $r0;
        androidx.room.compiler.processing.XProcessingEnv r1, $r4;
        androidx.room.compiler.processing.javac.JavacFiler $r2;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r3;
        androidx.room.compiler.processing.XFiler $r5;

        $r0 := @parameter0: javax.'annotation'.processing.Filer;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r2 = new androidx.room.compiler.processing.javac.JavacFiler;

        $r3 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) r1;

        $r4 = (androidx.room.compiler.processing.XProcessingEnv) $r3;

        specialinvoke $r2.<androidx.room.compiler.processing.javac.JavacFiler: void <init>(androidx.room.compiler.processing.XProcessingEnv,javax.'annotation'.processing.Filer)>($r4, $r0);

        $r5 = (androidx.room.compiler.processing.XFiler) $r2;

        return $r5;
    }

    public static final androidx.room.compiler.processing.XMessager toXProcessing(javax.'annotation'.processing.Messager)
    {
        javax.'annotation'.processing.Messager $r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnvMessager $r1;
        androidx.room.compiler.processing.XMessager $r2;

        $r0 := @parameter0: javax.'annotation'.processing.Messager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.room.compiler.processing.javac.JavacProcessingEnvMessager;

        specialinvoke $r1.<androidx.room.compiler.processing.javac.JavacProcessingEnvMessager: void <init>(javax.'annotation'.processing.Messager)>($r0);

        $r2 = (androidx.room.compiler.processing.XMessager) $r1;

        return $r2;
    }

    public static final androidx.room.compiler.processing.XType toXProcessing(javax.lang.model.type.TypeMirror, androidx.room.compiler.processing.XProcessingEnv)
    {
        javax.lang.model.type.TypeMirror $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r2;
        javax.lang.model.type.TypeKind $r3;
        int[] $r4;
        int $i0, $i1;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r5;
        javax.lang.model.type.DeclaredType $r6;
        androidx.room.compiler.processing.javac.JavacArrayType $r7;
        javax.lang.model.type.ArrayType $r8;
        androidx.room.compiler.processing.javac.DefaultJavacType $r9;
        androidx.room.compiler.processing.javac.JavacType $r10;
        androidx.room.compiler.processing.XType $r11;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        r2 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) r1;

        $r3 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r3 != null goto label1;

        $i1 = -1;

        goto label2;

     label1:
        $r4 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r3.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i1 = $r4[$i0];

     label2:
        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label3:
        $r7 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r8 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>($r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "asArray(typeMirror)");

        specialinvoke $r7.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r2, $r8);

        $r10 = (androidx.room.compiler.processing.javac.JavacType) $r7;

        goto label6;

     label4:
        $r5 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r6 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>($r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "asDeclared(typeMirror)");

        specialinvoke $r5.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r2, $r6);

        $r10 = (androidx.room.compiler.processing.javac.JavacType) $r5;

        goto label6;

     label5:
        $r9 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r9.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r2, $r0);

        $r10 = (androidx.room.compiler.processing.javac.JavacType) $r9;

     label6:
        $r11 = (androidx.room.compiler.processing.XType) $r10;

        return $r11;
    }

    public static final com.google.devtools.ksp.symbol.KSClassDeclaration toKS(androidx.room.compiler.processing.XTypeElement)
    {
        androidx.room.compiler.processing.XTypeElement $r0;
        androidx.room.compiler.processing.ksp.KspTypeElement $r1;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XTypeElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.ksp.KspTypeElement) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        return $r2;
    }

    public static final com.google.devtools.ksp.symbol.KSFunctionDeclaration toKS(androidx.room.compiler.processing.XExecutableElement)
    {
        androidx.room.compiler.processing.XExecutableElement $r0, r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2, $r11;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;
        java.lang.Class $r5;
        kotlin.reflect.KClass $r6;
        java.lang.String $r9, $r10, $r12, $r13;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r14;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r15;

        $r0 := @parameter0: androidx.room.compiler.processing.XExecutableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        $z0 = r1 instanceof androidx.room.compiler.processing.ksp.KspExecutableElement;

        if $z0 == 0 goto label1;

        $r14 = (androidx.room.compiler.processing.ksp.KspExecutableElement) $r0;

        $r15 = virtualinvoke $r14.<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration getDeclaration()>();

        goto label3;

     label1:
        $z1 = r1 instanceof androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement;

        if $z1 == 0 goto label2;

        $r11 = new java.lang.IllegalStateException;

        $r12 = "Kotlin properties don\'t have getters/setters in KSP";

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label2:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Don\'t know how to convert element of type \'");

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to KSP");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r2;

     label3:
        return $r15;
    }

    public static final com.google.devtools.ksp.symbol.KSPropertyDeclaration toKS(androidx.room.compiler.processing.XFieldElement)
    {
        androidx.room.compiler.processing.XFieldElement $r0;
        androidx.room.compiler.processing.ksp.KspFieldElement $r1;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XFieldElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.ksp.KspFieldElement) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration getDeclaration()>();

        return $r2;
    }

    public static final com.google.devtools.ksp.symbol.KSValueParameter toKS(androidx.room.compiler.processing.XExecutableParameterElement)
    {
        androidx.room.compiler.processing.XExecutableParameterElement $r0;
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement $r1;
        com.google.devtools.ksp.symbol.KSAnnotated $r2;
        com.google.devtools.ksp.symbol.KSValueParameter $r3;

        $r0 := @parameter0: androidx.room.compiler.processing.XExecutableParameterElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.ksp.KspExecutableParameterElement) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement: com.google.devtools.ksp.symbol.KSAnnotated getDeclaration()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type com.google.devtools.ksp.symbol.KSValueParameter");

        $r3 = (com.google.devtools.ksp.symbol.KSValueParameter) $r2;

        return $r3;
    }

    public static final com.google.devtools.ksp.symbol.KSAnnotation toKS(androidx.room.compiler.processing.XAnnotation)
    {
        androidx.room.compiler.processing.XAnnotation $r0;
        androidx.room.compiler.processing.ksp.KspAnnotation $r1;
        com.google.devtools.ksp.symbol.KSAnnotation $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.ksp.KspAnnotation) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation getKsAnnotated()>();

        return $r2;
    }

    public static final com.google.devtools.ksp.symbol.KSValueArgument toKS(androidx.room.compiler.processing.XAnnotationValue)
    {
        androidx.room.compiler.processing.XAnnotationValue $r0;
        androidx.room.compiler.processing.ksp.KspAnnotationValue $r1;
        com.google.devtools.ksp.symbol.KSValueArgument $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XAnnotationValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.ksp.KspAnnotationValue) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotationValue: com.google.devtools.ksp.symbol.KSValueArgument getValueArgument()>();

        return $r2;
    }

    public static final com.google.devtools.ksp.symbol.KSType toKS(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        androidx.room.compiler.processing.ksp.KspType $r1;
        com.google.devtools.ksp.symbol.KSType $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = (androidx.room.compiler.processing.ksp.KspType) $r0;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        return $r2;
    }

    public static final androidx.room.compiler.processing.XTypeElement toXProcessing(com.google.devtools.ksp.symbol.KSClassDeclaration, androidx.room.compiler.processing.XProcessingEnv)
    {
        com.google.devtools.ksp.symbol.KSClassDeclaration $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        androidx.room.compiler.processing.ksp.KspTypeElement $r3;
        androidx.room.compiler.processing.XTypeElement $r4;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSClassDeclaration;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r2 = (androidx.room.compiler.processing.ksp.KspProcessingEnv) r1;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspTypeElement wrapClassDeclaration(com.google.devtools.ksp.symbol.KSClassDeclaration)>($r0);

        $r4 = (androidx.room.compiler.processing.XTypeElement) $r3;

        return $r4;
    }

    public static final androidx.room.compiler.processing.XExecutableElement toXProcessing(com.google.devtools.ksp.symbol.KSFunctionDeclaration, androidx.room.compiler.processing.XProcessingEnv)
    {
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        androidx.room.compiler.processing.ksp.KspExecutableElement$Companion $r3;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r4;
        androidx.room.compiler.processing.XExecutableElement $r5;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r3 = <androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspExecutableElement$Companion Companion>;

        $r2 = (androidx.room.compiler.processing.ksp.KspProcessingEnv) r1;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspExecutableElement$Companion: androidx.room.compiler.processing.ksp.KspExecutableElement create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSFunctionDeclaration)>($r2, $r0);

        $r5 = (androidx.room.compiler.processing.XExecutableElement) $r4;

        return $r5;
    }

    public static final androidx.room.compiler.processing.XVariableElement toXProcessing(com.google.devtools.ksp.symbol.KSValueParameter, androidx.room.compiler.processing.XProcessingEnv)
    {
        com.google.devtools.ksp.symbol.KSValueParameter $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion $r3;
        androidx.room.compiler.processing.XExecutableParameterElement $r4;
        androidx.room.compiler.processing.XVariableElement $r5;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSValueParameter;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r3 = <androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion Companion>;

        $r2 = (androidx.room.compiler.processing.ksp.KspProcessingEnv) r1;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion: androidx.room.compiler.processing.XExecutableParameterElement create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSValueParameter)>($r2, $r0);

        $r5 = (androidx.room.compiler.processing.XVariableElement) $r4;

        return $r5;
    }

    public static final androidx.room.compiler.processing.XVariableElement toXProcessing(com.google.devtools.ksp.symbol.KSPropertyDeclaration, androidx.room.compiler.processing.XProcessingEnv)
    {
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        androidx.room.compiler.processing.ksp.KspFieldElement$Companion $r3;
        androidx.room.compiler.processing.ksp.KspFieldElement $r4;
        androidx.room.compiler.processing.XVariableElement $r5;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r3 = <androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspFieldElement$Companion Companion>;

        $r2 = (androidx.room.compiler.processing.ksp.KspProcessingEnv) r1;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspFieldElement$Companion: androidx.room.compiler.processing.ksp.KspFieldElement create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSPropertyDeclaration)>($r2, $r0);

        $r5 = (androidx.room.compiler.processing.XVariableElement) $r4;

        return $r5;
    }

    public static final androidx.room.compiler.processing.XAnnotation toXProcessing(com.google.devtools.ksp.symbol.KSAnnotation, androidx.room.compiler.processing.XProcessingEnv)
    {
        com.google.devtools.ksp.symbol.KSAnnotation $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspAnnotation $r2;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r3;
        androidx.room.compiler.processing.XAnnotation $r4;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotation;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r2 = new androidx.room.compiler.processing.ksp.KspAnnotation;

        $r3 = (androidx.room.compiler.processing.ksp.KspProcessingEnv) r1;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotation: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotation)>($r3, $r0);

        $r4 = (androidx.room.compiler.processing.XAnnotation) $r2;

        return $r4;
    }

    public static final androidx.room.compiler.processing.XAnnotationValue toXProcessing(com.google.devtools.ksp.symbol.KSValueArgument, androidx.room.compiler.processing.XProcessingEnv)
    {
        com.google.devtools.ksp.symbol.KSValueArgument $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspAnnotation r2;
        androidx.room.compiler.processing.compat.XConverters $r3;
        com.google.devtools.ksp.symbol.KSNode $r4;
        com.google.devtools.ksp.symbol.KSAnnotation $r5;
        androidx.room.compiler.processing.XAnnotation $r6;
        androidx.room.compiler.processing.ksp.KspAnnotationValue $r7;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r8;
        androidx.room.compiler.processing.XType $r9;
        androidx.room.compiler.processing.XAnnotationValue $r10;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSValueArgument;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r3 = <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.compat.XConverters INSTANCE>;

        $r4 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSValueArgument: com.google.devtools.ksp.symbol.KSNode getParent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type com.google.devtools.ksp.symbol.KSAnnotation");

        $r5 = (com.google.devtools.ksp.symbol.KSAnnotation) $r4;

        $r6 = staticinvoke <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.XAnnotation toXProcessing(com.google.devtools.ksp.symbol.KSAnnotation,androidx.room.compiler.processing.XProcessingEnv)>($r5, r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.room.compiler.processing.ksp.KspAnnotation");

        r2 = (androidx.room.compiler.processing.ksp.KspAnnotation) $r6;

        $r7 = new androidx.room.compiler.processing.ksp.KspAnnotationValue;

        $r8 = (androidx.room.compiler.processing.ksp.KspProcessingEnv) r1;

        $r9 = virtualinvoke r2.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.XType getType()>();

        specialinvoke $r7.<androidx.room.compiler.processing.ksp.KspAnnotationValue: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspAnnotation,androidx.room.compiler.processing.XType,com.google.devtools.ksp.symbol.KSValueArgument,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r8, r2, $r9, $r0, null, 16, null);

        $r10 = (androidx.room.compiler.processing.XAnnotationValue) $r7;

        return $r10;
    }

    public static final androidx.room.compiler.processing.XType toXProcessing(com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.XProcessingEnv)
    {
        com.google.devtools.ksp.symbol.KSType $r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        androidx.room.compiler.processing.ksp.KspType $r3;
        androidx.room.compiler.processing.XType $r4;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        $r2 = (androidx.room.compiler.processing.ksp.KspProcessingEnv) r1;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspType wrap(com.google.devtools.ksp.symbol.KSType,boolean)>($r0, 1);

        $r4 = (androidx.room.compiler.processing.XType) $r3;

        return $r4;
    }

    public static final androidx.room.compiler.processing.XProcessingEnv getProcessingEnv(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0, r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7;
        androidx.room.compiler.processing.ksp.KspType $r8;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r9;
        androidx.room.compiler.processing.javac.JavacType $r10;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r11;
        androidx.room.compiler.processing.XProcessingEnv $r12;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacType;

        if $z0 == 0 goto label1;

        $r10 = (androidx.room.compiler.processing.javac.JavacType) $r0;

        $r11 = virtualinvoke $r10.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r11;

        goto label3;

     label1:
        $z1 = r1 instanceof androidx.room.compiler.processing.ksp.KspType;

        if $z1 == 0 goto label2;

        $r8 = (androidx.room.compiler.processing.ksp.KspType) $r0;

        $r9 = virtualinvoke $r8.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r9;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected type: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        return $r12;
    }

    public static final androidx.room.compiler.processing.XProcessingEnv getProcessingEnv(androidx.room.compiler.processing.XElement)
    {
        androidx.room.compiler.processing.XElement $r0, r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7;
        androidx.room.compiler.processing.ksp.KspElement $r8;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r9;
        androidx.room.compiler.processing.javac.JavacElement $r10;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r11;
        androidx.room.compiler.processing.XProcessingEnv $r12;

        $r0 := @parameter0: androidx.room.compiler.processing.XElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacElement;

        if $z0 == 0 goto label1;

        $r10 = (androidx.room.compiler.processing.javac.JavacElement) $r0;

        $r11 = virtualinvoke $r10.<androidx.room.compiler.processing.javac.JavacElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r11;

        goto label3;

     label1:
        $z1 = r1 instanceof androidx.room.compiler.processing.ksp.KspElement;

        if $z1 == 0 goto label2;

        $r8 = (androidx.room.compiler.processing.ksp.KspElement) $r0;

        $r9 = virtualinvoke $r8.<androidx.room.compiler.processing.ksp.KspElement: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv$room_compiler_processing()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r9;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected element: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        return $r12;
    }

    public static final androidx.room.compiler.processing.XProcessingEnv getProcessingEnv(androidx.room.compiler.processing.XAnnotation)
    {
        androidx.room.compiler.processing.XAnnotation $r0, r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7;
        androidx.room.compiler.processing.ksp.KspAnnotation $r8;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r9;
        androidx.room.compiler.processing.javac.JavacAnnotation $r10;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r11;
        androidx.room.compiler.processing.XProcessingEnv $r12;

        $r0 := @parameter0: androidx.room.compiler.processing.XAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacAnnotation;

        if $z0 == 0 goto label1;

        $r10 = (androidx.room.compiler.processing.javac.JavacAnnotation) $r0;

        $r11 = virtualinvoke $r10.<androidx.room.compiler.processing.javac.JavacAnnotation: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r11;

        goto label3;

     label1:
        $z1 = r1 instanceof androidx.room.compiler.processing.ksp.KspAnnotation;

        if $z1 == 0 goto label2;

        $r8 = (androidx.room.compiler.processing.ksp.KspAnnotation) $r0;

        $r9 = virtualinvoke $r8.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r9;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected annotation type: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        return $r12;
    }

    public static final androidx.room.compiler.processing.XProcessingEnv getProcessingEnv(androidx.room.compiler.processing.XAnnotationValue)
    {
        androidx.room.compiler.processing.XAnnotationValue $r0, r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7;
        androidx.room.compiler.processing.ksp.KspAnnotationValue $r8;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r9;
        androidx.room.compiler.processing.javac.JavacAnnotationValue $r10;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r11;
        androidx.room.compiler.processing.XProcessingEnv $r12;

        $r0 := @parameter0: androidx.room.compiler.processing.XAnnotationValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacAnnotationValue;

        if $z0 == 0 goto label1;

        $r10 = (androidx.room.compiler.processing.javac.JavacAnnotationValue) $r0;

        $r11 = virtualinvoke $r10.<androidx.room.compiler.processing.javac.JavacAnnotationValue: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r11;

        goto label3;

     label1:
        $z1 = r1 instanceof androidx.room.compiler.processing.ksp.KspAnnotationValue;

        if $z1 == 0 goto label2;

        $r8 = (androidx.room.compiler.processing.ksp.KspAnnotationValue) $r0;

        $r9 = virtualinvoke $r8.<androidx.room.compiler.processing.ksp.KspAnnotationValue: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r9;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected annotation value: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        return $r12;
    }

    public static final androidx.room.compiler.processing.XProcessingEnv getProcessingEnv(androidx.room.compiler.processing.XExecutableType)
    {
        androidx.room.compiler.processing.XExecutableType $r0, r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7;
        androidx.room.compiler.processing.ksp.KspExecutableType $r8;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r9;
        androidx.room.compiler.processing.javac.JavacExecutableType $r10;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r11;
        androidx.room.compiler.processing.XProcessingEnv $r12;

        $r0 := @parameter0: androidx.room.compiler.processing.XExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacExecutableType;

        if $z0 == 0 goto label1;

        $r10 = (androidx.room.compiler.processing.javac.JavacExecutableType) $r0;

        $r11 = virtualinvoke $r10.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r11;

        goto label3;

     label1:
        $z1 = r1 instanceof androidx.room.compiler.processing.ksp.KspExecutableType;

        if $z1 == 0 goto label2;

        $r8 = (androidx.room.compiler.processing.ksp.KspExecutableType) $r0;

        $r9 = virtualinvoke $r8.<androidx.room.compiler.processing.ksp.KspExecutableType: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r12 = (androidx.room.compiler.processing.XProcessingEnv) $r9;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected executable type: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        return $r12;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.compat.XConverters $r0;

        $r0 = new androidx.room.compiler.processing.compat.XConverters;

        specialinvoke $r0.<androidx.room.compiler.processing.compat.XConverters: void <init>()>();

        <androidx.room.compiler.processing.compat.XConverters: androidx.room.compiler.processing.compat.XConverters INSTANCE> = $r0;

        return;
    }

