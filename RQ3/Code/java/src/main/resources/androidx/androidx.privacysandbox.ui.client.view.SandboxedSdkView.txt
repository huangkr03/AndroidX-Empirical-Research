androidx.privacysandbox.ui.client.view.SandboxedSdkView
<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.core.SandboxedUiAdapter adapter>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isZOrderOnTop>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView: java.util.function.Consumer errorConsumer>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView: android.view.View contentView>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int requestedWidth>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int requestedHeight>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isTransitionGroupSet>
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isZOrderOnTop> = 1;

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int requestedWidth> = -1;

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int requestedHeight> = -1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        android.content.Context r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        android.util.AttributeSet r3;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: android.content.Context;

        r3 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r3);

        return;
    }

    public final void setAdapter(androidx.privacysandbox.ui.core.SandboxedUiAdapter)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter r1, $r2;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client $r3;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: androidx.privacysandbox.ui.core.SandboxedUiAdapter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sandboxedUiAdapter");

        $r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.core.SandboxedUiAdapter adapter>;

        if $r2 != r1 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client>;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: void close()>();

        goto label2;

     label2:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client> = null;

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.core.SandboxedUiAdapter adapter> = r1;

        specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void checkClientOpenSession()>();

        return;
    }

    public final void setSdkErrorConsumer(java.util.function.Consumer)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        java.util.function.Consumer r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: java.util.function.Consumer;

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: java.util.function.Consumer errorConsumer> = r1;

        return;
    }

    public final void setZOrderOnTopAndEnableUserInteraction(boolean)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        boolean z0, $z1;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isZOrderOnTop>;

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isZOrderOnTop> = z0;

        specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void checkClientOpenSession()>();

        $r1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client>;

        if $r1 == null goto label2;

        virtualinvoke $r1.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: void notifyZOrderChanged(boolean)>(z0);

        goto label2;

     label2:
        return;
    }

    private final void checkClientOpenSession()
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter r1;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client $r2, $r3, $r7;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r4;
        android.os.Handler $r5;
        java.util.concurrent.Executor $r6;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient $r8;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.core.SandboxedUiAdapter adapter>;

        $r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client>;

        if $r2 != null goto label1;

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int getWidth()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int getHeight()>();

        if $i1 <= 0 goto label1;

        $r3 = new androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        specialinvoke $r3.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: void <init>(androidx.privacysandbox.ui.client.view.SandboxedSdkView)>(r0);

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client> = $r3;

        $r4 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: android.content.Context getContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "context");

        $i2 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int getWidth()>();

        $i3 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int getHeight()>();

        $z1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isZOrderOnTop>;

        $r5 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: android.os.Handler getHandler()>();

        $r6 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>($r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_STATIC" <androidx.privacysandbox.ui.client.view.SandboxedSdkView: void checkClientOpenSession$post(android.os.Handler,java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r7 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        $r8 = (androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient) $r7;

        interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter: void openSession(android.content.Context,int,int,boolean,java.util.concurrent.Executor,androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient)>($r4, $i2, $i3, $z1, $r6, $r8);

     label1:
        return;
    }

    public final void requestSize$ui_client_release(int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        int i0, i1, $i2, $i3;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int getWidth()>();

        if i0 != $i2 goto label1;

        $i3 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int getHeight()>();

        if i1 != $i3 goto label1;

        return;

     label1:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int requestedWidth> = i0;

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int requestedHeight> = i1;

        virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void requestLayout()>();

        return;
    }

    public final void removeContentView$ui_client_release()
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        int $i0;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        $i0 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int getChildCount()>();

        if $i0 != 1 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void removeViewAt(int)>(0);

     label1:
        return;
    }

    public final void setContentView$ui_client_release(android.view.View)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        android.view.View r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2, $r3, $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "contentView");

        $i0 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int getChildCount()>();

        if $i0 <= 1 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Number of children views must not exceed 1");

        throw $r5;

     label1:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: android.view.View contentView> = r1;

        virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void removeContentView$ui_client_release()>();

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r2 != null goto label2;

        $r4 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, 0, $r4);

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, 0, $r3);

     label3:
        return;
    }

    private final int calculateMeasuredDimension(int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        lookupswitch($i3)
        {
            case -2147483648: goto label5;
            case 0: goto label2;
            case 1073741824: goto label1;
            default: goto label8;
        };

     label1:
        return i2;

     label2:
        if i0 >= 0 goto label3;

        $i4 = i2;

        goto label4;

     label3:
        $i4 = i0;

     label4:
        return $i4;

     label5:
        if i0 < 0 goto label6;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        goto label7;

     label6:
        $i5 = i2;

     label7:
        return $i5;

     label8:
        return i2;
    }

    protected void onMeasure(int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int requestedWidth>;

        i2 = specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int calculateMeasuredDimension(int,int)>($i4, i0);

        $i5 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int requestedHeight>;

        i3 = specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: int calculateMeasuredDimension(int,int)>($i5, i1);

        virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void setMeasuredDimension(int,int)>(i2, i3);

        return;
    }

    public boolean isTransitionGroup()
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        $z0 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isTransitionGroupSet>;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean isTransitionGroup()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void setTransitionGroup(boolean)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        boolean z0;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.ViewGroup: void setTransitionGroup(boolean)>(z0);

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isTransitionGroupSet> = 1;

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        boolean z0;
        int i0, i1, i2, i3;
        android.view.View $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = virtualinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: android.view.View getChildAt(int)>(0);

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>(i0, i1, i2, i3);

        goto label1;

     label1:
        specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void checkClientOpenSession()>();

        return;
    }

    protected void onAttachedToWindow()
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void checkClientOpenSession()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        $r1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: void close()>();

        goto label1;

     label1:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client> = null;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        int i0, i1, i2, i3;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void checkClientOpenSession()>();

        $r1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: void notifyResized(int,int)>(i0, i1);

        goto label1;

     label1:
        return;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        android.content.res.Configuration r1;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r5;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: android.content.res.Configuration;

        if r1 != null goto label1;

        $r5 = "Config cannot be null";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void checkClientOpenSession()>();

        $r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client client>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: void notifyConfigurationChanged(android.content.res.Configuration)>(r1);

        goto label2;

     label2:
        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot add a view to SandboxedSdkView");

        throw $r3;
    }

    public void removeView(android.view.View)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        android.view.View r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: android.view.View;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove a view from SandboxedSdkView");

        throw $r2;
    }

    public void removeViewInLayout(android.view.View)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        android.view.View r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: android.view.View;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove a view from SandboxedSdkView");

        throw $r2;
    }

    public void removeViewsInLayout(int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        int i0, i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove a view from SandboxedSdkView");

        throw $r1;
    }

    public void removeViewAt(int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove a view from SandboxedSdkView");

        throw $r1;
    }

    public void removeViews(int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        int i0, i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove a view from SandboxedSdkView");

        throw $r1;
    }

    public void removeAllViews()
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove a view from SandboxedSdkView");

        throw $r1;
    }

    public void removeAllViewsInLayout()
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove a view from SandboxedSdkView");

        throw $r1;
    }

    public void <init>(android.content.Context)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r0;
        android.content.Context r1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void <init>(android.content.Context,android.util.AttributeSet,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 2, null);

        return;
    }

    private static final void checkClientOpenSession$post(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        virtualinvoke $r0.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        return;
    }

    public static final boolean access$isZOrderOnTop$p(androidx.privacysandbox.ui.client.view.SandboxedSdkView)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        $z0 = $r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean isZOrderOnTop>;

        return $z0;
    }

    public static final java.util.function.Consumer access$getErrorConsumer$p(androidx.privacysandbox.ui.client.view.SandboxedSdkView)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView $r0;
        java.util.function.Consumer $r1;

        $r0 := @parameter0: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        $r1 = $r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: java.util.function.Consumer errorConsumer>;

        return $r1;
    }

androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client
<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Integer pendingWidth>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Integer pendingHeight>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Boolean pendingZOrderOnTop>
<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: android.content.res.Configuration pendingConfiguration>
    public void <init>(androidx.privacysandbox.ui.client.view.SandboxedSdkView)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client r0;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        r1 := @parameter0: androidx.privacysandbox.ui.client.view.SandboxedSdkView;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView> = r1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Boolean pendingZOrderOnTop> = $r2;

        return;
    }

    public final void notifyConfigurationChanged(android.content.res.Configuration)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client r0;
        android.content.res.Configuration r1;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session r2;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        r1 := @parameter0: android.content.res.Configuration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "configuration");

        r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>;

        if r2 == null goto label1;

        interfaceinvoke r2.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void notifyConfigurationChanged(android.content.res.Configuration)>(r1);

        goto label2;

     label1:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: android.content.res.Configuration pendingConfiguration> = r1;

     label2:
        return;
    }

    public final void notifyResized(int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client r0;
        int i0, i1;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session r1;
        java.lang.Integer $r2, $r3;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>;

        if r1 == null goto label1;

        interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void notifyResized(int,int)>(i0, i1);

        goto label2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Integer pendingWidth> = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Integer pendingHeight> = $r3;

     label2:
        return;
    }

    public final void notifyZOrderChanged(boolean)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client r0;
        boolean z0, $z1, $z2;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session r1;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r2 == null goto label2;

        $z1 = staticinvoke <androidx.privacysandbox.ui.client.view.SandboxedSdkView: boolean access$isZOrderOnTop$p(androidx.privacysandbox.ui.client.view.SandboxedSdkView)>($r2);

        if $z1 != z0 goto label1;

        $z2 = 1;

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label4;

        return;

     label4:
        r1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>;

        if r1 == null goto label5;

        interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void notifyZOrderChanged(boolean)>(z0);

        goto label6;

     label5:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Boolean pendingZOrderOnTop> = $r3;

     label6:
        return;
    }

    public final void close()
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client r0;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView $r1;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session $r2;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        $r1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void removeContentView$ui_client_release()>();

        goto label1;

     label1:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView> = null;

        $r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>;

        if $r2 == null goto label2;

        interfaceinvoke $r2.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void close()>();

        goto label2;

     label2:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session> = null;

        return;
    }

    public void onSessionOpened(androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client r0;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session r1;
        java.lang.Integer r2, r3;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView $r4, $r5;
        java.lang.Boolean $r6;
        int $i0, $i1, $i2, $i3;
        android.view.View $r7;
        android.content.res.Configuration $r8, r9;
        boolean z1;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        r1 := @parameter0: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "session");

        $r4 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r4 != null goto label1;

        interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void close()>();

        return;

     label1:
        $r5 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r5 == null goto label2;

        $r7 = interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: android.view.View getView()>();

        virtualinvoke $r5.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void setContentView$ui_client_release(android.view.View)>($r7);

        goto label2;

     label2:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session> = r1;

        r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Integer pendingWidth>;

        r3 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Integer pendingHeight>;

        if r2 == null goto label3;

        if r3 == null goto label3;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i0 < 0 goto label3;

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i1 < 0 goto label3;

        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void notifyResized(int,int)>($i2, $i3);

     label3:
        $r8 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: android.content.res.Configuration pendingConfiguration>;

        if $r8 == null goto label4;

        r9 = $r8;

        interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void notifyConfigurationChanged(android.content.res.Configuration)>(r9);

        goto label4;

     label4:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: android.content.res.Configuration pendingConfiguration> = null;

        $r6 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: java.lang.Boolean pendingZOrderOnTop>;

        if $r6 == null goto label5;

        z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void notifyZOrderChanged(boolean)>(z1);

        goto label5;

     label5:
        return;
    }

    public void onSessionError(java.lang.Throwable)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client r0;
        java.lang.Throwable r1;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView $r2, $r3, $r4;
        java.util.function.Consumer $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "throwable");

        $r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void removeContentView$ui_client_release()>();

        goto label2;

     label2:
        $r4 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r4 == null goto label3;

        $r5 = staticinvoke <androidx.privacysandbox.ui.client.view.SandboxedSdkView: java.util.function.Consumer access$getErrorConsumer$p(androidx.privacysandbox.ui.client.view.SandboxedSdkView)>($r4);

        if $r5 == null goto label3;

        interfaceinvoke $r5.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label4;

     label3:
        $r6 = null;

     label4:
        if $r6 != null goto label5;

        throw r1;

     label5:
        r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView> = null;

        return;
    }

    public void onResizeRequested(int, int)
    {
        androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client r0;
        int i0, i1;
        androidx.privacysandbox.ui.client.view.SandboxedSdkView $r1, $r2;

        r0 := @this: androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.privacysandbox.ui.client.view.SandboxedSdkView$Client: androidx.privacysandbox.ui.client.view.SandboxedSdkView sandboxedSdkView>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<androidx.privacysandbox.ui.client.view.SandboxedSdkView: void requestSize$ui_client_release(int,int)>(i0, i1);

        goto label2;

     label2:
        return;
    }

