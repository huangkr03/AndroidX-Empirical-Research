androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: androidx.test.espresso.web.bridge.JavaScriptBoundBridge boundBridge>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: java.lang.String WEB_CORE_CLAZZ>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: java.lang.String WEB_CORE_HANDLER>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: java.lang.String JAVASCRIPT_INTERFACES>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: java.lang.String CALLBACK_PROXY_CLAZZ>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: java.lang.String SET_WEB_CHROME_CLIENT_METHOD>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: java.lang.String CALLBACK_PROXY_FIELD>
    static volatile androidx.test.espresso.web.bridge.JavaScriptBoundBridge '-$$Nest$sfgetboundBridge'()
    {
        androidx.test.espresso.web.bridge.JavaScriptBoundBridge $r0;

        $r0 = <androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: androidx.test.espresso.web.bridge.JavaScriptBoundBridge boundBridge>;

        return $r0;
    }

    public androidx.test.espresso.web.bridge.JavaScriptBoundBridge install() throws androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException
    {
        java.lang.Class r0, r17;
        java.lang.reflect.Field r1, r2, r16;
        java.lang.Object $r3, $r7;
        androidx.test.espresso.web.bridge.JavaScriptBoundBridge $r4;
        android.webkit.WebView $r5;
        android.content.Context $r6;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, $r14, r23, r25, r27, r29, r31, r32, r33;
        androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller r15;
        int i2;
        java.lang.String r18;
        java.lang.Class[] r19;
        java.lang.reflect.Method r20;
        android.os.Handler r21;
        androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy r22;
        androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException r24, r26, r28, r30;

        r15 := @this: androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller;

     label01:
        r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.webkit.WebViewCore");

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("sWebCoreHandler");

        r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mJavascriptInterfaces");

     label02:
        i2 = <android.os.Build$VERSION: int SDK_INT>;

     label03:
        if i2 >= 13 goto label19;

     label04:
        r16 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mCallbackProxy");

        r17 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.webkit.CallbackProxy");

        r18 = "setWebChromeClient";

        r19 = newarray (java.lang.Class)[1];

     label05:
        r19[0] = class "Landroid/webkit/WebChromeClient;";

        r20 = virtualinvoke r17.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r18, r19);

        virtualinvoke r16.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        virtualinvoke r20.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label06:
        virtualinvoke r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        entermonitor r0;

     label07:
        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        r21 = (android.os.Handler) $r3;

     label08:
        if r21 == null goto label10;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("JS_BRIDGE", "Initializing late - some webviews may be unbridged.");

     label10:
        exitmonitor r0;

     label11:
        if r21 != null goto label16;

     label12:
        $r5 = new android.webkit.WebView;

        $r6 = staticinvoke <androidx.test.InstrumentationRegistry: android.content.Context getTargetContext()>();

        specialinvoke $r5.<android.webkit.WebView: void <init>(android.content.Context)>($r6);

     label13:
        if r21 != null goto label16;

     label14:
        entermonitor r0;

     label15:
        $r7 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        r21 = (android.os.Handler) $r7;

        exitmonitor r0;

        goto label13;

     label16:
        r22 = new androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy;

        specialinvoke r22.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: void <init>(android.os.Handler,java.lang.reflect.Field,java.lang.reflect.Field,java.lang.reflect.Method,androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy-IA)>(r21, r2, r16, r20, null);

        entermonitor r0;

     label17:
        virtualinvoke r1.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r22);

        exitmonitor r0;

     label18:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("JS_BRIDGE", "Initialized web view bridging for android WebView.");

        $r4 = <androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: androidx.test.espresso.web.bridge.JavaScriptBoundBridge boundBridge>;

        return $r4;

     label19:
        r16 = null;

        r20 = null;

        goto label06;

     label20:
        $r14 := @caughtexception;

        r23 = $r14;

        r24 = new androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException;

        specialinvoke r24.<androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException: void <init>(java.lang.Throwable)>(r23);

        throw r24;

     label21:
        $r11 := @caughtexception;

        r25 = $r11;

        r26 = new androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException;

        specialinvoke r26.<androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException: void <init>(java.lang.Throwable)>(r25);

        throw r26;

     label22:
        $r12 := @caughtexception;

        r27 = $r12;

        r28 = new androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException;

        specialinvoke r28.<androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException: void <init>(java.lang.Throwable)>(r27);

        throw r28;

     label23:
        $r9 := @caughtexception;

        r29 = $r9;

        r30 = new androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException;

        specialinvoke r30.<androidx.test.espresso.web.bridge.JavaScriptBridgeInstallException: void <init>(java.lang.Throwable)>(r29);

        throw r30;

     label24:
        $r13 := @caughtexception;

        r31 = $r13;

     label25:
        exitmonitor r0;

     label26:
        throw r31;

     label27:
        $r8 := @caughtexception;

        r32 = $r8;

     label28:
        exitmonitor r0;

     label29:
        throw r32;

     label30:
        $r10 := @caughtexception;

        r33 = $r10;

     label31:
        exitmonitor r0;

     label32:
        throw r33;

     label33:
        nop;

        catch java.lang.ClassNotFoundException from label01 to label02 with label20;
        catch java.lang.NoSuchFieldException from label01 to label02 with label21;
        catch java.lang.NoSuchMethodException from label01 to label02 with label22;
        catch java.lang.IllegalAccessException from label01 to label02 with label23;
        catch java.lang.ClassNotFoundException from label02 to label03 with label20;
        catch java.lang.NoSuchFieldException from label02 to label03 with label21;
        catch java.lang.NoSuchMethodException from label02 to label03 with label22;
        catch java.lang.IllegalAccessException from label02 to label03 with label23;
        catch java.lang.ClassNotFoundException from label04 to label05 with label20;
        catch java.lang.NoSuchFieldException from label04 to label05 with label21;
        catch java.lang.NoSuchMethodException from label04 to label05 with label22;
        catch java.lang.IllegalAccessException from label04 to label05 with label23;
        catch java.lang.ClassNotFoundException from label05 to label07 with label20;
        catch java.lang.NoSuchFieldException from label05 to label07 with label21;
        catch java.lang.NoSuchMethodException from label05 to label07 with label22;
        catch java.lang.IllegalAccessException from label05 to label07 with label23;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label09 to label11 with label24;
        catch java.lang.ClassNotFoundException from label12 to label13 with label20;
        catch java.lang.NoSuchFieldException from label12 to label13 with label21;
        catch java.lang.NoSuchMethodException from label12 to label13 with label22;
        catch java.lang.IllegalAccessException from label12 to label13 with label23;
        catch java.lang.ClassNotFoundException from label14 to label15 with label20;
        catch java.lang.NoSuchFieldException from label14 to label15 with label21;
        catch java.lang.NoSuchMethodException from label14 to label15 with label22;
        catch java.lang.IllegalAccessException from label14 to label15 with label23;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.ClassNotFoundException from label16 to label17 with label20;
        catch java.lang.NoSuchFieldException from label16 to label17 with label21;
        catch java.lang.NoSuchMethodException from label16 to label17 with label22;
        catch java.lang.IllegalAccessException from label16 to label17 with label23;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.ClassNotFoundException from label26 to label27 with label20;
        catch java.lang.NoSuchFieldException from label26 to label27 with label21;
        catch java.lang.NoSuchMethodException from label26 to label27 with label22;
        catch java.lang.IllegalAccessException from label26 to label27 with label23;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.ClassNotFoundException from label29 to label30 with label20;
        catch java.lang.NoSuchFieldException from label29 to label30 with label21;
        catch java.lang.NoSuchMethodException from label29 to label30 with label22;
        catch java.lang.IllegalAccessException from label29 to label30 with label23;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.lang.ClassNotFoundException from label32 to label33 with label20;
        catch java.lang.NoSuchFieldException from label32 to label33 with label21;
        catch java.lang.NoSuchMethodException from label32 to label33 with label22;
        catch java.lang.IllegalAccessException from label32 to label33 with label23;
    }

    static void <clinit>()
    {
        androidx.test.espresso.web.bridge.JavaScriptBoundBridge r0;

        r0 = new androidx.test.espresso.web.bridge.JavaScriptBoundBridge;

        specialinvoke r0.<androidx.test.espresso.web.bridge.JavaScriptBoundBridge: void <init>()>();

        <androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: androidx.test.espresso.web.bridge.JavaScriptBoundBridge boundBridge> = r0;

        return;
    }

    void <init>()
    {
        androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller r0;

        r0 := @this: androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy-IA
androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: android.os.Handler realHandler>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Field javascriptInterfacesField>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Field callbackProxyField>
<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Method setWebViewClientMethod>
    private void <init>(android.os.Handler, java.lang.reflect.Field, java.lang.reflect.Field, java.lang.reflect.Method)
    {
        androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy r0;
        android.os.Handler r1, $r7;
        java.lang.reflect.Field r2, r3, $r9;
        java.lang.reflect.Method r4;
        android.os.Looper $r5;
        java.lang.Object $r6, $r8;

        r0 := @this: androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: java.lang.reflect.Field;

        r3 := @parameter2: java.lang.reflect.Field;

        r4 := @parameter3: java.lang.reflect.Method;

        $r5 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        $r6 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (android.os.Handler) $r6;

        r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: android.os.Handler realHandler> = $r7;

        $r8 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.lang.reflect.Field) $r8;

        r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Field javascriptInterfacesField> = $r9;

        r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Field callbackProxyField> = r3;

        r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Method setWebViewClientMethod> = r4;

        return;
    }

    void <init>(android.os.Handler, java.lang.reflect.Field, java.lang.reflect.Field, java.lang.reflect.Method, androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy-IA)
    {
        androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy r0;
        android.os.Handler r1;
        java.lang.reflect.Field r2, r3;
        java.lang.reflect.Method r4;
        androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy-IA r5;

        r0 := @this: androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: java.lang.reflect.Field;

        r3 := @parameter2: java.lang.reflect.Field;

        r4 := @parameter3: java.lang.reflect.Method;

        r5 := @parameter4: androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy-IA;

        specialinvoke r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: void <init>(android.os.Handler,java.lang.reflect.Field,java.lang.reflect.Field,java.lang.reflect.Method)>(r1, r2, r3, r4);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy r0;
        android.os.Message r1;
        android.os.Handler $r2;

        r0 := @this: androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: android.os.Handler realHandler>;

        virtualinvoke $r2.<android.os.Handler: void handleMessage(android.os.Message)>(r1);

        return;
    }

    public boolean sendMessageAtTime(android.os.Message, long)
    {
        androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy r0;
        android.os.Message r1;
        long l0;
        java.lang.Object[] r2;
        android.webkit.WebChromeClient r3, r23;
        int $i1, i4;
        java.lang.Object $r4, $r6, $r9, $r12, r16, r18;
        java.lang.reflect.Field $r5, $r10, $r13;
        androidx.test.espresso.web.bridge.JavaScriptBoundBridge $r7;
        java.lang.Throwable $r14, $r15, r20, r21;
        java.lang.String r17;
        java.lang.reflect.Method r19;
        boolean $z0;
        java.util.HashMap r22;
        java.util.Map r24;

        r0 := @this: androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy;

        r1 := @parameter0: android.os.Message;

        l0 := @parameter1: long;

        $i1 = r1.<android.os.Message: int what>;

        if $i1 != 0 goto label09;

     label01:
        $r5 = r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Field javascriptInterfacesField>;

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r4);

        r16 = (java.util.Map) $r6;

     label02:
        if r16 != null goto label04;

     label03:
        r22 = new java.util.HashMap;

        r16 = r22;

        specialinvoke r22.<java.util.HashMap: void <init>()>();

        $r13 = r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Field javascriptInterfacesField>;

        $r12 = r1.<android.os.Message: java.lang.Object obj>;

        virtualinvoke $r13.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r12, r16);

     label04:
        r17 = "__g_wd_jsb";

     label05:
        $r7 = staticinvoke <androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller: androidx.test.espresso.web.bridge.JavaScriptBoundBridge '-$$Nest$sfgetboundBridge'()>();

        r24 = (java.util.Map) r16;

        interfaceinvoke r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r7);

        i4 = <android.os.Build$VERSION: int SDK_INT>;

     label06:
        if i4 >= 13 goto label09;

     label07:
        $r10 = r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Field callbackProxyField>;

        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r18 = virtualinvoke $r10.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r9);

        r19 = r0.<androidx.test.espresso.web.bridge.AndroidJavaScriptBridgeInstaller$WebCoreHandlerSpy: java.lang.reflect.Method setWebViewClientMethod>;

        r2 = newarray (java.lang.Object)[1];

     label08:
        r23 = new android.webkit.WebChromeClient;

        r3 = r23;

        specialinvoke r23.<android.webkit.WebChromeClient: void <init>()>();

        r2[0] = r3;

        virtualinvoke r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r18, r2);

     label09:
        $z0 = specialinvoke r0.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>(r1, l0);

        return $z0;

     label10:
        $r15 := @caughtexception;

        r20 = $r15;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JS_BRIDGE", "Couldn\'t initialize js bridge in webview!", r20);

        goto label09;

     label11:
        $r14 := @caughtexception;

        r21 = $r14;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JS_BRIDGE", "Couldn\'t initialize js bridge in webview!", r21);

        goto label09;

        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label05 with label10;
        catch java.lang.reflect.InvocationTargetException from label03 to label05 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label08 to label09 with label10;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label11;
    }

