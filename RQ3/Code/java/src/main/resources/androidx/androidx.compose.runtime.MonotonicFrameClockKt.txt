androidx.compose.runtime.MonotonicFrameClockKt
    public static final java.lang.Object withFrameMillis(androidx.compose.runtime.MonotonicFrameClock, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.runtime.MonotonicFrameClock $r0;
        kotlin.jvm.functions.Function1 r1, $r4;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2 $r3;
        java.lang.Object $r5;

        $r0 := @parameter0: androidx.compose.runtime.MonotonicFrameClock;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2;

        specialinvoke $r3.<androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = interfaceinvoke $r0.<androidx.compose.runtime.MonotonicFrameClock: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r4, $r2);

        return $r5;
    }

    private static final java.lang.Object withFrameMillis$$forInline(androidx.compose.runtime.MonotonicFrameClock, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.runtime.MonotonicFrameClock $r0;
        kotlin.jvm.functions.Function1 r1, $r4;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2 $r3;
        java.lang.Object $r5;

        $r0 := @parameter0: androidx.compose.runtime.MonotonicFrameClock;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2;

        specialinvoke $r3.<androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        $r5 = interfaceinvoke $r0.<androidx.compose.runtime.MonotonicFrameClock: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r4, $r2);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        return $r5;
    }

    public static final java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.jvm.functions.Function1 r0;
        kotlin.coroutines.Continuation $r1;
        kotlin.coroutines.CoroutineContext $r2;
        androidx.compose.runtime.MonotonicFrameClock $r3;
        java.lang.Object $r4;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r3 = staticinvoke <androidx.compose.runtime.MonotonicFrameClockKt: androidx.compose.runtime.MonotonicFrameClock getMonotonicFrameClock(kotlin.coroutines.CoroutineContext)>($r2);

        $r4 = interfaceinvoke $r3.<androidx.compose.runtime.MonotonicFrameClock: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r0, $r1);

        return $r4;
    }

    public static final java.lang.Object withFrameMillis(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.jvm.functions.Function1 r0, $r5;
        kotlin.coroutines.Continuation $r1;
        androidx.compose.runtime.MonotonicFrameClock $r2;
        kotlin.coroutines.CoroutineContext $r3;
        androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2 $r4;
        java.lang.Object $r6;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r2 = staticinvoke <androidx.compose.runtime.MonotonicFrameClockKt: androidx.compose.runtime.MonotonicFrameClock getMonotonicFrameClock(kotlin.coroutines.CoroutineContext)>($r3);

        $r4 = new androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2;

        specialinvoke $r4.<androidx.compose.runtime.MonotonicFrameClockKt$withFrameMillis$2: void <init>(kotlin.jvm.functions.Function1)>(r0);

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = interfaceinvoke $r2.<androidx.compose.runtime.MonotonicFrameClock: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r5, $r1);

        return $r6;
    }

    public static final androidx.compose.runtime.MonotonicFrameClock getMonotonicFrameClock(kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        androidx.compose.runtime.MonotonicFrameClock$Key $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;
        kotlin.coroutines.CoroutineContext$Element $r3;
        androidx.compose.runtime.MonotonicFrameClock $r4;
        java.lang.String $r6, $r7;
        java.lang.IllegalStateException r8;
        java.lang.Throwable r9;

        $r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.compose.runtime.MonotonicFrameClock: androidx.compose.runtime.MonotonicFrameClock$Key Key>;

        $r2 = (kotlin.coroutines.CoroutineContext$Key) $r1;

        $r3 = interfaceinvoke $r0.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r2);

        $r4 = (androidx.compose.runtime.MonotonicFrameClock) $r3;

        if $r4 != null goto label1;

        r8 = new java.lang.IllegalStateException;

        $r6 = "A MonotonicFrameClock is not available in this CoroutineContext. Callers should supply an appropriate MonotonicFrameClock using withContext.";

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        r9 = (java.lang.Throwable) r8;

        throw r9;

     label1:
        return $r4;
    }

    public static void getMonotonicFrameClock$annotations(kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext r0;

        r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        return;
    }

