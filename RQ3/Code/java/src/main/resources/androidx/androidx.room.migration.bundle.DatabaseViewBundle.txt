androidx.room.migration.bundle.DatabaseViewBundle
<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String viewName>
<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String createSql>
    public void <init>(java.lang.String, java.lang.String)
    {
        androidx.room.migration.bundle.DatabaseViewBundle r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.room.migration.bundle.DatabaseViewBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "viewName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "createSql");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String viewName> = r1;

        r0.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String createSql> = r2;

        return;
    }

    public java.lang.String getViewName()
    {
        androidx.room.migration.bundle.DatabaseViewBundle r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.migration.bundle.DatabaseViewBundle;

        $r1 = r0.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String viewName>;

        return $r1;
    }

    public java.lang.String getCreateSql()
    {
        androidx.room.migration.bundle.DatabaseViewBundle r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.migration.bundle.DatabaseViewBundle;

        $r1 = r0.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String createSql>;

        return $r1;
    }

    private void <init>()
    {
        androidx.room.migration.bundle.DatabaseViewBundle r0;

        r0 := @this: androidx.room.migration.bundle.DatabaseViewBundle;

        specialinvoke r0.<androidx.room.migration.bundle.DatabaseViewBundle: void <init>(java.lang.String,java.lang.String)>("", "");

        return;
    }

    public java.lang.String createView()
    {
        androidx.room.migration.bundle.DatabaseViewBundle r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: androidx.room.migration.bundle.DatabaseViewBundle;

        $r1 = virtualinvoke r0.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String getCreateSql()>();

        $r2 = virtualinvoke r0.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String getViewName()>();

        $r3 = staticinvoke <androidx.room.migration.bundle.BundleUtil: java.lang.String replaceViewName(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;
    }

    public boolean isSchemaEqual(androidx.room.migration.bundle.DatabaseViewBundle)
    {
        androidx.room.migration.bundle.DatabaseViewBundle r0, r1;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.room.migration.bundle.DatabaseViewBundle;

        r1 := @parameter0: androidx.room.migration.bundle.DatabaseViewBundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = virtualinvoke r0.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String getViewName()>();

        $r3 = virtualinvoke r1.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String getViewName()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String getCreateSql()>();

        $r5 = virtualinvoke r1.<androidx.room.migration.bundle.DatabaseViewBundle: java.lang.String getCreateSql()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public volatile boolean isSchemaEqual(java.lang.Object)
    {
        androidx.room.migration.bundle.DatabaseViewBundle r0, $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: androidx.room.migration.bundle.DatabaseViewBundle;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.room.migration.bundle.DatabaseViewBundle) r1;

        $z0 = virtualinvoke r0.<androidx.room.migration.bundle.DatabaseViewBundle: boolean isSchemaEqual(androidx.room.migration.bundle.DatabaseViewBundle)>($r2);

        return $z0;
    }

