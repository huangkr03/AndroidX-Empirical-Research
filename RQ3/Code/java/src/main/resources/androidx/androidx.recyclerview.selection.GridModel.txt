androidx.recyclerview.selection.GridModel
<androidx.recyclerview.selection.GridModel: int NOT_SET>
<androidx.recyclerview.selection.GridModel: int UPPER>
<androidx.recyclerview.selection.GridModel: int LOWER>
<androidx.recyclerview.selection.GridModel: int LEFT>
<androidx.recyclerview.selection.GridModel: int RIGHT>
<androidx.recyclerview.selection.GridModel: int UPPER_LEFT>
<androidx.recyclerview.selection.GridModel: int UPPER_RIGHT>
<androidx.recyclerview.selection.GridModel: int LOWER_LEFT>
<androidx.recyclerview.selection.GridModel: int LOWER_RIGHT>
<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>
<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.ItemKeyProvider mKeyProvider>
<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate>
<androidx.recyclerview.selection.GridModel: java.util.List mOnSelectionChangedListeners>
<androidx.recyclerview.selection.GridModel: android.util.SparseArray mColumns>
<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>
<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>
<androidx.recyclerview.selection.GridModel: android.util.SparseBooleanArray mKnownPositions>
<androidx.recyclerview.selection.GridModel: java.util.Set mSelection>
<androidx.recyclerview.selection.GridModel: android.graphics.Point mPointer>
<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>
<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>
<androidx.recyclerview.selection.GridModel: boolean mIsActive>
<androidx.recyclerview.selection.GridModel: int mPositionNearestOrigin>
<androidx.recyclerview.selection.GridModel: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener>
    void <init>(androidx.recyclerview.selection.GridModel$GridHost, androidx.recyclerview.selection.ItemKeyProvider, androidx.recyclerview.selection.SelectionTracker$SelectionPredicate)
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$GridHost r1, $r12;
        androidx.recyclerview.selection.ItemKeyProvider r2;
        androidx.recyclerview.selection.SelectionTracker$SelectionPredicate r3;
        java.util.ArrayList $r4, $r6, $r7;
        android.util.SparseArray $r5;
        android.util.SparseBooleanArray $r8;
        java.util.HashSet $r9;
        androidx.recyclerview.selection.GridModel$1 $r10;
        android.support.v7.widget.RecyclerView$OnScrollListener $r11;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$GridHost;

        r2 := @parameter1: androidx.recyclerview.selection.ItemKeyProvider;

        r3 := @parameter2: androidx.recyclerview.selection.SelectionTracker$SelectionPredicate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.selection.GridModel: java.util.List mOnSelectionChangedListeners> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<androidx.recyclerview.selection.GridModel: android.util.SparseArray mColumns> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds> = $r7;

        $r8 = new android.util.SparseBooleanArray;

        specialinvoke $r8.<android.util.SparseBooleanArray: void <init>()>();

        r0.<androidx.recyclerview.selection.GridModel: android.util.SparseBooleanArray mKnownPositions> = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<androidx.recyclerview.selection.GridModel: java.util.Set mSelection> = $r9;

        r0.<androidx.recyclerview.selection.GridModel: int mPositionNearestOrigin> = -1;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z0);

        if r2 == null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z1);

        if r3 == null goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z2);

        r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost> = r1;

        r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.ItemKeyProvider mKeyProvider> = r2;

        r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate> = r3;

        $r10 = new androidx.recyclerview.selection.GridModel$1;

        specialinvoke $r10.<androidx.recyclerview.selection.GridModel$1: void <init>(androidx.recyclerview.selection.GridModel)>(r0);

        r0.<androidx.recyclerview.selection.GridModel: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener> = $r10;

        $r12 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        $r11 = r0.<androidx.recyclerview.selection.GridModel: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener>;

        virtualinvoke $r12.<androidx.recyclerview.selection.GridModel$GridHost: void addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)>($r11);

        return;
    }

    void startCapturing(android.graphics.Point)
    {
        androidx.recyclerview.selection.GridModel r0;
        android.graphics.Point r1, $r3, $r4, $r6;
        boolean $z0;
        androidx.recyclerview.selection.GridModel$GridHost $r2;
        androidx.recyclerview.selection.GridModel$RelativePoint $r5, $r7;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: android.graphics.Point;

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void recordVisibleChildren()>();

        $z0 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.selection.GridModel: boolean mIsActive> = 1;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.selection.GridModel$GridHost: android.graphics.Point createAbsolutePoint(android.graphics.Point)>(r1);

        r0.<androidx.recyclerview.selection.GridModel: android.graphics.Point mPointer> = $r3;

        $r4 = r0.<androidx.recyclerview.selection.GridModel: android.graphics.Point mPointer>;

        $r5 = virtualinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint createRelativePoint(android.graphics.Point)>($r4);

        r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin> = $r5;

        $r6 = r0.<androidx.recyclerview.selection.GridModel: android.graphics.Point mPointer>;

        $r7 = virtualinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint createRelativePoint(android.graphics.Point)>($r6);

        r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer> = $r7;

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void computeCurrentSelection()>();

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void notifySelectionChanged()>();

        return;
    }

    void stopCapturing()
    {
        androidx.recyclerview.selection.GridModel r0;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r0.<androidx.recyclerview.selection.GridModel: boolean mIsActive> = 0;

        return;
    }

    void resizeSelection(android.graphics.Point)
    {
        androidx.recyclerview.selection.GridModel r0;
        android.graphics.Point r1, $r3;
        androidx.recyclerview.selection.GridModel$GridHost $r2;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: android.graphics.Point;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.selection.GridModel$GridHost: android.graphics.Point createAbsolutePoint(android.graphics.Point)>(r1);

        r0.<androidx.recyclerview.selection.GridModel: android.graphics.Point mPointer> = $r3;

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void updateModel()>();

        return;
    }

    int getPositionNearestOrigin()
    {
        androidx.recyclerview.selection.GridModel r0;
        int $i0;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        $i0 = r0.<androidx.recyclerview.selection.GridModel: int mPositionNearestOrigin>;

        return $i0;
    }

    void onScrolled(android.support.v7.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.selection.GridModel r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        android.graphics.Point $r2, $r3;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<androidx.recyclerview.selection.GridModel: boolean mIsActive>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.selection.GridModel: android.graphics.Point mPointer>;

        $i2 = $r2.<android.graphics.Point: int x>;

        $i3 = $i2 + i0;

        $r2.<android.graphics.Point: int x> = $i3;

        $r3 = r0.<androidx.recyclerview.selection.GridModel: android.graphics.Point mPointer>;

        $i4 = $r3.<android.graphics.Point: int y>;

        $i5 = $i4 + i1;

        $r3.<android.graphics.Point: int y> = $i5;

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void recordVisibleChildren()>();

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void updateModel()>();

        return;
    }

    private void recordVisibleChildren()
    {
        androidx.recyclerview.selection.GridModel r0;
        int i0, $i1, i2;
        androidx.recyclerview.selection.GridModel$GridHost $r1, $r2, $r3, $r7;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.selection.SelectionTracker$SelectionPredicate $r4;
        android.util.SparseBooleanArray $r5, $r6;
        android.graphics.Rect $r8;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        i2 = 0;

     label1:
        $r1 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        $i1 = virtualinvoke $r1.<androidx.recyclerview.selection.GridModel$GridHost: int getVisibleChildCount()>();

        if i2 >= $i1 goto label3;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        i0 = virtualinvoke $r2.<androidx.recyclerview.selection.GridModel$GridHost: int getAdapterPositionAt(int)>(i2);

        $r3 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.selection.GridModel$GridHost: boolean hasView(int)>(i0);

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate>;

        $z1 = virtualinvoke $r4.<androidx.recyclerview.selection.SelectionTracker$SelectionPredicate: boolean canSetStateAtPosition(int,boolean)>(i0, 1);

        if $z1 == 0 goto label2;

        $r5 = r0.<androidx.recyclerview.selection.GridModel: android.util.SparseBooleanArray mKnownPositions>;

        $z2 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z2 != 0 goto label2;

        $r6 = r0.<androidx.recyclerview.selection.GridModel: android.util.SparseBooleanArray mKnownPositions>;

        virtualinvoke $r6.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r7 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        $r8 = virtualinvoke $r7.<androidx.recyclerview.selection.GridModel$GridHost: android.graphics.Rect getAbsoluteRectForChildViewAt(int)>(i2);

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void recordItemData(android.graphics.Rect,int)>($r8, i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private boolean isEmpty()
    {
        androidx.recyclerview.selection.GridModel r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        $r1 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void recordItemData(android.graphics.Rect, int)
    {
        androidx.recyclerview.selection.GridModel r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.List $r2, $r5, $r11;
        androidx.recyclerview.selection.GridModel$GridHost $r3;
        androidx.recyclerview.selection.GridModel$Limits $r4, $r10;
        android.util.SparseArray $r6, $r9;
        java.lang.Object $r7;
        android.util.SparseIntArray $r8, r12;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        $i2 = virtualinvoke $r3.<androidx.recyclerview.selection.GridModel$GridHost: int getColumnCount()>();

        if $i1 == $i2 goto label1;

        $r11 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $r10 = new androidx.recyclerview.selection.GridModel$Limits;

        $i9 = r1.<android.graphics.Rect: int left>;

        $i8 = r1.<android.graphics.Rect: int right>;

        specialinvoke $r10.<androidx.recyclerview.selection.GridModel$Limits: void <init>(int,int)>($i9, $i8);

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void recordLimits(java.util.List,androidx.recyclerview.selection.GridModel$Limits)>($r11, $r10);

     label1:
        $r5 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $r4 = new androidx.recyclerview.selection.GridModel$Limits;

        $i4 = r1.<android.graphics.Rect: int top>;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        specialinvoke $r4.<androidx.recyclerview.selection.GridModel$Limits: void <init>(int,int)>($i4, $i3);

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void recordLimits(java.util.List,androidx.recyclerview.selection.GridModel$Limits)>($r5, $r4);

        $r6 = r0.<androidx.recyclerview.selection.GridModel: android.util.SparseArray mColumns>;

        $i5 = r1.<android.graphics.Rect: int left>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i5);

        r12 = (android.util.SparseIntArray) $r7;

        if r12 != null goto label2;

        $r8 = new android.util.SparseIntArray;

        specialinvoke $r8.<android.util.SparseIntArray: void <init>()>();

        r12 = $r8;

        $r9 = r0.<androidx.recyclerview.selection.GridModel: android.util.SparseArray mColumns>;

        $i7 = r1.<android.graphics.Rect: int left>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>($i7, r12);

     label2:
        $i6 = r1.<android.graphics.Rect: int top>;

        virtualinvoke r12.<android.util.SparseIntArray: void put(int,int)>($i6, i0);

        return;
    }

    private void recordLimits(java.util.List, androidx.recyclerview.selection.GridModel$Limits)
    {
        androidx.recyclerview.selection.GridModel r0;
        java.util.List r1;
        androidx.recyclerview.selection.GridModel$Limits r2;
        int i0, $i1;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.recyclerview.selection.GridModel$Limits;

        i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>(r1, r2);

        if i0 >= 0 goto label1;

        $i1 = i0 ^ -1;

        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>($i1, r2);

     label1:
        return;
    }

    private void updateModel()
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$RelativePoint r1, $r3, $r4;
        android.graphics.Point $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: android.graphics.Point mPointer>;

        $r3 = virtualinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint createRelativePoint(android.graphics.Point)>($r2);

        r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer> = $r3;

        if r1 == null goto label1;

        $r4 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.selection.GridModel$RelativePoint: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void computeCurrentSelection()>();

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void notifySelectionChanged()>();

        return;
    }

    private void computeCurrentSelection()
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$RelativePoint $r1, $r2;
        boolean $z0;
        java.util.Set $r3;
        android.graphics.Rect $r4;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $r1 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $z0 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: boolean areItemsCoveredByBand(androidx.recyclerview.selection.GridModel$RelativePoint,androidx.recyclerview.selection.GridModel$RelativePoint)>($r2, $r1);

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: android.graphics.Rect computeBounds()>();

        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void updateSelection(android.graphics.Rect)>($r4);

        goto label2;

     label1:
        $r3 = r0.<androidx.recyclerview.selection.GridModel: java.util.Set mSelection>;

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        r0.<androidx.recyclerview.selection.GridModel: int mPositionNearestOrigin> = -1;

     label2:
        return;
    }

    private void notifySelectionChanged()
    {
        androidx.recyclerview.selection.GridModel r0;
        java.util.Iterator r1;
        androidx.recyclerview.selection.GridModel$SelectionObserver r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Set $r5;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        $r3 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mOnSelectionChangedListeners>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.recyclerview.selection.GridModel$SelectionObserver) $r4;

        $r5 = r0.<androidx.recyclerview.selection.GridModel: java.util.Set mSelection>;

        virtualinvoke r2.<androidx.recyclerview.selection.GridModel$SelectionObserver: void onSelectionChanged(java.util.Set)>($r5);

        goto label1;

     label2:
        return;
    }

    private void updateSelection(android.graphics.Rect)
    {
        androidx.recyclerview.selection.GridModel r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, i13, i14, i15;
        androidx.recyclerview.selection.GridModel$Limits $r2, $r4, $r9, $r12;
        java.util.List $r3, $r5, $r6, $r7, $r10, $r13;
        java.lang.Object $r8, $r11;
        boolean $z0;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: android.graphics.Rect;

        $r3 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $r2 = new androidx.recyclerview.selection.GridModel$Limits;

        $i2 = r1.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int left>;

        specialinvoke $r2.<androidx.recyclerview.selection.GridModel$Limits: void <init>(int,int)>($i2, $i1);

        i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r3, $r2);

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Rect doesn\'t intesect any known column.");

        i10 = i0;

        i11 = i0;

     label3:
        $r13 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $i12 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i11 >= $i12 goto label4;

        $r10 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i11);

        $r12 = (androidx.recyclerview.selection.GridModel$Limits) $r11;

        $i9 = $r12.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $i8 = r1.<android.graphics.Rect: int right>;

        if $i9 > $i8 goto label4;

        i10 = i11;

        i11 = i11 + 1;

        goto label3;

     label4:
        $r5 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $r4 = new androidx.recyclerview.selection.GridModel$Limits;

        $i4 = r1.<android.graphics.Rect: int top>;

        $i3 = r1.<android.graphics.Rect: int top>;

        specialinvoke $r4.<androidx.recyclerview.selection.GridModel$Limits: void <init>(int,int)>($i4, $i3);

        i13 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r5, $r4);

        if i13 >= 0 goto label5;

        r0.<androidx.recyclerview.selection.GridModel: int mPositionNearestOrigin> = -1;

        return;

     label5:
        i14 = i13;

        i15 = i13;

     label6:
        $r6 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $i5 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i15 >= $i5 goto label7;

        $r7 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i15);

        $r9 = (androidx.recyclerview.selection.GridModel$Limits) $r8;

        $i7 = $r9.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $i6 = r1.<android.graphics.Rect: int bottom>;

        if $i7 > $i6 goto label7;

        i14 = i15;

        i15 = i15 + 1;

        goto label6;

     label7:
        specialinvoke r0.<androidx.recyclerview.selection.GridModel: void updateSelection(int,int,int,int)>(i0, i10, i13, i14);

        return;
    }

    private void updateSelection(int, int, int, int)
    {
        androidx.recyclerview.selection.GridModel r0;
        int i0, i1, i2, i3, i4, i5, $i6, i7, i8;
        android.util.SparseIntArray r1;
        java.lang.Object r2, $r6, $r8, $r10;
        java.util.Set $r3, $r13;
        java.util.List $r4, $r9;
        android.util.SparseArray $r5;
        androidx.recyclerview.selection.GridModel$Limits $r7, $r11;
        androidx.recyclerview.selection.ItemKeyProvider $r12;
        boolean $z0, $z2;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r3 = r0.<androidx.recyclerview.selection.GridModel: java.util.Set mSelection>;

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        i7 = i0;

     label1:
        if i7 > i1 goto label6;

        $r5 = r0.<androidx.recyclerview.selection.GridModel: android.util.SparseArray mColumns>;

        $r4 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i7);

        $r7 = (androidx.recyclerview.selection.GridModel$Limits) $r6;

        $i6 = $r7.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $r8 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>($i6);

        r1 = (android.util.SparseIntArray) $r8;

        i8 = i2;

     label2:
        if i8 > i3 goto label5;

        $r9 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i8);

        $r11 = (androidx.recyclerview.selection.GridModel$Limits) $r10;

        i4 = $r11.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        i5 = virtualinvoke r1.<android.util.SparseIntArray: int get(int,int)>(i4, -1);

        if i5 == -1 goto label4;

        $r12 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.ItemKeyProvider mKeyProvider>;

        r2 = virtualinvoke $r12.<androidx.recyclerview.selection.ItemKeyProvider: java.lang.Object getKey(int)>(i5);

        if r2 == null goto label3;

        $z0 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: boolean canSelect(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $r13 = r0.<androidx.recyclerview.selection.GridModel: java.util.Set mSelection>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label3:
        $z2 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: boolean isPossiblePositionNearestOrigin(int,int,int,int,int,int)>(i7, i0, i1, i8, i2, i3);

        if $z2 == 0 goto label4;

        r0.<androidx.recyclerview.selection.GridModel: int mPositionNearestOrigin> = i5;

     label4:
        i8 = i8 + 1;

        goto label2;

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        return;
    }

    private boolean canSelect(java.lang.Object)
    {
        androidx.recyclerview.selection.GridModel r0;
        java.lang.Object r1;
        androidx.recyclerview.selection.SelectionTracker$SelectionPredicate $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.selection.SelectionTracker$SelectionPredicate: boolean canSetStateForKey(java.lang.Object,boolean)>(r1, 1);

        return $z0;
    }

    private boolean isPossiblePositionNearestOrigin(int, int, int, int, int, int)
    {
        androidx.recyclerview.selection.GridModel r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.RuntimeException $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: int computeCornerNearestOrigin()>();

        tableswitch(i6)
        {
            case 0: goto label01;
            case 1: goto label07;
            case 2: goto label04;
            case 3: goto label10;
            default: goto label13;
        };

     label01:
        if i0 != i1 goto label02;

        if i3 != i4 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        return $z0;

     label04:
        if i0 != i2 goto label05;

        if i3 != i4 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        return $z1;

     label07:
        if i0 != i1 goto label08;

        if i3 != i5 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        return $z2;

     label10:
        if i3 != i5 goto label11;

        $z3 = 1;

        goto label12;

     label11:
        $z3 = 0;

     label12:
        return $z3;

     label13:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid corner type.");

        throw $r1;
    }

    void addOnSelectionChangedListener(androidx.recyclerview.selection.GridModel$SelectionObserver)
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$SelectionObserver r1;
        java.util.List $r2;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$SelectionObserver;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mOnSelectionChangedListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    void onDestroy()
    {
        androidx.recyclerview.selection.GridModel r0;
        java.util.List $r1;
        android.support.v7.widget.RecyclerView$OnScrollListener $r2;
        androidx.recyclerview.selection.GridModel$GridHost $r3;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        $r1 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mOnSelectionChangedListeners>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$GridHost mHost>;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener>;

        virtualinvoke $r3.<androidx.recyclerview.selection.GridModel$GridHost: void removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)>($r2);

        return;
    }

    androidx.recyclerview.selection.GridModel$RelativePoint createRelativePoint(android.graphics.Point)
    {
        androidx.recyclerview.selection.GridModel r0;
        android.graphics.Point r1;
        androidx.recyclerview.selection.GridModel$RelativePoint $r2;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate $r3, $r5;
        int $i0, $i1;
        java.util.List $r4, $r6;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: android.graphics.Point;

        $r2 = new androidx.recyclerview.selection.GridModel$RelativePoint;

        $r3 = new androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $r4 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $i0 = r1.<android.graphics.Point: int x>;

        specialinvoke $r3.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: void <init>(java.util.List,int)>($r4, $i0);

        $r5 = new androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $r6 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $i1 = r1.<android.graphics.Point: int y>;

        specialinvoke $r5.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: void <init>(java.util.List,int)>($r6, $i1);

        specialinvoke $r2.<androidx.recyclerview.selection.GridModel$RelativePoint: void <init>(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r3, $r5);

        return $r2;
    }

    private android.graphics.Rect computeBounds()
    {
        androidx.recyclerview.selection.GridModel r0;
        android.graphics.Rect r1, $r2;
        androidx.recyclerview.selection.GridModel$RelativePoint $r3, $r4, $r9, $r10, $r15, $r16, $r21, $r22;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate $r5, $r6, $r7, $r11, $r12, $r13, $r17, $r18, $r19, $r23, $r24, $r25;
        java.util.List $r8, $r14, $r20, $r26;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $r6 = $r3.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r4 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $r5 = $r4.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r7 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativeCoordinate min(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r6, $r5);

        $r8 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $i0 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: int getCoordinateValue(androidx.recyclerview.selection.GridModel$RelativeCoordinate,java.util.List,boolean)>($r7, $r8, 1);

        r1.<android.graphics.Rect: int left> = $i0;

        $r9 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $r12 = $r9.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r10 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $r11 = $r10.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r13 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativeCoordinate max(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r12, $r11);

        $r14 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mColumnBounds>;

        $i1 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: int getCoordinateValue(androidx.recyclerview.selection.GridModel$RelativeCoordinate,java.util.List,boolean)>($r13, $r14, 0);

        r1.<android.graphics.Rect: int right> = $i1;

        $r15 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $r18 = $r15.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r16 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $r17 = $r16.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r19 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativeCoordinate min(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r18, $r17);

        $r20 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $i2 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: int getCoordinateValue(androidx.recyclerview.selection.GridModel$RelativeCoordinate,java.util.List,boolean)>($r19, $r20, 1);

        r1.<android.graphics.Rect: int top> = $i2;

        $r21 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $r24 = $r21.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r22 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $r23 = $r22.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r25 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativeCoordinate max(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r24, $r23);

        $r26 = r0.<androidx.recyclerview.selection.GridModel: java.util.List mRowBounds>;

        $i3 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: int getCoordinateValue(androidx.recyclerview.selection.GridModel$RelativeCoordinate,java.util.List,boolean)>($r25, $r26, 0);

        r1.<android.graphics.Rect: int bottom> = $i3;

        return r1;
    }

    private int computeCornerNearestOrigin()
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$RelativePoint $r1, $r2, $r3, $r8, $r9, $r10;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14;
        boolean $z0, $z1;
        byte b0, b1, b2;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        b0 = 0;

        $r1 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $r6 = $r1.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r2 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $r5 = $r2.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r3 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $r4 = $r3.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r7 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativeCoordinate min(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r5, $r4);

        $z0 = virtualinvoke $r6.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        b1 = b0 | 0;

        goto label2;

     label1:
        b1 = b0 | 1;

     label2:
        $r8 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $r13 = $r8.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r9 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin>;

        $r12 = $r9.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r10 = r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer>;

        $r11 = $r10.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r14 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: androidx.recyclerview.selection.GridModel$RelativeCoordinate min(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r12, $r11);

        $z1 = virtualinvoke $r13.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label3;

        b2 = b1 | 0;

        goto label4;

     label3:
        b2 = b1 | 2;

     label4:
        return b2;
    }

    private androidx.recyclerview.selection.GridModel$RelativeCoordinate min(androidx.recyclerview.selection.GridModel$RelativeCoordinate, androidx.recyclerview.selection.GridModel$RelativeCoordinate)
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r1, r2, $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r2 := @parameter1: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $i0 = virtualinvoke r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int compareTo(androidx.recyclerview.selection.GridModel$RelativeCoordinate)>(r2);

        if $i0 >= 0 goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = r2;

     label2:
        return $r3;
    }

    private androidx.recyclerview.selection.GridModel$RelativeCoordinate max(androidx.recyclerview.selection.GridModel$RelativeCoordinate, androidx.recyclerview.selection.GridModel$RelativeCoordinate)
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r1, r2, $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r2 := @parameter1: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $i0 = virtualinvoke r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int compareTo(androidx.recyclerview.selection.GridModel$RelativeCoordinate)>(r2);

        if $i0 <= 0 goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = r2;

     label2:
        return $r3;
    }

    private int getCoordinateValue(androidx.recyclerview.selection.GridModel$RelativeCoordinate, java.util.List, boolean)
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r1;
        java.util.List r2;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.recyclerview.selection.GridModel$Limits $r3, $r4, $r5, $r7, $r9;
        java.lang.Object $r6, $r8;
        java.lang.RuntimeException $r10;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r2 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        $i0 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (androidx.recyclerview.selection.GridModel$Limits) $r6;

        $i4 = $r7.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        return $i4;

     label2:
        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i6);

        $r9 = (androidx.recyclerview.selection.GridModel$Limits) $r8;

        $i7 = $r9.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        return $i7;

     label3:
        if z0 == 0 goto label4;

        $r5 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsAfterCoordinate>;

        $i3 = $r5.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        return $i3;

     label4:
        $r4 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>;

        $i2 = $r4.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        return $i2;

     label5:
        $r3 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>;

        $i1 = $r3.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        return $i1;

     label6:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid coordinate value.");

        throw $r10;
    }

    private boolean areItemsCoveredByBand(androidx.recyclerview.selection.GridModel$RelativePoint, androidx.recyclerview.selection.GridModel$RelativePoint)
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$RelativePoint r1, r2;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$RelativePoint;

        r2 := @parameter1: androidx.recyclerview.selection.GridModel$RelativePoint;

        $r4 = r1.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r3 = r2.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $z0 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: boolean doesCoordinateLocationCoverItems(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r4, $r3);

        if $z0 == 0 goto label1;

        $r6 = r1.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r5 = r2.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $z1 = specialinvoke r0.<androidx.recyclerview.selection.GridModel: boolean doesCoordinateLocationCoverItems(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r6, $r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private boolean doesCoordinateLocationCoverItems(androidx.recyclerview.selection.GridModel$RelativeCoordinate, androidx.recyclerview.selection.GridModel$RelativeCoordinate)
    {
        androidx.recyclerview.selection.GridModel r0;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.recyclerview.selection.GridModel$Limits $r3, $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.selection.GridModel;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r2 := @parameter1: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $i0 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i0 != 1 goto label1;

        $i5 = r2.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i5 != 1 goto label1;

        return 0;

     label1:
        $i1 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i1 != 0 goto label2;

        $i4 = r2.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i4 != 0 goto label2;

        return 0;

     label2:
        $i2 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i2 != 2 goto label3;

        $i3 = r2.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i3 != 2 goto label3;

        $r4 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>;

        $r3 = r2.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.selection.GridModel$Limits: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r6 = r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsAfterCoordinate>;

        $r5 = r2.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsAfterCoordinate>;

        $z1 = virtualinvoke $r6.<androidx.recyclerview.selection.GridModel$Limits: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }

androidx.recyclerview.selection.GridModel$1
<androidx.recyclerview.selection.GridModel$1: androidx.recyclerview.selection.GridModel this$0>
    void <init>(androidx.recyclerview.selection.GridModel)
    {
        androidx.recyclerview.selection.GridModel$1 r0;
        androidx.recyclerview.selection.GridModel r1;

        r0 := @this: androidx.recyclerview.selection.GridModel$1;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel;

        r0.<androidx.recyclerview.selection.GridModel$1: androidx.recyclerview.selection.GridModel this$0> = r1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$OnScrollListener: void <init>()>();

        return;
    }

    public void onScrolled(android.support.v7.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.selection.GridModel$1 r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1;
        androidx.recyclerview.selection.GridModel $r2;

        r0 := @this: androidx.recyclerview.selection.GridModel$1;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.recyclerview.selection.GridModel$1: androidx.recyclerview.selection.GridModel this$0>;

        virtualinvoke $r2.<androidx.recyclerview.selection.GridModel: void onScrolled(android.support.v7.widget.RecyclerView,int,int)>(r1, i0, i1);

        return;
    }

androidx.recyclerview.selection.GridModel$GridHost
    void <init>()
    {
        androidx.recyclerview.selection.GridModel$GridHost r0;

        r0 := @this: androidx.recyclerview.selection.GridModel$GridHost;

        specialinvoke r0.<androidx.recyclerview.selection.BandSelectionHelper$BandHost: void <init>()>();

        return;
    }

<androidx.recyclerview.selection.GridModel$GridHost: void removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)>
<androidx.recyclerview.selection.GridModel$GridHost: android.graphics.Point createAbsolutePoint(android.graphics.Point)>
<androidx.recyclerview.selection.GridModel$GridHost: android.graphics.Rect getAbsoluteRectForChildViewAt(int)>
<androidx.recyclerview.selection.GridModel$GridHost: int getAdapterPositionAt(int)>
<androidx.recyclerview.selection.GridModel$GridHost: int getColumnCount()>
<androidx.recyclerview.selection.GridModel$GridHost: int getVisibleChildCount()>
<androidx.recyclerview.selection.GridModel$GridHost: boolean hasView(int)>
androidx.recyclerview.selection.GridModel$Limits
<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>
<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>
    void <init>(int, int)
    {
        androidx.recyclerview.selection.GridModel$Limits r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.selection.GridModel$Limits;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit> = i0;

        r0.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit> = i1;

        return;
    }

    public int compareTo(androidx.recyclerview.selection.GridModel$Limits)
    {
        androidx.recyclerview.selection.GridModel$Limits r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.selection.GridModel$Limits;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$Limits;

        $i1 = r0.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $i0 = r1.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int hashCode()
    {
        androidx.recyclerview.selection.GridModel$Limits r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.selection.GridModel$Limits;

        $i1 = r0.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $i0 = r0.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        $i2 = $i1 ^ $i0;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.recyclerview.selection.GridModel$Limits r0, $r2, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.recyclerview.selection.GridModel$Limits;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.recyclerview.selection.GridModel$Limits;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (androidx.recyclerview.selection.GridModel$Limits) r1;

        $i1 = $r2.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $i0 = r0.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        if $i1 != $i0 goto label2;

        $r3 = (androidx.recyclerview.selection.GridModel$Limits) r1;

        $i3 = $r3.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        $i2 = r0.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        if $i3 != $i2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.String toString()
    {
        androidx.recyclerview.selection.GridModel$Limits r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;

        r0 := @this: androidx.recyclerview.selection.GridModel$Limits;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = r0.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = r0.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.recyclerview.selection.GridModel$Limits r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.recyclerview.selection.GridModel$Limits;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.recyclerview.selection.GridModel$Limits) r1;

        $i0 = virtualinvoke r0.<androidx.recyclerview.selection.GridModel$Limits: int compareTo(androidx.recyclerview.selection.GridModel$Limits)>($r2);

        return $i0;
    }

androidx.recyclerview.selection.GridModel$RelativeCoordinate
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int AFTER_LAST_ITEM>
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int BEFORE_FIRST_ITEM>
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int BETWEEN_TWO_ITEMS>
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int WITHIN_LIMITS>
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsAfterCoordinate>
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits mFirstKnownItem>
<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits mLastKnownItem>
    void <init>(java.util.List, int)
    {
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r0;
        java.util.List r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        androidx.recyclerview.selection.GridModel$Limits $r2, $r5, $r7, $r9, $r12, $r14, r15, r16;
        java.lang.Object $r3, $r4, $r6, $r8, $r10, $r11, $r13;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.recyclerview.selection.GridModel$Limits;

        specialinvoke $r2.<androidx.recyclerview.selection.GridModel$Limits: void <init>(int,int)>(i0, i0);

        i1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>(r1, $r2);

        if i1 < 0 goto label1;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type> = 3;

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r14 = (androidx.recyclerview.selection.GridModel$Limits) $r13;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate> = $r14;

        goto label7;

     label1:
        $i2 = i1 ^ -1;

        if $i2 != 0 goto label2;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type> = 1;

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r12 = (androidx.recyclerview.selection.GridModel$Limits) $r11;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits mFirstKnownItem> = $r12;

        goto label7;

     label2:
        $i3 = i1 ^ -1;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i3 != $i4 goto label5;

        $i14 = interfaceinvoke r1.<java.util.List: int size()>();

        $i15 = $i14 - 1;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i15);

        r15 = (androidx.recyclerview.selection.GridModel$Limits) $r10;

        $i16 = r15.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        if $i16 > i0 goto label3;

        $i17 = r15.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        if i0 > $i17 goto label3;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type> = 3;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate> = r15;

        goto label4;

     label3:
        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type> = 0;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits mLastKnownItem> = r15;

     label4:
        goto label7;

     label5:
        $i5 = i1 ^ -1;

        $i6 = $i5 - 1;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i6);

        r16 = (androidx.recyclerview.selection.GridModel$Limits) $r3;

        $i7 = r16.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        if $i7 > i0 goto label6;

        $i11 = r16.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        if i0 > $i11 goto label6;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type> = 3;

        $i12 = i1 ^ -1;

        $i13 = $i12 - 1;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i13);

        $r9 = (androidx.recyclerview.selection.GridModel$Limits) $r8;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate> = $r9;

        goto label7;

     label6:
        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type> = 2;

        $i8 = i1 ^ -1;

        $i9 = $i8 - 1;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i9);

        $r5 = (androidx.recyclerview.selection.GridModel$Limits) $r4;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate> = $r5;

        $i10 = i1 ^ -1;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i10);

        $r7 = (androidx.recyclerview.selection.GridModel$Limits) $r6;

        r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsAfterCoordinate> = $r7;

     label7:
        return;
    }

    int toComparisonValue()
    {
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.recyclerview.selection.GridModel$Limits $r1, $r2, $r3, $r4;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $i0 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i0 != 1 goto label1;

        $r4 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits mFirstKnownItem>;

        $i8 = $r4.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $i9 = $i8 - 1;

        return $i9;

     label1:
        $i1 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i1 != 0 goto label2;

        $r3 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits mLastKnownItem>;

        $i6 = $r3.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        $i7 = $i6 + 1;

        return $i7;

     label2:
        $i2 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int type>;

        if $i2 != 2 goto label3;

        $r2 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>;

        $i4 = $r2.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        $i5 = $i4 + 1;

        return $i5;

     label3:
        $r1 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>;

        $i3 = $r1.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        return $i3;
    }

    public int hashCode()
    {
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r0;
        androidx.recyclerview.selection.GridModel$Limits $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $r1 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits mFirstKnownItem>;

        $i1 = $r1.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $r2 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits mLastKnownItem>;

        $i0 = $r2.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        $i3 = $i1 ^ $i0;

        $r3 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>;

        $i2 = $r3.<androidx.recyclerview.selection.GridModel$Limits: int upperLimit>;

        $i5 = $i3 ^ $i2;

        $r4 = r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate>;

        $i4 = $r4.<androidx.recyclerview.selection.GridModel$Limits: int lowerLimit>;

        $i6 = $i5 ^ $i4;

        return $i6;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.recyclerview.selection.GridModel$RelativeCoordinate) r1;

        $i0 = virtualinvoke r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int toComparisonValue()>();

        $i1 = virtualinvoke r2.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int toComparisonValue()>();

        if $i0 != $i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int compareTo(androidx.recyclerview.selection.GridModel$RelativeCoordinate)
    {
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $i0 = virtualinvoke r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int toComparisonValue()>();

        $i1 = virtualinvoke r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int toComparisonValue()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.recyclerview.selection.GridModel$RelativeCoordinate) r1;

        $i0 = virtualinvoke r0.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int compareTo(androidx.recyclerview.selection.GridModel$RelativeCoordinate)>($r2);

        return $i0;
    }

androidx.recyclerview.selection.GridModel$RelativePoint
<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>
<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>
    void <init>(java.util.List, java.util.List, android.graphics.Point)
    {
        androidx.recyclerview.selection.GridModel$RelativePoint r0;
        java.util.List r1, r2;
        android.graphics.Point r3;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate $r4, $r5;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativePoint;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.graphics.Point;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $i0 = r3.<android.graphics.Point: int x>;

        specialinvoke $r4.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: void <init>(java.util.List,int)>(r1, $i0);

        r0.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX> = $r4;

        $r5 = new androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        $i1 = r3.<android.graphics.Point: int y>;

        specialinvoke $r5.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: void <init>(java.util.List,int)>(r2, $i1);

        r0.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY> = $r5;

        return;
    }

    void <init>(androidx.recyclerview.selection.GridModel$RelativeCoordinate, androidx.recyclerview.selection.GridModel$RelativeCoordinate)
    {
        androidx.recyclerview.selection.GridModel$RelativePoint r0;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate r1, r2;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativePoint;

        r1 := @parameter0: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        r2 := @parameter1: androidx.recyclerview.selection.GridModel$RelativeCoordinate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX> = r1;

        r0.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY> = r2;

        return;
    }

    public int hashCode()
    {
        androidx.recyclerview.selection.GridModel$RelativePoint r0;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativePoint;

        $r1 = r0.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int toComparisonValue()>();

        $r2 = r0.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $i1 = virtualinvoke $r2.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: int toComparisonValue()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.recyclerview.selection.GridModel$RelativePoint r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.selection.GridModel$RelativeCoordinate $r3, $r4, $r5, $r6;

        r0 := @this: androidx.recyclerview.selection.GridModel$RelativePoint;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.recyclerview.selection.GridModel$RelativePoint;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.recyclerview.selection.GridModel$RelativePoint) r1;

        $r4 = r0.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $r3 = r2.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mX>;

        $z1 = virtualinvoke $r4.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r0.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $r5 = r2.<androidx.recyclerview.selection.GridModel$RelativePoint: androidx.recyclerview.selection.GridModel$RelativeCoordinate mY>;

        $z2 = virtualinvoke $r6.<androidx.recyclerview.selection.GridModel$RelativeCoordinate: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

androidx.recyclerview.selection.GridModel$SelectionObserver
    public void <init>()
    {
        androidx.recyclerview.selection.GridModel$SelectionObserver r0;

        r0 := @this: androidx.recyclerview.selection.GridModel$SelectionObserver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.recyclerview.selection.GridModel$SelectionObserver: void onSelectionChanged(java.util.Set)>
