androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt
    public static final kotlin.jvm.functions.Function2 rememberStaggeredGridMeasurePolicy(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider, androidx.compose.foundation.layout.PaddingValues, boolean, androidx.compose.foundation.gestures.Orientation, androidx.compose.foundation.layout.Arrangement$Vertical, androidx.compose.foundation.layout.Arrangement$Horizontal, kotlin.jvm.functions.Function2, androidx.compose.foundation.OverscrollEffect, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider r1;
        androidx.compose.foundation.layout.PaddingValues r2;
        boolean z0, $z4, $z5, $z6, z7, z8;
        androidx.compose.foundation.gestures.Orientation r3;
        androidx.compose.foundation.layout.Arrangement$Vertical r4;
        androidx.compose.foundation.layout.Arrangement$Horizontal r5;
        kotlin.jvm.functions.Function2 r6, r9, r11;
        androidx.compose.foundation.OverscrollEffect r7;
        androidx.compose.runtime.Composer $r8;
        int $i0, i2, $i3;
        java.lang.Object r10, $r15, r18, $r20, r21;
        java.lang.Boolean $r12;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt$rememberStaggeredGridMeasurePolicy$1$1 $r13;
        androidx.compose.runtime.Composer$Companion $r14;
        java.lang.Object[] r16, r17;

        r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter1: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider;

        r2 := @parameter2: androidx.compose.foundation.layout.PaddingValues;

        z0 := @parameter3: boolean;

        r3 := @parameter4: androidx.compose.foundation.gestures.Orientation;

        r4 := @parameter5: androidx.compose.foundation.layout.Arrangement$Vertical;

        r5 := @parameter6: androidx.compose.foundation.layout.Arrangement$Horizontal;

        r6 := @parameter7: kotlin.jvm.functions.Function2;

        r7 := @parameter8: androidx.compose.foundation.OverscrollEffect;

        $r8 := @parameter9: androidx.compose.runtime.Composer;

        $i0 := @parameter10: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "itemProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "contentPadding");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "orientation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "verticalArrangement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "horizontalArrangement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "slotSizesSums");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "overscrollEffect");

        interfaceinvoke $r8.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1688989793);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r8, "C(rememberStaggeredGridMeasurePolicy)P(7,2!1,5,3,8!1,6)50@2203L2884:LazyStaggeredGridMeasurePolicy.kt#fzvcnm");

        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(1688989793, $i0, -1, "androidx.compose.foundation.lazy.staggeredgrid.rememberStaggeredGridMeasurePolicy (LazyStaggeredGridMeasurePolicy.kt:40)");

     label1:
        r16 = newarray (java.lang.Object)[9];

        r16[0] = r0;

        r16[1] = r1;

        r16[2] = r2;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r16[3] = $r12;

        r16[4] = r3;

        r16[5] = r4;

        r16[6] = r5;

        r16[7] = r6;

        r16[8] = r7;

        r17 = r16;

        interfaceinvoke $r8.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-568225417);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r8, "C(remember)P(1):Composables.kt#9igjgp");

        z7 = 0;

        i2 = 0;

        $i3 = lengthof r17;

     label2:
        if i2 >= $i3 goto label3;

        r18 = r17[i2];

        $z6 = interfaceinvoke $r8.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r18);

        z7 = z7 | $z6;

        i2 = i2 + 1;

        goto label2;

     label3:
        z8 = 0;

        r10 = interfaceinvoke $r8.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z7 != 0 goto label4;

        $r14 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r15 = virtualinvoke $r14.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r10 != $r15 goto label5;

     label4:
        $r13 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt$rememberStaggeredGridMeasurePolicy$1$1;

        specialinvoke $r13.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt$rememberStaggeredGridMeasurePolicy$1$1: void <init>(androidx.compose.foundation.gestures.Orientation,kotlin.jvm.functions.Function2,androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,androidx.compose.foundation.layout.PaddingValues,boolean,androidx.compose.foundation.layout.Arrangement$Vertical,androidx.compose.foundation.layout.Arrangement$Horizontal,androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider,androidx.compose.foundation.OverscrollEffect)>(r3, r6, r0, r2, z0, r4, r5, r1, r7);

        r11 = (kotlin.jvm.functions.Function2) $r13;

        interfaceinvoke $r8.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r11);

        $r20 = r11;

        goto label6;

     label5:
        $r20 = r10;

     label6:
        r21 = $r20;

        interfaceinvoke $r8.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        r9 = (kotlin.jvm.functions.Function2) r21;

        $z5 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z5 == 0 goto label7;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label7:
        interfaceinvoke $r8.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r9;
    }

    private static final float startPadding(androidx.compose.foundation.layout.PaddingValues, androidx.compose.foundation.gestures.Orientation, androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.foundation.layout.PaddingValues $r0;
        androidx.compose.foundation.gestures.Orientation r1;
        androidx.compose.ui.unit.LayoutDirection r2;
        int[] $r3;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r4;
        float $f0;

        $r0 := @parameter0: androidx.compose.foundation.layout.PaddingValues;

        r1 := @parameter1: androidx.compose.foundation.gestures.Orientation;

        r2 := @parameter2: androidx.compose.ui.unit.LayoutDirection;

        $r3 = <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r1.<androidx.compose.foundation.gestures.Orientation: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $f0 = staticinvoke <androidx.compose.foundation.layout.PaddingKt: float calculateStartPadding(androidx.compose.foundation.layout.PaddingValues,androidx.compose.ui.unit.LayoutDirection)>($r0, r2);

        goto label4;

     label2:
        $f0 = interfaceinvoke $r0.<androidx.compose.foundation.layout.PaddingValues: float calculateTopPadding-D9Ej5fM()>();

        goto label4;

     label3:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label4:
        return $f0;
    }

    private static final float beforePadding(androidx.compose.foundation.layout.PaddingValues, androidx.compose.foundation.gestures.Orientation, boolean, androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.foundation.layout.PaddingValues $r0;
        androidx.compose.foundation.gestures.Orientation r1;
        boolean z0;
        androidx.compose.ui.unit.LayoutDirection r2;
        int[] $r3;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r4;
        float $f0;

        $r0 := @parameter0: androidx.compose.foundation.layout.PaddingValues;

        r1 := @parameter1: androidx.compose.foundation.gestures.Orientation;

        z0 := @parameter2: boolean;

        r2 := @parameter3: androidx.compose.ui.unit.LayoutDirection;

        $r3 = <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r1.<androidx.compose.foundation.gestures.Orientation: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label3;
            default: goto label5;
        };

     label1:
        if z0 == 0 goto label2;

        $f0 = interfaceinvoke $r0.<androidx.compose.foundation.layout.PaddingValues: float calculateBottomPadding-D9Ej5fM()>();

        goto label6;

     label2:
        $f0 = interfaceinvoke $r0.<androidx.compose.foundation.layout.PaddingValues: float calculateTopPadding-D9Ej5fM()>();

        goto label6;

     label3:
        if z0 == 0 goto label4;

        $f0 = staticinvoke <androidx.compose.foundation.layout.PaddingKt: float calculateEndPadding(androidx.compose.foundation.layout.PaddingValues,androidx.compose.ui.unit.LayoutDirection)>($r0, r2);

        goto label6;

     label4:
        $f0 = staticinvoke <androidx.compose.foundation.layout.PaddingKt: float calculateStartPadding(androidx.compose.foundation.layout.PaddingValues,androidx.compose.ui.unit.LayoutDirection)>($r0, r2);

        goto label6;

     label5:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label6:
        return $f0;
    }

    private static final float afterPadding(androidx.compose.foundation.layout.PaddingValues, androidx.compose.foundation.gestures.Orientation, boolean, androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.foundation.layout.PaddingValues $r0;
        androidx.compose.foundation.gestures.Orientation r1;
        boolean z0;
        androidx.compose.ui.unit.LayoutDirection r2;
        int[] $r3;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r4;
        float $f0;

        $r0 := @parameter0: androidx.compose.foundation.layout.PaddingValues;

        r1 := @parameter1: androidx.compose.foundation.gestures.Orientation;

        z0 := @parameter2: boolean;

        r2 := @parameter3: androidx.compose.ui.unit.LayoutDirection;

        $r3 = <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r1.<androidx.compose.foundation.gestures.Orientation: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label3;
            default: goto label5;
        };

     label1:
        if z0 == 0 goto label2;

        $f0 = interfaceinvoke $r0.<androidx.compose.foundation.layout.PaddingValues: float calculateTopPadding-D9Ej5fM()>();

        goto label6;

     label2:
        $f0 = interfaceinvoke $r0.<androidx.compose.foundation.layout.PaddingValues: float calculateBottomPadding-D9Ej5fM()>();

        goto label6;

     label3:
        if z0 == 0 goto label4;

        $f0 = staticinvoke <androidx.compose.foundation.layout.PaddingKt: float calculateStartPadding(androidx.compose.foundation.layout.PaddingValues,androidx.compose.ui.unit.LayoutDirection)>($r0, r2);

        goto label6;

     label4:
        $f0 = staticinvoke <androidx.compose.foundation.layout.PaddingKt: float calculateEndPadding(androidx.compose.foundation.layout.PaddingValues,androidx.compose.ui.unit.LayoutDirection)>($r0, r2);

        goto label6;

     label5:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label6:
        return $f0;
    }

    public static final float access$beforePadding(androidx.compose.foundation.layout.PaddingValues, androidx.compose.foundation.gestures.Orientation, boolean, androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.foundation.layout.PaddingValues $r0;
        androidx.compose.foundation.gestures.Orientation r1;
        boolean z0;
        androidx.compose.ui.unit.LayoutDirection r2;
        float $f0;

        $r0 := @parameter0: androidx.compose.foundation.layout.PaddingValues;

        r1 := @parameter1: androidx.compose.foundation.gestures.Orientation;

        z0 := @parameter2: boolean;

        r2 := @parameter3: androidx.compose.ui.unit.LayoutDirection;

        $f0 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt: float beforePadding(androidx.compose.foundation.layout.PaddingValues,androidx.compose.foundation.gestures.Orientation,boolean,androidx.compose.ui.unit.LayoutDirection)>($r0, r1, z0, r2);

        return $f0;
    }

    public static final float access$afterPadding(androidx.compose.foundation.layout.PaddingValues, androidx.compose.foundation.gestures.Orientation, boolean, androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.foundation.layout.PaddingValues $r0;
        androidx.compose.foundation.gestures.Orientation r1;
        boolean z0;
        androidx.compose.ui.unit.LayoutDirection r2;
        float $f0;

        $r0 := @parameter0: androidx.compose.foundation.layout.PaddingValues;

        r1 := @parameter1: androidx.compose.foundation.gestures.Orientation;

        z0 := @parameter2: boolean;

        r2 := @parameter3: androidx.compose.ui.unit.LayoutDirection;

        $f0 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt: float afterPadding(androidx.compose.foundation.layout.PaddingValues,androidx.compose.foundation.gestures.Orientation,boolean,androidx.compose.ui.unit.LayoutDirection)>($r0, r1, z0, r2);

        return $f0;
    }

    public static final float access$startPadding(androidx.compose.foundation.layout.PaddingValues, androidx.compose.foundation.gestures.Orientation, androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.foundation.layout.PaddingValues $r0;
        androidx.compose.foundation.gestures.Orientation r1;
        androidx.compose.ui.unit.LayoutDirection r2;
        float $f0;

        $r0 := @parameter0: androidx.compose.foundation.layout.PaddingValues;

        r1 := @parameter1: androidx.compose.foundation.gestures.Orientation;

        r2 := @parameter2: androidx.compose.ui.unit.LayoutDirection;

        $f0 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasurePolicyKt: float startPadding(androidx.compose.foundation.layout.PaddingValues,androidx.compose.foundation.gestures.Orientation,androidx.compose.ui.unit.LayoutDirection)>($r0, r1, r2);

        return $f0;
    }

