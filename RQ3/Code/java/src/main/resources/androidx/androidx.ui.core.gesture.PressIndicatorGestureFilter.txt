androidx.ui.core.gesture.PressIndicatorGestureFilter
<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function1 onStart>
<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 onStop>
<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 onCancel>
<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state>
    public void <init>()
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State $r1;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        $r1 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state> = $r1;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnStart()
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function1 onStart>;

        return $r1;
    }

    public final void setOnStart(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function1 onStart> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function0 getOnStop()
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 onStop>;

        return $r1;
    }

    public final void setOnStop(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 onStop> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function0 getOnCancel()
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 onCancel>;

        return $r1;
    }

    public final void setOnCancel(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 onCancel> = r1;

        return;
    }

    public final void setEnabled(boolean)
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        boolean z0, $z1;
        kotlin.jvm.functions.Function0 r1;
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State $r2, $r3, $r5, $r7;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        z0 := @parameter0: boolean;

        $r3 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state>;

        $r2 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z1 == 0 goto label2;

        if z0 != 0 goto label5;

        $r5 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Disabled>;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state> = $r5;

        r1 = virtualinvoke r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnCancel()>();

        if r1 != null goto label1;

        goto label5;

     label1:
        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label5;

     label2:
        if z0 == 0 goto label3;

        $r7 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>;

        goto label4;

     label3:
        $r7 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Disabled>;

     label4:
        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state> = $r7;

     label5:
        return;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        java.util.List r1, r30, $r62;
        androidx.ui.core.PointerEventPass r2, $r5, $r39, $r61;
        androidx.ui.unit.IntPxSize r3;
        androidx.ui.core.PointerInputChange r4, $r23, r35, $r37, r38, $r43, $r49, r58, r60;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z22, $z24, $z25, $z28, $z29, $z31, $z35, z37, $z39;
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State $r6, $r7, $r9, $r11, $r12, $r13, $r14, $r16, $r18, $r21, $r27, $r28, $r52, $r53;
        java.util.Collection $r8, $r20, $r26, r32, r36, r55, r59;
        java.util.ArrayList $r15, $r29;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r22, r34, r42, r48, r57, r63, r64;
        androidx.ui.core.PointerInputData $r24;
        java.lang.Iterable $r31, $r40, $r46, $r54;
        java.util.Iterator $r33, $r41, $r47, $r56;
        kotlin.jvm.functions.Function1 $r44;
        androidx.ui.unit.PxPosition $r45;
        kotlin.jvm.functions.Function0 $r50, $r51, $r65;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        r30 = r1;

        $r5 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass InitialDown>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z1 == 0 goto label05;

        $r28 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state>;

        $r27 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>;

        $z15 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, $r27);

        if $z15 == 0 goto label05;

        $r31 = (java.lang.Iterable) r30;

        $r29 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r31, 10);

        specialinvoke $r29.<java.util.ArrayList: void <init>(int)>($i1);

        r32 = (java.util.Collection) $r29;

        $r33 = interfaceinvoke $r31.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z16 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label04;

        r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r35 = (androidx.ui.core.PointerInputChange) r34;

        r36 = r32;

        $z17 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDown(androidx.ui.core.PointerInputChange)>(r35);

        if $z17 == 0 goto label02;

        $r37 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.core.PointerInputChange consumeDownChange(androidx.ui.core.PointerInputChange)>(r35);

        goto label03;

     label02:
        $r37 = r35;

     label03:
        r38 = $r37;

        interfaceinvoke r36.<java.util.Collection: boolean add(java.lang.Object)>(r38);

        goto label01;

     label04:
        r30 = (java.util.List) r32;

     label05:
        $r39 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z22 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r39);

        if $z22 == 0 goto label22;

        $r12 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state>;

        $r11 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $z4 == 0 goto label11;

        $r40 = (java.lang.Iterable) r30;

        $z12 = $r40 instanceof java.util.Collection;

        if $z12 == 0 goto label06;

        $r26 = (java.util.Collection) $r40;

        $z14 = interfaceinvoke $r26.<java.util.Collection: boolean isEmpty()>();

        if $z14 == 0 goto label06;

        $z24 = 1;

        goto label09;

     label06:
        $r41 = interfaceinvoke $r40.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z25 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label08;

        r42 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        $r43 = (androidx.ui.core.PointerInputChange) r42;

        $z13 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDown(androidx.ui.core.PointerInputChange)>($r43);

        if $z13 != 0 goto label07;

        $z24 = 0;

        goto label09;

     label08:
        $z24 = 1;

     label09:
        if $z24 == 0 goto label11;

        $r21 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state> = $r21;

        $r44 = virtualinvoke r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function1 getOnStart()>();

        if $r44 != null goto label10;

        goto label19;

     label10:
        $r22 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r30);

        $r23 = (androidx.ui.core.PointerInputChange) $r22;

        $r24 = virtualinvoke $r23.<androidx.ui.core.PointerInputChange: androidx.ui.core.PointerInputData getCurrent()>();

        $r45 = virtualinvoke $r24.<androidx.ui.core.PointerInputData: androidx.ui.unit.PxPosition getPosition()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r45);

        interfaceinvoke $r44.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r45);

        goto label19;

     label11:
        $r14 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state>;

        $r13 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r14, $r13);

        if $z5 == 0 goto label19;

        $r46 = (java.lang.Iterable) r30;

        $z8 = $r46 instanceof java.util.Collection;

        if $z8 == 0 goto label12;

        $r20 = (java.util.Collection) $r46;

        $z11 = interfaceinvoke $r20.<java.util.Collection: boolean isEmpty()>();

        if $z11 == 0 goto label12;

        $z28 = 1;

        goto label15;

     label12:
        $r47 = interfaceinvoke $r46.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z29 = interfaceinvoke $r47.<java.util.Iterator: boolean hasNext()>();

        if $z29 == 0 goto label14;

        r48 = interfaceinvoke $r47.<java.util.Iterator: java.lang.Object next()>();

        $r49 = (androidx.ui.core.PointerInputChange) r48;

        $z10 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>($r49);

        if $z10 != 0 goto label13;

        $z28 = 0;

        goto label15;

     label14:
        $z28 = 1;

     label15:
        if $z28 == 0 goto label17;

        $r18 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state> = $r18;

        $r50 = virtualinvoke r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnStop()>();

        if $r50 != null goto label16;

        goto label19;

     label16:
        interfaceinvoke $r50.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label19;

     label17:
        $z9 = staticinvoke <androidx.ui.core.gesture.GestureUtilsKt: boolean anyPointersInBounds(java.util.List,androidx.ui.unit.IntPxSize)>(r30, r3);

        if $z9 != 0 goto label19;

        $r16 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state> = $r16;

        $r51 = virtualinvoke r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnCancel()>();

        if $r51 != null goto label18;

        goto label19;

     label18:
        interfaceinvoke $r51.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label19:
        $r52 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state>;

        $r53 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>;

        $z31 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r52, $r53);

        if $z31 == 0 goto label22;

        $r54 = (java.lang.Iterable) r30;

        $r15 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r54, 10);

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i0);

        r55 = (java.util.Collection) $r15;

        $r56 = interfaceinvoke $r54.<java.lang.Iterable: java.util.Iterator iterator()>();

     label20:
        $z6 = interfaceinvoke $r56.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label21;

        r57 = interfaceinvoke $r56.<java.util.Iterator: java.lang.Object next()>();

        r58 = (androidx.ui.core.PointerInputChange) r57;

        r59 = r55;

        r60 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.core.PointerInputChange consumeDownChange(androidx.ui.core.PointerInputChange)>(r58);

        interfaceinvoke r59.<java.util.Collection: boolean add(java.lang.Object)>(r60);

        goto label20;

     label21:
        r30 = (java.util.List) r55;

     label22:
        $r61 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z35 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r61);

        if $z35 == 0 goto label28;

        $r7 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state>;

        $r6 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 == 0 goto label28;

        $r62 = r30;

        z37 = 0;

        $i2 = 0;

        $r8 = (java.util.Collection) r30;

        $i3 = interfaceinvoke $r8.<java.util.Collection: int size()>();

     label23:
        if $i2 >= $i3 goto label25;

        r63 = interfaceinvoke $r62.<java.util.List: java.lang.Object get(int)>($i2);

        r64 = r63;

        r4 = (androidx.ui.core.PointerInputChange) r64;

        $z3 = staticinvoke <androidx.ui.core.PointerInputKt: boolean anyPositionChangeConsumed(androidx.ui.core.PointerInputChange)>(r4);

        if $z3 == 0 goto label24;

        $z39 = 1;

        goto label26;

     label24:
        $i2 = $i2 + 1;

        goto label23;

     label25:
        $z39 = 0;

     label26:
        if $z39 == 0 goto label28;

        $r9 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state> = $r9;

        $r65 = virtualinvoke r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnCancel()>();

        if $r65 != null goto label27;

        goto label28;

     label27:
        interfaceinvoke $r65.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label28:
        return r30;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter;

        $r3 = r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state>;

        $r2 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label2;

        $r4 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: androidx.ui.core.gesture.PressIndicatorGestureFilter$State state> = $r4;

        r1 = virtualinvoke r0.<androidx.ui.core.gesture.PressIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnCancel()>();

        if r1 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        return;
    }

androidx.ui.core.gesture.PressIndicatorGestureFilter$State
<androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Disabled>
<androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>
<androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>
<androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.core.gesture.PressIndicatorGestureFilter$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static final androidx.ui.core.gesture.PressIndicatorGestureFilter$State[] values()
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State[] r0, r1;
        int $i0, $i1;

        r0 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State[] $VALUES>;

        $i0 = lengthof r0;

        r1 = newarray (androidx.ui.core.gesture.PressIndicatorGestureFilter$State)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static final androidx.ui.core.gesture.PressIndicatorGestureFilter$State valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/ui/core/gesture/PressIndicatorGestureFilter$State;", r0);

        $r2 = (androidx.ui.core.gesture.PressIndicatorGestureFilter$State) $r1;

        return $r2;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State[] r0;
        androidx.ui.core.gesture.PressIndicatorGestureFilter$State $r1, $r2, $r3, $r4, $r5, $r6;

        $r1 = new androidx.ui.core.gesture.PressIndicatorGestureFilter$State;

        specialinvoke $r1.<androidx.ui.core.gesture.PressIndicatorGestureFilter$State: void <init>(java.lang.String,int)>("Disabled", 0);

        <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Disabled> = $r1;

        $r2 = new androidx.ui.core.gesture.PressIndicatorGestureFilter$State;

        specialinvoke $r2.<androidx.ui.core.gesture.PressIndicatorGestureFilter$State: void <init>(java.lang.String,int)>("Idle", 1);

        <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle> = $r2;

        $r3 = new androidx.ui.core.gesture.PressIndicatorGestureFilter$State;

        specialinvoke $r3.<androidx.ui.core.gesture.PressIndicatorGestureFilter$State: void <init>(java.lang.String,int)>("Started", 2);

        <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started> = $r3;

        r0 = newarray (androidx.ui.core.gesture.PressIndicatorGestureFilter$State)[3];

        $r4 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Disabled>;

        r0[0] = $r4;

        $r5 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Idle>;

        r0[1] = $r5;

        $r6 = <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State Started>;

        r0[2] = $r6;

        <androidx.ui.core.gesture.PressIndicatorGestureFilter$State: androidx.ui.core.gesture.PressIndicatorGestureFilter$State[] $VALUES> = r0;

        return;
    }

