kotlinx.coroutines.JobSupportKt
<kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY>
<kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY>
<kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN>
<kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE>
<kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW>
<kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED>
<kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL>
    static void <clinit>()
    {
        kotlinx.coroutines.internal.Symbol $r0;
        kotlinx.coroutines.Empty $r1;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("COMPLETING_ALREADY");

        <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("COMPLETING_WAITING_CHILDREN");

        <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("COMPLETING_RETRY");

        <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("TOO_LATE_TO_CANCEL");

        <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("SEALED");

        <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED> = $r0;

        $r1 = new kotlinx.coroutines.Empty;

        specialinvoke $r1.<kotlinx.coroutines.Empty: void <init>(boolean)>(0);

        <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW> = $r1;

        $r1 = new kotlinx.coroutines.Empty;

        specialinvoke $r1.<kotlinx.coroutines.Empty: void <init>(boolean)>(1);

        <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE> = $r1;

        return;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY>;

        return r0;
    }

    public static final kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
    {
        kotlinx.coroutines.Empty r0;

        r0 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE>;

        return r0;
    }

    public static final kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
    {
        kotlinx.coroutines.Empty r0;

        r0 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getSEALED$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL>;

        return r0;
    }

    public static final java.lang.Object boxIncomplete(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        kotlinx.coroutines.IncompleteStateBox $r1;
        kotlinx.coroutines.Incomplete $r2;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof kotlinx.coroutines.Incomplete;

        if $z0 == 0 goto label1;

        $r1 = new kotlinx.coroutines.IncompleteStateBox;

        $r2 = (kotlinx.coroutines.Incomplete) $r0;

        specialinvoke $r1.<kotlinx.coroutines.IncompleteStateBox: void <init>(kotlinx.coroutines.Incomplete)>($r2);

        return $r1;

     label1:
        return $r0;
    }

    public static final java.lang.Object unboxState(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        kotlinx.coroutines.IncompleteStateBox $r1;
        kotlinx.coroutines.Incomplete $r2;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof kotlinx.coroutines.IncompleteStateBox;

        if $z0 == 0 goto label1;

        $r1 = (kotlinx.coroutines.IncompleteStateBox) $r0;

        goto label2;

     label1:
        $r1 = null;

     label2:
        if $r1 == null goto label3;

        $r2 = $r1.<kotlinx.coroutines.IncompleteStateBox: kotlinx.coroutines.Incomplete state>;

        if $r2 == null goto label3;

        return $r2;

     label3:
        return $r0;
    }

