kotlinx.coroutines.MainCoroutineDispatcher
    public void <init>()
    {
        kotlinx.coroutines.MainCoroutineDispatcher $r0;

        $r0 := @this: kotlinx.coroutines.MainCoroutineDispatcher;

        specialinvoke $r0.<kotlinx.coroutines.CoroutineDispatcher: void <init>()>();

        return;
    }

<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>
    public java.lang.String toString()
    {
        kotlinx.coroutines.MainCoroutineDispatcher $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: kotlinx.coroutines.MainCoroutineDispatcher;

        $r1 = virtualinvoke $r0.<kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()>();

        if $r1 != null goto label1;

        $r1 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)>($r0);

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>($r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return $r1;
    }

    protected final java.lang.String toStringInternalImpl()
    {
        kotlinx.coroutines.MainCoroutineDispatcher $r0, $r1;
        java.lang.Throwable $r2;

        $r0 := @this: kotlinx.coroutines.MainCoroutineDispatcher;

        $r1 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        if $r0 != $r1 goto label1;

        return "Dispatchers.Main";

     label1:
        $r1 = virtualinvoke $r1.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r1 = null;

     label4:
        if $r0 != $r1 goto label5;

        return "Dispatchers.Main.immediate";

     label5:
        return null;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

