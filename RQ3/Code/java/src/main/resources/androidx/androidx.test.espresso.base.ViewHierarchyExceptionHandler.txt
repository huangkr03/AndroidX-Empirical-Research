androidx.test.espresso.base.ViewHierarchyExceptionHandler
<androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.lang.String TAG>
<androidx.test.espresso.base.ViewHierarchyExceptionHandler: int MAX_MSG_SIZE>
<androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.lang.String VIEW_HIERARCHY_CHAR_LIMIT>
<androidx.test.espresso.base.ViewHierarchyExceptionHandler: androidx.test.platform.io.PlatformTestStorage testStorage>
<androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.util.concurrent.atomic.AtomicInteger failureCount>
<androidx.test.espresso.base.ViewHierarchyExceptionHandler: androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater truncater>
    private int getMsgLen()
    {
        boolean z0;
        androidx.test.platform.io.PlatformTestStorage $r0, $r2;
        java.util.Map $r1;
        java.lang.Throwable $r3, r7;
        java.lang.String $r4, r6;
        androidx.test.espresso.base.ViewHierarchyExceptionHandler r5;
        int i1;

        r5 := @this: androidx.test.espresso.base.ViewHierarchyExceptionHandler;

     label1:
        $r0 = r5.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: androidx.test.platform.io.PlatformTestStorage testStorage>;

        $r1 = interfaceinvoke $r0.<androidx.test.platform.io.PlatformTestStorage: java.util.Map getInputArgs()>();

        z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("view_hierarchy_char_limit");

     label2:
        if z0 == 0 goto label7;

     label3:
        $r2 = r5.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: androidx.test.platform.io.PlatformTestStorage testStorage>;

        r6 = interfaceinvoke $r2.<androidx.test.platform.io.PlatformTestStorage: java.lang.String getInputArg(java.lang.String)>("view_hierarchy_char_limit");

     label4:
        if r6 == null goto label7;

     label5:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

     label6:
        return i1;

     label7:
        return 63488;

     label8:
        $r3 := @caughtexception;

        r7 = $r3;

        $r4 = <androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Failed to parse input argument view_hierarchy_char_limit", r7);

        goto label7;

        catch java.lang.NumberFormatException from label1 to label2 with label8;
        catch androidx.test.services.storage.TestStorageException from label1 to label2 with label8;
        catch java.lang.NumberFormatException from label3 to label4 with label8;
        catch androidx.test.services.storage.TestStorageException from label3 to label4 with label8;
        catch java.lang.NumberFormatException from label5 to label6 with label8;
        catch androidx.test.services.storage.TestStorageException from label5 to label6 with label8;
    }

    private java.lang.String dumpFullViewHierarchyToFile(java.lang.Throwable)
    {
        androidx.test.espresso.RootViewException $r0;
        android.view.View $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, r18, r21, r24;
        java.lang.String $r8, $r12, r15, r17, r19, r20, r23;
        java.lang.Throwable $r9, r14, r22;
        androidx.test.espresso.base.ViewHierarchyExceptionHandler r13;
        java.util.concurrent.atomic.AtomicInteger r16;

        r13 := @this: androidx.test.espresso.base.ViewHierarchyExceptionHandler;

        r14 := @parameter0: java.lang.Throwable;

        $r0 = (androidx.test.espresso.RootViewException) r14;

        $r1 = interfaceinvoke $r0.<androidx.test.espresso.RootViewException: android.view.View getRootView()>();

        r15 = staticinvoke <androidx.test.espresso.util.HumanReadables: java.lang.String getViewHierarchyErrorMessage(android.view.View,java.util.List,java.lang.String,java.lang.String)>($r1, null, "", null);

        r16 = r13.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.util.concurrent.atomic.AtomicInteger failureCount>;

        r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r16);

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("view-hierarchy-");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".txt");

        r19 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        specialinvoke r13.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: void addOutputFile(java.lang.String,java.lang.String)>(r19, r15);

        r20 = <androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.lang.String TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The complete view hierarchy is available in artifact file \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r20, $r8);

     label2:
        return r19;

     label3:
        $r9 := @caughtexception;

        r22 = $r9;

        r23 = <androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.lang.String TAG>;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to save the view hierarchy to file ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r23, $r12, r22);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/espresso/base/ViewHierarchyExceptionHandler;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(androidx.test.platform.io.PlatformTestStorage, java.util.concurrent.atomic.AtomicInteger, java.lang.Class, androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater)
    {
        androidx.test.espresso.base.ViewHierarchyExceptionHandler r0;
        androidx.test.platform.io.PlatformTestStorage r1, $r7;
        java.util.concurrent.atomic.AtomicInteger r2;
        java.lang.Class r3;
        androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater r4;
        java.lang.Class[] r5;
        java.lang.Object $r6;

        r0 := @this: androidx.test.espresso.base.ViewHierarchyExceptionHandler;

        r1 := @parameter0: androidx.test.platform.io.PlatformTestStorage;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicInteger;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater;

        r5 = newarray (java.lang.Class)[1];

        r5[0] = r3;

        specialinvoke r0.<androidx.test.espresso.base.DefaultFailureHandler$TypedFailureHandler: void <init>(java.lang.Class[])>(r5);

        $r6 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (androidx.test.platform.io.PlatformTestStorage) $r6;

        r0.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: androidx.test.platform.io.PlatformTestStorage testStorage> = $r7;

        r0.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.util.concurrent.atomic.AtomicInteger failureCount> = r2;

        r0.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater truncater> = r4;

        return;
    }

    private void addOutputFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r6;
        androidx.test.platform.io.PlatformTestStorage $r1;
        byte[] $r2;
        java.lang.Throwable $r3, $r4, r8, r9;
        androidx.test.espresso.base.ViewHierarchyExceptionHandler r5;
        java.io.OutputStream r7;

        r5 := @this: androidx.test.espresso.base.ViewHierarchyExceptionHandler;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = r5.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: androidx.test.platform.io.PlatformTestStorage testStorage>;

        r7 = interfaceinvoke $r1.<androidx.test.platform.io.PlatformTestStorage: java.io.OutputStream openOutputFile(java.lang.String)>(r6);

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r7.<java.io.OutputStream: void write(byte[])>($r2);

     label2:
        if r7 == null goto label3;

        virtualinvoke r7.<java.io.OutputStream: void close()>();

        return;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r8 = $r4;

        if r7 == null goto label6;

     label5:
        virtualinvoke r7.<java.io.OutputStream: void close()>();

     label6:
        throw r8;

     label7:
        $r3 := @caughtexception;

        r9 = $r3;

        staticinvoke <androidx.test.espresso.base.ViewHierarchyExceptionHandler$$ExternalSyntheticBackport0: void m(java.lang.Throwable,java.lang.Throwable)>(r8, r9);

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public volatile void handleSafely(java.lang.Object, org.hamcrest.Matcher)
    {
        androidx.test.espresso.base.ViewHierarchyExceptionHandler r0;
        java.lang.Object r1;
        org.hamcrest.Matcher r2;
        java.lang.Throwable $r3;

        r0 := @this: androidx.test.espresso.base.ViewHierarchyExceptionHandler;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Matcher;

        $r3 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: void handleSafely(java.lang.Throwable,org.hamcrest.Matcher)>($r3, r2);

        return;
    }

    public void handleSafely(java.lang.Throwable, org.hamcrest.Matcher)
    {
        int i0;
        java.lang.Thread $r0;
        java.lang.StackTraceElement[] $r1;
        androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater $r2;
        androidx.test.espresso.base.ViewHierarchyExceptionHandler r3;
        java.lang.Throwable r4, r7, r10;
        org.hamcrest.Matcher r5;
        java.lang.String r6;
        java.lang.RuntimeException r8, r9;

        r3 := @this: androidx.test.espresso.base.ViewHierarchyExceptionHandler;

        r4 := @parameter0: java.lang.Throwable;

        r5 := @parameter1: org.hamcrest.Matcher;

        r6 = specialinvoke r3.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: java.lang.String dumpFullViewHierarchyToFile(java.lang.Throwable)>(r4);

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r4.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r1);

        i0 = specialinvoke r3.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: int getMsgLen()>();

        $r2 = r3.<androidx.test.espresso.base.ViewHierarchyExceptionHandler: androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater truncater>;

        r7 = interfaceinvoke $r2.<androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater: java.lang.Throwable truncateExceptionMessage(java.lang.Object,int,java.lang.String)>(r4, i0, r6);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>(r7);

        r9 = new java.lang.RuntimeException;

        r8 = r9;

        specialinvoke r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r7);

        r10 = (java.lang.Throwable) r8;

        throw r10;
    }

androidx.test.espresso.base.ViewHierarchyExceptionHandler$$ExternalSyntheticBackport0
    public static void m(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable r0, r1, $r4;
        java.lang.Class[] r2;
        java.lang.Class r5;
        java.lang.String r6;
        java.lang.reflect.Method r7;
        java.lang.Object[] r8;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.Throwable;

     label1:
        r5 = class "Ljava/lang/Throwable;";

        r6 = "addSuppressed";

        r2 = newarray (java.lang.Class)[1];

     label2:
        r2[0] = class "Ljava/lang/Throwable;";

        r7 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r6, r2);

        r8 = newarray (java.lang.Object)[1];

        r8[0] = r1;

        virtualinvoke r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r8);

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label4;
    }

androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater
<androidx.test.espresso.base.ViewHierarchyExceptionHandler$Truncater: java.lang.Throwable truncateExceptionMessage(java.lang.Object,int,java.lang.String)>
