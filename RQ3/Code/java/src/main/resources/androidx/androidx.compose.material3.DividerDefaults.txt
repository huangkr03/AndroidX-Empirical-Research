androidx.compose.material3.DividerDefaults
<androidx.compose.material3.DividerDefaults: androidx.compose.material3.DividerDefaults INSTANCE>
<androidx.compose.material3.DividerDefaults: float Thickness>
<androidx.compose.material3.DividerDefaults: int $stable>
    private void <init>()
    {
        androidx.compose.material3.DividerDefaults r0;

        r0 := @this: androidx.compose.material3.DividerDefaults;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final float getThickness-D9Ej5fM()
    {
        androidx.compose.material3.DividerDefaults r0;
        float $f0;

        r0 := @this: androidx.compose.material3.DividerDefaults;

        $f0 = <androidx.compose.material3.DividerDefaults: float Thickness>;

        return $f0;
    }

    public final long getColor(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.material3.DividerDefaults r0;
        androidx.compose.runtime.Composer $r1;
        int $i0;
        long l1;
        boolean $z0, $z1;
        androidx.compose.material3.tokens.DividerTokens $r2;
        androidx.compose.material3.tokens.ColorSchemeKeyTokens $r3;

        r0 := @this: androidx.compose.material3.DividerDefaults;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(77461041);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C67@2407L9:Divider.kt#uh7d8r");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(77461041, $i0, -1, "androidx.compose.material3.DividerDefaults.<get-color> (Divider.kt:67)");

     label1:
        $r2 = <androidx.compose.material3.tokens.DividerTokens: androidx.compose.material3.tokens.DividerTokens INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.compose.material3.tokens.DividerTokens: androidx.compose.material3.tokens.ColorSchemeKeyTokens getColor()>();

        l1 = staticinvoke <androidx.compose.material3.ColorSchemeKt: long toColor(androidx.compose.material3.tokens.ColorSchemeKeyTokens,androidx.compose.runtime.Composer,int)>($r3, $r1, 6);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return l1;
    }

    static void <clinit>()
    {
        androidx.compose.material3.DividerDefaults $r0;
        androidx.compose.material3.tokens.DividerTokens $r1;
        float $f0;

        $r0 = new androidx.compose.material3.DividerDefaults;

        specialinvoke $r0.<androidx.compose.material3.DividerDefaults: void <init>()>();

        <androidx.compose.material3.DividerDefaults: androidx.compose.material3.DividerDefaults INSTANCE> = $r0;

        $r1 = <androidx.compose.material3.tokens.DividerTokens: androidx.compose.material3.tokens.DividerTokens INSTANCE>;

        $f0 = virtualinvoke $r1.<androidx.compose.material3.tokens.DividerTokens: float getThickness-D9Ej5fM()>();

        <androidx.compose.material3.DividerDefaults: float Thickness> = $f0;

        return;
    }

