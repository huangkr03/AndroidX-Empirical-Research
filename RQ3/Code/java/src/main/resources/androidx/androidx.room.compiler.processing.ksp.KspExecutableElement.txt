androidx.room.compiler.processing.ksp.KspExecutableElement
<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspExecutableElement$Companion Companion>
<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration declaration>
<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>
<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>
<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy enclosingElement$delegate>
<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy typeParameters$delegate>
<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy thrownTypes$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSFunctionDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration r2;
        com.google.devtools.ksp.symbol.KSAnnotated $r3, $r8;
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion $r4;
        androidx.room.compiler.processing.XHasModifiers $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $r6;
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion $r7;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r9;
        androidx.room.compiler.processing.ksp.KspAnnotated $r10;
        androidx.room.compiler.processing.ksp.KspExecutableElement$enclosingElement$2 $r11;
        kotlin.jvm.functions.Function0 $r12, $r15, $r18;
        kotlin.Lazy $r13, $r16, $r19;
        androidx.room.compiler.processing.ksp.KspExecutableElement$typeParameters$2 $r14;
        androidx.room.compiler.processing.ksp.KspExecutableElement$thrownTypes$2 $r17;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "declaration");

        $r3 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspElement: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated)>(r1, $r3);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration declaration> = r2;

        $r4 = <androidx.room.compiler.processing.ksp.KspHasModifiers: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspHasModifiers$Companion: androidx.room.compiler.processing.XHasModifiers create(com.google.devtools.ksp.symbol.KSFunctionDeclaration)>(r2);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0> = $r5;

        $r7 = <androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspAnnotated$Companion Companion>;

        $r8 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        $r6 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion Companion>;

        $r9 = virtualinvoke $r6.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE()>();

        $r10 = virtualinvoke $r7.<androidx.room.compiler.processing.ksp.KspAnnotated$Companion: androidx.room.compiler.processing.ksp.KspAnnotated create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated,androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)>(r1, $r8, $r9);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1> = $r10;

        $r11 = new androidx.room.compiler.processing.ksp.KspExecutableElement$enclosingElement$2;

        specialinvoke $r11.<androidx.room.compiler.processing.ksp.KspExecutableElement$enclosingElement$2: void <init>(androidx.room.compiler.processing.ksp.KspExecutableElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy enclosingElement$delegate> = $r13;

        $r14 = new androidx.room.compiler.processing.ksp.KspExecutableElement$typeParameters$2;

        specialinvoke $r14.<androidx.room.compiler.processing.ksp.KspExecutableElement$typeParameters$2: void <init>(androidx.room.compiler.processing.ksp.KspExecutableElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r15 = (kotlin.jvm.functions.Function0) $r14;

        $r16 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r15);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy typeParameters$delegate> = $r16;

        $r17 = new androidx.room.compiler.processing.ksp.KspExecutableElement$thrownTypes$2;

        specialinvoke $r17.<androidx.room.compiler.processing.ksp.KspExecutableElement$thrownTypes$2: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspExecutableElement)>(r1, r0);

        $r18 = (kotlin.jvm.functions.Function0) $r17;

        $r19 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r18);

        r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy thrownTypes$delegate> = $r19;

        return;
    }

    public com.google.devtools.ksp.symbol.KSFunctionDeclaration getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration declaration>;

        return $r1;
    }

    public boolean isAbstract()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isAbstract()>();

        return $z0;
    }

    public boolean isFinal()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isFinal()>();

        return $z0;
    }

    public boolean isPrivate()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isPrivate()>();

        return $z0;
    }

    public boolean isProtected()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isProtected()>();

        return $z0;
    }

    public boolean isPublic()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isPublic()>();

        return $z0;
    }

    public boolean isStatic()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isStatic()>();

        return $z0;
    }

    public boolean isTransient()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isTransient()>();

        return $z0;
    }

    public java.util.List getAllAnnotations()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAllAnnotations()>();

        return $r2;
    }

    public androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.Set $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public transient boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAllAnnotations(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAllAnnotations(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>(r1);

        return $z0;
    }

    public boolean hasAnnotationWithPackage(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        java.lang.String r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pkg");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotationWithPackage(java.lang.String)>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAnyAnnotation(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(java.util.Collection)>(r1);

        return $z0;
    }

    public androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy enclosingElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspMemberContainer) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    public java.util.List getTypeParameters()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy typeParameters$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public java.util.List getThrownTypes()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: kotlin.Lazy thrownTypes$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public static void getThrownTypes$annotations()
    {
        return;
    }

    public boolean isVarArgs()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        com.google.devtools.ksp.symbol.KSValueParameter r4;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r5, $r8;
        java.util.Set $r6;
        com.google.devtools.ksp.symbol.Modifier $r7;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.List $r9;
        java.util.Collection $r10;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration getDeclaration()>();

        $r6 = interfaceinvoke $r5.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: java.util.Set getModifiers()>();

        $r7 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier SUSPEND>;

        $z2 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z2 != 0 goto label5;

        $r8 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration getDeclaration()>();

        $r9 = interfaceinvoke $r8.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: java.util.List getParameters()>();

        $r1 = (java.lang.Iterable) $r9;

        $z3 = $r1 instanceof java.util.Collection;

        if $z3 == 0 goto label1;

        $r10 = (java.util.Collection) $r1;

        $z5 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        $z6 = 0;

        goto label4;

     label1:
        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.devtools.ksp.symbol.KSValueParameter) r3;

        $z4 = interfaceinvoke r4.<com.google.devtools.ksp.symbol.KSValueParameter: boolean isVararg()>();

        if $z4 == 0 goto label2;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        if $z6 == 0 goto label5;

        $z8 = 1;

        goto label6;

     label5:
        $z8 = 0;

     label6:
        return $z8;
    }

    public volatile com.google.devtools.ksp.symbol.KSAnnotated getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r1;
        com.google.devtools.ksp.symbol.KSAnnotated $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration getDeclaration()>();

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotated) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r1;
        androidx.room.compiler.processing.XElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement r0;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspExecutableElement$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspExecutableElement$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspExecutableElement$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspExecutableElement$Companion Companion> = $r0;

        return;
    }

