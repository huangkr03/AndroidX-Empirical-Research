androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger logger>
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: kotlin.Lazy steps$delegate>
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: kotlin.Lazy commonDelegate$delegate>
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: boolean initialized>
    public void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment, androidx.room.compiler.processing.XProcessingEnvConfig)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor r0;
        com.google.devtools.ksp.processing.SymbolProcessorEnvironment r1;
        androidx.room.compiler.processing.XProcessingEnvConfig r2;
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger $r3, $r8;
        com.google.devtools.ksp.processing.KSPLogger $r4, $r9;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r5;
        java.util.Map $r6;
        com.google.devtools.ksp.processing.CodeGenerator $r7;
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2 $r10;
        kotlin.jvm.functions.Function0 $r11, $r14;
        kotlin.Lazy $r12, $r15;
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2 $r13;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        r1 := @parameter0: com.google.devtools.ksp.processing.SymbolProcessorEnvironment;

        r2 := @parameter1: androidx.room.compiler.processing.XProcessingEnvConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "symbolProcessorEnvironment");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        $r4 = virtualinvoke r1.<com.google.devtools.ksp.processing.SymbolProcessorEnvironment: com.google.devtools.ksp.processing.KSPLogger getLogger()>();

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: void <init>(com.google.devtools.ksp.processing.KSPLogger)>($r4);

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger logger> = $r3;

        $r5 = new androidx.room.compiler.processing.ksp.KspProcessingEnv;

        $r6 = virtualinvoke r1.<com.google.devtools.ksp.processing.SymbolProcessorEnvironment: java.util.Map getOptions()>();

        $r7 = virtualinvoke r1.<com.google.devtools.ksp.processing.SymbolProcessorEnvironment: com.google.devtools.ksp.processing.CodeGenerator getCodeGenerator()>();

        $r8 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger logger>;

        $r9 = (com.google.devtools.ksp.processing.KSPLogger) $r8;

        specialinvoke $r5.<androidx.room.compiler.processing.ksp.KspProcessingEnv: void <init>(java.util.Map,com.google.devtools.ksp.processing.CodeGenerator,com.google.devtools.ksp.processing.KSPLogger,androidx.room.compiler.processing.XProcessingEnvConfig)>($r6, $r7, $r9, r2);

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv> = $r5;

        $r10 = new androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2;

        specialinvoke $r10.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2: void <init>(androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        $r12 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r11);

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: kotlin.Lazy steps$delegate> = $r12;

        $r13 = new androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2;

        specialinvoke $r13.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2: void <init>(androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor)>(r0);

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        $r15 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r14);

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: kotlin.Lazy commonDelegate$delegate> = $r15;

        return;
    }

    public void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment, androidx.room.compiler.processing.XProcessingEnvConfig, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor r0;
        com.google.devtools.ksp.processing.SymbolProcessorEnvironment r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.room.compiler.processing.XProcessingEnvConfig$Companion $r3;
        androidx.room.compiler.processing.XProcessingEnvConfig r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        r1 := @parameter0: com.google.devtools.ksp.processing.SymbolProcessorEnvironment;

        r4 := @parameter1: androidx.room.compiler.processing.XProcessingEnvConfig;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r3 = <androidx.room.compiler.processing.XProcessingEnvConfig: androidx.room.compiler.processing.XProcessingEnvConfig$Companion Companion>;

        r4 = virtualinvoke $r3.<androidx.room.compiler.processing.XProcessingEnvConfig$Companion: androidx.room.compiler.processing.XProcessingEnvConfig getDEFAULT()>();

     label1:
        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment,androidx.room.compiler.processing.XProcessingEnvConfig)>(r1, r4);

        return;
    }

    private final java.util.List getSteps()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: kotlin.Lazy steps$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    private final androidx.room.compiler.processing.CommonProcessorDelegate getCommonDelegate()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.CommonProcessorDelegate $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: kotlin.Lazy commonDelegate$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.CommonProcessorDelegate) $r2;

        return $r3;
    }

    public final androidx.room.compiler.processing.XProcessingEnv getXProcessingEnv()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r1;
        androidx.room.compiler.processing.XProcessingEnv $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        $r2 = (androidx.room.compiler.processing.XProcessingEnv) $r1;

        return $r2;
    }

    public final java.util.List process(com.google.devtools.ksp.processing.Resolver)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor r0;
        com.google.devtools.ksp.processing.Resolver r1;
        androidx.room.compiler.processing.ksp.KspRoundEnv r2, $r4;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r3, $r5, $r8, $r11, $r13;
        boolean $z0;
        androidx.room.compiler.processing.CommonProcessorDelegate $r6;
        androidx.room.compiler.processing.XRoundEnv $r7, $r9;
        androidx.room.compiler.processing.XProcessingEnv $r10, $r14;
        java.util.List $r12;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        r1 := @parameter0: com.google.devtools.ksp.processing.Resolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resolver");

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspProcessingEnv: void setResolver$room_compiler_processing(com.google.devtools.ksp.processing.Resolver)>(r1);

        $z0 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: boolean initialized>;

        if $z0 != 0 goto label1;

        $r13 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        $r14 = (androidx.room.compiler.processing.XProcessingEnv) $r13;

        virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: void initialize(androidx.room.compiler.processing.XProcessingEnv)>($r14);

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: boolean initialized> = 1;

     label1:
        $r4 = new androidx.room.compiler.processing.ksp.KspRoundEnv;

        $r5 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        specialinvoke $r4.<androidx.room.compiler.processing.ksp.KspRoundEnv: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,boolean)>($r5, 0);

        r2 = $r4;

        $r6 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.CommonProcessorDelegate getCommonDelegate()>();

        $r7 = (androidx.room.compiler.processing.XRoundEnv) r2;

        virtualinvoke $r6.<androidx.room.compiler.processing.CommonProcessorDelegate: void processRound(androidx.room.compiler.processing.XRoundEnv)>($r7);

        $r8 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        $r10 = (androidx.room.compiler.processing.XProcessingEnv) $r8;

        $r9 = (androidx.room.compiler.processing.XRoundEnv) r2;

        virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: void postRound(androidx.room.compiler.processing.XProcessingEnv,androidx.room.compiler.processing.XRoundEnv)>($r10, $r9);

        $r11 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        virtualinvoke $r11.<androidx.room.compiler.processing.ksp.KspProcessingEnv: void clearCache$room_compiler_processing()>();

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r12;
    }

    public final void finish()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor r0;
        androidx.room.compiler.processing.ksp.KspRoundEnv r1, $r3;
        java.util.List r2;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r4, $r6;
        androidx.room.compiler.processing.CommonProcessorDelegate $r5, $r12;
        androidx.room.compiler.processing.XRoundEnv $r7;
        androidx.room.compiler.processing.XProcessingEnv $r8, $r9;
        androidx.room.compiler.processing.XProcessingEnvConfig $r10;
        boolean $z0, $z1;
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger $r11;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        $r3 = new androidx.room.compiler.processing.ksp.KspRoundEnv;

        $r4 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspRoundEnv: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,boolean)>($r4, 1);

        r1 = $r3;

        $r5 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.CommonProcessorDelegate getCommonDelegate()>();

        r2 = virtualinvoke $r5.<androidx.room.compiler.processing.CommonProcessorDelegate: java.util.List processLastRound()>();

        $r6 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        $r8 = (androidx.room.compiler.processing.XProcessingEnv) $r6;

        $r7 = (androidx.room.compiler.processing.XRoundEnv) r1;

        virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: void postRound(androidx.room.compiler.processing.XProcessingEnv,androidx.room.compiler.processing.XRoundEnv)>($r8, $r7);

        $r9 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.XProcessingEnv getXProcessingEnv()>();

        $r10 = interfaceinvoke $r9.<androidx.room.compiler.processing.XProcessingEnv: androidx.room.compiler.processing.XProcessingEnvConfig getConfig()>();

        $z0 = virtualinvoke $r10.<androidx.room.compiler.processing.XProcessingEnvConfig: boolean getDisableAnnotatedElementValidation()>();

        if $z0 != 0 goto label1;

        $r11 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger logger>;

        $z1 = virtualinvoke $r11.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: boolean getHasError()>();

        if $z1 != 0 goto label1;

        $r12 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.CommonProcessorDelegate getCommonDelegate()>();

        virtualinvoke $r12.<androidx.room.compiler.processing.CommonProcessorDelegate: void reportMissingElements(java.util.List)>(r2);

     label1:
        return;
    }

    public void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor r0;
        com.google.devtools.ksp.processing.SymbolProcessorEnvironment r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        r1 := @parameter0: com.google.devtools.ksp.processing.SymbolProcessorEnvironment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "symbolProcessorEnvironment");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment,androidx.room.compiler.processing.XProcessingEnvConfig,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 2, null);

        return;
    }

    public static final androidx.room.compiler.processing.ksp.KspProcessingEnv access$getXEnv$p(androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor $r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        $r1 = $r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv xEnv>;

        return $r1;
    }

    public static final java.util.List access$getSteps(androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: java.util.List getSteps()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2 r0;
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.processing.CommonProcessorDelegate invoke()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2 r0;
        androidx.room.compiler.processing.CommonProcessorDelegate $r1;
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor $r2, $r4, $r6;
        java.lang.Class $r3;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r5;
        androidx.room.compiler.processing.XProcessingEnv $r7;
        java.util.List $r8;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2;

        $r1 = new androidx.room.compiler.processing.CommonProcessorDelegate;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor this$0>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor this$0>;

        $r5 = staticinvoke <androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: androidx.room.compiler.processing.ksp.KspProcessingEnv access$getXEnv$p(androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor)>($r4);

        $r7 = (androidx.room.compiler.processing.XProcessingEnv) $r5;

        $r6 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor this$0>;

        $r8 = staticinvoke <androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: java.util.List access$getSteps(androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor)>($r6);

        specialinvoke $r1.<androidx.room.compiler.processing.CommonProcessorDelegate: void <init>(java.lang.Class,androidx.room.compiler.processing.XProcessingEnv,java.util.List)>($r3, $r7, $r8);

        return $r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2 r0;
        androidx.room.compiler.processing.CommonProcessorDelegate $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$commonDelegate$2: androidx.room.compiler.processing.CommonProcessorDelegate invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: com.google.devtools.ksp.processing.KSPLogger delegate>
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: boolean hasError>
    public void <init>(com.google.devtools.ksp.processing.KSPLogger)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        com.google.devtools.ksp.processing.KSPLogger r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        r1 := @parameter0: com.google.devtools.ksp.processing.KSPLogger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegate");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: com.google.devtools.ksp.processing.KSPLogger delegate> = r1;

        return;
    }

    public final com.google.devtools.ksp.processing.KSPLogger getDelegate()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        com.google.devtools.ksp.processing.KSPLogger $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: com.google.devtools.ksp.processing.KSPLogger delegate>;

        return $r1;
    }

    public void info(java.lang.String, com.google.devtools.ksp.symbol.KSNode)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        java.lang.String r1;
        com.google.devtools.ksp.symbol.KSNode r2;
        com.google.devtools.ksp.processing.KSPLogger $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "message");

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: com.google.devtools.ksp.processing.KSPLogger delegate>;

        interfaceinvoke $r3.<com.google.devtools.ksp.processing.KSPLogger: void info(java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r1, r2);

        return;
    }

    public void logging(java.lang.String, com.google.devtools.ksp.symbol.KSNode)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        java.lang.String r1;
        com.google.devtools.ksp.symbol.KSNode r2;
        com.google.devtools.ksp.processing.KSPLogger $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "message");

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: com.google.devtools.ksp.processing.KSPLogger delegate>;

        interfaceinvoke $r3.<com.google.devtools.ksp.processing.KSPLogger: void logging(java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r1, r2);

        return;
    }

    public void warn(java.lang.String, com.google.devtools.ksp.symbol.KSNode)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        java.lang.String r1;
        com.google.devtools.ksp.symbol.KSNode r2;
        com.google.devtools.ksp.processing.KSPLogger $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "message");

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: com.google.devtools.ksp.processing.KSPLogger delegate>;

        interfaceinvoke $r3.<com.google.devtools.ksp.processing.KSPLogger: void warn(java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r1, r2);

        return;
    }

    public final boolean getHasError()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        $z0 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: boolean hasError>;

        return $z0;
    }

    public final void setHasError(boolean)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        boolean z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        z0 := @parameter0: boolean;

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: boolean hasError> = z0;

        return;
    }

    public void error(java.lang.String, com.google.devtools.ksp.symbol.KSNode)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        java.lang.String r1;
        com.google.devtools.ksp.symbol.KSNode r2;
        com.google.devtools.ksp.processing.KSPLogger $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "message");

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: boolean hasError> = 1;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: com.google.devtools.ksp.processing.KSPLogger delegate>;

        interfaceinvoke $r3.<com.google.devtools.ksp.processing.KSPLogger: void error(java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r1, r2);

        return;
    }

    public void exception(java.lang.Throwable)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger r0;
        java.lang.Throwable r1;
        com.google.devtools.ksp.processing.KSPLogger $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger;

        r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "e");

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: boolean hasError> = 1;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$DelegateLogger: com.google.devtools.ksp.processing.KSPLogger delegate>;

        interfaceinvoke $r2.<com.google.devtools.ksp.processing.KSPLogger: void exception(java.lang.Throwable)>(r1);

        return;
    }

androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2
<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor)
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2 r0;
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor;

        r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.List invoke()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2 r0;
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor $r1;
        java.lang.Iterable $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor this$0>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: java.lang.Iterable processingSteps()>();

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r2);

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2 r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor$steps$2: java.util.List invoke()>();

        return $r1;
    }

