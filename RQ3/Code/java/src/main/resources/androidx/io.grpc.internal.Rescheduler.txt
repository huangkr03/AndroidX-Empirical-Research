io.grpc.internal.Rescheduler
<io.grpc.internal.Rescheduler: boolean enabled>
<io.grpc.internal.Rescheduler: long runAtNanos>
<io.grpc.internal.Rescheduler: java.lang.Runnable runnable>
<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledExecutorService scheduler>
<io.grpc.internal.Rescheduler: java.util.concurrent.Executor serializingExecutor>
<io.grpc.internal.Rescheduler: com.google.common.base.Stopwatch stopwatch>
<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture wakeUp>
    void <init>(java.lang.Runnable, java.util.concurrent.Executor, java.util.concurrent.ScheduledExecutorService, com.google.common.base.Stopwatch)
    {
        io.grpc.internal.Rescheduler $r0;
        java.lang.Runnable $r1;
        java.util.concurrent.Executor $r2;
        java.util.concurrent.ScheduledExecutorService $r3;
        com.google.common.base.Stopwatch $r4;

        $r0 := @this: io.grpc.internal.Rescheduler;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r3 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        $r4 := @parameter3: com.google.common.base.Stopwatch;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.Rescheduler: java.lang.Runnable runnable> = $r1;

        $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.Executor serializingExecutor> = $r2;

        $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledExecutorService scheduler> = $r3;

        $r0.<io.grpc.internal.Rescheduler: com.google.common.base.Stopwatch stopwatch> = $r4;

        virtualinvoke $r4.<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch start()>();

        return;
    }

    static java.util.concurrent.Executor access$200(io.grpc.internal.Rescheduler)
    {
        io.grpc.internal.Rescheduler $r0;
        java.util.concurrent.Executor r1;

        $r0 := @parameter0: io.grpc.internal.Rescheduler;

        r1 = $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.Executor serializingExecutor>;

        return r1;
    }

    static boolean access$300(io.grpc.internal.Rescheduler)
    {
        io.grpc.internal.Rescheduler $r0;
        boolean z0;

        $r0 := @parameter0: io.grpc.internal.Rescheduler;

        z0 = $r0.<io.grpc.internal.Rescheduler: boolean enabled>;

        return z0;
    }

    static boolean access$302(io.grpc.internal.Rescheduler, boolean)
    {
        io.grpc.internal.Rescheduler $r0;
        boolean $z0;

        $r0 := @parameter0: io.grpc.internal.Rescheduler;

        $z0 := @parameter1: boolean;

        $r0.<io.grpc.internal.Rescheduler: boolean enabled> = $z0;

        return $z0;
    }

    static java.util.concurrent.ScheduledFuture access$402(io.grpc.internal.Rescheduler, java.util.concurrent.ScheduledFuture)
    {
        io.grpc.internal.Rescheduler $r0;
        java.util.concurrent.ScheduledFuture $r1;

        $r0 := @parameter0: io.grpc.internal.Rescheduler;

        $r1 := @parameter1: java.util.concurrent.ScheduledFuture;

        $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture wakeUp> = $r1;

        return $r1;
    }

    static long access$500(io.grpc.internal.Rescheduler)
    {
        io.grpc.internal.Rescheduler $r0;
        long $l0;

        $r0 := @parameter0: io.grpc.internal.Rescheduler;

        $l0 = specialinvoke $r0.<io.grpc.internal.Rescheduler: long nanoTime()>();

        return $l0;
    }

    static long access$600(io.grpc.internal.Rescheduler)
    {
        io.grpc.internal.Rescheduler $r0;
        long l0;

        $r0 := @parameter0: io.grpc.internal.Rescheduler;

        l0 = $r0.<io.grpc.internal.Rescheduler: long runAtNanos>;

        return l0;
    }

    static java.util.concurrent.ScheduledExecutorService access$700(io.grpc.internal.Rescheduler)
    {
        io.grpc.internal.Rescheduler $r0;
        java.util.concurrent.ScheduledExecutorService r1;

        $r0 := @parameter0: io.grpc.internal.Rescheduler;

        r1 = $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledExecutorService scheduler>;

        return r1;
    }

    static java.lang.Runnable access$800(io.grpc.internal.Rescheduler)
    {
        io.grpc.internal.Rescheduler $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: io.grpc.internal.Rescheduler;

        r1 = $r0.<io.grpc.internal.Rescheduler: java.lang.Runnable runnable>;

        return r1;
    }

    private long nanoTime()
    {
        io.grpc.internal.Rescheduler $r0;
        java.util.concurrent.TimeUnit $r1;
        long $l0;
        com.google.common.base.Stopwatch $r2;

        $r0 := @this: io.grpc.internal.Rescheduler;

        $r2 = $r0.<io.grpc.internal.Rescheduler: com.google.common.base.Stopwatch stopwatch>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l0 = virtualinvoke $r2.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r1);

        return $l0;
    }

    void cancel(boolean)
    {
        io.grpc.internal.Rescheduler $r0;
        boolean $z0;
        java.util.concurrent.ScheduledFuture $r1;

        $r0 := @this: io.grpc.internal.Rescheduler;

        $z0 := @parameter0: boolean;

        $r0.<io.grpc.internal.Rescheduler: boolean enabled> = 0;

        if $z0 == 0 goto label1;

        $r1 = $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture wakeUp>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(0);

        $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture wakeUp> = null;

     label1:
        return;
    }

    void reschedule(long, java.util.concurrent.TimeUnit)
    {
        io.grpc.internal.Rescheduler $r0;
        long $l0, $l1, $l2;
        java.util.concurrent.TimeUnit $r1;
        byte $b3;
        java.util.concurrent.ScheduledFuture $r2;
        java.util.concurrent.ScheduledExecutorService $r3;
        io.grpc.internal.Rescheduler$FutureRunnable $r4;

        $r0 := @this: io.grpc.internal.Rescheduler;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l0);

        $l1 = specialinvoke $r0.<io.grpc.internal.Rescheduler: long nanoTime()>();

        $l1 = $l1 + $l0;

        $r0.<io.grpc.internal.Rescheduler: boolean enabled> = 1;

        $l2 = $r0.<io.grpc.internal.Rescheduler: long runAtNanos>;

        $l2 = $l1 - $l2;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label1;

        $r2 = $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture wakeUp>;

        if $r2 != null goto label3;

     label1:
        $r2 = $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture wakeUp>;

        if $r2 == null goto label2;

        interfaceinvoke $r2.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(0);

     label2:
        $r3 = $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r4 = new io.grpc.internal.Rescheduler$FutureRunnable;

        specialinvoke $r4.<io.grpc.internal.Rescheduler$FutureRunnable: void <init>(io.grpc.internal.Rescheduler,io.grpc.internal.Rescheduler$1)>($r0, null);

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r2 = interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r4, $l0, $r1);

        $r0.<io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture wakeUp> = $r2;

     label3:
        $r0.<io.grpc.internal.Rescheduler: long runAtNanos> = $l1;

        return;
    }

io.grpc.internal.Rescheduler$1
io.grpc.internal.Rescheduler$ChannelFutureRunnable
<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>
    private void <init>(io.grpc.internal.Rescheduler)
    {
        io.grpc.internal.Rescheduler$ChannelFutureRunnable $r0;
        io.grpc.internal.Rescheduler $r1;

        $r0 := @this: io.grpc.internal.Rescheduler$ChannelFutureRunnable;

        $r1 := @parameter0: io.grpc.internal.Rescheduler;

        $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.Rescheduler, io.grpc.internal.Rescheduler$1)
    {
        io.grpc.internal.Rescheduler$ChannelFutureRunnable $r0;
        io.grpc.internal.Rescheduler $r1;
        io.grpc.internal.Rescheduler$1 $r2;

        $r0 := @this: io.grpc.internal.Rescheduler$ChannelFutureRunnable;

        $r1 := @parameter0: io.grpc.internal.Rescheduler;

        $r2 := @parameter1: io.grpc.internal.Rescheduler$1;

        specialinvoke $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: void <init>(io.grpc.internal.Rescheduler)>($r1);

        return;
    }

    public void run()
    {
        io.grpc.internal.Rescheduler$ChannelFutureRunnable $r0;
        io.grpc.internal.Rescheduler$FutureRunnable $r1;
        io.grpc.internal.Rescheduler $r2, $r4;
        boolean $z0;
        long $l0, $l1;
        byte $b2;
        java.util.concurrent.ScheduledExecutorService $r3;
        java.util.concurrent.TimeUnit $r5;
        java.util.concurrent.ScheduledFuture $r6;
        java.lang.Runnable $r7;

        $r0 := @this: io.grpc.internal.Rescheduler$ChannelFutureRunnable;

        $r2 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        $z0 = staticinvoke <io.grpc.internal.Rescheduler: boolean access$300(io.grpc.internal.Rescheduler)>($r2);

        if $z0 != 0 goto label1;

        $r2 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        staticinvoke <io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture access$402(io.grpc.internal.Rescheduler,java.util.concurrent.ScheduledFuture)>($r2, null);

        return;

     label1:
        $r2 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        $l0 = staticinvoke <io.grpc.internal.Rescheduler: long access$500(io.grpc.internal.Rescheduler)>($r2);

        $r2 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        $l1 = staticinvoke <io.grpc.internal.Rescheduler: long access$600(io.grpc.internal.Rescheduler)>($r2);

        $l1 = $l1 - $l0;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label2;

        $r2 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        $r3 = staticinvoke <io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledExecutorService access$700(io.grpc.internal.Rescheduler)>($r2);

        $r1 = new io.grpc.internal.Rescheduler$FutureRunnable;

        $r4 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        specialinvoke $r1.<io.grpc.internal.Rescheduler$FutureRunnable: void <init>(io.grpc.internal.Rescheduler,io.grpc.internal.Rescheduler$1)>($r4, null);

        $r4 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        $l1 = staticinvoke <io.grpc.internal.Rescheduler: long access$600(io.grpc.internal.Rescheduler)>($r4);

        $l0 = $l1 - $l0;

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r6 = interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r1, $l0, $r5);

        staticinvoke <io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture access$402(io.grpc.internal.Rescheduler,java.util.concurrent.ScheduledFuture)>($r2, $r6);

        return;

     label2:
        $r2 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        staticinvoke <io.grpc.internal.Rescheduler: boolean access$302(io.grpc.internal.Rescheduler,boolean)>($r2, 0);

        $r2 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        staticinvoke <io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture access$402(io.grpc.internal.Rescheduler,java.util.concurrent.ScheduledFuture)>($r2, null);

        $r2 = $r0.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0>;

        $r7 = staticinvoke <io.grpc.internal.Rescheduler: java.lang.Runnable access$800(io.grpc.internal.Rescheduler)>($r2);

        interfaceinvoke $r7.<java.lang.Runnable: void run()>();

        return;
    }

io.grpc.internal.Rescheduler$FutureRunnable
<io.grpc.internal.Rescheduler$FutureRunnable: io.grpc.internal.Rescheduler this$0>
    private void <init>(io.grpc.internal.Rescheduler)
    {
        io.grpc.internal.Rescheduler$FutureRunnable $r0;
        io.grpc.internal.Rescheduler $r1;

        $r0 := @this: io.grpc.internal.Rescheduler$FutureRunnable;

        $r1 := @parameter0: io.grpc.internal.Rescheduler;

        $r0.<io.grpc.internal.Rescheduler$FutureRunnable: io.grpc.internal.Rescheduler this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.Rescheduler, io.grpc.internal.Rescheduler$1)
    {
        io.grpc.internal.Rescheduler$FutureRunnable $r0;
        io.grpc.internal.Rescheduler $r1;
        io.grpc.internal.Rescheduler$1 $r2;

        $r0 := @this: io.grpc.internal.Rescheduler$FutureRunnable;

        $r1 := @parameter0: io.grpc.internal.Rescheduler;

        $r2 := @parameter1: io.grpc.internal.Rescheduler$1;

        specialinvoke $r0.<io.grpc.internal.Rescheduler$FutureRunnable: void <init>(io.grpc.internal.Rescheduler)>($r1);

        return;
    }

    public void run()
    {
        io.grpc.internal.Rescheduler$FutureRunnable $r0;
        io.grpc.internal.Rescheduler$ChannelFutureRunnable $r1;
        io.grpc.internal.Rescheduler $r2;
        java.util.concurrent.Executor $r3;

        $r0 := @this: io.grpc.internal.Rescheduler$FutureRunnable;

        $r2 = $r0.<io.grpc.internal.Rescheduler$FutureRunnable: io.grpc.internal.Rescheduler this$0>;

        $r3 = staticinvoke <io.grpc.internal.Rescheduler: java.util.concurrent.Executor access$200(io.grpc.internal.Rescheduler)>($r2);

        $r1 = new io.grpc.internal.Rescheduler$ChannelFutureRunnable;

        $r2 = $r0.<io.grpc.internal.Rescheduler$FutureRunnable: io.grpc.internal.Rescheduler this$0>;

        specialinvoke $r1.<io.grpc.internal.Rescheduler$ChannelFutureRunnable: void <init>(io.grpc.internal.Rescheduler,io.grpc.internal.Rescheduler$1)>($r2, null);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        return;
    }

