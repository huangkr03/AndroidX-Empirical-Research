com.google.common.flogger.LogSiteMap
<com.google.common.flogger.LogSiteMap: java.util.concurrent.ConcurrentHashMap concurrentMap>
    static volatile java.util.concurrent.ConcurrentHashMap '-$$Nest$fgetconcurrentMap'(com.google.common.flogger.LogSiteMap)
    {
        com.google.common.flogger.LogSiteMap $r0;
        java.util.concurrent.ConcurrentHashMap r1;

        $r0 := @parameter0: com.google.common.flogger.LogSiteMap;

        r1 = $r0.<com.google.common.flogger.LogSiteMap: java.util.concurrent.ConcurrentHashMap concurrentMap>;

        return r1;
    }

    protected void <init>()
    {
        com.google.common.flogger.LogSiteMap $r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        $r0 := @this: com.google.common.flogger.LogSiteMap;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<com.google.common.flogger.LogSiteMap: java.util.concurrent.ConcurrentHashMap concurrentMap> = $r1;

        return;
    }

    private void addRemovalHook(com.google.common.flogger.LogSiteKey, com.google.common.flogger.backend.Metadata)
    {
        com.google.common.flogger.LogSiteMap $r0;
        com.google.common.flogger.LogSiteKey $r1;
        com.google.common.flogger.backend.Metadata $r2;
        int $i0, $i1;
        com.google.common.flogger.LogSiteMap$1 $r3;
        com.google.common.flogger.MetadataKey $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.google.common.flogger.LoggingScope $r7;

        $r0 := @this: com.google.common.flogger.LogSiteMap;

        $r1 := @parameter0: com.google.common.flogger.LogSiteKey;

        $r2 := @parameter1: com.google.common.flogger.backend.Metadata;

        $i0 = virtualinvoke $r2.<com.google.common.flogger.backend.Metadata: int size()>();

        $r3 = null;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r4 = <com.google.common.flogger.LogContext$Key: com.google.common.flogger.MetadataKey LOG_SITE_GROUPING_KEY>;

        $r5 = virtualinvoke $r2.<com.google.common.flogger.backend.Metadata: com.google.common.flogger.MetadataKey getKey(int)>($i1);

        $z0 = virtualinvoke $r4.<com.google.common.flogger.MetadataKey: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke $r2.<com.google.common.flogger.backend.Metadata: java.lang.Object getValue(int)>($i1);

        $z0 = $r6 instanceof com.google.common.flogger.LoggingScope;

        if $z0 == 0 goto label3;

        if $r3 != null goto label2;

        $r3 = new com.google.common.flogger.LogSiteMap$1;

        specialinvoke $r3.<com.google.common.flogger.LogSiteMap$1: void <init>(com.google.common.flogger.LogSiteMap,com.google.common.flogger.LogSiteKey)>($r0, $r1);

     label2:
        $r7 = (com.google.common.flogger.LoggingScope) $r6;

        virtualinvoke $r7.<com.google.common.flogger.LoggingScope: void onClose(java.lang.Runnable)>($r3);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    public final java.lang.Object get(com.google.common.flogger.LogSiteKey, com.google.common.flogger.backend.Metadata)
    {
        com.google.common.flogger.LogSiteMap $r0;
        com.google.common.flogger.LogSiteKey $r1;
        com.google.common.flogger.backend.Metadata $r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Object $r4, $r5;

        $r0 := @this: com.google.common.flogger.LogSiteMap;

        $r1 := @parameter0: com.google.common.flogger.LogSiteKey;

        $r2 := @parameter1: com.google.common.flogger.backend.Metadata;

        $r3 = $r0.<com.google.common.flogger.LogSiteMap: java.util.concurrent.ConcurrentHashMap concurrentMap>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r4 = virtualinvoke $r0.<com.google.common.flogger.LogSiteMap: java.lang.Object initialValue()>();

        $r4 = staticinvoke <com.google.common.flogger.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r4, "initial map value");

        $r3 = $r0.<com.google.common.flogger.LogSiteMap: java.util.concurrent.ConcurrentHashMap concurrentMap>;

        $r5 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $r5 == null goto label2;

        return $r5;

     label2:
        specialinvoke $r0.<com.google.common.flogger.LogSiteMap: void addRemovalHook(com.google.common.flogger.LogSiteKey,com.google.common.flogger.backend.Metadata)>($r1, $r2);

        return $r4;
    }

<com.google.common.flogger.LogSiteMap: java.lang.Object initialValue()>
com.google.common.flogger.LogSiteMap$1
<com.google.common.flogger.LogSiteMap$1: com.google.common.flogger.LogSiteMap this$0>
<com.google.common.flogger.LogSiteMap$1: com.google.common.flogger.LogSiteKey val$key>
    void <init>(com.google.common.flogger.LogSiteMap, com.google.common.flogger.LogSiteKey)
    {
        com.google.common.flogger.LogSiteMap$1 $r0;
        com.google.common.flogger.LogSiteMap $r1;
        com.google.common.flogger.LogSiteKey $r2;

        $r0 := @this: com.google.common.flogger.LogSiteMap$1;

        $r1 := @parameter0: com.google.common.flogger.LogSiteMap;

        $r2 := @parameter1: com.google.common.flogger.LogSiteKey;

        $r0.<com.google.common.flogger.LogSiteMap$1: com.google.common.flogger.LogSiteMap this$0> = $r1;

        $r0.<com.google.common.flogger.LogSiteMap$1: com.google.common.flogger.LogSiteKey val$key> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.google.common.flogger.LogSiteMap$1 $r0;
        com.google.common.flogger.LogSiteKey $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        com.google.common.flogger.LogSiteMap $r3;

        $r0 := @this: com.google.common.flogger.LogSiteMap$1;

        $r3 = $r0.<com.google.common.flogger.LogSiteMap$1: com.google.common.flogger.LogSiteMap this$0>;

        $r2 = staticinvoke <com.google.common.flogger.LogSiteMap: java.util.concurrent.ConcurrentHashMap '-$$Nest$fgetconcurrentMap'(com.google.common.flogger.LogSiteMap)>($r3);

        $r1 = $r0.<com.google.common.flogger.LogSiteMap$1: com.google.common.flogger.LogSiteKey val$key>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

