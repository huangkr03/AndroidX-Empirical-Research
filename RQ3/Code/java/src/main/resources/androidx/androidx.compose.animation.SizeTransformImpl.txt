androidx.compose.animation.SizeTransformImpl
<androidx.compose.animation.SizeTransformImpl: boolean clip>
<androidx.compose.animation.SizeTransformImpl: kotlin.jvm.functions.Function2 sizeAnimationSpec>
    public void <init>(boolean, kotlin.jvm.functions.Function2)
    {
        androidx.compose.animation.SizeTransformImpl r0;
        boolean z0;
        kotlin.jvm.functions.Function2 r1;

        r0 := @this: androidx.compose.animation.SizeTransformImpl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sizeAnimationSpec");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.SizeTransformImpl: boolean clip> = z0;

        r0.<androidx.compose.animation.SizeTransformImpl: kotlin.jvm.functions.Function2 sizeAnimationSpec> = r1;

        return;
    }

    public void <init>(boolean, kotlin.jvm.functions.Function2, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.SizeTransformImpl r0;
        kotlin.jvm.functions.Function2 r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        boolean z0;

        r0 := @this: androidx.compose.animation.SizeTransformImpl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        specialinvoke r0.<androidx.compose.animation.SizeTransformImpl: void <init>(boolean,kotlin.jvm.functions.Function2)>(z0, r1);

        return;
    }

    public boolean getClip()
    {
        androidx.compose.animation.SizeTransformImpl r0;
        boolean $z0;

        r0 := @this: androidx.compose.animation.SizeTransformImpl;

        $z0 = r0.<androidx.compose.animation.SizeTransformImpl: boolean clip>;

        return $z0;
    }

    public final kotlin.jvm.functions.Function2 getSizeAnimationSpec()
    {
        androidx.compose.animation.SizeTransformImpl r0;
        kotlin.jvm.functions.Function2 $r1;

        r0 := @this: androidx.compose.animation.SizeTransformImpl;

        $r1 = r0.<androidx.compose.animation.SizeTransformImpl: kotlin.jvm.functions.Function2 sizeAnimationSpec>;

        return $r1;
    }

    public androidx.compose.animation.core.FiniteAnimationSpec createAnimationSpec-TemP2vQ(long, long)
    {
        androidx.compose.animation.SizeTransformImpl r0;
        long l0, l1;
        kotlin.jvm.functions.Function2 $r1;
        androidx.compose.ui.unit.IntSize $r2, $r3;
        java.lang.Object $r4;
        androidx.compose.animation.core.FiniteAnimationSpec $r5;

        r0 := @this: androidx.compose.animation.SizeTransformImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<androidx.compose.animation.SizeTransformImpl: kotlin.jvm.functions.Function2 sizeAnimationSpec>;

        $r2 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>(l0);

        $r3 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>(l1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (androidx.compose.animation.core.FiniteAnimationSpec) $r4;

        return $r5;
    }

