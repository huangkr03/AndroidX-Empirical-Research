androidx.work.impl.WorkDatabasePathHelper
<androidx.work.impl.WorkDatabasePathHelper: androidx.work.impl.WorkDatabasePathHelper INSTANCE>
    private void <init>()
    {
        androidx.work.impl.WorkDatabasePathHelper r0;

        r0 := @this: androidx.work.impl.WorkDatabasePathHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void migrateDatabase(android.content.Context)
    {
        android.content.Context r0;
        java.io.File r1, r6, r7;
        java.util.Map $r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4, r5;
        boolean z2, $z3, $z4, $z5, $z6;
        java.lang.String r8, $r11, $r24, $r31, $r35, $r36;
        androidx.work.impl.WorkDatabasePathHelper $r9, $r12;
        int $i0;
        androidx.work.Logger $r10, $r23, $r30;
        java.util.Set $r13;
        java.lang.Object $r14, $r15, $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r29, $r32, $r33, $r34;

        r0 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "context");

        $r9 = <androidx.work.impl.WorkDatabasePathHelper: androidx.work.impl.WorkDatabasePathHelper INSTANCE>;

        r1 = virtualinvoke $r9.<androidx.work.impl.WorkDatabasePathHelper: java.io.File getDefaultDatabasePath(android.content.Context)>(r0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label6;

        $z3 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label6;

        $r10 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r11 = staticinvoke <androidx.work.impl.WorkDatabasePathHelperKt: java.lang.String access$getTAG$p()>();

        virtualinvoke $r10.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r11, "Migrating WorkDatabase to the no-backup directory");

        $r12 = <androidx.work.impl.WorkDatabasePathHelper: androidx.work.impl.WorkDatabasePathHelper INSTANCE>;

        $r2 = virtualinvoke $r12.<androidx.work.impl.WorkDatabasePathHelper: java.util.Map migrationPaths(android.content.Context)>(r0);

        $r13 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r14;

        r5 = r4;

        $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.io.File) $r15;

        $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (java.io.File) $r16;

        $z5 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label5;

        $z6 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z6 == 0 goto label2;

        $r30 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r31 = staticinvoke <androidx.work.impl.WorkDatabasePathHelperKt: java.lang.String access$getTAG$p()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Over-writing contents of ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<androidx.work.Logger: void warning(java.lang.String,java.lang.String)>($r31, $r35);

     label2:
        z2 = virtualinvoke r6.<java.io.File: boolean renameTo(java.io.File)>(r7);

        if z2 == 0 goto label3;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Migrated ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r36 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renaming ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r36 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r8 = $r36;

        $r23 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r24 = staticinvoke <androidx.work.impl.WorkDatabasePathHelperKt: java.lang.String access$getTAG$p()>();

        virtualinvoke $r23.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r24, r8);

     label5:
        goto label1;

     label6:
        return;
    }

    public final java.util.Map migrationPaths(android.content.Context)
    {
        androidx.work.impl.WorkDatabasePathHelper r0;
        android.content.Context r1;
        java.io.File r2, r3, $r12, $r18;
        java.util.Map r4, r7, r9, $r29;
        java.lang.String[] $r5;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.String r8, $r14, $r17, $r20, $r23, r27;
        java.util.LinkedHashMap $r10;
        kotlin.Pair $r11, r28;
        java.lang.StringBuilder $r13, $r15, $r16, $r19, $r21, $r22;
        java.lang.Object $r24, $r25;

        r0 := @this: androidx.work.impl.WorkDatabasePathHelper;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 23 goto label3;

        r2 = virtualinvoke r0.<androidx.work.impl.WorkDatabasePathHelper: java.io.File getDefaultDatabasePath(android.content.Context)>(r1);

        r3 = virtualinvoke r0.<androidx.work.impl.WorkDatabasePathHelper: java.io.File getDatabasePath(android.content.Context)>(r1);

        $r5 = staticinvoke <androidx.work.impl.WorkDatabasePathHelperKt: java.lang.String[] access$getDATABASE_EXTRA_FILES$p()>();

        $i3 = lengthof $r5;

        $i4 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i3);

        i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i4, 16);

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>(int)>(i0);

        r7 = (java.util.Map) $r10;

        i5 = 0;

        i1 = lengthof $r5;

     label1:
        if i5 >= i1 goto label2;

        r8 = $r5[i5];

        r9 = r7;

        r27 = r8;

        $r12 = new java.io.File;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r17);

        $r18 = new java.io.File;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r23);

        r28 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r12, $r18);

        $r24 = virtualinvoke r28.<kotlin.Pair: java.lang.Object getFirst()>();

        $r25 = virtualinvoke r28.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25);

        i5 = i5 + 1;

        goto label1;

     label2:
        r4 = r7;

        $r11 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r2, r3);

        $r29 = staticinvoke <kotlin.collections.MapsKt: java.util.Map plus(java.util.Map,kotlin.Pair)>(r4, $r11);

        goto label4;

     label3:
        $r29 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label4:
        return $r29;
    }

    public final java.io.File getDefaultDatabasePath(android.content.Context)
    {
        androidx.work.impl.WorkDatabasePathHelper r0;
        android.content.Context r1;
        java.io.File $r2;

        r0 := @this: androidx.work.impl.WorkDatabasePathHelper;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = virtualinvoke r1.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("androidx.work.workdb");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "context.getDatabasePath(WORK_DATABASE_NAME)");

        return $r2;
    }

    public final java.io.File getDatabasePath(android.content.Context)
    {
        androidx.work.impl.WorkDatabasePathHelper r0;
        android.content.Context r1;
        int $i0;
        java.io.File $r2;

        r0 := @this: androidx.work.impl.WorkDatabasePathHelper;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 23 goto label1;

        $r2 = virtualinvoke r0.<androidx.work.impl.WorkDatabasePathHelper: java.io.File getDefaultDatabasePath(android.content.Context)>(r1);

        goto label2;

     label1:
        $r2 = specialinvoke r0.<androidx.work.impl.WorkDatabasePathHelper: java.io.File getNoBackupPath(android.content.Context)>(r1);

     label2:
        return $r2;
    }

    private final java.io.File getNoBackupPath(android.content.Context)
    {
        androidx.work.impl.WorkDatabasePathHelper r0;
        android.content.Context r1;
        java.io.File $r2, $r4;
        androidx.work.impl.Api21Impl $r3;

        r0 := @this: androidx.work.impl.WorkDatabasePathHelper;

        r1 := @parameter0: android.content.Context;

        $r2 = new java.io.File;

        $r3 = <androidx.work.impl.Api21Impl: androidx.work.impl.Api21Impl INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.work.impl.Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)>(r1);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "androidx.work.workdb");

        return $r2;
    }

    static void <clinit>()
    {
        androidx.work.impl.WorkDatabasePathHelper $r0;

        $r0 = new androidx.work.impl.WorkDatabasePathHelper;

        specialinvoke $r0.<androidx.work.impl.WorkDatabasePathHelper: void <init>()>();

        <androidx.work.impl.WorkDatabasePathHelper: androidx.work.impl.WorkDatabasePathHelper INSTANCE> = $r0;

        return;
    }

