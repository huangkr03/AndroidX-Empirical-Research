androidx.datastore.rxjava3.RxDataStoreSingletonDelegate
<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: java.lang.String fileName>
<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.core.Serializer serializer>
<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler corruptionHandler>
<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: kotlin.jvm.functions.Function1 produceMigrations>
<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: io.reactivex.rxjava3.core.Scheduler scheduler>
<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: java.lang.Object lock>
<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.rxjava3.RxDataStore INSTANCE>
    public void <init>(java.lang.String, androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, io.reactivex.rxjava3.core.Scheduler)
    {
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate r0;
        java.lang.String r1;
        androidx.datastore.core.Serializer r2;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r3;
        kotlin.jvm.functions.Function1 r4;
        io.reactivex.rxjava3.core.Scheduler r5;
        java.lang.Object $r6;

        r0 := @this: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.datastore.core.Serializer;

        r3 := @parameter2: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r4 := @parameter3: kotlin.jvm.functions.Function1;

        r5 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fileName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "serializer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "produceMigrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "scheduler");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: java.lang.String fileName> = r1;

        r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.core.Serializer serializer> = r2;

        r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler corruptionHandler> = r3;

        r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: kotlin.jvm.functions.Function1 produceMigrations> = r4;

        r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: io.reactivex.rxjava3.core.Scheduler scheduler> = r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: java.lang.Object lock> = $r6;

        return;
    }

    public void <init>(java.lang.String, androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, io.reactivex.rxjava3.core.Scheduler, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate r0;
        java.lang.String r1;
        androidx.datastore.core.Serializer r2;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r3;
        io.reactivex.rxjava3.core.Scheduler r4;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r5;
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1 $r6;
        kotlin.jvm.functions.Function1 r7;

        r0 := @this: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.datastore.core.Serializer;

        r3 := @parameter2: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r7 := @parameter3: kotlin.jvm.functions.Function1;

        r4 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        i0 := @parameter5: int;

        r5 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        $r6 = <androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1 INSTANCE>;

        r7 = (kotlin.jvm.functions.Function1) $r6;

     label1:
        specialinvoke r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: void <init>(java.lang.String,androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,io.reactivex.rxjava3.core.Scheduler)>(r1, r2, r3, r7, r4);

        return;
    }

    public androidx.datastore.rxjava3.RxDataStore getValue(android.content.Context, kotlin.reflect.KProperty)
    {
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate r0, r7;
        android.content.Context r1, r20;
        kotlin.reflect.KProperty r2;
        androidx.datastore.rxjava3.RxDataStore r3, r8, $r9, r27, r28, $r29;
        java.lang.Object r4, $r16, r23;
        boolean z0, z2, z3, $z5, z6, z9, z10;
        androidx.datastore.rxjava3.RxDataStoreBuilder r5, $r10;
        androidx.datastore.core.Serializer $r11;
        java.lang.String $r12;
        io.reactivex.rxjava3.core.Scheduler $r13;
        kotlin.jvm.functions.Function1 $r15;
        java.lang.Throwable $r19, r30;
        java.lang.Iterable $r21;
        java.util.Iterator r22;
        androidx.datastore.core.DataMigration r24;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler $r25, r26;

        r0 := @this: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: kotlin.reflect.KProperty;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "thisRef");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "property");

        r3 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.rxjava3.RxDataStore INSTANCE>;

        if r3 != null goto label10;

        r4 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: java.lang.Object lock>;

        z0 = 0;

        z6 = 0;

        entermonitor r4;

     label01:
        $r9 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.rxjava3.RxDataStore INSTANCE>;

        if $r9 != null goto label06;

        r20 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r10 = new androidx.datastore.rxjava3.RxDataStoreBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r20, "applicationContext");

        $r12 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: java.lang.String fileName>;

        $r11 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.core.Serializer serializer>;

        specialinvoke $r10.<androidx.datastore.rxjava3.RxDataStoreBuilder: void <init>(android.content.Context,java.lang.String,androidx.datastore.core.Serializer)>(r20, $r12, $r11);

        r5 = $r10;

        z2 = 0;

        z3 = 0;

        r7 = r0;

        $r13 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: io.reactivex.rxjava3.core.Scheduler scheduler>;

        virtualinvoke r5.<androidx.datastore.rxjava3.RxDataStoreBuilder: androidx.datastore.rxjava3.RxDataStoreBuilder setIoScheduler(io.reactivex.rxjava3.core.Scheduler)>($r13);

        $r15 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: kotlin.jvm.functions.Function1 produceMigrations>;

        $r16 = interfaceinvoke $r15.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r20);

        $r21 = (java.lang.Iterable) $r16;

        r22 = interfaceinvoke $r21.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label03;

        r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (androidx.datastore.core.DataMigration) r23;

        virtualinvoke r5.<androidx.datastore.rxjava3.RxDataStoreBuilder: androidx.datastore.rxjava3.RxDataStoreBuilder addDataMigration(androidx.datastore.core.DataMigration)>(r24);

        goto label02;

     label03:
        $r25 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler corruptionHandler>;

        if $r25 != null goto label04;

        goto label05;

     label04:
        z9 = 0;

        z10 = 0;

        r26 = $r25;

        virtualinvoke r5.<androidx.datastore.rxjava3.RxDataStoreBuilder: androidx.datastore.rxjava3.RxDataStoreBuilder setCorruptionHandler(androidx.datastore.core.handlers.ReplaceFileCorruptionHandler)>(r26);

     label05:
        r8 = virtualinvoke r5.<androidx.datastore.rxjava3.RxDataStoreBuilder: androidx.datastore.rxjava3.RxDataStore build()>();

        r7.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.rxjava3.RxDataStore INSTANCE> = r8;

     label06:
        r27 = r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.rxjava3.RxDataStore INSTANCE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r27);

        r28 = r27;

     label07:
        exitmonitor r4;

        $r29 = r28;

        goto label11;

     label08:
        $r19 := @caughtexception;

        r30 = $r19;

     label09:
        exitmonitor r4;

        throw r30;

     label10:
        $r29 = r3;

     label11:
        return $r29;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public volatile java.lang.Object getValue(java.lang.Object, kotlin.reflect.KProperty)
    {
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate r0;
        java.lang.Object r1;
        kotlin.reflect.KProperty r2;
        android.content.Context $r3;
        androidx.datastore.rxjava3.RxDataStore $r4;

        r0 := @this: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.reflect.KProperty;

        $r3 = (android.content.Context) r1;

        $r4 = virtualinvoke r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate: androidx.datastore.rxjava3.RxDataStore getValue(android.content.Context,kotlin.reflect.KProperty)>($r3, r2);

        return $r4;
    }

androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1
<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1 INSTANCE>
    void <init>()
    {
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1 r0;

        r0 := @this: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.util.List invoke(android.content.Context)
    {
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1 r0;
        android.content.Context r1;
        boolean z0;
        java.util.List $r2;

        r0 := @this: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        z0 = 0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1 r0;
        java.lang.Object r1;
        android.content.Context $r2;
        java.util.List $r3;

        r0 := @this: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Context) r1;

        $r3 = virtualinvoke r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1: java.util.List invoke(android.content.Context)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1 $r0;

        $r0 = new androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1;

        specialinvoke $r0.<androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1: void <init>()>();

        <androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1: androidx.datastore.rxjava3.RxDataStoreSingletonDelegate$1 INSTANCE> = $r0;

        return;
    }

