androidx.tv.foundation.lazy.grid.LazyMeasuredLine
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int index>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] items>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: java.util.List spans>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: boolean isVertical>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int slotsPerLine>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.compose.ui.unit.LayoutDirection layoutDirection>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSpacing>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int crossAxisSpacing>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSize>
<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSizeWithSpacings>
    private void <init>(int, androidx.tv.foundation.lazy.grid.LazyMeasuredItem[], java.util.List, boolean, int, androidx.compose.ui.unit.LayoutDirection, int, int)
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9, i10;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] r1, $r4;
        java.util.List r2;
        boolean z0;
        androidx.compose.ui.unit.LayoutDirection r3;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem r5, r6;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLine;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.tv.foundation.lazy.grid.LazyMeasuredItem[];

        r2 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        r3 := @parameter5: androidx.compose.ui.unit.LayoutDirection;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int index> = i0;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] items> = r1;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: java.util.List spans> = r2;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: boolean isVertical> = z0;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int slotsPerLine> = i1;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.compose.ui.unit.LayoutDirection layoutDirection> = r3;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSpacing> = i2;

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int crossAxisSpacing> = i3;

        i9 = 0;

        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] items>;

        i10 = 0;

        i4 = lengthof $r4;

     label1:
        if i10 >= i4 goto label2;

        r5 = $r4[i10];

        r6 = r5;

        $i8 = virtualinvoke r6.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSize()>();

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(i9, $i8);

        i10 = i10 + 1;

        goto label1;

     label2:
        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSize> = i9;

        $i5 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSpacing>;

        $i6 = i9 + $i5;

        $i7 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i6, 0);

        r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSizeWithSpacings> = $i7;

        return;
    }

    public final int getIndex-q9Z_OJ0()
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine r0;
        int $i0;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLine;

        $i0 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int index>;

        return $i0;
    }

    public final androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] getItems()
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine r0;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] $r1;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLine;

        $r1 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] items>;

        return $r1;
    }

    public final int getMainAxisSize()
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine r0;
        int $i0;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLine;

        $i0 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSize>;

        return $i0;
    }

    public final int getMainAxisSizeWithSpacings()
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine r0;
        int $i0;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLine;

        $i0 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int mainAxisSizeWithSpacings>;

        return $i0;
    }

    public final boolean isEmpty()
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine r0;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLine;

        $r1 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] items>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.util.List position(int, int, int)
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i10, $i11, i12, i13, i14, i15, $i16, $i18, $i21, $i22, $i23, $i24, $i25;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] $r1;
        java.util.Collection r3, r8;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem r4, r5;
        androidx.tv.foundation.lazy.grid.LazyGridPositionedItem r6, r7;
        java.util.ArrayList $r9;
        java.util.List $r10, $r11;
        java.lang.Object $r12;
        androidx.tv.foundation.lazy.grid.TvGridItemSpan $r13;
        long $l9;
        androidx.compose.ui.unit.LayoutDirection $r14, $r15;
        boolean $z4, $z5;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i12 = 0;

        i13 = 0;

        $r1 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] items>;

        $r9 = new java.util.ArrayList;

        $i7 = lengthof $r1;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i7);

        r3 = (java.util.Collection) $r9;

        i14 = 0;

        i15 = 0;

        i3 = lengthof $r1;

     label1:
        if i15 >= i3 goto label8;

        r4 = $r1[i15];

        $i8 = i14;

        i14 = i14 + 1;

        r5 = r4;

        i4 = $i8;

        r8 = r3;

        $r11 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: java.util.List spans>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i4);

        $r13 = (androidx.tv.foundation.lazy.grid.TvGridItemSpan) $r12;

        $l9 = virtualinvoke $r13.<androidx.tv.foundation.lazy.grid.TvGridItemSpan: long unbox-impl()>();

        i5 = staticinvoke <androidx.tv.foundation.lazy.grid.TvGridItemSpan: int getCurrentLineSpan-impl(long)>($l9);

        $r15 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        $r14 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Rtl>;

        if $r15 != $r14 goto label2;

        $i10 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int slotsPerLine>;

        $i11 = $i10 - i13;

        $i16 = $i11 - i5;

        goto label3;

     label2:
        $i16 = i13;

     label3:
        i6 = $i16;

        $i18 = i12;

        $z4 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: boolean isVertical>;

        if $z4 == 0 goto label4;

        $i21 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int index>;

        goto label5;

     label4:
        $i21 = i6;

     label5:
        $z5 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: boolean isVertical>;

        if $z5 == 0 goto label6;

        $i22 = i6;

        goto label7;

     label6:
        $i22 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int index>;

     label7:
        r6 = virtualinvoke r5.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: androidx.tv.foundation.lazy.grid.LazyGridPositionedItem position(int,int,int,int,int,int)>(i0, $i18, i1, i2, $i21, $i22);

        r7 = r6;

        $i23 = virtualinvoke r5.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getCrossAxisSize()>();

        $i24 = r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: int crossAxisSpacing>;

        $i25 = $i23 + $i24;

        i12 = i12 + $i25;

        i13 = i13 + i5;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r6);

        i15 = i15 + 1;

        goto label1;

     label8:
        $r10 = (java.util.List) r3;

        return $r10;
    }

    public void <init>(int, androidx.tv.foundation.lazy.grid.LazyMeasuredItem[], java.util.List, boolean, int, androidx.compose.ui.unit.LayoutDirection, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.tv.foundation.lazy.grid.LazyMeasuredLine r0;
        int i0, i1, i2, i3;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem[] r1;
        java.util.List r2;
        boolean z0;
        androidx.compose.ui.unit.LayoutDirection r3;
        kotlin.jvm.internal.DefaultConstructorMarker $r4;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyMeasuredLine;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.tv.foundation.lazy.grid.LazyMeasuredItem[];

        r2 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        r3 := @parameter5: androidx.compose.ui.unit.LayoutDirection;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        $r4 := @parameter8: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyMeasuredLine: void <init>(int,androidx.tv.foundation.lazy.grid.LazyMeasuredItem[],java.util.List,boolean,int,androidx.compose.ui.unit.LayoutDirection,int,int)>(i0, r1, r2, z0, i1, r3, i2, i3);

        return;
    }

