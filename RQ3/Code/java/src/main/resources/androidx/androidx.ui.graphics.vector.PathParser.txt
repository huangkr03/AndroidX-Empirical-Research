androidx.ui.graphics.vector.PathParser
<androidx.ui.graphics.vector.PathParser: java.util.List nodes>
<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>
<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>
<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>
<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>
    public void <init>()
    {
        androidx.ui.graphics.vector.PathParser r0, r1;
        boolean z0;
        java.util.List r2;
        java.util.ArrayList $r3;
        androidx.ui.graphics.vector.PathParser$PathPoint $r4, $r5, $r6, $r7;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r1 = r0;

        z0 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r3;

        r1.<androidx.ui.graphics.vector.PathParser: java.util.List nodes> = r2;

        $r4 = new androidx.ui.graphics.vector.PathParser$PathPoint;

        specialinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 3, null);

        r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint> = $r4;

        $r5 = new androidx.ui.graphics.vector.PathParser$PathPoint;

        specialinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 3, null);

        r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint> = $r5;

        $r6 = new androidx.ui.graphics.vector.PathParser$PathPoint;

        specialinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 3, null);

        r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint> = $r6;

        $r7 = new androidx.ui.graphics.vector.PathParser$PathPoint;

        specialinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 3, null);

        r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint> = $r7;

        return;
    }

    public final void clear()
    {
        androidx.ui.graphics.vector.PathParser r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 = r0.<androidx.ui.graphics.vector.PathParser: java.util.List nodes>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public final androidx.ui.graphics.vector.PathParser parsePathString(java.lang.String)
    {
        androidx.ui.graphics.vector.PathParser r0;
        java.lang.String r1, r2, $r6;
        java.lang.CharSequence $r3, $r7, $r8;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, i10, i11, i12, i13, i14, $i15;
        java.util.List $r4;
        char $c4, $c8, c16;
        float[] $r5, $r9;
        boolean z4, $z5, z6, $z8;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pathData");

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: java.util.List nodes>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        i10 = 0;

        i11 = 1;

     label01:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i11 >= $i1 goto label15;

        i12 = specialinvoke r0.<androidx.ui.graphics.vector.PathParser: int nextStart(java.lang.String,int)>(r1, i11);

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i10, i12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r6, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        $r3 = (java.lang.CharSequence) $r6;

        i13 = 0;

        $i5 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        i14 = $i5 - 1;

        z4 = 0;

     label02:
        if i13 > i14 goto label11;

        if z4 != 0 goto label03;

        $i15 = i13;

        goto label04;

     label03:
        $i15 = i14;

     label04:
        i0 = $i15;

        c16 = interfaceinvoke $r3.<java.lang.CharSequence: char charAt(int)>(i0);

        $i9 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>(c16, 32);

        if $i9 > 0 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z6 = $z5;

        if z4 != 0 goto label08;

        if z6 != 0 goto label07;

        z4 = 1;

        goto label10;

     label07:
        i13 = i13 + 1;

        goto label10;

     label08:
        if z6 != 0 goto label09;

        goto label11;

     label09:
        i14 = i14 - 1;

     label10:
        goto label02;

     label11:
        $i6 = i14 + 1;

        $r7 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i13, $i6);

        r2 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r8 = (java.lang.CharSequence) r2;

        $i7 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        if $i7 <= 0 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        if $z8 == 0 goto label14;

        $r9 = specialinvoke r0.<androidx.ui.graphics.vector.PathParser: float[] getFloats(java.lang.String)>(r2);

        $c8 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void addNode(char,float[])>($c8, $r9);

     label14:
        i10 = i12;

        i11 = i12 + 1;

        goto label01;

     label15:
        $i2 = i11 - i10;

        if $i2 != 1 goto label16;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i10 >= $i3 goto label16;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10);

        $r5 = newarray (float)[0];

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void addNode(char,float[])>($c4, $r5);

     label16:
        return r0;
    }

    public final androidx.ui.graphics.vector.PathParser addPathNodes(java.util.List)
    {
        androidx.ui.graphics.vector.PathParser r0;
        java.util.List r1, $r3;
        java.util.Collection $r2;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nodes");

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: java.util.List nodes>;

        $r2 = (java.util.Collection) r1;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return r0;
    }

    public final java.util.List toNodes()
    {
        androidx.ui.graphics.vector.PathParser r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 = r0.<androidx.ui.graphics.vector.PathParser: java.util.List nodes>;

        return $r1;
    }

    public final androidx.ui.graphics.Path toPath(androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.Path r1;
        java.util.Iterator r2;
        androidx.ui.graphics.vector.PathNode r3, r4, r30;
        androidx.ui.graphics.vector.PathParser$PathPoint $r5, $r6, $r7, $r8;
        java.util.List $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        java.lang.Object $r10;
        kotlin.NoWhenBranchMatchedException $r11;
        androidx.ui.graphics.vector.PathNode$ArcTo $r12;
        androidx.ui.graphics.vector.PathNode$RelativeArcTo $r13;
        androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo $r14;
        androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo $r15;
        androidx.ui.graphics.vector.PathNode$QuadTo $r16;
        androidx.ui.graphics.vector.PathNode$RelativeQuadTo $r17;
        androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo $r18;
        androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo $r19;
        androidx.ui.graphics.vector.PathNode$CurveTo $r20;
        androidx.ui.graphics.vector.PathNode$RelativeCurveTo $r21;
        androidx.ui.graphics.vector.PathNode$VerticalTo $r22;
        androidx.ui.graphics.vector.PathNode$RelativeVerticalTo $r23;
        androidx.ui.graphics.vector.PathNode$HorizontalTo $r24;
        androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo $r25;
        androidx.ui.graphics.vector.PathNode$LineTo $r26;
        androidx.ui.graphics.vector.PathNode$RelativeLineTo $r27;
        androidx.ui.graphics.vector.PathNode$MoveTo $r28;
        androidx.ui.graphics.vector.PathNode$RelativeMoveTo $r29;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: androidx.ui.graphics.Path;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "target");

        interfaceinvoke r1.<androidx.ui.graphics.Path: void reset()>();

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: void reset()>();

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void reset()>();

        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void reset()>();

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: void reset()>();

        r30 = (androidx.ui.graphics.vector.PathNode) null;

        $r9 = r0.<androidx.ui.graphics.vector.PathParser: java.util.List nodes>;

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.ui.graphics.vector.PathNode) $r10;

        if r30 != null goto label02;

        r30 = r3;

     label02:
        r4 = r3;

        $z1 = r4 instanceof androidx.ui.graphics.vector.PathNode$Close;

        if $z1 == 0 goto label03;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void close(androidx.ui.graphics.Path)>(r1);

        goto label22;

     label03:
        $z2 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeMoveTo;

        if $z2 == 0 goto label04;

        $r29 = (androidx.ui.graphics.vector.PathNode$RelativeMoveTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeMoveTo(androidx.ui.graphics.vector.PathNode$RelativeMoveTo,androidx.ui.graphics.Path)>($r29, r1);

        goto label22;

     label04:
        $z3 = r4 instanceof androidx.ui.graphics.vector.PathNode$MoveTo;

        if $z3 == 0 goto label05;

        $r28 = (androidx.ui.graphics.vector.PathNode$MoveTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void moveTo(androidx.ui.graphics.vector.PathNode$MoveTo,androidx.ui.graphics.Path)>($r28, r1);

        goto label22;

     label05:
        $z4 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeLineTo;

        if $z4 == 0 goto label06;

        $r27 = (androidx.ui.graphics.vector.PathNode$RelativeLineTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeLineTo(androidx.ui.graphics.vector.PathNode$RelativeLineTo,androidx.ui.graphics.Path)>($r27, r1);

        goto label22;

     label06:
        $z5 = r4 instanceof androidx.ui.graphics.vector.PathNode$LineTo;

        if $z5 == 0 goto label07;

        $r26 = (androidx.ui.graphics.vector.PathNode$LineTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void lineTo(androidx.ui.graphics.vector.PathNode$LineTo,androidx.ui.graphics.Path)>($r26, r1);

        goto label22;

     label07:
        $z6 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo;

        if $z6 == 0 goto label08;

        $r25 = (androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeHorizontalTo(androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo,androidx.ui.graphics.Path)>($r25, r1);

        goto label22;

     label08:
        $z7 = r4 instanceof androidx.ui.graphics.vector.PathNode$HorizontalTo;

        if $z7 == 0 goto label09;

        $r24 = (androidx.ui.graphics.vector.PathNode$HorizontalTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void horizontalTo(androidx.ui.graphics.vector.PathNode$HorizontalTo,androidx.ui.graphics.Path)>($r24, r1);

        goto label22;

     label09:
        $z8 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeVerticalTo;

        if $z8 == 0 goto label10;

        $r23 = (androidx.ui.graphics.vector.PathNode$RelativeVerticalTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeVerticalTo(androidx.ui.graphics.vector.PathNode$RelativeVerticalTo,androidx.ui.graphics.Path)>($r23, r1);

        goto label22;

     label10:
        $z9 = r4 instanceof androidx.ui.graphics.vector.PathNode$VerticalTo;

        if $z9 == 0 goto label11;

        $r22 = (androidx.ui.graphics.vector.PathNode$VerticalTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void verticalTo(androidx.ui.graphics.vector.PathNode$VerticalTo,androidx.ui.graphics.Path)>($r22, r1);

        goto label22;

     label11:
        $z10 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeCurveTo;

        if $z10 == 0 goto label12;

        $r21 = (androidx.ui.graphics.vector.PathNode$RelativeCurveTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeCurveTo(androidx.ui.graphics.vector.PathNode$RelativeCurveTo,androidx.ui.graphics.Path)>($r21, r1);

        goto label22;

     label12:
        $z11 = r4 instanceof androidx.ui.graphics.vector.PathNode$CurveTo;

        if $z11 == 0 goto label13;

        $r20 = (androidx.ui.graphics.vector.PathNode$CurveTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void curveTo(androidx.ui.graphics.vector.PathNode$CurveTo,androidx.ui.graphics.Path)>($r20, r1);

        goto label22;

     label13:
        $z12 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo;

        if $z12 == 0 goto label14;

        $r19 = (androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo) r3;

        $z23 = virtualinvoke r30.<androidx.ui.graphics.vector.PathNode: boolean isCurve()>();

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeReflectiveCurveTo(androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo,boolean,androidx.ui.graphics.Path)>($r19, $z23, r1);

        goto label22;

     label14:
        $z13 = r4 instanceof androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo;

        if $z13 == 0 goto label15;

        $r18 = (androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo) r3;

        $z22 = virtualinvoke r30.<androidx.ui.graphics.vector.PathNode: boolean isCurve()>();

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void reflectiveCurveTo(androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo,boolean,androidx.ui.graphics.Path)>($r18, $z22, r1);

        goto label22;

     label15:
        $z14 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeQuadTo;

        if $z14 == 0 goto label16;

        $r17 = (androidx.ui.graphics.vector.PathNode$RelativeQuadTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeQuadTo(androidx.ui.graphics.vector.PathNode$RelativeQuadTo,androidx.ui.graphics.Path)>($r17, r1);

        goto label22;

     label16:
        $z15 = r4 instanceof androidx.ui.graphics.vector.PathNode$QuadTo;

        if $z15 == 0 goto label17;

        $r16 = (androidx.ui.graphics.vector.PathNode$QuadTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void quadTo(androidx.ui.graphics.vector.PathNode$QuadTo,androidx.ui.graphics.Path)>($r16, r1);

        goto label22;

     label17:
        $z16 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo;

        if $z16 == 0 goto label18;

        $r15 = (androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo) r3;

        $z21 = virtualinvoke r30.<androidx.ui.graphics.vector.PathNode: boolean isQuad()>();

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeReflectiveQuadTo(androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo,boolean,androidx.ui.graphics.Path)>($r15, $z21, r1);

        goto label22;

     label18:
        $z17 = r4 instanceof androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo;

        if $z17 == 0 goto label19;

        $r14 = (androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo) r3;

        $z20 = virtualinvoke r30.<androidx.ui.graphics.vector.PathNode: boolean isQuad()>();

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void reflectiveQuadTo(androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo,boolean,androidx.ui.graphics.Path)>($r14, $z20, r1);

        goto label22;

     label19:
        $z18 = r4 instanceof androidx.ui.graphics.vector.PathNode$RelativeArcTo;

        if $z18 == 0 goto label20;

        $r13 = (androidx.ui.graphics.vector.PathNode$RelativeArcTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void relativeArcTo(androidx.ui.graphics.vector.PathNode$RelativeArcTo,androidx.ui.graphics.Path)>($r13, r1);

        goto label22;

     label20:
        $z19 = r4 instanceof androidx.ui.graphics.vector.PathNode$ArcTo;

        if $z19 == 0 goto label21;

        $r12 = (androidx.ui.graphics.vector.PathNode$ArcTo) r3;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void arcTo(androidx.ui.graphics.vector.PathNode$ArcTo,androidx.ui.graphics.Path)>($r12, r1);

        goto label22;

     label21:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label22:
        r30 = r3;

        goto label01;

     label23:
        return r1;
    }

    public static androidx.ui.graphics.Path toPath$default(androidx.ui.graphics.vector.PathParser, androidx.ui.graphics.Path, int, java.lang.Object)
    {
        androidx.ui.graphics.vector.PathParser r0;
        int i0, $i1;
        java.lang.Object r1;
        androidx.ui.graphics.Path $r2, r3;

        r0 := @parameter0: androidx.ui.graphics.vector.PathParser;

        r3 := @parameter1: androidx.ui.graphics.Path;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <androidx.ui.graphics.AndroidPathKt: androidx.ui.graphics.Path Path()>();

     label1:
        $r2 = virtualinvoke r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.Path toPath(androidx.ui.graphics.Path)>(r3);

        return $r2;
    }

    private final void close(androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.Path r1;
        androidx.ui.graphics.vector.PathParser$PathPoint $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: androidx.ui.graphics.Path;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $r2 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        $f0 = virtualinvoke $r2.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f0);

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        $f1 = virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f1);

        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        $f2 = virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f2);

        $r9 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        $f3 = virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r9.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f3);

        interfaceinvoke r1.<androidx.ui.graphics.Path: void close()>();

        $r10 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f4 = virtualinvoke $r10.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $r11 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f5 = virtualinvoke $r11.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        interfaceinvoke r1.<androidx.ui.graphics.Path: void moveTo(float,float)>($f4, $f5);

        return;
    }

    private final void relativeMoveTo(androidx.ui.graphics.vector.PathNode$RelativeMoveTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeMoveTo $r1;
        androidx.ui.graphics.Path r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, r7, r8;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeMoveTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f0 = virtualinvoke r7.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeMoveTo: float getX()>();

        $f2 = $f0 + $f1;

        virtualinvoke r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f2);

        r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f3 = virtualinvoke r8.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeMoveTo: float getY()>();

        $f5 = $f3 + $f4;

        virtualinvoke r8.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f5);

        $f6 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeMoveTo: float getX()>();

        $f7 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeMoveTo: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void relativeMoveTo(float,float)>($f6, $f7);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f8 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f8);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f9 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f9);

        return;
    }

    private final void moveTo(androidx.ui.graphics.vector.PathNode$MoveTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$MoveTo $r1;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, $r7, $r8;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$MoveTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$MoveTo: float getX()>();

        virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f0);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$MoveTo: float getY()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f1);

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$MoveTo: float getX()>();

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$MoveTo: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void moveTo(float,float)>($f2, $f3);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f4 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f4);

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint segmentPoint>;

        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f5 = virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f5);

        return;
    }

    private final void relativeLineTo(androidx.ui.graphics.vector.PathNode$RelativeLineTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeLineTo $r1;
        androidx.ui.graphics.Path r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        androidx.ui.graphics.vector.PathParser$PathPoint r3, r4;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeLineTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeLineTo: float getX()>();

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeLineTo: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void relativeLineTo(float,float)>($f0, $f1);

        r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f2 = virtualinvoke r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeLineTo: float getX()>();

        $f4 = $f2 + $f3;

        virtualinvoke r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f4);

        r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f5 = virtualinvoke r4.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f6 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeLineTo: float getY()>();

        $f7 = $f5 + $f6;

        virtualinvoke r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f7);

        return;
    }

    private final void lineTo(androidx.ui.graphics.vector.PathNode$LineTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$LineTo $r1;
        androidx.ui.graphics.Path r2;
        float $f0, $f1, $f2, $f3;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$LineTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$LineTo: float getX()>();

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$LineTo: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$LineTo: float getX()>();

        virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f2);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$LineTo: float getY()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f3);

        return;
    }

    private final void relativeHorizontalTo(androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo $r1;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint r3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo: float getX()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void relativeLineTo(float,float)>($f0, 0.0F);

        r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f1 = virtualinvoke r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeHorizontalTo: float getX()>();

        $f3 = $f1 + $f2;

        virtualinvoke r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f3);

        return;
    }

    private final void horizontalTo(androidx.ui.graphics.vector.PathNode$HorizontalTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$HorizontalTo $r1;
        androidx.ui.graphics.Path r2;
        float $f0, $f1, $f2;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$HorizontalTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$HorizontalTo: float getX()>();

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f1 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$HorizontalTo: float getX()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f2);

        return;
    }

    private final void relativeVerticalTo(androidx.ui.graphics.vector.PathNode$RelativeVerticalTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeVerticalTo $r1;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint r3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeVerticalTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeVerticalTo: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void relativeLineTo(float,float)>(0.0F, $f0);

        r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f1 = virtualinvoke r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeVerticalTo: float getY()>();

        $f3 = $f1 + $f2;

        virtualinvoke r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f3);

        return;
    }

    private final void verticalTo(androidx.ui.graphics.vector.PathNode$VerticalTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$VerticalTo $r1;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$VerticalTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f0 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$VerticalTo: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$VerticalTo: float getY()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f2);

        return;
    }

    private final void relativeCurveTo(androidx.ui.graphics.vector.PathNode$RelativeCurveTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeCurveTo $r1;
        androidx.ui.graphics.Path r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, r7, r8;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeCurveTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDx1()>();

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDy1()>();

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDx2()>();

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDy2()>();

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDx3()>();

        $f5 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDy3()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void relativeCubicTo(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, $f4, $f5);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f6 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f7 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDx2()>();

        $f8 = $f6 + $f7;

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f8);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f9 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f10 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDy2()>();

        $f11 = $f9 + $f10;

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f11);

        r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f12 = virtualinvoke r7.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f13 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDx3()>();

        $f14 = $f12 + $f13;

        virtualinvoke r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f14);

        r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f15 = virtualinvoke r8.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f16 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeCurveTo: float getDy3()>();

        $f17 = $f15 + $f16;

        virtualinvoke r8.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f17);

        return;
    }

    private final void curveTo(androidx.ui.graphics.vector.PathNode$CurveTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$CurveTo $r1;
        androidx.ui.graphics.Path r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$CurveTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getX1()>();

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getY1()>();

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getX2()>();

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getY2()>();

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getX3()>();

        $f5 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getY3()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, $f4, $f5);

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f6 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getX2()>();

        virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f6);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f7 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getY2()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f7);

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f8 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getX3()>();

        virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f8);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f9 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$CurveTo: float getY3()>();

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f9);

        return;
    }

    private final void relativeReflectiveCurveTo(androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo, boolean, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo $r1;
        boolean z0;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, r16, r17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.ui.graphics.Path;

        if z0 == 0 goto label1;

        $r11 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $r10 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f18 = virtualinvoke $r10.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $r12 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f19 = virtualinvoke $r12.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f20 = $f18 - $f19;

        virtualinvoke $r11.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f20);

        $r14 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $r13 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f21 = virtualinvoke $r13.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $r15 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f22 = virtualinvoke $r15.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f23 = $f21 - $f22;

        virtualinvoke $r14.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f23);

        goto label2;

     label1:
        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void reset()>();

     label2:
        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f0 = virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f1 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo: float getX1()>();

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo: float getY1()>();

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo: float getX2()>();

        $f5 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo: float getY2()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void relativeCubicTo(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, $f4, $f5);

        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f6 = virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f7 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo: float getX1()>();

        $f8 = $f6 + $f7;

        virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f8);

        $r9 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f9 = virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f10 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo: float getY1()>();

        $f11 = $f9 + $f10;

        virtualinvoke $r9.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f11);

        r16 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f12 = virtualinvoke r16.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f13 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo: float getX2()>();

        $f14 = $f12 + $f13;

        virtualinvoke r16.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f14);

        r17 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f15 = virtualinvoke r17.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f16 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveCurveTo: float getY2()>();

        $f17 = $f15 + $f16;

        virtualinvoke r17.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f17);

        return;
    }

    private final void reflectiveCurveTo(androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo, boolean, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo $r1;
        boolean z0;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.ui.graphics.Path;

        if z0 == 0 goto label1;

        $r14 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f12 = (float) 2;

        $r13 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f13 = virtualinvoke $r13.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f14 = $f12 * $f13;

        $r15 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f15 = virtualinvoke $r15.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f16 = $f14 - $f15;

        virtualinvoke $r14.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f16);

        $r17 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f17 = (float) 2;

        $r16 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f18 = virtualinvoke $r16.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f19 = $f17 * $f18;

        $r18 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f20 = virtualinvoke $r18.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f21 = $f19 - $f20;

        virtualinvoke $r17.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f21);

        goto label2;

     label1:
        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f0 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f0);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f1 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f1);

     label2:
        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f2 = virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f3 = virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo: float getX1()>();

        $f5 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo: float getY1()>();

        $f6 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo: float getX2()>();

        $f7 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo: float getY2()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f2, $f3, $f4, $f5, $f6, $f7);

        $r9 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f8 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo: float getX1()>();

        virtualinvoke $r9.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f8);

        $r10 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f9 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo: float getY1()>();

        virtualinvoke $r10.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f9);

        $r11 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f10 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo: float getX2()>();

        virtualinvoke $r11.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f10);

        $r12 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f11 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveCurveTo: float getY2()>();

        virtualinvoke $r12.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f11);

        return;
    }

    private final void relativeQuadTo(androidx.ui.graphics.vector.PathNode$RelativeQuadTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeQuadTo $r1;
        androidx.ui.graphics.Path r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, r7, r8;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeQuadTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeQuadTo: float getX1()>();

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeQuadTo: float getY1()>();

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeQuadTo: float getX2()>();

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeQuadTo: float getY2()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void relativeQuadraticBezierTo(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f4 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f5 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeQuadTo: float getX1()>();

        $f6 = $f4 + $f5;

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f6);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f7 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f8 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeQuadTo: float getY1()>();

        $f9 = $f7 + $f8;

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f9);

        r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f10 = virtualinvoke r7.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f11 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeQuadTo: float getX1()>();

        $f12 = $f10 + $f11;

        virtualinvoke r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f12);

        r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f13 = virtualinvoke r8.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f14 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeQuadTo: float getY1()>();

        $f15 = $f13 + $f14;

        virtualinvoke r8.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f15);

        return;
    }

    private final void quadTo(androidx.ui.graphics.vector.PathNode$QuadTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$QuadTo $r1;
        androidx.ui.graphics.Path r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$QuadTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$QuadTo: float getX1()>();

        $f1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$QuadTo: float getY1()>();

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$QuadTo: float getX2()>();

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$QuadTo: float getY2()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void quadraticBezierTo(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$QuadTo: float getX1()>();

        virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f4);

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f5 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$QuadTo: float getY1()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f5);

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f6 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$QuadTo: float getX2()>();

        virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f6);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f7 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$QuadTo: float getY2()>();

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f7);

        return;
    }

    private final void relativeReflectiveQuadTo(androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo, boolean, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo $r1;
        boolean z0;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, r18, r19;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.ui.graphics.Path;

        if z0 == 0 goto label1;

        $r13 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $r12 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f16 = virtualinvoke $r12.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $r14 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f17 = virtualinvoke $r14.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f18 = $f16 - $f17;

        virtualinvoke $r13.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f18);

        $r16 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $r15 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f19 = virtualinvoke $r15.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $r17 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f20 = virtualinvoke $r17.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f21 = $f19 - $f20;

        virtualinvoke $r16.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f21);

        goto label2;

     label1:
        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: void reset()>();

     label2:
        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f0 = virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f1 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo: float getX()>();

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void relativeQuadraticBezierTo(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f4 = virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f5 = virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f6 = $f4 + $f5;

        virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f6);

        $r10 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r9 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f7 = virtualinvoke $r9.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $r11 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f8 = virtualinvoke $r11.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f9 = $f7 + $f8;

        virtualinvoke $r10.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f9);

        r18 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f10 = virtualinvoke r18.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f11 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo: float getX()>();

        $f12 = $f10 + $f11;

        virtualinvoke r18.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f12);

        r19 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f13 = virtualinvoke r19.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f14 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeReflectiveQuadTo: float getY()>();

        $f15 = $f13 + $f14;

        virtualinvoke r19.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f15);

        return;
    }

    private final void reflectiveQuadTo(androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo, boolean, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo $r1;
        boolean z0;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.ui.graphics.Path;

        if z0 == 0 goto label1;

        $r16 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f10 = (float) 2;

        $r15 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f11 = virtualinvoke $r15.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f12 = $f10 * $f11;

        $r17 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f13 = virtualinvoke $r17.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $f14 = $f12 - $f13;

        virtualinvoke $r16.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f14);

        $r19 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f15 = (float) 2;

        $r18 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f16 = virtualinvoke $r18.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f17 = $f15 * $f16;

        $r20 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $f18 = virtualinvoke $r20.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f19 = $f17 - $f18;

        virtualinvoke $r19.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f19);

        goto label2;

     label1:
        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f0 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f0);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f1 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f1);

     label2:
        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f2 = virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f3 = virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo: float getX()>();

        $f5 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo: float getY()>();

        interfaceinvoke r2.<androidx.ui.graphics.Path: void quadraticBezierTo(float,float,float,float)>($f2, $f3, $f4, $f5);

        $r10 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r9 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f6 = virtualinvoke $r9.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r10.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f6);

        $r12 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r11 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint reflectiveCtrlPoint>;

        $f7 = virtualinvoke $r11.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r12.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f7);

        $r13 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f8 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo: float getX()>();

        virtualinvoke $r13.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f8);

        $r14 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f9 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ReflectiveQuadTo: float getY()>();

        virtualinvoke $r14.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f9);

        return;
    }

    private final void relativeArcTo(androidx.ui.graphics.vector.PathNode$RelativeArcTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$RelativeArcTo $r1;
        androidx.ui.graphics.Path r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        boolean $z0, $z1;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$RelativeArcTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeArcTo: float getArcStartDx()>();

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f3 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        f0 = $f2 + $f3;

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeArcTo: float getArcStartDy()>();

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f5 = virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        f1 = $f4 + $f5;

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f6 = virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $d0 = (double) $f6;

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f7 = virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $d1 = (double) $f7;

        $d2 = (double) f0;

        $d3 = (double) f1;

        $f8 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeArcTo: float getHorizontalEllipseRadius()>();

        $d4 = (double) $f8;

        $f9 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeArcTo: float getVerticalEllipseRadius()>();

        $d5 = (double) $f9;

        $f10 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeArcTo: float getTheta()>();

        $d6 = (double) $f10;

        $z0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeArcTo: boolean isMoreThanHalf()>();

        $z1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$RelativeArcTo: boolean isPositiveArc()>();

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void drawArc(androidx.ui.graphics.Path,double,double,double,double,double,double,double,boolean,boolean)>(r2, $d0, $d1, $d2, $d3, $d4, $d5, $d6, $z0, $z1);

        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>(f0);

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>(f1);

        $r10 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r9 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f11 = virtualinvoke $r9.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r10.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f11);

        $r12 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r11 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f12 = virtualinvoke $r11.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r12.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f12);

        return;
    }

    private final void arcTo(androidx.ui.graphics.vector.PathNode$ArcTo, androidx.ui.graphics.Path)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.vector.PathNode$ArcTo $r1;
        androidx.ui.graphics.Path r2;
        androidx.ui.graphics.vector.PathParser$PathPoint $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        boolean $z0, $z1;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        $r1 := @parameter0: androidx.ui.graphics.vector.PathNode$ArcTo;

        r2 := @parameter1: androidx.ui.graphics.Path;

        $r3 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f0 = virtualinvoke $r3.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        $d0 = (double) $f0;

        $r4 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f1 = virtualinvoke $r4.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        $d1 = (double) $f1;

        $f2 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: float getArcStartX()>();

        $d2 = (double) $f2;

        $f3 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: float getArcStartY()>();

        $d3 = (double) $f3;

        $f4 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: float getHorizontalEllipseRadius()>();

        $d4 = (double) $f4;

        $f5 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: float getVerticalEllipseRadius()>();

        $d5 = (double) $f5;

        $f6 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: float getTheta()>();

        $d6 = (double) $f6;

        $z0 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: boolean isMoreThanHalf()>();

        $z1 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: boolean isPositiveArc()>();

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void drawArc(androidx.ui.graphics.Path,double,double,double,double,double,double,double,boolean,boolean)>(r2, $d0, $d1, $d2, $d3, $d4, $d5, $d6, $z0, $z1);

        $r5 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f7 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: float getArcStartX()>();

        virtualinvoke $r5.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f7);

        $r6 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f8 = virtualinvoke $r1.<androidx.ui.graphics.vector.PathNode$ArcTo: float getArcStartY()>();

        virtualinvoke $r6.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f8);

        $r8 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r7 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f9 = virtualinvoke $r7.<androidx.ui.graphics.vector.PathParser$PathPoint: float getX()>();

        virtualinvoke $r8.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>($f9);

        $r10 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint ctrlPoint>;

        $r9 = r0.<androidx.ui.graphics.vector.PathParser: androidx.ui.graphics.vector.PathParser$PathPoint currentPoint>;

        $f10 = virtualinvoke $r9.<androidx.ui.graphics.vector.PathParser$PathPoint: float getY()>();

        virtualinvoke $r10.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>($f10);

        return;
    }

    private final void drawArc(androidx.ui.graphics.Path, double, double, double, double, double, double, double, boolean, boolean)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.Path r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, d47, d48, d49, d50, d51, d52, d53, d54, d55, d56, d57, d58, d59, d60, d61, $d62, $d63, d64, $d65, $d66, d67;
        boolean z0, z1, z2, z3, z5, z6, $z7, z8, z9, $z10;
        byte $b0, $b1, $b2, $b3;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: androidx.ui.graphics.Path;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        d7 = staticinvoke <androidx.ui.util.MathHelpersKt: double toRadians(double)>(d6);

        z5 = 0;

        d8 = staticinvoke <java.lang.Math: double cos(double)>(d7);

        z6 = 0;

        d47 = staticinvoke <java.lang.Math: double sin(double)>(d7);

        $d21 = d0 * d8;

        $d20 = d1 * d47;

        $d22 = $d21 + $d20;

        d48 = $d22 / d4;

        $d23 = neg d0;

        $d25 = $d23 * d47;

        $d24 = d1 * d8;

        $d26 = $d25 + $d24;

        d9 = $d26 / d5;

        $d28 = d2 * d8;

        $d27 = d3 * d47;

        $d29 = $d28 + $d27;

        d10 = $d29 / d4;

        $d30 = neg d2;

        $d32 = $d30 * d47;

        $d31 = d3 * d8;

        $d33 = $d32 + $d31;

        d11 = $d33 / d5;

        d12 = d48 - d10;

        d13 = d9 - d11;

        $d35 = d48 + d10;

        $d34 = (double) 2;

        d14 = $d35 / $d34;

        $d37 = d9 + d11;

        $d36 = (double) 2;

        d15 = $d37 / $d36;

        $d39 = d12 * d12;

        $d38 = d13 * d13;

        d16 = $d39 + $d38;

        $b0 = d16 cmpg 0.0;

        if $b0 != 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        if $z7 == 0 goto label03;

        return;

     label03:
        $d40 = 1.0 / d16;

        d17 = $d40 - 0.25;

        $b1 = d17 cmpg 0.0;

        if $b1 >= 0 goto label04;

        z2 = 0;

        $d41 = staticinvoke <java.lang.Math: double sqrt(double)>(d16);

        $d42 = $d41 / 1.99999;

        f0 = (float) $d42;

        $d43 = (double) f0;

        $d46 = d4 * $d43;

        $d44 = (double) f0;

        $d45 = d5 * $d44;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void drawArc(androidx.ui.graphics.Path,double,double,double,double,double,double,double,boolean,boolean)>(r1, d0, d1, d2, d3, $d46, $d45, d6, z0, z1);

        return;

     label04:
        z8 = 0;

        d49 = staticinvoke <java.lang.Math: double sqrt(double)>(d17);

        d50 = d49 * d12;

        d18 = d49 * d13;

        if z0 != z1 goto label05;

        d51 = d14 - d18;

        d52 = d15 + d50;

        goto label06;

     label05:
        d51 = d14 + d18;

        d52 = d15 - d50;

     label06:
        d53 = d9 - d52;

        d54 = d48 - d51;

        z9 = 0;

        d19 = staticinvoke <java.lang.Math: double atan2(double,double)>(d53, d54);

        d55 = d11 - d52;

        d56 = d10 - d51;

        z3 = 0;

        d57 = staticinvoke <java.lang.Math: double atan2(double,double)>(d55, d56);

        d58 = d57 - d19;

        $b2 = d58 cmpl 0.0;

        if $b2 < 0 goto label07;

        $z10 = 1;

        goto label08;

     label07:
        $z10 = 0;

     label08:
        if z1 == $z10 goto label10;

        $b3 = d58 cmpl 0.0;

        if $b3 <= 0 goto label09;

        d58 = d58 - 6.283185307179586;

        goto label10;

     label09:
        d58 = d58 + 6.283185307179586;

     label10:
        d59 = d51 * d4;

        d60 = d52 * d5;

        d61 = d59;

        $d62 = d59 * d8;

        $d63 = d60 * d47;

        d64 = $d62 - $d63;

        $d65 = d61 * d47;

        $d66 = d60 * d8;

        d67 = $d65 + $d66;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void arcToBezier(androidx.ui.graphics.Path,double,double,double,double,double,double,double,double,double)>(r1, d64, d67, d4, d5, d0, d1, d7, d19, d58);

        return;
    }

    private final void arcToBezier(androidx.ui.graphics.Path, double, double, double, double, double, double, double, double, double)
    {
        androidx.ui.graphics.vector.PathParser r0;
        androidx.ui.graphics.Path r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, d67, d68, d69, d70, d71, d72, d73, d74, d75, d76, d77, d78, d79, d80, d81, d82, d83, d84, d85;
        int i0, i1, i2, i3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: androidx.ui.graphics.Path;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        d7 := @parameter8: double;

        d8 := @parameter9: double;

        d67 = d4;

        d68 = d5;

        $d20 = (double) 4;

        $d21 = d8 * $d20;

        d69 = $d21 / 3.141592653589793;

        z0 = 0;

        d70 = staticinvoke <java.lang.Math: double abs(double)>(d69);

        z1 = 0;

        $d22 = staticinvoke <java.lang.Math: double ceil(double)>(d70);

        i0 = (int) $d22;

        d71 = d7;

        z2 = 0;

        d72 = staticinvoke <java.lang.Math: double cos(double)>(d6);

        z3 = 0;

        d73 = staticinvoke <java.lang.Math: double sin(double)>(d6);

        z4 = 0;

        d74 = staticinvoke <java.lang.Math: double cos(double)>(d71);

        z5 = 0;

        d75 = staticinvoke <java.lang.Math: double sin(double)>(d71);

        $d23 = neg d2;

        $d24 = $d23 * d72;

        $d27 = $d24 * d75;

        $d25 = d3 * d73;

        $d26 = $d25 * d74;

        d76 = $d27 - $d26;

        $d28 = neg d2;

        $d29 = $d28 * d73;

        $d32 = $d29 * d75;

        $d30 = d3 * d72;

        $d31 = $d30 * d74;

        d77 = $d32 + $d31;

        $d33 = (double) i0;

        d9 = d8 / $d33;

        i3 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label2;

        if i3 > i1 goto label2;

     label1:
        i2 = i3;

        i3 = i3 + 1;

        d10 = d71 + d9;

        z6 = 0;

        d11 = staticinvoke <java.lang.Math: double sin(double)>(d10);

        z7 = 0;

        d78 = staticinvoke <java.lang.Math: double cos(double)>(d10);

        $d34 = d2 * d72;

        $d35 = $d34 * d78;

        $d38 = d0 + $d35;

        $d36 = d3 * d73;

        $d37 = $d36 * d11;

        d79 = $d38 - $d37;

        $d39 = d2 * d73;

        $d40 = $d39 * d78;

        $d43 = d1 + $d40;

        $d41 = d3 * d72;

        $d42 = $d41 * d11;

        d12 = $d43 + $d42;

        $d44 = neg d2;

        $d45 = $d44 * d72;

        $d48 = $d45 * d11;

        $d46 = d3 * d73;

        $d47 = $d46 * d78;

        d13 = $d48 - $d47;

        $d49 = neg d2;

        $d50 = $d49 * d73;

        $d53 = $d50 * d11;

        $d51 = d3 * d72;

        $d52 = $d51 * d78;

        d14 = $d53 + $d52;

        $d55 = d10 - d71;

        $d54 = (double) 2;

        d80 = $d55 / $d54;

        z8 = 0;

        d15 = staticinvoke <java.lang.Math: double tan(double)>(d80);

        d81 = d10 - d71;

        z9 = 0;

        $d58 = (double) 4;

        $d56 = 3.0 * d15;

        $d57 = $d56 * d15;

        d82 = $d58 + $d57;

        d18 = staticinvoke <java.lang.Math: double sin(double)>(d81);

        z10 = 0;

        d19 = staticinvoke <java.lang.Math: double sqrt(double)>(d82);

        $d59 = (double) 1;

        $d60 = d19 - $d59;

        $d62 = d18 * $d60;

        $d61 = (double) 3;

        d83 = $d62 / $d61;

        $d63 = d83 * d76;

        d84 = d67 + $d63;

        $d64 = d83 * d77;

        d85 = d68 + $d64;

        $d65 = d83 * d13;

        d16 = d79 - $d65;

        $d66 = d83 * d14;

        d17 = d12 - $d66;

        $f5 = (float) d84;

        $f4 = (float) d85;

        $f3 = (float) d16;

        $f2 = (float) d17;

        $f1 = (float) d79;

        $f0 = (float) d12;

        interfaceinvoke r1.<androidx.ui.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f5, $f4, $f3, $f2, $f1, $f0);

        d71 = d10;

        d67 = d79;

        d68 = d12;

        d76 = d13;

        d77 = d14;

        if i3 <= i1 goto label1;

     label2:
        return;
    }

    private final void addNode(char, float[])
    {
        androidx.ui.graphics.vector.PathParser r0;
        char c0;
        float[] r1;
        java.util.List $r2, $r3;
        java.util.Collection $r4;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        c0 := @parameter0: char;

        r1 := @parameter1: float[];

        $r2 = r0.<androidx.ui.graphics.vector.PathParser: java.util.List nodes>;

        $r3 = staticinvoke <androidx.ui.graphics.vector.PathNodeKt: java.util.List toPathNodes(char,float[])>(c0, r1);

        $r4 = (java.util.Collection) $r3;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return;
    }

    private final int nextStart(java.lang.String, int)
    {
        androidx.ui.graphics.vector.PathParser r0;
        java.lang.String r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        char c1;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i10 = i0;

     label1:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i10 >= $i3 goto label4;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10);

        $i5 = c1 - 65;

        $i4 = c1 - 90;

        $i6 = $i5 * $i4;

        if $i6 <= 0 goto label2;

        $i8 = c1 - 97;

        $i7 = c1 - 122;

        $i9 = $i8 * $i7;

        if $i9 > 0 goto label3;

     label2:
        if c1 == 101 goto label3;

        if c1 == 69 goto label3;

        return i10;

     label3:
        i2 = i10;

        i10 = i2 + 1;

        goto label1;

     label4:
        return i10;
    }

    private final float[] getFloats(java.lang.String)
    {
        androidx.ui.graphics.vector.PathParser r0;
        java.lang.String r1, $r7, r9, r11, r12;
        float[] r2, $r4, $r6, r10, r13;
        int i0, i1, $i4, i5, i6, i7, i8, i9;
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r3, $r5;
        char $c2, $c3;
        boolean $z0, z1, z2;
        kotlin.TypeCastException $r8;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: java.lang.String;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c2 == 122 goto label1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c3 != 90 goto label2;

     label1:
        $r4 = newarray (float)[0];

        return $r4;

     label2:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = newarray (float)[$i4];

        i5 = 0;

        i6 = 1;

        $r5 = new androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        specialinvoke $r5.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: void <init>(int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 3, null);

        r3 = $r5;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label3:
        if i6 >= i1 goto label8;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser: void extract(java.lang.String,int,androidx.ui.graphics.vector.PathParser$ExtractFloatResult)>(r1, i6, r3);

        i0 = virtualinvoke r3.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int getEndPosition()>();

        if i6 >= i0 goto label5;

        i7 = i5;

        i5 = i7 + 1;

        r9 = r1;

        i8 = i7;

        r10 = r2;

        z1 = 0;

        if r9 != null goto label4;

        $r8 = new kotlin.TypeCastException;

        specialinvoke $r8.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r8;

     label4:
        $r7 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(i6, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r7, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        r11 = $r7;

        r12 = r11;

        i9 = i8;

        r13 = r10;

        z2 = 0;

        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r12);

        r13[i9] = f0;

     label5:
        $z0 = virtualinvoke r3.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean getEndWithNegativeOrDot()>();

        if $z0 == 0 goto label6;

        i6 = i0;

        goto label7;

     label6:
        i6 = i0 + 1;

     label7:
        goto label3;

     label8:
        $r6 = specialinvoke r0.<androidx.ui.graphics.vector.PathParser: float[] copyOfRange(float[],int,int)>(r2, 0, i5);

        return $r6;
    }

    private final float[] copyOfRange(float[], int, int)
    {
        androidx.ui.graphics.vector.PathParser r0;
        float[] r1, r5;
        int i0, i1, i2, i3, i4, $i5, i6;
        boolean z0;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 <= i1 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        i2 = lengthof r1;

        if i0 < 0 goto label2;

        if i0 <= i2 goto label3;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label3:
        i3 = i1 - i0;

        i6 = i2 - i0;

        z0 = 0;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i6);

        r5 = newarray (float)[i3];

        $i5 = i0 + i4;

        staticinvoke <kotlin.collections.ArraysKt: float[] copyInto(float[],float[],int,int,int)>(r1, r5, 0, i0, $i5);

        return r5;
    }

    private final void extract(java.lang.String, int, androidx.ui.graphics.vector.PathParser$ExtractFloatResult)
    {
        androidx.ui.graphics.vector.PathParser r0;
        java.lang.String r1;
        int i0, $i2, i3, i5;
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r2;
        boolean z0, z1, z2, z3, $z4, $z5;
        char c1, c4;

        r0 := @this: androidx.ui.graphics.vector.PathParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        i3 = i0;

        z1 = 0;

        virtualinvoke r2.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: void setEndWithNegativeOrDot(boolean)>(0);

        z2 = 0;

        z3 = 0;

     label01:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i3 >= $i2 goto label14;

        z0 = z3;

        z3 = 0;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        c4 = c1;

        if c4 != 32 goto label02;

        $z4 = 1;

        goto label04;

     label02:
        if c4 != 44 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        if $z4 == 0 goto label05;

        z1 = 1;

        goto label12;

     label05:
        if c4 != 45 goto label06;

        if i3 == i0 goto label12;

        if z0 != 0 goto label12;

        z1 = 1;

        virtualinvoke r2.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: void setEndWithNegativeOrDot(boolean)>(1);

        goto label12;

     label06:
        if c4 != 46 goto label08;

        if z2 != 0 goto label07;

        z2 = 1;

        goto label12;

     label07:
        z1 = 1;

        virtualinvoke r2.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: void setEndWithNegativeOrDot(boolean)>(1);

        goto label12;

     label08:
        if c4 != 101 goto label09;

        $z5 = 1;

        goto label11;

     label09:
        if c4 != 69 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        if $z5 == 0 goto label12;

        z3 = 1;

     label12:
        if z1 == 0 goto label13;

        goto label14;

     label13:
        i5 = i3;

        i3 = i5 + 1;

        goto label01;

     label14:
        virtualinvoke r2.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: void setEndPosition(int)>(i3);

        return;
    }

androidx.ui.graphics.vector.PathParser$ExtractFloatResult
<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition>
<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot>
    public void <init>(int, boolean)
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition> = i0;

        r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot> = z0;

        return;
    }

    public void <init>(int, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        int i0, $i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        boolean z0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        i3 := @parameter0: int;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i3 = 0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        specialinvoke r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: void <init>(int,boolean)>(i3, z0);

        return;
    }

    public final int getEndPosition()
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        int $i0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        $i0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition>;

        return $i0;
    }

    public final void setEndPosition(int)
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        int i0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        i0 := @parameter0: int;

        r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition> = i0;

        return;
    }

    public final boolean getEndWithNegativeOrDot()
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        boolean $z0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        $z0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot>;

        return $z0;
    }

    public final void setEndWithNegativeOrDot(boolean)
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        boolean z0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot> = z0;

        return;
    }

    public final int component1()
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        int $i0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        $i0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition>;

        return $i0;
    }

    public final boolean component2()
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        boolean $z0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        $z0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot>;

        return $z0;
    }

    public final androidx.ui.graphics.vector.PathParser$ExtractFloatResult copy(int, boolean)
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0, $r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        specialinvoke $r1.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: void <init>(int,boolean)>(i0, z0);

        return $r1;
    }

    public static androidx.ui.graphics.vector.PathParser$ExtractFloatResult copy$default(androidx.ui.graphics.vector.PathParser$ExtractFloatResult, int, boolean, int, java.lang.Object)
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0, $r2;
        int i0, $i1, $i2, i3;
        java.lang.Object r1;
        boolean z0;

        r0 := @parameter0: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i3 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot>;

     label2:
        $r2 = virtualinvoke r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: androidx.ui.graphics.vector.PathParser$ExtractFloatResult copy(int,boolean)>(i3, z0);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0;
        boolean $z0;
        java.lang.String $r7;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExtractFloatResult(endPosition=");

        $i0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", endWithNegativeOrDot=");

        $z0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int hashCode()
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;
        int $i0, $i1, $i2, $i3, i4;
        boolean $z0, z1;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        $i0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition>;

        $i1 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        $i2 = $i1 * 31;

        $z0 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot>;

        if $z0 == 0 goto label1;

        $z0 = 1;

     label1:
        z1 = $z0;

        i4 = (int) z1;

        $i3 = $i2 + i4;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0, r2;
        java.lang.Object r1, r3;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = r1;

        r2 = (androidx.ui.graphics.vector.PathParser$ExtractFloatResult) r3;

        $i1 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition>;

        $i0 = r2.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: int endPosition>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $z2 = r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot>;

        $z1 = r2.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: boolean endWithNegativeOrDot>;

        if $z2 == $z1 goto label4;

        return 0;

     label4:
        return 1;
    }

    public void <init>()
    {
        androidx.ui.graphics.vector.PathParser$ExtractFloatResult r0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$ExtractFloatResult;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser$ExtractFloatResult: void <init>(int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 3, null);

        return;
    }

androidx.ui.graphics.vector.PathParser$PathPoint
<androidx.ui.graphics.vector.PathParser$PathPoint: float x>
<androidx.ui.graphics.vector.PathParser$PathPoint: float y>
    public void <init>(float, float)
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        float f0, f1;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float x> = f0;

        r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float y> = f1;

        return;
    }

    public void <init>(float, float, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        float f0, f1;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 0.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = 0.0F;

     label2:
        specialinvoke r0.<androidx.ui.graphics.vector.PathParser$PathPoint: void <init>(float,float)>(f0, f1);

        return;
    }

    public final float getX()
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        $f0 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float x>;

        return $f0;
    }

    public final void setX(float)
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        f0 := @parameter0: float;

        r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float x> = f0;

        return;
    }

    public final float getY()
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        $f0 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float y>;

        return $f0;
    }

    public final void setY(float)
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        f0 := @parameter0: float;

        r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float y> = f0;

        return;
    }

    public final void reset()
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        virtualinvoke r0.<androidx.ui.graphics.vector.PathParser$PathPoint: void setX(float)>(0.0F);

        virtualinvoke r0.<androidx.ui.graphics.vector.PathParser$PathPoint: void setY(float)>(0.0F);

        return;
    }

    public final float component1()
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        $f0 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float x>;

        return $f0;
    }

    public final float component2()
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        $f0 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float y>;

        return $f0;
    }

    public final androidx.ui.graphics.vector.PathParser$PathPoint copy(float, float)
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0, $r1;
        float f0, f1;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = new androidx.ui.graphics.vector.PathParser$PathPoint;

        specialinvoke $r1.<androidx.ui.graphics.vector.PathParser$PathPoint: void <init>(float,float)>(f0, f1);

        return $r1;
    }

    public static androidx.ui.graphics.vector.PathParser$PathPoint copy$default(androidx.ui.graphics.vector.PathParser$PathPoint, float, float, int, java.lang.Object)
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        float f0, f1;

        r0 := @parameter0: androidx.ui.graphics.vector.PathParser$PathPoint;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float x>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float y>;

     label2:
        $r2 = virtualinvoke r0.<androidx.ui.graphics.vector.PathParser$PathPoint: androidx.ui.graphics.vector.PathParser$PathPoint copy(float,float)>(f0, f1);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        float $f0, $f1;
        java.lang.String $r7;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PathPoint(x=");

        $f0 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float x>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", y=");

        $f1 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float y>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int hashCode()
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;
        float $f0, $f1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        $f0 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float x>;

        $i0 = staticinvoke <java.lang.Float: int hashCode(float)>($f0);

        $i1 = $i0 * 31;

        $f1 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float y>;

        $i2 = staticinvoke <java.lang.Float: int hashCode(float)>($f1);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0, r2;
        java.lang.Object r1, r3;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3;
        java.lang.Float $r4, $r5, $r6, $r7;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.ui.graphics.vector.PathParser$PathPoint;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = r1;

        r2 = (androidx.ui.graphics.vector.PathParser$PathPoint) r3;

        $f0 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float x>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f1 = r2.<androidx.ui.graphics.vector.PathParser$PathPoint: float x>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $f2 = r0.<androidx.ui.graphics.vector.PathParser$PathPoint: float y>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $f3 = r2.<androidx.ui.graphics.vector.PathParser$PathPoint: float y>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public void <init>()
    {
        androidx.ui.graphics.vector.PathParser$PathPoint r0;

        r0 := @this: androidx.ui.graphics.vector.PathParser$PathPoint;

        specialinvoke r0.<androidx.ui.graphics.vector.PathParser$PathPoint: void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 3, null);

        return;
    }

