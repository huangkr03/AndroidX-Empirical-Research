androidx.media3.test.utils.FakeRenderer
<androidx.media3.test.utils.FakeRenderer: java.lang.String TAG>
<androidx.media3.test.utils.FakeRenderer: long SOURCE_READAHEAD_US>
<androidx.media3.test.utils.FakeRenderer: androidx.media3.decoder.DecoderInputBuffer buffer>
<androidx.media3.test.utils.FakeRenderer: androidx.media3.exoplayer.drm.DrmSession currentDrmSession>
<androidx.media3.test.utils.FakeRenderer: long playbackPositionUs>
<androidx.media3.test.utils.FakeRenderer: long lastSamplePositionUs>
<androidx.media3.test.utils.FakeRenderer: boolean hasPendingBuffer>
<androidx.media3.test.utils.FakeRenderer: java.util.List formatsRead>
<androidx.media3.test.utils.FakeRenderer: boolean isEnded>
<androidx.media3.test.utils.FakeRenderer: int positionResetCount>
<androidx.media3.test.utils.FakeRenderer: int sampleBufferReadCount>
<androidx.media3.test.utils.FakeRenderer: int enabledCount>
<androidx.media3.test.utils.FakeRenderer: int resetCount>
    public void <init>(int)
    {
        androidx.media3.test.utils.FakeRenderer r0;
        int i0;
        androidx.media3.decoder.DecoderInputBuffer $r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void <init>(int)>(i0);

        $r1 = new androidx.media3.decoder.DecoderInputBuffer;

        specialinvoke $r1.<androidx.media3.decoder.DecoderInputBuffer: void <init>(int)>(1);

        r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.decoder.DecoderInputBuffer buffer> = $r1;

        r0.<androidx.media3.test.utils.FakeRenderer: long lastSamplePositionUs> = -9223372036854775808L;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.test.utils.FakeRenderer: java.util.List formatsRead> = $r2;

        return;
    }

    public java.lang.String getName()
    {
        androidx.media3.test.utils.FakeRenderer r0;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        return "FakeRenderer";
    }

    protected void onPositionReset(long, boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.test.utils.FakeRenderer r0;
        long l0;
        boolean z0;
        int $i1, $i2;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r0.<androidx.media3.test.utils.FakeRenderer: long playbackPositionUs> = l0;

        r0.<androidx.media3.test.utils.FakeRenderer: long lastSamplePositionUs> = -9223372036854775808L;

        r0.<androidx.media3.test.utils.FakeRenderer: boolean hasPendingBuffer> = 0;

        $i1 = r0.<androidx.media3.test.utils.FakeRenderer: int positionResetCount>;

        $i2 = $i1 + 1;

        r0.<androidx.media3.test.utils.FakeRenderer: int positionResetCount> = $i2;

        r0.<androidx.media3.test.utils.FakeRenderer: boolean isEnded> = 0;

        return;
    }

    public void render(long, long) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.test.utils.FakeRenderer r0;
        long l0, l1, $l3, $l4;
        androidx.media3.exoplayer.FormatHolder r1;
        int i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        androidx.media3.common.Format r2, $r11;
        boolean $z0, $z1, $z2, $z4, $z5, $z6;
        androidx.media3.decoder.DecoderInputBuffer $r3, $r4, $r5, $r6, $r7;
        androidx.media3.exoplayer.drm.DrmSession $r8, $r9, $r10;
        java.lang.Object $r12;
        java.lang.String $r13, $r17, $r20, $r21;
        java.util.List $r14;
        java.lang.IllegalStateException $r15;
        java.lang.Object[] $r16;
        java.lang.Integer $r18, $r19;
        androidx.media3.exoplayer.ExoPlaybackException $r22;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $z0 = r0.<androidx.media3.test.utils.FakeRenderer: boolean isEnded>;

        if $z0 == 0 goto label01;

        return;

     label01:
        r0.<androidx.media3.test.utils.FakeRenderer: long playbackPositionUs> = l0;

     label02:
        $z4 = r0.<androidx.media3.test.utils.FakeRenderer: boolean hasPendingBuffer>;

        if $z4 != 0 goto label09;

        r1 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.exoplayer.FormatHolder getFormatHolder()>();

        $r5 = r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.decoder.DecoderInputBuffer buffer>;

        virtualinvoke $r5.<androidx.media3.decoder.DecoderInputBuffer: void clear()>();

        $r6 = r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.decoder.DecoderInputBuffer buffer>;

        i2 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: int readSource(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int)>(r1, $r6, 0);

        if i2 != -5 goto label04;

        $r9 = r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.exoplayer.drm.DrmSession currentDrmSession>;

        $r8 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.exoplayer.drm.DrmSession drmSession>;

        staticinvoke <androidx.media3.exoplayer.drm.DrmSession: void replaceSession(androidx.media3.exoplayer.drm.DrmSession,androidx.media3.exoplayer.drm.DrmSession)>($r9, $r8);

        $r10 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.exoplayer.drm.DrmSession drmSession>;

        r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.exoplayer.drm.DrmSession currentDrmSession> = $r10;

        $r11 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format>;

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        r2 = (androidx.media3.common.Format) $r12;

        $r13 = r2.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $i7 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>($r13);

        $i8 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: int getTrackType()>();

        if $i7 == $i8 goto label03;

        $r15 = new java.lang.IllegalStateException;

        $r16 = newarray (java.lang.Object)[2];

        $r17 = r2.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $i9 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>($r17);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r16[0] = $r18;

        $i10 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: int getTrackType()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r16[1] = $r19;

        $r20 = staticinvoke <androidx.media3.common.util.Util: java.lang.String formatInvariant(java.lang.String,java.lang.Object[])>("Format track type (%s) doesn\'t match renderer track type (%s).", $r16);

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        $r21 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: java.lang.String getName()>();

        $i11 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: int getIndex()>();

        $r22 = staticinvoke <androidx.media3.exoplayer.ExoPlaybackException: androidx.media3.exoplayer.ExoPlaybackException createForRenderer(java.lang.Throwable,java.lang.String,int,androidx.media3.common.Format,int,boolean,int)>($r15, $r21, $i11, r2, 0, 0, 4005);

        throw $r22;

     label03:
        $r14 = r0.<androidx.media3.test.utils.FakeRenderer: java.util.List formatsRead>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r2);

        virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: void onFormatChanged(androidx.media3.common.Format)>(r2);

        goto label09;

     label04:
        if i2 != -4 goto label06;

        $r7 = r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.decoder.DecoderInputBuffer buffer>;

        $z2 = virtualinvoke $r7.<androidx.media3.decoder.DecoderInputBuffer: boolean isEndOfStream()>();

        if $z2 == 0 goto label05;

        r0.<androidx.media3.test.utils.FakeRenderer: boolean isEnded> = 1;

        return;

     label05:
        r0.<androidx.media3.test.utils.FakeRenderer: boolean hasPendingBuffer> = 1;

        goto label09;

     label06:
        if i2 != -3 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z5);

        return;

     label09:
        $z6 = r0.<androidx.media3.test.utils.FakeRenderer: boolean hasPendingBuffer>;

        if $z6 == 0 goto label02;

        $r3 = r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.decoder.DecoderInputBuffer buffer>;

        $l3 = $r3.<androidx.media3.decoder.DecoderInputBuffer: long timeUs>;

        $z1 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: boolean shouldProcessBuffer(long,long)>($l3, l0);

        if $z1 != 0 goto label10;

        return;

     label10:
        $r4 = r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.decoder.DecoderInputBuffer buffer>;

        $l4 = $r4.<androidx.media3.decoder.DecoderInputBuffer: long timeUs>;

        r0.<androidx.media3.test.utils.FakeRenderer: long lastSamplePositionUs> = $l4;

        $i5 = r0.<androidx.media3.test.utils.FakeRenderer: int sampleBufferReadCount>;

        $i6 = $i5 + 1;

        r0.<androidx.media3.test.utils.FakeRenderer: int sampleBufferReadCount> = $i6;

        r0.<androidx.media3.test.utils.FakeRenderer: boolean hasPendingBuffer> = 0;

        goto label02;
    }

    protected void onEnabled(boolean, boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.test.utils.FakeRenderer r0;
        boolean z0, z1;
        int $i0, $i1;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $i0 = r0.<androidx.media3.test.utils.FakeRenderer: int enabledCount>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.test.utils.FakeRenderer: int enabledCount> = $i1;

        return;
    }

    protected void onReset()
    {
        androidx.media3.test.utils.FakeRenderer r0;
        int $i0, $i1;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        $i0 = r0.<androidx.media3.test.utils.FakeRenderer: int resetCount>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.test.utils.FakeRenderer: int resetCount> = $i1;

        return;
    }

    public boolean isReady()
    {
        androidx.media3.test.utils.FakeRenderer r0;
        long $l0, $l1;
        byte $b2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        $l1 = r0.<androidx.media3.test.utils.FakeRenderer: long lastSamplePositionUs>;

        $l0 = r0.<androidx.media3.test.utils.FakeRenderer: long playbackPositionUs>;

        $b2 = $l1 cmp $l0;

        if $b2 >= 0 goto label1;

        $z0 = r0.<androidx.media3.test.utils.FakeRenderer: boolean hasPendingBuffer>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: boolean isSourceReady()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isEnded()
    {
        androidx.media3.test.utils.FakeRenderer r0;
        boolean $z0;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        $z0 = r0.<androidx.media3.test.utils.FakeRenderer: boolean isEnded>;

        return $z0;
    }

    public int supportsFormat(androidx.media3.common.Format) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.test.utils.FakeRenderer r0;
        androidx.media3.common.Format r1;
        int i0, $i1, $i2;
        java.lang.String $r2;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        i0 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>($r2);

        if i0 == -1 goto label1;

        $i1 = virtualinvoke r0.<androidx.media3.test.utils.FakeRenderer: int getTrackType()>();

        if i0 != $i1 goto label1;

        $i2 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int create(int,int,int)>(4, 16, 0);

        goto label2;

     label1:
        $i2 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int create(int)>(0);

     label2:
        return $i2;
    }

    protected void onDisabled()
    {
        androidx.media3.test.utils.FakeRenderer r0;
        androidx.media3.exoplayer.drm.DrmSession $r1, $r2;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        $r1 = r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.exoplayer.drm.DrmSession currentDrmSession>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.exoplayer.drm.DrmSession currentDrmSession>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.drm.DrmSession: void release(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)>(null);

        r0.<androidx.media3.test.utils.FakeRenderer: androidx.media3.exoplayer.drm.DrmSession currentDrmSession> = null;

     label1:
        return;
    }

    protected void onFormatChanged(androidx.media3.common.Format)
    {
        androidx.media3.test.utils.FakeRenderer r0;
        androidx.media3.common.Format r1;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        r1 := @parameter0: androidx.media3.common.Format;

        return;
    }

    public java.util.List getFormatsRead()
    {
        androidx.media3.test.utils.FakeRenderer r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        $r1 = r0.<androidx.media3.test.utils.FakeRenderer: java.util.List formatsRead>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    protected boolean shouldProcessBuffer(long, long)
    {
        androidx.media3.test.utils.FakeRenderer r0;
        long l0, l1, $l2;
        byte $b3;
        boolean $z0;

        r0 := @this: androidx.media3.test.utils.FakeRenderer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = l1 + 250000L;

        $b3 = l0 cmp $l2;

        if $b3 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

