androidx.heifwriter.Texture2dProgram
<androidx.heifwriter.Texture2dProgram: java.lang.String TAG>
<androidx.heifwriter.Texture2dProgram: boolean DEBUG>
<androidx.heifwriter.Texture2dProgram: float[] IDENTITY_MATRIX>
<androidx.heifwriter.Texture2dProgram: float[] V_FLIP_MATRIX>
<androidx.heifwriter.Texture2dProgram: int TEXTURE_2D>
<androidx.heifwriter.Texture2dProgram: int TEXTURE_EXT>
<androidx.heifwriter.Texture2dProgram: java.lang.String VERTEX_SHADER>
<androidx.heifwriter.Texture2dProgram: java.lang.String FRAGMENT_SHADER_2D>
<androidx.heifwriter.Texture2dProgram: java.lang.String FRAGMENT_SHADER_EXT>
<androidx.heifwriter.Texture2dProgram: int mProgramType>
<androidx.heifwriter.Texture2dProgram: int mProgramHandle>
<androidx.heifwriter.Texture2dProgram: int muMVPMatrixLoc>
<androidx.heifwriter.Texture2dProgram: int muTexMatrixLoc>
<androidx.heifwriter.Texture2dProgram: int maPositionLoc>
<androidx.heifwriter.Texture2dProgram: int maTextureCoordLoc>
<androidx.heifwriter.Texture2dProgram: int mTextureTarget>
    public void <init>(int)
    {
        androidx.heifwriter.Texture2dProgram r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.RuntimeException $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.heifwriter.Texture2dProgram;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.heifwriter.Texture2dProgram: int mProgramType> = i0;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget> = 3553;

        $i15 = staticinvoke <androidx.heifwriter.Texture2dProgram: int createProgram(java.lang.String,java.lang.String)>("uniform mat4 uMVPMatrix;\nuniform mat4 uTexMatrix;\nattribute vec4 aPosition;\nattribute vec4 aTextureCoord;\nvarying vec2 vTextureCoord;\nvoid main() {\n    gl_Position = uMVPMatrix * aPosition;\n    vTextureCoord = (uTexMatrix * aTextureCoord).xy;\n}\n", "precision mediump float;\nvarying vec2 vTextureCoord;\nuniform sampler2D sTexture;\nvoid main() {\n    gl_FragColor = texture2D(sTexture, vTextureCoord);\n}\n");

        r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle> = $i15;

        goto label4;

     label2:
        r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget> = 36197;

        $i1 = staticinvoke <androidx.heifwriter.Texture2dProgram: int createProgram(java.lang.String,java.lang.String)>("uniform mat4 uMVPMatrix;\nuniform mat4 uTexMatrix;\nattribute vec4 aPosition;\nattribute vec4 aTextureCoord;\nvarying vec2 vTextureCoord;\nvoid main() {\n    gl_Position = uMVPMatrix * aPosition;\n    vTextureCoord = (uTexMatrix * aTextureCoord).xy;\n}\n", "#extension GL_OES_EGL_image_external : require\nprecision mediump float;\nvarying vec2 vTextureCoord;\nuniform samplerExternalOES sTexture;\nvoid main() {\n    gl_FragColor = texture2D(sTexture, vTextureCoord);\n}\n");

        r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle> = $i1;

        goto label4;

     label3:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled type ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label4:
        $i2 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle>;

        if $i2 != 0 goto label5;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unable to create program");

        throw $r1;

     label5:
        $i3 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle>;

        $i4 = staticinvoke <android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>($i3, "aPosition");

        r0.<androidx.heifwriter.Texture2dProgram: int maPositionLoc> = $i4;

        $i5 = r0.<androidx.heifwriter.Texture2dProgram: int maPositionLoc>;

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkLocation(int,java.lang.String)>($i5, "aPosition");

        $i6 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle>;

        $i7 = staticinvoke <android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>($i6, "aTextureCoord");

        r0.<androidx.heifwriter.Texture2dProgram: int maTextureCoordLoc> = $i7;

        $i8 = r0.<androidx.heifwriter.Texture2dProgram: int maTextureCoordLoc>;

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkLocation(int,java.lang.String)>($i8, "aTextureCoord");

        $i9 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle>;

        $i10 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i9, "uMVPMatrix");

        r0.<androidx.heifwriter.Texture2dProgram: int muMVPMatrixLoc> = $i10;

        $i11 = r0.<androidx.heifwriter.Texture2dProgram: int muMVPMatrixLoc>;

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkLocation(int,java.lang.String)>($i11, "uMVPMatrix");

        $i12 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle>;

        $i13 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i12, "uTexMatrix");

        r0.<androidx.heifwriter.Texture2dProgram: int muTexMatrixLoc> = $i13;

        $i14 = r0.<androidx.heifwriter.Texture2dProgram: int muTexMatrixLoc>;

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkLocation(int,java.lang.String)>($i14, "uTexMatrix");

        return;
    }

    public void release()
    {
        androidx.heifwriter.Texture2dProgram r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0, $i2;
        java.lang.String $r4;

        r0 := @this: androidx.heifwriter.Texture2dProgram;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleting program ");

        $i0 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Texture2dProgram", $r4);

        $i2 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle>;

        staticinvoke <android.opengl.GLES20: void glDeleteProgram(int)>($i2);

        r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle> = -1;

        return;
    }

    public int getProgramType()
    {
        androidx.heifwriter.Texture2dProgram r0;
        int $i0;

        r0 := @this: androidx.heifwriter.Texture2dProgram;

        $i0 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramType>;

        return $i0;
    }

    public int createTextureObject()
    {
        androidx.heifwriter.Texture2dProgram r0;
        int[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        float $f0;

        r0 := @this: androidx.heifwriter.Texture2dProgram;

        r1 = newarray (int)[1];

        staticinvoke <android.opengl.GLES20: void glGenTextures(int,int[],int)>(1, r1, 0);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glGenTextures");

        i0 = r1[0];

        $i1 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>($i1, i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("glBindTexture ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>($r5);

        $i2 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        staticinvoke <android.opengl.GLES20: void glTexParameterf(int,int,float)>($i2, 10241, 9728.0F);

        $i4 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        $i3 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        if $i3 != 3553 goto label1;

        $f0 = 9728.0F;

        goto label2;

     label1:
        $f0 = 9729.0F;

     label2:
        staticinvoke <android.opengl.GLES20: void glTexParameterf(int,int,float)>($i4, 10240, $f0);

        $i5 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>($i5, 10242, 33071);

        $i6 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>($i6, 10243, 33071);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glTexParameter");

        return i0;
    }

    public void loadTexture(int, android.graphics.Bitmap)
    {
        androidx.heifwriter.Texture2dProgram r0;
        int i0, $i1, $i2;
        android.graphics.Bitmap r1;

        r0 := @this: androidx.heifwriter.Texture2dProgram;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        $i1 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>($i1, i0);

        $i2 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        staticinvoke <android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>($i2, 0, r1, 0);

        return;
    }

    public void draw(float[], java.nio.FloatBuffer, int, int, int, int, float[], java.nio.FloatBuffer, int, int)
    {
        androidx.heifwriter.Texture2dProgram r0;
        float[] r1, r3;
        java.nio.FloatBuffer r2, r4;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;

        r0 := @this: androidx.heifwriter.Texture2dProgram;

        r1 := @parameter0: float[];

        r2 := @parameter1: java.nio.FloatBuffer;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: float[];

        r4 := @parameter7: java.nio.FloatBuffer;

        i4 := @parameter8: int;

        i5 := @parameter9: int;

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("draw start");

        $i6 = r0.<androidx.heifwriter.Texture2dProgram: int mProgramHandle>;

        staticinvoke <android.opengl.GLES20: void glUseProgram(int)>($i6);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glUseProgram");

        staticinvoke <android.opengl.GLES20: void glActiveTexture(int)>(33984);

        $i7 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>($i7, i4);

        $i8 = r0.<androidx.heifwriter.Texture2dProgram: int muMVPMatrixLoc>;

        staticinvoke <android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>($i8, 1, 0, r1, 0);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glUniformMatrix4fv");

        $i9 = r0.<androidx.heifwriter.Texture2dProgram: int muTexMatrixLoc>;

        staticinvoke <android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>($i9, 1, 0, r3, 0);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glUniformMatrix4fv");

        $i10 = r0.<androidx.heifwriter.Texture2dProgram: int maPositionLoc>;

        staticinvoke <android.opengl.GLES20: void glEnableVertexAttribArray(int)>($i10);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glEnableVertexAttribArray");

        $i11 = r0.<androidx.heifwriter.Texture2dProgram: int maPositionLoc>;

        staticinvoke <android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>($i11, i2, 5126, 0, i3, r2);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glVertexAttribPointer");

        $i12 = r0.<androidx.heifwriter.Texture2dProgram: int maTextureCoordLoc>;

        staticinvoke <android.opengl.GLES20: void glEnableVertexAttribArray(int)>($i12);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glEnableVertexAttribArray");

        $i13 = r0.<androidx.heifwriter.Texture2dProgram: int maTextureCoordLoc>;

        staticinvoke <android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>($i13, 2, 5126, 0, i5, r4);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glVertexAttribPointer");

        staticinvoke <android.opengl.GLES20: void glDrawArrays(int,int,int)>(5, i0, i1);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glDrawArrays");

        $i14 = r0.<androidx.heifwriter.Texture2dProgram: int maPositionLoc>;

        staticinvoke <android.opengl.GLES20: void glDisableVertexAttribArray(int)>($i14);

        $i15 = r0.<androidx.heifwriter.Texture2dProgram: int maTextureCoordLoc>;

        staticinvoke <android.opengl.GLES20: void glDisableVertexAttribArray(int)>($i15);

        $i16 = r0.<androidx.heifwriter.Texture2dProgram: int mTextureTarget>;

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>($i16, 0);

        staticinvoke <android.opengl.GLES20: void glUseProgram(int)>(0);

        return;
    }

    public static int createProgram(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        int i0, i1, $i2, i6;
        int[] r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = staticinvoke <androidx.heifwriter.Texture2dProgram: int loadShader(int,java.lang.String)>(35633, r0);

        if i0 != 0 goto label1;

        return 0;

     label1:
        i1 = staticinvoke <androidx.heifwriter.Texture2dProgram: int loadShader(int,java.lang.String)>(35632, r1);

        if i1 != 0 goto label2;

        return 0;

     label2:
        i6 = staticinvoke <android.opengl.GLES20: int glCreateProgram()>();

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glCreateProgram");

        if i6 != 0 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Texture2dProgram", "Could not create program");

     label3:
        staticinvoke <android.opengl.GLES20: void glAttachShader(int,int)>(i6, i0);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glAttachShader");

        staticinvoke <android.opengl.GLES20: void glAttachShader(int,int)>(i6, i1);

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>("glAttachShader");

        staticinvoke <android.opengl.GLES20: void glLinkProgram(int)>(i6);

        r2 = newarray (int)[1];

        staticinvoke <android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>(i6, 35714, r2, 0);

        $i2 = r2[0];

        if $i2 == 1 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Texture2dProgram", "Could not link program: ");

        $r3 = staticinvoke <android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>(i6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Texture2dProgram", $r3);

        staticinvoke <android.opengl.GLES20: void glDeleteProgram(int)>(i6);

        i6 = 0;

     label4:
        return i6;
    }

    public static int loadShader(int, java.lang.String)
    {
        int i0, $i1, i4;
        java.lang.String r0, $r5, $r10, $r13, $r15;
        int[] r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r14;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        i4 = staticinvoke <android.opengl.GLES20: int glCreateShader(int)>(i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("glCreateShader type=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.heifwriter.Texture2dProgram: void checkGlError(java.lang.String)>($r5);

        staticinvoke <android.opengl.GLES20: void glShaderSource(int,java.lang.String)>(i4, r0);

        staticinvoke <android.opengl.GLES20: void glCompileShader(int)>(i4);

        r1 = newarray (int)[1];

        staticinvoke <android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>(i4, 35713, r1, 0);

        $i1 = r1[0];

        if $i1 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not compile shader ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Texture2dProgram", $r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = staticinvoke <android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>(i4);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Texture2dProgram", $r15);

        staticinvoke <android.opengl.GLES20: void glDeleteShader(int)>(i4);

        i4 = 0;

     label1:
        return i4;
    }

    public static void checkLocation(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r6;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in program");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label1:
        return;
    }

    public static void checkGlError(java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r6;
        java.lang.RuntimeException $r7;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.opengl.GLES20: int glGetError()>();

        if i0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": glError 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Texture2dProgram", r1);

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        throw $r7;

     label1:
        return;
    }

    static void <clinit>()
    {
        float[] $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = newarray (float)[16];

        <androidx.heifwriter.Texture2dProgram: float[] IDENTITY_MATRIX> = $r0;

        $r1 = <androidx.heifwriter.Texture2dProgram: float[] IDENTITY_MATRIX>;

        staticinvoke <android.opengl.Matrix: void setIdentityM(float[],int)>($r1, 0);

        $r2 = newarray (float)[16];

        <androidx.heifwriter.Texture2dProgram: float[] V_FLIP_MATRIX> = $r2;

        $r3 = <androidx.heifwriter.Texture2dProgram: float[] V_FLIP_MATRIX>;

        staticinvoke <android.opengl.Matrix: void setIdentityM(float[],int)>($r3, 0);

        $r4 = <androidx.heifwriter.Texture2dProgram: float[] V_FLIP_MATRIX>;

        staticinvoke <android.opengl.Matrix: void translateM(float[],int,float,float,float)>($r4, 0, 0.0F, 1.0F, 0.0F);

        $r5 = <androidx.heifwriter.Texture2dProgram: float[] V_FLIP_MATRIX>;

        staticinvoke <android.opengl.Matrix: void scaleM(float[],int,float,float,float)>($r5, 0, 1.0F, -1.0F, 1.0F);

        return;
    }

androidx.heifwriter.Texture2dProgram$ProgramType
