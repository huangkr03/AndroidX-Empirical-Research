androidx.media3.exoplayer.offline.ProgressiveDownloader
<androidx.media3.exoplayer.offline.ProgressiveDownloader: java.util.concurrent.Executor executor>
<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.DataSpec dataSpec>
<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheDataSource dataSource>
<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheWriter cacheWriter>
<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>
<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.exoplayer.offline.Downloader$ProgressListener progressListener>
<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.util.RunnableFutureTask downloadRunnable>
<androidx.media3.exoplayer.offline.ProgressiveDownloader: boolean isCanceled>
    public void <init>(androidx.media3.common.MediaItem, androidx.media3.datasource.cache.CacheDataSource$Factory)
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.datasource.cache.CacheDataSource$Factory r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r3 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        specialinvoke r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor)>(r1, r2, $r3);

        return;
    }

    public void <init>(androidx.media3.common.MediaItem, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor)
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.datasource.cache.CacheDataSource$Factory r2;
        java.util.concurrent.Executor r3, $r6;
        androidx.media3.datasource.cache.CacheWriter$ProgressListener r4;
        java.lang.Object $r5;
        androidx.media3.common.MediaItem$LocalConfiguration $r7, $r10, $r13;
        androidx.media3.datasource.DataSpec$Builder $r9, $r12, $r15, $r16;
        android.net.Uri $r11;
        java.lang.String $r14;
        androidx.media3.datasource.DataSpec $r17, $r20;
        androidx.media3.datasource.cache.CacheDataSource $r18, $r21;
        androidx.media3.datasource.cache.CacheWriter $r19;
        androidx.media3.common.PriorityTaskManager $r22;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r3 := @parameter2: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r6 = (java.util.concurrent.Executor) $r5;

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: java.util.concurrent.Executor executor> = $r6;

        $r7 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = new androidx.media3.datasource.DataSpec$Builder;

        specialinvoke $r9.<androidx.media3.datasource.DataSpec$Builder: void <init>()>();

        $r10 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r11 = $r10.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $r12 = virtualinvoke $r9.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(android.net.Uri)>($r11);

        $r13 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r14 = $r13.<androidx.media3.common.MediaItem$LocalConfiguration: java.lang.String customCacheKey>;

        $r15 = virtualinvoke $r12.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setKey(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setFlags(int)>(4);

        $r17 = virtualinvoke $r16.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.DataSpec dataSpec> = $r17;

        $r18 = virtualinvoke r2.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource createDataSourceForDownloading()>();

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheDataSource dataSource> = $r18;

        r4 = dynamicinvoke "onProgress" <androidx.media3.datasource.cache.CacheWriter$ProgressListener (androidx.media3.exoplayer.offline.ProgressiveDownloader)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(long,long,long), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.offline.ProgressiveDownloader: void onProgress(long,long,long)>, methodtype: void __METHODTYPE__(long,long,long));

        $r19 = new androidx.media3.datasource.cache.CacheWriter;

        $r21 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheDataSource dataSource>;

        $r20 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.DataSpec dataSpec>;

        specialinvoke $r19.<androidx.media3.datasource.cache.CacheWriter: void <init>(androidx.media3.datasource.cache.CacheDataSource,androidx.media3.datasource.DataSpec,byte[],androidx.media3.datasource.cache.CacheWriter$ProgressListener)>($r21, $r20, null, r4);

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheWriter cacheWriter> = $r19;

        $r22 = virtualinvoke r2.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.common.PriorityTaskManager getUpstreamPriorityTaskManager()>();

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager> = $r22;

        return;
    }

    public void download(androidx.media3.exoplayer.offline.Downloader$ProgressListener) throws java.io.IOException, java.lang.InterruptedException
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader r0;
        androidx.media3.exoplayer.offline.Downloader$ProgressListener r1;
        java.lang.Throwable r2, r3, r4, $r19, $r25, $r26, r31;
        androidx.media3.common.PriorityTaskManager $r5, $r9, $r10, $r12, $r17, $r18, $r23, $r24;
        androidx.media3.common.util.RunnableFutureTask $r6, $r8, $r13, $r15, $r20, $r22;
        java.lang.Object $r7, $r21, $r27;
        boolean $z0, $z1, $z2, z3;
        java.util.concurrent.Executor $r14;
        java.io.IOException $r28;
        androidx.media3.exoplayer.offline.ProgressiveDownloader$1 r29;
        java.lang.Runnable r30;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Downloader$ProgressListener;

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.exoplayer.offline.Downloader$ProgressListener progressListener> = r1;

        $r5 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r5 == null goto label01;

        $r18 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r18.<androidx.media3.common.PriorityTaskManager: void add(int)>(-1000);

     label01:
        z3 = 0;

     label02:
        if z3 != 0 goto label10;

        $z0 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: boolean isCanceled>;

        if $z0 != 0 goto label10;

        r29 = new androidx.media3.exoplayer.offline.ProgressiveDownloader$1;

        specialinvoke r29.<androidx.media3.exoplayer.offline.ProgressiveDownloader$1: void <init>(androidx.media3.exoplayer.offline.ProgressiveDownloader)>(r0);

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.util.RunnableFutureTask downloadRunnable> = r29;

        $r12 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r12 == null goto label03;

        $r17 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r17.<androidx.media3.common.PriorityTaskManager: void proceed(int)>(-1000);

     label03:
        $r14 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: java.util.concurrent.Executor executor>;

        $r13 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.util.RunnableFutureTask downloadRunnable>;

        r30 = (java.lang.Runnable) $r13;

        interfaceinvoke $r14.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r30);

     label04:
        $r15 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.util.RunnableFutureTask downloadRunnable>;

        virtualinvoke $r15.<androidx.media3.common.util.RunnableFutureTask: java.lang.Object get()>();

        z3 = 1;

     label05:
        goto label02;

     label06:
        $r25 := @caughtexception;

        r2 = $r25;

        $r26 = virtualinvoke r2.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r27 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r26);

        r3 = (java.lang.Throwable) $r27;

        $z1 = r3 instanceof androidx.media3.common.PriorityTaskManager$PriorityTooLowException;

        if $z1 == 0 goto label07;

        goto label09;

     label07:
        $z2 = r3 instanceof java.io.IOException;

        if $z2 == 0 goto label08;

        $r28 = (java.io.IOException) r3;

        r31 = (java.lang.Throwable) $r28;

        throw r31;

     label08:
        staticinvoke <androidx.media3.common.util.Util: void sneakyThrow(java.lang.Throwable)>(r3);

     label09:
        goto label02;

     label10:
        $r6 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.util.RunnableFutureTask downloadRunnable>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (androidx.media3.common.util.RunnableFutureTask) $r7;

        virtualinvoke $r8.<androidx.media3.common.util.RunnableFutureTask: void blockUntilFinished()>();

        $r9 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r9 == null goto label14;

        $r10 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r10.<androidx.media3.common.PriorityTaskManager: void remove(int)>(-1000);

        goto label14;

     label11:
        $r19 := @caughtexception;

        r4 = $r19;

     label12:
        $r20 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.util.RunnableFutureTask downloadRunnable>;

        $r21 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r20);

        $r22 = (androidx.media3.common.util.RunnableFutureTask) $r21;

        virtualinvoke $r22.<androidx.media3.common.util.RunnableFutureTask: void blockUntilFinished()>();

        $r23 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r23 == null goto label13;

        $r24 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r24.<androidx.media3.common.PriorityTaskManager: void remove(int)>(-1000);

     label13:
        throw r4;

     label14:
        return;

        catch java.util.concurrent.ExecutionException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void cancel()
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader r0;
        androidx.media3.common.util.RunnableFutureTask r1;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader;

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: boolean isCanceled> = 1;

        r1 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.common.util.RunnableFutureTask downloadRunnable>;

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.media3.common.util.RunnableFutureTask: boolean cancel(boolean)>(1);

     label1:
        return;
    }

    public void remove()
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader r0;
        androidx.media3.datasource.cache.CacheDataSource $r1, $r3;
        androidx.media3.datasource.cache.Cache $r2;
        androidx.media3.datasource.cache.CacheKeyFactory $r4;
        androidx.media3.datasource.DataSpec $r5;
        java.lang.String $r6;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader;

        $r1 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheDataSource dataSource>;

        $r2 = virtualinvoke $r1.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache getCache()>();

        $r3 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheDataSource dataSource>;

        $r4 = virtualinvoke $r3.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheKeyFactory getCacheKeyFactory()>();

        $r5 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.DataSpec dataSpec>;

        $r6 = interfaceinvoke $r4.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>($r5);

        interfaceinvoke $r2.<androidx.media3.datasource.cache.Cache: void removeResource(java.lang.String)>($r6);

        return;
    }

    private void onProgress(long, long, long)
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader r0;
        long l0, l1, l2;
        float f0, $f1, $f2, $f3, $f4;
        androidx.media3.exoplayer.offline.Downloader$ProgressListener $r1, $r2;
        byte $b3, $b4;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.exoplayer.offline.Downloader$ProgressListener progressListener>;

        if $r1 != null goto label1;

        return;

     label1:
        $b3 = l0 cmp -1L;

        if $b3 == 0 goto label2;

        $b4 = l0 cmp 0L;

        if $b4 != 0 goto label3;

     label2:
        $f4 = -1.0F;

        goto label4;

     label3:
        $f1 = (float) l1;

        $f3 = $f1 * 100.0F;

        $f2 = (float) l0;

        $f4 = $f3 / $f2;

     label4:
        f0 = $f4;

        $r2 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.exoplayer.offline.Downloader$ProgressListener progressListener>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.offline.Downloader$ProgressListener: void onProgress(long,long,float)>(l0, l1, f0);

        return;
    }

    static androidx.media3.datasource.cache.CacheWriter access$000(androidx.media3.exoplayer.offline.ProgressiveDownloader)
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader r0;
        androidx.media3.datasource.cache.CacheWriter $r1;

        r0 := @parameter0: androidx.media3.exoplayer.offline.ProgressiveDownloader;

        $r1 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheWriter cacheWriter>;

        return $r1;
    }

androidx.media3.exoplayer.offline.ProgressiveDownloader$1
<androidx.media3.exoplayer.offline.ProgressiveDownloader$1: androidx.media3.exoplayer.offline.ProgressiveDownloader this$0>
    void <init>(androidx.media3.exoplayer.offline.ProgressiveDownloader)
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader$1 r0;
        androidx.media3.exoplayer.offline.ProgressiveDownloader r1;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader$1;

        r1 := @parameter0: androidx.media3.exoplayer.offline.ProgressiveDownloader;

        r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader$1: androidx.media3.exoplayer.offline.ProgressiveDownloader this$0> = r1;

        specialinvoke r0.<androidx.media3.common.util.RunnableFutureTask: void <init>()>();

        return;
    }

    protected java.lang.Void doWork() throws java.io.IOException
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader$1 r0;
        androidx.media3.exoplayer.offline.ProgressiveDownloader $r1;
        androidx.media3.datasource.cache.CacheWriter $r2;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader$1;

        $r1 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader$1: androidx.media3.exoplayer.offline.ProgressiveDownloader this$0>;

        $r2 = staticinvoke <androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheWriter access$000(androidx.media3.exoplayer.offline.ProgressiveDownloader)>($r1);

        virtualinvoke $r2.<androidx.media3.datasource.cache.CacheWriter: void cache()>();

        return null;
    }

    protected void cancelWork()
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader$1 r0;
        androidx.media3.exoplayer.offline.ProgressiveDownloader $r1;
        androidx.media3.datasource.cache.CacheWriter $r2;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader$1;

        $r1 = r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader$1: androidx.media3.exoplayer.offline.ProgressiveDownloader this$0>;

        $r2 = staticinvoke <androidx.media3.exoplayer.offline.ProgressiveDownloader: androidx.media3.datasource.cache.CacheWriter access$000(androidx.media3.exoplayer.offline.ProgressiveDownloader)>($r1);

        virtualinvoke $r2.<androidx.media3.datasource.cache.CacheWriter: void cancel()>();

        return;
    }

    protected volatile java.lang.Object doWork() throws java.lang.Exception
    {
        androidx.media3.exoplayer.offline.ProgressiveDownloader$1 r0;
        java.lang.Void $r1;

        r0 := @this: androidx.media3.exoplayer.offline.ProgressiveDownloader$1;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.offline.ProgressiveDownloader$1: java.lang.Void doWork()>();

        return $r1;
    }

