androidx.media3.exoplayer.offline.DefaultDownloadIndex
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String TABLE_PREFIX>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int TABLE_VERSION>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_ID>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_MIME_TYPE>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_URI>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_STREAM_KEYS>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_CUSTOM_CACHE_KEY>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_DATA>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_STATE>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_START_TIME_MS>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_UPDATE_TIME_MS>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_CONTENT_LENGTH>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_STOP_REASON>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_FAILURE_REASON>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_PERCENT_DOWNLOADED>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_BYTES_DOWNLOADED>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String COLUMN_KEY_SET_ID>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_ID>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_MIME_TYPE>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_URI>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_STREAM_KEYS>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_CUSTOM_CACHE_KEY>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_DATA>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_STATE>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_START_TIME_MS>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_UPDATE_TIME_MS>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_CONTENT_LENGTH>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_STOP_REASON>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_FAILURE_REASON>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_PERCENT_DOWNLOADED>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_BYTES_DOWNLOADED>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: int COLUMN_INDEX_KEY_SET_ID>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String WHERE_ID_EQUALS>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String WHERE_STATE_IS_DOWNLOADING>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String WHERE_STATE_IS_TERMINAL>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String[] COLUMNS>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String TABLE_SCHEMA>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String TRUE>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String name>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.Object initializationLock>
<androidx.media3.exoplayer.offline.DefaultDownloadIndex: boolean initialized>
    public void <init>(androidx.media3.database.DatabaseProvider)
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        androidx.media3.database.DatabaseProvider r1;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: androidx.media3.database.DatabaseProvider;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void <init>(androidx.media3.database.DatabaseProvider,java.lang.String)>(r1, "");

        return;
    }

    public void <init>(androidx.media3.database.DatabaseProvider, java.lang.String)
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        androidx.media3.database.DatabaseProvider r1;
        java.lang.String r2, $r6;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.Object $r7;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: androidx.media3.database.DatabaseProvider;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String name> = r2;

        r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider> = r1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExoPlayerDownloads");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName> = $r6;

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.Object initializationLock> = $r7;

        return;
    }

    public androidx.media3.exoplayer.offline.Download getDownload(java.lang.String) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r4, $r6, $r7, r10, r11;
        java.lang.String[] $r3;
        int $i0;
        androidx.media3.database.DatabaseIOException $r5;
        android.database.Cursor r8;
        androidx.media3.exoplayer.offline.Download r9;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void ensureInitialized()>();

     label01:
        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r1;

        r8 = specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: android.database.Cursor getCursor(java.lang.String,java.lang.String[])>("id = ?", $r3);

     label02:
        $i0 = interfaceinvoke r8.<android.database.Cursor: int getCount()>();

        if $i0 != 0 goto label05;

     label03:
        if r8 == null goto label04;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label04:
        return null;

     label05:
        interfaceinvoke r8.<android.database.Cursor: boolean moveToNext()>();

        r9 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.exoplayer.offline.Download getDownloadForCurrentRow(android.database.Cursor)>(r8);

     label06:
        if r8 == null goto label07;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label07:
        return r9;

     label08:
        $r6 := @caughtexception;

        r10 = $r6;

        if r8 == null goto label12;

     label09:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

        r2 = $r7;

        virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r2);

     label12:
        throw r10;

     label13:
        $r4 := @caughtexception;

        r11 = $r4;

        $r5 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r5.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r11);

        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch android.database.sqlite.SQLiteException from label01 to label04 with label13;
        catch android.database.sqlite.SQLiteException from label05 to label07 with label13;
        catch android.database.sqlite.SQLiteException from label08 to label13 with label13;
    }

    public transient androidx.media3.exoplayer.offline.DownloadCursor getDownloads(int[]) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        int[] r1;
        android.database.Cursor r2;
        java.lang.String $r3;
        androidx.media3.exoplayer.offline.DefaultDownloadIndex$DownloadCursorImpl $r4;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: int[];

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void ensureInitialized()>();

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String getStateQuery(int[])>(r1);

        r2 = specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: android.database.Cursor getCursor(java.lang.String,java.lang.String[])>($r3, null);

        $r4 = new androidx.media3.exoplayer.offline.DefaultDownloadIndex$DownloadCursorImpl;

        specialinvoke $r4.<androidx.media3.exoplayer.offline.DefaultDownloadIndex$DownloadCursorImpl: void <init>(android.database.Cursor,androidx.media3.exoplayer.offline.DefaultDownloadIndex$1)>(r2, null);

        return $r4;
    }

    public void putDownload(androidx.media3.exoplayer.offline.Download) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        androidx.media3.exoplayer.offline.Download r1;
        androidx.media3.database.DatabaseProvider $r2;
        java.lang.Throwable $r3, r6;
        androidx.media3.database.DatabaseIOException $r4;
        android.database.sqlite.SQLiteDatabase r5;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Download;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void ensureInitialized()>();

     label1:
        $r2 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r5 = interfaceinvoke $r2.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void putDownloadInternal(androidx.media3.exoplayer.offline.Download,android.database.sqlite.SQLiteDatabase)>(r1, r5);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r6 = $r3;

        $r4 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r4.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r6);

        throw $r4;

     label4:
        return;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
    }

    public void removeDownload(java.lang.String) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        java.lang.String r1, $r6;
        java.lang.Throwable r2, $r7;
        androidx.media3.database.DatabaseProvider $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.String[] $r5;
        androidx.media3.database.DatabaseIOException $r8;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void ensureInitialized()>();

     label1:
        $r3 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        $r4 = interfaceinvoke $r3.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r6 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r6, "id = ?", $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r8.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r2);

        throw $r8;

     label4:
        return;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
    }

    public void setDownloadingStatesToQueued() throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.content.ContentValues $r2, r8;
        java.lang.Integer $r3;
        androidx.media3.database.DatabaseProvider $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6, r9;
        androidx.media3.database.DatabaseIOException $r7;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void ensureInitialized()>();

     label1:
        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r8 = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("state", $r3);

        $r4 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r1 = interfaceinvoke $r4.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r5 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r5, r8, "state = 2", null);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r9 = $r6;

        $r7 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r7.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r9);

        throw $r7;

     label4:
        return;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    public void setStatesToRemoving() throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.content.ContentValues $r2, r9;
        java.lang.Integer $r3, $r4;
        androidx.media3.database.DatabaseProvider $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7, r10;
        androidx.media3.database.DatabaseIOException $r8;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void ensureInitialized()>();

     label1:
        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r9 = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke r9.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("state", $r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r9.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("failure_reason", $r4);

        $r5 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r1 = interfaceinvoke $r5.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r6 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r6, r9, null, null);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r8.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r10);

        throw $r8;

     label4:
        return;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    public void setStopReason(int) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        int i0;
        android.database.sqlite.SQLiteDatabase r1;
        android.content.ContentValues $r2, r9;
        java.lang.Integer $r3;
        androidx.media3.database.DatabaseProvider $r4;
        java.lang.String $r5, $r6;
        java.lang.Throwable $r7, r10;
        androidx.media3.database.DatabaseIOException $r8;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void ensureInitialized()>();

     label1:
        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r9 = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r9.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("stop_reason", $r3);

        $r4 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r1 = interfaceinvoke $r4.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r6 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        $r5 = <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String WHERE_STATE_IS_TERMINAL>;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r6, r9, $r5, null);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r8.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r10);

        throw $r8;

     label4:
        return;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    public void setStopReason(java.lang.String, int) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        java.lang.String r1, $r7, $r8, $r12;
        int i0;
        android.database.sqlite.SQLiteDatabase r2;
        android.content.ContentValues $r3, r16;
        java.lang.Integer $r4;
        androidx.media3.database.DatabaseProvider $r5;
        java.lang.StringBuilder $r6, $r9, $r10, $r11;
        java.lang.String[] $r13;
        java.lang.Throwable $r14, r17;
        androidx.media3.database.DatabaseIOException $r15;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void ensureInitialized()>();

     label1:
        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        r16 = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r16.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("stop_reason", $r4);

        $r5 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r2 = interfaceinvoke $r5.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r7 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String WHERE_STATE_IS_TERMINAL>;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id = ?");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.String)[1];

        $r13[0] = r1;

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, r16, $r12, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        r17 = $r14;

        $r15 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r15.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r17);

        throw $r15;

     label4:
        return;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    private void ensureInitialized() throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        java.lang.Object r1, r3, $r8, $r25, $r31;
        int i0;
        android.database.sqlite.SQLiteDatabase r2, r30;
        java.util.Iterator r4;
        androidx.media3.exoplayer.offline.Download r5;
        java.lang.Throwable r6, r7, $r26, $r27, $r29, r32;
        boolean $z0, $z1;
        androidx.media3.database.DatabaseProvider $r9, $r11;
        java.lang.String $r10, $r12, $r15, $r17, $r20, $r24;
        java.lang.StringBuilder $r14, $r16, $r19, $r21, $r22, $r23, r34, r35;
        java.util.ArrayList r33;
        androidx.media3.database.DatabaseIOException r36;
        java.util.List r37;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        $r8 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.Object initializationLock>;

        r1 = $r8;

        entermonitor $r8;

     label01:
        $z0 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: boolean initialized>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r9 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r30 = interfaceinvoke $r9.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r10 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String name>;

        i0 = staticinvoke <androidx.media3.database.VersionTable: int getVersion(android.database.sqlite.SQLiteDatabase,int,java.lang.String)>(r30, 0, $r10);

        if i0 == 3 goto label12;

        $r11 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        r2 = interfaceinvoke $r11.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

     label04:
        $r12 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String name>;

        staticinvoke <androidx.media3.database.VersionTable: void setVersion(android.database.sqlite.SQLiteDatabase,int,java.lang.String,int)>(r2, 0, $r12, 3);

        if i0 != 2 goto label05;

        $r31 = specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.util.List loadDownloadsFromVersion2(android.database.sqlite.SQLiteDatabase)>(r2);

        goto label06;

     label05:
        r33 = new java.util.ArrayList;

        $r31 = r33;

        specialinvoke r33.<java.util.ArrayList: void <init>()>();

     label06:
        r3 = $r31;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DROP TABLE IF EXISTS ");

        $r15 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r17);

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE ");

        $r20 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(id TEXT PRIMARY KEY NOT NULL,mime_type TEXT,uri TEXT NOT NULL,stream_keys TEXT NOT NULL,custom_cache_key TEXT,data BLOB NOT NULL,state INTEGER NOT NULL,start_time_ms INTEGER NOT NULL,update_time_ms INTEGER NOT NULL,content_length INTEGER NOT NULL,stop_reason INTEGER NOT NULL,failure_reason INTEGER NOT NULL,percent_downloaded REAL NOT NULL,bytes_downloaded INTEGER NOT NULL,key_set_id BLOB NOT NULL)");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r24);

        r37 = (java.util.List) r3;

        r4 = interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r25 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.media3.exoplayer.offline.Download) $r25;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void putDownloadInternal(androidx.media3.exoplayer.offline.Download,android.database.sqlite.SQLiteDatabase)>(r5, r2);

        goto label07;

     label08:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label09:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label12;

     label10:
        $r29 := @caughtexception;

        r6 = $r29;

     label11:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r6;

     label12:
        r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: boolean initialized> = 1;

     label13:
        goto label15;

     label14:
        $r27 := @caughtexception;

        r32 = $r27;

        r36 = new androidx.media3.database.DatabaseIOException;

        specialinvoke r36.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r32);

        throw r36;

     label15:
        exitmonitor r1;

     label16:
        goto label19;

     label17:
        $r26 := @caughtexception;

        r7 = $r26;

        exitmonitor r1;

     label18:
        throw r7;

     label19:
        return;

        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.database.SQLException from label03 to label13 with label14;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void putDownloadInternal(androidx.media3.exoplayer.offline.Download, android.database.sqlite.SQLiteDatabase)
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        androidx.media3.exoplayer.offline.Download r1;
        android.database.sqlite.SQLiteDatabase r2;
        byte[] r3, $r6, $r22, $r32;
        android.content.ContentValues r4, $r8;
        androidx.media3.exoplayer.offline.DownloadRequest $r5, $r7, $r9, $r11, $r13, $r16, $r19, $r21;
        java.lang.String $r10, $r12, $r15, $r18, $r20, $r31;
        android.net.Uri $r14;
        java.util.List $r17;
        int $i0, $i4, $i5;
        java.lang.Integer $r23, $r27, $r28;
        long $l1, $l2, $l3, $l6;
        java.lang.Long $r24, $r25, $r26, $r30;
        float $f0;
        java.lang.Float $r29;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Download;

        r2 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $r5 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r6 = $r5.<androidx.media3.exoplayer.offline.DownloadRequest: byte[] keySetId>;

        if $r6 != null goto label1;

        $r32 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

        goto label2;

     label1:
        $r7 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r32 = $r7.<androidx.media3.exoplayer.offline.DownloadRequest: byte[] keySetId>;

     label2:
        r3 = $r32;

        $r8 = new android.content.ContentValues;

        specialinvoke $r8.<android.content.ContentValues: void <init>()>();

        r4 = $r8;

        $r9 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r10 = $r9.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("id", $r10);

        $r11 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r12 = $r11.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String mimeType>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mime_type", $r12);

        $r13 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r14 = $r13.<androidx.media3.exoplayer.offline.DownloadRequest: android.net.Uri uri>;

        $r15 = virtualinvoke $r14.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("uri", $r15);

        $r16 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r17 = $r16.<androidx.media3.exoplayer.offline.DownloadRequest: java.util.List streamKeys>;

        $r18 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String encodeStreamKeys(java.util.List)>($r17);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("stream_keys", $r18);

        $r19 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r20 = $r19.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String customCacheKey>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("custom_cache_key", $r20);

        $r21 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r22 = $r21.<androidx.media3.exoplayer.offline.DownloadRequest: byte[] data>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,byte[])>("data", $r22);

        $i0 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("state", $r23);

        $l1 = r1.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("start_time_ms", $r24);

        $l2 = r1.<androidx.media3.exoplayer.offline.Download: long updateTimeMs>;

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("update_time_ms", $r25);

        $l3 = r1.<androidx.media3.exoplayer.offline.Download: long contentLength>;

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("content_length", $r26);

        $i4 = r1.<androidx.media3.exoplayer.offline.Download: int stopReason>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("stop_reason", $r27);

        $i5 = r1.<androidx.media3.exoplayer.offline.Download: int failureReason>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("failure_reason", $r28);

        $f0 = virtualinvoke r1.<androidx.media3.exoplayer.offline.Download: float getPercentDownloaded()>();

        $r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>("percent_downloaded", $r29);

        $l6 = virtualinvoke r1.<androidx.media3.exoplayer.offline.Download: long getBytesDownloaded()>();

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("bytes_downloaded", $r30);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,byte[])>("key_set_id", r3);

        $r31 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>($r31, null, r4);

        return;
    }

    private java.util.List loadDownloadsFromVersion2(android.database.sqlite.SQLiteDatabase)
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.util.ArrayList r2, $r6, r13;
        java.lang.String[] r3, $r8;
        android.database.Cursor r4;
        java.lang.Throwable r5, $r11, $r12, r14;
        java.lang.String $r7, $r9;
        boolean $z0, $z1;
        androidx.media3.exoplayer.offline.Download $r10;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r7 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean tableExists(android.database.sqlite.SQLiteDatabase,java.lang.String)>(r1, $r7);

        if $z0 != 0 goto label01;

        return r2;

     label01:
        $r8 = newarray (java.lang.String)[14];

        $r8[0] = "id";

        $r8[1] = "title";

        $r8[2] = "uri";

        $r8[3] = "stream_keys";

        $r8[4] = "custom_cache_key";

        $r8[5] = "data";

        $r8[6] = "state";

        $r8[7] = "start_time_ms";

        $r8[8] = "update_time_ms";

        $r8[9] = "content_length";

        $r8[10] = "stop_reason";

        $r8[11] = "failure_reason";

        $r8[12] = "percent_downloaded";

        $r8[13] = "bytes_downloaded";

        r3 = $r8;

        $r9 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        r4 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r9, r3, null, null, null, null, null);

     label02:
        $z1 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label03;

        $r10 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.exoplayer.offline.Download getDownloadForCurrentRowV2(android.database.Cursor)>(r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label02;

     label03:
        r13 = r2;

     label04:
        if r4 == null goto label05;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label05:
        return r13;

     label06:
        $r12 := @caughtexception;

        r14 = $r12;

        if r4 == null goto label10;

     label07:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label08:
        goto label10;

     label09:
        $r11 := @caughtexception;

        r5 = $r11;

        virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5);

     label10:
        throw r14;

        catch java.lang.Throwable from label02 to label04 with label06;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    private static java.lang.String inferMimeType(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $r1 = "dash";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return "application/dash+xml";

     label1:
        $r2 = "hls";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return "application/x-mpegURL";

     label2:
        $r3 = "ss";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        return "application/vnd.ms-sstr+xml";

     label3:
        return "video/x-unknown";
    }

    private android.database.Cursor getCursor(java.lang.String, java.lang.String[]) throws androidx.media3.database.DatabaseIOException
    {
        androidx.media3.exoplayer.offline.DefaultDownloadIndex r0;
        java.lang.String r1, $r6, r10;
        java.lang.String[] r2, $r5;
        androidx.media3.database.DatabaseProvider $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        android.database.Cursor $r7;
        java.lang.Throwable $r8, r11;
        androidx.media3.database.DatabaseIOException $r9;

        r0 := @this: androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

     label1:
        r10 = "start_time_ms ASC";

        $r3 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.database.DatabaseProvider databaseProvider>;

        $r4 = interfaceinvoke $r3.<androidx.media3.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r6 = r0.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String tableName>;

        $r5 = <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String[] COLUMNS>;

        $r7 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r6, $r5, r1, r2, null, null, r10);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r11 = $r8;

        $r9 = new androidx.media3.database.DatabaseIOException;

        specialinvoke $r9.<androidx.media3.database.DatabaseIOException: void <init>(android.database.SQLException)>(r11);

        throw $r9;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
    }

    static java.lang.String encodeStreamKeys(java.util.List)
    {
        java.util.List r0;
        java.lang.StringBuilder r1, $r3, $r6, $r7, $r8, $r9, $r10;
        androidx.media3.common.StreamKey r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r4;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        i7 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i7 >= $i0 goto label2;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i7);

        r2 = (androidx.media3.common.StreamKey) $r5;

        $i4 = r2.<androidx.media3.common.StreamKey: int periodIndex>;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i5 = r2.<androidx.media3.common.StreamKey: int groupIndex>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i6 = r2.<androidx.media3.common.StreamKey: int streamIndex>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        i7 = i7 + 1;

        goto label1;

     label2:
        $i1 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label3;

        $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 1;

        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>($i3);

     label3:
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static transient java.lang.String getStateQuery(int[])
    {
        int[] r0;
        java.lang.StringBuilder r1, $r2, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.String $r6;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        return "1";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" IN (");

        i3 = 0;

     label2:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label4;

        if i3 <= 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label3:
        $i2 = r0[i3];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        i3 = i3 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static androidx.media3.exoplayer.offline.Download getDownloadForCurrentRow(android.database.Cursor)
    {
        android.database.Cursor r0;
        byte[] r1, $r20, $r24;
        androidx.media3.exoplayer.offline.DownloadRequest r2;
        androidx.media3.exoplayer.offline.DownloadProgress r3, $r22;
        int i0, i1, $i2, $i7, $i8;
        androidx.media3.exoplayer.offline.DownloadRequest$Builder $r4, $r13, $r16, $r17, $r19, $r21;
        java.lang.String $r5, $r7, $r8, $r10, $r12, $r14, $r18;
        java.lang.Object $r6, $r9;
        android.net.Uri $r11;
        java.util.List $r15;
        long $l3, $l4, $l5, $l6;
        float $f0;
        androidx.media3.exoplayer.offline.Download $r23;

        r0 := @parameter0: android.database.Cursor;

        r1 = interfaceinvoke r0.<android.database.Cursor: byte[] getBlob(int)>(14);

        $r4 = new androidx.media3.exoplayer.offline.DownloadRequest$Builder;

        $r5 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        $r10 = (java.lang.String) $r9;

        $r11 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r10);

        specialinvoke $r4.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: void <init>(java.lang.String,android.net.Uri)>($r7, $r11);

        $r12 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r13 = virtualinvoke $r4.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setMimeType(java.lang.String)>($r12);

        $r14 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(3);

        $r15 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.util.List decodeStreamKeys(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setStreamKeys(java.util.List)>($r15);

        $i2 = lengthof r1;

        if $i2 <= 0 goto label1;

        $r24 = r1;

        goto label2;

     label1:
        $r24 = null;

     label2:
        $r17 = virtualinvoke $r16.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setKeySetId(byte[])>($r24);

        $r18 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r19 = virtualinvoke $r17.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setCustomCacheKey(java.lang.String)>($r18);

        $r20 = interfaceinvoke r0.<android.database.Cursor: byte[] getBlob(int)>(5);

        $r21 = virtualinvoke $r19.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setData(byte[])>($r20);

        r2 = virtualinvoke $r21.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest build()>();

        $r22 = new androidx.media3.exoplayer.offline.DownloadProgress;

        specialinvoke $r22.<androidx.media3.exoplayer.offline.DownloadProgress: void <init>()>();

        r3 = $r22;

        $l3 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(13);

        r3.<androidx.media3.exoplayer.offline.DownloadProgress: long bytesDownloaded> = $l3;

        $f0 = interfaceinvoke r0.<android.database.Cursor: float getFloat(int)>(12);

        r3.<androidx.media3.exoplayer.offline.DownloadProgress: float percentDownloaded> = $f0;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(6);

        if i0 != 4 goto label3;

        $i8 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(11);

        goto label4;

     label3:
        $i8 = 0;

     label4:
        i1 = $i8;

        $r23 = new androidx.media3.exoplayer.offline.Download;

        $l4 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(7);

        $l5 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(8);

        $l6 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(9);

        $i7 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(10);

        specialinvoke $r23.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int,androidx.media3.exoplayer.offline.DownloadProgress)>(r2, i0, $l4, $l5, $l6, $i7, i1, r3);

        return $r23;
    }

    private static androidx.media3.exoplayer.offline.Download getDownloadForCurrentRowV2(android.database.Cursor)
    {
        android.database.Cursor r0;
        androidx.media3.exoplayer.offline.DownloadRequest r1;
        androidx.media3.exoplayer.offline.DownloadProgress r2, $r21;
        int i0, i1, $i6, $i7;
        androidx.media3.exoplayer.offline.DownloadRequest$Builder $r3, $r13, $r16, $r18, $r20;
        java.lang.String $r4, $r6, $r7, $r9, $r11, $r12, $r14, $r17;
        java.lang.Object $r5, $r8;
        android.net.Uri $r10;
        java.util.List $r15;
        byte[] $r19;
        long $l2, $l3, $l4, $l5;
        float $f0;
        androidx.media3.exoplayer.offline.Download $r22;

        r0 := @parameter0: android.database.Cursor;

        $r3 = new androidx.media3.exoplayer.offline.DownloadRequest$Builder;

        $r4 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r9);

        specialinvoke $r3.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: void <init>(java.lang.String,android.net.Uri)>($r6, $r10);

        $r11 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r12 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String inferMimeType(java.lang.String)>($r11);

        $r13 = virtualinvoke $r3.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setMimeType(java.lang.String)>($r12);

        $r14 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(3);

        $r15 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.util.List decodeStreamKeys(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setStreamKeys(java.util.List)>($r15);

        $r17 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r18 = virtualinvoke $r16.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setCustomCacheKey(java.lang.String)>($r17);

        $r19 = interfaceinvoke r0.<android.database.Cursor: byte[] getBlob(int)>(5);

        $r20 = virtualinvoke $r18.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setData(byte[])>($r19);

        r1 = virtualinvoke $r20.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest build()>();

        $r21 = new androidx.media3.exoplayer.offline.DownloadProgress;

        specialinvoke $r21.<androidx.media3.exoplayer.offline.DownloadProgress: void <init>()>();

        r2 = $r21;

        $l2 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(13);

        r2.<androidx.media3.exoplayer.offline.DownloadProgress: long bytesDownloaded> = $l2;

        $f0 = interfaceinvoke r0.<android.database.Cursor: float getFloat(int)>(12);

        r2.<androidx.media3.exoplayer.offline.DownloadProgress: float percentDownloaded> = $f0;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(6);

        if i0 != 4 goto label1;

        $i7 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(11);

        goto label2;

     label1:
        $i7 = 0;

     label2:
        i1 = $i7;

        $r22 = new androidx.media3.exoplayer.offline.Download;

        $l3 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(7);

        $l4 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(8);

        $l5 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(9);

        $i6 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(10);

        specialinvoke $r22.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int,androidx.media3.exoplayer.offline.DownloadProgress)>(r1, i0, $l3, $l4, $l5, $i6, i1, r2);

        return $r22;
    }

    private static java.util.List decodeStreamKeys(java.lang.String)
    {
        java.lang.String r0, r4, $r8, $r9, $r10;
        java.util.ArrayList r1, $r6;
        java.lang.String[] r2, r3, r5;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z2;
        androidx.media3.common.StreamKey $r7;

        r0 := @parameter0: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, ",");

        r3 = r2;

        i0 = lengthof r3;

        i5 = 0;

     label2:
        if i5 >= i0 goto label5;

        r4 = r3[i5];

        r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r4, "\\.");

        $i1 = lengthof r5;

        if $i1 != 3 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        $r7 = new androidx.media3.common.StreamKey;

        $r8 = r5[0];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r9 = r5[1];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = r5[2];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        specialinvoke $r7.<androidx.media3.common.StreamKey: void <init>(int,int,int)>($i2, $i3, $i4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i5 = i5 + 1;

        goto label2;

     label5:
        return r1;
    }

    static androidx.media3.exoplayer.offline.Download access$100(android.database.Cursor)
    {
        android.database.Cursor r0;
        androidx.media3.exoplayer.offline.Download $r1;

        r0 := @parameter0: android.database.Cursor;

        $r1 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: androidx.media3.exoplayer.offline.Download getDownloadForCurrentRow(android.database.Cursor)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        int[] $r0;
        java.lang.String $r1;
        java.lang.String[] $r2;

        $r0 = newarray (int)[2];

        $r0[0] = 3;

        $r0[1] = 4;

        $r1 = staticinvoke <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String getStateQuery(int[])>($r0);

        <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String WHERE_STATE_IS_TERMINAL> = $r1;

        $r2 = newarray (java.lang.String)[15];

        $r2[0] = "id";

        $r2[1] = "mime_type";

        $r2[2] = "uri";

        $r2[3] = "stream_keys";

        $r2[4] = "custom_cache_key";

        $r2[5] = "data";

        $r2[6] = "state";

        $r2[7] = "start_time_ms";

        $r2[8] = "update_time_ms";

        $r2[9] = "content_length";

        $r2[10] = "stop_reason";

        $r2[11] = "failure_reason";

        $r2[12] = "percent_downloaded";

        $r2[13] = "bytes_downloaded";

        $r2[14] = "key_set_id";

        <androidx.media3.exoplayer.offline.DefaultDownloadIndex: java.lang.String[] COLUMNS> = $r2;

        return;
    }

