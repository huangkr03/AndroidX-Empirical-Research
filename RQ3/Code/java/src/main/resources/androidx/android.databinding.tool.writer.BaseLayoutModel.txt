android.databinding.tool.writer.BaseLayoutModel
<android.databinding.tool.writer.BaseLayoutModel: java.util.Comparator COMPARE_FIELD_NAME>
<android.databinding.tool.writer.BaseLayoutModel: java.util.Map scopedNames>
<android.databinding.tool.writer.BaseLayoutModel: java.util.Map usedNames>
<android.databinding.tool.writer.BaseLayoutModel: java.util.List variables>
<android.databinding.tool.writer.BaseLayoutModel: java.util.List sortedTargets>
<android.databinding.tool.writer.BaseLayoutModel: java.lang.String bindingClassPackage>
<android.databinding.tool.writer.BaseLayoutModel: java.lang.String bindingClassName>
<android.databinding.tool.writer.BaseLayoutModel: java.lang.String modulePackage>
<android.databinding.tool.writer.BaseLayoutModel: java.lang.String baseFileName>
<android.databinding.tool.writer.BaseLayoutModel: java.util.Map importsByAlias>
<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>
    public final java.util.List getVariables()
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        $r1 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variables>;

        return $r1;
    }

    public final java.util.List getSortedTargets()
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        $r1 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List sortedTargets>;

        return $r1;
    }

    public final java.lang.String getBindingClassPackage()
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        $r1 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String bindingClassPackage>;

        return $r1;
    }

    public final java.lang.String getBindingClassName()
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        $r1 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String bindingClassName>;

        return $r1;
    }

    public final java.lang.String getModulePackage()
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        $r1 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String modulePackage>;

        return $r1;
    }

    public final java.lang.String getBaseFileName()
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        $r1 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String baseFileName>;

        return $r1;
    }

    public final java.util.Map getImportsByAlias()
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.util.Map $r1;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        $r1 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map importsByAlias>;

        return $r1;
    }

    public final boolean inEveryLayout(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r1, r9;
        java.lang.Iterable $r2, $r6;
        java.util.Iterator r3, r7;
        java.lang.Object r4, r8;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r5;
        java.util.List $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String $r12, $r13;
        java.util.Collection $r14, $r15;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "target");

        $r10 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>;

        $r2 = (java.lang.Iterable) $r10;

        $z0 = $r2 instanceof java.util.Collection;

        if $z0 == 0 goto label01;

        $r15 = (java.util.Collection) $r2;

        $z5 = interfaceinvoke $r15.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label01;

        $z6 = 1;

        goto label12;

     label01:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z7 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label11;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) r4;

        $r11 = virtualinvoke r5.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getBindingTargetBundles()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r11, "variation.bindingTargetBundles");

        $r6 = (java.lang.Iterable) $r11;

        $z1 = $r6 instanceof java.util.Collection;

        if $z1 == 0 goto label03;

        $r14 = (java.util.Collection) $r6;

        $z4 = interfaceinvoke $r14.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label03;

        $z8 = 0;

        goto label09;

     label03:
        r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label08;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) r8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r9, "otherTarget");

        $r12 = virtualinvoke r9.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        $r13 = virtualinvoke r1.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, $r13);

        if $z2 == 0 goto label05;

        $z3 = virtualinvoke r9.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean isUsed()>();

        if $z3 == 0 goto label05;

        $z10 = 1;

        goto label06;

     label05:
        $z10 = 0;

     label06:
        if $z10 == 0 goto label07;

        $z8 = 1;

        goto label09;

     label07:
        goto label04;

     label08:
        $z8 = 0;

     label09:
        if $z8 != 0 goto label10;

        $z6 = 0;

        goto label12;

     label10:
        goto label02;

     label11:
        $z6 = 1;

     label12:
        return $z6;
    }

    private final java.util.Map getScopeNames(android.databinding.tool.writer.BaseLayoutModel$JavaScope)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope r1;
        java.util.Map $r2, $r4, $r5;
        java.lang.Object r3;
        java.util.LinkedHashMap $r6;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.writer.BaseLayoutModel$JavaScope;

        $r2 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map scopedNames>;

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label1;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        $r4 = (java.util.Map) $r6;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;

     label1:
        $r5 = (java.util.Map) r3;

        return $r5;
    }

    private final java.util.Set getUsedNames(android.databinding.tool.writer.BaseLayoutModel$JavaScope)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope r1;
        java.util.Map $r2;
        java.lang.Object r3;
        java.util.Set $r4, $r5;
        java.util.LinkedHashSet $r6;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.writer.BaseLayoutModel$JavaScope;

        $r2 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map usedNames>;

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label1;

        $r6 = new java.util.LinkedHashSet;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>()>();

        $r4 = (java.util.Set) $r6;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;

     label1:
        $r5 = (java.util.Set) r3;

        return $r5;
    }

    public final java.lang.String fieldName(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r1;
        java.util.Map $r2;
        java.lang.Object r3;
        java.lang.String r4, r5, $r7, $r8, $r13, $r15;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope $r6, $r9;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "target");

        $r6 = <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope FIELD>;

        $r2 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map getScopeNames(android.databinding.tool.writer.BaseLayoutModel$JavaScope)>($r6);

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label3;

        $r8 = virtualinvoke r1.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        if $r8 != null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(109);

        $r13 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String readableName(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r15 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String readableName(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)>(r1);

     label2:
        r4 = $r15;

        $r9 = <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope FIELD>;

        r5 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String getUniqueName(android.databinding.tool.writer.BaseLayoutModel$JavaScope,java.lang.String)>($r9, r4);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        return r5;

     label3:
        $r7 = (java.lang.String) r3;

        return $r7;
    }

    public final java.lang.String fieldName(android.databinding.tool.store.ResourceBundle$VariableDeclaration)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.store.ResourceBundle$VariableDeclaration r1;
        java.util.Map $r2;
        java.lang.Object r3;
        java.lang.String r4, $r6, $r10, $r11, $r13;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope $r5, $r8;
        java.lang.StringBuilder $r7, $r9, $r12;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$VariableDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "variable");

        $r5 = <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope FIELD>;

        $r2 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map getScopeNames(android.databinding.tool.writer.BaseLayoutModel$JavaScope)>($r5);

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label1;

        $r8 = <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope FIELD>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(109);

        $r10 = r1.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String name>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r10, "variable.name");

        $r11 = staticinvoke <kotlin.text.StringsKt: java.lang.String capitalize(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String getUniqueName(android.databinding.tool.writer.BaseLayoutModel$JavaScope,java.lang.String)>($r8, $r13);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        return r4;

     label1:
        $r6 = (java.lang.String) r3;

        return $r6;
    }

    public final java.lang.String setterName(android.databinding.tool.store.ResourceBundle$VariableDeclaration)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.store.ResourceBundle$VariableDeclaration r1;
        java.util.Map $r2;
        java.lang.Object r3;
        java.lang.String $r4, $r6, $r9, $r10;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope $r5;
        java.lang.StringBuilder $r7, $r8, $r11;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$VariableDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "variable");

        $r5 = <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope SETTER>;

        $r2 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map getScopeNames(android.databinding.tool.writer.BaseLayoutModel$JavaScope)>($r5);

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set");

        $r9 = r1.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String name>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r9, "variable.name");

        $r10 = staticinvoke <kotlin.text.StringsKt: java.lang.String capitalize(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;

     label1:
        $r6 = (java.lang.String) r3;

        return $r6;
    }

    public final java.lang.String getterName(android.databinding.tool.store.ResourceBundle$VariableDeclaration)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.store.ResourceBundle$VariableDeclaration r1;
        java.util.Map $r2;
        java.lang.Object r3;
        java.lang.String $r4, $r6, $r9, $r10;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope $r5;
        java.lang.StringBuilder $r7, $r8, $r11;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$VariableDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "variable");

        $r5 = <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope GETTER>;

        $r2 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map getScopeNames(android.databinding.tool.writer.BaseLayoutModel$JavaScope)>($r5);

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get");

        $r9 = r1.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String name>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r9, "variable.name");

        $r10 = staticinvoke <kotlin.text.StringsKt: java.lang.String capitalize(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;

     label1:
        $r6 = (java.lang.String) r3;

        return $r6;
    }

    private final java.lang.String readableName(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r1;
        java.lang.String $r2, $r3, $r4, $r7, $r9;
        java.lang.StringBuilder $r5, $r6, $r8;
        int $i0;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r2 = virtualinvoke r1.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        if $r2 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("boundView");

        $r7 = virtualinvoke r1.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getTag()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r7, "target.tag");

        $i0 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: int indexFromTag(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r3, "target.id");

        $r4 = staticinvoke <android.databinding.tool.ext.ExtKt: java.lang.String androidId(java.lang.String)>($r3);

        $r9 = staticinvoke <android.databinding.tool.ext.ExtKt: java.lang.String stripNonJava(java.lang.String)>($r4);

     label2:
        return $r9;
    }

    private final int indexFromTag(java.lang.String)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.lang.String r1, r2, $r4, $r6;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.CharSequence $r3;
        kotlin.TypeCastException $r5;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r1, "binding_", 0, 2, null);

        if $z0 == 0 goto label1;

        $r6 = "binding_";

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        goto label2;

     label1:
        $r3 = (java.lang.CharSequence) r1;

        $i1 = staticinvoke <kotlin.text.StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r3, 95, 0, 0, 6, null);

        $i3 = $i1 + 1;

     label2:
        i0 = $i3;

        r2 = r1;

        if r2 != null goto label3;

        $r5 = new kotlin.TypeCastException;

        specialinvoke $r5.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r5;

     label3:
        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r4, "(this as java.lang.String).substring(startIndex)");

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        return $i2;
    }

    private final java.lang.String getUniqueName(android.databinding.tool.writer.BaseLayoutModel$JavaScope, java.lang.String)
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope r1;
        java.lang.String r2, r7;
        java.util.Set r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6;
        int i0;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: android.databinding.tool.writer.BaseLayoutModel$JavaScope;

        r2 := @parameter1: java.lang.String;

        r3 = specialinvoke r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Set getUsedNames(android.databinding.tool.writer.BaseLayoutModel$JavaScope)>(r1);

        r7 = r2;

        i0 = 0;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r7);

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r7);

        return r7;
    }

    public final java.util.Set generateImplInfo()
    {
        android.databinding.tool.writer.BaseLayoutModel r0;
        java.lang.Iterable $r1, $r11;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r5;
        android.databinding.tool.store.GenClassInfoLog$GenClassImpl r7;
        java.util.List $r8, $r10;
        java.util.ArrayList $r9;
        int $i0;
        boolean $z0;
        java.util.Set $r12;
        android.databinding.tool.store.GenClassInfoLog$GenClassImpl$Companion $r13;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        $r8 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>;

        $r1 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r9;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) r4;

        r6 = r2;

        $r13 = <android.databinding.tool.store.GenClassInfoLog$GenClassImpl: android.databinding.tool.store.GenClassInfoLog$GenClassImpl$Companion Companion>;

        r7 = virtualinvoke $r13.<android.databinding.tool.store.GenClassInfoLog$GenClassImpl$Companion: android.databinding.tool.store.GenClassInfoLog$GenClassImpl 'from'(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>(r5);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label1;

     label2:
        $r10 = (java.util.List) r2;

        $r11 = (java.lang.Iterable) $r10;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r11);

        return $r12;
    }

    public void <init>(java.util.List)
    {
        android.databinding.tool.writer.BaseLayoutModel r0, r53, r55, r57, r66;
        java.util.List r1, $r7, $r11, $r15, $r19, $r23, $r31, $r34, $r35, $r36, $r37, $r52, r64;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r2, $r9, $r13, $r17, $r21, r62;
        android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1 $r3;
        java.util.Comparator $r4, $r32;
        java.util.LinkedHashMap $r5, $r6, $r25;
        java.lang.Object $r8, $r12, $r16, $r20, $r49, $r50, r61, r70, r81, $r84, $r88;
        java.lang.String $r10, $r14, $r18, $r22, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r47, $r48, r90, r91;
        java.util.ArrayList $r24, $r26, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z8, $z9, $z10, $z14;
        int $i0, $i1, $i2;
        java.util.LinkedHashSet $r28, $r29, $r30;
        java.lang.Iterable $r33, $r58, r63, $r65, r67, r79, $r82, $r86;
        kotlin.Pair $r46;
        java.util.Map r54, r56, r68, r73;
        java.util.Collection r59;
        java.util.Iterator r60, r69, $r80, $r83, $r87;
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r71;
        java.util.Set r76, r77, r78;
        android.databinding.tool.store.ResourceBundle$VariableDeclaration r85;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r89;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "variations");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations> = r1;

        $r3 = new android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1;

        specialinvoke $r3.<android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1: void <init>(android.databinding.tool.writer.BaseLayoutModel)>(r0);

        $r4 = (java.util.Comparator) $r3;

        r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Comparator COMPARE_FIELD_NAME> = $r4;

        r53 = r0;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r54 = (java.util.Map) $r5;

        r53.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map scopedNames> = r54;

        r55 = r0;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r56 = (java.util.Map) $r6;

        r55.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map usedNames> = r56;

        $r7 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r8;

        $r10 = virtualinvoke $r9.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassPackage()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r10, "variations[0].bindingClassPackage");

        r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String bindingClassPackage> = $r10;

        $r11 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r12;

        $r14 = virtualinvoke $r13.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r14, "variations[0].bindingClassName");

        r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String bindingClassName> = $r14;

        $r15 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r16;

        $r18 = virtualinvoke $r17.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getModulePackage()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r18, "variations[0].modulePackage");

        r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String modulePackage> = $r18;

        $r19 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r20;

        $r22 = virtualinvoke $r21.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r22, "variations[0].fileName");

        r0.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String baseFileName> = $r22;

        $r23 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>;

        r57 = r0;

        $r58 = (java.lang.Iterable) $r23;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r59 = (java.util.Collection) $r24;

        r60 = interfaceinvoke $r58.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        r61 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>();

        r62 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) r61;

        $r52 = virtualinvoke r62.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getImports()>();

        r63 = (java.lang.Iterable) $r52;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r59, r63);

        goto label01;

     label02:
        r64 = (java.util.List) r59;

        $r65 = (java.lang.Iterable) r64;

        r66 = r57;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r65, 10);

        $i1 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i2 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i1, 16);

        r67 = $r65;

        $r25 = new java.util.LinkedHashMap;

        specialinvoke $r25.<java.util.LinkedHashMap: void <init>(int)>($i2);

        r68 = (java.util.Map) $r25;

        r69 = interfaceinvoke r67.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        r70 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        r71 = (android.databinding.tool.store.ResourceBundle$NameTypeLocation) r70;

        $r46 = new kotlin.Pair;

        $r48 = r71.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $r47 = r71.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        specialinvoke $r46.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r48, $r47);

        $r49 = virtualinvoke $r46.<kotlin.Pair: java.lang.Object getFirst()>();

        $r50 = virtualinvoke $r46.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r49, $r50);

        goto label03;

     label04:
        r73 = r68;

        r66.<android.databinding.tool.writer.BaseLayoutModel: java.util.Map importsByAlias> = r73;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        $r28 = new java.util.LinkedHashSet;

        specialinvoke $r28.<java.util.LinkedHashSet: void <init>()>();

        r76 = (java.util.Set) $r28;

        $r29 = new java.util.LinkedHashSet;

        specialinvoke $r29.<java.util.LinkedHashSet: void <init>()>();

        r77 = (java.util.Set) $r29;

        $r30 = new java.util.LinkedHashSet;

        specialinvoke $r30.<java.util.LinkedHashSet: void <init>()>();

        r78 = (java.util.Set) $r30;

        $r31 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variations>;

        r79 = (java.lang.Iterable) $r31;

        $r80 = interfaceinvoke r79.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r80.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label21;

        r81 = interfaceinvoke $r80.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) r81;

        $r36 = virtualinvoke $r2.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getVariables()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r36, "variation.variables");

        $r82 = (java.lang.Iterable) $r36;

        $r83 = interfaceinvoke $r82.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r83.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r84 = interfaceinvoke $r83.<java.util.Iterator: java.lang.Object next()>();

        r85 = (android.databinding.tool.store.ResourceBundle$VariableDeclaration) $r84;

        $r44 = r85.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String name>;

        $z10 = interfaceinvoke r78.<java.util.Set: boolean contains(java.lang.Object)>($r44);

        if $z10 != 0 goto label07;

        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r85);

        $r45 = r85.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String name>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r45, "variable.name");

        interfaceinvoke r78.<java.util.Set: boolean add(java.lang.Object)>($r45);

     label07:
        goto label06;

     label08:
        $r37 = virtualinvoke $r2.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getBindingTargetBundles()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r37, "variation.bindingTargetBundles");

        $r86 = (java.lang.Iterable) $r37;

        $r87 = interfaceinvoke $r86.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r87.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label20;

        $r88 = interfaceinvoke $r87.<java.util.Iterator: java.lang.Object next()>();

        r89 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) $r88;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r89, "target");

        $r38 = virtualinvoke r89.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        if $r38 == null goto label12;

        $r43 = virtualinvoke r89.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        $z9 = interfaceinvoke r77.<java.util.Set: boolean contains(java.lang.Object)>($r43);

        if $z9 != 0 goto label10;

        $z14 = 1;

        goto label11;

     label10:
        $z14 = 0;

     label11:
        goto label16;

     label12:
        $r39 = virtualinvoke r89.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getTag()>();

        if $r39 == null goto label15;

        $r42 = virtualinvoke r89.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getTag()>();

        $z8 = interfaceinvoke r76.<java.util.Set: boolean contains(java.lang.Object)>($r42);

        if $z8 != 0 goto label13;

        $z14 = 1;

        goto label14;

     label13:
        $z14 = 0;

     label14:
        goto label16;

     label15:
        $z14 = 0;

     label16:
        if $z14 == 0 goto label19;

        $r40 = virtualinvoke r89.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        if $r40 == null goto label17;

        r90 = $r40;

        interfaceinvoke r77.<java.util.Set: boolean add(java.lang.Object)>(r90);

        goto label17;

     label17:
        $r41 = virtualinvoke r89.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getTag()>();

        if $r41 == null goto label18;

        r91 = $r41;

        interfaceinvoke r76.<java.util.Set: boolean add(java.lang.Object)>(r91);

        goto label18;

     label18:
        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r89);

     label19:
        goto label09;

     label20:
        goto label05;

     label21:
        $r33 = (java.lang.Iterable) $r27;

        $r32 = r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.Comparator COMPARE_FIELD_NAME>;

        $r34 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r33, $r32);

        r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List sortedTargets> = $r34;

        $r35 = (java.util.List) $r26;

        r0.<android.databinding.tool.writer.BaseLayoutModel: java.util.List variables> = $r35;

        return;
    }

android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1
<android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1: android.databinding.tool.writer.BaseLayoutModel this$0>
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1 r0;
        java.lang.Object r1, r2;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle $r3, $r4;
        int $i0;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) r1;

        $r3 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) r2;

        $i0 = virtualinvoke r0.<android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1: int compare(android.databinding.tool.store.ResourceBundle$BindingTargetBundle,android.databinding.tool.store.ResourceBundle$BindingTargetBundle)>($r4, $r3);

        return $i0;
    }

    public final int compare(android.databinding.tool.store.ResourceBundle$BindingTargetBundle, android.databinding.tool.store.ResourceBundle$BindingTargetBundle)
    {
        android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1 r0;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r1, r2;
        java.lang.String r3, r4;
        android.databinding.tool.writer.BaseLayoutModel $r5, $r6;
        int $i0;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        r2 := @parameter1: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r5 = r0.<android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1: android.databinding.tool.writer.BaseLayoutModel this$0>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r1, "first");

        r3 = virtualinvoke $r5.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String fieldName(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)>(r1);

        $r6 = r0.<android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1: android.databinding.tool.writer.BaseLayoutModel this$0>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r2, "second");

        r4 = virtualinvoke $r6.<android.databinding.tool.writer.BaseLayoutModel: java.lang.String fieldName(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)>(r2);

        $i0 = virtualinvoke r3.<java.lang.String: int compareTo(java.lang.String)>(r4);

        return $i0;
    }

    void <init>(android.databinding.tool.writer.BaseLayoutModel)
    {
        android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1 r0;
        android.databinding.tool.writer.BaseLayoutModel r1;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1;

        r1 := @parameter0: android.databinding.tool.writer.BaseLayoutModel;

        r0.<android.databinding.tool.writer.BaseLayoutModel$COMPARE_FIELD_NAME$1: android.databinding.tool.writer.BaseLayoutModel this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.databinding.tool.writer.BaseLayoutModel$JavaScope
<android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope FIELD>
<android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope GETTER>
<android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope SETTER>
<android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope[] $VALUES>
    static void <clinit>()
    {
        android.databinding.tool.writer.BaseLayoutModel$JavaScope[] $r0;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope $r1, $r2, $r3;

        $r0 = newarray (android.databinding.tool.writer.BaseLayoutModel$JavaScope)[3];

        $r1 = new android.databinding.tool.writer.BaseLayoutModel$JavaScope;

        specialinvoke $r1.<android.databinding.tool.writer.BaseLayoutModel$JavaScope: void <init>(java.lang.String,int)>("FIELD", 0);

        <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope FIELD> = $r1;

        $r0[0] = $r1;

        $r2 = new android.databinding.tool.writer.BaseLayoutModel$JavaScope;

        specialinvoke $r2.<android.databinding.tool.writer.BaseLayoutModel$JavaScope: void <init>(java.lang.String,int)>("GETTER", 1);

        <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope GETTER> = $r2;

        $r0[1] = $r2;

        $r3 = new android.databinding.tool.writer.BaseLayoutModel$JavaScope;

        specialinvoke $r3.<android.databinding.tool.writer.BaseLayoutModel$JavaScope: void <init>(java.lang.String,int)>("SETTER", 2);

        <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope SETTER> = $r3;

        $r0[2] = $r3;

        <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope[] $VALUES> = $r0;

        return;
    }

    protected void <init>(java.lang.String, int)
    {
        android.databinding.tool.writer.BaseLayoutModel$JavaScope r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.databinding.tool.writer.BaseLayoutModel$JavaScope;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static android.databinding.tool.writer.BaseLayoutModel$JavaScope[] values()
    {
        android.databinding.tool.writer.BaseLayoutModel$JavaScope[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.databinding.tool.writer.BaseLayoutModel$JavaScope: android.databinding.tool.writer.BaseLayoutModel$JavaScope[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.databinding.tool.writer.BaseLayoutModel$JavaScope[]) $r1;

        return $r2;
    }

    public static android.databinding.tool.writer.BaseLayoutModel$JavaScope valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.databinding.tool.writer.BaseLayoutModel$JavaScope $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/databinding/tool/writer/BaseLayoutModel$JavaScope;", r0);

        $r2 = (android.databinding.tool.writer.BaseLayoutModel$JavaScope) $r1;

        return $r2;
    }

