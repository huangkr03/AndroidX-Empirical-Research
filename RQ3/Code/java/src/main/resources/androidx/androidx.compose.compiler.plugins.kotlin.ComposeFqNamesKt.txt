androidx.compose.compiler.plugins.kotlin.ComposeFqNamesKt
    public static final org.jetbrains.kotlin.types.KotlinType makeComposable(org.jetbrains.kotlin.types.KotlinType, org.jetbrains.kotlin.descriptors.ModuleDescriptor)
    {
        org.jetbrains.kotlin.types.KotlinType $r0, $r9;
        org.jetbrains.kotlin.descriptors.ModuleDescriptor r1;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor r2;
        boolean $z0;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r3;
        org.jetbrains.kotlin.descriptors.annotations.Annotations$Companion $r4;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r5, $r8;
        java.lang.Iterable $r6;
        java.util.List $r7;

        $r0 := @parameter0: org.jetbrains.kotlin.types.KotlinType;

        r1 := @parameter1: org.jetbrains.kotlin.descriptors.ModuleDescriptor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$makeComposable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "module");

        $z0 = staticinvoke <androidx.compose.compiler.plugins.kotlin.ComposeFqNamesKt: boolean hasComposableAnnotation(org.jetbrains.kotlin.types.KotlinType)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r3 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        r2 = virtualinvoke $r3.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor makeComposableAnnotation(org.jetbrains.kotlin.descriptors.ModuleDescriptor)>(r1);

        $r4 = <org.jetbrains.kotlin.descriptors.annotations.Annotations: org.jetbrains.kotlin.descriptors.annotations.Annotations$Companion Companion>;

        $r5 = virtualinvoke $r0.<org.jetbrains.kotlin.types.KotlinType: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r6 = (java.lang.Iterable) $r5;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Object)>($r6, r2);

        $r8 = virtualinvoke $r4.<org.jetbrains.kotlin.descriptors.annotations.Annotations$Companion: org.jetbrains.kotlin.descriptors.annotations.Annotations create(java.util.List)>($r7);

        $r9 = staticinvoke <org.jetbrains.kotlin.types.typeUtil.TypeUtilsKt: org.jetbrains.kotlin.types.KotlinType replaceAnnotations(org.jetbrains.kotlin.types.KotlinType,org.jetbrains.kotlin.descriptors.annotations.Annotations)>($r0, $r8);

        return $r9;
    }

    public static final boolean hasComposableAnnotation(org.jetbrains.kotlin.types.KotlinType)
    {
        org.jetbrains.kotlin.types.KotlinType $r0;
        boolean $z0, $z1;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r1;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r2;
        org.jetbrains.kotlin.name.FqName $r3;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor $r4;

        $r0 := @parameter0: org.jetbrains.kotlin.types.KotlinType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$hasComposableAnnotation");

        $z0 = staticinvoke <androidx.compose.compiler.plugins.kotlin.ComposeFqNamesKt: boolean isSpecialType(org.jetbrains.kotlin.types.KotlinType)>($r0);

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke $r0.<org.jetbrains.kotlin.types.KotlinType: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r2 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposable()>();

        $r4 = interfaceinvoke $r1.<org.jetbrains.kotlin.descriptors.annotations.Annotations: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor findAnnotation(org.jetbrains.kotlin.name.FqName)>($r3);

        if $r4 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static final boolean isMarkedStable(org.jetbrains.kotlin.types.KotlinType)
    {
        org.jetbrains.kotlin.types.KotlinType $r0;
        boolean $z0, $z1, $z2, $z3;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r1, $r4;
        org.jetbrains.kotlin.types.TypeConstructor $r2;
        org.jetbrains.kotlin.descriptors.ClassifierDescriptor $r3;

        $r0 := @parameter0: org.jetbrains.kotlin.types.KotlinType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$isMarkedStable");

        $z0 = staticinvoke <androidx.compose.compiler.plugins.kotlin.ComposeFqNamesKt: boolean isSpecialType(org.jetbrains.kotlin.types.KotlinType)>($r0);

        if $z0 != 0 goto label4;

        $r1 = virtualinvoke $r0.<org.jetbrains.kotlin.types.KotlinType: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $z1 = staticinvoke <androidx.compose.compiler.plugins.kotlin.ComposeFqNamesKt: boolean hasStableMarker(org.jetbrains.kotlin.descriptors.annotations.Annotations)>($r1);

        if $z1 != 0 goto label3;

        $r2 = virtualinvoke $r0.<org.jetbrains.kotlin.types.KotlinType: org.jetbrains.kotlin.types.TypeConstructor getConstructor()>();

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.types.TypeConstructor: org.jetbrains.kotlin.descriptors.ClassifierDescriptor getDeclarationDescriptor()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<org.jetbrains.kotlin.descriptors.ClassifierDescriptor: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        if $r4 == null goto label1;

        $z2 = staticinvoke <androidx.compose.compiler.plugins.kotlin.ComposeFqNamesKt: boolean hasStableMarker(org.jetbrains.kotlin.descriptors.annotations.Annotations)>($r4);

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 == 0 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public static final boolean hasComposableAnnotation(org.jetbrains.kotlin.descriptors.annotations.Annotated)
    {
        org.jetbrains.kotlin.descriptors.annotations.Annotated $r0;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r1;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r2;
        org.jetbrains.kotlin.name.FqName $r3;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor $r4;
        boolean $z0;

        $r0 := @parameter0: org.jetbrains.kotlin.descriptors.annotations.Annotated;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$hasComposableAnnotation");

        $r1 = interfaceinvoke $r0.<org.jetbrains.kotlin.descriptors.annotations.Annotated: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r2 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposable()>();

        $r4 = interfaceinvoke $r1.<org.jetbrains.kotlin.descriptors.annotations.Annotations: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor findAnnotation(org.jetbrains.kotlin.name.FqName)>($r3);

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final java.lang.Boolean composableRestartableContract(org.jetbrains.kotlin.descriptors.annotations.Annotated)
    {
        org.jetbrains.kotlin.descriptors.annotations.Annotated $r0;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor r1, $r5;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r2;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r3;
        org.jetbrains.kotlin.name.FqName $r4;
        org.jetbrains.kotlin.resolve.constants.ConstantValue $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        java.lang.Object $r8;

        $r0 := @parameter0: org.jetbrains.kotlin.descriptors.annotations.Annotated;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$composableRestartableContract");

        $r2 = interfaceinvoke $r0.<org.jetbrains.kotlin.descriptors.annotations.Annotated: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r3 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposableContract()>();

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.descriptors.annotations.Annotations: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor findAnnotation(org.jetbrains.kotlin.name.FqName)>($r4);

        if $r5 == null goto label1;

        goto label2;

     label1:
        return null;

     label2:
        r1 = $r5;

        $r6 = staticinvoke <org.jetbrains.kotlin.resolve.annotations.AnnotationUtilKt: org.jetbrains.kotlin.resolve.constants.ConstantValue argumentValue(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor,java.lang.String)>(r1, "restartable");

        if $r6 == null goto label3;

        $r8 = virtualinvoke $r6.<org.jetbrains.kotlin.resolve.constants.ConstantValue: java.lang.Object getValue()>();

        goto label4;

     label3:
        $r8 = null;

     label4:
        $z0 = $r8 instanceof java.lang.Boolean;

        if $z0 != 0 goto label5;

        $r8 = null;

     label5:
        $r7 = (java.lang.Boolean) $r8;

        return $r7;
    }

    public static final java.lang.Boolean composableReadonlyContract(org.jetbrains.kotlin.descriptors.annotations.Annotated)
    {
        org.jetbrains.kotlin.descriptors.annotations.Annotated $r0;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor r1, $r5;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r2;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r3;
        org.jetbrains.kotlin.name.FqName $r4;
        org.jetbrains.kotlin.resolve.constants.ConstantValue $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        java.lang.Object $r8;

        $r0 := @parameter0: org.jetbrains.kotlin.descriptors.annotations.Annotated;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$composableReadonlyContract");

        $r2 = interfaceinvoke $r0.<org.jetbrains.kotlin.descriptors.annotations.Annotated: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r3 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposableContract()>();

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.descriptors.annotations.Annotations: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor findAnnotation(org.jetbrains.kotlin.name.FqName)>($r4);

        if $r5 == null goto label1;

        goto label2;

     label1:
        return null;

     label2:
        r1 = $r5;

        $r6 = staticinvoke <org.jetbrains.kotlin.resolve.annotations.AnnotationUtilKt: org.jetbrains.kotlin.resolve.constants.ConstantValue argumentValue(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor,java.lang.String)>(r1, "readonly");

        if $r6 == null goto label3;

        $r8 = virtualinvoke $r6.<org.jetbrains.kotlin.resolve.constants.ConstantValue: java.lang.Object getValue()>();

        goto label4;

     label3:
        $r8 = null;

     label4:
        $z0 = $r8 instanceof java.lang.Boolean;

        if $z0 != 0 goto label5;

        $r8 = null;

     label5:
        $r7 = (java.lang.Boolean) $r8;

        return $r7;
    }

    public static final java.lang.Boolean composableTrackedContract(org.jetbrains.kotlin.descriptors.annotations.Annotated)
    {
        org.jetbrains.kotlin.descriptors.annotations.Annotated $r0;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor r1, $r5;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r2;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r3;
        org.jetbrains.kotlin.name.FqName $r4;
        org.jetbrains.kotlin.resolve.constants.ConstantValue $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        java.lang.Object $r8;

        $r0 := @parameter0: org.jetbrains.kotlin.descriptors.annotations.Annotated;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$composableTrackedContract");

        $r2 = interfaceinvoke $r0.<org.jetbrains.kotlin.descriptors.annotations.Annotated: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r3 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposableContract()>();

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.descriptors.annotations.Annotations: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor findAnnotation(org.jetbrains.kotlin.name.FqName)>($r4);

        if $r5 == null goto label1;

        goto label2;

     label1:
        return null;

     label2:
        r1 = $r5;

        $r6 = staticinvoke <org.jetbrains.kotlin.resolve.annotations.AnnotationUtilKt: org.jetbrains.kotlin.resolve.constants.ConstantValue argumentValue(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor,java.lang.String)>(r1, "tracked");

        if $r6 == null goto label3;

        $r8 = virtualinvoke $r6.<org.jetbrains.kotlin.resolve.constants.ConstantValue: java.lang.Object getValue()>();

        goto label4;

     label3:
        $r8 = null;

     label4:
        $z0 = $r8 instanceof java.lang.Boolean;

        if $z0 != 0 goto label5;

        $r8 = null;

     label5:
        $r7 = (java.lang.Boolean) $r8;

        return $r7;
    }

    public static final java.lang.Boolean composablePreventCaptureContract(org.jetbrains.kotlin.descriptors.annotations.Annotated)
    {
        org.jetbrains.kotlin.descriptors.annotations.Annotated $r0;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor r1, $r5;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r2;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r3;
        org.jetbrains.kotlin.name.FqName $r4;
        org.jetbrains.kotlin.resolve.constants.ConstantValue $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        java.lang.Object $r8;

        $r0 := @parameter0: org.jetbrains.kotlin.descriptors.annotations.Annotated;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$composablePreventCaptureContract");

        $r2 = interfaceinvoke $r0.<org.jetbrains.kotlin.descriptors.annotations.Annotated: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r3 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposableContract()>();

        $r5 = interfaceinvoke $r2.<org.jetbrains.kotlin.descriptors.annotations.Annotations: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor findAnnotation(org.jetbrains.kotlin.name.FqName)>($r4);

        if $r5 == null goto label1;

        goto label2;

     label1:
        return null;

     label2:
        r1 = $r5;

        $r6 = staticinvoke <org.jetbrains.kotlin.resolve.annotations.AnnotationUtilKt: org.jetbrains.kotlin.resolve.constants.ConstantValue argumentValue(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor,java.lang.String)>(r1, "preventCapture");

        if $r6 == null goto label3;

        $r8 = virtualinvoke $r6.<org.jetbrains.kotlin.resolve.constants.ConstantValue: java.lang.Object getValue()>();

        goto label4;

     label3:
        $r8 = null;

     label4:
        $z0 = $r8 instanceof java.lang.Boolean;

        if $z0 != 0 goto label5;

        $r8 = null;

     label5:
        $r7 = (java.lang.Boolean) $r8;

        return $r7;
    }

    public static final boolean isSpecialType(org.jetbrains.kotlin.types.KotlinType)
    {
        org.jetbrains.kotlin.types.KotlinType $r0;
        org.jetbrains.kotlin.types.SimpleType $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: org.jetbrains.kotlin.types.KotlinType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$isSpecialType");

        $r1 = <org.jetbrains.kotlin.types.TypeUtils: org.jetbrains.kotlin.types.SimpleType NO_EXPECTED_TYPE>;

        if $r0 == $r1 goto label1;

        $r2 = <org.jetbrains.kotlin.types.TypeUtils: org.jetbrains.kotlin.types.SimpleType UNIT_EXPECTED_TYPE>;

        if $r0 != $r2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static final boolean isComposableAnnotation(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor)
    {
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor $r0;
        org.jetbrains.kotlin.name.FqName $r1, $r3;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r2;
        boolean $z0;

        $r0 := @parameter0: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$isComposableAnnotation");

        $r1 = interfaceinvoke $r0.<org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor: org.jetbrains.kotlin.name.FqName getFqName()>();

        $r2 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposable()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $z0;
    }

    public static final boolean hasStableMarker(org.jetbrains.kotlin.descriptors.annotations.Annotations)
    {
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor r4;
        boolean $z2, $z3, $z4, $z5, $z6;
        java.util.Collection $r5;

        $r0 := @parameter0: org.jetbrains.kotlin.descriptors.annotations.Annotations;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$hasStableMarker");

        $r1 = (java.lang.Iterable) $r0;

        $z2 = $r1 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r5 = (java.util.Collection) $r1;

        $z4 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $z5 = 0;

        goto label4;

     label1:
        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor) r3;

        $z3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.ComposeFqNamesKt: boolean isStableMarker(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor)>(r4);

        if $z3 == 0 goto label2;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    public static final boolean isStableMarker(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor)
    {
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor $r0;
        org.jetbrains.kotlin.descriptors.ClassDescriptor r1, $r2;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r3;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r4;
        org.jetbrains.kotlin.name.FqName $r5;
        boolean $z0;

        $r0 := @parameter0: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$isStableMarker");

        $r2 = staticinvoke <org.jetbrains.kotlin.resolve.descriptorUtil.DescriptorUtilsKt: org.jetbrains.kotlin.descriptors.ClassDescriptor getAnnotationClass(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor)>($r0);

        if $r2 == null goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        r1 = $r2;

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.descriptors.ClassDescriptor: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r4 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getStableMarker()>();

        $z0 = interfaceinvoke $r3.<org.jetbrains.kotlin.descriptors.annotations.Annotations: boolean hasAnnotation(org.jetbrains.kotlin.name.FqName)>($r5);

        return $z0;
    }

