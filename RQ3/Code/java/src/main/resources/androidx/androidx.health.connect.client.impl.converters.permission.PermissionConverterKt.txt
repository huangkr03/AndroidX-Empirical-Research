androidx.health.connect.client.impl.converters.permission.PermissionConverterKt
    private static final androidx.health.platform.client.proto.PermissionProto$AccessType toAccessTypeProto(int)
    {
        int i0;
        androidx.health.platform.client.proto.PermissionProto$AccessType $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        $r0 = <androidx.health.platform.client.proto.PermissionProto$AccessType: androidx.health.platform.client.proto.PermissionProto$AccessType ACCESS_TYPE_WRITE>;

        goto label4;

     label2:
        $r0 = <androidx.health.platform.client.proto.PermissionProto$AccessType: androidx.health.platform.client.proto.PermissionProto$AccessType ACCESS_TYPE_READ>;

        goto label4;

     label3:
        $r0 = <androidx.health.platform.client.proto.PermissionProto$AccessType: androidx.health.platform.client.proto.PermissionProto$AccessType ACCESS_TYPE_UNKNOWN>;

     label4:
        return $r0;
    }

    private static final int toAccessType(androidx.health.platform.client.proto.PermissionProto$AccessType)
    {
        androidx.health.platform.client.proto.PermissionProto$AccessType $r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.IllegalStateException $r2;
        byte $b2;

        $r0 := @parameter0: androidx.health.platform.client.proto.PermissionProto$AccessType;

        $r1 = <androidx.health.connect.client.impl.converters.permission.PermissionConverterKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r0.<androidx.health.platform.client.proto.PermissionProto$AccessType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $b2 = 2;

        goto label4;

     label2:
        $b2 = 1;

        goto label4;

     label3:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown access type");

        throw $r2;

     label4:
        return $b2;
    }

    public static final androidx.health.platform.client.proto.PermissionProto$Permission toProtoPermission(androidx.health.connect.client.permission.Permission)
    {
        androidx.health.connect.client.permission.Permission $r0;
        androidx.health.platform.client.proto.DataProto$DataType r1;
        androidx.health.platform.client.proto.DataProto$DataType$Builder $r2, $r5;
        kotlin.reflect.KClass $r3;
        java.lang.String $r4;
        androidx.health.platform.client.proto.GeneratedMessageLite $r6, $r11;
        androidx.health.platform.client.proto.PermissionProto$Permission$Builder $r7, $r8, $r10;
        int $i0;
        androidx.health.platform.client.proto.PermissionProto$AccessType $r9;
        androidx.health.platform.client.proto.PermissionProto$Permission $r12;

        $r0 := @parameter0: androidx.health.connect.client.permission.Permission;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = staticinvoke <androidx.health.platform.client.proto.DataProto$DataType: androidx.health.platform.client.proto.DataProto$DataType$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<androidx.health.connect.client.permission.Permission: kotlin.reflect.KClass getRecordType$health_connect_client_release()>();

        $r4 = staticinvoke <androidx.health.connect.client.impl.converters.datatype.DataTypeConverterKt: java.lang.String toDataTypeName(kotlin.reflect.KClass)>($r3);

        $r5 = virtualinvoke $r2.<androidx.health.platform.client.proto.DataProto$DataType$Builder: androidx.health.platform.client.proto.DataProto$DataType$Builder setName(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<androidx.health.platform.client.proto.DataProto$DataType$Builder: androidx.health.platform.client.proto.GeneratedMessageLite build()>();

        r1 = (androidx.health.platform.client.proto.DataProto$DataType) $r6;

        $r7 = staticinvoke <androidx.health.platform.client.proto.PermissionProto$Permission: androidx.health.platform.client.proto.PermissionProto$Permission$Builder newBuilder()>();

        $r8 = virtualinvoke $r7.<androidx.health.platform.client.proto.PermissionProto$Permission$Builder: androidx.health.platform.client.proto.PermissionProto$Permission$Builder setDataType(androidx.health.platform.client.proto.DataProto$DataType)>(r1);

        $i0 = virtualinvoke $r0.<androidx.health.connect.client.permission.Permission: int getAccessType$health_connect_client_release()>();

        $r9 = staticinvoke <androidx.health.connect.client.impl.converters.permission.PermissionConverterKt: androidx.health.platform.client.proto.PermissionProto$AccessType toAccessTypeProto(int)>($i0);

        $r10 = virtualinvoke $r8.<androidx.health.platform.client.proto.PermissionProto$Permission$Builder: androidx.health.platform.client.proto.PermissionProto$Permission$Builder setAccessType(androidx.health.platform.client.proto.PermissionProto$AccessType)>($r9);

        $r11 = virtualinvoke $r10.<androidx.health.platform.client.proto.PermissionProto$Permission$Builder: androidx.health.platform.client.proto.GeneratedMessageLite build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "newBuilder()\n        .se\u2026ssType))\n        .build()");

        $r12 = (androidx.health.platform.client.proto.PermissionProto$Permission) $r11;

        return $r12;
    }

    public static final androidx.health.connect.client.permission.Permission toJetpackPermission(androidx.health.platform.client.proto.PermissionProto$Permission)
    {
        androidx.health.platform.client.proto.PermissionProto$Permission $r0;
        kotlin.reflect.KClass r1;
        androidx.health.platform.client.proto.DataProto$DataType $r2;
        java.lang.String $r3;
        androidx.health.connect.client.permission.Permission $r4;
        androidx.health.platform.client.proto.PermissionProto$AccessType $r5;
        int $i0;

        $r0 := @parameter0: androidx.health.platform.client.proto.PermissionProto$Permission;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = virtualinvoke $r0.<androidx.health.platform.client.proto.PermissionProto$Permission: androidx.health.platform.client.proto.DataProto$DataType getDataType()>();

        $r3 = virtualinvoke $r2.<androidx.health.platform.client.proto.DataProto$DataType: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "dataType.name");

        r1 = staticinvoke <androidx.health.connect.client.impl.converters.datatype.DataTypeConverterKt: kotlin.reflect.KClass toDataTypeKClass(java.lang.String)>($r3);

        $r4 = new androidx.health.connect.client.permission.Permission;

        $r5 = virtualinvoke $r0.<androidx.health.platform.client.proto.PermissionProto$Permission: androidx.health.platform.client.proto.PermissionProto$AccessType getAccessType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "accessType");

        $i0 = staticinvoke <androidx.health.connect.client.impl.converters.permission.PermissionConverterKt: int toAccessType(androidx.health.platform.client.proto.PermissionProto$AccessType)>($r5);

        specialinvoke $r4.<androidx.health.connect.client.permission.Permission: void <init>(kotlin.reflect.KClass,int)>(r1, $i0);

        return $r4;
    }

