androidx.lifecycle.FlowLiveDataConversions
    public static final androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext, long)
    {
        kotlinx.coroutines.flow.Flow $r0, r4;
        kotlin.coroutines.CoroutineContext r1;
        long l0;
        androidx.lifecycle.LiveData r2, r3;
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1 $r5;
        kotlin.jvm.functions.Function2 $r6;
        boolean $z1, $z2;
        androidx.arch.core.executor.ArchTaskExecutor $r7;
        kotlinx.coroutines.flow.StateFlow $r8, $r10;
        java.lang.Object $r9, $r11;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r5 = new androidx.lifecycle.FlowLiveDataConversions$asLiveData$1;

        specialinvoke $r5.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r0, null);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        r2 = staticinvoke <androidx.lifecycle.CoroutineLiveDataKt: androidx.lifecycle.LiveData liveData(kotlin.coroutines.CoroutineContext,long,kotlin.jvm.functions.Function2)>(r1, l0, $r6);

        r3 = r2;

        r4 = $r0;

        $z1 = r4 instanceof kotlinx.coroutines.flow.StateFlow;

        if $z1 == 0 goto label2;

        $r7 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()>();

        $z2 = virtualinvoke $r7.<androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()>();

        if $z2 == 0 goto label1;

        $r10 = (kotlinx.coroutines.flow.StateFlow) r4;

        $r11 = interfaceinvoke $r10.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        virtualinvoke r3.<androidx.lifecycle.LiveData: void setValue(java.lang.Object)>($r11);

        goto label2;

     label1:
        $r8 = (kotlinx.coroutines.flow.StateFlow) r4;

        $r9 = interfaceinvoke $r8.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        virtualinvoke r3.<androidx.lifecycle.LiveData: void postValue(java.lang.Object)>($r9);

     label2:
        return r2;
    }

    public static androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext, long, int, java.lang.Object)
    {
        kotlinx.coroutines.flow.Flow r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        androidx.lifecycle.LiveData $r2;
        kotlin.coroutines.EmptyCoroutineContext $r3;
        kotlin.coroutines.CoroutineContext r4;
        long l3;

        r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r4 := @parameter1: kotlin.coroutines.CoroutineContext;

        l3 := @parameter2: long;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r3 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        r4 = (kotlin.coroutines.CoroutineContext) $r3;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        l3 = 5000L;

     label2:
        $r2 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long)>(r0, r4, l3);

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(androidx.lifecycle.LiveData)
    {
        androidx.lifecycle.LiveData $r0;
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        kotlinx.coroutines.flow.Flow $r3, $r4;

        $r0 := @parameter0: androidx.lifecycle.LiveData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.lifecycle.FlowLiveDataConversions$asFlow$1;

        specialinvoke $r1.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: void <init>(androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)>($r0, null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2)>($r2);

        $r4 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)>($r3);

        return $r4;
    }

    public static final androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext, java.time.Duration)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.CoroutineContext r1;
        java.time.Duration r2;
        androidx.lifecycle.Api26Impl $r3;
        long $l0;
        androidx.lifecycle.LiveData $r4;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        r2 := @parameter2: java.time.Duration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "timeout");

        $r3 = <androidx.lifecycle.Api26Impl: androidx.lifecycle.Api26Impl INSTANCE>;

        $l0 = virtualinvoke $r3.<androidx.lifecycle.Api26Impl: long toMillis(java.time.Duration)>(r2);

        $r4 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long)>($r0, r1, $l0);

        return $r4;
    }

    public static androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext, java.time.Duration, int, java.lang.Object)
    {
        kotlinx.coroutines.flow.Flow r0;
        java.time.Duration r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.lifecycle.LiveData $r3;
        kotlin.coroutines.EmptyCoroutineContext $r4;
        kotlin.coroutines.CoroutineContext r5;

        r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r5 := @parameter1: kotlin.coroutines.CoroutineContext;

        r1 := @parameter2: java.time.Duration;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r4 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        r5 = (kotlin.coroutines.CoroutineContext) $r4;

     label1:
        $r3 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,java.time.Duration)>(r0, r5, r1);

        return $r3;
    }

    public static final androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.CoroutineContext r1;
        androidx.lifecycle.LiveData $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long,int,java.lang.Object)>($r0, r1, 0L, 2, null);

        return $r2;
    }

    public static final androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0;
        androidx.lifecycle.LiveData $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long,int,java.lang.Object)>($r0, null, 0L, 3, null);

        return $r1;
    }

androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: int label>
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.LiveData $this_asFlow>
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.Observer $observer>
    void <init>(androidx.lifecycle.LiveData, androidx.lifecycle.Observer, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1 r0;
        androidx.lifecycle.LiveData $r1;
        androidx.lifecycle.Observer $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1;

        $r1 := @parameter0: androidx.lifecycle.LiveData;

        $r2 := @parameter1: androidx.lifecycle.Observer;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.LiveData $this_asFlow> = $r1;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.Observer $observer> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1 r0;
        java.lang.Object $r1;
        int $i0;
        androidx.lifecycle.Observer $r3;
        androidx.lifecycle.LiveData $r4;
        kotlin.Unit $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.LiveData $this_asFlow>;

        $r3 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.Observer $observer>;

        virtualinvoke $r4.<androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)>($r3);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label2:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.lifecycle.Observer $r4;
        androidx.lifecycle.LiveData $r5;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1;

        $r5 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.LiveData $this_asFlow>;

        $r4 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.Observer $observer>;

        specialinvoke $r3.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: int label>
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.LiveData $this_asFlow>
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.Observer $observer>
    void <init>(androidx.lifecycle.LiveData, androidx.lifecycle.Observer, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1 r0;
        androidx.lifecycle.LiveData $r1;
        androidx.lifecycle.Observer $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1;

        $r1 := @parameter0: androidx.lifecycle.LiveData;

        $r2 := @parameter1: androidx.lifecycle.Observer;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.LiveData $this_asFlow> = $r1;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.Observer $observer> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1 r0;
        java.lang.Object $r1;
        int $i0;
        androidx.lifecycle.Observer $r3;
        androidx.lifecycle.LiveData $r4;
        kotlin.Unit $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.LiveData $this_asFlow>;

        $r3 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.Observer $observer>;

        virtualinvoke $r4.<androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>($r3);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label2:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.lifecycle.Observer $r4;
        androidx.lifecycle.LiveData $r5;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1;

        $r5 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.LiveData $this_asFlow>;

        $r4 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.Observer $observer>;

        specialinvoke $r3.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: androidx.lifecycle.LiveData $this_asFlow>
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: androidx.lifecycle.Observer $observer>
    void <init>(androidx.lifecycle.LiveData, androidx.lifecycle.Observer)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2 r0;
        androidx.lifecycle.LiveData $r1;
        androidx.lifecycle.Observer $r2;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2;

        $r1 := @parameter0: androidx.lifecycle.LiveData;

        $r2 := @parameter1: androidx.lifecycle.Observer;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: androidx.lifecycle.LiveData $this_asFlow> = $r1;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: androidx.lifecycle.Observer $observer> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2 r0;
        kotlinx.coroutines.GlobalScope $r1;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlinx.coroutines.MainCoroutineDispatcher $r3, $r4;
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1 $r5;
        androidx.lifecycle.Observer $r6;
        androidx.lifecycle.LiveData $r7;
        kotlin.coroutines.CoroutineContext $r8;
        kotlin.jvm.functions.Function2 $r9;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2;

        $r1 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        $r2 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r3 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r4 = virtualinvoke $r3.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r8 = (kotlin.coroutines.CoroutineContext) $r4;

        $r5 = new androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1;

        $r7 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: androidx.lifecycle.LiveData $this_asFlow>;

        $r6 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: androidx.lifecycle.Observer $observer>;

        specialinvoke $r5.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer,kotlin.coroutines.Continuation)>($r7, $r6, null);

        $r9 = (kotlin.jvm.functions.Function2) $r5;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, $r8, null, $r9, 2, null);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2;

        virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.lifecycle.FlowLiveDataConversions$asFlow$1
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$1>
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: int label>
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$0>
<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: androidx.lifecycle.LiveData $this_asFlow>
    void <init>(androidx.lifecycle.LiveData, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1 r0;
        androidx.lifecycle.LiveData $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1;

        $r1 := @parameter0: androidx.lifecycle.LiveData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: androidx.lifecycle.LiveData $this_asFlow> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1 r0;
        java.lang.Object $r1, r2, $r4, $r5, $r10, $r11, $r19;
        int $i0;
        kotlin.Unit $r3;
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2 $r6;
        androidx.lifecycle.LiveData $r7, $r15;
        kotlin.jvm.functions.Function0 $r8;
        kotlin.coroutines.Continuation $r9, $r18;
        kotlinx.coroutines.MainCoroutineDispatcher $r12, $r13;
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1 $r14;
        kotlin.coroutines.CoroutineContext $r16;
        kotlin.jvm.functions.Function2 $r17;
        java.lang.IllegalStateException $r20;
        kotlinx.coroutines.channels.ProducerScope $r21;
        androidx.lifecycle.Observer r22;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label4;
            default: goto label6;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r11 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$0>;

        $r21 = (kotlinx.coroutines.channels.ProducerScope) $r11;

        r22 = dynamicinvoke "onChanged" <androidx.lifecycle.Observer (kotlinx.coroutines.channels.ProducerScope)>($r21) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.lifecycle.FlowLiveDataConversions$asFlow$1: void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,java.lang.Object)>, methodtype: void __METHODTYPE__(java.lang.Object));

        $r12 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r13 = virtualinvoke $r12.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r16 = (kotlin.coroutines.CoroutineContext) $r13;

        $r14 = new androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1;

        $r15 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: androidx.lifecycle.LiveData $this_asFlow>;

        specialinvoke $r14.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer,kotlin.coroutines.Continuation)>($r15, r22, null);

        $r17 = (kotlin.jvm.functions.Function2) $r14;

        $r18 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$0> = $r21;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$1> = r22;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: int label> = 1;

        $r19 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r16, $r17, $r18);

        if $r19 != r2 goto label3;

        return r2;

     label2:
        $r4 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$1>;

        r22 = (androidx.lifecycle.Observer) $r4;

        $r5 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$0>;

        $r21 = (kotlinx.coroutines.channels.ProducerScope) $r5;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r6 = new androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2;

        $r7 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: androidx.lifecycle.LiveData $this_asFlow>;

        specialinvoke $r6.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)>($r7, r22);

        $r8 = (kotlin.jvm.functions.Function0) $r6;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$0> = null;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$1> = null;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: int label> = 2;

        $r10 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r21, $r8, $r9);

        if $r10 != r2 goto label5;

        return r2;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label6:
        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r20;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.lifecycle.LiveData $r5;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.lifecycle.FlowLiveDataConversions$asFlow$1;

        $r5 = r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: androidx.lifecycle.LiveData $this_asFlow>;

        specialinvoke $r4.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: void <init>(androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1 r0, $r5;
        kotlinx.coroutines.channels.ProducerScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1;

        r1 := @parameter0: kotlinx.coroutines.channels.ProducerScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.lifecycle.FlowLiveDataConversions$asFlow$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    private static final void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope, java.lang.Object)
    {
        kotlinx.coroutines.channels.ProducerScope $r0;
        java.lang.Object r1;

        $r0 := @parameter0: kotlinx.coroutines.channels.ProducerScope;

        r1 := @parameter1: java.lang.Object;

        interfaceinvoke $r0.<kotlinx.coroutines.channels.ProducerScope: java.lang.Object trySend-JP2dKIU(java.lang.Object)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.lifecycle.FlowLiveDataConversions$asFlow$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.channels.ProducerScope $r4;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asFlow$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.channels.ProducerScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1
<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1: androidx.lifecycle.LiveDataScope $$this$liveData>
    void <init>(androidx.lifecycle.LiveDataScope)
    {
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1 r0;
        androidx.lifecycle.LiveDataScope $r1;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1;

        $r1 := @parameter0: androidx.lifecycle.LiveDataScope;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1: androidx.lifecycle.LiveDataScope $$this$liveData> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1 r0;
        java.lang.Object r1, $r4, $r5;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.LiveDataScope $r3;
        kotlin.Unit $r6;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1: androidx.lifecycle.LiveDataScope $$this$liveData>;

        $r4 = interfaceinvoke $r3.<androidx.lifecycle.LiveDataScope: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r2);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label1;

        return $r4;

     label1:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;
    }

androidx.lifecycle.FlowLiveDataConversions$asLiveData$1
<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: int label>
<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object L$0>
<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: kotlinx.coroutines.flow.Flow $this_asLiveData>
    void <init>(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1 r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asLiveData$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: kotlinx.coroutines.flow.Flow $this_asLiveData> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1 r0;
        java.lang.Object $r1, r3, $r5, $r10;
        androidx.lifecycle.LiveDataScope $r2;
        int $i0;
        kotlin.Unit $r4;
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1 $r6;
        kotlinx.coroutines.flow.Flow $r7;
        kotlinx.coroutines.flow.FlowCollector $r8;
        kotlin.coroutines.Continuation $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asLiveData$1;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r5 = r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object L$0>;

        $r2 = (androidx.lifecycle.LiveDataScope) $r5;

        $r7 = r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: kotlinx.coroutines.flow.Flow $this_asLiveData>;

        $r6 = new androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1;

        specialinvoke $r6.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1: void <init>(androidx.lifecycle.LiveDataScope)>($r2);

        $r8 = (kotlinx.coroutines.flow.FlowCollector) $r6;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: int label> = 1;

        $r10 = interfaceinvoke $r7.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r8, $r9);

        if $r10 != r3 goto label3;

        return r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        kotlinx.coroutines.flow.Flow $r5;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asLiveData$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.lifecycle.FlowLiveDataConversions$asLiveData$1;

        $r5 = r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: kotlinx.coroutines.flow.Flow $this_asLiveData>;

        specialinvoke $r4.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(androidx.lifecycle.LiveDataScope, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1 r0, $r5;
        androidx.lifecycle.LiveDataScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asLiveData$1;

        r1 := @parameter0: androidx.lifecycle.LiveDataScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.lifecycle.FlowLiveDataConversions$asLiveData$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.lifecycle.FlowLiveDataConversions$asLiveData$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.lifecycle.LiveDataScope $r4;

        r0 := @this: androidx.lifecycle.FlowLiveDataConversions$asLiveData$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.lifecycle.LiveDataScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object invoke(androidx.lifecycle.LiveDataScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

