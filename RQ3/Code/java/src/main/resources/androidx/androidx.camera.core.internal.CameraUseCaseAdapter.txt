androidx.camera.core.internal.CameraUseCaseAdapter
<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>
<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.LinkedHashSet mCameraInternals>
<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraDeviceSurfaceManager mCameraDeviceSurfaceManager>
<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.UseCaseConfigFactory mUseCaseConfigFactory>
<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.String TAG>
<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId mId>
<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>
<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.ViewPort mViewPort>
<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mEffects>
<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig>
<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>
<androidx.camera.core.internal.CameraUseCaseAdapter: boolean mAttached>
<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.Config mInteropConfig>
<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mExtraUseCases>
    public void <init>(java.util.LinkedHashSet, androidx.camera.core.impl.CameraDeviceSurfaceManager, androidx.camera.core.impl.UseCaseConfigFactory)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.LinkedHashSet r1, $r12, $r14;
        androidx.camera.core.impl.CameraDeviceSurfaceManager r2;
        androidx.camera.core.impl.UseCaseConfigFactory r3;
        java.util.ArrayList $r4, $r8;
        java.util.List $r5;
        androidx.camera.core.impl.CameraConfig $r6;
        java.lang.Object $r7, $r10;
        java.util.Iterator $r9;
        androidx.camera.core.impl.CameraInternal $r11;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId $r13;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.LinkedHashSet;

        r2 := @parameter1: androidx.camera.core.impl.CameraDeviceSurfaceManager;

        r3 := @parameter2: androidx.camera.core.impl.UseCaseConfigFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases> = $r4;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mEffects> = $r5;

        $r6 = staticinvoke <androidx.camera.core.impl.CameraConfigs: androidx.camera.core.impl.CameraConfig emptyConfig()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig> = $r6;

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock> = $r7;

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean mAttached> = 1;

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.Config mInteropConfig> = null;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mExtraUseCases> = $r8;

        $r9 = virtualinvoke r1.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (androidx.camera.core.impl.CameraInternal) $r10;

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal> = $r11;

        $r12 = new java.util.LinkedHashSet;

        specialinvoke $r12.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r1);

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.LinkedHashSet mCameraInternals> = $r12;

        $r13 = new androidx.camera.core.internal.CameraUseCaseAdapter$CameraId;

        $r14 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.LinkedHashSet mCameraInternals>;

        specialinvoke $r13.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: void <init>(java.util.LinkedHashSet)>($r14);

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId mId> = $r13;

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraDeviceSurfaceManager mCameraDeviceSurfaceManager> = r2;

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.UseCaseConfigFactory mUseCaseConfigFactory> = r3;

        return;
    }

    public static androidx.camera.core.internal.CameraUseCaseAdapter$CameraId generateCameraId(java.util.LinkedHashSet)
    {
        java.util.LinkedHashSet r0;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId $r1;

        r0 := @parameter0: java.util.LinkedHashSet;

        $r1 = new androidx.camera.core.internal.CameraUseCaseAdapter$CameraId;

        specialinvoke $r1.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: void <init>(java.util.LinkedHashSet)>(r0);

        return $r1;
    }

    public androidx.camera.core.internal.CameraUseCaseAdapter$CameraId getCameraId()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId $r1;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r1 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId mId>;

        return $r1;
    }

    public boolean isEquivalent(androidx.camera.core.internal.CameraUseCaseAdapter)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0, r1;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r2 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId mId>;

        $r3 = virtualinvoke r1.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId getCameraId()>();

        $z0 = virtualinvoke $r2.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public void setViewPort(androidx.camera.core.ViewPort)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.ViewPort r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: androidx.camera.core.ViewPort;

        $r3 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.ViewPort mViewPort> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public void setEffects(java.util.List)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.List r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mEffects> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public void addUseCases(java.util.Collection) throws androidx.camera.core.internal.CameraUseCaseAdapter$CameraException
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.Collection r1, r65;
        java.lang.Object r2, $r7, $r20, $r22, $r23, $r27, $r29, $r38, r48;
        java.util.ArrayList r3, r46, r49, r51, r57, r58, r59, r60, r61, r62;
        java.util.Map r4, r50;
        androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair r5;
        java.lang.Throwable r6, $r40, $r43, r52, r66;
        boolean $z0, $z1, $z3, $z5, $z11, $z13;
        java.util.List $r10, $r15, $r18, $r19, $r31, $r33, $r35, $r37, $r39, r47, r64, r67;
        androidx.camera.core.impl.CameraConfig $r11;
        androidx.camera.core.impl.UseCaseConfigFactory $r12, $r13;
        androidx.camera.core.impl.CameraInternal $r16, $r21, $r26;
        androidx.camera.core.impl.CameraInfoInternal $r17;
        androidx.camera.core.impl.UseCaseConfig $r24, $r25;
        android.util.Size $r28, $r30;
        java.lang.String $r42;
        java.util.Iterator r44, r53, r55;
        androidx.camera.core.UseCase r45, r54, r56;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraException r63;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.Collection;

        $r7 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        r57 = new java.util.ArrayList;

        specialinvoke r57.<java.util.ArrayList: void <init>()>();

        r3 = r57;

        r44 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r38 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (androidx.camera.core.UseCase) $r38;

        $r39 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        $z11 = interfaceinvoke $r39.<java.util.List: boolean contains(java.lang.Object)>(r45);

        if $z11 == 0 goto label03;

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("CameraUseCaseAdapter", "Attempting to attach already attached UseCase");

        goto label04;

     label03:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r45);

     label04:
        goto label02;

     label05:
        r58 = new java.util.ArrayList;

        $r10 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        specialinvoke r58.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        r46 = r58;

        r47 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r48 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $z1 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isCoexistingPreviewImageCaptureRequired()>();

        if $z1 == 0 goto label06;

        $r31 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mExtraUseCases>;

        interfaceinvoke r46.<java.util.List: boolean removeAll(java.util.Collection)>($r31);

        interfaceinvoke r46.<java.util.List: boolean addAll(java.util.Collection)>(r3);

        r59 = new java.util.ArrayList;

        $r33 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mExtraUseCases>;

        specialinvoke r59.<java.util.ArrayList: void <init>(java.util.Collection)>($r33);

        r47 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List calculateRequiredExtraUseCases(java.util.List,java.util.List)>(r46, r59);

        r60 = new java.util.ArrayList;

        specialinvoke r60.<java.util.ArrayList: void <init>(java.util.Collection)>(r47);

        r49 = r60;

        $r35 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mExtraUseCases>;

        interfaceinvoke r49.<java.util.List: boolean removeAll(java.util.Collection)>($r35);

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r49);

        r61 = new java.util.ArrayList;

        $r37 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mExtraUseCases>;

        specialinvoke r61.<java.util.ArrayList: void <init>(java.util.Collection)>($r37);

        r48 = r61;

        r64 = (java.util.List) r48;

        interfaceinvoke r64.<java.util.List: boolean removeAll(java.util.Collection)>(r47);

     label06:
        $r11 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig>;

        $r12 = interfaceinvoke $r11.<androidx.camera.core.impl.CameraConfig: androidx.camera.core.impl.UseCaseConfigFactory getUseCaseConfigFactory()>();

        $r13 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.UseCaseConfigFactory mUseCaseConfigFactory>;

        r50 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.Map getConfigs(java.util.List,androidx.camera.core.impl.UseCaseConfigFactory,androidx.camera.core.impl.UseCaseConfigFactory)>(r3, $r12, $r13);

     label07:
        r62 = new java.util.ArrayList;

        $r15 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        specialinvoke r62.<java.util.ArrayList: void <init>(java.util.Collection)>($r15);

        r51 = r62;

        r65 = (java.util.Collection) r48;

        interfaceinvoke r51.<java.util.List: boolean removeAll(java.util.Collection)>(r65);

        $r16 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r17 = interfaceinvoke $r16.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraInfoInternal getCameraInfoInternal()>();

        r4 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.Map calculateSuggestedResolutions(androidx.camera.core.impl.CameraInfoInternal,java.util.List,java.util.List,java.util.Map)>($r17, r3, r51, r50);

     label08:
        goto label10;

     label09:
        $r40 := @caughtexception;

        r52 = $r40;

        r63 = new androidx.camera.core.internal.CameraUseCaseAdapter$CameraException;

        $r42 = virtualinvoke r52.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke r63.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraException: void <init>(java.lang.String)>($r42);

        r66 = (java.lang.Throwable) r63;

        throw r66;

     label10:
        specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: void updateViewPort(java.util.Map,java.util.Collection)>(r4, r1);

        $r18 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mEffects>;

        staticinvoke <androidx.camera.core.internal.CameraUseCaseAdapter: void updateEffects(java.util.List,java.util.Collection)>($r18, r1);

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mExtraUseCases> = r47;

        r67 = (java.util.List) r48;

        specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: void detachUnnecessaryUseCases(java.util.List)>(r67);

        r53 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r22 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r54 = (androidx.camera.core.UseCase) $r22;

        $r23 = interfaceinvoke r50.<java.util.Map: java.lang.Object get(java.lang.Object)>(r54);

        r5 = (androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair) $r23;

        $r26 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r25 = r5.<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: androidx.camera.core.impl.UseCaseConfig mExtendedConfig>;

        $r24 = r5.<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: androidx.camera.core.impl.UseCaseConfig mCameraConfig>;

        virtualinvoke r54.<androidx.camera.core.UseCase: void onAttach(androidx.camera.core.impl.CameraInternal,androidx.camera.core.impl.UseCaseConfig,androidx.camera.core.impl.UseCaseConfig)>($r26, $r25, $r24);

        $r27 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r54);

        $r28 = (android.util.Size) $r27;

        $r29 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r28);

        $r30 = (android.util.Size) $r29;

        virtualinvoke r54.<androidx.camera.core.UseCase: void updateSuggestedResolution(android.util.Size)>($r30);

        goto label11;

     label12:
        $r19 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        interfaceinvoke $r19.<java.util.List: boolean addAll(java.util.Collection)>(r3);

        $z5 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean mAttached>;

        if $z5 == 0 goto label13;

        $r21 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        interfaceinvoke $r21.<androidx.camera.core.impl.CameraInternal: void attachUseCases(java.util.Collection)>(r3);

     label13:
        r55 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z13 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label15;

        $r20 = interfaceinvoke r55.<java.util.Iterator: java.lang.Object next()>();

        r56 = (androidx.camera.core.UseCase) $r20;

        virtualinvoke r56.<androidx.camera.core.UseCase: void notifyState()>();

        goto label14;

     label15:
        exitmonitor r2;

     label16:
        goto label19;

     label17:
        $r43 := @caughtexception;

        r6 = $r43;

        exitmonitor r2;

     label18:
        throw r6;

     label19:
        return;

        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void removeUseCases(java.util.Collection)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.Collection r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        java.util.ArrayList $r5;
        boolean $z0;
        java.util.List $r6, $r7;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.Collection;

        $r4 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: void detachUnnecessaryUseCases(java.util.List)>($r5);

        $z0 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isCoexistingPreviewImageCaptureRequired()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mExtraUseCases>;

        interfaceinvoke $r6.<java.util.List: boolean removeAll(java.util.Collection)>(r1);

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        virtualinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: void addUseCases(java.util.Collection)>($r7);

        goto label2;

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.List getUseCases()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.ArrayList $r4;
        java.util.List $r5;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r3 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new java.util.ArrayList;

        $r5 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void attachUseCases()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.lang.Object r1, $r5, $r9;
        java.util.Iterator r2;
        androidx.camera.core.UseCase r3;
        java.lang.Throwable r4, $r10;
        boolean $z0, $z1;
        java.util.List $r6, $r8;
        androidx.camera.core.impl.CameraInternal $r7;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r5 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $z0 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean mAttached>;

        if $z0 != 0 goto label4;

        $r7 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r6 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        interfaceinvoke $r7.<androidx.camera.core.impl.CameraInternal: void attachUseCases(java.util.Collection)>($r6);

        specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: void restoreInteropConfig()>();

        $r8 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.UseCase) $r9;

        virtualinvoke r3.<androidx.camera.core.UseCase: void notifyState()>();

        goto label2;

     label3:
        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean mAttached> = 1;

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r1;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void setActiveResumingMode(boolean)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        boolean z0;
        androidx.camera.core.impl.CameraInternal $r1;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        interfaceinvoke $r1.<androidx.camera.core.impl.CameraInternal: void setActiveResumingMode(boolean)>(z0);

        return;
    }

    public void detachUseCases()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        boolean $z0;
        java.util.ArrayList $r4;
        java.util.List $r5;
        androidx.camera.core.impl.CameraInternal $r6;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r3 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean mAttached>;

        if $z0 == 0 goto label2;

        $r6 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r4 = new java.util.ArrayList;

        $r5 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        interfaceinvoke $r6.<androidx.camera.core.impl.CameraInternal: void detachUseCases(java.util.Collection)>($r4);

        specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: void cacheInteropConfig()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean mAttached> = 0;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void restoreInteropConfig()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        androidx.camera.core.impl.Config $r4, $r7;
        androidx.camera.core.impl.CameraInternal $r5;
        androidx.camera.core.impl.CameraControlInternal $r6;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r3 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.Config mInteropConfig>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r6 = interfaceinvoke $r5.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraControlInternal getCameraControlInternal()>();

        $r7 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.Config mInteropConfig>;

        interfaceinvoke $r6.<androidx.camera.core.impl.CameraControlInternal: void addInteropConfig(androidx.camera.core.impl.Config)>($r7);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void cacheInteropConfig()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.lang.Object r1, $r4;
        androidx.camera.core.impl.CameraControlInternal r2;
        java.lang.Throwable r3, $r7;
        androidx.camera.core.impl.CameraInternal $r5;
        androidx.camera.core.impl.Config $r6;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r4 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        r2 = interfaceinvoke $r5.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraControlInternal getCameraControlInternal()>();

        $r6 = interfaceinvoke r2.<androidx.camera.core.impl.CameraControlInternal: androidx.camera.core.impl.Config getInteropConfig()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.Config mInteropConfig> = $r6;

        interfaceinvoke r2.<androidx.camera.core.impl.CameraControlInternal: void clearInteropConfig()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private java.util.Map calculateSuggestedResolutions(androidx.camera.core.impl.CameraInfoInternal, java.util.List, java.util.List, java.util.Map)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.impl.CameraInfoInternal r1;
        java.util.List r2, r3;
        java.util.Map r4, r44;
        java.util.ArrayList r5, $r9, $r12;
        java.lang.String r6;
        java.util.HashMap r7, $r10, $r11, r40;
        androidx.camera.core.impl.UseCaseConfig r8, $r25, $r26, $r32;
        boolean $z0, $z1, $z2, $z3;
        androidx.camera.core.impl.CameraDeviceSurfaceManager $r13, $r29;
        java.util.Set $r14, $r15;
        java.lang.Object $r16, $r17, $r19, $r20, $r23, $r24, $r28;
        androidx.camera.core.UseCase $r18, r38, r42;
        android.util.Size $r21, $r30, $r31, $r35;
        int $i0, $i1;
        android.util.Range $r33;
        androidx.camera.core.impl.AttachedSurfaceInfo $r34;
        java.util.Iterator r37, r41, r45;
        androidx.camera.core.impl.SurfaceConfig r39;
        androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair r43;
        java.util.Map$Entry r46;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: androidx.camera.core.impl.CameraInfoInternal;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.Map;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r5 = $r9;

        r6 = interfaceinvoke r1.<androidx.camera.core.impl.CameraInfoInternal: java.lang.String getCameraId()>();

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r7 = $r10;

        r37 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r28 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (androidx.camera.core.UseCase) $r28;

        $r29 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraDeviceSurfaceManager mCameraDeviceSurfaceManager>;

        $i0 = virtualinvoke r38.<androidx.camera.core.UseCase: int getImageFormat()>();

        $r30 = virtualinvoke r38.<androidx.camera.core.UseCase: android.util.Size getAttachedSurfaceResolution()>();

        r39 = interfaceinvoke $r29.<androidx.camera.core.impl.CameraDeviceSurfaceManager: androidx.camera.core.impl.SurfaceConfig transformSurfaceConfig(java.lang.String,int,android.util.Size)>(r6, $i0, $r30);

        $i1 = virtualinvoke r38.<androidx.camera.core.UseCase: int getImageFormat()>();

        $r31 = virtualinvoke r38.<androidx.camera.core.UseCase: android.util.Size getAttachedSurfaceResolution()>();

        $r32 = virtualinvoke r38.<androidx.camera.core.UseCase: androidx.camera.core.impl.UseCaseConfig getCurrentConfig()>();

        $r33 = interfaceinvoke $r32.<androidx.camera.core.impl.UseCaseConfig: android.util.Range getTargetFramerate(android.util.Range)>(null);

        $r34 = staticinvoke <androidx.camera.core.impl.AttachedSurfaceInfo: androidx.camera.core.impl.AttachedSurfaceInfo create(androidx.camera.core.impl.SurfaceConfig,int,android.util.Size,android.util.Range)>(r39, $i1, $r31, $r33);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = virtualinvoke r38.<androidx.camera.core.UseCase: android.util.Size getAttachedSurfaceResolution()>();

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r38, $r35);

        goto label1;

     label2:
        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r40 = $r11;

        r41 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r23 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (androidx.camera.core.UseCase) $r23;

        $r24 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r42);

        r43 = (androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair) $r24;

        $r26 = r43.<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: androidx.camera.core.impl.UseCaseConfig mExtendedConfig>;

        $r25 = r43.<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: androidx.camera.core.impl.UseCaseConfig mCameraConfig>;

        r8 = virtualinvoke r42.<androidx.camera.core.UseCase: androidx.camera.core.impl.UseCaseConfig mergeConfigs(androidx.camera.core.impl.CameraInfoInternal,androidx.camera.core.impl.UseCaseConfig,androidx.camera.core.impl.UseCaseConfig)>(r1, $r26, $r25);

        interfaceinvoke r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r42);

        goto label3;

     label4:
        $r13 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraDeviceSurfaceManager mCameraDeviceSurfaceManager>;

        $r12 = new java.util.ArrayList;

        $r14 = interfaceinvoke r40.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        r44 = interfaceinvoke $r13.<androidx.camera.core.impl.CameraDeviceSurfaceManager: java.util.Map getSuggestedResolutions(java.lang.String,java.util.List,java.util.List)>(r6, r5, $r12);

        $r15 = interfaceinvoke r40.<java.util.Map: java.util.Set entrySet()>();

        r45 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r16 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (androidx.camera.core.UseCase) $r17;

        $r19 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = interfaceinvoke r44.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        $r21 = (android.util.Size) $r20;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r21);

        goto label5;

     label6:
        return r7;
    }

    static void updateEffects(java.util.List, java.util.Collection)
    {
        java.util.List r0;
        java.util.Collection r1;
        java.util.HashMap r2, $r5;
        androidx.camera.core.Preview r3;
        androidx.camera.core.CameraEffect r4, r18;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6, $r8, $r11, $r14;
        java.lang.Integer $r7, $r15;
        androidx.camera.core.processing.SurfaceProcessorWithExecutor $r9;
        androidx.camera.core.SurfaceProcessor $r10, $r12;
        java.util.concurrent.Executor $r13;
        int $i0;
        java.util.Iterator r17, r19;
        androidx.camera.core.UseCase r20;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Collection;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r2 = $r5;

        r17 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (androidx.camera.core.CameraEffect) $r14;

        $i0 = virtualinvoke r18.<androidx.camera.core.CameraEffect: int getTargets()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r18);

        goto label1;

     label2:
        r19 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r6 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (androidx.camera.core.UseCase) $r6;

        $z1 = r20 instanceof androidx.camera.core.Preview;

        if $z1 == 0 goto label5;

        r3 = (androidx.camera.core.Preview) r20;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r4 = (androidx.camera.core.CameraEffect) $r8;

        if r4 != null goto label4;

        virtualinvoke r3.<androidx.camera.core.Preview: void setProcessor(androidx.camera.core.processing.SurfaceProcessorInternal)>(null);

        goto label3;

     label4:
        $r9 = new androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        $r10 = virtualinvoke r4.<androidx.camera.core.CameraEffect: androidx.camera.core.SurfaceProcessor getSurfaceProcessor()>();

        $r11 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r10);

        $r12 = (androidx.camera.core.SurfaceProcessor) $r11;

        $r13 = virtualinvoke r4.<androidx.camera.core.CameraEffect: java.util.concurrent.Executor getProcessorExecutor()>();

        specialinvoke $r9.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: void <init>(androidx.camera.core.SurfaceProcessor,java.util.concurrent.Executor)>($r12, $r13);

        virtualinvoke r3.<androidx.camera.core.Preview: void setProcessor(androidx.camera.core.processing.SurfaceProcessorInternal)>($r9);

     label5:
        goto label3;

     label6:
        return;
    }

    private void updateViewPort(java.util.Map, java.util.Collection)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.Map r1, r5;
        java.util.Collection r2;
        java.lang.Object r3, $r9, $r13, $r14, $r16, $r21;
        java.lang.Integer r4;
        java.util.Iterator r6;
        androidx.camera.core.UseCase r7;
        java.lang.Throwable r8, $r24;
        androidx.camera.core.ViewPort $r10, $r28, $r32, $r33, $r34;
        androidx.camera.core.impl.CameraInternal $r11, $r18, $r25, $r30;
        androidx.camera.core.impl.CameraInfoInternal $r12, $r31;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect $r15, $r17, $r20, $r27;
        androidx.camera.core.impl.CameraControlInternal $r19, $r26;
        android.util.Size $r22;
        android.graphics.Matrix $r23;
        boolean z0, $z1, $z2;
        android.util.Rational $r29;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Collection;

        $r9 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r3 = $r9;

        entermonitor $r9;

     label01:
        $r10 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.ViewPort mViewPort>;

        if $r10 == null goto label07;

        $r11 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r12 = interfaceinvoke $r11.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraInfoInternal getCameraInfoInternal()>();

        r4 = interfaceinvoke $r12.<androidx.camera.core.impl.CameraInfoInternal: java.lang.Integer getLensFacing()>();

        if r4 != null goto label02;

        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String)>("CameraUseCaseAdapter", "The lens facing is null, probably an external.");

        z0 = 1;

        goto label05;

     label02:
        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i0 != 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        z0 = $z1;

     label05:
        $r25 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r26 = interfaceinvoke $r25.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraControlInternal getCameraControlInternal()>();

        $r27 = interfaceinvoke $r26.<androidx.camera.core.impl.CameraControlInternal: android.graphics.Rect getSensorRect()>();

        $r28 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.ViewPort mViewPort>;

        $r29 = virtualinvoke $r28.<androidx.camera.core.ViewPort: android.util.Rational getAspectRatio()>();

        $r30 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r31 = interfaceinvoke $r30.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraInfoInternal getCameraInfoInternal()>();

        $r32 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.ViewPort mViewPort>;

        $i1 = virtualinvoke $r32.<androidx.camera.core.ViewPort: int getRotation()>();

        $i2 = interfaceinvoke $r31.<androidx.camera.core.impl.CameraInfoInternal: int getSensorRotationDegrees(int)>($i1);

        $r33 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.ViewPort mViewPort>;

        $i3 = virtualinvoke $r33.<androidx.camera.core.ViewPort: int getScaleType()>();

        $r34 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.ViewPort mViewPort>;

        $i4 = virtualinvoke $r34.<androidx.camera.core.ViewPort: int getLayoutDirection()>();

        r5 = staticinvoke <androidx.camera.core.internal.ViewPorts: java.util.Map calculateViewPortRects(android.graphics.Rect,boolean,android.util.Rational,int,int,int,java.util.Map)>($r27, z0, $r29, $i2, $i3, $i4, r1);

        r6 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.camera.core.UseCase) $r13;

        $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r15 = (android.graphics.Rect) $r14;

        $r16 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r15);

        $r17 = (android.graphics.Rect) $r16;

        virtualinvoke r7.<androidx.camera.core.UseCase: void setViewPortCropRect(android.graphics.Rect)>($r17);

        $r18 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r19 = interfaceinvoke $r18.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraControlInternal getCameraControlInternal()>();

        $r20 = interfaceinvoke $r19.<androidx.camera.core.impl.CameraControlInternal: android.graphics.Rect getSensorRect()>();

        $r21 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r22 = (android.util.Size) $r21;

        $r23 = staticinvoke <androidx.camera.core.internal.CameraUseCaseAdapter: android.graphics.Matrix calculateSensorToBufferTransformMatrix(android.graphics.Rect,android.util.Size)>($r20, $r22);

        virtualinvoke r7.<androidx.camera.core.UseCase: void setSensorToBufferTransformMatrix(android.graphics.Matrix)>($r23);

        goto label06;

     label07:
        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r24 := @caughtexception;

        r8 = $r24;

        exitmonitor r3;

     label10:
        throw r8;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static android.graphics.Matrix calculateSensorToBufferTransformMatrix(android.graphics.Rect, android.util.Size)
    {
        android.graphics.Rect r0;
        android.util.Size r1;
        android.graphics.RectF r2, r4, $r5, $r7;
        android.graphics.Matrix r3, $r6;
        int $i0, $i1, $i2, $i3;
        boolean $z2;
        float $f0, $f1;
        android.graphics.Matrix$ScaleToFit $r8;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.util.Size;

        $i0 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        if $i1 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z2, "Cannot compute viewport crop rects zero sized sensor rect.");

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>(android.graphics.Rect)>(r0);

        r2 = $r5;

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r3 = $r6;

        $r7 = new android.graphics.RectF;

        $i2 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $f0 = (float) $i2;

        $i3 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $f1 = (float) $i3;

        specialinvoke $r7.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        r4 = $r7;

        $r8 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke r3.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r4, r2, $r8);

        virtualinvoke r3.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r3);

        return r3;
    }

    private java.util.Map getConfigs(java.util.List, androidx.camera.core.impl.UseCaseConfigFactory, androidx.camera.core.impl.UseCaseConfigFactory)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.List r1;
        androidx.camera.core.impl.UseCaseConfigFactory r2, r3;
        java.util.HashMap r4, $r7;
        java.util.Iterator r5;
        androidx.camera.core.UseCase r6;
        boolean $z0;
        java.lang.Object $r8;
        androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair $r9;
        androidx.camera.core.impl.UseCaseConfig $r10, $r11;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.camera.core.impl.UseCaseConfigFactory;

        r3 := @parameter2: androidx.camera.core.impl.UseCaseConfigFactory;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r4 = $r7;

        r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.camera.core.UseCase) $r8;

        $r9 = new androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair;

        $r10 = virtualinvoke r6.<androidx.camera.core.UseCase: androidx.camera.core.impl.UseCaseConfig getDefaultConfig(boolean,androidx.camera.core.impl.UseCaseConfigFactory)>(0, r2);

        $r11 = virtualinvoke r6.<androidx.camera.core.UseCase: androidx.camera.core.impl.UseCaseConfig getDefaultConfig(boolean,androidx.camera.core.impl.UseCaseConfigFactory)>(1, r3);

        specialinvoke $r9.<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: void <init>(androidx.camera.core.impl.UseCaseConfig,androidx.camera.core.impl.UseCaseConfig)>($r10, $r11);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r9);

        goto label1;

     label2:
        return r4;
    }

    public androidx.camera.core.CameraControl getCameraControl()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.impl.CameraInternal $r1;
        androidx.camera.core.impl.CameraControlInternal $r2;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r1 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r2 = interfaceinvoke $r1.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraControlInternal getCameraControlInternal()>();

        return $r2;
    }

    public androidx.camera.core.CameraInfo getCameraInfo()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.impl.CameraInternal $r1;
        androidx.camera.core.impl.CameraInfoInternal $r2;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r1 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r2 = interfaceinvoke $r1.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraInfoInternal getCameraInfoInternal()>();

        return $r2;
    }

    public java.util.LinkedHashSet getCameraInternals()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r1 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.LinkedHashSet mCameraInternals>;

        return $r1;
    }

    public androidx.camera.core.impl.CameraConfig getExtendedConfig()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.lang.Object r1, $r2;
        androidx.camera.core.impl.CameraConfig $r3;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r2 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig>;

        exitmonitor r1;

        return $r3;
    }

    public void setExtendedConfig(androidx.camera.core.impl.CameraConfig)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r11;
        java.util.List $r4;
        boolean $z0, $z1;
        androidx.camera.core.impl.CameraConfig $r5, $r7, r12;
        androidx.camera.core.impl.CameraInternal $r6;
        androidx.camera.core.impl.Identifier $r8, $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r12 := @parameter0: androidx.camera.core.impl.CameraConfig;

        $r3 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        if r12 != null goto label2;

        r12 = staticinvoke <androidx.camera.core.impl.CameraConfigs: androidx.camera.core.impl.CameraConfig emptyConfig()>();

     label2:
        $r4 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r7 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig>;

        $r8 = interfaceinvoke $r7.<androidx.camera.core.impl.CameraConfig: androidx.camera.core.impl.Identifier getCompatibilityId()>();

        $r9 = interfaceinvoke r12.<androidx.camera.core.impl.CameraConfig: androidx.camera.core.impl.Identifier getCompatibilityId()>();

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label3;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Need to unbind all use cases before binding with extension enabled");

        throw $r10;

     label3:
        r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig> = r12;

        $r6 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r5 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig>;

        interfaceinvoke $r6.<androidx.camera.core.impl.CameraInternal: void setExtendedConfig(androidx.camera.core.impl.CameraConfig)>($r5);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public transient boolean isUseCasesCombinationSupported(androidx.camera.core.UseCase[])
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.UseCase[] r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r14, $r15, r17;
        java.util.List $r5, $r11, $r12;
        androidx.camera.core.impl.CameraConfig $r6;
        androidx.camera.core.impl.UseCaseConfigFactory $r7, $r8;
        androidx.camera.core.impl.CameraInternal $r9;
        androidx.camera.core.impl.CameraInfoInternal $r10;
        java.util.Map r16;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: androidx.camera.core.UseCase[];

        $r4 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r6 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig>;

        $r7 = interfaceinvoke $r6.<androidx.camera.core.impl.CameraConfig: androidx.camera.core.impl.UseCaseConfigFactory getUseCaseConfigFactory()>();

        $r8 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.UseCaseConfigFactory mUseCaseConfigFactory>;

        r16 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.Map getConfigs(java.util.List,androidx.camera.core.impl.UseCaseConfigFactory,androidx.camera.core.impl.UseCaseConfigFactory)>($r5, $r7, $r8);

        $r9 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        $r10 = interfaceinvoke $r9.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraInfoInternal getCameraInfoInternal()>();

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.Map calculateSuggestedResolutions(androidx.camera.core.impl.CameraInfoInternal,java.util.List,java.util.List,java.util.Map)>($r10, $r11, $r12, r16);

     label2:
        goto label5;

     label3:
        $r15 := @caughtexception;

        r17 = $r15;

        exitmonitor r2;

     label4:
        return 0;

     label5:
        exitmonitor r2;

     label6:
        return 1;

     label7:
        $r14 := @caughtexception;

        r3 = $r14;

        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private java.util.List calculateRequiredExtraUseCases(java.util.List, java.util.List)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.List r1, r2;
        java.util.ArrayList r3, $r6;
        boolean z0, z1, $z2, $z7, $z8;
        java.util.Iterator r4;
        androidx.camera.core.UseCase r5, r10, r11;
        androidx.camera.core.ImageCapture $r7;
        androidx.camera.core.Preview $r8;
        java.lang.Object $r9;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r3 = $r6;

        z0 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isExtraPreviewRequired(java.util.List)>(r1);

        z1 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isExtraImageCaptureRequired(java.util.List)>(r1);

        r10 = null;

        r11 = null;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.camera.core.UseCase) $r9;

        $z7 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isPreview(androidx.camera.core.UseCase)>(r5);

        if $z7 == 0 goto label2;

        r10 = r5;

        goto label3;

     label2:
        $z8 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isImageCapture(androidx.camera.core.UseCase)>(r5);

        if $z8 == 0 goto label3;

        r11 = r5;

     label3:
        goto label1;

     label4:
        if z0 == 0 goto label5;

        if r10 != null goto label5;

        $r8 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.Preview createExtraPreview()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label6;

     label5:
        if z0 != 0 goto label6;

        if r10 == null goto label6;

        interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r10);

     label6:
        if z1 == 0 goto label7;

        if r11 != null goto label7;

        $r7 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.ImageCapture createExtraImageCapture()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label8;

     label7:
        if z1 != 0 goto label8;

        if r11 == null goto label8;

        interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r11);

     label8:
        return r3;
    }

    private void detachUnnecessaryUseCases(java.util.List)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.List r1, $r8, $r10;
        java.lang.Object r2, $r6, $r9;
        java.util.Iterator r3;
        androidx.camera.core.UseCase r4;
        java.lang.Throwable r5, $r16;
        boolean $z0, $z1, $z3;
        androidx.camera.core.impl.CameraInternal $r7, $r15;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.List;

        $r6 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r7 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        interfaceinvoke $r7.<androidx.camera.core.impl.CameraInternal: void detachUseCases(java.util.Collection)>(r1);

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.camera.core.UseCase) $r9;

        $r10 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        $z3 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z3 == 0 goto label03;

        $r15 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        virtualinvoke r4.<androidx.camera.core.UseCase: void onDetach(androidx.camera.core.impl.CameraInternal)>($r15);

        goto label04;

     label03:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to detach non-attached UseCase: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String)>("CameraUseCaseAdapter", $r14);

     label04:
        goto label02;

     label05:
        $r8 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List mUseCases>;

        interfaceinvoke $r8.<java.util.List: boolean removeAll(java.util.Collection)>(r1);

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private boolean isCoexistingPreviewImageCaptureRequired()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.CameraConfig $r4;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r3 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.impl.CameraConfig mCameraConfig>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.CameraConfig: int getUseCaseCombinationRequiredRule()>();

        if $i0 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean isExtraPreviewRequired(java.util.List)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.List r1;
        java.util.Iterator r2;
        androidx.camera.core.UseCase r3;
        boolean $z0, $z1, $z2, z3, z4, $z5;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.List;

        z3 = 0;

        z4 = 0;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.UseCase) $r4;

        $z1 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isPreview(androidx.camera.core.UseCase)>(r3);

        if $z1 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        $z2 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isImageCapture(androidx.camera.core.UseCase)>(r3);

        if $z2 == 0 goto label3;

        z4 = 1;

     label3:
        goto label1;

     label4:
        if z4 == 0 goto label5;

        if z3 != 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    private boolean isExtraImageCaptureRequired(java.util.List)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        java.util.List r1;
        java.util.Iterator r2;
        androidx.camera.core.UseCase r3;
        boolean $z0, $z1, $z2, z3, z4, $z5;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: java.util.List;

        z3 = 0;

        z4 = 0;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.UseCase) $r4;

        $z1 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isPreview(androidx.camera.core.UseCase)>(r3);

        if $z1 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        $z2 = specialinvoke r0.<androidx.camera.core.internal.CameraUseCaseAdapter: boolean isImageCapture(androidx.camera.core.UseCase)>(r3);

        if $z2 == 0 goto label3;

        z4 = 1;

     label3:
        goto label1;

     label4:
        if z3 == 0 goto label5;

        if z4 != 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    private boolean isPreview(androidx.camera.core.UseCase)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.UseCase r1;
        boolean $z0;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: androidx.camera.core.UseCase;

        $z0 = r1 instanceof androidx.camera.core.Preview;

        return $z0;
    }

    private boolean isImageCapture(androidx.camera.core.UseCase)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.UseCase r1;
        boolean $z0;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        r1 := @parameter0: androidx.camera.core.UseCase;

        $z0 = r1 instanceof androidx.camera.core.ImageCapture;

        return $z0;
    }

    private androidx.camera.core.Preview createExtraPreview()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.Preview r1;
        androidx.camera.core.Preview$Builder $r2, $r3;
        androidx.camera.core.Preview$SurfaceProvider $r4;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r2 = new androidx.camera.core.Preview$Builder;

        specialinvoke $r2.<androidx.camera.core.Preview$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<androidx.camera.core.Preview$Builder: androidx.camera.core.Preview$Builder setTargetName(java.lang.String)>("Preview-Extra");

        r1 = virtualinvoke $r3.<androidx.camera.core.Preview$Builder: androidx.camera.core.Preview build()>();

        $r4 = dynamicinvoke "onSurfaceRequested" <androidx.camera.core.Preview$SurfaceProvider ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.camera.core.SurfaceRequest), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.internal.CameraUseCaseAdapter: void lambda$createExtraPreview$1(androidx.camera.core.SurfaceRequest)>, methodtype: void __METHODTYPE__(androidx.camera.core.SurfaceRequest));

        virtualinvoke r1.<androidx.camera.core.Preview: void setSurfaceProvider(androidx.camera.core.Preview$SurfaceProvider)>($r4);

        return r1;
    }

    private androidx.camera.core.ImageCapture createExtraImageCapture()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter r0;
        androidx.camera.core.ImageCapture$Builder $r1, $r2;
        androidx.camera.core.ImageCapture $r3;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r1 = new androidx.camera.core.ImageCapture$Builder;

        specialinvoke $r1.<androidx.camera.core.ImageCapture$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<androidx.camera.core.ImageCapture$Builder: androidx.camera.core.ImageCapture$Builder setTargetName(java.lang.String)>("ImageCapture-Extra");

        $r3 = virtualinvoke $r2.<androidx.camera.core.ImageCapture$Builder: androidx.camera.core.ImageCapture build()>();

        return $r3;
    }

    private static void lambda$createExtraPreview$1(androidx.camera.core.SurfaceRequest)
    {
        androidx.camera.core.SurfaceRequest r0;
        android.graphics.SurfaceTexture r1, $r3;
        android.view.Surface r2, $r6;
        android.util.Size $r4, $r5;
        int $i0, $i1;
        java.util.concurrent.Executor $r7;
        androidx.core.util.Consumer $r8;

        r0 := @parameter0: androidx.camera.core.SurfaceRequest;

        $r3 = new android.graphics.SurfaceTexture;

        specialinvoke $r3.<android.graphics.SurfaceTexture: void <init>(int)>(0);

        r1 = $r3;

        $r4 = virtualinvoke r0.<androidx.camera.core.SurfaceRequest: android.util.Size getResolution()>();

        $i0 = virtualinvoke $r4.<android.util.Size: int getWidth()>();

        $r5 = virtualinvoke r0.<androidx.camera.core.SurfaceRequest: android.util.Size getResolution()>();

        $i1 = virtualinvoke $r5.<android.util.Size: int getHeight()>();

        virtualinvoke r1.<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>($i0, $i1);

        virtualinvoke r1.<android.graphics.SurfaceTexture: void detachFromGLContext()>();

        $r6 = new android.view.Surface;

        specialinvoke $r6.<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>(r1);

        r2 = $r6;

        $r7 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        $r8 = dynamicinvoke "accept" <androidx.core.util.Consumer (android.view.Surface,android.graphics.SurfaceTexture)>(r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.internal.CameraUseCaseAdapter: void lambda$createExtraPreview$0(android.view.Surface,android.graphics.SurfaceTexture,androidx.camera.core.SurfaceRequest$Result)>, methodtype: void __METHODTYPE__(androidx.camera.core.SurfaceRequest$Result));

        virtualinvoke r0.<androidx.camera.core.SurfaceRequest: void provideSurface(android.view.Surface,java.util.concurrent.Executor,androidx.core.util.Consumer)>(r2, $r7, $r8);

        return;
    }

    private static void lambda$createExtraPreview$0(android.view.Surface, android.graphics.SurfaceTexture, androidx.camera.core.SurfaceRequest$Result)
    {
        android.view.Surface r0;
        android.graphics.SurfaceTexture r1;
        androidx.camera.core.SurfaceRequest$Result r2;

        r0 := @parameter0: android.view.Surface;

        r1 := @parameter1: android.graphics.SurfaceTexture;

        r2 := @parameter2: androidx.camera.core.SurfaceRequest$Result;

        virtualinvoke r0.<android.view.Surface: void release()>();

        virtualinvoke r1.<android.graphics.SurfaceTexture: void release()>();

        return;
    }

androidx.camera.core.internal.CameraUseCaseAdapter$CameraException
    public void <init>()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraException r0;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter$CameraException;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraException r0;
        java.lang.String r1;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter$CameraException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraException r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter$CameraException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);

        return;
    }

androidx.camera.core.internal.CameraUseCaseAdapter$CameraId
<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: java.util.List mIds>
    void <init>(java.util.LinkedHashSet)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId r0;
        java.util.LinkedHashSet r1;
        java.util.Iterator r2;
        androidx.camera.core.impl.CameraInternal r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.List $r6;
        androidx.camera.core.impl.CameraInfoInternal $r7;
        java.lang.String $r8;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId;

        r1 := @parameter0: java.util.LinkedHashSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: java.util.List mIds> = $r4;

        r2 = virtualinvoke r1.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.impl.CameraInternal) $r5;

        $r6 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: java.util.List mIds>;

        $r7 = interfaceinvoke r3.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraInfoInternal getCameraInfoInternal()>();

        $r8 = interfaceinvoke $r7.<androidx.camera.core.impl.CameraInfoInternal: java.lang.String getCameraId()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.List $r3, $r4;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.camera.core.internal.CameraUseCaseAdapter$CameraId;

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: java.util.List mIds>;

        $r2 = (androidx.camera.core.internal.CameraUseCaseAdapter$CameraId) r1;

        $r3 = $r2.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: java.util.List mIds>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId r0;
        java.util.List $r1;
        int $i0, $i1;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId;

        $r1 = r0.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraId: java.util.List mIds>;

        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        $i1 = 53 * $i0;

        return $i1;
    }

androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair
<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: androidx.camera.core.impl.UseCaseConfig mExtendedConfig>
<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: androidx.camera.core.impl.UseCaseConfig mCameraConfig>
    void <init>(androidx.camera.core.impl.UseCaseConfig, androidx.camera.core.impl.UseCaseConfig)
    {
        androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair r0;
        androidx.camera.core.impl.UseCaseConfig r1, r2;

        r0 := @this: androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair;

        r1 := @parameter0: androidx.camera.core.impl.UseCaseConfig;

        r2 := @parameter1: androidx.camera.core.impl.UseCaseConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: androidx.camera.core.impl.UseCaseConfig mExtendedConfig> = r1;

        r0.<androidx.camera.core.internal.CameraUseCaseAdapter$ConfigPair: androidx.camera.core.impl.UseCaseConfig mCameraConfig> = r2;

        return;
    }

