androidx.camera.core.imagecapture.ProcessingRequest
<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>
<androidx.camera.core.imagecapture.ProcessingRequest: android.graphics.Rect mCropRect>
<androidx.camera.core.imagecapture.ProcessingRequest: int mRotationDegrees>
<androidx.camera.core.imagecapture.ProcessingRequest: int mJpegQuality>
<androidx.camera.core.imagecapture.ProcessingRequest: android.graphics.Matrix mSensorToBufferTransform>
<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.imagecapture.TakePictureCallback mCallback>
<androidx.camera.core.imagecapture.ProcessingRequest: java.lang.String mTagBundleKey>
<androidx.camera.core.imagecapture.ProcessingRequest: java.util.List mStageIds>
    void <init>(androidx.camera.core.impl.CaptureBundle, androidx.camera.core.ImageCapture$OutputFileOptions, android.graphics.Rect, int, int, android.graphics.Matrix, androidx.camera.core.imagecapture.TakePictureCallback)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.impl.CaptureBundle r1;
        androidx.camera.core.ImageCapture$OutputFileOptions r2;
        android.graphics.Rect r3;
        int i0, i1, $i2, $i3;
        android.graphics.Matrix r4;
        androidx.camera.core.imagecapture.TakePictureCallback r5;
        java.util.Iterator r6;
        androidx.camera.core.impl.CaptureStage r7;
        java.lang.String $r8;
        java.util.ArrayList $r9;
        java.util.List $r10, $r12, $r14;
        java.lang.Object $r11, $r13;
        boolean $z0;
        java.lang.Integer $r15;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter0: androidx.camera.core.impl.CaptureBundle;

        r2 := @parameter1: androidx.camera.core.ImageCapture$OutputFileOptions;

        r3 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: android.graphics.Matrix;

        r5 := @parameter6: androidx.camera.core.imagecapture.TakePictureCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions> = r2;

        r0.<androidx.camera.core.imagecapture.ProcessingRequest: int mJpegQuality> = i1;

        r0.<androidx.camera.core.imagecapture.ProcessingRequest: int mRotationDegrees> = i0;

        r0.<androidx.camera.core.imagecapture.ProcessingRequest: android.graphics.Rect mCropRect> = r3;

        r0.<androidx.camera.core.imagecapture.ProcessingRequest: android.graphics.Matrix mSensorToBufferTransform> = r4;

        r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.imagecapture.TakePictureCallback mCallback> = r5;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        r0.<androidx.camera.core.imagecapture.ProcessingRequest: java.lang.String mTagBundleKey> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.core.imagecapture.ProcessingRequest: java.util.List mStageIds> = $r9;

        $r10 = interfaceinvoke r1.<androidx.camera.core.impl.CaptureBundle: java.util.List getCaptureStages()>();

        $r11 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r10);

        $r12 = (java.util.List) $r11;

        r6 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.camera.core.impl.CaptureStage) $r13;

        $r14 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: java.util.List mStageIds>;

        $i3 = interfaceinvoke r7.<androidx.camera.core.impl.CaptureStage: int getId()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label1;

     label2:
        return;
    }

    java.lang.String getTagBundleKey()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        java.lang.String $r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $r1 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: java.lang.String mTagBundleKey>;

        return $r1;
    }

    java.util.List getStageIds()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        java.util.List $r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $r1 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: java.util.List mStageIds>;

        return $r1;
    }

    androidx.camera.core.ImageCapture$OutputFileOptions getOutputFileOptions()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageCapture$OutputFileOptions $r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $r1 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        return $r1;
    }

    android.graphics.Rect getCropRect()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        android.graphics.Rect $r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $r1 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: android.graphics.Rect mCropRect>;

        return $r1;
    }

    int getRotationDegrees()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        int $i0;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $i0 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: int mRotationDegrees>;

        return $i0;
    }

    int getJpegQuality()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        int $i0;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $i0 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: int mJpegQuality>;

        return $i0;
    }

    android.graphics.Matrix getSensorToBufferTransform()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        android.graphics.Matrix $r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $r1 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: android.graphics.Matrix mSensorToBufferTransform>;

        return $r1;
    }

    boolean isInMemoryCapture()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageCapture$OutputFileOptions $r1;
        boolean $z0;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $r1 = virtualinvoke r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.ImageCapture$OutputFileOptions getOutputFileOptions()>();

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void onImageCaptured()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.imagecapture.TakePictureCallback $r1;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $r1 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.imagecapture.TakePictureCallback mCallback>;

        interfaceinvoke $r1.<androidx.camera.core.imagecapture.TakePictureCallback: void onImageCaptured()>();

        return;
    }

    void onFinalResult(androidx.camera.core.ImageCapture$OutputFileResults)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageCapture$OutputFileResults r1;
        androidx.camera.core.imagecapture.TakePictureCallback $r2;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter0: androidx.camera.core.ImageCapture$OutputFileResults;

        $r2 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.imagecapture.TakePictureCallback mCallback>;

        interfaceinvoke $r2.<androidx.camera.core.imagecapture.TakePictureCallback: void onFinalResult(androidx.camera.core.ImageCapture$OutputFileResults)>(r1);

        return;
    }

    void onFinalResult(androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageProxy r1;
        androidx.camera.core.imagecapture.TakePictureCallback $r2;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        $r2 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.imagecapture.TakePictureCallback mCallback>;

        interfaceinvoke $r2.<androidx.camera.core.imagecapture.TakePictureCallback: void onFinalResult(androidx.camera.core.ImageProxy)>(r1);

        return;
    }

    void onProcessFailure(androidx.camera.core.ImageCaptureException)
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.ImageCaptureException r1;
        androidx.camera.core.imagecapture.TakePictureCallback $r2;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        r1 := @parameter0: androidx.camera.core.ImageCaptureException;

        $r2 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.imagecapture.TakePictureCallback mCallback>;

        interfaceinvoke $r2.<androidx.camera.core.imagecapture.TakePictureCallback: void onProcessFailure(androidx.camera.core.ImageCaptureException)>(r1);

        return;
    }

    boolean isAborted()
    {
        androidx.camera.core.imagecapture.ProcessingRequest r0;
        androidx.camera.core.imagecapture.TakePictureCallback $r1;
        boolean $z0;

        r0 := @this: androidx.camera.core.imagecapture.ProcessingRequest;

        $r1 = r0.<androidx.camera.core.imagecapture.ProcessingRequest: androidx.camera.core.imagecapture.TakePictureCallback mCallback>;

        $z0 = interfaceinvoke $r1.<androidx.camera.core.imagecapture.TakePictureCallback: boolean isAborted()>();

        return $z0;
    }

