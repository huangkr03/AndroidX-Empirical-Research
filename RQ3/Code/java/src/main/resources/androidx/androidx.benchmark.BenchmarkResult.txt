androidx.benchmark.BenchmarkResult
<androidx.benchmark.BenchmarkResult: java.lang.String className>
<androidx.benchmark.BenchmarkResult: java.lang.String testName>
<androidx.benchmark.BenchmarkResult: long totalRunTimeNs>
<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>
<androidx.benchmark.BenchmarkResult: int repeatIterations>
<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds>
<androidx.benchmark.BenchmarkResult: int warmupIterations>
    public void <init>(java.lang.String, java.lang.String, long, androidx.benchmark.BenchmarkResult$Measurements, int, long, int)
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.String r1, r2;
        long l0, l2;
        androidx.benchmark.BenchmarkResult$Measurements r3;
        int i1, i3;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: androidx.benchmark.BenchmarkResult$Measurements;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        i3 := @parameter6: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "className");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "testName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "metrics");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.BenchmarkResult: java.lang.String className> = r1;

        r0.<androidx.benchmark.BenchmarkResult: java.lang.String testName> = r2;

        r0.<androidx.benchmark.BenchmarkResult: long totalRunTimeNs> = l0;

        r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics> = r3;

        r0.<androidx.benchmark.BenchmarkResult: int repeatIterations> = i1;

        r0.<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds> = l2;

        r0.<androidx.benchmark.BenchmarkResult: int warmupIterations> = i3;

        return;
    }

    public final java.lang.String getClassName()
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $r1 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String className>;

        return $r1;
    }

    public final java.lang.String getTestName()
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $r1 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String testName>;

        return $r1;
    }

    public final long getTotalRunTimeNs()
    {
        androidx.benchmark.BenchmarkResult r0;
        long $l0;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $l0 = r0.<androidx.benchmark.BenchmarkResult: long totalRunTimeNs>;

        return $l0;
    }

    public final androidx.benchmark.BenchmarkResult$Measurements getMetrics()
    {
        androidx.benchmark.BenchmarkResult r0;
        androidx.benchmark.BenchmarkResult$Measurements $r1;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $r1 = r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>;

        return $r1;
    }

    public final int getRepeatIterations()
    {
        androidx.benchmark.BenchmarkResult r0;
        int $i0;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $i0 = r0.<androidx.benchmark.BenchmarkResult: int repeatIterations>;

        return $i0;
    }

    public final long getThermalThrottleSleepSeconds()
    {
        androidx.benchmark.BenchmarkResult r0;
        long $l0;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $l0 = r0.<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds>;

        return $l0;
    }

    public final int getWarmupIterations()
    {
        androidx.benchmark.BenchmarkResult r0;
        int $i0;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $i0 = r0.<androidx.benchmark.BenchmarkResult: int warmupIterations>;

        return $i0;
    }

    public void <init>(java.lang.String, java.lang.String, long, java.util.List, int, long, int)
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.String r1, r2;
        long l0, l2;
        java.util.List r3, $r5;
        int i1, i3;
        androidx.benchmark.BenchmarkResult$Measurements $r4;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        i3 := @parameter6: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "className");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "testName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "metrics");

        $r4 = new androidx.benchmark.BenchmarkResult$Measurements;

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke $r4.<androidx.benchmark.BenchmarkResult$Measurements: void <init>(java.util.List,java.util.List)>(r3, $r5);

        specialinvoke r0.<androidx.benchmark.BenchmarkResult: void <init>(java.lang.String,java.lang.String,long,androidx.benchmark.BenchmarkResult$Measurements,int,long,int)>(r1, r2, l0, $r4, i1, l2, i3);

        return;
    }

    public final androidx.benchmark.MetricResult getMetricResult(java.lang.String)
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.String r1, $r9;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.benchmark.MetricResult r5, r11;
        androidx.benchmark.BenchmarkResult$Measurements $r6;
        java.util.List $r7;
        boolean $z2, $z3;
        java.util.NoSuchElementException r10;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "which");

        $r6 = r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>;

        $r7 = virtualinvoke $r6.<androidx.benchmark.BenchmarkResult$Measurements: java.util.List getSingleMetrics()>();

        $r2 = (java.lang.Iterable) $r7;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.benchmark.MetricResult) r4;

        $r9 = virtualinvoke r5.<androidx.benchmark.MetricResult: java.lang.String getName()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, r1);

        if $z3 == 0 goto label1;

        r11 = (androidx.benchmark.MetricResult) r4;

        return r11;

     label2:
        r10 = new java.util.NoSuchElementException;

        specialinvoke r10.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection contains no element matching the predicate.");

        throw r10;
    }

    public final java.lang.String component1()
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $r1 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String className>;

        return $r1;
    }

    public final java.lang.String component2()
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $r1 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String testName>;

        return $r1;
    }

    public final long component3()
    {
        androidx.benchmark.BenchmarkResult r0;
        long $l0;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $l0 = r0.<androidx.benchmark.BenchmarkResult: long totalRunTimeNs>;

        return $l0;
    }

    public final androidx.benchmark.BenchmarkResult$Measurements component4()
    {
        androidx.benchmark.BenchmarkResult r0;
        androidx.benchmark.BenchmarkResult$Measurements $r1;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $r1 = r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>;

        return $r1;
    }

    public final int component5()
    {
        androidx.benchmark.BenchmarkResult r0;
        int $i0;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $i0 = r0.<androidx.benchmark.BenchmarkResult: int repeatIterations>;

        return $i0;
    }

    public final long component6()
    {
        androidx.benchmark.BenchmarkResult r0;
        long $l0;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $l0 = r0.<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds>;

        return $l0;
    }

    public final int component7()
    {
        androidx.benchmark.BenchmarkResult r0;
        int $i0;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $i0 = r0.<androidx.benchmark.BenchmarkResult: int warmupIterations>;

        return $i0;
    }

    public final androidx.benchmark.BenchmarkResult copy(java.lang.String, java.lang.String, long, androidx.benchmark.BenchmarkResult$Measurements, int, long, int)
    {
        androidx.benchmark.BenchmarkResult r0, $r4;
        java.lang.String r1, r2;
        long l0, l2;
        androidx.benchmark.BenchmarkResult$Measurements r3;
        int i1, i3;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: androidx.benchmark.BenchmarkResult$Measurements;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        i3 := @parameter6: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "className");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "testName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "metrics");

        $r4 = new androidx.benchmark.BenchmarkResult;

        specialinvoke $r4.<androidx.benchmark.BenchmarkResult: void <init>(java.lang.String,java.lang.String,long,androidx.benchmark.BenchmarkResult$Measurements,int,long,int)>(r1, r2, l0, r3, i1, l2, i3);

        return $r4;
    }

    public static androidx.benchmark.BenchmarkResult copy$default(androidx.benchmark.BenchmarkResult, java.lang.String, java.lang.String, long, androidx.benchmark.BenchmarkResult$Measurements, int, long, int, int, java.lang.Object)
    {
        androidx.benchmark.BenchmarkResult r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, i11;
        java.lang.Object r1;
        java.lang.String r3, r4;
        long l8, l10;
        androidx.benchmark.BenchmarkResult$Measurements r5;

        r0 := @parameter0: androidx.benchmark.BenchmarkResult;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        l8 := @parameter3: long;

        r5 := @parameter4: androidx.benchmark.BenchmarkResult$Measurements;

        i9 := @parameter5: int;

        l10 := @parameter6: long;

        i11 := @parameter7: int;

        i0 := @parameter8: int;

        r1 := @parameter9: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String className>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String testName>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        l8 = r0.<androidx.benchmark.BenchmarkResult: long totalRunTimeNs>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        i9 = r0.<androidx.benchmark.BenchmarkResult: int repeatIterations>;

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        l10 = r0.<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds>;

     label6:
        $i7 = i0 & 64;

        if $i7 == 0 goto label7;

        i11 = r0.<androidx.benchmark.BenchmarkResult: int warmupIterations>;

     label7:
        $r2 = virtualinvoke r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult copy(java.lang.String,java.lang.String,long,androidx.benchmark.BenchmarkResult$Measurements,int,long,int)>(r3, r4, l8, r5, i9, l10, i11);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.String $r3, $r6, $r20;
        long $l0, $l2;
        androidx.benchmark.BenchmarkResult$Measurements $r11;
        int $i1, $i3;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BenchmarkResult(className=");

        $r3 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String className>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", testName=");

        $r6 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String testName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", totalRunTimeNs=");

        $l0 = r0.<androidx.benchmark.BenchmarkResult: long totalRunTimeNs>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metrics=");

        $r11 = r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", repeatIterations=");

        $i1 = r0.<androidx.benchmark.BenchmarkResult: int repeatIterations>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", thermalThrottleSleepSeconds=");

        $l2 = r0.<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", warmupIterations=");

        $i3 = r0.<androidx.benchmark.BenchmarkResult: int warmupIterations>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public int hashCode()
    {
        androidx.benchmark.BenchmarkResult r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, i22;
        long $l2, $l10;
        androidx.benchmark.BenchmarkResult$Measurements $r3;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        $r1 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String className>;

        i16 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = i16 * 31;

        $r2 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String testName>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        i17 = $i0 + $i1;

        $i3 = i17 * 31;

        $l2 = r0.<androidx.benchmark.BenchmarkResult: long totalRunTimeNs>;

        $i4 = staticinvoke <java.lang.Long: int hashCode(long)>($l2);

        i18 = $i3 + $i4;

        $i5 = i18 * 31;

        $r3 = r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>;

        $i6 = virtualinvoke $r3.<androidx.benchmark.BenchmarkResult$Measurements: int hashCode()>();

        i19 = $i5 + $i6;

        $i8 = i19 * 31;

        $i7 = r0.<androidx.benchmark.BenchmarkResult: int repeatIterations>;

        $i9 = staticinvoke <java.lang.Integer: int hashCode(int)>($i7);

        i20 = $i8 + $i9;

        $i11 = i20 * 31;

        $l10 = r0.<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds>;

        $i12 = staticinvoke <java.lang.Long: int hashCode(long)>($l10);

        i21 = $i11 + $i12;

        $i14 = i21 * 31;

        $i13 = r0.<androidx.benchmark.BenchmarkResult: int warmupIterations>;

        $i15 = staticinvoke <java.lang.Integer: int hashCode(int)>($i13);

        i22 = $i14 + $i15;

        return i22;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.benchmark.BenchmarkResult r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r4, $r5, $r6;
        long $l0, $l1, $l5, $l6;
        byte $b2, $b7;
        androidx.benchmark.BenchmarkResult$Measurements $r7, $r8;
        int $i3, $i4, $i8, $i9;

        r0 := @this: androidx.benchmark.BenchmarkResult;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.benchmark.BenchmarkResult;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.benchmark.BenchmarkResult) r1;

        $r4 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String className>;

        $r3 = r2.<androidx.benchmark.BenchmarkResult: java.lang.String className>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<androidx.benchmark.BenchmarkResult: java.lang.String testName>;

        $r5 = r2.<androidx.benchmark.BenchmarkResult: java.lang.String testName>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $l1 = r0.<androidx.benchmark.BenchmarkResult: long totalRunTimeNs>;

        $l0 = r2.<androidx.benchmark.BenchmarkResult: long totalRunTimeNs>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>;

        $r7 = r2.<androidx.benchmark.BenchmarkResult: androidx.benchmark.BenchmarkResult$Measurements metrics>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        $i4 = r0.<androidx.benchmark.BenchmarkResult: int repeatIterations>;

        $i3 = r2.<androidx.benchmark.BenchmarkResult: int repeatIterations>;

        if $i4 == $i3 goto label7;

        return 0;

     label7:
        $l6 = r0.<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds>;

        $l5 = r2.<androidx.benchmark.BenchmarkResult: long thermalThrottleSleepSeconds>;

        $b7 = $l6 cmp $l5;

        if $b7 == 0 goto label8;

        return 0;

     label8:
        $i9 = r0.<androidx.benchmark.BenchmarkResult: int warmupIterations>;

        $i8 = r2.<androidx.benchmark.BenchmarkResult: int warmupIterations>;

        if $i9 == $i8 goto label9;

        return 0;

     label9:
        return 1;
    }

