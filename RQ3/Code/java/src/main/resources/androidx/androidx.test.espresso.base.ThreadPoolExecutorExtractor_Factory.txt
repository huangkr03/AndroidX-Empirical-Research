androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory
<androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory: javax.inject.Provider looperProvider>
    public androidx.test.espresso.base.ThreadPoolExecutorExtractor get()
    {
        androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory r0;
        javax.inject.Provider $r1;
        java.lang.Object $r2;
        android.os.Looper $r3;
        androidx.test.espresso.base.ThreadPoolExecutorExtractor $r4;

        r0 := @this: androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory;

        $r1 = r0.<androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory: javax.inject.Provider looperProvider>;

        $r2 = interfaceinvoke $r1.<javax.inject.Provider: java.lang.Object get()>();

        $r3 = (android.os.Looper) $r2;

        $r4 = staticinvoke <androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory: androidx.test.espresso.base.ThreadPoolExecutorExtractor newInstance(android.os.Looper)>($r3);

        return $r4;
    }

    public static androidx.test.espresso.base.ThreadPoolExecutorExtractor newInstance(android.os.Looper)
    {
        android.os.Looper r0;
        androidx.test.espresso.base.ThreadPoolExecutorExtractor r1;

        r0 := @parameter0: android.os.Looper;

        r1 = new androidx.test.espresso.base.ThreadPoolExecutorExtractor;

        specialinvoke r1.<androidx.test.espresso.base.ThreadPoolExecutorExtractor: void <init>(android.os.Looper)>(r0);

        return r1;
    }

    public static androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory create(javax.inject.Provider)
    {
        javax.inject.Provider r0;
        androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory r1;

        r0 := @parameter0: javax.inject.Provider;

        r1 = new androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory;

        specialinvoke r1.<androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory: void <init>(javax.inject.Provider)>(r0);

        return r1;
    }

    public volatile java.lang.Object get()
    {
        androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory r0;
        androidx.test.espresso.base.ThreadPoolExecutorExtractor $r1;

        r0 := @this: androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory;

        $r1 = virtualinvoke r0.<androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory: androidx.test.espresso.base.ThreadPoolExecutorExtractor get()>();

        return $r1;
    }

    public void <init>(javax.inject.Provider)
    {
        androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory r0;
        javax.inject.Provider r1;

        r0 := @this: androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory;

        r1 := @parameter0: javax.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory: javax.inject.Provider looperProvider> = r1;

        return;
    }

