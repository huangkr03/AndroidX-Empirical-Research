androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl
    void <init>(android.hardware.camera2.CameraDevice, java.lang.Object)
    {
        androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl r0;
        android.hardware.camera2.CameraDevice r1;
        java.lang.Object r2;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl: void <init>(android.hardware.camera2.CameraDevice,java.lang.Object)>(r1, r2);

        return;
    }

    static androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl create(android.hardware.camera2.CameraDevice, android.os.Handler)
    {
        android.hardware.camera2.CameraDevice r0;
        android.os.Handler r1;
        androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl $r2;
        androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl$CameraDeviceCompatParamsApi21 $r3;

        r0 := @parameter0: android.hardware.camera2.CameraDevice;

        r1 := @parameter1: android.os.Handler;

        $r2 = new androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl;

        $r3 = new androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl$CameraDeviceCompatParamsApi21;

        specialinvoke $r3.<androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl$CameraDeviceCompatParamsApi21: void <init>(android.os.Handler)>(r1);

        specialinvoke $r2.<androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: void <init>(android.hardware.camera2.CameraDevice,java.lang.Object)>(r0, $r3);

        return $r2;
    }

    public void createCaptureSession(androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl r0;
        androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat r1;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper r2, r24;
        java.util.List r3, $r11;
        androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl$CameraDeviceCompatParamsApi21 r4, $r14;
        android.os.Handler r5;
        androidx.camera.camera2.internal.compat.params.InputConfigurationCompat r6;
        android.hardware.camera2.CameraDevice $r7, $r15, $r16, $r19;
        java.util.concurrent.Executor $r9;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r10;
        java.lang.Object $r12, $r13, $r17;
        int $i0;
        java.lang.Throwable $r20, r23, r25;
        androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat $r21;
        android.hardware.camera2.params.InputConfiguration r22;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl;

        r1 := @parameter0: androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat;

        $r7 = r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: android.hardware.camera2.CameraDevice mCameraDevice>;

        staticinvoke <androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: void checkPreconditions(android.hardware.camera2.CameraDevice,androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat)>($r7, r1);

        r24 = new androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper;

        $r9 = virtualinvoke r1.<androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat: java.util.concurrent.Executor getExecutor()>();

        $r10 = virtualinvoke r1.<androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat: android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback()>();

        specialinvoke r24.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper: void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$StateCallback)>($r9, $r10);

        r2 = r24;

        $r11 = virtualinvoke r1.<androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat: java.util.List getOutputConfigurations()>();

        r3 = staticinvoke <androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: java.util.List unpackSurfaces(java.util.List)>($r11);

        $r12 = r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: java.lang.Object mImplParams>;

        r4 = (androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl$CameraDeviceCompatParamsApi21) $r12;

        $r13 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r14 = (androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl$CameraDeviceCompatParamsApi21) $r13;

        r5 = $r14.<androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl$CameraDeviceCompatParamsApi21: android.os.Handler mCompatHandler>;

        r6 = virtualinvoke r1.<androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat: androidx.camera.camera2.internal.compat.params.InputConfigurationCompat getInputConfiguration()>();

     label1:
        if r6 == null goto label2;

        $r17 = virtualinvoke r6.<androidx.camera.camera2.internal.compat.params.InputConfigurationCompat: java.lang.Object unwrap()>();

        r22 = (android.hardware.camera2.params.InputConfiguration) $r17;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r22);

        $r19 = r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: android.hardware.camera2.CameraDevice mCameraDevice>;

        virtualinvoke $r19.<android.hardware.camera2.CameraDevice: void createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration,java.util.List,android.hardware.camera2.CameraCaptureSession$StateCallback,android.os.Handler)>(r22, r3, r2, r5);

        goto label4;

     label2:
        $i0 = virtualinvoke r1.<androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat: int getSessionType()>();

        if $i0 != 1 goto label3;

        $r16 = r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: android.hardware.camera2.CameraDevice mCameraDevice>;

        virtualinvoke $r16.<android.hardware.camera2.CameraDevice: void createConstrainedHighSpeedCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession$StateCallback,android.os.Handler)>(r3, r2, r5);

        goto label4;

     label3:
        $r15 = r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: android.hardware.camera2.CameraDevice mCameraDevice>;

        virtualinvoke r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: void createBaseCaptureSession(android.hardware.camera2.CameraDevice,java.util.List,android.hardware.camera2.CameraCaptureSession$StateCallback,android.os.Handler)>($r15, r3, r2, r5);

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

        r23 = $r20;

        $r21 = staticinvoke <androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat: androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat toCameraAccessExceptionCompat(android.hardware.camera2.CameraAccessException)>(r23);

        r25 = (java.lang.Throwable) $r21;

        throw r25;

     label6:
        return;

        catch android.hardware.camera2.CameraAccessException from label1 to label4 with label5;
    }

