androidx.loader.app.LoaderManagerImpl
<androidx.loader.app.LoaderManagerImpl: java.lang.String TAG>
<androidx.loader.app.LoaderManagerImpl: boolean DEBUG>
<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>
<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>
    void <init>(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.ViewModelStore)
    {
        androidx.loader.app.LoaderManagerImpl r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.ViewModelStore r2;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r3;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.ViewModelStore;

        specialinvoke r0.<androidx.loader.app.LoaderManager: void <init>()>();

        r0.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner> = r1;

        $r3 = staticinvoke <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>(r2);

        r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel> = $r3;

        return;
    }

    private androidx.loader.content.Loader createAndInstallLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks, androidx.loader.content.Loader)
    {
        androidx.loader.app.LoaderManagerImpl r0;
        int i0, $i2;
        android.os.Bundle r1;
        androidx.loader.app.LoaderManager$LoaderCallbacks r2;
        androidx.loader.content.Loader r3, r5, $r13;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r4, $r9;
        java.lang.Throwable r6, $r25;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r7, $r10, $r11, $r26;
        java.lang.Class $r8, $r18;
        boolean $z0, $z1, $z2;
        androidx.lifecycle.LifecycleOwner $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r20, $r21, $r22;
        java.lang.String $r17, $r23;
        java.lang.IllegalArgumentException $r19, $r24;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        r3 := @parameter3: androidx.loader.content.Loader;

     label1:
        $r7 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r7.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void startCreatingLoader()>();

        r5 = interfaceinvoke r2.<androidx.loader.app.LoaderManager$LoaderCallbacks: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)>(i0, r1);

        if r5 != null goto label2;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Object returned from onCreateLoader must not be null");

        throw $r24;

     label2:
        $r8 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isMemberClass()>();

        if $z0 == 0 goto label3;

        $r18 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $i2 = virtualinvoke $r18.<java.lang.Class: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);

        if $z2 != 0 goto label3;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object returned from onCreateLoader must not be a non-static inner member class: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label3:
        $r9 = new androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        specialinvoke $r9.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)>(i0, r1, r5, r3);

        r4 = $r9;

        $z1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label4;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Created new loader ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r17);

     label4:
        $r10 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r10.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)>(i0, r4);

     label5:
        $r11 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r11.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void finishCreatingLoader()>();

        goto label8;

     label6:
        $r25 := @caughtexception;

        r6 = $r25;

     label7:
        $r26 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r26.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void finishCreatingLoader()>();

        throw r6;

     label8:
        $r12 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        $r13 = virtualinvoke r4.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)>($r12, r2);

        return $r13;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public androidx.loader.content.Loader initLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks)
    {
        androidx.loader.app.LoaderManagerImpl r0;
        int i0;
        android.os.Bundle r1;
        androidx.loader.app.LoaderManager$LoaderCallbacks r2;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r3;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r4, $r7;
        boolean $z0, $z1, $z2;
        android.os.Looper $r5, $r6;
        androidx.lifecycle.LifecycleOwner $r8;
        androidx.loader.content.Loader $r9, $r14;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19;
        java.lang.String $r13, $r20;
        java.lang.IllegalStateException $r21, $r22;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        $r4 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r4.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $z0 == 0 goto label1;

        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r22;

     label1:
        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r5 == $r6 goto label2;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("initLoader must be called on the main thread");

        throw $r21;

     label2:
        $r7 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        r3 = virtualinvoke $r7.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>(i0);

        $z1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initLoader in ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": args=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r20);

     label3:
        if r3 != null goto label4;

        $r14 = specialinvoke r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)>(i0, r1, r2, null);

        return $r14;

     label4:
        $z2 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Re-using existing loader ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r13);

     label5:
        $r8 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        $r9 = virtualinvoke r3.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)>($r8, r2);

        return $r9;
    }

    public androidx.loader.content.Loader restartLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks)
    {
        androidx.loader.app.LoaderManagerImpl r0;
        int i0;
        android.os.Bundle r1;
        androidx.loader.app.LoaderManager$LoaderCallbacks r2;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r3;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r4, $r7;
        boolean $z0, $z1;
        android.os.Looper $r5, $r6;
        androidx.loader.content.Loader $r8, r17;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        java.lang.IllegalStateException $r15, $r16;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        $r4 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r4.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $z0 == 0 goto label1;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r16;

     label1:
        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r5 == $r6 goto label2;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("restartLoader must be called on the main thread");

        throw $r15;

     label2:
        $z1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restartLoader in ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": args=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r14);

     label3:
        $r7 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        r3 = virtualinvoke $r7.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>(i0);

        r17 = null;

        if r3 == null goto label4;

        r17 = virtualinvoke r3.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)>(0);

     label4:
        $r8 = specialinvoke r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)>(i0, r1, r2, r17);

        return $r8;
    }

    public void destroyLoader(int)
    {
        androidx.loader.app.LoaderManagerImpl r0;
        int i0;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r1;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r2, $r5, $r7;
        boolean $z0, $z1;
        android.os.Looper $r3, $r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r13;
        java.lang.IllegalStateException $r14, $r15;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r2.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $z0 == 0 goto label1;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r15;

     label1:
        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r3 == $r4 goto label2;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("destroyLoader must be called on the main thread");

        throw $r14;

     label2:
        $z1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroyLoader in ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r13);

     label3:
        $r5 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        r1 = virtualinvoke $r5.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>(i0);

        if r1 == null goto label4;

        virtualinvoke r1.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)>(1);

        $r7 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r7.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void removeLoader(int)>(i0);

     label4:
        return;
    }

    public androidx.loader.content.Loader getLoader(int)
    {
        androidx.loader.app.LoaderManagerImpl r0;
        int i0;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r1;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        androidx.loader.content.Loader $r5;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r2.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r4;

     label1:
        $r3 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        r1 = virtualinvoke $r3.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>(i0);

        if r1 == null goto label2;

        $r5 = virtualinvoke r1.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        return $r5;
    }

    public void markForRedelivery()
    {
        androidx.loader.app.LoaderManagerImpl r0;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r1;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $r1 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()>();

        return;
    }

    public java.lang.String toString()
    {
        androidx.loader.app.LoaderManagerImpl r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.Class r2;
        int $i0, $i1;
        java.lang.String $r5, $r9, $r12, $r15;
        androidx.lifecycle.LifecycleOwner $r8;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LoaderManager{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r8 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        r2 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.loader.app.LoaderManagerImpl r0;
        java.lang.String r1;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r5;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        $r5 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r5.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        return;
    }

    public boolean hasRunningLoaders()
    {
        androidx.loader.app.LoaderManagerImpl r0;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r1;
        boolean $z0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $r1 = r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean hasRunningLoaders()>();

        return $z0;
    }

    static void <clinit>()
    {
        <androidx.loader.app.LoaderManagerImpl: boolean DEBUG> = 0;

        return;
    }

androidx.loader.app.LoaderManagerImpl$LoaderInfo
<androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId>
<androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs>
<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>
<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner>
<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>
<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader>
    void <init>(int, android.os.Bundle, androidx.loader.content.Loader, androidx.loader.content.Loader)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        int i0;
        android.os.Bundle r1;
        androidx.loader.content.Loader r2, r3, $r4;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.loader.content.Loader;

        r3 := @parameter3: androidx.loader.content.Loader;

        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId> = i0;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs> = r1;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader> = r2;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader> = r3;

        $r4 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        virtualinvoke $r4.<androidx.loader.content.Loader: void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)>(i0, r0);

        return;
    }

    androidx.loader.content.Loader getLoader()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        androidx.loader.content.Loader $r1;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        $r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        return $r1;
    }

    protected void onActive()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        boolean $z0;
        androidx.loader.content.Loader $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Starting: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r5);

     label1:
        $r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        virtualinvoke $r1.<androidx.loader.content.Loader: void startLoading()>();

        return;
    }

    protected void onInactive()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        boolean $z0;
        androidx.loader.content.Loader $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Stopping: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r5);

     label1:
        $r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        virtualinvoke $r1.<androidx.loader.content.Loader: void stopLoading()>();

        return;
    }

    androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner, androidx.loader.app.LoaderManager$LoaderCallbacks)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.loader.app.LoaderManager$LoaderCallbacks r2;
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r3, $r4, $r6, $r8;
        androidx.loader.content.Loader $r5, $r7;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.loader.app.LoaderManager$LoaderCallbacks;

        $r4 = new androidx.loader.app.LoaderManagerImpl$LoaderObserver;

        $r5 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        specialinvoke $r4.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)>($r5, r2);

        r3 = $r4;

        virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>(r1, r3);

        $r6 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        if $r6 == null goto label1;

        $r8 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>($r8);

     label1:
        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner> = r1;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver> = r3;

        $r7 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        return $r7;
    }

    void markForRedelivery()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r2;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        if r1 == null goto label1;

        if r2 == null goto label1;

        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void removeObserver(androidx.lifecycle.Observer)>(r2);

        virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>(r1, r2);

     label1:
        return;
    }

    boolean isCallbackWaitingForData()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        boolean $z0, $z1, $z2;
        androidx.loader.app.LoaderManagerImpl$LoaderObserver $r1, $r2;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        $z0 = virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: boolean hasActiveObservers()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        if $r1 == null goto label2;

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        $z1 = virtualinvoke $r2.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean hasDeliveredData()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void removeObserver(androidx.lifecycle.Observer)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        androidx.lifecycle.Observer r1;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        r1 := @parameter0: androidx.lifecycle.Observer;

        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void removeObserver(androidx.lifecycle.Observer)>(r1);

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner> = null;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver> = null;

        return;
    }

    androidx.loader.content.Loader destroy(boolean)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        boolean z0, $z1, $z3;
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r1;
        androidx.loader.content.Loader $r2, $r3, $r4, $r5, $r6, $r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        z0 := @parameter0: boolean;

        $z1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Destroying: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r10);

     label1:
        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        virtualinvoke $r2.<androidx.loader.content.Loader: boolean cancelLoad()>();

        $r3 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        virtualinvoke $r3.<androidx.loader.content.Loader: void abandon()>();

        r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        if r1 == null goto label2;

        virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>(r1);

        if z0 == 0 goto label2;

        virtualinvoke r1.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: void reset()>();

     label2:
        $r11 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        virtualinvoke $r11.<androidx.loader.content.Loader: void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener)>(r0);

        if r1 == null goto label3;

        $z3 = virtualinvoke r1.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean hasDeliveredData()>();

        if $z3 == 0 goto label4;

     label3:
        if z0 == 0 goto label5;

     label4:
        $r5 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        virtualinvoke $r5.<androidx.loader.content.Loader: void reset()>();

        $r6 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader>;

        return $r6;

     label5:
        $r4 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        return $r4;
    }

    public void onLoadComplete(androidx.loader.content.Loader, java.lang.Object)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        androidx.loader.content.Loader r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        android.os.Looper $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        r1 := @parameter0: androidx.loader.content.Loader;

        r2 := @parameter1: java.lang.Object;

        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onLoadComplete: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r8);

     label1:
        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r3 != $r4 goto label2;

        virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)>(r2);

        goto label4;

     label2:
        $z1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LoaderManager", "onLoadComplete was incorrectly called on a background thread");

     label3:
        virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void postValue(java.lang.Object)>(r2);

     label4:
        return;
    }

    public void setValue(java.lang.Object)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        java.lang.Object r1;
        androidx.loader.content.Loader $r2, $r3;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(r1);

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader>;

        virtualinvoke $r3.<androidx.loader.content.Loader: void reset()>();

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader> = null;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.Class r2;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r11, $r14, $r17;
        androidx.loader.content.Loader $r10;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(64);

        r1 = $r3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LoaderInfo{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $i1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r10 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        r2 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r0;
        java.lang.String r1, $r11, $r15, $r21;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        int $i0;
        android.os.Bundle $r5;
        androidx.loader.content.Loader $r6, $r8, $r13;
        java.lang.StringBuilder $r7, $r9, $r10, $r17, $r19, $r20;
        androidx.loader.app.LoaderManagerImpl$LoaderObserver $r12, $r16, $r18;
        java.lang.Object $r14;
        boolean $z0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mId=");

        $i0 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mArgs=");

        $r5 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mLoader=");

        $r6 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

        $r8 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<androidx.loader.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r11, r2, r3, r4);

        $r12 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        if $r12 == null goto label1;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mCallbacks=");

        $r16 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r16);

        $r18 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: void dump(java.lang.String,java.io.PrintWriter)>($r21, r3);

     label1:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mData=");

        $r13 = virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()>();

        $r14 = virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.Object getValue()>();

        $r15 = virtualinvoke $r13.<androidx.loader.content.Loader: java.lang.String dataToString(java.lang.Object)>($r14);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mStarted=");

        $z0 = virtualinvoke r0.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: boolean hasActiveObservers()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z0);

        return;
    }

androidx.loader.app.LoaderManagerImpl$LoaderObserver
<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader>
<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.app.LoaderManager$LoaderCallbacks mCallback>
<androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean mDeliveredData>
    void <init>(androidx.loader.content.Loader, androidx.loader.app.LoaderManager$LoaderCallbacks)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r0;
        androidx.loader.content.Loader r1;
        androidx.loader.app.LoaderManager$LoaderCallbacks r2;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderObserver;

        r1 := @parameter0: androidx.loader.content.Loader;

        r2 := @parameter1: androidx.loader.app.LoaderManager$LoaderCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean mDeliveredData> = 0;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader> = r1;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.app.LoaderManager$LoaderCallbacks mCallback> = r2;

        return;
    }

    public void onChanged(java.lang.Object)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r0;
        java.lang.Object r1;
        boolean $z0;
        androidx.loader.content.Loader $r2, $r6, $r9;
        androidx.loader.app.LoaderManager$LoaderCallbacks $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderObserver;

        r1 := @parameter0: java.lang.Object;

        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  onLoadFinished in ");

        $r6 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader>;

        $r10 = virtualinvoke $r9.<androidx.loader.content.Loader: java.lang.String dataToString(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r12);

     label1:
        r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean mDeliveredData> = 1;

        $r3 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.app.LoaderManager$LoaderCallbacks mCallback>;

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader>;

        interfaceinvoke $r3.<androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>($r2, r1);

        return;
    }

    boolean hasDeliveredData()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r0;
        boolean $z0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderObserver;

        $z0 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean mDeliveredData>;

        return $z0;
    }

    void reset()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r0;
        boolean $z0, $z1;
        androidx.loader.content.Loader $r1, $r5;
        androidx.loader.app.LoaderManager$LoaderCallbacks $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r7;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderObserver;

        $z0 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean mDeliveredData>;

        if $z0 == 0 goto label2;

        $z1 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Resetting: ");

        $r5 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r7);

     label1:
        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.app.LoaderManager$LoaderCallbacks mCallback>;

        $r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader>;

        interfaceinvoke $r2.<androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoaderReset(androidx.loader.content.Loader)>($r1);

     label2:
        return;
    }

    public java.lang.String toString()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r0;
        androidx.loader.app.LoaderManager$LoaderCallbacks $r1;
        java.lang.String $r2;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderObserver;

        $r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.app.LoaderManager$LoaderCallbacks mCallback>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderObserver r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        boolean $z0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderObserver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mDeliveredData=");

        $z0 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean mDeliveredData>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        return;
    }

androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1
    void <init>()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 r0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.lifecycle.ViewModel create(java.lang.Class)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 r0;
        java.lang.Class r1;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r2;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1;

        r1 := @parameter0: java.lang.Class;

        $r2 = new androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        specialinvoke $r2.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void <init>()>();

        return $r2;
    }

androidx.loader.app.LoaderManagerImpl$LoaderViewModel
<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY>
<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>
<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader>
    void <init>()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        androidx.collection.SparseArrayCompat $r1;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        specialinvoke r0.<androidx.lifecycle.ViewModel: void <init>()>();

        $r1 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r1.<androidx.collection.SparseArrayCompat: void <init>()>();

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders> = $r1;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader> = 0;

        return;
    }

    static androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
    {
        androidx.lifecycle.ViewModelStore r0;
        androidx.lifecycle.ViewModelProvider $r1;
        androidx.lifecycle.ViewModelProvider$Factory $r2;
        androidx.lifecycle.ViewModel $r3;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r4;

        r0 := @parameter0: androidx.lifecycle.ViewModelStore;

        $r1 = new androidx.lifecycle.ViewModelProvider;

        $r2 = <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY>;

        specialinvoke $r1.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>(r0, $r2);

        $r3 = virtualinvoke $r1.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>(class "Landroidx/loader/app/LoaderManagerImpl$LoaderViewModel;");

        $r4 = (androidx.loader.app.LoaderManagerImpl$LoaderViewModel) $r3;

        return $r4;
    }

    void startCreatingLoader()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader> = 1;

        return;
    }

    boolean isCreatingLoader()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        boolean $z0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        $z0 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader>;

        return $z0;
    }

    void finishCreatingLoader()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader> = 0;

        return;
    }

    void putLoader(int, androidx.loader.app.LoaderManagerImpl$LoaderInfo)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        int i0;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r1;
        androidx.collection.SparseArrayCompat $r2;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        virtualinvoke $r2.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>(i0, r1);

        return;
    }

    androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        int i0;
        androidx.collection.SparseArrayCompat $r1;
        java.lang.Object $r2;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $r3;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        $r2 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i0);

        $r3 = (androidx.loader.app.LoaderManagerImpl$LoaderInfo) $r2;

        return $r3;
    }

    void removeLoader(int)
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        int i0;
        androidx.collection.SparseArrayCompat $r1;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        virtualinvoke $r1.<androidx.collection.SparseArrayCompat: void remove(int)>(i0);

        return;
    }

    boolean hasRunningLoaders()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        int i0, i1;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r1;
        androidx.collection.SparseArrayCompat $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        i0 = virtualinvoke $r2.<androidx.collection.SparseArrayCompat: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        $r4 = virtualinvoke $r3.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>(i1);

        r1 = (androidx.loader.app.LoaderManagerImpl$LoaderInfo) $r4;

        $z0 = virtualinvoke r1.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: boolean isCallbackWaitingForData()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    void markForRedelivery()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        int i0, i1;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r1;
        androidx.collection.SparseArrayCompat $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        i0 = virtualinvoke $r2.<androidx.collection.SparseArrayCompat: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        $r4 = virtualinvoke $r3.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>(i1);

        r1 = (androidx.loader.app.LoaderManagerImpl$LoaderInfo) $r4;

        virtualinvoke r1.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void onCleared()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        int i0, i1;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r1;
        androidx.collection.SparseArrayCompat $r2, $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        specialinvoke r0.<androidx.lifecycle.ViewModel: void onCleared()>();

        $r2 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        i0 = virtualinvoke $r2.<androidx.collection.SparseArrayCompat: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        $r5 = virtualinvoke $r4.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>(i1);

        r1 = (androidx.loader.app.LoaderManagerImpl$LoaderInfo) $r5;

        virtualinvoke r1.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)>(1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        virtualinvoke $r3.<androidx.collection.SparseArrayCompat: void clear()>();

        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel r0;
        java.lang.String r1, r5, $r15;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo r6;
        androidx.collection.SparseArrayCompat $r7, $r11, $r12, $r14;
        int $i0, $i1, $i2, i3;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.Object $r13;

        r0 := @this: androidx.loader.app.LoaderManagerImpl$LoaderViewModel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        $r7 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        $i0 = virtualinvoke $r7.<androidx.collection.SparseArrayCompat: int size()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Loaders:");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        i3 = 0;

     label1:
        $r11 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        $i1 = virtualinvoke $r11.<androidx.collection.SparseArrayCompat: int size()>();

        if i3 >= $i1 goto label2;

        $r12 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        $r13 = virtualinvoke $r12.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>(i3);

        r6 = (androidx.loader.app.LoaderManagerImpl$LoaderInfo) $r13;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        $r14 = r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders>;

        $i2 = virtualinvoke $r14.<androidx.collection.SparseArrayCompat: int keyAt(int)>(i3);

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r15 = virtualinvoke r6.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r6.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r5, r2, r3, r4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 $r0;

        $r0 = new androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1;

        specialinvoke $r0.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: void <init>()>();

        <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY> = $r0;

        return;
    }

