androidx.media2.session.MediaLibrarySessionImplBase
<androidx.media2.session.MediaLibrarySessionImplBase: boolean mThrowsWhenInvalidReturn>
<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>
    void <init>(androidx.media2.session.MediaSession, android.content.Context, java.lang.String, androidx.media2.common.SessionPlayer, android.app.PendingIntent, java.util.concurrent.Executor, androidx.media2.session.MediaSession$SessionCallback, android.os.Bundle, boolean)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession r1;
        android.content.Context r2;
        java.lang.String r3;
        androidx.media2.common.SessionPlayer r4;
        android.app.PendingIntent r5;
        java.util.concurrent.Executor r6;
        androidx.media2.session.MediaSession$SessionCallback r7;
        android.os.Bundle r8;
        boolean z0;
        androidx.collection.ArrayMap $r9;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.media2.common.SessionPlayer;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: java.util.concurrent.Executor;

        r7 := @parameter6: androidx.media2.session.MediaSession$SessionCallback;

        r8 := @parameter7: android.os.Bundle;

        z0 := @parameter8: boolean;

        specialinvoke r0.<androidx.media2.session.MediaSessionImplBase: void <init>(androidx.media2.session.MediaSession,android.content.Context,java.lang.String,androidx.media2.common.SessionPlayer,android.app.PendingIntent,java.util.concurrent.Executor,androidx.media2.session.MediaSession$SessionCallback,android.os.Bundle)>(r1, r2, r3, r4, r5, r6, r7, r8);

        $r9 = new androidx.collection.ArrayMap;

        specialinvoke $r9.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions> = $r9;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase: boolean mThrowsWhenInvalidReturn> = z0;

        return;
    }

    androidx.media.MediaBrowserServiceCompat createLegacyBrowserServiceLocked(android.content.Context, androidx.media2.session.SessionToken, android.support.v4.media.session.MediaSessionCompat$Token)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        android.content.Context r1;
        androidx.media2.session.SessionToken r2;
        android.support.v4.media.session.MediaSessionCompat$Token r3;
        androidx.media2.session.MediaLibraryServiceLegacyStub $r4;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.session.SessionToken;

        r3 := @parameter2: android.support.v4.media.session.MediaSessionCompat$Token;

        $r4 = new androidx.media2.session.MediaLibraryServiceLegacyStub;

        specialinvoke $r4.<androidx.media2.session.MediaLibraryServiceLegacyStub: void <init>(android.content.Context,androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionImpl,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, r0, r3);

        return $r4;
    }

    public androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession $r1;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r2;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        $r1 = specialinvoke r0.<androidx.media2.session.MediaSessionImplBase: androidx.media2.session.MediaSession getInstance()>();

        $r2 = (androidx.media2.session.MediaLibraryService$MediaLibrarySession) $r1;

        return $r2;
    }

    public androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$SessionCallback $r1;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r2;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        $r1 = specialinvoke r0.<androidx.media2.session.MediaSessionImplBase: androidx.media2.session.MediaSession$SessionCallback getCallback()>();

        $r2 = (androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback) $r1;

        return $r2;
    }

    androidx.media2.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media.MediaBrowserServiceCompat $r1;
        androidx.media2.session.MediaLibraryServiceLegacyStub $r2;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        $r1 = specialinvoke r0.<androidx.media2.session.MediaSessionImplBase: androidx.media.MediaBrowserServiceCompat getLegacyBrowserService()>();

        $r2 = (androidx.media2.session.MediaLibraryServiceLegacyStub) $r1;

        return $r2;
    }

    public java.util.List getConnectedControllers()
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        java.util.List r1, $r4;
        androidx.media2.session.MediaLibraryServiceLegacyStub r2;
        androidx.media2.session.ConnectedControllersManager $r3;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 = specialinvoke r0.<androidx.media2.session.MediaSessionImplBase: java.util.List getConnectedControllers()>();

        r2 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()>();

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<androidx.media2.session.MediaLibraryServiceLegacyStub: androidx.media2.session.ConnectedControllersManager getConnectedControllersManager()>();

        $r4 = virtualinvoke $r3.<androidx.media2.session.ConnectedControllersManager: java.util.List getConnectedControllers()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r4);

     label1:
        return r1;
    }

    public boolean isConnected(androidx.media2.session.MediaSession$ControllerInfo)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        androidx.media2.session.MediaLibraryServiceLegacyStub r2;
        boolean $z0, $z1;
        androidx.media2.session.ConnectedControllersManager $r3;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        $z0 = specialinvoke r0.<androidx.media2.session.MediaSessionImplBase: boolean isConnected(androidx.media2.session.MediaSession$ControllerInfo)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()>();

        if r2 == null goto label2;

        $r3 = virtualinvoke r2.<androidx.media2.session.MediaLibraryServiceLegacyStub: androidx.media2.session.ConnectedControllersManager getConnectedControllersManager()>();

        $z1 = virtualinvoke $r3.<androidx.media2.session.ConnectedControllersManager: boolean isConnected(androidx.media2.session.MediaSession$ControllerInfo)>(r1);

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void notifyChildrenChanged(java.lang.String, int, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        java.lang.String r1;
        int i0;
        androidx.media2.session.MediaLibraryService$LibraryParams r2;
        androidx.media2.session.MediaLibrarySessionImplBase$1 $r3;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media2.session.MediaLibraryService$LibraryParams;

        $r3 = new androidx.media2.session.MediaLibrarySessionImplBase$1;

        specialinvoke $r3.<androidx.media2.session.MediaLibrarySessionImplBase$1: void <init>(androidx.media2.session.MediaLibrarySessionImplBase,java.lang.String,int,androidx.media2.session.MediaLibraryService$LibraryParams)>(r0, r1, i0, r2);

        virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void dispatchRemoteControllerTaskWithoutReturn(androidx.media2.session.MediaSessionImplBase$RemoteControllerTask)>($r3);

        return;
    }

    public void notifyChildrenChanged(androidx.media2.session.MediaSession$ControllerInfo, java.lang.String, int, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        androidx.media2.session.MediaLibraryService$LibraryParams r3;
        androidx.media2.session.MediaLibrarySessionImplBase$2 $r4;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media2.session.MediaLibraryService$LibraryParams;

        $r4 = new androidx.media2.session.MediaLibrarySessionImplBase$2;

        specialinvoke $r4.<androidx.media2.session.MediaLibrarySessionImplBase$2: void <init>(androidx.media2.session.MediaLibrarySessionImplBase,java.lang.String,androidx.media2.session.MediaSession$ControllerInfo,int,androidx.media2.session.MediaLibraryService$LibraryParams)>(r0, r2, r1, i0, r3);

        virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void dispatchRemoteControllerTaskWithoutReturn(androidx.media2.session.MediaSession$ControllerInfo,androidx.media2.session.MediaSessionImplBase$RemoteControllerTask)>(r1, $r4);

        return;
    }

    public void notifySearchResultChanged(androidx.media2.session.MediaSession$ControllerInfo, java.lang.String, int, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        androidx.media2.session.MediaLibraryService$LibraryParams r3;
        androidx.media2.session.MediaLibrarySessionImplBase$3 $r4;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media2.session.MediaLibraryService$LibraryParams;

        $r4 = new androidx.media2.session.MediaLibrarySessionImplBase$3;

        specialinvoke $r4.<androidx.media2.session.MediaLibrarySessionImplBase$3: void <init>(androidx.media2.session.MediaLibrarySessionImplBase,java.lang.String,int,androidx.media2.session.MediaLibraryService$LibraryParams)>(r0, r2, i0, r3);

        virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void dispatchRemoteControllerTaskWithoutReturn(androidx.media2.session.MediaSession$ControllerInfo,androidx.media2.session.MediaSessionImplBase$RemoteControllerTask)>(r1, $r4);

        return;
    }

    private androidx.media2.session.LibraryResult ensureNonNullResult(androidx.media2.session.LibraryResult)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.LibraryResult $r1, r2;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r2 := @parameter0: androidx.media2.session.LibraryResult;

        if r2 != null goto label1;

        specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void handleError(java.lang.String)>("LibraryResult shouldn\'t be null");

        $r1 = new androidx.media2.session.LibraryResult;

        specialinvoke $r1.<androidx.media2.session.LibraryResult: void <init>(int)>(-1);

        r2 = $r1;

     label1:
        return r2;
    }

    private androidx.media2.session.LibraryResult ensureNonNullResultWithValidList(androidx.media2.session.LibraryResult, int)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        int i0, $i1, $i2, $i3;
        java.util.List r1, $r8;
        java.util.Iterator r2;
        androidx.media2.common.MediaItem r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        androidx.media2.session.LibraryResult $r5, $r13, $r14, r15, r16;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r15 := @parameter0: androidx.media2.session.LibraryResult;

        i0 := @parameter1: int;

        r16 = specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.LibraryResult ensureNonNullResult(androidx.media2.session.LibraryResult)>(r15);

        $i1 = virtualinvoke r16.<androidx.media2.session.LibraryResult: int getResultCode()>();

        if $i1 != 0 goto label5;

        r1 = virtualinvoke r16.<androidx.media2.session.LibraryResult: java.util.List getMediaItems()>();

        if r1 != null goto label1;

        specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void handleError(java.lang.String)>("List shouldn\'t be null for the success");

        $r14 = new androidx.media2.session.LibraryResult;

        specialinvoke $r14.<androidx.media2.session.LibraryResult: void <init>(int)>(-1);

        return $r14;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 <= i0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List shouldn\'t contain items more than pageSize, size=");

        $r8 = virtualinvoke r16.<androidx.media2.session.LibraryResult: java.util.List getMediaItems()>();

        $i3 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pageSize");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void handleError(java.lang.String)>($r12);

        $r13 = new androidx.media2.session.LibraryResult;

        specialinvoke $r13.<androidx.media2.session.LibraryResult: void <init>(int)>(-1);

        return $r13;

     label2:
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media2.common.MediaItem) $r4;

        $z1 = specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: boolean isValidItem(androidx.media2.common.MediaItem)>(r3);

        if $z1 != 0 goto label4;

        $r5 = new androidx.media2.session.LibraryResult;

        specialinvoke $r5.<androidx.media2.session.LibraryResult: void <init>(int)>(-1);

        return $r5;

     label4:
        goto label3;

     label5:
        return r16;
    }

    private androidx.media2.session.LibraryResult ensureNonNullResultWithValidItem(androidx.media2.session.LibraryResult)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        int $i0;
        androidx.media2.common.MediaItem $r1;
        boolean $z0;
        androidx.media2.session.LibraryResult $r2, r3, r4;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r3 := @parameter0: androidx.media2.session.LibraryResult;

        r4 = specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.LibraryResult ensureNonNullResult(androidx.media2.session.LibraryResult)>(r3);

        $i0 = virtualinvoke r4.<androidx.media2.session.LibraryResult: int getResultCode()>();

        if $i0 != 0 goto label1;

        $r1 = virtualinvoke r4.<androidx.media2.session.LibraryResult: androidx.media2.common.MediaItem getMediaItem()>();

        $z0 = specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: boolean isValidItem(androidx.media2.common.MediaItem)>($r1);

        if $z0 != 0 goto label1;

        $r2 = new androidx.media2.session.LibraryResult;

        specialinvoke $r2.<androidx.media2.session.LibraryResult: void <init>(int)>(-1);

        return $r2;

     label1:
        return r4;
    }

    private boolean isValidItem(androidx.media2.common.MediaItem)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.common.MediaItem r1;
        androidx.media2.common.MediaMetadata r2;
        java.lang.String $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.common.MediaItem;

        if r1 != null goto label1;

        specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void handleError(java.lang.String)>("Item shouldn\'t be null for the success");

        return 0;

     label1:
        $r3 = virtualinvoke r1.<androidx.media2.common.MediaItem: java.lang.String getMediaId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label2;

        specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void handleError(java.lang.String)>("Media ID of an item shouldn\'t be empty for the success");

        return 0;

     label2:
        r2 = virtualinvoke r1.<androidx.media2.common.MediaItem: androidx.media2.common.MediaMetadata getMetadata()>();

        if r2 != null goto label3;

        specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void handleError(java.lang.String)>("Metadata of an item shouldn\'t be null for the success");

        return 0;

     label3:
        $z1 = virtualinvoke r2.<androidx.media2.common.MediaMetadata: boolean containsKey(java.lang.String)>("androidx.media2.metadata.BROWSABLE");

        if $z1 != 0 goto label4;

        specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void handleError(java.lang.String)>("METADATA_KEY_BROWSABLE should be specified in metadata of an item");

        return 0;

     label4:
        $z2 = virtualinvoke r2.<androidx.media2.common.MediaMetadata: boolean containsKey(java.lang.String)>("androidx.media2.metadata.PLAYABLE");

        if $z2 != 0 goto label5;

        specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: void handleError(java.lang.String)>("METADATA_KEY_PLAYABLE should be specified in metadata of an item");

        return 0;

     label5:
        return 1;
    }

    public androidx.media2.session.LibraryResult onGetLibraryRootOnExecutor(androidx.media2.session.MediaSession$ControllerInfo, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        androidx.media2.session.MediaLibraryService$LibraryParams r2;
        androidx.media2.session.LibraryResult r3, $r6;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r4;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r5;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media2.session.MediaLibraryService$LibraryParams;

        $r4 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r5 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()>();

        r3 = virtualinvoke $r4.<androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback: androidx.media2.session.LibraryResult onGetLibraryRoot(androidx.media2.session.MediaLibraryService$MediaLibrarySession,androidx.media2.session.MediaSession$ControllerInfo,androidx.media2.session.MediaLibraryService$LibraryParams)>($r5, r1, r2);

        $r6 = specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.LibraryResult ensureNonNullResultWithValidItem(androidx.media2.session.LibraryResult)>(r3);

        return $r6;
    }

    public androidx.media2.session.LibraryResult onGetItemOnExecutor(androidx.media2.session.MediaSession$ControllerInfo, java.lang.String)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        androidx.media2.session.LibraryResult r3, $r6;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r4;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r5;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r5 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()>();

        r3 = virtualinvoke $r4.<androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback: androidx.media2.session.LibraryResult onGetItem(androidx.media2.session.MediaLibraryService$MediaLibrarySession,androidx.media2.session.MediaSession$ControllerInfo,java.lang.String)>($r5, r1, r2);

        $r6 = specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.LibraryResult ensureNonNullResultWithValidItem(androidx.media2.session.LibraryResult)>(r3);

        return $r6;
    }

    public androidx.media2.session.LibraryResult onGetChildrenOnExecutor(androidx.media2.session.MediaSession$ControllerInfo, java.lang.String, int, int, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0, i1;
        androidx.media2.session.MediaLibraryService$LibraryParams r3;
        androidx.media2.session.LibraryResult r4, $r7;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r5;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r6;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: androidx.media2.session.MediaLibraryService$LibraryParams;

        $r5 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r6 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()>();

        r4 = virtualinvoke $r5.<androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback: androidx.media2.session.LibraryResult onGetChildren(androidx.media2.session.MediaLibraryService$MediaLibrarySession,androidx.media2.session.MediaSession$ControllerInfo,java.lang.String,int,int,androidx.media2.session.MediaLibraryService$LibraryParams)>($r6, r1, r2, i0, i1, r3);

        $r7 = specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.LibraryResult ensureNonNullResultWithValidList(androidx.media2.session.LibraryResult,int)>(r4, i1);

        return $r7;
    }

    public int onSubscribeOnExecutor(androidx.media2.session.MediaSession$ControllerInfo, java.lang.String, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        androidx.media2.session.MediaLibraryService$LibraryParams r3;
        java.lang.Throwable r4, r5, $r20, $r21;
        java.lang.Object $r6, $r9, $r12, r22, r23, r24;
        androidx.collection.ArrayMap $r7, $r13, $r17;
        androidx.media2.session.MediaSession$ControllerCb $r8, $r14, $r18;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r10;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r11;
        int i0;
        java.util.HashSet r25;
        java.util.Set r26;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media2.session.MediaLibraryService$LibraryParams;

        $r6 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r22 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $r8 = virtualinvoke r1.<androidx.media2.session.MediaSession$ControllerInfo: androidx.media2.session.MediaSession$ControllerCb getControllerCb()>();

        $r9 = virtualinvoke $r7.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r23 = (java.util.Set) $r9;

        if r23 != null goto label02;

        r25 = new java.util.HashSet;

        specialinvoke r25.<java.util.HashSet: void <init>()>();

        r23 = r25;

        $r17 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $r18 = virtualinvoke r1.<androidx.media2.session.MediaSession$ControllerInfo: androidx.media2.session.MediaSession$ControllerCb getControllerCb()>();

        virtualinvoke $r17.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r23);

     label02:
        r26 = (java.util.Set) r23;

        interfaceinvoke r26.<java.util.Set: boolean add(java.lang.Object)>(r2);

        exitmonitor r22;

     label03:
        goto label06;

     label04:
        $r21 := @caughtexception;

        r4 = $r21;

        exitmonitor r22;

     label05:
        throw r4;

     label06:
        $r10 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r11 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()>();

        i0 = virtualinvoke $r10.<androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback: int onSubscribe(androidx.media2.session.MediaLibraryService$MediaLibrarySession,androidx.media2.session.MediaSession$ControllerInfo,java.lang.String,androidx.media2.session.MediaLibraryService$LibraryParams)>($r11, r1, r2, r3);

        if i0 == 0 goto label11;

        $r12 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r24 = $r12;

        entermonitor $r12;

     label07:
        $r13 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $r14 = virtualinvoke r1.<androidx.media2.session.MediaSession$ControllerInfo: androidx.media2.session.MediaSession$ControllerCb getControllerCb()>();

        virtualinvoke $r13.<androidx.collection.ArrayMap: java.lang.Object remove(java.lang.Object)>($r14);

        exitmonitor r24;

     label08:
        goto label11;

     label09:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r24;

     label10:
        throw r5;

     label11:
        return i0;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public int onUnsubscribeOnExecutor(androidx.media2.session.MediaSession$ControllerInfo, java.lang.String)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        java.lang.Object r3, $r7;
        java.lang.Throwable r4, $r11;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r5;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r6;
        androidx.collection.ArrayMap $r8;
        androidx.media2.session.MediaSession$ControllerCb $r9;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        $r5 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r6 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()>();

        i0 = virtualinvoke $r5.<androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback: int onUnsubscribe(androidx.media2.session.MediaLibraryService$MediaLibrarySession,androidx.media2.session.MediaSession$ControllerInfo,java.lang.String)>($r6, r1, r2);

        $r7 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $r9 = virtualinvoke r1.<androidx.media2.session.MediaSession$ControllerInfo: androidx.media2.session.MediaSession$ControllerCb getControllerCb()>();

        virtualinvoke $r8.<androidx.collection.ArrayMap: java.lang.Object remove(java.lang.Object)>($r9);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int onSearchOnExecutor(androidx.media2.session.MediaSession$ControllerInfo, java.lang.String, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        androidx.media2.session.MediaLibraryService$LibraryParams r3;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r4;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r5;
        int $i0;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media2.session.MediaLibraryService$LibraryParams;

        $r4 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r5 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()>();

        $i0 = virtualinvoke $r4.<androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback: int onSearch(androidx.media2.session.MediaLibraryService$MediaLibrarySession,androidx.media2.session.MediaSession$ControllerInfo,java.lang.String,androidx.media2.session.MediaLibraryService$LibraryParams)>($r5, r1, r2, r3);

        return $i0;
    }

    public androidx.media2.session.LibraryResult onGetSearchResultOnExecutor(androidx.media2.session.MediaSession$ControllerInfo, java.lang.String, int, int, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        int i0, i1;
        androidx.media2.session.MediaLibraryService$LibraryParams r3;
        androidx.media2.session.LibraryResult r4, $r7;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r5;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r6;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: androidx.media2.session.MediaLibraryService$LibraryParams;

        $r5 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r6 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()>();

        r4 = virtualinvoke $r5.<androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback: androidx.media2.session.LibraryResult onGetSearchResult(androidx.media2.session.MediaLibraryService$MediaLibrarySession,androidx.media2.session.MediaSession$ControllerInfo,java.lang.String,int,int,androidx.media2.session.MediaLibraryService$LibraryParams)>($r6, r1, r2, i0, i1, r3);

        $r7 = specialinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.LibraryResult ensureNonNullResultWithValidList(androidx.media2.session.LibraryResult,int)>(r4, i1);

        return $r7;
    }

    void dispatchRemoteControllerTaskWithoutReturn(androidx.media2.session.MediaSessionImplBase$RemoteControllerTask)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSessionImplBase$RemoteControllerTask r1;
        androidx.media2.session.MediaLibraryServiceLegacyStub r2;
        java.lang.Throwable r3, $r5;
        androidx.media2.session.MediaSession$ControllerCb $r4;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSessionImplBase$RemoteControllerTask;

        specialinvoke r0.<androidx.media2.session.MediaSessionImplBase: void dispatchRemoteControllerTaskWithoutReturn(androidx.media2.session.MediaSessionImplBase$RemoteControllerTask)>(r1);

        r2 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()>();

        if r2 == null goto label4;

     label1:
        $r4 = virtualinvoke r2.<androidx.media2.session.MediaLibraryServiceLegacyStub: androidx.media2.session.MediaSession$ControllerCb getBrowserLegacyCbForBroadcast()>();

        interfaceinvoke r1.<androidx.media2.session.MediaSessionImplBase$RemoteControllerTask: void run(androidx.media2.session.MediaSession$ControllerCb,int)>($r4, 0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", "Exception in using media1 API", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean isSubscribed(androidx.media2.session.MediaSession$ControllerCb, java.lang.String)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaSession$ControllerCb r1;
        java.lang.String r2;
        java.lang.Object r3, $r6, $r8;
        java.util.Set r4;
        java.lang.Throwable r5, $r9;
        androidx.collection.ArrayMap $r7;
        boolean $z0;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerCb;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $r8 = virtualinvoke $r7.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r8;

        if r4 == null goto label2;

        $z0 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label4;

     label2:
        exitmonitor r3;

     label3:
        return 0;

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r3;

     label7:
        throw r5;

     label8:
        return 1;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void dumpSubscription()
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        java.lang.Object r1, $r5, $r15, $r19, $r21;
        java.util.Iterator r2;
        java.lang.String r3, $r10, $r17, $r25;
        java.lang.Throwable r4, $r26;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r9, $r12, $r13, $r16, $r22, $r23, $r24;
        androidx.collection.ArrayMap $r8, $r11, $r14, $r18;
        int $i0, $i2, i5;
        java.util.Set $r20;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        $z0 = <androidx.media2.session.MediaLibrarySessionImplBase: boolean DEBUG>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r5 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label02:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dumping subscription, controller sz=");

        $r8 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $i0 = virtualinvoke $r8.<androidx.collection.ArrayMap: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSImplBase", $r10);

        i5 = 0;

     label03:
        $r11 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $i2 = virtualinvoke $r11.<androidx.collection.ArrayMap: int size()>();

        if i5 >= $i2 goto label06;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  controller ");

        $r14 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $r15 = virtualinvoke $r14.<androidx.collection.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSImplBase", $r17);

        $r18 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.collection.ArrayMap mSubscriptions>;

        $r19 = virtualinvoke $r18.<androidx.collection.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r20 = (java.util.Set) $r19;

        r2 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r21 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r21;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  - ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSImplBase", $r25);

        goto label04;

     label05:
        i5 = i5 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r26 := @caughtexception;

        r4 = $r26;

        exitmonitor r1;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void handleError(java.lang.String)
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.RuntimeException $r2;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<androidx.media2.session.MediaLibrarySessionImplBase: boolean mThrowsWhenInvalidReturn>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MSImplBase", r1);

        return;
    }

    volatile androidx.media.MediaBrowserServiceCompat getLegacyBrowserService()
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaLibraryServiceLegacyStub $r1;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        $r1 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryServiceLegacyStub getLegacyBrowserService()>();

        return $r1;
    }

    public volatile androidx.media2.session.MediaSession$SessionCallback getCallback()
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback $r1;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        $r1 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        return $r1;
    }

    public volatile androidx.media2.session.MediaSession getInstance()
    {
        androidx.media2.session.MediaLibrarySessionImplBase r0;
        androidx.media2.session.MediaLibraryService$MediaLibrarySession $r1;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase;

        $r1 = virtualinvoke r0.<androidx.media2.session.MediaLibrarySessionImplBase: androidx.media2.session.MediaLibraryService$MediaLibrarySession getInstance()>();

        return $r1;
    }

androidx.media2.session.MediaLibrarySessionImplBase$1
<androidx.media2.session.MediaLibrarySessionImplBase$1: java.lang.String val$parentId>
<androidx.media2.session.MediaLibrarySessionImplBase$1: int val$itemCount>
<androidx.media2.session.MediaLibrarySessionImplBase$1: androidx.media2.session.MediaLibraryService$LibraryParams val$params>
<androidx.media2.session.MediaLibrarySessionImplBase$1: androidx.media2.session.MediaLibrarySessionImplBase this$0>
    void <init>(androidx.media2.session.MediaLibrarySessionImplBase, java.lang.String, int, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase$1 r0;
        androidx.media2.session.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        int i0;
        androidx.media2.session.MediaLibraryService$LibraryParams r3;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase$1;

        r1 := @parameter0: androidx.media2.session.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media2.session.MediaLibraryService$LibraryParams;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: androidx.media2.session.MediaLibrarySessionImplBase this$0> = r1;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: java.lang.String val$parentId> = r2;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: int val$itemCount> = i0;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: androidx.media2.session.MediaLibraryService$LibraryParams val$params> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(androidx.media2.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media2.session.MediaLibrarySessionImplBase$1 r0;
        androidx.media2.session.MediaSession$ControllerCb r1;
        int i0, $i1;
        java.lang.String $r2, $r5;
        androidx.media2.session.MediaLibrarySessionImplBase $r3;
        boolean $z0;
        androidx.media2.session.MediaLibraryService$LibraryParams $r4;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase$1;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerCb;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: androidx.media2.session.MediaLibrarySessionImplBase this$0>;

        $r2 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: java.lang.String val$parentId>;

        $z0 = virtualinvoke $r3.<androidx.media2.session.MediaLibrarySessionImplBase: boolean isSubscribed(androidx.media2.session.MediaSession$ControllerCb,java.lang.String)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: java.lang.String val$parentId>;

        $i1 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: int val$itemCount>;

        $r4 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$1: androidx.media2.session.MediaLibraryService$LibraryParams val$params>;

        virtualinvoke r1.<androidx.media2.session.MediaSession$ControllerCb: void onChildrenChanged(int,java.lang.String,int,androidx.media2.session.MediaLibraryService$LibraryParams)>(i0, $r5, $i1, $r4);

     label1:
        return;
    }

androidx.media2.session.MediaLibrarySessionImplBase$2
<androidx.media2.session.MediaLibrarySessionImplBase$2: java.lang.String val$parentId>
<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaSession$ControllerInfo val$controller>
<androidx.media2.session.MediaLibrarySessionImplBase$2: int val$itemCount>
<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaLibraryService$LibraryParams val$params>
<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaLibrarySessionImplBase this$0>
    void <init>(androidx.media2.session.MediaLibrarySessionImplBase, java.lang.String, androidx.media2.session.MediaSession$ControllerInfo, int, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase$2 r0;
        androidx.media2.session.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        androidx.media2.session.MediaSession$ControllerInfo r3;
        int i0;
        androidx.media2.session.MediaLibraryService$LibraryParams r4;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase$2;

        r1 := @parameter0: androidx.media2.session.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media2.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        r4 := @parameter4: androidx.media2.session.MediaLibraryService$LibraryParams;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaLibrarySessionImplBase this$0> = r1;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: java.lang.String val$parentId> = r2;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaSession$ControllerInfo val$controller> = r3;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: int val$itemCount> = i0;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaLibraryService$LibraryParams val$params> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(androidx.media2.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media2.session.MediaLibrarySessionImplBase$2 r0;
        androidx.media2.session.MediaSession$ControllerCb r1;
        int i0, $i1;
        java.lang.String $r2, $r5, $r11;
        androidx.media2.session.MediaLibrarySessionImplBase $r3, $r12;
        boolean $z0, $z1;
        androidx.media2.session.MediaLibraryService$LibraryParams $r4;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        androidx.media2.session.MediaSession$ControllerInfo $r8;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase$2;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerCb;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaLibrarySessionImplBase this$0>;

        $r2 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: java.lang.String val$parentId>;

        $z0 = virtualinvoke $r3.<androidx.media2.session.MediaLibrarySessionImplBase: boolean isSubscribed(androidx.media2.session.MediaSession$ControllerCb,java.lang.String)>(r1, $r2);

        if $z0 != 0 goto label2;

        $z1 = <androidx.media2.session.MediaSessionImplBase: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping notifyChildrenChanged() to ");

        $r8 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaSession$ControllerInfo val$controller>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it hasn\'t subscribed");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MSImplBase", $r11);

        $r12 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaLibrarySessionImplBase this$0>;

        virtualinvoke $r12.<androidx.media2.session.MediaLibrarySessionImplBase: void dumpSubscription()>();

     label1:
        return;

     label2:
        $r5 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: java.lang.String val$parentId>;

        $i1 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: int val$itemCount>;

        $r4 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$2: androidx.media2.session.MediaLibraryService$LibraryParams val$params>;

        virtualinvoke r1.<androidx.media2.session.MediaSession$ControllerCb: void onChildrenChanged(int,java.lang.String,int,androidx.media2.session.MediaLibraryService$LibraryParams)>(i0, $r5, $i1, $r4);

        return;
    }

androidx.media2.session.MediaLibrarySessionImplBase$3
<androidx.media2.session.MediaLibrarySessionImplBase$3: java.lang.String val$query>
<androidx.media2.session.MediaLibrarySessionImplBase$3: int val$itemCount>
<androidx.media2.session.MediaLibrarySessionImplBase$3: androidx.media2.session.MediaLibraryService$LibraryParams val$params>
<androidx.media2.session.MediaLibrarySessionImplBase$3: androidx.media2.session.MediaLibrarySessionImplBase this$0>
    void <init>(androidx.media2.session.MediaLibrarySessionImplBase, java.lang.String, int, androidx.media2.session.MediaLibraryService$LibraryParams)
    {
        androidx.media2.session.MediaLibrarySessionImplBase$3 r0;
        androidx.media2.session.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        int i0;
        androidx.media2.session.MediaLibraryService$LibraryParams r3;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase$3;

        r1 := @parameter0: androidx.media2.session.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media2.session.MediaLibraryService$LibraryParams;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$3: androidx.media2.session.MediaLibrarySessionImplBase this$0> = r1;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$3: java.lang.String val$query> = r2;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$3: int val$itemCount> = i0;

        r0.<androidx.media2.session.MediaLibrarySessionImplBase$3: androidx.media2.session.MediaLibraryService$LibraryParams val$params> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(androidx.media2.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media2.session.MediaLibrarySessionImplBase$3 r0;
        androidx.media2.session.MediaSession$ControllerCb r1;
        int i0, $i1;
        androidx.media2.session.MediaLibraryService$LibraryParams $r2;
        java.lang.String $r3;

        r0 := @this: androidx.media2.session.MediaLibrarySessionImplBase$3;

        r1 := @parameter0: androidx.media2.session.MediaSession$ControllerCb;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$3: java.lang.String val$query>;

        $i1 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$3: int val$itemCount>;

        $r2 = r0.<androidx.media2.session.MediaLibrarySessionImplBase$3: androidx.media2.session.MediaLibraryService$LibraryParams val$params>;

        virtualinvoke r1.<androidx.media2.session.MediaSession$ControllerCb: void onSearchResultChanged(int,java.lang.String,int,androidx.media2.session.MediaLibraryService$LibraryParams)>(i0, $r3, $i1, $r2);

        return;
    }

