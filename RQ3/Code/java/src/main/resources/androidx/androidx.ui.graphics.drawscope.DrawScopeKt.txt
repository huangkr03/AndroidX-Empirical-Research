androidx.ui.graphics.drawscope.DrawScopeKt
    public static final void inset(androidx.ui.graphics.drawscope.DrawScope, float, float, float, float, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        kotlin.jvm.functions.Function1 r1;
        androidx.ui.graphics.drawscope.DrawTransform $r2, $r4;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r1 := @parameter5: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r2.<androidx.ui.graphics.drawscope.DrawTransform: void inset(float,float,float,float)>(f0, f1, f2, f3);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        $f7 = neg f0;

        $f6 = neg f1;

        $f5 = neg f2;

        $f4 = neg f3;

        interfaceinvoke $r4.<androidx.ui.graphics.drawscope.DrawTransform: void inset(float,float,float,float)>($f7, $f6, $f5, $f4);

        return;
    }

    public static final void inset(androidx.ui.graphics.drawscope.DrawScope, float, float, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        kotlin.jvm.functions.Function1 r1;
        androidx.ui.graphics.drawscope.DrawTransform $r3, $r5;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r1 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r3.<androidx.ui.graphics.drawscope.DrawTransform: void inset(float,float,float,float)>(f0, f1, f0, f1);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        $f5 = neg f0;

        $f4 = neg f1;

        $f3 = neg f0;

        $f2 = neg f1;

        interfaceinvoke $r5.<androidx.ui.graphics.drawscope.DrawTransform: void inset(float,float,float,float)>($f5, $f4, $f3, $f2);

        return;
    }

    public static void inset$default(androidx.ui.graphics.drawscope.DrawScope, float, float, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        androidx.ui.graphics.drawscope.DrawTransform $r4, $r6;
        float $f0, $f1, $f2, $f3, f4, f5;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f4 := @parameter1: float;

        f5 := @parameter2: float;

        r1 := @parameter3: kotlin.jvm.functions.Function1;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f4 = 0.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f5 = 0.0F;

     label2:
        $r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r4.<androidx.ui.graphics.drawscope.DrawTransform: void inset(float,float,float,float)>(f4, f5, f4, f5);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        $f3 = neg f4;

        $f2 = neg f5;

        $f1 = neg f4;

        $f0 = neg f5;

        interfaceinvoke $r6.<androidx.ui.graphics.drawscope.DrawTransform: void inset(float,float,float,float)>($f3, $f2, $f1, $f0);

        return;
    }

    public static final void translate(androidx.ui.graphics.drawscope.DrawScope, float, float, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, $f2, $f3;
        kotlin.jvm.functions.Function1 r1;
        androidx.ui.graphics.drawscope.DrawTransform $r2, $r4;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r1 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r2.<androidx.ui.graphics.drawscope.DrawTransform: void translate(float,float)>(f0, f1);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        $f3 = neg f0;

        $f2 = neg f1;

        interfaceinvoke $r4.<androidx.ui.graphics.drawscope.DrawTransform: void translate(float,float)>($f3, $f2);

        return;
    }

    public static void translate$default(androidx.ui.graphics.drawscope.DrawScope, float, float, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        androidx.ui.graphics.drawscope.DrawTransform $r4, $r6;
        float $f0, $f1, f2, f3;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f2 := @parameter1: float;

        f3 := @parameter2: float;

        r1 := @parameter3: kotlin.jvm.functions.Function1;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f2 = 0.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f3 = 0.0F;

     label2:
        $r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r4.<androidx.ui.graphics.drawscope.DrawTransform: void translate(float,float)>(f2, f3);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        $f1 = neg f2;

        $f0 = neg f3;

        interfaceinvoke $r6.<androidx.ui.graphics.drawscope.DrawTransform: void translate(float,float)>($f1, $f0);

        return;
    }

    public static final void rotate(androidx.ui.graphics.drawscope.DrawScope, float, float, float, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, f2;
        kotlin.jvm.functions.Function1 r1;
        androidx.ui.graphics.Canvas r3, r4;
        boolean z2, z3;
        androidx.ui.geometry.Size r5;
        androidx.ui.graphics.drawscope.DrawTransform $r6;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        r1 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r3 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r4 = r3;

        r5 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void save()>();

        $r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r6.<androidx.ui.graphics.drawscope.DrawTransform: void rotate(float,float,float)>(f0, f1, f2);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r5);

        return;
    }

    public static void rotate$default(androidx.ui.graphics.drawscope.DrawScope, float, float, float, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, f2;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        androidx.ui.graphics.Canvas r4, r5;
        boolean z2, z3;
        androidx.ui.geometry.Size r6;
        androidx.ui.geometry.Offset $r8, $r10;
        androidx.ui.graphics.drawscope.DrawTransform $r9;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        r1 := @parameter4: kotlin.jvm.functions.Function1;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r10 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Offset getCenter()>();

        f1 = virtualinvoke $r10.<androidx.ui.geometry.Offset: float getX()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r8 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Offset getCenter()>();

        f2 = virtualinvoke $r8.<androidx.ui.geometry.Offset: float getY()>();

     label2:
        r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r5 = r4;

        r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void save()>();

        $r9 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r9.<androidx.ui.graphics.drawscope.DrawTransform: void rotate(float,float,float)>(f0, f1, f2);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r6);

        return;
    }

    public static final void rotateRad(androidx.ui.graphics.drawscope.DrawScope, float, float, float, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, f2, f3;
        kotlin.jvm.functions.Function1 r1;
        androidx.ui.graphics.Canvas r3, r4;
        boolean z2, z3;
        androidx.ui.geometry.Size r5;
        androidx.ui.graphics.drawscope.DrawTransform r6;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        r1 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r3 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r4 = r3;

        r5 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void save()>();

        r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        f3 = f0 * 57.295776F;

        interfaceinvoke r6.<androidx.ui.graphics.drawscope.DrawTransform: void rotate(float,float,float)>(f3, f1, f2);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r5);

        return;
    }

    public static void rotateRad$default(androidx.ui.graphics.drawscope.DrawScope, float, float, float, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, f2, f3;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        androidx.ui.graphics.Canvas r4, r5;
        boolean z2, z3;
        androidx.ui.geometry.Size r6;
        androidx.ui.graphics.drawscope.DrawTransform r7;
        androidx.ui.geometry.Offset $r9, $r10;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: kotlin.jvm.functions.Function1;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r10 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Offset getCenter()>();

        f2 = virtualinvoke $r10.<androidx.ui.geometry.Offset: float getX()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r9 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Offset getCenter()>();

        f3 = virtualinvoke $r9.<androidx.ui.geometry.Offset: float getY()>();

     label2:
        r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r5 = r4;

        r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void save()>();

        r7 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        f1 = f0 * 57.295776F;

        interfaceinvoke r7.<androidx.ui.graphics.drawscope.DrawTransform: void rotate(float,float,float)>(f1, f2, f3);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r6);

        return;
    }

    public static final void scale(androidx.ui.graphics.drawscope.DrawScope, float, float, float, float, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, f2, f3;
        kotlin.jvm.functions.Function1 r1;
        androidx.ui.graphics.Canvas r3, r4;
        boolean z2, z3;
        androidx.ui.geometry.Size r5;
        androidx.ui.graphics.drawscope.DrawTransform $r6;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r1 := @parameter5: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r3 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r4 = r3;

        r5 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void save()>();

        $r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r6.<androidx.ui.graphics.drawscope.DrawTransform: void scale(float,float,float,float)>(f0, f1, f2, f3);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r5);

        return;
    }

    public static void scale$default(androidx.ui.graphics.drawscope.DrawScope, float, float, float, float, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, f2, f3;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        androidx.ui.graphics.Canvas r4, r5;
        boolean z2, z3;
        androidx.ui.geometry.Size r6;
        androidx.ui.geometry.Offset $r8, $r10;
        androidx.ui.graphics.drawscope.DrawTransform $r9;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r1 := @parameter5: kotlin.jvm.functions.Function1;

        i0 := @parameter6: int;

        r2 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        f1 = f0;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r10 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Offset getCenter()>();

        f2 = virtualinvoke $r10.<androidx.ui.geometry.Offset: float getX()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        $r8 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Offset getCenter()>();

        f3 = virtualinvoke $r8.<androidx.ui.geometry.Offset: float getY()>();

     label3:
        r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r5 = r4;

        r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void save()>();

        $r9 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r9.<androidx.ui.graphics.drawscope.DrawTransform: void scale(float,float,float,float)>(f0, f1, f2, f3);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r6);

        return;
    }

    public static final void clipRect(androidx.ui.graphics.drawscope.DrawScope, float, float, float, float, androidx.ui.graphics.ClipOp, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        float f0, f1, f2, f3;
        androidx.ui.graphics.ClipOp r1;
        kotlin.jvm.functions.Function1 r2;
        androidx.ui.graphics.Canvas r4, r5;
        boolean z2, z3;
        androidx.ui.geometry.Size r6;
        androidx.ui.graphics.drawscope.DrawTransform $r7;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r1 := @parameter5: androidx.ui.graphics.ClipOp;

        r2 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "clipOp");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r5 = r4;

        r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void save()>();

        $r7 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r7.<androidx.ui.graphics.drawscope.DrawTransform: void clipRect(float,float,float,float,androidx.ui.graphics.ClipOp)>(f0, f1, f2, f3, r1);

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r6);

        return;
    }

    public static void clipRect$default(androidx.ui.graphics.drawscope.DrawScope, float, float, float, float, androidx.ui.graphics.ClipOp, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2;
        androidx.ui.graphics.Canvas r4, r5;
        boolean z2, z3;
        androidx.ui.geometry.Size r6, $r9, $r10;
        androidx.ui.graphics.drawscope.DrawTransform $r8;
        float f0, f1, f2, f3;
        androidx.ui.graphics.ClipOp r11;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r11 := @parameter5: androidx.ui.graphics.ClipOp;

        r1 := @parameter6: kotlin.jvm.functions.Function1;

        i0 := @parameter7: int;

        r2 := @parameter8: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 0.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = 0.0F;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        $r10 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        f2 = virtualinvoke $r10.<androidx.ui.geometry.Size: float getWidth()>();

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        $r9 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        f3 = virtualinvoke $r9.<androidx.ui.geometry.Size: float getHeight()>();

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r11 = <androidx.ui.graphics.ClipOp: androidx.ui.graphics.ClipOp intersect>;

     label5:
        r4 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r5 = r4;

        r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void save()>();

        $r8 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r8.<androidx.ui.graphics.drawscope.DrawTransform: void clipRect(float,float,float,float,androidx.ui.graphics.ClipOp)>(f0, f1, f2, f3, r11);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r6);

        return;
    }

    public static final void clipPath(androidx.ui.graphics.drawscope.DrawScope, androidx.ui.graphics.Path, androidx.ui.graphics.ClipOp, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        androidx.ui.graphics.Path r1;
        androidx.ui.graphics.ClipOp r2;
        kotlin.jvm.functions.Function1 r3;
        androidx.ui.graphics.Canvas r5, r6;
        boolean z2, z3;
        androidx.ui.geometry.Size r7;
        androidx.ui.graphics.drawscope.DrawTransform $r8;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: androidx.ui.graphics.Path;

        r2 := @parameter2: androidx.ui.graphics.ClipOp;

        r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clipOp");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "block");

        r5 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r6 = r5;

        r7 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r6.<androidx.ui.graphics.Canvas: void save()>();

        $r8 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r8.<androidx.ui.graphics.drawscope.DrawTransform: void clipPath(androidx.ui.graphics.Path,androidx.ui.graphics.ClipOp)>(r1, r2);

        interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r6.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r7);

        return;
    }

    public static void clipPath$default(androidx.ui.graphics.drawscope.DrawScope, androidx.ui.graphics.Path, androidx.ui.graphics.ClipOp, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        androidx.ui.graphics.Path r1;
        kotlin.jvm.functions.Function1 r2;
        int i0, $i1;
        java.lang.Object r3;
        androidx.ui.graphics.Canvas r5, r6;
        boolean z2, z3;
        androidx.ui.geometry.Size r7;
        androidx.ui.graphics.drawscope.DrawTransform $r9;
        androidx.ui.graphics.ClipOp r10;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: androidx.ui.graphics.Path;

        r10 := @parameter2: androidx.ui.graphics.ClipOp;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r10 = <androidx.ui.graphics.ClipOp: androidx.ui.graphics.ClipOp intersect>;

     label1:
        r5 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z2 = 0;

        z3 = 0;

        r6 = r5;

        r7 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r6.<androidx.ui.graphics.Canvas: void save()>();

        $r9 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r9.<androidx.ui.graphics.drawscope.DrawTransform: void clipPath(androidx.ui.graphics.Path,androidx.ui.graphics.ClipOp)>(r1, r10);

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r6.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r7);

        return;
    }

    public static final void drawCanvas(androidx.ui.graphics.drawscope.DrawScope, kotlin.jvm.functions.Function2)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.ui.graphics.Canvas $r2;
        androidx.ui.geometry.Size $r3;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        $r3 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }

    public static final void withTransform(androidx.ui.graphics.drawscope.DrawScope, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        kotlin.jvm.functions.Function1 r1, r2;
        androidx.ui.graphics.Canvas r3, r4;
        boolean z1, z2;
        androidx.ui.geometry.Size r5;
        androidx.ui.graphics.drawscope.DrawTransform $r6;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transformBlock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "drawBlock");

        r3 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.Canvas getCanvas()>();

        z1 = 0;

        z2 = 0;

        r4 = r3;

        r5 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.geometry.Size getSize()>();

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void save()>();

        $r6 = virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void restore()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void setSize(androidx.ui.geometry.Size)>(r5);

        return;
    }

