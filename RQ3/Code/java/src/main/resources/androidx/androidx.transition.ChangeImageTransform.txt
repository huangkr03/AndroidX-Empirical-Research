androidx.transition.ChangeImageTransform
<androidx.transition.ChangeImageTransform: java.lang.String PROPNAME_MATRIX>
<androidx.transition.ChangeImageTransform: java.lang.String PROPNAME_BOUNDS>
<androidx.transition.ChangeImageTransform: java.lang.String[] sTransitionProperties>
<androidx.transition.ChangeImageTransform: android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR>
<androidx.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>
    public void <init>()
    {
        androidx.transition.ChangeImageTransform r0;

        r0 := @this: androidx.transition.ChangeImageTransform;

        specialinvoke r0.<androidx.transition.Transition: void <init>()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.transition.ChangeImageTransform r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.transition.ChangeImageTransform;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    private void captureValues(androidx.transition.TransitionValues)
    {
        androidx.transition.ChangeImageTransform r0;
        androidx.transition.TransitionValues r1;
        android.view.View r2;
        android.widget.ImageView r3;
        android.graphics.drawable.Drawable r4;
        java.util.Map r5;
        int i0, i1, i2, i3, $i4;
        android.graphics.Rect r6, $r7;
        boolean $z0;
        android.graphics.Matrix $r9;

        r0 := @this: androidx.transition.ChangeImageTransform;

        r1 := @parameter0: androidx.transition.TransitionValues;

        r2 = r1.<androidx.transition.TransitionValues: android.view.View view>;

        $z0 = r2 instanceof android.widget.ImageView;

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i4 == 0 goto label2;

     label1:
        return;

     label2:
        r3 = (android.widget.ImageView) r2;

        r4 = virtualinvoke r3.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        if r4 != null goto label3;

        return;

     label3:
        r5 = r1.<androidx.transition.TransitionValues: java.util.Map values>;

        i0 = virtualinvoke r2.<android.view.View: int getLeft()>();

        i1 = virtualinvoke r2.<android.view.View: int getTop()>();

        i2 = virtualinvoke r2.<android.view.View: int getRight()>();

        i3 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        r6 = $r7;

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeImageTransform:bounds", r6);

        $r9 = staticinvoke <androidx.transition.ChangeImageTransform: android.graphics.Matrix copyImageMatrix(android.widget.ImageView)>(r3);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeImageTransform:matrix", $r9);

        return;
    }

    public void captureStartValues(androidx.transition.TransitionValues)
    {
        androidx.transition.ChangeImageTransform r0;
        androidx.transition.TransitionValues r1;

        r0 := @this: androidx.transition.ChangeImageTransform;

        r1 := @parameter0: androidx.transition.TransitionValues;

        specialinvoke r0.<androidx.transition.ChangeImageTransform: void captureValues(androidx.transition.TransitionValues)>(r1);

        return;
    }

    public void captureEndValues(androidx.transition.TransitionValues)
    {
        androidx.transition.ChangeImageTransform r0;
        androidx.transition.TransitionValues r1;

        r0 := @this: androidx.transition.ChangeImageTransform;

        r1 := @parameter0: androidx.transition.TransitionValues;

        specialinvoke r0.<androidx.transition.ChangeImageTransform: void captureValues(androidx.transition.TransitionValues)>(r1);

        return;
    }

    public java.lang.String[] getTransitionProperties()
    {
        androidx.transition.ChangeImageTransform r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.transition.ChangeImageTransform;

        $r1 = <androidx.transition.ChangeImageTransform: java.lang.String[] sTransitionProperties>;

        return $r1;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, androidx.transition.TransitionValues, androidx.transition.TransitionValues)
    {
        androidx.transition.ChangeImageTransform r0;
        android.view.ViewGroup r1;
        androidx.transition.TransitionValues r2, r3;
        android.graphics.Rect r4, r5;
        boolean z0, $z1, $z2, $z3;
        android.widget.ImageView r6;
        android.graphics.drawable.Drawable r7;
        int i0, i1;
        java.util.Map $r8, $r10, $r12, $r14;
        java.lang.Object $r9, $r11, $r13, $r15;
        android.view.View $r16;
        android.util.Property $r17;
        android.graphics.Matrix r18, r19;
        android.animation.ObjectAnimator r20;

        r0 := @this: androidx.transition.ChangeImageTransform;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: androidx.transition.TransitionValues;

        r3 := @parameter2: androidx.transition.TransitionValues;

        if r2 == null goto label01;

        if r3 != null goto label02;

     label01:
        return null;

     label02:
        $r8 = r2.<androidx.transition.TransitionValues: java.util.Map values>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:bounds");

        r4 = (android.graphics.Rect) $r9;

        $r10 = r3.<androidx.transition.TransitionValues: java.util.Map values>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:bounds");

        r5 = (android.graphics.Rect) $r11;

        if r4 == null goto label03;

        if r5 != null goto label04;

     label03:
        return null;

     label04:
        $r12 = r2.<androidx.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:matrix");

        r18 = (android.graphics.Matrix) $r13;

        $r14 = r3.<androidx.transition.TransitionValues: java.util.Map values>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:matrix");

        r19 = (android.graphics.Matrix) $r15;

        if r18 != null goto label05;

        if r19 == null goto label06;

     label05:
        if r18 == null goto label07;

        $z1 = virtualinvoke r18.<android.graphics.Matrix: boolean equals(java.lang.Object)>(r19);

        if $z1 == 0 goto label07;

     label06:
        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        z0 = $z2;

        $z3 = virtualinvoke r4.<android.graphics.Rect: boolean equals(java.lang.Object)>(r5);

        if $z3 == 0 goto label09;

        if z0 == 0 goto label09;

        return null;

     label09:
        $r16 = r3.<androidx.transition.TransitionValues: android.view.View view>;

        r6 = (android.widget.ImageView) $r16;

        r7 = virtualinvoke r6.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        i0 = virtualinvoke r7.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r7.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if i0 <= 0 goto label10;

        if i1 > 0 goto label11;

     label10:
        r20 = specialinvoke r0.<androidx.transition.ChangeImageTransform: android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView)>(r6);

        goto label14;

     label11:
        if r18 != null goto label12;

        r18 = <androidx.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

     label12:
        if r19 != null goto label13;

        r19 = <androidx.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

     label13:
        $r17 = <androidx.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        virtualinvoke $r17.<android.util.Property: void set(java.lang.Object,java.lang.Object)>(r6, r18);

        r20 = specialinvoke r0.<androidx.transition.ChangeImageTransform: android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix)>(r6, r18, r19);

     label14:
        return r20;
    }

    private android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView)
    {
        androidx.transition.ChangeImageTransform r0;
        android.widget.ImageView r1;
        android.graphics.Matrix[] $r2;
        android.graphics.Matrix $r3, $r4;
        android.animation.TypeEvaluator $r5;
        android.util.Property $r6;
        android.animation.ObjectAnimator $r7;

        r0 := @this: androidx.transition.ChangeImageTransform;

        r1 := @parameter0: android.widget.ImageView;

        $r6 = <androidx.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        $r5 = <androidx.transition.ChangeImageTransform: android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR>;

        $r2 = newarray (android.graphics.Matrix)[2];

        $r3 = <androidx.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

        $r2[0] = $r3;

        $r4 = <androidx.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

        $r2[1] = $r4;

        $r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>(r1, $r6, $r5, $r2);

        return $r7;
    }

    private android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView, android.graphics.Matrix, android.graphics.Matrix)
    {
        androidx.transition.ChangeImageTransform r0;
        android.widget.ImageView r1;
        android.graphics.Matrix r2, r3;
        androidx.transition.TransitionUtils$MatrixEvaluator $r4;
        android.util.Property $r5;
        android.graphics.Matrix[] $r6;
        android.animation.ObjectAnimator $r7;

        r0 := @this: androidx.transition.ChangeImageTransform;

        r1 := @parameter0: android.widget.ImageView;

        r2 := @parameter1: android.graphics.Matrix;

        r3 := @parameter2: android.graphics.Matrix;

        $r5 = <androidx.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        $r4 = new androidx.transition.TransitionUtils$MatrixEvaluator;

        specialinvoke $r4.<androidx.transition.TransitionUtils$MatrixEvaluator: void <init>()>();

        $r6 = newarray (android.graphics.Matrix)[2];

        $r6[0] = r2;

        $r6[1] = r3;

        $r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>(r1, $r5, $r4, $r6);

        return $r7;
    }

    private static android.graphics.Matrix copyImageMatrix(android.widget.ImageView)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.Matrix $r2, $r3, $r6, $r7, $r8, $r9;
        int[] $r4;
        android.widget.ImageView$ScaleType $r5;

        r0 := @parameter0: android.widget.ImageView;

        r1 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        if $i0 <= 0 goto label4;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if $i1 <= 0 goto label4;

        $r4 = <androidx.transition.ChangeImageTransform$3: int[] $SwitchMap$android$widget$ImageView$ScaleType>;

        $r5 = virtualinvoke r0.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $i2 = virtualinvoke $r5.<android.widget.ImageView$ScaleType: int ordinal()>();

        $i3 = $r4[$i2];

        lookupswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r7 = staticinvoke <androidx.transition.ChangeImageTransform: android.graphics.Matrix fitXYMatrix(android.widget.ImageView)>(r0);

        return $r7;

     label2:
        $r6 = staticinvoke <androidx.transition.ChangeImageTransform: android.graphics.Matrix centerCropMatrix(android.widget.ImageView)>(r0);

        return $r6;

     label3:
        $r8 = new android.graphics.Matrix;

        $r9 = virtualinvoke r0.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        specialinvoke $r8.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r9);

        return $r8;

     label4:
        $r2 = new android.graphics.Matrix;

        $r3 = virtualinvoke r0.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        specialinvoke $r2.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r3);

        return $r2;
    }

    private static android.graphics.Matrix fitXYMatrix(android.widget.ImageView)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.Matrix r2, $r3;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @parameter0: android.widget.ImageView;

        r1 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r2 = $r3;

        $i0 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f1 = (float) $i1;

        $f2 = $f0 / $f1;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        $f3 = (float) $i2;

        $i3 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f4 = (float) $i3;

        $f5 = $f3 / $f4;

        virtualinvoke r2.<android.graphics.Matrix: boolean postScale(float,float)>($f2, $f5);

        return r2;
    }

    private static android.graphics.Matrix centerCropMatrix(android.widget.ImageView)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1, i2, i3, i4, i5;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        android.graphics.Matrix r2, $r3;

        r0 := @parameter0: android.widget.ImageView;

        r1 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $f6 = (float) i1;

        $f5 = (float) i0;

        f0 = $f6 / $f5;

        i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i3 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        $f8 = (float) i3;

        $f7 = (float) i2;

        f1 = $f8 / $f7;

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        $f9 = (float) i0;

        f3 = $f9 * f2;

        $f10 = (float) i2;

        f4 = $f10 * f2;

        $f11 = (float) i1;

        $f12 = $f11 - f3;

        $f13 = $f12 / 2.0F;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f13);

        $f14 = (float) i3;

        $f15 = $f14 - f4;

        $f16 = $f15 / 2.0F;

        i5 = staticinvoke <java.lang.Math: int round(float)>($f16);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.graphics.Matrix: boolean postScale(float,float)>(f2, f2);

        $f18 = (float) i4;

        $f17 = (float) i5;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f18, $f17);

        return r2;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        androidx.transition.ChangeImageTransform$1 $r1;
        androidx.transition.ChangeImageTransform$2 $r2;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "android:changeImageTransform:matrix";

        $r0[1] = "android:changeImageTransform:bounds";

        <androidx.transition.ChangeImageTransform: java.lang.String[] sTransitionProperties> = $r0;

        $r1 = new androidx.transition.ChangeImageTransform$1;

        specialinvoke $r1.<androidx.transition.ChangeImageTransform$1: void <init>()>();

        <androidx.transition.ChangeImageTransform: android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR> = $r1;

        $r2 = new androidx.transition.ChangeImageTransform$2;

        specialinvoke $r2.<androidx.transition.ChangeImageTransform$2: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/Matrix;", "animatedTransform");

        <androidx.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY> = $r2;

        return;
    }

androidx.transition.ChangeImageTransform$1
    void <init>()
    {
        androidx.transition.ChangeImageTransform$1 r0;

        r0 := @this: androidx.transition.ChangeImageTransform$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.Matrix evaluate(float, android.graphics.Matrix, android.graphics.Matrix)
    {
        androidx.transition.ChangeImageTransform$1 r0;
        float f0;
        android.graphics.Matrix r1, r2;

        r0 := @this: androidx.transition.ChangeImageTransform$1;

        f0 := @parameter0: float;

        r1 := @parameter1: android.graphics.Matrix;

        r2 := @parameter2: android.graphics.Matrix;

        return null;
    }

    public volatile java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        androidx.transition.ChangeImageTransform$1 r0;
        float f0;
        java.lang.Object r1, r2;
        android.graphics.Matrix $r3, $r4, $r5;

        r0 := @this: androidx.transition.ChangeImageTransform$1;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r4 = (android.graphics.Matrix) r1;

        $r3 = (android.graphics.Matrix) r2;

        $r5 = virtualinvoke r0.<androidx.transition.ChangeImageTransform$1: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)>(f0, $r4, $r3);

        return $r5;
    }

androidx.transition.ChangeImageTransform$2
    void <init>(java.lang.Class, java.lang.String)
    {
        androidx.transition.ChangeImageTransform$2 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: androidx.transition.ChangeImageTransform$2;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.widget.ImageView, android.graphics.Matrix)
    {
        androidx.transition.ChangeImageTransform$2 r0;
        android.widget.ImageView r1;
        android.graphics.Matrix r2;

        r0 := @this: androidx.transition.ChangeImageTransform$2;

        r1 := @parameter0: android.widget.ImageView;

        r2 := @parameter1: android.graphics.Matrix;

        staticinvoke <androidx.transition.ImageViewUtils: void animateTransform(android.widget.ImageView,android.graphics.Matrix)>(r1, r2);

        return;
    }

    public android.graphics.Matrix get(android.widget.ImageView)
    {
        androidx.transition.ChangeImageTransform$2 r0;
        android.widget.ImageView r1;

        r0 := @this: androidx.transition.ChangeImageTransform$2;

        r1 := @parameter0: android.widget.ImageView;

        return null;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        androidx.transition.ChangeImageTransform$2 r0;
        java.lang.Object r1;
        android.widget.ImageView $r2;
        android.graphics.Matrix $r3;

        r0 := @this: androidx.transition.ChangeImageTransform$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.widget.ImageView) r1;

        $r3 = virtualinvoke r0.<androidx.transition.ChangeImageTransform$2: android.graphics.Matrix get(android.widget.ImageView)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        androidx.transition.ChangeImageTransform$2 r0;
        java.lang.Object r1, r2;
        android.graphics.Matrix $r3;
        android.widget.ImageView $r4;

        r0 := @this: androidx.transition.ChangeImageTransform$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.widget.ImageView) r1;

        $r3 = (android.graphics.Matrix) r2;

        virtualinvoke r0.<androidx.transition.ChangeImageTransform$2: void set(android.widget.ImageView,android.graphics.Matrix)>($r4, $r3);

        return;
    }

androidx.transition.ChangeImageTransform$3
<androidx.transition.ChangeImageTransform$3: int[] $SwitchMap$android$widget$ImageView$ScaleType>
    static void <clinit>()
    {
        android.widget.ImageView$ScaleType[] $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r3, $r5;
        android.widget.ImageView$ScaleType $r2, $r4;
        java.lang.Throwable $r6, $r7, r8, r9;

        $r0 = staticinvoke <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.transition.ChangeImageTransform$3: int[] $SwitchMap$android$widget$ImageView$ScaleType> = $r1;

     label1:
        $r3 = <androidx.transition.ChangeImageTransform$3: int[] $SwitchMap$android$widget$ImageView$ScaleType>;

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        $i1 = virtualinvoke $r2.<android.widget.ImageView$ScaleType: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

     label4:
        $r5 = <androidx.transition.ChangeImageTransform$3: int[] $SwitchMap$android$widget$ImageView$ScaleType>;

        $r4 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        $i2 = virtualinvoke $r4.<android.widget.ImageView$ScaleType: int ordinal()>();

        $r5[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        r9 = $r7;

     label7:
        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

