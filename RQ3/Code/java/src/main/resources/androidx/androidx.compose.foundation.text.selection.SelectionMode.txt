androidx.compose.foundation.text.selection.SelectionMode
<androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode Vertical>
<androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode Horizontal>
<androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.compose.foundation.text.selection.SelectionMode r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

<androidx.compose.foundation.text.selection.SelectionMode: boolean isSelected-cYDtEUQ$foundation_text_release(androidx.compose.ui.geometry.Rect,long,long)>
<androidx.compose.foundation.text.selection.SelectionMode: boolean areHandlesCrossed-cYDtEUQ$foundation_text_release(androidx.compose.ui.geometry.Rect,long,long)>
    public static final androidx.compose.foundation.text.selection.SelectionMode[] values()
    {
        androidx.compose.foundation.text.selection.SelectionMode[] r0, r1;
        int $i0, $i1;

        r0 = <androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode[] $VALUES>;

        $i0 = lengthof r0;

        r1 = newarray (androidx.compose.foundation.text.selection.SelectionMode)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static final androidx.compose.foundation.text.selection.SelectionMode valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.compose.foundation.text.selection.SelectionMode $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/compose/foundation/text/selection/SelectionMode;", r0);

        $r2 = (androidx.compose.foundation.text.selection.SelectionMode) $r1;

        return $r2;
    }

    public void <init>(java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.text.selection.SelectionMode r0;
        java.lang.String $r1;
        int $i0;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.text.selection.SelectionMode: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.text.selection.SelectionMode[] r0;
        androidx.compose.foundation.text.selection.SelectionMode$Vertical $r1;
        androidx.compose.foundation.text.selection.SelectionMode$Horizontal $r2;
        androidx.compose.foundation.text.selection.SelectionMode $r3, $r4;

        $r1 = new androidx.compose.foundation.text.selection.SelectionMode$Vertical;

        specialinvoke $r1.<androidx.compose.foundation.text.selection.SelectionMode$Vertical: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("Vertical", 0, null);

        <androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode Vertical> = $r1;

        $r2 = new androidx.compose.foundation.text.selection.SelectionMode$Horizontal;

        specialinvoke $r2.<androidx.compose.foundation.text.selection.SelectionMode$Horizontal: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("Horizontal", 1, null);

        <androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode Horizontal> = $r2;

        r0 = newarray (androidx.compose.foundation.text.selection.SelectionMode)[2];

        $r3 = <androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode Vertical>;

        r0[0] = $r3;

        $r4 = <androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode Horizontal>;

        r0[1] = $r4;

        <androidx.compose.foundation.text.selection.SelectionMode: androidx.compose.foundation.text.selection.SelectionMode[] $VALUES> = r0;

        return;
    }

androidx.compose.foundation.text.selection.SelectionMode$Horizontal
    void <init>(java.lang.String, int)
    {
        androidx.compose.foundation.text.selection.SelectionMode$Horizontal r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode$Horizontal;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<androidx.compose.foundation.text.selection.SelectionMode: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r1, $i0, null);

        return;
    }

    public boolean isSelected-cYDtEUQ$foundation_text_release(androidx.compose.ui.geometry.Rect, long, long)
    {
        androidx.compose.foundation.text.selection.SelectionMode$Horizontal r0;
        androidx.compose.ui.geometry.Rect r1;
        long l0, l1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode$Horizontal;

        r1 := @parameter0: androidx.compose.ui.geometry.Rect;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $b2 = $f0 cmpg $f1;

        if $b2 >= 0 goto label1;

        return 0;

     label1:
        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $b3 = $f2 cmpg $f3;

        if $b3 >= 0 goto label2;

        $f10 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f11 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $b7 = $f10 cmpg $f11;

        if $b7 >= 0 goto label2;

        return 0;

     label2:
        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $b4 = $f4 cmpl $f5;

        if $b4 < 0 goto label3;

        return 0;

     label3:
        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $b5 = $f6 cmpl $f7;

        if $b5 < 0 goto label4;

        $f8 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f9 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $b6 = $f8 cmpl $f9;

        if $b6 < 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public boolean areHandlesCrossed-cYDtEUQ$foundation_text_release(androidx.compose.ui.geometry.Rect, long, long)
    {
        androidx.compose.foundation.text.selection.SelectionMode$Horizontal r0;
        androidx.compose.ui.geometry.Rect r1;
        long l0, l1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b2, $b3, $b4, $b5, $b6, $b7;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode$Horizontal;

        r1 := @parameter0: androidx.compose.ui.geometry.Rect;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $b2 = $f0 cmpl $f1;

        if $b2 < 0 goto label3;

        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $b3 = $f2 cmpg $f3;

        if $b3 >= 0 goto label3;

        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $b4 = $f4 cmpl $f5;

        if $b4 < 0 goto label3;

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $b5 = $f6 cmpg $f7;

        if $b5 >= 0 goto label3;

        $f8 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f9 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $b6 = $f8 cmpl $f9;

        if $b6 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $f10 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f11 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $b7 = $f10 cmpl $f11;

        if $b7 <= 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public void <init>(java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.text.selection.SelectionMode$Horizontal r0;
        java.lang.String $r1;
        int $i0;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode$Horizontal;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.text.selection.SelectionMode$Horizontal: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

androidx.compose.foundation.text.selection.SelectionMode$Vertical
    void <init>(java.lang.String, int)
    {
        androidx.compose.foundation.text.selection.SelectionMode$Vertical r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode$Vertical;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<androidx.compose.foundation.text.selection.SelectionMode: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r1, $i0, null);

        return;
    }

    public boolean isSelected-cYDtEUQ$foundation_text_release(androidx.compose.ui.geometry.Rect, long, long)
    {
        androidx.compose.foundation.text.selection.SelectionMode$Vertical r0;
        androidx.compose.ui.geometry.Rect r1;
        long l0, l1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode$Vertical;

        r1 := @parameter0: androidx.compose.ui.geometry.Rect;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $b2 = $f0 cmpg $f1;

        if $b2 >= 0 goto label1;

        return 0;

     label1:
        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $b3 = $f2 cmpg $f3;

        if $b3 >= 0 goto label2;

        $f10 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f11 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $b7 = $f10 cmpg $f11;

        if $b7 >= 0 goto label2;

        return 0;

     label2:
        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $b4 = $f4 cmpl $f5;

        if $b4 < 0 goto label3;

        return 0;

     label3:
        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $b5 = $f6 cmpl $f7;

        if $b5 < 0 goto label4;

        $f8 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f9 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $b6 = $f8 cmpl $f9;

        if $b6 < 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public boolean areHandlesCrossed-cYDtEUQ$foundation_text_release(androidx.compose.ui.geometry.Rect, long, long)
    {
        androidx.compose.foundation.text.selection.SelectionMode$Vertical r0;
        androidx.compose.ui.geometry.Rect r1;
        long l0, l1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b2, $b3, $b4, $b5, $b6, $b7;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode$Vertical;

        r1 := @parameter0: androidx.compose.ui.geometry.Rect;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $b2 = $f0 cmpl $f1;

        if $b2 < 0 goto label3;

        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $b3 = $f2 cmpg $f3;

        if $b3 >= 0 goto label3;

        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $b4 = $f4 cmpl $f5;

        if $b4 < 0 goto label3;

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $b5 = $f6 cmpg $f7;

        if $b5 >= 0 goto label3;

        $f8 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f9 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $b6 = $f8 cmpl $f9;

        if $b6 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $f10 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f11 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $b7 = $f10 cmpl $f11;

        if $b7 <= 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public void <init>(java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.text.selection.SelectionMode$Vertical r0;
        java.lang.String $r1;
        int $i0;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.compose.foundation.text.selection.SelectionMode$Vertical;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.text.selection.SelectionMode$Vertical: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

