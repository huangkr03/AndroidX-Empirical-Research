androidx.credentials.provider.CreateEntry
<androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion>
<androidx.credentials.provider.CreateEntry: java.lang.CharSequence accountName>
<androidx.credentials.provider.CreateEntry: android.app.PendingIntent pendingIntent>
<androidx.credentials.provider.CreateEntry: android.graphics.drawable.Icon icon>
<androidx.credentials.provider.CreateEntry: java.lang.CharSequence description>
<androidx.credentials.provider.CreateEntry: java.time.Instant lastUsedTime>
<androidx.credentials.provider.CreateEntry: java.util.Map credentialCountInformationMap>
<androidx.credentials.provider.CreateEntry: java.lang.String TAG>
<androidx.credentials.provider.CreateEntry: int DESCRIPTION_MAX_CHAR_LIMIT>
<androidx.credentials.provider.CreateEntry: java.lang.String TYPE_TOTAL_CREDENTIAL>
<androidx.credentials.provider.CreateEntry: java.lang.String SLICE_HINT_ACCOUNT_NAME>
<androidx.credentials.provider.CreateEntry: java.lang.String SLICE_HINT_NOTE>
<androidx.credentials.provider.CreateEntry: java.lang.String SLICE_HINT_ICON>
<androidx.credentials.provider.CreateEntry: java.lang.String SLICE_HINT_CREDENTIAL_COUNT_INFORMATION>
<androidx.credentials.provider.CreateEntry: java.lang.String SLICE_HINT_LAST_USED_TIME_MILLIS>
<androidx.credentials.provider.CreateEntry: java.lang.String SLICE_HINT_PENDING_INTENT>
<androidx.credentials.provider.CreateEntry: android.os.Parcelable$Creator CREATOR>
    public void <init>(java.lang.CharSequence, android.app.PendingIntent, android.graphics.drawable.Icon, java.lang.CharSequence, java.time.Instant, java.util.Map)
    {
        androidx.credentials.provider.CreateEntry r0;
        java.lang.CharSequence r1, r4, $r9, $r10, $r11;
        android.app.PendingIntent r2;
        android.graphics.drawable.Icon r3;
        java.time.Instant r5;
        java.util.Map r6;
        androidx.credentials.provider.CreateEntry$Companion $r7;
        android.app.slice.Slice $r8;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r12, $r14;
        java.lang.String $r13, $r15, $r16, $r17;
        boolean $z0, $z2;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: android.graphics.drawable.Icon;

        r4 := @parameter3: java.lang.CharSequence;

        r5 := @parameter4: java.time.Instant;

        r6 := @parameter5: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "accountName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pendingIntent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "credentialCountInformationMap");

        $r7 = <androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion>;

        $r8 = virtualinvoke $r7.<androidx.credentials.provider.CreateEntry$Companion: android.app.slice.Slice toSlice(java.lang.CharSequence,android.graphics.drawable.Icon,java.lang.CharSequence,java.time.Instant,java.util.Map,android.app.PendingIntent)>(r1, r3, r4, r5, r6, r2);

        specialinvoke r0.<android.service.credentials.CreateEntry: void <init>(android.app.slice.Slice)>($r8);

        r0.<androidx.credentials.provider.CreateEntry: java.lang.CharSequence accountName> = r1;

        r0.<androidx.credentials.provider.CreateEntry: android.app.PendingIntent pendingIntent> = r2;

        r0.<androidx.credentials.provider.CreateEntry: android.graphics.drawable.Icon icon> = r3;

        r0.<androidx.credentials.provider.CreateEntry: java.lang.CharSequence description> = r4;

        r0.<androidx.credentials.provider.CreateEntry: java.time.Instant lastUsedTime> = r5;

        r0.<androidx.credentials.provider.CreateEntry: java.util.Map credentialCountInformationMap> = r6;

        $r9 = r0.<androidx.credentials.provider.CreateEntry: java.lang.CharSequence accountName>;

        $i0 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r16 = "accountName must not be empty";

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label3:
        $r10 = r0.<androidx.credentials.provider.CreateEntry: java.lang.CharSequence description>;

        if $r10 == null goto label6;

        $r11 = r0.<androidx.credentials.provider.CreateEntry: java.lang.CharSequence description>;

        $i1 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

        if $i1 > 300 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 != 0 goto label6;

        $r17 = "Description must follow a limit of 300 characters.";

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label6:
        return;
    }

    public final java.lang.CharSequence getAccountName()
    {
        androidx.credentials.provider.CreateEntry r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        $r1 = r0.<androidx.credentials.provider.CreateEntry: java.lang.CharSequence accountName>;

        return $r1;
    }

    public final android.app.PendingIntent getPendingIntent()
    {
        androidx.credentials.provider.CreateEntry r0;
        android.app.PendingIntent $r1;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        $r1 = r0.<androidx.credentials.provider.CreateEntry: android.app.PendingIntent pendingIntent>;

        return $r1;
    }

    public final android.graphics.drawable.Icon getIcon()
    {
        androidx.credentials.provider.CreateEntry r0;
        android.graphics.drawable.Icon $r1;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        $r1 = r0.<androidx.credentials.provider.CreateEntry: android.graphics.drawable.Icon icon>;

        return $r1;
    }

    public final java.lang.CharSequence getDescription()
    {
        androidx.credentials.provider.CreateEntry r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        $r1 = r0.<androidx.credentials.provider.CreateEntry: java.lang.CharSequence description>;

        return $r1;
    }

    public final java.time.Instant getLastUsedTime()
    {
        androidx.credentials.provider.CreateEntry r0;
        java.time.Instant $r1;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        $r1 = r0.<androidx.credentials.provider.CreateEntry: java.time.Instant lastUsedTime>;

        return $r1;
    }

    public void <init>(java.lang.CharSequence, android.app.PendingIntent, java.lang.CharSequence, java.time.Instant, android.graphics.drawable.Icon, java.lang.Integer, java.lang.Integer, java.lang.Integer)
    {
        androidx.credentials.provider.CreateEntry r0;
        java.lang.CharSequence r1, r3;
        android.app.PendingIntent r2;
        java.time.Instant r4;
        android.graphics.drawable.Icon r5;
        java.lang.Integer r6, r7, r8;
        kotlin.Pair[] r9;
        kotlin.Pair $r10, $r11, $r12;
        java.util.Map $r13;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: java.lang.CharSequence;

        r4 := @parameter3: java.time.Instant;

        r5 := @parameter4: android.graphics.drawable.Icon;

        r6 := @parameter5: java.lang.Integer;

        r7 := @parameter6: java.lang.Integer;

        r8 := @parameter7: java.lang.Integer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "accountName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pendingIntent");

        r9 = newarray (kotlin.Pair)[3];

        $r10 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("android.credentials.TYPE_PASSWORD_CREDENTIAL", r6);

        r9[0] = $r10;

        $r11 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("androidx.credentials.TYPE_PUBLIC_KEY_CREDENTIAL", r7);

        r9[1] = $r11;

        $r12 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("TOTAL_CREDENTIAL_COUNT_TYPE", r8);

        r9[2] = $r12;

        $r13 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mutableMapOf(kotlin.Pair[])>(r9);

        specialinvoke r0.<androidx.credentials.provider.CreateEntry: void <init>(java.lang.CharSequence,android.app.PendingIntent,android.graphics.drawable.Icon,java.lang.CharSequence,java.time.Instant,java.util.Map)>(r1, r2, r5, r3, r4, $r13);

        return;
    }

    public void <init>(java.lang.CharSequence, android.app.PendingIntent, java.lang.CharSequence, java.time.Instant, android.graphics.drawable.Icon, java.lang.Integer, java.lang.Integer, java.lang.Integer, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.CreateEntry r0;
        java.lang.CharSequence r1, r4;
        android.app.PendingIntent r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        java.time.Instant r5;
        android.graphics.drawable.Icon r6;
        java.lang.Integer r7, r8, r9;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.app.PendingIntent;

        r4 := @parameter2: java.lang.CharSequence;

        r5 := @parameter3: java.time.Instant;

        r6 := @parameter4: android.graphics.drawable.Icon;

        r7 := @parameter5: java.lang.Integer;

        r8 := @parameter6: java.lang.Integer;

        r9 := @parameter7: java.lang.Integer;

        i0 := @parameter8: int;

        r3 := @parameter9: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        r5 = null;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        r6 = null;

     label3:
        $i4 = i0 & 32;

        if $i4 == 0 goto label4;

        r7 = null;

     label4:
        $i5 = i0 & 64;

        if $i5 == 0 goto label5;

        r8 = null;

     label5:
        $i6 = i0 & 128;

        if $i6 == 0 goto label6;

        r9 = null;

     label6:
        specialinvoke r0.<androidx.credentials.provider.CreateEntry: void <init>(java.lang.CharSequence,android.app.PendingIntent,java.lang.CharSequence,java.time.Instant,android.graphics.drawable.Icon,java.lang.Integer,java.lang.Integer,java.lang.Integer)>(r1, r2, r4, r5, r6, r7, r8, r9);

        return;
    }

    public final java.lang.Integer getPasswordCredentialCount()
    {
        androidx.credentials.provider.CreateEntry r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        $r1 = r0.<androidx.credentials.provider.CreateEntry: java.util.Map credentialCountInformationMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("android.credentials.TYPE_PASSWORD_CREDENTIAL");

        $r3 = (java.lang.Integer) $r2;

        return $r3;
    }

    public final java.lang.Integer getPublicKeyCredentialCount()
    {
        androidx.credentials.provider.CreateEntry r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        $r1 = r0.<androidx.credentials.provider.CreateEntry: java.util.Map credentialCountInformationMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("androidx.credentials.TYPE_PUBLIC_KEY_CREDENTIAL");

        $r3 = (java.lang.Integer) $r2;

        return $r3;
    }

    public final java.lang.Integer getTotalCredentialCount()
    {
        androidx.credentials.provider.CreateEntry r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        $r1 = r0.<androidx.credentials.provider.CreateEntry: java.util.Map credentialCountInformationMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("TOTAL_CREDENTIAL_COUNT_TYPE");

        $r3 = (java.lang.Integer) $r2;

        return $r3;
    }

    public int describeContents()
    {
        androidx.credentials.provider.CreateEntry r0;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.credentials.provider.CreateEntry r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: androidx.credentials.provider.CreateEntry;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dest");

        specialinvoke r0.<android.service.credentials.CreateEntry: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public static final android.app.slice.Slice toSlice(java.lang.CharSequence, android.graphics.drawable.Icon, java.lang.CharSequence, java.time.Instant, java.util.Map, android.app.PendingIntent)
    {
        java.lang.CharSequence r0, r2;
        android.graphics.drawable.Icon r1;
        java.time.Instant r3;
        java.util.Map r4;
        android.app.PendingIntent r5;
        androidx.credentials.provider.CreateEntry$Companion $r6;
        android.app.slice.Slice $r7;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.graphics.drawable.Icon;

        r2 := @parameter2: java.lang.CharSequence;

        r3 := @parameter3: java.time.Instant;

        r4 := @parameter4: java.util.Map;

        r5 := @parameter5: android.app.PendingIntent;

        $r6 = <androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.credentials.provider.CreateEntry$Companion: android.app.slice.Slice toSlice(java.lang.CharSequence,android.graphics.drawable.Icon,java.lang.CharSequence,java.time.Instant,java.util.Map,android.app.PendingIntent)>(r0, r1, r2, r3, r4, r5);

        return $r7;
    }

    public static final androidx.credentials.provider.CreateEntry fromSlice(android.app.slice.Slice)
    {
        android.app.slice.Slice r0;
        androidx.credentials.provider.CreateEntry$Companion $r1;
        androidx.credentials.provider.CreateEntry $r2;

        r0 := @parameter0: android.app.slice.Slice;

        $r1 = <androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.CreateEntry$Companion: androidx.credentials.provider.CreateEntry fromSlice(android.app.slice.Slice)>(r0);

        return $r2;
    }

    public static final java.util.Map convertBundleToCredentialCountInfo$credentials_release(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.credentials.provider.CreateEntry$Companion $r1;
        java.util.Map $r2;

        r0 := @parameter0: android.os.Bundle;

        $r1 = <androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.CreateEntry$Companion: java.util.Map convertBundleToCredentialCountInfo$credentials_release(android.os.Bundle)>(r0);

        return $r2;
    }

    public static final android.os.Bundle convertCredentialCountInfoToBundle$credentials_release(java.util.Map)
    {
        java.util.Map r0;
        androidx.credentials.provider.CreateEntry$Companion $r1;
        android.os.Bundle $r2;

        r0 := @parameter0: java.util.Map;

        $r1 = <androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.CreateEntry$Companion: android.os.Bundle convertCredentialCountInfoToBundle$credentials_release(java.util.Map)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.credentials.provider.CreateEntry$Companion $r0;
        androidx.credentials.provider.CreateEntry$Companion$CREATOR$1 $r1;
        android.os.Parcelable$Creator $r2;

        $r0 = new androidx.credentials.provider.CreateEntry$Companion;

        specialinvoke $r0.<androidx.credentials.provider.CreateEntry$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion> = $r0;

        $r1 = new androidx.credentials.provider.CreateEntry$Companion$CREATOR$1;

        specialinvoke $r1.<androidx.credentials.provider.CreateEntry$Companion$CREATOR$1: void <init>()>();

        $r2 = (android.os.Parcelable$Creator) $r1;

        <androidx.credentials.provider.CreateEntry: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

androidx.credentials.provider.CreateEntry$Builder
<androidx.credentials.provider.CreateEntry$Builder: java.lang.CharSequence accountName>
<androidx.credentials.provider.CreateEntry$Builder: android.app.PendingIntent pendingIntent>
<androidx.credentials.provider.CreateEntry$Builder: java.util.Map credentialCountInformationMap>
<androidx.credentials.provider.CreateEntry$Builder: android.graphics.drawable.Icon icon>
<androidx.credentials.provider.CreateEntry$Builder: java.lang.CharSequence description>
<androidx.credentials.provider.CreateEntry$Builder: java.time.Instant lastUsedTime>
<androidx.credentials.provider.CreateEntry$Builder: java.lang.Integer passwordCredentialCount>
<androidx.credentials.provider.CreateEntry$Builder: java.lang.Integer publicKeyCredentialCount>
<androidx.credentials.provider.CreateEntry$Builder: java.lang.Integer totalCredentialCount>
    public void <init>(java.lang.CharSequence, android.app.PendingIntent)
    {
        androidx.credentials.provider.CreateEntry$Builder r0;
        java.lang.CharSequence r1;
        android.app.PendingIntent r2;
        java.util.LinkedHashMap $r3;
        java.util.Map $r4;

        r0 := @this: androidx.credentials.provider.CreateEntry$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.app.PendingIntent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "accountName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pendingIntent");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.credentials.provider.CreateEntry$Builder: java.lang.CharSequence accountName> = r1;

        r0.<androidx.credentials.provider.CreateEntry$Builder: android.app.PendingIntent pendingIntent> = r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $r4 = (java.util.Map) $r3;

        r0.<androidx.credentials.provider.CreateEntry$Builder: java.util.Map credentialCountInformationMap> = $r4;

        return;
    }

    public final androidx.credentials.provider.CreateEntry$Builder setPasswordCredentialCount(int)
    {
        androidx.credentials.provider.CreateEntry$Builder r0;
        int i0;
        java.lang.Integer r1, $r2;
        java.util.Map $r3;

        r0 := @this: androidx.credentials.provider.CreateEntry$Builder;

        i0 := @parameter0: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<androidx.credentials.provider.CreateEntry$Builder: java.lang.Integer passwordCredentialCount> = $r2;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = r0.<androidx.credentials.provider.CreateEntry$Builder: java.util.Map credentialCountInformationMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.credentials.TYPE_PASSWORD_CREDENTIAL", r1);

        return r0;
    }

    public final androidx.credentials.provider.CreateEntry$Builder setPublicKeyCredentialCount(int)
    {
        androidx.credentials.provider.CreateEntry$Builder r0;
        int i0;
        java.lang.Integer r1, $r2;
        java.util.Map $r3;

        r0 := @this: androidx.credentials.provider.CreateEntry$Builder;

        i0 := @parameter0: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<androidx.credentials.provider.CreateEntry$Builder: java.lang.Integer publicKeyCredentialCount> = $r2;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = r0.<androidx.credentials.provider.CreateEntry$Builder: java.util.Map credentialCountInformationMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("androidx.credentials.TYPE_PUBLIC_KEY_CREDENTIAL", r1);

        return r0;
    }

    public final androidx.credentials.provider.CreateEntry$Builder setTotalCredentialCount(int)
    {
        androidx.credentials.provider.CreateEntry$Builder r0;
        int i0;
        java.lang.Integer r1, $r2;
        java.util.Map $r3;

        r0 := @this: androidx.credentials.provider.CreateEntry$Builder;

        i0 := @parameter0: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<androidx.credentials.provider.CreateEntry$Builder: java.lang.Integer totalCredentialCount> = $r2;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = r0.<androidx.credentials.provider.CreateEntry$Builder: java.util.Map credentialCountInformationMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TOTAL_CREDENTIAL_COUNT_TYPE", r1);

        return r0;
    }

    public final androidx.credentials.provider.CreateEntry$Builder setIcon(android.graphics.drawable.Icon)
    {
        androidx.credentials.provider.CreateEntry$Builder r0;
        android.graphics.drawable.Icon r1;

        r0 := @this: androidx.credentials.provider.CreateEntry$Builder;

        r1 := @parameter0: android.graphics.drawable.Icon;

        r0.<androidx.credentials.provider.CreateEntry$Builder: android.graphics.drawable.Icon icon> = r1;

        return r0;
    }

    public final androidx.credentials.provider.CreateEntry$Builder setDescription(java.lang.CharSequence)
    {
        androidx.credentials.provider.CreateEntry$Builder r0;
        java.lang.CharSequence r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.credentials.provider.CreateEntry$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 == null goto label1;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 == null goto label3;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 300 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Description must follow a limit of 300 characters.");

        throw $r2;

     label3:
        r0.<androidx.credentials.provider.CreateEntry$Builder: java.lang.CharSequence description> = r1;

        return r0;
    }

    public final androidx.credentials.provider.CreateEntry$Builder setLastUsedTime(java.time.Instant)
    {
        androidx.credentials.provider.CreateEntry$Builder r0;
        java.time.Instant r1;

        r0 := @this: androidx.credentials.provider.CreateEntry$Builder;

        r1 := @parameter0: java.time.Instant;

        r0.<androidx.credentials.provider.CreateEntry$Builder: java.time.Instant lastUsedTime> = r1;

        return r0;
    }

    public final androidx.credentials.provider.CreateEntry build()
    {
        androidx.credentials.provider.CreateEntry$Builder r0;
        androidx.credentials.provider.CreateEntry $r1;
        java.util.Map $r2;
        java.time.Instant $r3;
        java.lang.CharSequence $r4, $r7;
        android.graphics.drawable.Icon $r5;
        android.app.PendingIntent $r6;

        r0 := @this: androidx.credentials.provider.CreateEntry$Builder;

        $r1 = new androidx.credentials.provider.CreateEntry;

        $r7 = r0.<androidx.credentials.provider.CreateEntry$Builder: java.lang.CharSequence accountName>;

        $r6 = r0.<androidx.credentials.provider.CreateEntry$Builder: android.app.PendingIntent pendingIntent>;

        $r5 = r0.<androidx.credentials.provider.CreateEntry$Builder: android.graphics.drawable.Icon icon>;

        $r4 = r0.<androidx.credentials.provider.CreateEntry$Builder: java.lang.CharSequence description>;

        $r3 = r0.<androidx.credentials.provider.CreateEntry$Builder: java.time.Instant lastUsedTime>;

        $r2 = r0.<androidx.credentials.provider.CreateEntry$Builder: java.util.Map credentialCountInformationMap>;

        specialinvoke $r1.<androidx.credentials.provider.CreateEntry: void <init>(java.lang.CharSequence,android.app.PendingIntent,android.graphics.drawable.Icon,java.lang.CharSequence,java.time.Instant,java.util.Map)>($r7, $r6, $r5, $r4, $r3, $r2);

        return $r1;
    }

androidx.credentials.provider.CreateEntry$Companion$CREATOR$1
    void <init>()
    {
        androidx.credentials.provider.CreateEntry$Companion$CREATOR$1 r0;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion$CREATOR$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.credentials.provider.CreateEntry createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.CreateEntry$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        android.service.credentials.CreateEntry r2;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        androidx.credentials.provider.CreateEntry$Companion $r5;
        android.app.slice.Slice $r6;
        androidx.credentials.provider.CreateEntry $r7;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r3 = <android.service.credentials.CreateEntry: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r2 = (android.service.credentials.CreateEntry) $r4;

        $r5 = <androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion>;

        $r6 = virtualinvoke r2.<android.service.credentials.CreateEntry: android.app.slice.Slice getSlice()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "createEntry.slice");

        $r7 = virtualinvoke $r5.<androidx.credentials.provider.CreateEntry$Companion: androidx.credentials.provider.CreateEntry fromSlice(android.app.slice.Slice)>($r6);

        return $r7;
    }

    public androidx.credentials.provider.CreateEntry[] newArray(int)
    {
        androidx.credentials.provider.CreateEntry$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.CreateEntry[] $r1;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.credentials.provider.CreateEntry)[i0];

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.CreateEntry$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        androidx.credentials.provider.CreateEntry $r2;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.credentials.provider.CreateEntry$Companion$CREATOR$1: androidx.credentials.provider.CreateEntry createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.credentials.provider.CreateEntry$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.CreateEntry[] $r1;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.credentials.provider.CreateEntry$Companion$CREATOR$1: androidx.credentials.provider.CreateEntry[] newArray(int)>(i0);

        return $r1;
    }

androidx.credentials.provider.CreateEntry$Companion
    private void <init>()
    {
        androidx.credentials.provider.CreateEntry$Companion r0;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void getTYPE_TOTAL_CREDENTIAL$credentials_release$annotations()
    {
        return;
    }

    public static void getSLICE_HINT_ACCOUNT_NAME$credentials_release$annotations()
    {
        return;
    }

    public static void getSLICE_HINT_NOTE$credentials_release$annotations()
    {
        return;
    }

    public static void getSLICE_HINT_ICON$credentials_release$annotations()
    {
        return;
    }

    public static void getSLICE_HINT_CREDENTIAL_COUNT_INFORMATION$credentials_release$annotations()
    {
        return;
    }

    public static void getSLICE_HINT_LAST_USED_TIME_MILLIS$credentials_release$annotations()
    {
        return;
    }

    public static void getSLICE_HINT_PENDING_INTENT$credentials_release$annotations()
    {
        return;
    }

    public final android.app.slice.Slice toSlice(java.lang.CharSequence, android.graphics.drawable.Icon, java.lang.CharSequence, java.time.Instant, java.util.Map, android.app.PendingIntent)
    {
        androidx.credentials.provider.CreateEntry$Companion r0;
        java.lang.CharSequence r1, r3;
        android.graphics.drawable.Icon r2;
        java.time.Instant r4;
        java.util.Map r5;
        android.app.PendingIntent r6;
        android.app.slice.Slice$Builder r7, $r9, $r14, $r16;
        android.os.Bundle r8, $r20;
        android.app.slice.SliceSpec $r10;
        android.net.Uri $r11;
        java.util.List $r12, $r15, $r21, $r23, $r25, $r27;
        android.app.slice.Slice $r17, $r19;
        long $l0;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.graphics.drawable.Icon;

        r3 := @parameter2: java.lang.CharSequence;

        r4 := @parameter3: java.time.Instant;

        r5 := @parameter4: java.util.Map;

        r6 := @parameter5: android.app.PendingIntent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "accountName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "credentialCountInformationMap");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "pendingIntent");

        $r9 = new android.app.slice.Slice$Builder;

        $r11 = <android.net.Uri: android.net.Uri EMPTY>;

        $r10 = new android.app.slice.SliceSpec;

        specialinvoke $r10.<android.app.slice.SliceSpec: void <init>(java.lang.String,int)>("type", 1);

        specialinvoke $r9.<android.app.slice.Slice$Builder: void <init>(android.net.Uri,android.app.slice.SliceSpec)>($r11, $r10);

        r7 = $r9;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>("androidx.credentials.provider.createEntry.SLICE_HINT_USER_PROVIDER_ACCOUNT_NAME");

        virtualinvoke r7.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addText(java.lang.CharSequence,java.lang.String,java.util.List)>(r1, null, $r12);

        if r4 == null goto label1;

        $l0 = virtualinvoke r4.<java.time.Instant: long toEpochMilli()>();

        $r27 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>("androidx.credentials.provider.createEntry.SLICE_HINT_LAST_USED_TIME_MILLIS");

        virtualinvoke r7.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addLong(long,java.lang.String,java.util.List)>($l0, null, $r27);

     label1:
        if r3 == null goto label2;

        $r25 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>("androidx.credentials.provider.createEntry.SLICE_HINT_NOTE");

        virtualinvoke r7.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addText(java.lang.CharSequence,java.lang.String,java.util.List)>(r3, null, $r25);

     label2:
        if r2 == null goto label3;

        $r23 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>("androidx.credentials.provider.createEntry.SLICE_HINT_PROFILE_ICON");

        virtualinvoke r7.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addIcon(android.graphics.drawable.Icon,java.lang.String,java.util.List)>(r2, null, $r23);

     label3:
        r8 = virtualinvoke r0.<androidx.credentials.provider.CreateEntry$Companion: android.os.Bundle convertCredentialCountInfoToBundle$credentials_release(java.util.Map)>(r5);

        if r8 == null goto label4;

        $r20 = virtualinvoke r0.<androidx.credentials.provider.CreateEntry$Companion: android.os.Bundle convertCredentialCountInfoToBundle$credentials_release(java.util.Map)>(r5);

        $r21 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>("androidx.credentials.provider.createEntry.SLICE_HINT_CREDENTIAL_COUNT_INFORMATION");

        virtualinvoke r7.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addBundle(android.os.Bundle,java.lang.String,java.util.List)>($r20, null, $r21);

     label4:
        $r14 = new android.app.slice.Slice$Builder;

        specialinvoke $r14.<android.app.slice.Slice$Builder: void <init>(android.app.slice.Slice$Builder)>(r7);

        $r15 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("androidx.credentials.provider.createEntry.SLICE_HINT_PENDING_INTENT");

        $r16 = virtualinvoke $r14.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addHints(java.util.List)>($r15);

        $r17 = virtualinvoke $r16.<android.app.slice.Slice$Builder: android.app.slice.Slice build()>();

        virtualinvoke r7.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addAction(android.app.PendingIntent,android.app.slice.Slice,java.lang.String)>(r6, $r17, null);

        $r19 = virtualinvoke r7.<android.app.slice.Slice$Builder: android.app.slice.Slice build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "sliceBuilder.build()");

        return $r19;
    }

    public final androidx.credentials.provider.CreateEntry fromSlice(android.app.slice.Slice)
    {
        androidx.credentials.provider.CreateEntry$Companion r0, $r8;
        android.app.slice.Slice r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        android.app.slice.SliceItem r4;
        java.util.LinkedHashMap $r5;
        java.util.List $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.credentials.provider.CreateEntry $r7, $r24;
        long $l0;
        android.os.Bundle $r9;
        java.util.Map $r10, r20;
        java.lang.Throwable $r11;
        java.lang.StringBuilder $r12, $r13, $r15;
        java.lang.String $r14, $r16;
        java.lang.CharSequence r17, r21;
        android.graphics.drawable.Icon r18;
        android.app.PendingIntent r19;
        java.time.Instant r22;
        java.lang.Iterable $r23;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion;

        r1 := @parameter0: android.app.slice.Slice;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slice");

        r17 = null;

        r18 = null;

        r19 = null;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r20 = (java.util.Map) $r5;

        r21 = null;

        r22 = null;

        $r6 = virtualinvoke r1.<android.app.slice.Slice: java.util.List getItems()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "slice.items");

        $r23 = (java.lang.Iterable) $r6;

        r2 = interfaceinvoke $r23.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.app.slice.SliceItem) r3;

        $z1 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.createEntry.SLICE_HINT_USER_PROVIDER_ACCOUNT_NAME");

        if $z1 == 0 goto label02;

        r17 = virtualinvoke r4.<android.app.slice.SliceItem: java.lang.CharSequence getText()>();

        goto label07;

     label02:
        $z2 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.createEntry.SLICE_HINT_PROFILE_ICON");

        if $z2 == 0 goto label03;

        r18 = virtualinvoke r4.<android.app.slice.SliceItem: android.graphics.drawable.Icon getIcon()>();

        goto label07;

     label03:
        $z3 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.createEntry.SLICE_HINT_PENDING_INTENT");

        if $z3 == 0 goto label04;

        r19 = virtualinvoke r4.<android.app.slice.SliceItem: android.app.PendingIntent getAction()>();

        goto label07;

     label04:
        $z4 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.createEntry.SLICE_HINT_CREDENTIAL_COUNT_INFORMATION");

        if $z4 == 0 goto label05;

        $r8 = <androidx.credentials.provider.CreateEntry: androidx.credentials.provider.CreateEntry$Companion Companion>;

        $r9 = virtualinvoke r4.<android.app.slice.SliceItem: android.os.Bundle getBundle()>();

        $r10 = virtualinvoke $r8.<androidx.credentials.provider.CreateEntry$Companion: java.util.Map convertBundleToCredentialCountInfo$credentials_release(android.os.Bundle)>($r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r10, "null cannot be cast to non-null type kotlin.collections.MutableMap<kotlin.String, kotlin.Int?>");

        r20 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)>($r10);

        goto label07;

     label05:
        $z5 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.createEntry.SLICE_HINT_LAST_USED_TIME_MILLIS");

        if $z5 == 0 goto label06;

        $l0 = virtualinvoke r4.<android.app.slice.SliceItem: long getLong()>();

        r22 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l0);

        goto label07;

     label06:
        $z6 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.createEntry.SLICE_HINT_NOTE");

        if $z6 == 0 goto label07;

        r21 = virtualinvoke r4.<android.app.slice.SliceItem: java.lang.CharSequence getText()>();

     label07:
        goto label01;

     label08:
        $r7 = new androidx.credentials.provider.CreateEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r17);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r19);

        specialinvoke $r7.<androidx.credentials.provider.CreateEntry: void <init>(java.lang.CharSequence,android.app.PendingIntent,android.graphics.drawable.Icon,java.lang.CharSequence,java.time.Instant,java.util.Map)>(r17, r19, r18, r21, r22, r20);

        $r24 = $r7;

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromSlice failed with: ");

        $r14 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CreateEntry", $r16);

        $r24 = null;

     label11:
        return $r24;

        catch java.lang.Exception from label08 to label09 with label10;
    }

    public final java.util.Map convertBundleToCredentialCountInfo$credentials_release(android.os.Bundle)
    {
        androidx.credentials.provider.CreateEntry$Companion r0;
        android.os.Bundle r1;
        java.util.HashMap r2, $r8;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        java.lang.String r6, $r18, $r20;
        java.lang.Throwable r7, $r15;
        java.util.Set $r9;
        boolean $z2;
        java.util.Map $r10, $r11, $r14;
        int $i0;
        java.lang.Integer $r12;
        java.lang.StringBuilder $r16, $r17, $r19;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion;

        r1 := @parameter0: android.os.Bundle;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r2 = $r8;

        if r1 != null goto label1;

        $r14 = (java.util.Map) r2;

        return $r14;

     label1:
        $r9 = virtualinvoke r1.<android.os.Bundle: java.util.Set keySet()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "bundle.keySet()");

        $r3 = (java.lang.Iterable) $r9;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) r5;

     label3:
        $r11 = (java.util.Map) r2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "it");

        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>(r6);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r12);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        r7 = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Issue unpacking credential count info bundle: ");

        $r18 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CreateEntry", $r20);

     label6:
        goto label2;

     label7:
        $r10 = (java.util.Map) r2;

        return $r10;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public final android.os.Bundle convertCredentialCountInfoToBundle$credentials_release(java.util.Map)
    {
        androidx.credentials.provider.CreateEntry$Companion r0;
        java.util.Map r1;
        android.os.Bundle r2, $r6;
        java.util.Iterator r3;
        java.util.Map$Entry r4, r5;
        java.util.Set $r7;
        boolean $z2, z3;
        java.lang.Object $r8, $r9, $r10, $r12;
        java.lang.String $r11;
        java.lang.Number $r13;
        int $i0;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "credentialCountInformationMap");

        z3 = 0;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r2 = $r6;

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r8;

        r5 = r4;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r9 == null goto label2;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r10;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r12);

        $r13 = (java.lang.Number) $r12;

        $i0 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>($r11, $i0);

        z3 = 1;

     label2:
        goto label1;

     label3:
        if z3 != 0 goto label4;

        return null;

     label4:
        return r2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.CreateEntry$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.provider.CreateEntry$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.provider.CreateEntry$Companion: void <init>()>();

        return;
    }

