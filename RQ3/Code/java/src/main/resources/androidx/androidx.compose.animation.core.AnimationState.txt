androidx.compose.animation.core.AnimationState
<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>
<androidx.compose.animation.core.AnimationState: androidx.compose.runtime.MutableState value$delegate>
<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector velocityVector>
<androidx.compose.animation.core.AnimationState: long lastFrameTimeNanos>
<androidx.compose.animation.core.AnimationState: long finishedTimeNanos>
<androidx.compose.animation.core.AnimationState: boolean isRunning>
<androidx.compose.animation.core.AnimationState: int $stable>
    public void <init>(androidx.compose.animation.core.TwoWayConverter, java.lang.Object, androidx.compose.animation.core.AnimationVector, long, long, boolean)
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.animation.core.TwoWayConverter r1, $r5;
        java.lang.Object r2;
        androidx.compose.animation.core.AnimationVector r3, $r7;
        long l0, l1;
        boolean z0;
        androidx.compose.runtime.MutableState $r4;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        r1 := @parameter0: androidx.compose.animation.core.TwoWayConverter;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.compose.animation.core.AnimationVector;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        z0 := @parameter5: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeConverter");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter> = r1;

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r2, null, 2, null);

        r0.<androidx.compose.animation.core.AnimationState: androidx.compose.runtime.MutableState value$delegate> = $r4;

        if r3 == null goto label1;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector copy(androidx.compose.animation.core.AnimationVector)>(r3);

        if $r7 != null goto label2;

     label1:
        $r5 = r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationStateKt: androidx.compose.animation.core.AnimationVector createZeroVectorFrom(androidx.compose.animation.core.TwoWayConverter,java.lang.Object)>($r5, r2);

     label2:
        r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector velocityVector> = $r7;

        r0.<androidx.compose.animation.core.AnimationState: long lastFrameTimeNanos> = l0;

        r0.<androidx.compose.animation.core.AnimationState: long finishedTimeNanos> = l1;

        r0.<androidx.compose.animation.core.AnimationState: boolean isRunning> = z0;

        return;
    }

    public void <init>(androidx.compose.animation.core.TwoWayConverter, java.lang.Object, androidx.compose.animation.core.AnimationVector, long, long, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.animation.core.TwoWayConverter r1;
        java.lang.Object r2;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        androidx.compose.animation.core.AnimationVector r4;
        long l5, l6;
        boolean z0;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        r1 := @parameter0: androidx.compose.animation.core.TwoWayConverter;

        r2 := @parameter1: java.lang.Object;

        r4 := @parameter2: androidx.compose.animation.core.AnimationVector;

        l5 := @parameter3: long;

        l6 := @parameter4: long;

        z0 := @parameter5: boolean;

        i0 := @parameter6: int;

        r3 := @parameter7: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        l5 = -9223372036854775808L;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        l6 = -9223372036854775808L;

     label3:
        $i4 = i0 & 32;

        if $i4 == 0 goto label4;

        z0 = 0;

     label4:
        specialinvoke r0.<androidx.compose.animation.core.AnimationState: void <init>(androidx.compose.animation.core.TwoWayConverter,java.lang.Object,androidx.compose.animation.core.AnimationVector,long,long,boolean)>(r1, r2, r4, l5, l6, z0);

        return;
    }

    public final androidx.compose.animation.core.TwoWayConverter getTypeConverter()
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.animation.core.TwoWayConverter $r1;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        $r1 = r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        $r2 = r0.<androidx.compose.animation.core.AnimationState: androidx.compose.runtime.MutableState value$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r3;
    }

    public void setValue$animation_core_release(java.lang.Object)
    {
        androidx.compose.animation.core.AnimationState r0;
        java.lang.Object r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.animation.core.AnimationState: androidx.compose.runtime.MutableState value$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final androidx.compose.animation.core.AnimationVector getVelocityVector()
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.animation.core.AnimationVector $r1;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        $r1 = r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector velocityVector>;

        return $r1;
    }

    public final void setVelocityVector$animation_core_release(androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.animation.core.AnimationVector r1;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector velocityVector> = r1;

        return;
    }

    public final long getLastFrameTimeNanos()
    {
        androidx.compose.animation.core.AnimationState r0;
        long $l0;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        $l0 = r0.<androidx.compose.animation.core.AnimationState: long lastFrameTimeNanos>;

        return $l0;
    }

    public final void setLastFrameTimeNanos$animation_core_release(long)
    {
        androidx.compose.animation.core.AnimationState r0;
        long l0;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        l0 := @parameter0: long;

        r0.<androidx.compose.animation.core.AnimationState: long lastFrameTimeNanos> = l0;

        return;
    }

    public final long getFinishedTimeNanos()
    {
        androidx.compose.animation.core.AnimationState r0;
        long $l0;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        $l0 = r0.<androidx.compose.animation.core.AnimationState: long finishedTimeNanos>;

        return $l0;
    }

    public final void setFinishedTimeNanos$animation_core_release(long)
    {
        androidx.compose.animation.core.AnimationState r0;
        long l0;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        l0 := @parameter0: long;

        r0.<androidx.compose.animation.core.AnimationState: long finishedTimeNanos> = l0;

        return;
    }

    public final boolean isRunning()
    {
        androidx.compose.animation.core.AnimationState r0;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        $z0 = r0.<androidx.compose.animation.core.AnimationState: boolean isRunning>;

        return $z0;
    }

    public final void setRunning$animation_core_release(boolean)
    {
        androidx.compose.animation.core.AnimationState r0;
        boolean z0;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.animation.core.AnimationState: boolean isRunning> = z0;

        return;
    }

    public final java.lang.Object getVelocity()
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.animation.core.TwoWayConverter $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.compose.animation.core.AnimationVector $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        $r1 = r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r2 = interfaceinvoke $r1.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r3 = r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector velocityVector>;

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return $r4;
    }

    public java.lang.String toString()
    {
        androidx.compose.animation.core.AnimationState r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.Object $r3, $r6;
        boolean $z0;
        long $l0, $l1;
        java.lang.String $r15;

        r0 := @this: androidx.compose.animation.core.AnimationState;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnimationState(value=");

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.AnimationState: java.lang.Object getValue()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", velocity=");

        $r6 = virtualinvoke r0.<androidx.compose.animation.core.AnimationState: java.lang.Object getVelocity()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isRunning=");

        $z0 = r0.<androidx.compose.animation.core.AnimationState: boolean isRunning>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lastFrameTimeNanos=");

        $l0 = r0.<androidx.compose.animation.core.AnimationState: long lastFrameTimeNanos>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", finishedTimeNanos=");

        $l1 = r0.<androidx.compose.animation.core.AnimationState: long finishedTimeNanos>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    static void <clinit>()
    {
        return;
    }

