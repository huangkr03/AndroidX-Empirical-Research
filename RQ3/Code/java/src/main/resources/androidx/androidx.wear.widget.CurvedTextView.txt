androidx.wear.widget.CurvedTextView
<androidx.wear.widget.CurvedTextView: float UNSET_ANCHOR_DEGREE>
<androidx.wear.widget.CurvedTextView: int UNSET_ANCHOR_TYPE>
<androidx.wear.widget.CurvedTextView: float MIN_SWEEP_DEGREE>
<androidx.wear.widget.CurvedTextView: float MAX_SWEEP_DEGREE>
<androidx.wear.widget.CurvedTextView: float DEFAULT_TEXT_SIZE>
<androidx.wear.widget.CurvedTextView: int DEFAULT_TEXT_COLOR>
<androidx.wear.widget.CurvedTextView: int DEFAULT_TEXT_STYLE>
<androidx.wear.widget.CurvedTextView: boolean DEFAULT_CLOCKWISE>
<androidx.wear.widget.CurvedTextView: int FONT_WEIGHT_MAX>
<androidx.wear.widget.CurvedTextView: float ITALIC_SKEW_X>
<androidx.wear.widget.CurvedTextView: float ANCHOR_DEGREE_OFFSET>
<androidx.wear.widget.CurvedTextView: android.graphics.Path mPath>
<androidx.wear.widget.CurvedTextView: android.graphics.Path mBgPath>
<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>
<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBounds>
<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBgBounds>
<androidx.wear.widget.CurvedTextView: boolean mDirty>
<androidx.wear.widget.CurvedTextView: java.lang.String mTextToDraw>
<androidx.wear.widget.CurvedTextView: float mPathRadius>
<androidx.wear.widget.CurvedTextView: float mTextSweepDegrees>
<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>
<androidx.wear.widget.CurvedTextView: int mLastUsedTextAlignment>
<androidx.wear.widget.CurvedTextView: float mLocalRotateAngle>
<androidx.wear.widget.CurvedTextView: int mAnchorType>
<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees>
<androidx.wear.widget.CurvedTextView: float mMinSweepDegrees>
<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees>
<androidx.wear.widget.CurvedTextView: java.lang.String mText>
<androidx.wear.widget.CurvedTextView: float mTextSize>
<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface>
<androidx.wear.widget.CurvedTextView: boolean mClockwise>
<androidx.wear.widget.CurvedTextView: int mTextColor>
<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize>
<androidx.wear.widget.CurvedTextView: float mLetterSpacing>
<androidx.wear.widget.CurvedTextView: java.lang.String mFontFeatureSettings>
<androidx.wear.widget.CurvedTextView: java.lang.String mFontVariationSettings>
<androidx.wear.widget.CurvedTextView: boolean mHandlingTouch>
    public void <init>(android.content.Context)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.content.Context r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842884);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        androidx.wear.widget.CurvedTextView$TextAppearanceAttributes r3, $r11;
        android.content.res.Resources$Theme r4;
        android.graphics.Path $r5, $r6;
        android.text.TextPaint $r7, $r10, $r16;
        android.graphics.Rect $r8, $r9;
        android.content.res.ColorStateList $r12;
        int[] $r13, $r14, $r21;
        boolean $z0, $z1;
        android.text.TextUtils$TruncateAt $r15, $r18, $r19;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.IllegalArgumentException $r17;
        java.lang.String $r20;
        android.content.res.TypedArray r22, r23, r24;
        byte $b14;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r5 = new android.graphics.Path;

        specialinvoke $r5.<android.graphics.Path: void <init>()>();

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mPath> = $r5;

        $r6 = new android.graphics.Path;

        specialinvoke $r6.<android.graphics.Path: void <init>()>();

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mBgPath> = $r6;

        $r7 = new android.text.TextPaint;

        specialinvoke $r7.<android.text.TextPaint: void <init>()>();

        r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBounds> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBgBounds> = $r9;

        r0.<androidx.wear.widget.CurvedTextView: boolean mDirty> = 1;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mTextToDraw> = "";

        r0.<androidx.wear.widget.CurvedTextView: float mPathRadius> = 0.0F;

        r0.<androidx.wear.widget.CurvedTextView: float mTextSweepDegrees> = 0.0F;

        r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees> = 359.9F;

        r0.<androidx.wear.widget.CurvedTextView: int mLastUsedTextAlignment> = -1;

        r0.<androidx.wear.widget.CurvedTextView: float mLocalRotateAngle> = 0.0F;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText> = "";

        r0.<androidx.wear.widget.CurvedTextView: float mTextSize> = 24.0F;

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface> = null;

        r0.<androidx.wear.widget.CurvedTextView: boolean mClockwise> = 1;

        r0.<androidx.wear.widget.CurvedTextView: int mTextColor> = -1;

        r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize> = null;

        r0.<androidx.wear.widget.CurvedTextView: float mLetterSpacing> = 0.0F;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mFontFeatureSettings> = null;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mFontVariationSettings> = null;

        r0.<androidx.wear.widget.CurvedTextView: boolean mHandlingTouch> = 0;

        $r10 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        virtualinvoke $r10.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $r11 = new androidx.wear.widget.CurvedTextView$TextAppearanceAttributes;

        specialinvoke $r11.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: void <init>()>();

        r3 = $r11;

        $r12 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(-1);

        r3.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor> = $r12;

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r13 = <androidx.wear.R$styleable: int[] TextViewAppearance>;

        r22 = virtualinvoke r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r13, i0, i1);

        r23 = null;

        $i4 = <androidx.wear.R$styleable: int TextViewAppearance_android_textAppearance>;

        i2 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>($i4, -1);

        virtualinvoke r22.<android.content.res.TypedArray: void recycle()>();

        if i2 == -1 goto label1;

        $r21 = <androidx.wear.R$styleable: int[] TextAppearance>;

        r23 = virtualinvoke r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i2, $r21);

     label1:
        if r23 == null goto label2;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void readTextAppearance(android.content.res.TypedArray,androidx.wear.widget.CurvedTextView$TextAppearanceAttributes,boolean)>(r23, r3, 1);

        virtualinvoke r23.<android.content.res.TypedArray: void recycle()>();

     label2:
        $r14 = <androidx.wear.R$styleable: int[] CurvedTextView>;

        r24 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r14, i0, i1);

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void readTextAppearance(android.content.res.TypedArray,androidx.wear.widget.CurvedTextView$TextAppearanceAttributes,boolean)>(r24, r3, 0);

        $i5 = <androidx.wear.R$styleable: int CurvedTextView_android_text>;

        $z0 = virtualinvoke r24.<android.content.res.TypedArray: boolean hasValue(int)>($i5);

        if $z0 == 0 goto label3;

        $i11 = <androidx.wear.R$styleable: int CurvedTextView_android_text>;

        $r20 = virtualinvoke r24.<android.content.res.TypedArray: java.lang.String getString(int)>($i11);

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText> = $r20;

     label3:
        $i6 = <androidx.wear.R$styleable: int CurvedTextView_android_ellipsize>;

        i3 = virtualinvoke r24.<android.content.res.TypedArray: int getInt(int,int)>($i6, 0);

        tableswitch(i3)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label4:
        $r19 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize> = $r19;

        goto label8;

     label5:
        $r18 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MIDDLE>;

        r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize> = $r18;

        goto label8;

     label6:
        $r15 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize> = $r15;

        goto label8;

     label7:
        r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize> = null;

     label8:
        $i12 = <androidx.wear.R$styleable: int CurvedTextView_maxSweepDegrees>;

        $f4 = virtualinvoke r24.<android.content.res.TypedArray: float getFloat(int,float)>($i12, 359.9F);

        r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees> = $f4;

        $f5 = r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees>;

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>($f5, 359.9F);

        r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees> = $f6;

        $i13 = <androidx.wear.R$styleable: int CurvedTextView_minSweepDegrees>;

        $f7 = virtualinvoke r24.<android.content.res.TypedArray: float getFloat(int,float)>($i13, 0.0F);

        r0.<androidx.wear.widget.CurvedTextView: float mMinSweepDegrees> = $f7;

        $f8 = r0.<androidx.wear.widget.CurvedTextView: float mMinSweepDegrees>;

        $f9 = r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees>;

        $b14 = $f8 cmpl $f9;

        if $b14 <= 0 goto label9;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MinSweepDegrees cannot be bigger than MaxSweepDegrees");

        throw $r17;

     label9:
        $i7 = <androidx.wear.R$styleable: int CurvedTextView_anchorPosition>;

        $i8 = virtualinvoke r24.<android.content.res.TypedArray: int getInt(int,int)>($i7, -1);

        r0.<androidx.wear.widget.CurvedTextView: int mAnchorType> = $i8;

        $i9 = <androidx.wear.R$styleable: int CurvedTextView_anchorAngleDegrees>;

        $f0 = virtualinvoke r24.<android.content.res.TypedArray: float getFloat(int,float)>($i9, -1.0F);

        r0.<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees> = $f0;

        $f1 = r0.<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees>;

        $f2 = $f1 % 360.0F;

        r0.<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees> = $f2;

        $i10 = <androidx.wear.R$styleable: int CurvedTextView_clockwise>;

        $z1 = virtualinvoke r24.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i10, 1);

        r0.<androidx.wear.widget.CurvedTextView: boolean mClockwise> = $z1;

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void applyTextAppearance(androidx.wear.widget.CurvedTextView$TextAppearanceAttributes)>(r3);

        $r16 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $f3 = r0.<androidx.wear.widget.CurvedTextView: float mTextSize>;

        virtualinvoke $r16.<android.text.TextPaint: void setTextSize(float)>($f3);

        return;
    }

    public float getSweepAngleDegrees()
    {
        androidx.wear.widget.CurvedTextView r0;
        float $f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $f0 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        return $f0;
    }

    public int getThickness()
    {
        androidx.wear.widget.CurvedTextView r0;
        android.text.TextPaint $r1, $r3;
        android.graphics.Paint$FontMetrics $r2, $r4;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f0 = $r2.<android.graphics.Paint$FontMetrics: float descent>;

        $r3 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r4 = virtualinvoke $r3.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f1 = $r4.<android.graphics.Paint$FontMetrics: float ascent>;

        $f2 = $f0 - $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f2);

        return $i0;
    }

    public void checkInvalidAttributeAsChild()
    {
        androidx.wear.widget.CurvedTextView r0;
        int $i0;
        float $f0;
        byte $b1;
        java.lang.IllegalArgumentException $r1, $r2;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $i0 = r0.<androidx.wear.widget.CurvedTextView: int mAnchorType>;

        if $i0 == -1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CurvedTextView shall not set anchorType value when added intoArcLayout");

        throw $r2;

     label1:
        $f0 = r0.<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees>;

        $b1 = $f0 cmpl -1.0F;

        if $b1 == 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CurvedTextView shall not set anchorAngleDegrees value when added into ArcLayout");

        throw $r1;

     label2:
        return;
    }

    public boolean isPointInsideClickArea(float, float)
    {
        androidx.wear.widget.CurvedTextView r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i10;
        boolean $z0, $z1;
        android.text.TextPaint $r1, $r3;
        android.graphics.Paint$FontMetrics $r2, $r4;
        byte $b7, $b8, $b9;
        double $d0, $d1, $d2, $d3;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getWidth()>();

        $i1 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $f8 = (float) $i2;

        $f9 = $f8 / 2.0F;

        $z0 = r0.<androidx.wear.widget.CurvedTextView: boolean mClockwise>;

        if $z0 == 0 goto label1;

        $i10 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingTop()>();

        goto label2;

     label1:
        $i10 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingBottom()>();

     label2:
        $f10 = (float) $i10;

        f2 = $f9 - $f10;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f11 = $r2.<android.graphics.Paint$FontMetrics: float descent>;

        $f12 = f2 - $f11;

        $r3 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r4 = virtualinvoke $r3.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f13 = $r4.<android.graphics.Paint$FontMetrics: float ascent>;

        f3 = $f12 + $f13;

        $i3 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getWidth()>();

        $i4 = $i3 / 2;

        $f14 = (float) $i4;

        f4 = f0 - $f14;

        $i5 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getHeight()>();

        $i6 = $i5 / 2;

        $f15 = (float) $i6;

        f5 = f1 - $f15;

        $f17 = f4 * f4;

        $f16 = f5 * f5;

        f6 = $f17 + $f16;

        $f18 = f3 * f3;

        $b7 = f6 cmpg $f18;

        if $b7 < 0 goto label3;

        $f19 = f2 * f2;

        $b8 = f6 cmpl $f19;

        if $b8 <= 0 goto label4;

     label3:
        return 0;

     label4:
        $f20 = staticinvoke <java.lang.Math: float abs(float)>(f4);

        $d1 = (double) $f20;

        $f21 = neg f5;

        $d0 = (double) $f21;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        $d3 = staticinvoke <java.lang.Math: double toDegrees(double)>($d2);

        f7 = (float) $d3;

        $f22 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $f23 = $f22 / 2.0F;

        $b9 = f7 cmpg $f23;

        if $b9 >= 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        androidx.wear.widget.CurvedTextView r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.wear.widget.CurvedTextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r1, $r3;
        android.text.TextPaint $r2, $r5, $r7;
        android.graphics.Rect $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        boolean $z0;
        android.graphics.Paint$FontMetrics $r6, $r8;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.view.View: void onMeasure(int,int)>(i0, i1);

        $r2 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r3 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r4 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBounds>;

        virtualinvoke $r2.<android.text.TextPaint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>($r3, 0, $i2, $r4);

        $i3 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getMeasuredWidth()>();

        $i4 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getMeasuredHeight()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $f0 = (float) $i5;

        $f1 = $f0 / 2.0F;

        $z0 = r0.<androidx.wear.widget.CurvedTextView: boolean mClockwise>;

        if $z0 == 0 goto label1;

        $r7 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r8 = virtualinvoke $r7.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f17 = $r8.<android.graphics.Paint$FontMetrics: float ascent>;

        $i7 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingTop()>();

        $f18 = (float) $i7;

        $f19 = $f17 - $f18;

        goto label2;

     label1:
        $r5 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r6 = virtualinvoke $r5.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f2 = $r6.<android.graphics.Paint$FontMetrics: float descent>;

        $f3 = neg $f2;

        $i6 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingBottom()>();

        $f4 = (float) $i6;

        $f19 = $f3 - $f4;

     label2:
        $f5 = $f1 + $f19;

        r0.<androidx.wear.widget.CurvedTextView: float mPathRadius> = $f5;

        $f6 = specialinvoke r0.<androidx.wear.widget.CurvedTextView: float getWidthSelf()>();

        $f7 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $f8 = $f6 / $f7;

        $f9 = $f8 / 3.1415927F;

        $f10 = $f9 * 180.0F;

        $f11 = staticinvoke <java.lang.Math: float min(float,float)>($f10, 359.9F);

        r0.<androidx.wear.widget.CurvedTextView: float mTextSweepDegrees> = $f11;

        $f13 = r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees>;

        $f12 = r0.<androidx.wear.widget.CurvedTextView: float mTextSweepDegrees>;

        $f14 = staticinvoke <java.lang.Math: float min(float,float)>($f13, $f12);

        $f15 = r0.<androidx.wear.widget.CurvedTextView: float mMinSweepDegrees>;

        $f16 = staticinvoke <java.lang.Math: float max(float,float)>($f14, $f15);

        r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees> = $f16;

        return;
    }

    private float getWidthSelf()
    {
        androidx.wear.widget.CurvedTextView r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBounds>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingLeft()>();

        $f1 = (float) $i1;

        $f2 = $f0 + $f1;

        $i2 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingRight()>();

        $f3 = (float) $i2;

        $f4 = $f2 + $f3;

        return $f4;
    }

    private java.lang.String ellipsize(int)
    {
        androidx.wear.widget.CurvedTextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        android.text.StaticLayout$Builder r1;
        android.text.StaticLayout r2;
        char[] r3;
        java.lang.String $r4, $r5, $r11, $r12, $r13, $r14, $r15, $r16;
        android.text.TextPaint $r6;
        android.text.TextUtils$TruncateAt $r7, $r10;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        i0 := @parameter0: int;

        $r5 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        $r4 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r6 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        r1 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>($r5, 0, $i3, $r6, i0);

        $r7 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize>;

        virtualinvoke r1.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>($r7);

        virtualinvoke r1.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>(1);

        r2 = virtualinvoke r1.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        $r10 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r10 != null goto label1;

        $r15 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        $i6 = virtualinvoke r2.<android.text.StaticLayout: int getLineEnd(int)>(0);

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        return $r16;

     label1:
        i1 = virtualinvoke r2.<android.text.StaticLayout: int getEllipsisCount(int)>(0);

        if i1 != 0 goto label2;

        $r14 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        return $r14;

     label2:
        i2 = virtualinvoke r2.<android.text.StaticLayout: int getEllipsisStart(int)>(0);

        $r11 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        r3 = virtualinvoke $r11.<java.lang.String: char[] toCharArray()>();

        r3[i2] = 8230;

        i7 = i2 + 1;

     label3:
        $i4 = i2 + i1;

        if i7 >= $i4 goto label5;

        if i7 < 0 goto label4;

        $r13 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        $i5 = virtualinvoke $r13.<java.lang.String: int length()>();

        if i7 >= $i5 goto label4;

        r3[i7] = 65279;

     label4:
        i7 = i7 + 1;

        goto label3;

     label5:
        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(char[])>(r3);

        return $r12;
    }

    private void updatePathsIfNeeded(boolean)
    {
        androidx.wear.widget.CurvedTextView r0;
        boolean z0, $z1, $z2;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, f86, f87, f88, $f89, $f90, f91, f92;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i19, $i20;
        byte $b1, $b13, $b14, $b18;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56;
        java.lang.String $r1, $r17;
        android.graphics.Path $r2, $r3, $r4, $r9, $r10, $r11;
        android.text.TextPaint $r5, $r7;
        android.graphics.Paint$FontMetrics $r6, $r8;
        android.graphics.Rect $r12, $r13, $r14, $r15;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.wear.widget.CurvedTextView: boolean mDirty>;

        if $z1 != 0 goto label01;

        $i15 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getTextAlignment()>();

        $i16 = r0.<androidx.wear.widget.CurvedTextView: int mLastUsedTextAlignment>;

        if $i15 != $i16 goto label01;

        return;

     label01:
        r0.<androidx.wear.widget.CurvedTextView: boolean mDirty> = 0;

        $i0 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getTextAlignment()>();

        r0.<androidx.wear.widget.CurvedTextView: int mLastUsedTextAlignment> = $i0;

        $f15 = r0.<androidx.wear.widget.CurvedTextView: float mTextSweepDegrees>;

        $f14 = r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees>;

        $b1 = $f15 cmpg $f14;

        if $b1 > 0 goto label02;

        $r17 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mTextToDraw> = $r17;

        goto label03;

     label02:
        $f16 = r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees>;

        $f17 = $f16 / 180.0F;

        $d0 = (double) $f17;

        $d2 = $d0 * 3.141592653589793;

        $f18 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $d1 = (double) $f18;

        $d3 = $d2 * $d1;

        $i2 = (int) $d3;

        $i3 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingRight()>();

        $i6 = $i4 - $i5;

        $r1 = specialinvoke r0.<androidx.wear.widget.CurvedTextView: java.lang.String ellipsize(int)>($i6);

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mTextToDraw> = $r1;

        $f19 = r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees>;

        r0.<androidx.wear.widget.CurvedTextView: float mTextSweepDegrees> = $f19;

     label03:
        $z2 = r0.<androidx.wear.widget.CurvedTextView: boolean mClockwise>;

        if $z2 == 0 goto label04;

        $f85 = 1.0F;

        goto label05;

     label04:
        $f85 = -1.0F;

     label05:
        f0 = $f85;

        f86 = 0.5F;

        $i7 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getTextAlignment()>();

        tableswitch($i7)
        {
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label06;
            case 6: goto label07;
            default: goto label08;
        };

     label06:
        f87 = 0.0F;

        goto label09;

     label07:
        f87 = 1.0F;

        goto label09;

     label08:
        f87 = 0.5F;

     label09:
        $i17 = r0.<androidx.wear.widget.CurvedTextView: int mAnchorType>;

        tableswitch($i17)
        {
            case 0: goto label10;
            case 1: goto label12;
            case 2: goto label11;
            default: goto label12;
        };

     label10:
        f88 = 0.5F;

        goto label13;

     label11:
        f88 = -0.5F;

        goto label13;

     label12:
        f88 = 0.0F;

     label13:
        $f89 = r0.<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees>;

        $b18 = $f89 cmpl -1.0F;

        if $b18 != 0 goto label14;

        $f90 = 0.0F;

        goto label15;

     label14:
        $f90 = r0.<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees>;

     label15:
        $f21 = f0 * f88;

        $f20 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $f22 = $f21 * $f20;

        $f23 = $f90 + $f22;

        r0.<androidx.wear.widget.CurvedTextView: float mLocalRotateAngle> = $f23;

        $f24 = neg f0;

        $f26 = $f24 * 0.5F;

        $f25 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $f27 = $f26 * $f25;

        f1 = $f27 + -90.0F;

        $f29 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $f28 = r0.<androidx.wear.widget.CurvedTextView: float mTextSweepDegrees>;

        $f30 = $f29 - $f28;

        $f31 = f87 * $f30;

        $d4 = (double) $f31;

        $i8 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getPaddingLeft()>();

        $f33 = (float) $i8;

        $f32 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $f34 = $f33 / $f32;

        $d5 = (double) $f34;

        $d6 = $d5 / 3.141592653589793;

        $d7 = $d6 * 180.0;

        $d8 = $d4 + $d7;

        $f35 = (float) $d8;

        $f36 = f0 * $f35;

        f2 = f1 + $f36;

        $i9 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getWidth()>();

        $f37 = (float) $i9;

        f3 = $f37 / 2.0F;

        $i10 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getHeight()>();

        $f38 = (float) $i10;

        f4 = $f38 / 2.0F;

        $r2 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mPath>;

        virtualinvoke $r2.<android.graphics.Path: void reset()>();

        $r3 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mPath>;

        $f39 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $f48 = f3 - $f39;

        $f40 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $f47 = f4 - $f40;

        $f41 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $f46 = f3 + $f41;

        $f42 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $f45 = f4 + $f42;

        $f43 = r0.<androidx.wear.widget.CurvedTextView: float mTextSweepDegrees>;

        $f44 = f0 * $f43;

        virtualinvoke $r3.<android.graphics.Path: void addArc(float,float,float,float,float,float)>($f48, $f47, $f46, $f45, f2, $f44);

        if z0 == 0 goto label20;

        $r4 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mBgPath>;

        virtualinvoke $r4.<android.graphics.Path: void reset()>();

        $f49 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $r5 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r6 = virtualinvoke $r5.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f50 = $r6.<android.graphics.Paint$FontMetrics: float descent>;

        $f51 = f0 * $f50;

        f5 = $f49 - $f51;

        $f52 = r0.<androidx.wear.widget.CurvedTextView: float mPathRadius>;

        $r7 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r8 = virtualinvoke $r7.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f53 = $r8.<android.graphics.Paint$FontMetrics: float ascent>;

        $f54 = f0 * $f53;

        f6 = $f52 - $f54;

        $r9 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mBgPath>;

        $f60 = f3 - f6;

        $f59 = f4 - f6;

        $f58 = f3 + f6;

        $f57 = f4 + f6;

        $f55 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $f56 = f0 * $f55;

        virtualinvoke $r9.<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>($f60, $f59, $f58, $f57, f1, $f56, 0);

        $r10 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mBgPath>;

        $f70 = f3 - f5;

        $f69 = f4 - f5;

        $f68 = f3 + f5;

        $f67 = f4 + f5;

        $f61 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $f62 = f0 * $f61;

        $f66 = f1 + $f62;

        $f64 = neg f0;

        $f63 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $f65 = $f64 * $f63;

        virtualinvoke $r10.<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>($f70, $f69, $f68, $f67, $f66, $f65, 0);

        $r11 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mBgPath>;

        virtualinvoke $r11.<android.graphics.Path: void close()>();

        f91 = f1;

        $d12 = (double) f3;

        $d13 = (double) f6;

        $d9 = (double) f91;

        $d10 = $d9 * 3.141592653589793;

        $d11 = $d10 / 180.0;

        $d14 = staticinvoke <java.lang.Math: double cos(double)>($d11);

        $d15 = $d13 * $d14;

        $d16 = $d12 + $d15;

        f7 = (float) $d16;

        $d20 = (double) f3;

        $d21 = (double) f5;

        $d17 = (double) f91;

        $d18 = $d17 * 3.141592653589793;

        $d19 = $d18 / 180.0;

        $d22 = staticinvoke <java.lang.Math: double cos(double)>($d19);

        $d23 = $d21 * $d22;

        $d24 = $d20 + $d23;

        f8 = (float) $d24;

        $d28 = (double) f4;

        $d29 = (double) f6;

        $d25 = (double) f91;

        $d26 = $d25 * 3.141592653589793;

        $d27 = $d26 / 180.0;

        $d30 = staticinvoke <java.lang.Math: double sin(double)>($d27);

        $d31 = $d29 * $d30;

        $d32 = $d28 + $d31;

        f9 = (float) $d32;

        $d36 = (double) f4;

        $d37 = (double) f5;

        $d33 = (double) f91;

        $d34 = $d33 * 3.141592653589793;

        $d35 = $d34 / 180.0;

        $d38 = staticinvoke <java.lang.Math: double sin(double)>($d35);

        $d39 = $d37 * $d38;

        $d40 = $d36 + $d39;

        f10 = (float) $d40;

        $f71 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $f72 = f0 * $f71;

        f92 = f1 + $f72;

        $d44 = (double) f3;

        $d45 = (double) f6;

        $d41 = (double) f92;

        $d42 = $d41 * 3.141592653589793;

        $d43 = $d42 / 180.0;

        $d46 = staticinvoke <java.lang.Math: double cos(double)>($d43);

        $d47 = $d45 * $d46;

        $d48 = $d44 + $d47;

        f11 = (float) $d48;

        $d52 = (double) f3;

        $d53 = (double) f5;

        $d49 = (double) f92;

        $d50 = $d49 * 3.141592653589793;

        $d51 = $d50 / 180.0;

        $d54 = staticinvoke <java.lang.Math: double cos(double)>($d51);

        $d55 = $d53 * $d54;

        $d56 = $d52 + $d55;

        f12 = (float) $d56;

        f13 = staticinvoke <java.lang.Math: float max(float,float)>(f5, f6);

        $r12 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBgBounds>;

        $f73 = f4 - f13;

        $i11 = (int) $f73;

        $r12.<android.graphics.Rect: int top> = $i11;

        $r13 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBgBounds>;

        $f74 = staticinvoke <java.lang.Math: float max(float,float)>(f9, f10);

        $i12 = (int) $f74;

        $r13.<android.graphics.Rect: int bottom> = $i12;

        $r14 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBgBounds>;

        $f75 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $b13 = $f75 cmpl 180.0F;

        if $b13 < 0 goto label16;

        $f84 = f3 - f13;

        $i19 = (int) $f84;

        goto label17;

     label16:
        $f76 = staticinvoke <java.lang.Math: float min(float,float)>(f11, f12);

        $f77 = staticinvoke <java.lang.Math: float min(float,float)>(f8, $f76);

        $f78 = staticinvoke <java.lang.Math: float min(float,float)>(f7, $f77);

        $i19 = (int) $f78;

     label17:
        $r14.<android.graphics.Rect: int left> = $i19;

        $r15 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBgBounds>;

        $f79 = r0.<androidx.wear.widget.CurvedTextView: float mBackgroundSweepDegrees>;

        $b14 = $f79 cmpl 180.0F;

        if $b14 < 0 goto label18;

        $f83 = f3 + f13;

        $i20 = (int) $f83;

        goto label19;

     label18:
        $f80 = staticinvoke <java.lang.Math: float max(float,float)>(f11, f12);

        $f81 = staticinvoke <java.lang.Math: float max(float,float)>(f8, $f80);

        $f82 = staticinvoke <java.lang.Math: float max(float,float)>(f7, $f81);

        $i20 = (int) $f82;

     label19:
        $r15.<android.graphics.Rect: int right> = $i20;

     label20:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.view.MotionEvent r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<androidx.wear.widget.CurvedTextView: boolean mHandlingTouch>;

        if $z0 != 0 goto label1;

        $i10 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i10 == 0 goto label1;

        return 0;

     label1:
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i0 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getWidth()>();

        $i1 = $i0 / 2;

        $f2 = (float) $i1;

        f6 = $f1 - $f2;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i2 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getHeight()>();

        $i3 = $i2 / 2;

        $f4 = (float) $i3;

        f7 = $f3 - $f4;

        $f5 = r0.<androidx.wear.widget.CurvedTextView: float mLocalRotateAngle>;

        $d1 = (double) $f5;

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        d0 = neg $d2;

        $d3 = (double) f6;

        $d4 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d5 = $d3 * $d4;

        $d6 = (double) f7;

        $d7 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $d8 = $d6 * $d7;

        $d9 = $d5 - $d8;

        $i4 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getWidth()>();

        $i5 = $i4 / 2;

        $d10 = (double) $i5;

        $d11 = $d9 + $d10;

        f0 = (float) $d11;

        $d12 = (double) f6;

        $d13 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $d14 = $d12 * $d13;

        $d15 = (double) f7;

        $d16 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d17 = $d15 * $d16;

        $d18 = $d14 + $d17;

        $i6 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getHeight()>();

        $i7 = $i6 / 2;

        $d19 = (double) $i7;

        $d20 = $d18 + $d19;

        f8 = (float) $d20;

        f9 = f0;

        $z1 = r0.<androidx.wear.widget.CurvedTextView: boolean mHandlingTouch>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: boolean isPointInsideClickArea(float,float)>(f9, f8);

        if $z2 == 0 goto label2;

        r0.<androidx.wear.widget.CurvedTextView: boolean mHandlingTouch> = 1;

     label2:
        $z3 = r0.<androidx.wear.widget.CurvedTextView: boolean mHandlingTouch>;

        if $z3 == 0 goto label5;

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i8 == 1 goto label3;

        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i9 != 3 goto label4;

     label3:
        r0.<androidx.wear.widget.CurvedTextView: boolean mHandlingTouch> = 0;

     label4:
        $f10 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f11 = f9 - $f10;

        $f12 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f13 = f8 - $f12;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f11, $f13);

        $z4 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z4;

     label5:
        return 0;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.graphics.Canvas r1;
        boolean z0, $z2;
        android.graphics.drawable.Drawable $r2, $r4;
        float $f0, $f1, $f2, $f3, $f4;
        int $i1, $i2;
        android.graphics.Path $r3;
        android.graphics.Rect $r5;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r2 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: android.graphics.drawable.Drawable getBackground()>();

        if $r2 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void updatePathsIfNeeded(boolean)>(z0);

        $f0 = r0.<androidx.wear.widget.CurvedTextView: float mLocalRotateAngle>;

        $i1 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getWidth()>();

        $f1 = (float) $i1;

        $f2 = $f1 / 2.0F;

        $i2 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: int getHeight()>();

        $f3 = (float) $i2;

        $f4 = $f3 / 2.0F;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f0, $f2, $f4);

        if z0 == 0 goto label3;

        $r3 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mBgPath>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>($r3);

        $r4 = virtualinvoke r0.<androidx.wear.widget.CurvedTextView: android.graphics.drawable.Drawable getBackground()>();

        $r5 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Rect mBgBounds>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r5);

     label3:
        specialinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.graphics.Canvas r1;
        int $i0;
        android.text.TextPaint $r2, $r4, $r5;
        android.graphics.Paint$Style $r3;
        android.graphics.Path $r6;
        java.lang.String $r7;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $i0 = r0.<androidx.wear.widget.CurvedTextView: int mTextColor>;

        virtualinvoke $r2.<android.text.TextPaint: void setColor(int)>($i0);

        $r4 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r4.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r3);

        $r7 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mTextToDraw>;

        $r6 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Path mPath>;

        $r5 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>($r7, $r6, 0.0F, 0.0F, $r5);

        return;
    }

    private void setTypefaceFromAttrs(java.lang.String, int, int, int)
    {
        androidx.wear.widget.CurvedTextView r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.graphics.Typeface r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface>;

        if $r3 != null goto label1;

        if r1 == null goto label1;

        r2 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r1, 0);

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>(r2, i1, i2);

        goto label7;

     label1:
        $r4 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface>;

        if $r4 == null goto label2;

        $r8 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface>;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>($r8, i1, i2);

        goto label7;

     label2:
        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $r7 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>($r7, i1, i2);

        goto label7;

     label4:
        $r6 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>($r6, i1, i2);

        goto label7;

     label5:
        $r5 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>($r5, i1, i2);

        goto label7;

     label6:
        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>(null, i1, i2);

     label7:
        return;
    }

    private void resolveStyleAndSetTypeface(android.graphics.Typeface, int, int)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.graphics.Typeface r1, $r2, $r3;
        int i0, i1, i2, $i3, $i4;
        boolean z0, $z1;
        android.text.TextPaint $r4;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.graphics.Typeface;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 < 0 goto label3;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 28 goto label3;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(1000, i1);

        $i4 = i0 & 2;

        if $i4 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r2 = staticinvoke <androidx.wear.widget.CurvedTextView$Api28Impl: android.graphics.Typeface createTypeface(android.graphics.Typeface,int,boolean)>(r1, i2, z0);

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface> = $r2;

        $r4 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r3 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface>;

        virtualinvoke $r4.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r3);

        goto label4;

     label3:
        virtualinvoke r0.<androidx.wear.widget.CurvedTextView: void setTypeface(android.graphics.Typeface,int)>(r1, i0);

     label4:
        return;
    }

    public void setTypeface(android.graphics.Typeface, int)
    {
        androidx.wear.widget.CurvedTextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.text.TextPaint $r1, $r2, $r3, $r5, $r7, $r9, $r11, $r12, $r13;
        android.graphics.Typeface $r4, $r8, $r10, r15, r16;
        boolean $z0, $z1, $z2;
        float $f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r15 := @parameter0: android.graphics.Typeface;

        i0 := @parameter1: int;

        if i0 <= 0 goto label10;

        if r15 != null goto label01;

        r16 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>(i0);

        goto label02;

     label01:
        r16 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r15, i0);

     label02:
        $r9 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r10 = virtualinvoke $r9.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        $z1 = virtualinvoke r16.<android.graphics.Typeface: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label03;

        $r13 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        virtualinvoke $r13.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r16);

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface> = r16;

     label03:
        if r16 == null goto label04;

        $i6 = virtualinvoke r16.<android.graphics.Typeface: int getStyle()>();

        goto label05;

     label04:
        $i6 = 0;

     label05:
        i1 = $i6;

        $i3 = i1 ^ -1;

        i2 = i0 & $i3;

        $r11 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $i4 = i2 & 1;

        if $i4 == 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        virtualinvoke $r11.<android.text.TextPaint: void setFakeBoldText(boolean)>($z2);

        $r12 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $i5 = i2 & 2;

        if $i5 == 0 goto label08;

        $f0 = -0.25F;

        goto label09;

     label08:
        $f0 = 0.0F;

     label09:
        virtualinvoke $r12.<android.text.TextPaint: void setTextSkewX(float)>($f0);

        goto label13;

     label10:
        $r1 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        virtualinvoke $r1.<android.text.TextPaint: void setFakeBoldText(boolean)>(0);

        $r2 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextSkewX(float)>(0.0F);

        if r15 == null goto label11;

        $r7 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r8 = virtualinvoke $r7.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        $z0 = virtualinvoke r15.<android.graphics.Typeface: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label12;

     label11:
        if r15 != null goto label13;

        $r3 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r4 = virtualinvoke $r3.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if $r4 == null goto label13;

     label12:
        $r5 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        virtualinvoke $r5.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r15);

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface> = r15;

     label13:
        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    private void applyTextAppearance(androidx.wear.widget.CurvedTextView$TextAppearanceAttributes)
    {
        androidx.wear.widget.CurvedTextView r0;
        androidx.wear.widget.CurvedTextView$TextAppearanceAttributes r1;
        android.content.res.ColorStateList $r2, $r11;
        float $f0, $f1, $f2, $f3;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r3, $r5, $r7, $r8, $r9;
        android.text.TextPaint $r4, $r6, $r10;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: androidx.wear.widget.CurvedTextView$TextAppearanceAttributes;

        $r2 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor>;

        if $r2 == null goto label1;

        $r11 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor>;

        $i5 = virtualinvoke $r11.<android.content.res.ColorStateList: int getDefaultColor()>();

        r0.<androidx.wear.widget.CurvedTextView: int mTextColor> = $i5;

     label1:
        $f0 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mTextSize>;

        $b0 = $f0 cmpl -1.0F;

        if $b0 == 0 goto label2;

        $f3 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mTextSize>;

        r0.<androidx.wear.widget.CurvedTextView: float mTextSize> = $f3;

     label2:
        $r3 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFamily>;

        $i3 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTypefaceIndex>;

        $i2 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTextStyle>;

        $i1 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mFontWeight>;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void setTypefaceFromAttrs(java.lang.String,int,int,int)>($r3, $i3, $i2, $i1);

        $r4 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $f1 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mLetterSpacing>;

        virtualinvoke $r4.<android.text.TextPaint: void setLetterSpacing(float)>($f1);

        $f2 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mLetterSpacing>;

        r0.<androidx.wear.widget.CurvedTextView: float mLetterSpacing> = $f2;

        $r6 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r5 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFeatureSettings>;

        virtualinvoke $r6.<android.text.TextPaint: void setFontFeatureSettings(java.lang.String)>($r5);

        $r7 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFeatureSettings>;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mFontFeatureSettings> = $r7;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 26 goto label3;

        $r10 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $r9 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontVariationSettings>;

        staticinvoke <androidx.wear.widget.CurvedTextView$Api26Impl: void paintSetFontVariationSettings(android.graphics.Paint,java.lang.String)>($r10, $r9);

     label3:
        $r8 = r1.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontVariationSettings>;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mFontVariationSettings> = $r8;

        return;
    }

    private void readTextAppearance(android.content.res.TypedArray, androidx.wear.widget.CurvedTextView$TextAppearanceAttributes, boolean)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.content.res.TypedArray r1;
        androidx.wear.widget.CurvedTextView$TextAppearanceAttributes r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, i19, $i20, i21;
        java.lang.String $r3, $r4, $r9;
        android.content.res.ColorStateList $r17;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 := @parameter1: androidx.wear.widget.CurvedTextView$TextAppearanceAttributes;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label01;

        $i9 = <androidx.wear.R$styleable: int TextAppearance_android_textColor>;

        goto label02;

     label01:
        $i9 = <androidx.wear.R$styleable: int CurvedTextView_android_textColor>;

     label02:
        i10 = $i9;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(i10);

        if $z1 == 0 goto label03;

        $r17 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i10);

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor> = $r17;

     label03:
        if z0 == 0 goto label04;

        $i11 = <androidx.wear.R$styleable: int TextAppearance_android_textSize>;

        goto label05;

     label04:
        $i11 = <androidx.wear.R$styleable: int CurvedTextView_android_textSize>;

     label05:
        $f0 = r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mTextSize>;

        $i0 = (int) $f0;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i11, $i0);

        $f1 = (float) $i1;

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mTextSize> = $f1;

        if z0 == 0 goto label06;

        $i12 = <androidx.wear.R$styleable: int TextAppearance_android_textStyle>;

        goto label07;

     label06:
        $i12 = <androidx.wear.R$styleable: int CurvedTextView_android_textStyle>;

     label07:
        $i2 = r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTextStyle>;

        $i3 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>($i12, $i2);

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTextStyle> = $i3;

        if z0 == 0 goto label08;

        $i13 = <androidx.wear.R$styleable: int TextAppearance_android_typeface>;

        goto label09;

     label08:
        $i13 = <androidx.wear.R$styleable: int CurvedTextView_android_typeface>;

     label09:
        $i4 = r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTypefaceIndex>;

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>($i13, $i4);

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTypefaceIndex> = $i5;

        $i6 = r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTypefaceIndex>;

        if $i6 == -1 goto label10;

        $z5 = r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: boolean mFontFamilyExplicit>;

        if $z5 != 0 goto label10;

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFamily> = null;

     label10:
        if z0 == 0 goto label11;

        $i14 = <androidx.wear.R$styleable: int TextAppearance_android_fontFamily>;

        goto label12;

     label11:
        $i14 = <androidx.wear.R$styleable: int CurvedTextView_android_fontFamily>;

     label12:
        i15 = $i14;

        $z2 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(i15);

        if $z2 == 0 goto label15;

        $r9 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i15);

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFamily> = $r9;

        if z0 != 0 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: boolean mFontFamilyExplicit> = $z6;

     label15:
        if z0 == 0 goto label16;

        $i16 = <androidx.wear.R$styleable: int TextAppearance_android_textFontWeight>;

        goto label17;

     label16:
        $i16 = <androidx.wear.R$styleable: int CurvedTextView_android_textFontWeight>;

     label17:
        $i7 = r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mFontWeight>;

        $i8 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>($i16, $i7);

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mFontWeight> = $i8;

        if z0 == 0 goto label18;

        $i17 = <androidx.wear.R$styleable: int TextAppearance_android_letterSpacing>;

        goto label19;

     label18:
        $i17 = <androidx.wear.R$styleable: int CurvedTextView_android_letterSpacing>;

     label19:
        $f2 = r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mLetterSpacing>;

        $f3 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>($i17, $f2);

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mLetterSpacing> = $f3;

        if z0 == 0 goto label20;

        $i18 = <androidx.wear.R$styleable: int TextAppearance_android_fontFeatureSettings>;

        goto label21;

     label20:
        $i18 = <androidx.wear.R$styleable: int CurvedTextView_android_fontFeatureSettings>;

     label21:
        i19 = $i18;

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(i19);

        if $z3 == 0 goto label22;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i19);

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFeatureSettings> = $r4;

     label22:
        if z0 == 0 goto label23;

        $i20 = <androidx.wear.R$styleable: int TextAppearance_android_fontVariationSettings>;

        goto label24;

     label23:
        $i20 = <androidx.wear.R$styleable: int CurvedTextView_android_fontVariationSettings>;

     label24:
        i21 = $i20;

        $z4 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(i21);

        if $z4 == 0 goto label25;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i21);

        r2.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontVariationSettings> = $r3;

     label25:
        return;
    }

    private void doUpdate()
    {
        androidx.wear.widget.CurvedTextView r0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r0.<androidx.wear.widget.CurvedTextView: boolean mDirty> = 1;

        virtualinvoke r0.<androidx.wear.widget.CurvedTextView: void requestLayout()>();

        virtualinvoke r0.<androidx.wear.widget.CurvedTextView: void postInvalidate()>();

        return;
    }

    private void doRedraw()
    {
        androidx.wear.widget.CurvedTextView r0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r0.<androidx.wear.widget.CurvedTextView: boolean mDirty> = 1;

        virtualinvoke r0.<androidx.wear.widget.CurvedTextView: void postInvalidate()>();

        return;
    }

    public int getAnchorType()
    {
        androidx.wear.widget.CurvedTextView r0;
        int $i0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $i0 = r0.<androidx.wear.widget.CurvedTextView: int mAnchorType>;

        return $i0;
    }

    public void setAnchorType(int)
    {
        androidx.wear.widget.CurvedTextView r0;
        int i0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        i0 := @parameter0: int;

        r0.<androidx.wear.widget.CurvedTextView: int mAnchorType> = i0;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public float getAnchorAngleDegrees()
    {
        androidx.wear.widget.CurvedTextView r0;
        float $f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $f0 = r0.<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees>;

        return $f0;
    }

    public void setAnchorAngleDegrees(float)
    {
        androidx.wear.widget.CurvedTextView r0;
        float f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        f0 := @parameter0: float;

        r0.<androidx.wear.widget.CurvedTextView: float mAnchorAngleDegrees> = f0;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doRedraw()>();

        return;
    }

    public void setSweepRangeDegrees(float, float)
    {
        androidx.wear.widget.CurvedTextView r0;
        float f0, f1, $f2, $f3, $f4;
        byte $b0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl f1;

        if $b0 <= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MaxSweepDegrees cannot be smaller than MinSweepDegrees");

        throw $r1;

     label1:
        $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f0, 0.0F);

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>($f2, 359.9F);

        r0.<androidx.wear.widget.CurvedTextView: float mMinSweepDegrees> = $f3;

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>(f1, 359.9F);

        r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees> = $f4;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public float getMinSweepDegrees()
    {
        androidx.wear.widget.CurvedTextView r0;
        float $f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $f0 = r0.<androidx.wear.widget.CurvedTextView: float mMinSweepDegrees>;

        return $f0;
    }

    public float getMaxSweepDegrees()
    {
        androidx.wear.widget.CurvedTextView r0;
        float $f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $f0 = r0.<androidx.wear.widget.CurvedTextView: float mMaxSweepDegrees>;

        return $f0;
    }

    public java.lang.String getText()
    {
        androidx.wear.widget.CurvedTextView r0;
        java.lang.String $r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        return $r1;
    }

    public void setText(java.lang.String)
    {
        androidx.wear.widget.CurvedTextView r0;
        java.lang.String r1, $r3;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText> = $r3;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public float getTextSize()
    {
        androidx.wear.widget.CurvedTextView r0;
        float $f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $f0 = r0.<androidx.wear.widget.CurvedTextView: float mTextSize>;

        return $f0;
    }

    public void setTextSize(float)
    {
        androidx.wear.widget.CurvedTextView r0;
        float f0, $f1;
        android.text.TextPaint $r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        f0 := @parameter0: float;

        r0.<androidx.wear.widget.CurvedTextView: float mTextSize> = f0;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextPaint mPaint>;

        $f1 = r0.<androidx.wear.widget.CurvedTextView: float mTextSize>;

        virtualinvoke $r1.<android.text.TextPaint: void setTextSize(float)>($f1);

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public android.graphics.Typeface getTypeface()
    {
        androidx.wear.widget.CurvedTextView r0;
        android.graphics.Typeface $r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface>;

        return $r1;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.graphics.Typeface r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.graphics.Typeface;

        r0.<androidx.wear.widget.CurvedTextView: android.graphics.Typeface mTypeface> = r1;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public boolean isClockwise()
    {
        androidx.wear.widget.CurvedTextView r0;
        boolean $z0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $z0 = r0.<androidx.wear.widget.CurvedTextView: boolean mClockwise>;

        return $z0;
    }

    public void setClockwise(boolean)
    {
        androidx.wear.widget.CurvedTextView r0;
        boolean z0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.widget.CurvedTextView: boolean mClockwise> = z0;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public int getTextColor()
    {
        androidx.wear.widget.CurvedTextView r0;
        int $i0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $i0 = r0.<androidx.wear.widget.CurvedTextView: int mTextColor>;

        return $i0;
    }

    public void setTextColor(int)
    {
        androidx.wear.widget.CurvedTextView r0;
        int i0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        i0 := @parameter0: int;

        r0.<androidx.wear.widget.CurvedTextView: int mTextColor> = i0;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doRedraw()>();

        return;
    }

    public android.text.TextUtils$TruncateAt getEllipsize()
    {
        androidx.wear.widget.CurvedTextView r0;
        android.text.TextUtils$TruncateAt $r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize>;

        return $r1;
    }

    public void setEllipsize(android.text.TextUtils$TruncateAt)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.text.TextUtils$TruncateAt r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.text.TextUtils$TruncateAt;

        r0.<androidx.wear.widget.CurvedTextView: android.text.TextUtils$TruncateAt mEllipsize> = r1;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doRedraw()>();

        return;
    }

    public float getLetterSpacing()
    {
        androidx.wear.widget.CurvedTextView r0;
        float $f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $f0 = r0.<androidx.wear.widget.CurvedTextView: float mLetterSpacing>;

        return $f0;
    }

    public void setLetterSpacing(float)
    {
        androidx.wear.widget.CurvedTextView r0;
        float f0;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        f0 := @parameter0: float;

        r0.<androidx.wear.widget.CurvedTextView: float mLetterSpacing> = f0;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public java.lang.String getFontFeatureSettings()
    {
        androidx.wear.widget.CurvedTextView r0;
        java.lang.String $r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mFontFeatureSettings>;

        return $r1;
    }

    public void setFontFeatureSettings(java.lang.String)
    {
        androidx.wear.widget.CurvedTextView r0;
        java.lang.String r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mFontFeatureSettings> = r1;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public java.lang.String getFontVariationSettings()
    {
        androidx.wear.widget.CurvedTextView r0;
        java.lang.String $r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        $r1 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mFontVariationSettings>;

        return $r1;
    }

    public void setFontVariationSettings(java.lang.String)
    {
        androidx.wear.widget.CurvedTextView r0;
        java.lang.String r1;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.wear.widget.CurvedTextView: java.lang.String mFontVariationSettings> = r1;

        specialinvoke r0.<androidx.wear.widget.CurvedTextView: void doUpdate()>();

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.String $r2;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.wear.widget.CurvedTextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.util.List $r2;
        java.lang.String $r3;

        r0 := @this: androidx.wear.widget.CurvedTextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r3 = r0.<androidx.wear.widget.CurvedTextView: java.lang.String mText>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

androidx.wear.widget.CurvedTextView$Api26Impl
    private void <init>()
    {
        androidx.wear.widget.CurvedTextView$Api26Impl r0;

        r0 := @this: androidx.wear.widget.CurvedTextView$Api26Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void paintSetFontVariationSettings(android.graphics.Paint, java.lang.String)
    {
        android.graphics.Paint r0;
        java.lang.String r1;

        r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.graphics.Paint: boolean setFontVariationSettings(java.lang.String)>(r1);

        return;
    }

androidx.wear.widget.CurvedTextView$Api28Impl
    private void <init>()
    {
        androidx.wear.widget.CurvedTextView$Api28Impl r0;

        r0 := @this: androidx.wear.widget.CurvedTextView$Api28Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.graphics.Typeface createTypeface(android.graphics.Typeface, int, boolean)
    {
        android.graphics.Typeface r0, $r1;
        int i0;
        boolean z0;

        r0 := @parameter0: android.graphics.Typeface;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)>(r0, i0, z0);

        return $r1;
    }

androidx.wear.widget.CurvedTextView$TextAppearanceAttributes
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mTextSize>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFamily>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: boolean mFontFamilyExplicit>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTypefaceIndex>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTextStyle>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mFontWeight>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mLetterSpacing>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFeatureSettings>
<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontVariationSettings>
    void <init>()
    {
        androidx.wear.widget.CurvedTextView$TextAppearanceAttributes r0;

        r0 := @this: androidx.wear.widget.CurvedTextView$TextAppearanceAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor> = null;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mTextSize> = 24.0F;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFamily> = null;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: boolean mFontFamilyExplicit> = 0;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTypefaceIndex> = -1;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mTextStyle> = 0;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: int mFontWeight> = -1;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: float mLetterSpacing> = 0.0F;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontFeatureSettings> = null;

        r0.<androidx.wear.widget.CurvedTextView$TextAppearanceAttributes: java.lang.String mFontVariationSettings> = null;

        return;
    }

