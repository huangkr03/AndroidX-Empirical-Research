androidx.ui.res.DeferredResource
<androidx.ui.res.DeferredResource: java.lang.Object pendingResource>
<androidx.ui.res.DeferredResource: java.lang.Object failedResource>
<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>
    public void <init>(androidx.ui.res.LoadingState, java.lang.Object, java.lang.Object)
    {
        androidx.ui.res.DeferredResource r0;
        androidx.ui.res.LoadingState r1;
        java.lang.Object r2, r3;
        androidx.ui.res.DeferredResource$Record $r4, $r7;
        androidx.compose.frames.Record $r5, $r6;
        androidx.compose.frames.Framed $r8;

        r0 := @this: androidx.ui.res.DeferredResource;

        r1 := @parameter0: androidx.ui.res.LoadingState;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new androidx.ui.res.DeferredResource$Record;

        specialinvoke $r4.<androidx.ui.res.DeferredResource$Record: void <init>()>();

        $r5 = (androidx.compose.frames.Record) $r4;

        r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record> = $r5;

        $r6 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        $r7 = (androidx.ui.res.DeferredResource$Record) $r6;

        $r7.<androidx.ui.res.DeferredResource$Record: androidx.ui.res.LoadingState state> = r1;

        $r8 = (androidx.compose.frames.Framed) r0;

        staticinvoke <androidx.compose.frames.FramesKt: kotlin.Unit _created(androidx.compose.frames.Framed)>($r8);

        r0.<androidx.ui.res.DeferredResource: java.lang.Object pendingResource> = r2;

        r0.<androidx.ui.res.DeferredResource: java.lang.Object failedResource> = r3;

        return;
    }

    public void <init>(androidx.ui.res.LoadingState, java.lang.Object, java.lang.Object, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.res.DeferredResource r0;
        int i0, $i1, $i2, $i3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.ui.res.LoadingState r2;
        java.lang.Object r3, r4;

        r0 := @this: androidx.ui.res.DeferredResource;

        r2 := @parameter0: androidx.ui.res.LoadingState;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState PENDING>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = null;

     label3:
        specialinvoke r0.<androidx.ui.res.DeferredResource: void <init>(androidx.ui.res.LoadingState,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        return;
    }

    public final androidx.ui.res.LoadingState getState$ui_framework_release()
    {
        androidx.ui.res.DeferredResource r0;
        androidx.compose.frames.Framed $r1;
        androidx.compose.frames.Record $r2, $r3;
        androidx.ui.res.DeferredResource$Record $r4;
        androidx.ui.res.LoadingState $r5;

        r0 := @this: androidx.ui.res.DeferredResource;

        $r2 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        $r1 = (androidx.compose.frames.Framed) r0;

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record _readable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>($r2, $r1);

        $r4 = (androidx.ui.res.DeferredResource$Record) $r3;

        $r5 = $r4.<androidx.ui.res.DeferredResource$Record: androidx.ui.res.LoadingState state>;

        return $r5;
    }

    public final void setState$ui_framework_release(androidx.ui.res.LoadingState)
    {
        androidx.ui.res.DeferredResource r0;
        androidx.ui.res.LoadingState r1;
        androidx.compose.frames.Framed $r2;
        androidx.compose.frames.Record $r3, $r4;
        androidx.ui.res.DeferredResource$Record $r5;

        r0 := @this: androidx.ui.res.DeferredResource;

        r1 := @parameter0: androidx.ui.res.LoadingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        $r3 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        $r2 = (androidx.compose.frames.Framed) r0;

        $r4 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record _writable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>($r3, $r2);

        $r5 = (androidx.ui.res.DeferredResource$Record) $r4;

        $r5.<androidx.ui.res.DeferredResource$Record: androidx.ui.res.LoadingState state> = r1;

        return;
    }

    private final java.lang.Object getLoadedResource()
    {
        androidx.ui.res.DeferredResource r0;
        androidx.compose.frames.Framed $r1;
        androidx.compose.frames.Record $r2, $r3;
        androidx.ui.res.DeferredResource$Record $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.ui.res.DeferredResource;

        $r2 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        $r1 = (androidx.compose.frames.Framed) r0;

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record _readable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>($r2, $r1);

        $r4 = (androidx.ui.res.DeferredResource$Record) $r3;

        $r5 = $r4.<androidx.ui.res.DeferredResource$Record: java.lang.Object loadedResource>;

        return $r5;
    }

    private final void setLoadedResource(java.lang.Object)
    {
        androidx.ui.res.DeferredResource r0;
        java.lang.Object r1;
        androidx.compose.frames.Framed $r2;
        androidx.compose.frames.Record $r3, $r4;
        androidx.ui.res.DeferredResource$Record $r5;

        r0 := @this: androidx.ui.res.DeferredResource;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        $r2 = (androidx.compose.frames.Framed) r0;

        $r4 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record _writable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>($r3, $r2);

        $r5 = (androidx.ui.res.DeferredResource$Record) $r4;

        $r5.<androidx.ui.res.DeferredResource$Record: java.lang.Object loadedResource> = r1;

        return;
    }

    private final java.lang.Throwable getFailedReason()
    {
        androidx.ui.res.DeferredResource r0;
        androidx.compose.frames.Framed $r1;
        androidx.compose.frames.Record $r2, $r3;
        androidx.ui.res.DeferredResource$Record $r4;
        java.lang.Throwable $r5;

        r0 := @this: androidx.ui.res.DeferredResource;

        $r2 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        $r1 = (androidx.compose.frames.Framed) r0;

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record _readable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>($r2, $r1);

        $r4 = (androidx.ui.res.DeferredResource$Record) $r3;

        $r5 = $r4.<androidx.ui.res.DeferredResource$Record: java.lang.Throwable failedReason>;

        return $r5;
    }

    private final void setFailedReason(java.lang.Throwable)
    {
        androidx.ui.res.DeferredResource r0;
        java.lang.Throwable r1;
        androidx.compose.frames.Framed $r2;
        androidx.compose.frames.Record $r3, $r4;
        androidx.ui.res.DeferredResource$Record $r5;

        r0 := @this: androidx.ui.res.DeferredResource;

        r1 := @parameter0: java.lang.Throwable;

        $r3 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        $r2 = (androidx.compose.frames.Framed) r0;

        $r4 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record _writable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>($r3, $r2);

        $r5 = (androidx.ui.res.DeferredResource$Record) $r4;

        $r5.<androidx.ui.res.DeferredResource$Record: java.lang.Throwable failedReason> = r1;

        return;
    }

    public final void loadCompleted$ui_framework_release(java.lang.Object)
    {
        androidx.ui.res.DeferredResource r0;
        java.lang.Object r1;
        androidx.ui.res.LoadingState $r2;

        r0 := @this: androidx.ui.res.DeferredResource;

        r1 := @parameter0: java.lang.Object;

        $r2 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState LOADED>;

        virtualinvoke r0.<androidx.ui.res.DeferredResource: void setState$ui_framework_release(androidx.ui.res.LoadingState)>($r2);

        specialinvoke r0.<androidx.ui.res.DeferredResource: void setLoadedResource(java.lang.Object)>(r1);

        return;
    }

    public final void failed$ui_framework_release(java.lang.Throwable)
    {
        androidx.ui.res.DeferredResource r0;
        java.lang.Throwable r1;
        androidx.ui.res.LoadingState $r2;

        r0 := @this: androidx.ui.res.DeferredResource;

        r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "t");

        $r2 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState FAILED>;

        virtualinvoke r0.<androidx.ui.res.DeferredResource: void setState$ui_framework_release(androidx.ui.res.LoadingState)>($r2);

        specialinvoke r0.<androidx.ui.res.DeferredResource: void setFailedReason(java.lang.Throwable)>(r1);

        return;
    }

    public final androidx.ui.res.Resource getResource()
    {
        androidx.ui.res.DeferredResource r0;
        androidx.ui.res.LoadingState r1;
        int i0, $i1;
        java.lang.Object r2, $r6, $r8;
        int[] $r3;
        androidx.ui.res.LoadedResource $r4;
        androidx.ui.res.PendingResource $r5;
        androidx.ui.res.FailedResource $r7;
        java.lang.Throwable $r9;
        kotlin.NoWhenBranchMatchedException $r10;
        androidx.ui.res.Resource $r11;

        r0 := @this: androidx.ui.res.DeferredResource;

        r1 = virtualinvoke r0.<androidx.ui.res.DeferredResource: androidx.ui.res.LoadingState getState$ui_framework_release()>();

        $r3 = <androidx.ui.res.DeferredResource$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r1.<androidx.ui.res.LoadingState: int ordinal()>();

        i0 = $r3[$i1];

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r7 = new androidx.ui.res.FailedResource;

        $r8 = r0.<androidx.ui.res.DeferredResource: java.lang.Object failedResource>;

        $r9 = specialinvoke r0.<androidx.ui.res.DeferredResource: java.lang.Throwable getFailedReason()>();

        specialinvoke $r7.<androidx.ui.res.FailedResource: void <init>(java.lang.Object,java.lang.Throwable)>($r8, $r9);

        $r11 = (androidx.ui.res.Resource) $r7;

        goto label5;

     label2:
        $r5 = new androidx.ui.res.PendingResource;

        $r6 = r0.<androidx.ui.res.DeferredResource: java.lang.Object pendingResource>;

        specialinvoke $r5.<androidx.ui.res.PendingResource: void <init>(java.lang.Object)>($r6);

        $r11 = (androidx.ui.res.Resource) $r5;

        goto label5;

     label3:
        $r4 = new androidx.ui.res.LoadedResource;

        r2 = specialinvoke r0.<androidx.ui.res.DeferredResource: java.lang.Object getLoadedResource()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        specialinvoke $r4.<androidx.ui.res.LoadedResource: void <init>(java.lang.Object)>(r2);

        $r11 = (androidx.ui.res.Resource) $r4;

        goto label5;

     label4:
        $r10 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r10.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r10;

     label5:
        return $r11;
    }

    public final androidx.compose.frames.Record getFirstFrameRecord()
    {
        androidx.ui.res.DeferredResource r0;
        androidx.compose.frames.Record $r1;

        r0 := @this: androidx.ui.res.DeferredResource;

        $r1 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        return $r1;
    }

    public final void prependFrameRecord(androidx.compose.frames.Record)
    {
        androidx.ui.res.DeferredResource r0;
        androidx.compose.frames.Record r1, $r2;

        r0 := @this: androidx.ui.res.DeferredResource;

        r1 := @parameter0: androidx.compose.frames.Record;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record>;

        interfaceinvoke r1.<androidx.compose.frames.Record: void setNext(androidx.compose.frames.Record)>($r2);

        r0.<androidx.ui.res.DeferredResource: androidx.compose.frames.Record $record> = r1;

        return;
    }

    public void <init>()
    {
        androidx.ui.res.DeferredResource r0;

        r0 := @this: androidx.ui.res.DeferredResource;

        specialinvoke r0.<androidx.ui.res.DeferredResource: void <init>(androidx.ui.res.LoadingState,java.lang.Object,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, 7, null);

        return;
    }

androidx.ui.res.DeferredResource$Record
<androidx.ui.res.DeferredResource$Record: java.lang.Object loadedResource>
<androidx.ui.res.DeferredResource$Record: java.lang.Throwable failedReason>
<androidx.ui.res.DeferredResource$Record: androidx.ui.res.LoadingState state>
    public void <init>()
    {
        androidx.ui.res.DeferredResource$Record r0;

        r0 := @this: androidx.ui.res.DeferredResource$Record;

        specialinvoke r0.<androidx.compose.frames.AbstractRecord: void <init>()>();

        return;
    }

    public final androidx.compose.frames.Record create()
    {
        androidx.ui.res.DeferredResource$Record r0, $r1;
        androidx.compose.frames.Record $r2;

        r0 := @this: androidx.ui.res.DeferredResource$Record;

        $r1 = new androidx.ui.res.DeferredResource$Record;

        specialinvoke $r1.<androidx.ui.res.DeferredResource$Record: void <init>()>();

        $r2 = (androidx.compose.frames.Record) $r1;

        return $r2;
    }

    public final void assign(androidx.compose.frames.Record)
    {
        androidx.ui.res.DeferredResource$Record r0, $r2, $r4, $r6;
        androidx.compose.frames.Record r1;
        java.lang.Object $r3;
        java.lang.Throwable $r5;
        androidx.ui.res.LoadingState $r7;

        r0 := @this: androidx.ui.res.DeferredResource$Record;

        r1 := @parameter0: androidx.compose.frames.Record;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = (androidx.ui.res.DeferredResource$Record) r1;

        $r3 = $r2.<androidx.ui.res.DeferredResource$Record: java.lang.Object loadedResource>;

        r0.<androidx.ui.res.DeferredResource$Record: java.lang.Object loadedResource> = $r3;

        $r4 = (androidx.ui.res.DeferredResource$Record) r1;

        $r5 = $r4.<androidx.ui.res.DeferredResource$Record: java.lang.Throwable failedReason>;

        r0.<androidx.ui.res.DeferredResource$Record: java.lang.Throwable failedReason> = $r5;

        $r6 = (androidx.ui.res.DeferredResource$Record) r1;

        $r7 = $r6.<androidx.ui.res.DeferredResource$Record: androidx.ui.res.LoadingState state>;

        r0.<androidx.ui.res.DeferredResource$Record: androidx.ui.res.LoadingState state> = $r7;

        return;
    }

androidx.ui.res.DeferredResource$WhenMappings
<androidx.ui.res.DeferredResource$WhenMappings: int[] $EnumSwitchMapping$0>
    public static final void <clinit>()
    {
        int[] r0;
        androidx.ui.res.LoadingState[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.ui.res.LoadingState $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState FAILED>;

        $i1 = virtualinvoke $r2.<androidx.ui.res.LoadingState: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState PENDING>;

        $i2 = virtualinvoke $r3.<androidx.ui.res.LoadingState: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState LOADED>;

        $i3 = virtualinvoke $r4.<androidx.ui.res.LoadingState: int ordinal()>();

        r0[$i3] = 3;

        <androidx.ui.res.DeferredResource$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

