androidx.test.internal.runner.TestExecutor
<androidx.test.internal.runner.TestExecutor: java.lang.String LOG_TAG>
<androidx.test.internal.runner.TestExecutor: java.util.List listeners>
<androidx.test.internal.runner.TestExecutor: android.app.Instrumentation instr>
    public android.os.Bundle execute(org.junit.runner.Request) throws java.io.UnsupportedEncodingException
    {
        androidx.test.internal.runner.TestExecutor r0;
        org.junit.runner.Request r1;
        android.os.Bundle r2;
        java.lang.Throwable r3, $r5;
        org.junit.runner.JUnitCore $r4;

        r0 := @this: androidx.test.internal.runner.TestExecutor;

        r1 := @parameter0: org.junit.runner.Request;

        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>("execute tests");

     label1:
        $r4 = new org.junit.runner.JUnitCore;

        specialinvoke $r4.<org.junit.runner.JUnitCore: void <init>()>();

        r2 = virtualinvoke r0.<androidx.test.internal.runner.TestExecutor: android.os.Bundle execute(org.junit.runner.JUnitCore,org.junit.runner.Request)>($r4, r1);

     label2:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        return r2;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <androidx.tracing.Trace: void endSection()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.os.Bundle execute(org.junit.runner.JUnitCore, org.junit.runner.Request) throws java.io.UnsupportedEncodingException
    {
        androidx.test.internal.runner.TestExecutor r0;
        org.junit.runner.JUnitCore r1;
        org.junit.runner.Request r2;
        android.os.Bundle r3, $r9;
        org.junit.runner.Result r4;
        java.io.ByteArrayOutputStream r5, $r10;
        java.io.PrintStream r6, $r11;
        java.lang.Throwable r7, r8, $r16, $r17;
        java.util.List $r12;
        java.lang.Object[] $r13;
        java.lang.String $r14, $r15;

        r0 := @this: androidx.test.internal.runner.TestExecutor;

        r1 := @parameter0: org.junit.runner.JUnitCore;

        r2 := @parameter1: org.junit.runner.Request;

        $r9 = new android.os.Bundle;

        specialinvoke $r9.<android.os.Bundle: void <init>()>();

        r3 = $r9;

        specialinvoke r0.<androidx.test.internal.runner.TestExecutor: void setUpListeners(org.junit.runner.JUnitCore)>(r1);

        r4 = virtualinvoke r1.<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Request)>(r2);

        $r10 = new java.io.ByteArrayOutputStream;

        specialinvoke $r10.<java.io.ByteArrayOutputStream: void <init>()>();

        r5 = $r10;

        $r11 = new java.io.PrintStream;

        specialinvoke $r11.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r5);

        r6 = $r11;

     label1:
        $r12 = r0.<androidx.test.internal.runner.TestExecutor: java.util.List listeners>;

        specialinvoke r0.<androidx.test.internal.runner.TestExecutor: void reportRunEnded(java.util.List,java.io.PrintStream,android.os.Bundle,org.junit.runner.Result)>($r12, r6, r3, r4);

     label2:
        virtualinvoke r6.<java.io.PrintStream: void close()>();

        goto label8;

     label3:
        $r17 := @caughtexception;

        r7 = $r17;

     label4:
        virtualinvoke r6.<java.io.PrintStream: void close()>();

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;

        r8 = $r16;

        staticinvoke <androidx.test.internal.runner.TestExecutor$$ExternalSyntheticBackport0: void m(java.lang.Throwable,java.lang.Throwable)>(r7, r8);

     label7:
        throw r7;

     label8:
        $r13 = newarray (java.lang.Object)[1];

        $r14 = virtualinvoke r5.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF_8");

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s", $r13);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r15);

        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void <init>(androidx.test.internal.runner.TestExecutor$Builder)
    {
        androidx.test.internal.runner.TestExecutor r0;
        androidx.test.internal.runner.TestExecutor$Builder r1;
        java.util.List $r2, $r4;
        java.lang.Object $r3;
        android.app.Instrumentation $r5;

        r0 := @this: androidx.test.internal.runner.TestExecutor;

        r1 := @parameter0: androidx.test.internal.runner.TestExecutor$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.internal.runner.TestExecutor$Builder: java.util.List '-$$Nest$fgetlisteners'(androidx.test.internal.runner.TestExecutor$Builder)>(r1);

        $r3 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (java.util.List) $r3;

        r0.<androidx.test.internal.runner.TestExecutor: java.util.List listeners> = $r4;

        $r5 = staticinvoke <androidx.test.internal.runner.TestExecutor$Builder: android.app.Instrumentation '-$$Nest$fgetinstr'(androidx.test.internal.runner.TestExecutor$Builder)>(r1);

        r0.<androidx.test.internal.runner.TestExecutor: android.app.Instrumentation instr> = $r5;

        return;
    }

    void <init>(androidx.test.internal.runner.TestExecutor$Builder, androidx.test.internal.runner.TestExecutor-IA)
    {
        androidx.test.internal.runner.TestExecutor r0;
        androidx.test.internal.runner.TestExecutor$Builder r1;
        androidx.test.internal.runner.TestExecutor-IA r2;

        r0 := @this: androidx.test.internal.runner.TestExecutor;

        r1 := @parameter0: androidx.test.internal.runner.TestExecutor$Builder;

        r2 := @parameter1: androidx.test.internal.runner.TestExecutor-IA;

        specialinvoke r0.<androidx.test.internal.runner.TestExecutor: void <init>(androidx.test.internal.runner.TestExecutor$Builder)>(r1);

        return;
    }

    private void reportRunEnded(java.util.List, java.io.PrintStream, android.os.Bundle, org.junit.runner.Result)
    {
        androidx.test.internal.runner.TestExecutor r0;
        java.util.List r1;
        java.io.PrintStream r2;
        android.os.Bundle r3;
        org.junit.runner.Result r4;
        java.util.Iterator r5;
        org.junit.runner.notification.RunListener r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        androidx.test.internal.runner.listener.InstrumentationRunListener $r8;

        r0 := @this: androidx.test.internal.runner.TestExecutor;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.io.PrintStream;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: org.junit.runner.Result;

        r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.junit.runner.notification.RunListener) $r7;

        $z1 = r6 instanceof androidx.test.internal.runner.listener.InstrumentationRunListener;

        if $z1 == 0 goto label2;

        $r8 = (androidx.test.internal.runner.listener.InstrumentationRunListener) r6;

        virtualinvoke $r8.<androidx.test.internal.runner.listener.InstrumentationRunListener: void instrumentationRunFinished(java.io.PrintStream,android.os.Bundle,org.junit.runner.Result)>(r2, r3, r4);

     label2:
        goto label1;

     label3:
        return;
    }

    private void setUpListeners(org.junit.runner.JUnitCore)
    {
        androidx.test.internal.runner.TestExecutor r0;
        org.junit.runner.JUnitCore r1;
        java.util.Iterator r2;
        org.junit.runner.notification.RunListener r3;
        java.lang.String r4, $r11;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.Class $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        android.app.Instrumentation $r12;
        androidx.test.internal.runner.listener.InstrumentationRunListener $r13;

        r0 := @this: androidx.test.internal.runner.TestExecutor;

        r1 := @parameter0: org.junit.runner.JUnitCore;

        $r5 = r0.<androidx.test.internal.runner.TestExecutor: java.util.List listeners>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.junit.runner.notification.RunListener) $r6;

        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding listener ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TestExecutor", $r11);

        virtualinvoke r1.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(r3);

        $z1 = r3 instanceof androidx.test.internal.runner.listener.InstrumentationRunListener;

        if $z1 == 0 goto label2;

        $r13 = (androidx.test.internal.runner.listener.InstrumentationRunListener) r3;

        $r12 = r0.<androidx.test.internal.runner.TestExecutor: android.app.Instrumentation instr>;

        virtualinvoke $r13.<androidx.test.internal.runner.listener.InstrumentationRunListener: void setInstrumentation(android.app.Instrumentation)>($r12);

     label2:
        goto label1;

     label3:
        return;
    }

androidx.test.internal.runner.TestExecutor$$ExternalSyntheticBackport0
    public static void m(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable r0, r1, $r6, r8;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        java.lang.Object[] $r4;
        java.lang.reflect.Method r7;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.Throwable;

     label1:
        $r3 = class "Ljava/lang/Throwable;";

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/Throwable;";

        r7 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("addSuppressed", $r2);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        virtualinvoke r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

androidx.test.internal.runner.TestExecutor$Builder
<androidx.test.internal.runner.TestExecutor$Builder: java.util.List listeners>
<androidx.test.internal.runner.TestExecutor$Builder: android.app.Instrumentation instr>
    static volatile android.app.Instrumentation '-$$Nest$fgetinstr'(androidx.test.internal.runner.TestExecutor$Builder)
    {
        androidx.test.internal.runner.TestExecutor$Builder r0;
        android.app.Instrumentation $r1;

        r0 := @parameter0: androidx.test.internal.runner.TestExecutor$Builder;

        $r1 = r0.<androidx.test.internal.runner.TestExecutor$Builder: android.app.Instrumentation instr>;

        return $r1;
    }

    public androidx.test.internal.runner.TestExecutor$Builder addRunListener(org.junit.runner.notification.RunListener)
    {
        androidx.test.internal.runner.TestExecutor$Builder r0;
        org.junit.runner.notification.RunListener r1;
        java.util.List $r2;

        r0 := @this: androidx.test.internal.runner.TestExecutor$Builder;

        r1 := @parameter0: org.junit.runner.notification.RunListener;

        $r2 = r0.<androidx.test.internal.runner.TestExecutor$Builder: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.test.internal.runner.TestExecutor build()
    {
        androidx.test.internal.runner.TestExecutor$Builder r0;
        androidx.test.internal.runner.TestExecutor $r1;

        r0 := @this: androidx.test.internal.runner.TestExecutor$Builder;

        $r1 = new androidx.test.internal.runner.TestExecutor;

        specialinvoke $r1.<androidx.test.internal.runner.TestExecutor: void <init>(androidx.test.internal.runner.TestExecutor$Builder,androidx.test.internal.runner.TestExecutor-IA)>(r0, null);

        return $r1;
    }

    static volatile java.util.List '-$$Nest$fgetlisteners'(androidx.test.internal.runner.TestExecutor$Builder)
    {
        androidx.test.internal.runner.TestExecutor$Builder r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.test.internal.runner.TestExecutor$Builder;

        $r1 = r0.<androidx.test.internal.runner.TestExecutor$Builder: java.util.List listeners>;

        return $r1;
    }

    public void <init>(android.app.Instrumentation)
    {
        androidx.test.internal.runner.TestExecutor$Builder r0;
        android.app.Instrumentation r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.test.internal.runner.TestExecutor$Builder;

        r1 := @parameter0: android.app.Instrumentation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.test.internal.runner.TestExecutor$Builder: java.util.List listeners> = $r2;

        r0.<androidx.test.internal.runner.TestExecutor$Builder: android.app.Instrumentation instr> = r1;

        return;
    }

