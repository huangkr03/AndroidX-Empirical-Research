io.grpc.DecompressorRegistry
<io.grpc.DecompressorRegistry: com.google.common.base.Joiner ACCEPT_ENCODING_JOINER>
<io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry DEFAULT_INSTANCE>
<io.grpc.DecompressorRegistry: byte[] advertisedDecompressors>
<io.grpc.DecompressorRegistry: java.util.Map decompressors>
    static void <clinit>()
    {
        com.google.common.base.Joiner $r0;
        io.grpc.DecompressorRegistry $r1;
        io.grpc.Codec$Gzip $r2;
        io.grpc.Codec $r3;

        $r0 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(44);

        <io.grpc.DecompressorRegistry: com.google.common.base.Joiner ACCEPT_ENCODING_JOINER> = $r0;

        $r1 = staticinvoke <io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry emptyInstance()>();

        $r2 = new io.grpc.Codec$Gzip;

        specialinvoke $r2.<io.grpc.Codec$Gzip: void <init>()>();

        $r1 = virtualinvoke $r1.<io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry 'with'(io.grpc.Decompressor,boolean)>($r2, 1);

        $r3 = <io.grpc.Codec$Identity: io.grpc.Codec NONE>;

        $r1 = virtualinvoke $r1.<io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry 'with'(io.grpc.Decompressor,boolean)>($r3, 0);

        <io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry DEFAULT_INSTANCE> = $r1;

        return;
    }

    private void <init>()
    {
        io.grpc.DecompressorRegistry $r0;
        byte[] $r1;
        java.util.LinkedHashMap r2;
        java.util.Map r3;

        $r0 := @this: io.grpc.DecompressorRegistry;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r2 = new java.util.LinkedHashMap;

        specialinvoke r2.<java.util.LinkedHashMap: void <init>(int)>(0);

        r3 = (java.util.Map) r2;

        $r0.<io.grpc.DecompressorRegistry: java.util.Map decompressors> = r3;

        $r1 = newarray (byte)[0];

        $r0.<io.grpc.DecompressorRegistry: byte[] advertisedDecompressors> = $r1;

        return;
    }

    private void <init>(io.grpc.Decompressor, boolean, io.grpc.DecompressorRegistry)
    {
        io.grpc.DecompressorRegistry $r0, $r3;
        io.grpc.Decompressor $r1, $r2;
        boolean $z0, $z1;
        java.lang.String $r4, $r6;
        java.util.Map $r5;
        int $i0, $i1;
        java.util.LinkedHashMap $r7, r17;
        java.util.Collection $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        io.grpc.DecompressorRegistry$DecompressorInfo $r11, $r12, r18;
        com.google.common.base.Joiner $r13;
        java.util.Set $r14;
        java.nio.charset.Charset $r15;
        byte[] $r16;
        java.lang.Iterable r19;

        $r0 := @this: io.grpc.DecompressorRegistry;

        $r2 := @parameter0: io.grpc.Decompressor;

        $z0 := @parameter1: boolean;

        $r3 := @parameter2: io.grpc.DecompressorRegistry;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = interfaceinvoke $r2.<io.grpc.Decompressor: java.lang.String getMessageEncoding()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(",");

        if $z1 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "Comma is currently not allowed in message encoding");

        $r5 = $r3.<io.grpc.DecompressorRegistry: java.util.Map decompressors>;

        $i0 = interfaceinvoke $r5.<java.util.Map: int size()>();

        $i1 = $i0;

        $r5 = $r3.<io.grpc.DecompressorRegistry: java.util.Map decompressors>;

        $r6 = interfaceinvoke $r2.<io.grpc.Decompressor: java.lang.String getMessageEncoding()>();

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

        $i1 = $i0 + 1;

     label3:
        r17 = new java.util.LinkedHashMap;

        $r7 = r17;

        specialinvoke r17.<java.util.LinkedHashMap: void <init>(int)>($i1);

        $r5 = $r3.<io.grpc.DecompressorRegistry: java.util.Map decompressors>;

        $r8 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (io.grpc.DecompressorRegistry$DecompressorInfo) $r10;

        $r1 = $r11.<io.grpc.DecompressorRegistry$DecompressorInfo: io.grpc.Decompressor decompressor>;

        $r6 = interfaceinvoke $r1.<io.grpc.Decompressor: java.lang.String getMessageEncoding()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label4;

        r18 = new io.grpc.DecompressorRegistry$DecompressorInfo;

        $r1 = $r11.<io.grpc.DecompressorRegistry$DecompressorInfo: io.grpc.Decompressor decompressor>;

        $z1 = $r11.<io.grpc.DecompressorRegistry$DecompressorInfo: boolean advertised>;

        specialinvoke r18.<io.grpc.DecompressorRegistry$DecompressorInfo: void <init>(io.grpc.Decompressor,boolean)>($r1, $z1);

        $r5 = (java.util.Map) $r7;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r18);

        goto label4;

     label5:
        $r12 = new io.grpc.DecompressorRegistry$DecompressorInfo;

        specialinvoke $r12.<io.grpc.DecompressorRegistry$DecompressorInfo: void <init>(io.grpc.Decompressor,boolean)>($r2, $z0);

        $r5 = (java.util.Map) $r7;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r12);

        $r5 = (java.util.Map) $r7;

        $r5 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

        $r0.<io.grpc.DecompressorRegistry: java.util.Map decompressors> = $r5;

        $r13 = <io.grpc.DecompressorRegistry: com.google.common.base.Joiner ACCEPT_ENCODING_JOINER>;

        $r14 = virtualinvoke $r0.<io.grpc.DecompressorRegistry: java.util.Set getAdvertisedMessageEncodings()>();

        r19 = (java.lang.Iterable) $r14;

        $r4 = virtualinvoke $r13.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>(r19);

        $r15 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        $r16 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r15);

        $r0.<io.grpc.DecompressorRegistry: byte[] advertisedDecompressors> = $r16;

        return;
    }

    public static io.grpc.DecompressorRegistry emptyInstance()
    {
        io.grpc.DecompressorRegistry $r0;

        $r0 = new io.grpc.DecompressorRegistry;

        specialinvoke $r0.<io.grpc.DecompressorRegistry: void <init>()>();

        return $r0;
    }

    public static io.grpc.DecompressorRegistry getDefaultInstance()
    {
        io.grpc.DecompressorRegistry r0;

        r0 = <io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry DEFAULT_INSTANCE>;

        return r0;
    }

    public java.util.Set getAdvertisedMessageEncodings()
    {
        io.grpc.DecompressorRegistry $r0;
        java.util.HashSet $r1, r9;
        java.util.Map $r2;
        int $i0;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry $r6;
        io.grpc.DecompressorRegistry$DecompressorInfo $r7;
        java.lang.String $r8;

        $r0 := @this: io.grpc.DecompressorRegistry;

        r9 = new java.util.HashSet;

        $r1 = r9;

        $r2 = $r0.<io.grpc.DecompressorRegistry: java.util.Map decompressors>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        specialinvoke r9.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = $r0.<io.grpc.DecompressorRegistry: java.util.Map decompressors>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (io.grpc.DecompressorRegistry$DecompressorInfo) $r5;

        $z0 = $r7.<io.grpc.DecompressorRegistry$DecompressorInfo: boolean advertised>;

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r5;

        $r3 = (java.util.Set) $r1;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r3 = (java.util.Set) $r1;

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        return $r3;
    }

    byte[] getRawAdvertisedMessageEncodings()
    {
        io.grpc.DecompressorRegistry $r0;
        byte[] r1;

        $r0 := @this: io.grpc.DecompressorRegistry;

        r1 = $r0.<io.grpc.DecompressorRegistry: byte[] advertisedDecompressors>;

        return r1;
    }

    public io.grpc.Decompressor lookupDecompressor(java.lang.String)
    {
        io.grpc.DecompressorRegistry $r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        io.grpc.DecompressorRegistry$DecompressorInfo $r4;
        io.grpc.Decompressor r5;

        $r0 := @this: io.grpc.DecompressorRegistry;

        $r3 := @parameter0: java.lang.String;

        $r1 = $r0.<io.grpc.DecompressorRegistry: java.util.Map decompressors>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r4 = (io.grpc.DecompressorRegistry$DecompressorInfo) $r2;

        if $r4 == null goto label1;

        r5 = $r4.<io.grpc.DecompressorRegistry$DecompressorInfo: io.grpc.Decompressor decompressor>;

        return r5;

     label1:
        return null;
    }

    public io.grpc.DecompressorRegistry 'with'(io.grpc.Decompressor, boolean)
    {
        io.grpc.DecompressorRegistry $r0, $r2;
        io.grpc.Decompressor $r1;
        boolean $z0;

        $r0 := @this: io.grpc.DecompressorRegistry;

        $r1 := @parameter0: io.grpc.Decompressor;

        $z0 := @parameter1: boolean;

        $r2 = new io.grpc.DecompressorRegistry;

        specialinvoke $r2.<io.grpc.DecompressorRegistry: void <init>(io.grpc.Decompressor,boolean,io.grpc.DecompressorRegistry)>($r1, $z0, $r0);

        return $r2;
    }

io.grpc.DecompressorRegistry$DecompressorInfo
<io.grpc.DecompressorRegistry$DecompressorInfo: boolean advertised>
<io.grpc.DecompressorRegistry$DecompressorInfo: io.grpc.Decompressor decompressor>
    void <init>(io.grpc.Decompressor, boolean)
    {
        io.grpc.DecompressorRegistry$DecompressorInfo $r0;
        boolean $z0;
        java.lang.Object $r1;
        io.grpc.Decompressor $r2;

        $r0 := @this: io.grpc.DecompressorRegistry$DecompressorInfo;

        $r2 := @parameter0: io.grpc.Decompressor;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "decompressor");

        $r2 = (io.grpc.Decompressor) $r1;

        $r0.<io.grpc.DecompressorRegistry$DecompressorInfo: io.grpc.Decompressor decompressor> = $r2;

        $r0.<io.grpc.DecompressorRegistry$DecompressorInfo: boolean advertised> = $z0;

        return;
    }

