androidx.ui.material.ripple.DefaultRippleOpacity
<androidx.ui.material.ripple.DefaultRippleOpacity: float pressed>
<androidx.ui.material.ripple.DefaultRippleOpacity: float focused>
<androidx.ui.material.ripple.DefaultRippleOpacity: float dragged>
<androidx.ui.material.ripple.DefaultRippleOpacity: float hovered>
    private void <init>(float, float, float, float)
    {
        androidx.ui.material.ripple.DefaultRippleOpacity r0;
        float f0, f1, f2, f3;

        r0 := @this: androidx.ui.material.ripple.DefaultRippleOpacity;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float pressed> = f0;

        r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float focused> = f1;

        r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float dragged> = f2;

        r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float hovered> = f3;

        return;
    }

    public final float getPressed()
    {
        androidx.ui.material.ripple.DefaultRippleOpacity r0;
        float $f0;

        r0 := @this: androidx.ui.material.ripple.DefaultRippleOpacity;

        $f0 = r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float pressed>;

        return $f0;
    }

    public final float getFocused()
    {
        androidx.ui.material.ripple.DefaultRippleOpacity r0;
        float $f0;

        r0 := @this: androidx.ui.material.ripple.DefaultRippleOpacity;

        $f0 = r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float focused>;

        return $f0;
    }

    public final float getDragged()
    {
        androidx.ui.material.ripple.DefaultRippleOpacity r0;
        float $f0;

        r0 := @this: androidx.ui.material.ripple.DefaultRippleOpacity;

        $f0 = r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float dragged>;

        return $f0;
    }

    public final float getHovered()
    {
        androidx.ui.material.ripple.DefaultRippleOpacity r0;
        float $f0;

        r0 := @this: androidx.ui.material.ripple.DefaultRippleOpacity;

        $f0 = r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float hovered>;

        return $f0;
    }

    public float opacityForInteraction(androidx.ui.foundation.Interaction)
    {
        androidx.ui.material.ripple.DefaultRippleOpacity r0;
        androidx.ui.foundation.Interaction r1, r2;
        androidx.ui.foundation.Interaction$Pressed $r3;
        boolean $z0, $z1;
        androidx.ui.foundation.Interaction$Dragged $r4;
        float $f0;

        r0 := @this: androidx.ui.material.ripple.DefaultRippleOpacity;

        r1 := @parameter0: androidx.ui.foundation.Interaction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interaction");

        r2 = r1;

        $r3 = <androidx.ui.foundation.Interaction$Pressed: androidx.ui.foundation.Interaction$Pressed INSTANCE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $z0 == 0 goto label1;

        $f0 = virtualinvoke r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float getPressed()>();

        goto label3;

     label1:
        $r4 = <androidx.ui.foundation.Interaction$Dragged: androidx.ui.foundation.Interaction$Dragged INSTANCE>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z1 == 0 goto label2;

        $f0 = virtualinvoke r0.<androidx.ui.material.ripple.DefaultRippleOpacity: float getDragged()>();

        goto label3;

     label2:
        $f0 = 0.0F;

     label3:
        return $f0;
    }

    public void <init>(float, float, float, float, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.material.ripple.DefaultRippleOpacity r0;
        float f0, f1, f2, f3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.material.ripple.DefaultRippleOpacity;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.material.ripple.DefaultRippleOpacity: void <init>(float,float,float,float)>(f0, f1, f2, f3);

        return;
    }

