androidx.camera.camera2.internal.CaptureCallbackAdapter
<androidx.camera.camera2.internal.CaptureCallbackAdapter: androidx.camera.core.impl.CameraCaptureCallback mCameraCaptureCallback>
    void <init>(androidx.camera.core.impl.CameraCaptureCallback)
    {
        androidx.camera.camera2.internal.CaptureCallbackAdapter r0;
        androidx.camera.core.impl.CameraCaptureCallback r1;
        java.lang.NullPointerException $r2;

        r0 := @this: androidx.camera.camera2.internal.CaptureCallbackAdapter;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureCallback;

        specialinvoke r0.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("cameraCaptureCallback is null");

        throw $r2;

     label1:
        r0.<androidx.camera.camera2.internal.CaptureCallbackAdapter: androidx.camera.core.impl.CameraCaptureCallback mCameraCaptureCallback> = r1;

        return;
    }

    public void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.TotalCaptureResult)
    {
        androidx.camera.camera2.internal.CaptureCallbackAdapter r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.TotalCaptureResult r3;
        java.lang.Object r4;
        androidx.camera.camera2.internal.Camera2CameraCaptureResult $r5;
        androidx.camera.core.impl.CameraCaptureCallback $r6;
        boolean $z0;
        androidx.camera.core.impl.TagBundle r7;

        r0 := @this: androidx.camera.camera2.internal.CaptureCallbackAdapter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.TotalCaptureResult;

        specialinvoke r0.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>(r1, r2, r3);

        r4 = virtualinvoke r2.<android.hardware.camera2.CaptureRequest: java.lang.Object getTag()>();

        if r4 == null goto label1;

        $z0 = r4 instanceof androidx.camera.core.impl.TagBundle;

        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "The tagBundle object from the CaptureResult is not a TagBundle object.");

        r7 = (androidx.camera.core.impl.TagBundle) r4;

        goto label2;

     label1:
        r7 = staticinvoke <androidx.camera.core.impl.TagBundle: androidx.camera.core.impl.TagBundle emptyBundle()>();

     label2:
        $r6 = r0.<androidx.camera.camera2.internal.CaptureCallbackAdapter: androidx.camera.core.impl.CameraCaptureCallback mCameraCaptureCallback>;

        $r5 = new androidx.camera.camera2.internal.Camera2CameraCaptureResult;

        specialinvoke $r5.<androidx.camera.camera2.internal.Camera2CameraCaptureResult: void <init>(androidx.camera.core.impl.TagBundle,android.hardware.camera2.CaptureResult)>(r7, r3);

        virtualinvoke $r6.<androidx.camera.core.impl.CameraCaptureCallback: void onCaptureCompleted(androidx.camera.core.impl.CameraCaptureResult)>($r5);

        return;
    }

    public void onCaptureFailed(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureFailure)
    {
        androidx.camera.camera2.internal.CaptureCallbackAdapter r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.CaptureFailure r3;
        androidx.camera.core.impl.CameraCaptureFailure r4, $r5;
        androidx.camera.core.impl.CameraCaptureFailure$Reason $r6;
        androidx.camera.core.impl.CameraCaptureCallback $r7;

        r0 := @this: androidx.camera.camera2.internal.CaptureCallbackAdapter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.CaptureFailure;

        specialinvoke r0.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>(r1, r2, r3);

        $r5 = new androidx.camera.core.impl.CameraCaptureFailure;

        $r6 = <androidx.camera.core.impl.CameraCaptureFailure$Reason: androidx.camera.core.impl.CameraCaptureFailure$Reason ERROR>;

        specialinvoke $r5.<androidx.camera.core.impl.CameraCaptureFailure: void <init>(androidx.camera.core.impl.CameraCaptureFailure$Reason)>($r6);

        r4 = $r5;

        $r7 = r0.<androidx.camera.camera2.internal.CaptureCallbackAdapter: androidx.camera.core.impl.CameraCaptureCallback mCameraCaptureCallback>;

        virtualinvoke $r7.<androidx.camera.core.impl.CameraCaptureCallback: void onCaptureFailed(androidx.camera.core.impl.CameraCaptureFailure)>(r4);

        return;
    }

