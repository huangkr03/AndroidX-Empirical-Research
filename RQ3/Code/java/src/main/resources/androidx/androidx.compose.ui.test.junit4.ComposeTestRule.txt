androidx.compose.ui.test.junit4.ComposeTestRule
<androidx.compose.ui.test.junit4.ComposeTestRule: androidx.compose.ui.unit.Density getDensity()>
<androidx.compose.ui.test.junit4.ComposeTestRule: androidx.compose.ui.test.MainTestClock getMainClock()>
<androidx.compose.ui.test.junit4.ComposeTestRule: java.lang.Object runOnUiThread(kotlin.jvm.functions.Function0)>
<androidx.compose.ui.test.junit4.ComposeTestRule: java.lang.Object runOnIdle(kotlin.jvm.functions.Function0)>
<androidx.compose.ui.test.junit4.ComposeTestRule: void waitForIdle()>
<androidx.compose.ui.test.junit4.ComposeTestRule: java.lang.Object awaitIdle(kotlin.coroutines.Continuation)>
<androidx.compose.ui.test.junit4.ComposeTestRule: void waitUntil(long,kotlin.jvm.functions.Function0)>
    public static void waitUntil$default(androidx.compose.ui.test.junit4.ComposeTestRule, long, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.compose.ui.test.junit4.ComposeTestRule r0;
        kotlin.jvm.functions.Function0 r1;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.UnsupportedOperationException $r3;
        long l2;

        r0 := @parameter0: androidx.compose.ui.test.junit4.ComposeTestRule;

        l2 := @parameter1: long;

        r1 := @parameter2: kotlin.jvm.functions.Function0;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        if r2 == null goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: waitUntil");

        throw $r3;

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        l2 = 1000L;

     label2:
        interfaceinvoke r0.<androidx.compose.ui.test.junit4.ComposeTestRule: void waitUntil(long,kotlin.jvm.functions.Function0)>(l2, r1);

        return;
    }

<androidx.compose.ui.test.junit4.ComposeTestRule: void registerIdlingResource(androidx.compose.ui.test.IdlingResource)>
<androidx.compose.ui.test.junit4.ComposeTestRule: void unregisterIdlingResource(androidx.compose.ui.test.IdlingResource)>
androidx.compose.ui.test.junit4.ComposeTestRule$DefaultImpls
    public static void waitUntil$default(androidx.compose.ui.test.junit4.ComposeTestRule, long, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.compose.ui.test.junit4.ComposeTestRule r0;
        long l0;
        kotlin.jvm.functions.Function0 r1;
        int i1;
        java.lang.Object r2;

        r0 := @parameter0: androidx.compose.ui.test.junit4.ComposeTestRule;

        l0 := @parameter1: long;

        r1 := @parameter2: kotlin.jvm.functions.Function0;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        staticinvoke <androidx.compose.ui.test.junit4.ComposeTestRule: void waitUntil$default(androidx.compose.ui.test.junit4.ComposeTestRule,long,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, l0, r1, i1, r2);

        return;
    }

