io.grpc.internal.PickFirstLoadBalancerProvider
    public void <init>()
    {
        io.grpc.internal.PickFirstLoadBalancerProvider $r0;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancerProvider;

        specialinvoke $r0.<io.grpc.LoadBalancerProvider: void <init>()>();

        return;
    }

    public java.lang.String getPolicyName()
    {
        io.grpc.internal.PickFirstLoadBalancerProvider $r0;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancerProvider;

        return "pick_first";
    }

    public int getPriority()
    {
        io.grpc.internal.PickFirstLoadBalancerProvider $r0;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancerProvider;

        return 5;
    }

    public boolean isAvailable()
    {
        io.grpc.internal.PickFirstLoadBalancerProvider $r0;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancerProvider;

        return 1;
    }

    public io.grpc.LoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper)
    {
        io.grpc.internal.PickFirstLoadBalancerProvider $r0;
        io.grpc.LoadBalancer$Helper $r1;
        io.grpc.internal.PickFirstLoadBalancer $r2;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancerProvider;

        $r1 := @parameter0: io.grpc.LoadBalancer$Helper;

        $r2 = new io.grpc.internal.PickFirstLoadBalancer;

        specialinvoke $r2.<io.grpc.internal.PickFirstLoadBalancer: void <init>(io.grpc.LoadBalancer$Helper)>($r1);

        return $r2;
    }

    public io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
    {
        io.grpc.internal.PickFirstLoadBalancerProvider $r0;
        io.grpc.NameResolver$ConfigOrError $r1;
        java.util.Map $r2;

        $r0 := @this: io.grpc.internal.PickFirstLoadBalancerProvider;

        $r2 := @parameter0: java.util.Map;

        $r1 = staticinvoke <io.grpc.NameResolver$ConfigOrError: io.grpc.NameResolver$ConfigOrError fromConfig(java.lang.Object)>("no service config");

        return $r1;
    }

