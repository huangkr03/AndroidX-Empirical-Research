io.opencensus.trace.TraceOptions
<io.opencensus.trace.TraceOptions: io.opencensus.trace.TraceOptions DEFAULT>
<io.opencensus.trace.TraceOptions: byte options>
    static void <clinit>()
    {
        io.opencensus.trace.TraceOptions $r0;

        $r0 = staticinvoke <io.opencensus.trace.TraceOptions: io.opencensus.trace.TraceOptions fromByte(byte)>(0);

        <io.opencensus.trace.TraceOptions: io.opencensus.trace.TraceOptions DEFAULT> = $r0;

        return;
    }

    private void <init>(byte)
    {
        io.opencensus.trace.TraceOptions $r0;
        byte $b0;

        $r0 := @this: io.opencensus.trace.TraceOptions;

        $b0 := @parameter0: byte;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.opencensus.trace.TraceOptions: byte options> = $b0;

        return;
    }

    public static io.opencensus.trace.TraceOptions fromByte(byte)
    {
        byte $b0;
        io.opencensus.trace.TraceOptions $r0;

        $b0 := @parameter0: byte;

        $r0 = new io.opencensus.trace.TraceOptions;

        specialinvoke $r0.<io.opencensus.trace.TraceOptions: void <init>(byte)>($b0);

        return $r0;
    }

    private boolean hasOption(int)
    {
        io.opencensus.trace.TraceOptions $r0;
        byte $b0;
        int $i1;

        $r0 := @this: io.opencensus.trace.TraceOptions;

        $i1 := @parameter0: int;

        $b0 = $r0.<io.opencensus.trace.TraceOptions: byte options>;

        $i1 = $i1 & $b0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        io.opencensus.trace.TraceOptions $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        byte $b0, $b1;

        $r0 := @this: io.opencensus.trace.TraceOptions;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof io.opencensus.trace.TraceOptions;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (io.opencensus.trace.TraceOptions) $r1;

        $b0 = $r0.<io.opencensus.trace.TraceOptions: byte options>;

        $b1 = $r2.<io.opencensus.trace.TraceOptions: byte options>;

        if $b0 != $b1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        io.opencensus.trace.TraceOptions $r0;
        byte $b0;
        int $i1;
        byte[] $r1;

        $r0 := @this: io.opencensus.trace.TraceOptions;

        $r1 = newarray (byte)[1];

        $b0 = $r0.<io.opencensus.trace.TraceOptions: byte options>;

        $r1[0] = $b0;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        return $i1;
    }

    public boolean isSampled()
    {
        io.opencensus.trace.TraceOptions $r0;
        boolean $z0;

        $r0 := @this: io.opencensus.trace.TraceOptions;

        $z0 = specialinvoke $r0.<io.opencensus.trace.TraceOptions: boolean hasOption(int)>(1);

        return $z0;
    }

    public java.lang.String toString()
    {
        io.opencensus.trace.TraceOptions $r0;
        java.lang.StringBuilder $r1;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @this: io.opencensus.trace.TraceOptions;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TraceOptions{sampled=");

        $z0 = virtualinvoke $r0.<io.opencensus.trace.TraceOptions: boolean isSampled()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

