androidx.fragment.app.testing.FragmentFactoryHolderViewModel
<androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion Companion>
<androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.fragment.app.FragmentFactory fragmentFactory>
<androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY>
    public void <init>()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel r0;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel;

        specialinvoke r0.<androidx.lifecycle.ViewModel: void <init>()>();

        return;
    }

    public final androidx.fragment.app.FragmentFactory getFragmentFactory()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel r0;
        androidx.fragment.app.FragmentFactory $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel;

        $r1 = r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.fragment.app.FragmentFactory fragmentFactory>;

        return $r1;
    }

    public final void setFragmentFactory(androidx.fragment.app.FragmentFactory)
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel r0;
        androidx.fragment.app.FragmentFactory r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel;

        r1 := @parameter0: androidx.fragment.app.FragmentFactory;

        r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.fragment.app.FragmentFactory fragmentFactory> = r1;

        return;
    }

    protected void onCleared()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel r0;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel;

        specialinvoke r0.<androidx.lifecycle.ViewModel: void onCleared()>();

        r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.fragment.app.FragmentFactory fragmentFactory> = null;

        return;
    }

    public static final androidx.lifecycle.ViewModelProvider$Factory access$getFACTORY$cp()
    {
        androidx.lifecycle.ViewModelProvider$Factory $r0;

        $r0 = <androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion $r0;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$FACTORY$1 $r1;
        androidx.lifecycle.ViewModelProvider$Factory $r2;

        $r0 = new androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion;

        specialinvoke $r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion Companion> = $r0;

        $r1 = new androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$FACTORY$1;

        specialinvoke $r1.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$FACTORY$1: void <init>()>();

        $r2 = (androidx.lifecycle.ViewModelProvider$Factory) $r1;

        <androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY> = $r2;

        return;
    }

androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$FACTORY$1
    void <init>()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$FACTORY$1 r0;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$FACTORY$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.lifecycle.ViewModel create(java.lang.Class)
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$FACTORY$1 r0;
        java.lang.Class r1;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel r2, $r3;
        androidx.lifecycle.ViewModel $r4;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$FACTORY$1;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "modelClass");

        $r3 = new androidx.fragment.app.testing.FragmentFactoryHolderViewModel;

        specialinvoke $r3.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel: void <init>()>();

        r2 = $r3;

        $r4 = (androidx.lifecycle.ViewModel) r2;

        return $r4;
    }

androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1
<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1: androidx.activity.ComponentActivity $this_viewModels>
    public void <init>(androidx.activity.ComponentActivity)
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1 r0;
        androidx.activity.ComponentActivity $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1;

        $r1 := @parameter0: androidx.activity.ComponentActivity;

        r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1: androidx.activity.ComponentActivity $this_viewModels> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.lifecycle.ViewModelProvider$Factory invoke()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1 r0;
        androidx.activity.ComponentActivity $r1;
        androidx.lifecycle.ViewModelProvider$Factory $r2;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1;

        $r1 = r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1: androidx.activity.ComponentActivity $this_viewModels>;

        $r2 = virtualinvoke $r1.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "defaultViewModelProviderFactory");

        return $r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1 r0;
        androidx.lifecycle.ViewModelProvider$Factory $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1;

        $r1 = virtualinvoke r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1: androidx.lifecycle.ViewModelProvider$Factory invoke()>();

        return $r1;
    }

androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2
<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2: androidx.activity.ComponentActivity $this_viewModels>
    public void <init>(androidx.activity.ComponentActivity)
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2 r0;
        androidx.activity.ComponentActivity $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2;

        $r1 := @parameter0: androidx.activity.ComponentActivity;

        r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2: androidx.activity.ComponentActivity $this_viewModels> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.lifecycle.ViewModelStore invoke()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2 r0;
        androidx.activity.ComponentActivity $r1;
        androidx.lifecycle.ViewModelStore $r2;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2;

        $r1 = r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2: androidx.activity.ComponentActivity $this_viewModels>;

        $r2 = virtualinvoke $r1.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "viewModelStore");

        return $r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2 r0;
        androidx.lifecycle.ViewModelStore $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2;

        $r1 = virtualinvoke r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2: androidx.lifecycle.ViewModelStore invoke()>();

        return $r1;
    }

androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3
<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3: kotlin.jvm.functions.Function0 $extrasProducer>
<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3: androidx.activity.ComponentActivity $this_viewModels>
    public void <init>(kotlin.jvm.functions.Function0, androidx.activity.ComponentActivity)
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3 r0;
        kotlin.jvm.functions.Function0 $r1;
        androidx.activity.ComponentActivity $r2;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3;

        $r1 := @parameter0: kotlin.jvm.functions.Function0;

        $r2 := @parameter1: androidx.activity.ComponentActivity;

        r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3: kotlin.jvm.functions.Function0 $extrasProducer> = $r1;

        r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3: androidx.activity.ComponentActivity $this_viewModels> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.lifecycle.viewmodel.CreationExtras invoke()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3 r0;
        kotlin.jvm.functions.Function0 $r1;
        androidx.activity.ComponentActivity $r2;
        java.lang.Object $r3;
        androidx.lifecycle.viewmodel.CreationExtras $r4;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3;

        $r1 = r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3: kotlin.jvm.functions.Function0 $extrasProducer>;

        if $r1 == null goto label1;

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r4 = (androidx.lifecycle.viewmodel.CreationExtras) $r3;

        if $r4 != null goto label2;

     label1:
        $r2 = r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3: androidx.activity.ComponentActivity $this_viewModels>;

        $r4 = virtualinvoke $r2.<androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "this.defaultViewModelCreationExtras");

     label2:
        return $r4;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3 r0;
        androidx.lifecycle.viewmodel.CreationExtras $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3;

        $r1 = virtualinvoke r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3: androidx.lifecycle.viewmodel.CreationExtras invoke()>();

        return $r1;
    }

androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2
<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2 INSTANCE>
    void <init>()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2 r0;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.lifecycle.ViewModelProvider$Factory invoke()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2 r0;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion $r1;
        androidx.lifecycle.ViewModelProvider$Factory $r2;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2;

        $r1 = <androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion: androidx.lifecycle.ViewModelProvider$Factory getFACTORY$fragment_testing_manifest_release()>();

        return $r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2 r0;
        androidx.lifecycle.ViewModelProvider$Factory $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2;

        $r1 = virtualinvoke r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2: androidx.lifecycle.ViewModelProvider$Factory invoke()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2 $r0;

        $r0 = new androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2;

        specialinvoke $r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2: void <init>()>();

        <androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2 INSTANCE> = $r0;

        return;
    }

androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion
    private void <init>()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion r0;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.lifecycle.ViewModelProvider$Factory getFACTORY$fragment_testing_manifest_release()
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion r0;
        androidx.lifecycle.ViewModelProvider$Factory $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion;

        $r1 = staticinvoke <androidx.fragment.app.testing.FragmentFactoryHolderViewModel: androidx.lifecycle.ViewModelProvider$Factory access$getFACTORY$cp()>();

        return $r1;
    }

    public static void getFACTORY$fragment_testing_manifest_release$annotations()
    {
        return;
    }

    public final androidx.fragment.app.testing.FragmentFactoryHolderViewModel getInstance(androidx.fragment.app.FragmentActivity)
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion r0;
        androidx.fragment.app.FragmentActivity r1;
        kotlin.Lazy r2;
        androidx.activity.ComponentActivity $r3;
        kotlin.jvm.functions.Function0 r4, r5, $r11, $r12, $r15;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2 $r6;
        androidx.lifecycle.ViewModelLazy $r7;
        kotlin.reflect.KClass $r8;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2 $r9;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3 $r10;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel $r13;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1 $r14;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion;

        r1 := @parameter0: androidx.fragment.app.FragmentActivity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r3 = (androidx.activity.ComponentActivity) r1;

        $r6 = <androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$viewModel$2 INSTANCE>;

        r4 = (kotlin.jvm.functions.Function0) $r6;

        $r15 = r4;

        if r4 != null goto label1;

        $r14 = new androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1;

        specialinvoke $r14.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$1: void <init>(androidx.activity.ComponentActivity)>($r3);

        $r15 = (kotlin.jvm.functions.Function0) $r14;

     label1:
        r5 = $r15;

        $r7 = new androidx.lifecycle.ViewModelLazy;

        $r8 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/fragment/app/testing/FragmentFactoryHolderViewModel;");

        $r9 = new androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2;

        specialinvoke $r9.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$2: void <init>(androidx.activity.ComponentActivity)>($r3);

        $r11 = (kotlin.jvm.functions.Function0) $r9;

        $r10 = new androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3;

        specialinvoke $r10.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion$getInstance$$inlined$viewModels$default$3: void <init>(kotlin.jvm.functions.Function0,androidx.activity.ComponentActivity)>(null, $r3);

        $r12 = (kotlin.jvm.functions.Function0) $r10;

        specialinvoke $r7.<androidx.lifecycle.ViewModelLazy: void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)>($r8, $r11, r5, $r12);

        r2 = (kotlin.Lazy) $r7;

        $r13 = staticinvoke <androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion: androidx.fragment.app.testing.FragmentFactoryHolderViewModel getInstance$lambda$0(kotlin.Lazy)>(r2);

        return $r13;
    }

    private static final androidx.fragment.app.testing.FragmentFactoryHolderViewModel getInstance$lambda$0(kotlin.Lazy)
    {
        kotlin.Lazy $r0, r1;
        java.lang.Object $r2;
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel $r3;

        $r0 := @parameter0: kotlin.Lazy;

        r1 = $r0;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.fragment.app.testing.FragmentFactoryHolderViewModel) $r2;

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.fragment.app.testing.FragmentFactoryHolderViewModel$Companion: void <init>()>();

        return;
    }

