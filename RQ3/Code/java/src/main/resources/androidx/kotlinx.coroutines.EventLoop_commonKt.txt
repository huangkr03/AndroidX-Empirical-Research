kotlinx.coroutines.EventLoop_commonKt
<kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY>
<kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK>
    static void <clinit>()
    {
        kotlinx.coroutines.internal.Symbol $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("REMOVED_TASK");

        <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("CLOSED_EMPTY");

        <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY> = $r0;

        return;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK>;

        return r0;
    }

    public static final long delayToNanos(long)
    {
        long $l0, $l1;
        byte $b2;

        $l0 := @parameter0: long;

        $l1 = 0L;

        $b2 = $l0 cmp 0L;

        if $b2 > 0 goto label2;

     label1:
        goto label4;

     label2:
        $b2 = $l0 cmp 9223372036854L;

        if $b2 < 0 goto label3;

        $l1 = 9223372036854775807L;

        goto label4;

     label3:
        $l1 = 1000000L * $l0;

        goto label1;

     label4:
        return $l1;
    }

