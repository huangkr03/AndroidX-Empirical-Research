androidx.ui.core.Owner
<androidx.ui.core.Owner: androidx.ui.core.Owner$Companion Companion>
<androidx.ui.core.Owner: androidx.ui.core.LayoutNode getRoot()>
<androidx.ui.core.Owner: kotlin.jvm.functions.Function0 getConfigurationChangeObserver()>
<androidx.ui.core.Owner: void setConfigurationChangeObserver(kotlin.jvm.functions.Function0)>
<androidx.ui.core.Owner: androidx.ui.core.hapticfeedback.HapticFeedback getHapticFeedBack()>
<androidx.ui.core.Owner: androidx.ui.core.clipboard.ClipboardManager getClipboardManager()>
<androidx.ui.core.Owner: androidx.ui.autofill.AutofillTree getAutofillTree()>
<androidx.ui.core.Owner: androidx.ui.autofill.Autofill getAutofill()>
<androidx.ui.core.Owner: androidx.ui.savedinstancestate.UiSavedStateRegistry getSavedStateRegistry()>
<androidx.ui.core.Owner: void setOnSavedStateRegistryAvailable(kotlin.jvm.functions.Function1)>
<androidx.ui.core.Owner: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>
<androidx.ui.core.Owner: void setOnLifecycleOwnerAvailable(kotlin.jvm.functions.Function1)>
<androidx.ui.core.Owner: androidx.ui.unit.Density getDensity()>
<androidx.ui.core.Owner: androidx.ui.core.semantics.SemanticsOwner getSemanticsOwner()>
<androidx.ui.core.Owner: androidx.ui.input.TextInputService getTextInputService()>
<androidx.ui.core.Owner: androidx.ui.text.font.Font$ResourceLoader getFontLoader()>
<androidx.ui.core.Owner: boolean getShowLayoutBounds()>
<androidx.ui.core.Owner: void setShowLayoutBounds(boolean)>
<androidx.ui.core.Owner: void onInvalidate(androidx.ui.core.DrawNode)>
<androidx.ui.core.Owner: void onInvalidate(androidx.ui.core.LayoutNode)>
<androidx.ui.core.Owner: void onRequestMeasure(androidx.ui.core.LayoutNode)>
<androidx.ui.core.Owner: void onAttach(androidx.ui.core.ComponentNode)>
<androidx.ui.core.Owner: void onDetach(androidx.ui.core.ComponentNode)>
<androidx.ui.core.Owner: androidx.ui.unit.IntPxPosition calculatePosition()>
<androidx.ui.core.Owner: boolean requestFocus()>
<androidx.ui.core.Owner: void pauseModelReadObserveration(kotlin.jvm.functions.Function0)>
<androidx.ui.core.Owner: void observeLayoutModelReads(androidx.ui.core.LayoutNode,kotlin.jvm.functions.Function0)>
<androidx.ui.core.Owner: void observeMeasureModelReads(androidx.ui.core.LayoutNode,kotlin.jvm.functions.Function0)>
<androidx.ui.core.Owner: void callDraw(androidx.ui.graphics.Canvas,androidx.ui.core.ComponentNode,androidx.ui.unit.PxSize)>
<androidx.ui.core.Owner: void measureAndLayout()>
<androidx.ui.core.Owner: androidx.ui.core.OwnedLayer createLayer(androidx.ui.core.DrawLayerModifier,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>
<androidx.ui.core.Owner: long getMeasureIteration()>
    public static void <clinit>()
    {
        androidx.ui.core.Owner$Companion $r0;

        $r0 = <androidx.ui.core.Owner$Companion: androidx.ui.core.Owner$Companion $$INSTANCE>;

        <androidx.ui.core.Owner: androidx.ui.core.Owner$Companion Companion> = $r0;

        return;
    }

androidx.ui.core.Owner$Companion
<androidx.ui.core.Owner$Companion: androidx.ui.core.Owner$Companion $$INSTANCE>
<androidx.ui.core.Owner$Companion: boolean enableExtraAssertions>
    private void <init>()
    {
        androidx.ui.core.Owner$Companion r0;

        r0 := @this: androidx.ui.core.Owner$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean getEnableExtraAssertions()
    {
        androidx.ui.core.Owner$Companion r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.Owner$Companion;

        $z0 = <androidx.ui.core.Owner$Companion: boolean enableExtraAssertions>;

        return $z0;
    }

    public final void setEnableExtraAssertions(boolean)
    {
        androidx.ui.core.Owner$Companion r0;
        boolean z0;

        r0 := @this: androidx.ui.core.Owner$Companion;

        z0 := @parameter0: boolean;

        <androidx.ui.core.Owner$Companion: boolean enableExtraAssertions> = z0;

        return;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.Owner$Companion $r0;

        $r0 = new androidx.ui.core.Owner$Companion;

        specialinvoke $r0.<androidx.ui.core.Owner$Companion: void <init>()>();

        <androidx.ui.core.Owner$Companion: androidx.ui.core.Owner$Companion $$INSTANCE> = $r0;

        return;
    }

