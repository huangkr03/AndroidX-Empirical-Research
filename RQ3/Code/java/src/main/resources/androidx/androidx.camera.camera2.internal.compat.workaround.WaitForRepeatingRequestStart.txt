androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart
<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean mHasCaptureSessionStuckQuirk>
<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: java.lang.Object mLock>
<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: com.google.common.util.concurrent.ListenableFuture mStartStreamingFuture>
<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mStartStreamingCompleter>
<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean mHasSubmittedRepeating>
<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: android.hardware.camera2.CameraCaptureSession$CaptureCallback mCaptureCallback>
    public void <init>(androidx.camera.core.impl.Quirks)
    {
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart r0;
        androidx.camera.core.impl.Quirks r1;
        java.lang.Object $r2;
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$1 $r3;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r4, $r6;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r5;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart;

        r1 := @parameter0: androidx.camera.core.impl.Quirks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: java.lang.Object mLock> = $r2;

        $r3 = new androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$1;

        specialinvoke $r3.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$1: void <init>(androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart)>(r0);

        r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: android.hardware.camera2.CameraCaptureSession$CaptureCallback mCaptureCallback> = $r3;

        $z0 = virtualinvoke r1.<androidx.camera.core.impl.Quirks: boolean contains(java.lang.Class)>(class "Landroidx/camera/camera2/internal/compat/quirk/CaptureSessionStuckQuirk;");

        r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean mHasCaptureSessionStuckQuirk> = $z0;

        $z1 = virtualinvoke r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean shouldWaitRepeatingSubmit()>();

        if $z1 == 0 goto label1;

        $r5 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: java.lang.Object lambda$new$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r6 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r5);

        r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: com.google.common.util.concurrent.ListenableFuture mStartStreamingFuture> = $r6;

        goto label2;

     label1:
        $r4 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(null);

        r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: com.google.common.util.concurrent.ListenableFuture mStartStreamingFuture> = $r4;

     label2:
        return;
    }

    public boolean shouldWaitRepeatingSubmit()
    {
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart r0;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart;

        $z0 = r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean mHasCaptureSessionStuckQuirk>;

        return $z0;
    }

    public com.google.common.util.concurrent.ListenableFuture getStartStreamFuture()
    {
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart r0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart;

        $r1 = r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: com.google.common.util.concurrent.ListenableFuture mStartStreamingFuture>;

        $r2 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)>($r1);

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture openCaptureSession(android.hardware.camera2.CameraDevice, androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat, java.util.List, java.util.List, androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession)
    {
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart r0;
        android.hardware.camera2.CameraDevice r1;
        androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat r2;
        java.util.List r3, r4;
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession r5;
        java.util.ArrayList r6, $r9;
        java.util.Iterator r7;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r8;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r10, $r16;
        androidx.camera.core.impl.utils.futures.FutureChain $r11, $r14;
        androidx.camera.core.impl.utils.futures.AsyncFunction $r12;
        java.util.concurrent.Executor $r13;
        java.lang.Object $r15;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        r2 := @parameter1: androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r6 = $r9;

        r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.camera.camera2.internal.SynchronizedCaptureSession) $r15;

        $r16 = interfaceinvoke r8.<androidx.camera.camera2.internal.SynchronizedCaptureSession: com.google.common.util.concurrent.ListenableFuture getOpeningBlocker()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label1;

     label2:
        $r10 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture successfulAsList(java.util.Collection)>(r6);

        $r11 = staticinvoke <androidx.camera.core.impl.utils.futures.FutureChain: androidx.camera.core.impl.utils.futures.FutureChain 'from'(com.google.common.util.concurrent.ListenableFuture)>($r10);

        $r12 = dynamicinvoke "apply" <androidx.camera.core.impl.utils.futures.AsyncFunction (androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession,android.hardware.camera2.CameraDevice,androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat,java.util.List)>(r5, r1, r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: com.google.common.util.concurrent.ListenableFuture lambda$openCaptureSession$1(androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession,android.hardware.camera2.CameraDevice,androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat,java.util.List,java.util.List)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.util.List));

        $r13 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        $r14 = virtualinvoke $r11.<androidx.camera.core.impl.utils.futures.FutureChain: androidx.camera.core.impl.utils.futures.FutureChain transformAsync(androidx.camera.core.impl.utils.futures.AsyncFunction,java.util.concurrent.Executor)>($r12, $r13);

        return $r14;
    }

    public int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest, android.hardware.camera2.CameraCaptureSession$CaptureCallback, androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$SingleRepeatingRequest) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart r0;
        android.hardware.camera2.CaptureRequest r1;
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$SingleRepeatingRequest r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r8;
        boolean $z0;
        int $i0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback[] $r6;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback $r7, r9;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r9 := @parameter1: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r2 := @parameter2: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$SingleRepeatingRequest;

        $r5 = r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $z0 = virtualinvoke r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean shouldWaitRepeatingSubmit()>();

        if $z0 == 0 goto label2;

        $r6 = newarray (android.hardware.camera2.CameraCaptureSession$CaptureCallback)[2];

        $r7 = r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: android.hardware.camera2.CameraCaptureSession$CaptureCallback mCaptureCallback>;

        $r6[0] = $r7;

        $r6[1] = r9;

        r9 = staticinvoke <androidx.camera.camera2.internal.Camera2CaptureCallbacks: android.hardware.camera2.CameraCaptureSession$CaptureCallback createComboCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback[])>($r6);

        r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean mHasSubmittedRepeating> = 1;

     label2:
        $i0 = interfaceinvoke r2.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$SingleRepeatingRequest: int run(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r1, r9);

        exitmonitor r3;

     label3:
        return $i0;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onSessionEnd()
    {
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart;

        $r3 = r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = virtualinvoke r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean shouldWaitRepeatingSubmit()>();

        if $z0 == 0 goto label2;

        $z1 = r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: boolean mHasSubmittedRepeating>;

        if $z1 != 0 goto label2;

        $r4 = r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: com.google.common.util.concurrent.ListenableFuture mStartStreamingFuture>;

        interfaceinvoke $r4.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$openCaptureSession$1(androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession, android.hardware.camera2.CameraDevice, androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat, java.util.List, java.util.List) throws java.lang.Exception
    {
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession r0;
        android.hardware.camera2.CameraDevice r1;
        androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat r2;
        java.util.List r3, r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @parameter0: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession;

        r1 := @parameter1: android.hardware.camera2.CameraDevice;

        r2 := @parameter2: androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        $r5 = interfaceinvoke r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart$OpenCaptureSession: com.google.common.util.concurrent.ListenableFuture run(android.hardware.camera2.CameraDevice,androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat,java.util.List)>(r1, r2, r3);

        return $r5;
    }

    private java.lang.Object lambda$new$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r0.<androidx.camera.camera2.internal.compat.workaround.WaitForRepeatingRequestStart: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mStartStreamingCompleter> = r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WaitForRepeatingRequestStart[");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

