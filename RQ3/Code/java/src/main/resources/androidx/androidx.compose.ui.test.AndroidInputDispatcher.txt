androidx.compose.ui.test.AndroidInputDispatcher
<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.test.TestContext testContext>
<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.platform.ViewRootForTest root>
<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.jvm.functions.Function1 sendEvent>
<androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object batchLock>
<androidx.compose.ui.test.AndroidInputDispatcher: java.util.List batchedEvents>
<androidx.compose.ui.test.AndroidInputDispatcher: boolean disposed>
<androidx.compose.ui.test.AndroidInputDispatcher: long currentClockTime>
<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.Lazy verticalScrollFactor$delegate>
<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.Lazy horizontalScrollFactor$delegate>
    public void <init>(androidx.compose.ui.test.TestContext, androidx.compose.ui.platform.ViewRootForTest, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.TestContext r1;
        androidx.compose.ui.platform.ViewRootForTest r2;
        kotlin.jvm.functions.Function1 r3;
        androidx.compose.ui.node.RootForTest $r4;
        java.lang.Object $r5;
        java.util.ArrayList $r6;
        java.util.List $r7;
        long $l0;
        androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2 $r8;
        kotlin.jvm.functions.Function0 $r9, $r12;
        kotlin.Lazy $r10, $r13;
        androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2 $r11;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 := @parameter0: androidx.compose.ui.test.TestContext;

        r2 := @parameter1: androidx.compose.ui.platform.ViewRootForTest;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testContext");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "root");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "sendEvent");

        $r4 = (androidx.compose.ui.node.RootForTest) r2;

        specialinvoke r0.<androidx.compose.ui.test.InputDispatcher: void <init>(androidx.compose.ui.test.TestContext,androidx.compose.ui.node.RootForTest)>(r1, $r4);

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.test.TestContext testContext> = r1;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.platform.ViewRootForTest root> = r2;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.jvm.functions.Function1 sendEvent> = r3;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object batchLock> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = (java.util.List) $r6;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.util.List batchedEvents> = $r7;

        $l0 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentTime()>();

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: long currentClockTime> = $l0;

        $r8 = new androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2;

        specialinvoke $r8.<androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2: void <init>(androidx.compose.ui.test.AndroidInputDispatcher)>(r0);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r9);

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.Lazy verticalScrollFactor$delegate> = $r10;

        $r11 = new androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2;

        specialinvoke $r11.<androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2: void <init>(androidx.compose.ui.test.AndroidInputDispatcher)>(r0);

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.Lazy horizontalScrollFactor$delegate> = $r13;

        return;
    }

    private final float getVerticalScrollFactor()
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.Lazy verticalScrollFactor$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    private final float getHorizontalScrollFactor()
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.Lazy horizontalScrollFactor$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    protected void enqueueDown(androidx.compose.ui.test.PartialGesture, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.PartialGesture $r1;
        int i0, $i1, $i2;
        java.util.Map $r2, $r3;
        java.util.Set $r4;
        java.lang.Iterable $r5;
        java.util.List $r6;
        java.lang.Integer $r7;
        byte $b3;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.PartialGesture;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.PartialGesture: java.util.Map getLastPositions()>();

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i1 != 1 goto label1;

        $b3 = 0;

        goto label2;

     label1:
        $b3 = 5;

     label2:
        $r3 = virtualinvoke $r1.<androidx.compose.ui.test.PartialGesture: java.util.Map getLastPositions()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = (java.lang.Iterable) $r4;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sorted(java.lang.Iterable)>($r5);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i2 = interfaceinvoke $r6.<java.util.List: int indexOf(java.lang.Object)>($r7);

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueTouchEvent(androidx.compose.ui.test.PartialGesture,int,int)>($r1, $b3, $i2);

        return;
    }

    protected void enqueueMove(androidx.compose.ui.test.PartialGesture)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.PartialGesture $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.PartialGesture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueTouchEvent(androidx.compose.ui.test.PartialGesture,int,int)>($r1, 2, 0);

        return;
    }

    protected void enqueueMoves(androidx.compose.ui.test.PartialGesture, java.util.List, java.util.List)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0, r40, r45;
        androidx.compose.ui.test.PartialGesture $r1;
        java.util.List r2, r3, r4, r6, $r15, $r17, $r24, $r26, $r39, r43, r44, r48;
        java.lang.Object r5, $r19, $r21, $r23, $r27, $r29;
        long l0, $l2, $l3, $l5, $l6, l10, l16;
        java.util.Map $r7;
        java.util.Set $r8;
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueMoves$$inlined$sortedBy$1 $r9;
        java.util.Comparator $r10;
        java.util.ArrayList $r11, $r12, $r18, r42, r47;
        int $i1, $i4, $i7, $i11, i12, $i13, $i17, i18;
        boolean $z1;
        java.util.Collection $r13, $r20, r36, r38;
        java.lang.Long $r14, $r33;
        java.lang.Iterable $r16, $r25, $r34, $r35;
        java.util.Map$Entry $r22, $r28;
        java.lang.Number $r30, $r32;
        java.lang.Integer $r31;
        java.util.Iterator $r37;
        byte b8, b9, b14, b15;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.PartialGesture;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "relativeHistoricalTimes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "historicalCoordinates");

        $r7 = virtualinvoke $r1.<androidx.compose.ui.test.PartialGesture: java.util.Map getLastPositions()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r34 = (java.lang.Iterable) $r8;

        $r9 = new androidx.compose.ui.test.AndroidInputDispatcher$enqueueMoves$$inlined$sortedBy$1;

        specialinvoke $r9.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMoves$$inlined$sortedBy$1: void <init>()>();

        $r10 = (java.util.Comparator) $r9;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r34, $r10);

        $r35 = (java.lang.Iterable) r2;

        $r11 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r35, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i1);

        r36 = (java.util.Collection) $r11;

        $r37 = interfaceinvoke $r35.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        r5 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (java.lang.Number) r5;

        l0 = virtualinvoke $r32.<java.lang.Number: long longValue()>();

        r38 = r36;

        $l5 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentTime()>();

        $l6 = $l5 + l0;

        $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        interfaceinvoke r38.<java.util.Collection: boolean add(java.lang.Object)>($r33);

        goto label1;

     label2:
        $r39 = (java.util.List) r36;

        $l2 = virtualinvoke $r1.<androidx.compose.ui.test.PartialGesture: long getDownTime()>();

        $i7 = interfaceinvoke r4.<java.util.List: int size()>();

        b8 = 0;

        b9 = 2;

        l10 = $l2;

        r40 = r0;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i7);

        $i11 = 0;

     label3:
        if $i11 >= $i7 goto label4;

        i12 = $i11;

        r42 = $r12;

        $r27 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i12);

        $r28 = (java.util.Map$Entry) $r27;

        $r29 = interfaceinvoke $r28.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = (java.lang.Number) $r29;

        $i4 = virtualinvoke $r30.<java.lang.Number: int intValue()>();

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r42.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

        $i11 = $i11 + 1;

        goto label3;

     label4:
        r43 = (java.util.List) $r12;

        $r13 = (java.util.Collection) $r39;

        $l3 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentTime()>();

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r14);

        $r16 = (java.lang.Iterable) $r15;

        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r13, $r16);

        $i13 = interfaceinvoke r4.<java.util.List: int size()>();

        r6 = $r17;

        r44 = r43;

        b14 = b8;

        b15 = b9;

        l16 = l10;

        r45 = r40;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i13);

        $i17 = 0;

     label5:
        if $i17 >= $i13 goto label6;

        i18 = $i17;

        r47 = $r18;

        $r19 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i18);

        $r20 = (java.util.Collection) $r19;

        $r21 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i18);

        $r22 = (java.util.Map$Entry) $r21;

        $r23 = interfaceinvoke $r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r23);

        $r25 = (java.lang.Iterable) $r24;

        $r26 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r20, $r25);

        virtualinvoke r47.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        $i17 = $i17 + 1;

        goto label5;

     label6:
        r48 = (java.util.List) $r18;

        specialinvoke r45.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueTouchEvent(long,int,int,java.util.List,java.util.List,java.util.List)>(l16, b15, b14, r44, r6, r48);

        return;
    }

    protected void enqueueUp(androidx.compose.ui.test.PartialGesture, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.PartialGesture $r1;
        int i0, $i1, $i2;
        java.util.Map $r2, $r3;
        java.util.Set $r4;
        java.lang.Iterable $r5;
        java.util.List $r6;
        java.lang.Integer $r7;
        byte $b3;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.PartialGesture;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.PartialGesture: java.util.Map getLastPositions()>();

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i1 != 1 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 6;

     label2:
        $r3 = virtualinvoke $r1.<androidx.compose.ui.test.PartialGesture: java.util.Map getLastPositions()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = (java.lang.Iterable) $r4;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sorted(java.lang.Iterable)>($r5);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i2 = interfaceinvoke $r6.<java.util.List: int indexOf(java.lang.Object)>($r7);

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueTouchEvent(androidx.compose.ui.test.PartialGesture,int,int)>($r1, $b3, $i2);

        return;
    }

    protected void enqueueCancel(androidx.compose.ui.test.PartialGesture)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.PartialGesture $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.PartialGesture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueTouchEvent(androidx.compose.ui.test.PartialGesture,int,int)>($r1, 3, 0);

        return;
    }

    protected void enqueuePress(androidx.compose.ui.test.MouseInputState, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.MouseInputState $r1;
        int i0;
        boolean $z0, $z1;
        long $l1;
        byte $b2;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.MouseInputState;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $z0 = virtualinvoke $r1.<androidx.compose.ui.test.MouseInputState: boolean getHasOneButtonPressed()>();

        if $z0 == 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 2;

     label2:
        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, $b2, 0.0F, 0, 6, null);

        $l1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentMousePosition-F1C5BW0()>();

        $z1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: boolean isWithinRootBounds-k-4lQ0M(long)>($l1);

        if $z1 == 0 goto label3;

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, 11, 0.0F, 0, 6, null);

     label3:
        return;
    }

    protected void enqueueMove(androidx.compose.ui.test.MouseInputState)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.MouseInputState $r1;
        long $l0;
        boolean $z0, $z1, $z2;
        byte $b1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.MouseInputState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $l0 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentMousePosition-F1C5BW0()>();

        $z0 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: boolean isWithinRootBounds-k-4lQ0M(long)>($l0);

        if $z0 == 0 goto label3;

        $z2 = virtualinvoke $r1.<androidx.compose.ui.test.MouseInputState: boolean isEntered()>();

        if $z2 == 0 goto label1;

        $b1 = 7;

        goto label2;

     label1:
        $b1 = 2;

     label2:
        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, $b1, 0.0F, 0, 6, null);

        goto label4;

     label3:
        $z1 = virtualinvoke $r1.<androidx.compose.ui.test.MouseInputState: boolean getHasAnyButtonPressed()>();

        if $z1 == 0 goto label4;

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, 2, 0.0F, 0, 6, null);

     label4:
        return;
    }

    protected void enqueueRelease(androidx.compose.ui.test.MouseInputState, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.MouseInputState $r1;
        int i0;
        long $l1;
        boolean $z0, $z1;
        byte $b2;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.MouseInputState;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $l1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentMousePosition-F1C5BW0()>();

        $z0 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: boolean isWithinRootBounds-k-4lQ0M(long)>($l1);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, 12, 0.0F, 0, 6, null);

     label1:
        $z1 = virtualinvoke $r1.<androidx.compose.ui.test.MouseInputState: boolean getHasNoButtonsPressed()>();

        if $z1 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 2;

     label3:
        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, $b2, 0.0F, 0, 6, null);

        return;
    }

    protected void enqueueEnter(androidx.compose.ui.test.MouseInputState)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.MouseInputState $r1;
        long $l0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.MouseInputState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $l0 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentMousePosition-F1C5BW0()>();

        $z0 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: boolean isWithinRootBounds-k-4lQ0M(long)>($l0);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, 9, 0.0F, 0, 6, null);

     label1:
        return;
    }

    protected void enqueueExit(androidx.compose.ui.test.MouseInputState)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.MouseInputState $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.MouseInputState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, 10, 0.0F, 0, 6, null);

        return;
    }

    protected void enqueueCancel(androidx.compose.ui.test.MouseInputState)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.MouseInputState $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.MouseInputState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher,androidx.compose.ui.test.MouseInputState,int,float,int,int,java.lang.Object)>(r0, $r1, 3, 0.0F, 0, 6, null);

        return;
    }

    protected void enqueueScroll-0Rp_h_E(androidx.compose.ui.test.MouseInputState, float, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.MouseInputState $r1;
        float f0, $f1, $f4;
        int i0, i1, $i2, $i3, $i4;
        androidx.compose.ui.test.ScrollWheel$Companion $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        byte $b6;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.MouseInputState;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$enqueueScroll");

        $r2 = <androidx.compose.ui.test.ScrollWheel: androidx.compose.ui.test.ScrollWheel$Companion Companion>;

        $i2 = virtualinvoke $r2.<androidx.compose.ui.test.ScrollWheel$Companion: int getVertical-LTdd5XU()>();

        $z0 = staticinvoke <androidx.compose.ui.test.ScrollWheel: boolean equals-impl0(int,int)>(i0, $i2);

        if $z0 == 0 goto label1;

        $f1 = neg f0;

        $f4 = $f1;

        goto label2;

     label1:
        $f4 = f0;

     label2:
        i1 = i0;

        $r3 = <androidx.compose.ui.test.ScrollWheel: androidx.compose.ui.test.ScrollWheel$Companion Companion>;

        $i3 = virtualinvoke $r3.<androidx.compose.ui.test.ScrollWheel$Companion: int getHorizontal-LTdd5XU()>();

        $z1 = staticinvoke <androidx.compose.ui.test.ScrollWheel: boolean equals-impl0(int,int)>(i1, $i3);

        if $z1 == 0 goto label3;

        $b6 = 10;

        goto label5;

     label3:
        $r4 = <androidx.compose.ui.test.ScrollWheel: androidx.compose.ui.test.ScrollWheel$Companion Companion>;

        $i4 = virtualinvoke $r4.<androidx.compose.ui.test.ScrollWheel$Companion: int getVertical-LTdd5XU()>();

        $z2 = staticinvoke <androidx.compose.ui.test.ScrollWheel: boolean equals-impl0(int,int)>(i1, $i4);

        if $z2 == 0 goto label4;

        $b6 = 9;

        goto label5;

     label4:
        $b6 = -1;

     label5:
        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent(androidx.compose.ui.test.MouseInputState,int,float,int)>($r1, 8, $f4, $b6);

        return;
    }

    public final int constructMetaState(androidx.compose.ui.test.KeyInputState)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.KeyInputState $r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21, $i22, $i24, $i25, $i27, $i28, $i31, $i32, $i33;
        androidx.compose.ui.input.key.Key$Companion $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        long $l2, $l5, $l8, $l11, $l14, $l17, $l20, $l23, $l26;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.KeyInputState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $z0 = virtualinvoke $r1.<androidx.compose.ui.test.KeyInputState: boolean getCapsLockOn()>();

        if $z0 == 0 goto label1;

        $i31 = 1048576;

        goto label2;

     label1:
        $i31 = 0;

     label2:
        $z1 = virtualinvoke $r1.<androidx.compose.ui.test.KeyInputState: boolean getNumLockOn()>();

        if $z1 == 0 goto label3;

        $i32 = 2097152;

        goto label4;

     label3:
        $i32 = 0;

     label4:
        $i0 = $i31 | $i32;

        $z2 = virtualinvoke $r1.<androidx.compose.ui.test.KeyInputState: boolean getScrollLockOn()>();

        if $z2 == 0 goto label5;

        $i33 = 4194304;

        goto label6;

     label5:
        $i33 = 0;

     label6:
        $i1 = $i0 | $i33;

        $r2 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l2 = virtualinvoke $r2.<androidx.compose.ui.input.key.Key$Companion: long getFunction-EK5gGoQ()>();

        $i3 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l2, 8);

        $i4 = $i1 | $i3;

        $r3 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l5 = virtualinvoke $r3.<androidx.compose.ui.input.key.Key$Companion: long getCtrlLeft-EK5gGoQ()>();

        $i6 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l5, 12288);

        $i7 = $i4 | $i6;

        $r4 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l8 = virtualinvoke $r4.<androidx.compose.ui.input.key.Key$Companion: long getCtrlRight-EK5gGoQ()>();

        $i9 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l8, 20480);

        $i10 = $i7 | $i9;

        $r5 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l11 = virtualinvoke $r5.<androidx.compose.ui.input.key.Key$Companion: long getAltLeft-EK5gGoQ()>();

        $i12 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l11, 18);

        $i13 = $i10 | $i12;

        $r6 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l14 = virtualinvoke $r6.<androidx.compose.ui.input.key.Key$Companion: long getAltRight-EK5gGoQ()>();

        $i15 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l14, 34);

        $i16 = $i13 | $i15;

        $r7 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l17 = virtualinvoke $r7.<androidx.compose.ui.input.key.Key$Companion: long getMetaLeft-EK5gGoQ()>();

        $i18 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l17, 196608);

        $i19 = $i16 | $i18;

        $r8 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l20 = virtualinvoke $r8.<androidx.compose.ui.input.key.Key$Companion: long getMetaRight-EK5gGoQ()>();

        $i21 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l20, 327680);

        $i22 = $i19 | $i21;

        $r9 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l23 = virtualinvoke $r9.<androidx.compose.ui.input.key.Key$Companion: long getShiftLeft-EK5gGoQ()>();

        $i24 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l23, 65);

        $i25 = $i22 | $i24;

        $r10 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l26 = virtualinvoke $r10.<androidx.compose.ui.input.key.Key$Companion: long getShiftRight-EK5gGoQ()>();

        $i27 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState$genState(androidx.compose.ui.test.KeyInputState,long,int)>($r1, $l26, 129);

        $i28 = $i25 | $i27;

        return $i28;
    }

    protected void enqueueDown-kpSHnEs(androidx.compose.ui.test.KeyInputState, long)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.KeyInputState $r1;
        long l0;
        int $i1, $i2;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$enqueueDown");

        $i1 = staticinvoke <androidx.compose.ui.input.key.Key_androidKt: int getNativeKeyCode-YVgTNJs(long)>(l0);

        $i2 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState(androidx.compose.ui.test.KeyInputState)>($r1);

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueKeyEvent(androidx.compose.ui.test.KeyInputState,int,int,int)>($r1, 0, $i1, $i2);

        return;
    }

    protected void enqueueUp-kpSHnEs(androidx.compose.ui.test.KeyInputState, long)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.KeyInputState $r1;
        long l0;
        int $i1, $i2;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$enqueueUp");

        $i1 = staticinvoke <androidx.compose.ui.input.key.Key_androidKt: int getNativeKeyCode-YVgTNJs(long)>(l0);

        $i2 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState(androidx.compose.ui.test.KeyInputState)>($r1);

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueKeyEvent(androidx.compose.ui.test.KeyInputState,int,int,int)>($r1, 1, $i1, $i2);

        return;
    }

    private final void enqueueTouchEvent(androidx.compose.ui.test.PartialGesture, int, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0, r22, r27;
        androidx.compose.ui.test.PartialGesture $r1;
        int i0, i1, $i4, $i5, i6, i7, i9, i10, i11, $i12, i13, i14, i16, i17, i18;
        java.util.List r2, r3, $r10, $r15, r25, r26, r30;
        java.util.Map $r4;
        java.util.Set $r5;
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$$inlined$sortedBy$1 $r6;
        java.util.Comparator $r7;
        long $l2, $l3, l8, l15;
        java.util.ArrayList $r8, $r11, r24, r29;
        java.lang.Long $r9;
        java.lang.Object $r12, $r14, $r16, $r18;
        java.util.Map$Entry $r13, $r17;
        java.lang.Number $r19;
        java.lang.Integer $r20;
        java.lang.Iterable $r21;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.PartialGesture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = virtualinvoke $r1.<androidx.compose.ui.test.PartialGesture: java.util.Map getLastPositions()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r21 = (java.lang.Iterable) $r5;

        $r6 = new androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$$inlined$sortedBy$1;

        specialinvoke $r6.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$$inlined$sortedBy$1: void <init>()>();

        $r7 = (java.util.Comparator) $r6;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r21, $r7);

        $l2 = virtualinvoke $r1.<androidx.compose.ui.test.PartialGesture: long getDownTime()>();

        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        i6 = i1;

        i7 = i0;

        l8 = $l2;

        r22 = r0;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i5);

        i9 = 0;

     label1:
        if i9 >= $i5 goto label2;

        i10 = i9;

        i11 = i10;

        r24 = $r8;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i11);

        $r17 = (java.util.Map$Entry) $r16;

        $r18 = interfaceinvoke $r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.Number) $r18;

        $i4 = virtualinvoke $r19.<java.lang.Number: int intValue()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        i9 = i9 + 1;

        goto label1;

     label2:
        r25 = (java.util.List) $r8;

        $l3 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentTime()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r9);

        $i12 = interfaceinvoke r2.<java.util.List: int size()>();

        r3 = $r10;

        r26 = r25;

        i13 = i6;

        i14 = i7;

        l15 = l8;

        r27 = r22;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i12);

        i16 = 0;

     label3:
        if i16 >= $i12 goto label4;

        i17 = i16;

        i18 = i17;

        r29 = $r11;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i18);

        $r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke $r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r14);

        virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        i16 = i16 + 1;

        goto label3;

     label4:
        r30 = (java.util.List) $r11;

        specialinvoke r27.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueTouchEvent(long,int,int,java.util.List,java.util.List,java.util.List)>(l15, i14, i13, r26, r3, r30);

        return;
    }

    private final void enqueueTouchEvent(long, int, int, java.util.List, java.util.List, java.util.List)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0, $r68;
        long l0, l4, l5, $l12, $l15, $l16, $l17, $l18, $l19, l33, l34, l41, l42;
        int i1, i2, i3, i6, i7, $i8, $i9, $i10, $i11, $i13, $i14, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, $i29, $i30, i31, i32, i35, i36, $i37, $i38, i39, i40, i43, i44, i45, i46, $i47, $i48;
        java.util.List r1, r2, r3, $r18, $r23, $r27, $r32, $r36, $r43, $r51;
        kotlin.Unit r4, r10, r75;
        android.view.MotionEvent$PointerCoords[] r5, r9, $r76, r80;
        android.view.MotionEvent r6, r11, $r81;
        android.view.MotionEvent$PointerCoords r7, $r21, $r30, r78;
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1 $r12;
        kotlin.jvm.functions.Function0 $r13;
        androidx.compose.ui.platform.ViewRootForTest $r14;
        android.view.View $r15;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        java.lang.Object $r16, $r19, $r22, $r24, $r26, $r28, $r31, $r33, $r35, $r37, $r40, $r42, $r50, $r67;
        java.lang.Number $r17, $r20, $r41;
        androidx.compose.ui.geometry.Offset $r25, $r29, $r34, $r38;
        android.view.MotionEvent$PointerProperties $r39, r72;
        java.lang.StringBuilder $r44, $r45, $r46, $r47, $r48, $r49, $r52, $r53, $r56, $r57, $r58, $r59, $r60, $r61;
        java.lang.IllegalStateException $r54, $r62;
        java.lang.String $r55, $r63, $r65, $r66;
        java.lang.Throwable $r64, r83;
        boolean $z1, $z4, z6;
        int[] $r69, r70;
        android.view.MotionEvent$PointerProperties[] $r71, r74, r77;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.util.List;

        r2 := @parameter4: java.util.List;

        r3 := @parameter5: java.util.List;

        $i8 = interfaceinvoke r3.<java.util.List: int size()>();

        $i9 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i8 != $i9 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        if $z1 != 0 goto label03;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Coordinates size should equal pointerIds size (was: ");

        $i25 = interfaceinvoke r3.<java.util.List: int size()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i26 = interfaceinvoke r1.<java.util.List: int size()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r65 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        $r62 = new java.lang.IllegalStateException;

        $r63 = virtualinvoke $r65.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r62.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r63);

        throw $r62;

     label03:
        i3 = interfaceinvoke r1.<java.util.List: int size()>();

        $i27 = 0;

     label04:
        if $i27 >= i3 goto label08;

        i28 = $i27;

        $i21 = interfaceinvoke r2.<java.util.List: int size()>();

        $r42 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i28);

        $r43 = (java.util.List) $r42;

        $i22 = interfaceinvoke $r43.<java.util.List: int size()>();

        if $i21 != $i22 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        if $z4 != 0 goto label07;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Historical eventTimes size should equal coordinates[");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] size (was: ");

        $i23 = interfaceinvoke r2.<java.util.List: int size()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r50 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i28);

        $r51 = (java.util.List) $r50;

        $i24 = interfaceinvoke $r51.<java.util.List: int size()>();

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r66 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = new java.lang.IllegalStateException;

        $r55 = virtualinvoke $r66.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r55);

        throw $r54;

     label07:
        $i27 = $i27 + 1;

        goto label04;

     label08:
        $r67 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object batchLock>;

        entermonitor $r67;

     label09:
        z6 = 0;

        $r12 = new androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1;

        specialinvoke $r12.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: void <init>(long,int,int,java.util.List,java.util.List,java.util.List)>(l0, i1, i2, r1, r2, r3);

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void ensureNotDisposed(kotlin.jvm.functions.Function0)>($r13);

        $r68 = (androidx.compose.ui.test.AndroidInputDispatcher) r0;

        $r69 = newarray (int)[2];

        $r69[0] = 0;

        $r69[1] = 0;

        r70 = $r69;

        $r14 = $r68.<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.platform.ViewRootForTest root>;

        $r15 = interfaceinvoke $r14.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        virtualinvoke $r15.<android.view.View: void getLocationOnScreen(int[])>(r70);

        $i10 = r70[0];

        $f1 = (float) $i10;

        $i11 = r70[1];

        $f0 = (float) $i11;

        l4 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f1, $f0);

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (java.lang.Number) $r16;

        $l12 = virtualinvoke $r17.<java.lang.Number: long longValue()>();

        $i13 = i2 << 8;

        $i14 = interfaceinvoke r3.<java.util.List: int size()>();

        $i29 = 0;

        $i30 = interfaceinvoke r3.<java.util.List: int size()>();

        $r71 = newarray (android.view.MotionEvent$PointerProperties)[$i30];

        i31 = $i14;

        i32 = i1 + $i13;

        l33 = $l12;

        l34 = l0;

     label10:
        if $i29 >= $i30 goto label11;

        i35 = $i29;

        $r39 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r39.<android.view.MotionEvent$PointerProperties: void <init>()>();

        r72 = $r39;

        i36 = i35;

        r74 = $r71;

        $r40 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i35);

        $r41 = (java.lang.Number) $r40;

        $i20 = virtualinvoke $r41.<java.lang.Number: int intValue()>();

        r72.<android.view.MotionEvent$PointerProperties: int id> = $i20;

        r72.<android.view.MotionEvent$PointerProperties: int toolType> = 1;

        r75 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r74[i36] = r72;

        $i29 = $i29 + 1;

        goto label10;

     label11:
        $i37 = 0;

        $i38 = interfaceinvoke r3.<java.util.List: int size()>();

        $r76 = newarray (android.view.MotionEvent$PointerCoords)[$i38];

        r77 = $r71;

        i39 = i31;

        i40 = i32;

        l41 = l33;

        l42 = l34;

     label12:
        if $i37 >= $i38 goto label13;

        i43 = $i37;

        $r30 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r30.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r78 = $r30;

        i44 = i43;

        r80 = $r76;

        $f12 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l4);

        $r31 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i43);

        $r32 = (java.util.List) $r31;

        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(0);

        $r34 = (androidx.compose.ui.geometry.Offset) $r33;

        $l18 = virtualinvoke $r34.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f13 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l18);

        $f14 = $f12 + $f13;

        r78.<android.view.MotionEvent$PointerCoords: float x> = $f14;

        $f15 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l4);

        $r35 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i43);

        $r36 = (java.util.List) $r35;

        $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(0);

        $r38 = (androidx.compose.ui.geometry.Offset) $r37;

        $l19 = virtualinvoke $r38.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f16 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l19);

        $f17 = $f15 + $f16;

        r78.<android.view.MotionEvent$PointerCoords: float y> = $f17;

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r80[i44] = r78;

        $i37 = $i37 + 1;

        goto label12;

     label13:
        $r81 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l42, l41, i40, i39, r77, $r76, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        i45 = 1;

        i46 = interfaceinvoke r2.<java.util.List: int size()>();

     label14:
        if i45 >= i46 goto label17;

        $r19 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i45);

        $r20 = (java.lang.Number) $r19;

        $l15 = virtualinvoke $r20.<java.lang.Number: long longValue()>();

        $i47 = 0;

        $i48 = interfaceinvoke r3.<java.util.List: int size()>();

        r5 = newarray (android.view.MotionEvent$PointerCoords)[$i48];

        l5 = $l15;

        r6 = $r81;

     label15:
        if $i47 >= $i48 goto label16;

        i6 = $i47;

        $r21 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r21.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r7 = $r21;

        i7 = i6;

        r9 = r5;

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l4);

        $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i6);

        $r23 = (java.util.List) $r22;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i45);

        $r25 = (androidx.compose.ui.geometry.Offset) $r24;

        $l16 = virtualinvoke $r25.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f7 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l16);

        $f8 = $f6 + $f7;

        r7.<android.view.MotionEvent$PointerCoords: float x> = $f8;

        $f9 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l4);

        $r26 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i6);

        $r27 = (java.util.List) $r26;

        $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(i45);

        $r29 = (androidx.compose.ui.geometry.Offset) $r28;

        $l17 = virtualinvoke $r29.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f10 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l17);

        $f11 = $f9 + $f10;

        r7.<android.view.MotionEvent$PointerCoords: float y> = $f11;

        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r9[i7] = r7;

        $i47 = $i47 + 1;

        goto label15;

     label16:
        virtualinvoke r6.<android.view.MotionEvent: void addBatch(long,android.view.MotionEvent$PointerCoords[],int)>(l5, r5, 0);

        i45 = i45 + 1;

        goto label14;

     label17:
        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l4);

        $f3 = neg $f2;

        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l4);

        $f5 = neg $f4;

        virtualinvoke $r81.<android.view.MotionEvent: void offsetLocation(float,float)>($f3, $f5);

        r11 = $r81;

        $r18 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.util.List batchedEvents>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r11, "motionEvent");

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r11);

     label18:
        exitmonitor $r67;

        goto label21;

     label19:
        $r64 := @caughtexception;

        r83 = $r64;

     label20:
        exitmonitor $r67;

        throw r83;

     label21:
        return;

        catch java.lang.Throwable from label09 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    private final void enqueueMouseEvent(androidx.compose.ui.test.MouseInputState, int, float, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0, r5;
        androidx.compose.ui.test.MouseInputState $r1;
        int i0, i1, i3, i4, i7, i9, i10, $i14, i15;
        float f0;
        java.lang.Iterable $r2;
        byte b2;
        java.util.Iterator r3;
        java.lang.Object r4;
        long l5, l6, l8, $l11, $l12, $l13;
        androidx.compose.ui.test.KeyInputState $r6;
        java.util.Set $r7;
        boolean $z2;
        java.lang.Number $r8;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.MouseInputState;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        i1 := @parameter3: int;

        $l11 = virtualinvoke $r1.<androidx.compose.ui.test.MouseInputState: long getDownTime()>();

        $l12 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentTime()>();

        $l13 = virtualinvoke $r1.<androidx.compose.ui.test.MouseInputState: long getLastPosition-F1C5BW0()>();

        $r6 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.test.KeyInputState getKeyInputState()>();

        $i14 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: int constructMetaState(androidx.compose.ui.test.KeyInputState)>($r6);

        $r7 = virtualinvoke $r1.<androidx.compose.ui.test.MouseInputState: java.util.Set getPressedButtons()>();

        $r2 = (java.lang.Iterable) $r7;

        b2 = 0;

        i9 = $i14;

        l8 = $l13;

        i7 = i0;

        l6 = $l12;

        l5 = $l11;

        r5 = r0;

        i15 = b2;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Number) r4;

        i3 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        i4 = i15;

        i15 = i4 | i3;

        goto label1;

     label2:
        i10 = i15;

        specialinvoke r5.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent-gV6Hb-E(long,long,int,long,int,int,int,float)>(l5, l6, i7, l8, i9, i10, i1, f0);

        return;
    }

    static void enqueueMouseEvent$default(androidx.compose.ui.test.AndroidInputDispatcher, androidx.compose.ui.test.MouseInputState, int, float, int, int, java.lang.Object)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.MouseInputState r1;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r2;
        float f0;

        r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 := @parameter1: androidx.compose.ui.test.MouseInputState;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        i4 := @parameter4: int;

        i1 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        f0 = 0.0F;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        i4 = -1;

     label2:
        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent(androidx.compose.ui.test.MouseInputState,int,float,int)>(r1, i0, f0, i4);

        return;
    }

    private final void enqueueMouseEvent-gV6Hb-E(long, long, int, long, int, int, int, float)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0, $r12;
        long l0, l1, l3, l7, l13, l14, l18, l19;
        int i2, i4, i5, i6, $i8, $i9, i12, i17;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        java.lang.Object r1;
        kotlin.Unit r2, r20;
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1 $r3;
        kotlin.jvm.functions.Function0 $r4;
        androidx.compose.ui.platform.ViewRootForTest $r5;
        android.view.View $r6;
        android.view.MotionEvent$PointerProperties $r7;
        java.util.List $r8, r19, r26, r28;
        android.view.MotionEvent$PointerCoords $r9;
        java.lang.Throwable $r11;
        int[] $r13, r14;
        android.view.MotionEvent$PointerProperties[] $r15, r18, r25;
        byte b10, b11, b15, b16;
        boolean z2, z3;
        android.view.MotionEvent$PointerCoords[] $r21, r24;
        android.view.MotionEvent $r27;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        f0 := @parameter7: float;

        r1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object batchLock>;

        entermonitor r1;

     label1:
        $r3 = new androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1;

        specialinvoke $r3.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: void <init>(long,long,int,long,int,int,int,float)>(l0, l1, i2, l3, i4, i5, i6, f0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void ensureNotDisposed(kotlin.jvm.functions.Function0)>($r4);

        $r12 = (androidx.compose.ui.test.AndroidInputDispatcher) r0;

        $r13 = newarray (int)[2];

        $r13[0] = 0;

        $r13[1] = 0;

        r14 = $r13;

        $r5 = $r12.<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.platform.ViewRootForTest root>;

        $r6 = interfaceinvoke $r5.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        virtualinvoke $r6.<android.view.View: void getLocationOnScreen(int[])>(r14);

        $i8 = r14[0];

        $f2 = (float) $i8;

        $i9 = r14[1];

        $f1 = (float) $i9;

        l7 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f2, $f1);

        $r8 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.util.List batchedEvents>;

        $r15 = newarray (android.view.MotionEvent$PointerProperties)[1];

        $r7 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r7.<android.view.MotionEvent$PointerProperties: void <init>()>();

        b10 = 0;

        r18 = $r15;

        b11 = 1;

        i12 = i2;

        l13 = l1;

        l14 = l0;

        r19 = $r8;

        z2 = 0;

        $r7.<android.view.MotionEvent$PointerProperties: int id> = 0;

        $r7.<android.view.MotionEvent$PointerProperties: int toolType> = 3;

        r20 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r18[b10] = $r7;

        $r21 = newarray (android.view.MotionEvent$PointerCoords)[1];

        $r9 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r9.<android.view.MotionEvent$PointerCoords: void <init>()>();

        b15 = 0;

        r24 = $r21;

        r25 = $r15;

        b16 = b11;

        i17 = i12;

        l18 = l13;

        l19 = l14;

        r26 = r19;

        z3 = 0;

        $f3 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l7);

        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l3);

        $f5 = $f3 + $f4;

        $r9.<android.view.MotionEvent$PointerCoords: float x> = $f5;

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l7);

        $f7 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l3);

        $f8 = $f6 + $f7;

        $r9.<android.view.MotionEvent$PointerCoords: float y> = $f8;

        if i6 == -1 goto label2;

        virtualinvoke $r9.<android.view.MotionEvent$PointerCoords: void setAxisValue(int,float)>(i6, f0);

     label2:
        r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r24[b15] = $r9;

        $r27 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l19, l18, i17, b16, r25, $r21, i4, i5, 1.0F, 1.0F, 0, 0, 8194, 0);

        r28 = r26;

        $f9 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l7);

        $f10 = neg $f9;

        $f11 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l7);

        $f12 = neg $f11;

        virtualinvoke $r27.<android.view.MotionEvent: void offsetLocation(float,float)>($f10, $f12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "obtain(\n                \u2026reen.y)\n                }");

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r27);

     label3:
        exitmonitor r1;

        goto label6;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

        throw $r11;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static void enqueueMouseEvent-gV6Hb-E$default(androidx.compose.ui.test.AndroidInputDispatcher, long, long, int, long, int, int, int, float, int, java.lang.Object)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        long l0, l1, l3;
        int i2, i4, i5, i6, $i7, $i8, i9;
        java.lang.Object r1;
        float f0;

        r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i9 := @parameter7: int;

        f0 := @parameter8: float;

        i6 := @parameter9: int;

        r1 := @parameter10: java.lang.Object;

        $i7 = i6 & 64;

        if $i7 == 0 goto label1;

        i9 = -1;

     label1:
        $i8 = i6 & 128;

        if $i8 == 0 goto label2;

        f0 = 0.0F;

     label2:
        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueMouseEvent-gV6Hb-E(long,long,int,long,int,int,int,float)>(l0, l1, i2, l3, i4, i5, i9, f0);

        return;
    }

    protected void enqueueRotaryScrollHorizontally(androidx.compose.ui.test.RotaryInputState, float)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.RotaryInputState $r1;
        float f0, $f1, $f2, $f3;
        long $l0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.RotaryInputState;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $l0 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentTime()>();

        $f1 = neg f0;

        $f2 = specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: float getHorizontalScrollFactor()>();

        $f3 = $f1 / $f2;

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueRotaryScrollEvent(long,float)>($l0, $f3);

        return;
    }

    protected void enqueueRotaryScrollVertically(androidx.compose.ui.test.RotaryInputState, float)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.RotaryInputState $r1;
        float f0, $f1, $f2, $f3;
        long $l0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.RotaryInputState;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $l0 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentTime()>();

        $f1 = neg f0;

        $f2 = specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: float getVerticalScrollFactor()>();

        $f3 = $f1 / $f2;

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueRotaryScrollEvent(long,float)>($l0, $f3);

        return;
    }

    private final void enqueueRotaryScrollEvent(long, float)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        long l0, l4, l5, l9, l10;
        float f0;
        java.lang.Object r1;
        kotlin.Unit r2, r15;
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1 $r3;
        kotlin.jvm.functions.Function0 $r4;
        android.view.MotionEvent$PointerProperties $r5, r11;
        java.util.List $r6, r14, r20;
        android.view.MotionEvent$PointerCoords $r7, r17;
        android.view.MotionEvent $r8;
        java.lang.Throwable $r9;
        android.view.MotionEvent$PointerProperties[] r10, r13, r19;
        byte b1, b2, b3, b6, b7, b8;
        android.view.MotionEvent$PointerCoords[] r16, r18;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        r1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object batchLock>;

        entermonitor r1;

     label1:
        $r3 = new androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1;

        specialinvoke $r3.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1: void <init>(long,float)>(l0, f0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void ensureNotDisposed(kotlin.jvm.functions.Function0)>($r4);

        $r6 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.util.List batchedEvents>;

        r10 = newarray (android.view.MotionEvent$PointerProperties)[1];

        $r5 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r5.<android.view.MotionEvent$PointerProperties: void <init>()>();

        r11 = $r5;

        b1 = 0;

        r13 = r10;

        b2 = 1;

        b3 = 8;

        l4 = l0;

        l5 = 0L;

        r14 = $r6;

        r11.<android.view.MotionEvent$PointerProperties: int id> = 0;

        r11.<android.view.MotionEvent$PointerProperties: int toolType> = 0;

        r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r13[b1] = r11;

        r16 = newarray (android.view.MotionEvent$PointerCoords)[1];

        $r7 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r7.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r17 = $r7;

        b6 = 0;

        r18 = r16;

        r19 = r10;

        b7 = b2;

        b8 = b3;

        l9 = l4;

        l10 = l5;

        r20 = r14;

        virtualinvoke r17.<android.view.MotionEvent$PointerCoords: void setAxisValue(int,float)>(26, f0);

        r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r18[b6] = r17;

        $r8 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l10, l9, b8, b7, r19, r16, 0, 0, 1.0F, 1.0F, 0, 0, 4194304, 0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "obtain(\n                \u2026 = */ 0\n                )");

        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        exitmonitor r1;

        goto label5;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r1;

        throw $r9;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final void enqueueKeyEvent(androidx.compose.ui.test.KeyInputState, int, int, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.KeyInputState $r1;
        int i0, i1, i2, $i5;
        long $l3, $l4;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 := @parameter0: androidx.compose.ui.test.KeyInputState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $l3 = virtualinvoke $r1.<androidx.compose.ui.test.KeyInputState: long getDownTime()>();

        $l4 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: long getCurrentTime()>();

        $i5 = virtualinvoke $r1.<androidx.compose.ui.test.KeyInputState: int getRepeatCount()>();

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void enqueueKeyEvent(long,long,int,int,int,int)>($l3, $l4, i0, i1, $i5, i2);

        return;
    }

    private final void enqueueKeyEvent(long, long, int, int, int, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        long l0, l1;
        int i2, i3, i4, i5;
        java.lang.Object r1;
        android.view.KeyEvent r2, $r5;
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1 $r3;
        kotlin.jvm.functions.Function0 $r4;
        java.util.List $r6;
        java.lang.Throwable $r7;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object batchLock>;

        entermonitor r1;

     label1:
        $r3 = new androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1;

        specialinvoke $r3.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: void <init>(long,long,int,int,int,int)>(l0, l1, i2, i3, i4, i5);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void ensureNotDisposed(kotlin.jvm.functions.Function0)>($r4);

        $r5 = new android.view.KeyEvent;

        specialinvoke $r5.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>(l0, l1, i2, i3, i4, i5, -1, 0);

        r2 = $r5;

        $r6 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.util.List batchedEvents>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        exitmonitor r1;

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void flush()
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        androidx.compose.ui.test.TestContext $r1;
        androidx.compose.ui.test.TestOwner $r2;
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1 $r3;
        kotlin.jvm.functions.Function0 $r4;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.test.TestContext testContext>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.TestContext: androidx.compose.ui.test.TestOwner getTestOwner$ui_test_release()>();

        $r3 = new androidx.compose.ui.test.AndroidInputDispatcher$flush$1;

        specialinvoke $r3.<androidx.compose.ui.test.AndroidInputDispatcher$flush$1: void <init>(androidx.compose.ui.test.AndroidInputDispatcher)>(r0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        interfaceinvoke $r2.<androidx.compose.ui.test.TestOwner: java.lang.Object runOnUiThread(kotlin.jvm.functions.Function0)>($r4);

        return;
    }

    private final void advanceClockTime(long)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        long l0;
        byte $b1;
        androidx.compose.ui.test.TestContext $r1;
        androidx.compose.ui.test.TestOwner $r2;
        androidx.compose.ui.test.MainTestClock $r3;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.test.TestContext testContext>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.TestContext: androidx.compose.ui.test.TestOwner getTestOwner$ui_test_release()>();

        $r3 = interfaceinvoke $r2.<androidx.compose.ui.test.TestOwner: androidx.compose.ui.test.MainTestClock getMainClock()>();

        interfaceinvoke $r3.<androidx.compose.ui.test.MainTestClock: void advanceTimeBy(long,boolean)>(l0, 1);

     label1:
        return;
    }

    private final void ensureNotDisposed(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        kotlin.jvm.functions.Function0 r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r5, $r6;
        java.lang.Object $r3;
        java.lang.String $r4, $r8, $r9;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        $z0 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: boolean disposed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", AndroidInputDispatcher has already been disposed");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        return;
    }

    protected void onDispose()
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        java.lang.Object r1, r4;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        android.view.InputEvent r5;
        boolean $z2, $z3;
        java.util.List $r6;
        java.lang.Throwable $r7;
        kotlin.Unit $r8;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object batchLock>;

        entermonitor r1;

     label1:
        $z2 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: boolean disposed>;

        if $z2 != 0 goto label3;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher: boolean disposed> = 1;

        $r6 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.util.List batchedEvents>;

        $r2 = (java.lang.Iterable) $r6;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.view.InputEvent) r4;

        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void recycleEventIfPossible(android.view.InputEvent)>(r5);

        goto label2;

     label3:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        exitmonitor r1;

        goto label7;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final void sendAndRecycleEvent(android.view.InputEvent)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        android.view.InputEvent r1;
        java.lang.Throwable r2, $r5;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 := @parameter0: android.view.InputEvent;

     label1:
        $r3 = r0.<androidx.compose.ui.test.AndroidInputDispatcher: kotlin.jvm.functions.Function1 sendEvent>;

        interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

     label2:
        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void recycleEventIfPossible(android.view.InputEvent)>(r1);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        specialinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher: void recycleEventIfPossible(android.view.InputEvent)>(r1);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final void recycleEventIfPossible(android.view.InputEvent)
    {
        androidx.compose.ui.test.AndroidInputDispatcher r0;
        android.view.InputEvent r1;
        boolean $z0;
        android.view.MotionEvent $r2;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 := @parameter0: android.view.InputEvent;

        $z0 = r1 instanceof android.view.MotionEvent;

        if $z0 == 0 goto label1;

        $r2 = (android.view.MotionEvent) r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 == null goto label3;

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

        goto label3;

     label3:
        return;
    }

    private static final int constructMetaState$genState(androidx.compose.ui.test.KeyInputState, long, int)
    {
        androidx.compose.ui.test.KeyInputState $r0;
        long l0;
        int i1, $i2;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.KeyInputState: boolean isKeyDown-YVgTNJs(long)>(l0);

        if $z0 == 0 goto label1;

        $i2 = i1;

        goto label2;

     label1:
        $i2 = 0;

     label2:
        return $i2;
    }

    public static final java.lang.Object access$getBatchLock$p(androidx.compose.ui.test.AndroidInputDispatcher)
    {
        androidx.compose.ui.test.AndroidInputDispatcher $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 = $r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object batchLock>;

        return $r1;
    }

    public static final java.util.List access$getBatchedEvents$p(androidx.compose.ui.test.AndroidInputDispatcher)
    {
        androidx.compose.ui.test.AndroidInputDispatcher $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 = $r0.<androidx.compose.ui.test.AndroidInputDispatcher: java.util.List batchedEvents>;

        return $r1;
    }

    public static final void access$ensureNotDisposed(androidx.compose.ui.test.AndroidInputDispatcher, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidInputDispatcher $r0;
        kotlin.jvm.functions.Function0 r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        specialinvoke $r0.<androidx.compose.ui.test.AndroidInputDispatcher: void ensureNotDisposed(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public static final void access$advanceClockTime(androidx.compose.ui.test.AndroidInputDispatcher, long)
    {
        androidx.compose.ui.test.AndroidInputDispatcher $r0;
        long l0;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        l0 := @parameter1: long;

        specialinvoke $r0.<androidx.compose.ui.test.AndroidInputDispatcher: void advanceClockTime(long)>(l0);

        return;
    }

    public static final long access$getCurrentClockTime$p(androidx.compose.ui.test.AndroidInputDispatcher)
    {
        androidx.compose.ui.test.AndroidInputDispatcher $r0;
        long $l0;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        $l0 = $r0.<androidx.compose.ui.test.AndroidInputDispatcher: long currentClockTime>;

        return $l0;
    }

    public static final void access$setCurrentClockTime$p(androidx.compose.ui.test.AndroidInputDispatcher, long)
    {
        androidx.compose.ui.test.AndroidInputDispatcher $r0;
        long l0;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        l0 := @parameter1: long;

        $r0.<androidx.compose.ui.test.AndroidInputDispatcher: long currentClockTime> = l0;

        return;
    }

    public static final void access$sendAndRecycleEvent(androidx.compose.ui.test.AndroidInputDispatcher, android.view.InputEvent)
    {
        androidx.compose.ui.test.AndroidInputDispatcher $r0;
        android.view.InputEvent r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        r1 := @parameter1: android.view.InputEvent;

        specialinvoke $r0.<androidx.compose.ui.test.AndroidInputDispatcher: void sendAndRecycleEvent(android.view.InputEvent)>(r1);

        return;
    }

    public static final androidx.compose.ui.platform.ViewRootForTest access$getRoot$p(androidx.compose.ui.test.AndroidInputDispatcher)
    {
        androidx.compose.ui.test.AndroidInputDispatcher $r0;
        androidx.compose.ui.platform.ViewRootForTest $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        $r1 = $r0.<androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.platform.ViewRootForTest root>;

        return $r1;
    }

androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: long $downTime>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: long $eventTime>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $action>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $code>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $repeat>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $metaState>
    void <init>(long, long, int, int, int, int)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1 r0;
        long $l0, $l1;
        int $i2, $i3, $i4, $i5;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: long $downTime> = $l0;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: long $eventTime> = $l1;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $action> = $i2;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $code> = $i3;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $repeat> = $i4;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $metaState> = $i5;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.String invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1 r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        long $l0, $l1;
        int $i2, $i3, $i4, $i5;
        java.lang.String $r15;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t enqueue key event (downTime=");

        $l0 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: long $downTime>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", eventTime=");

        $l1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: long $eventTime>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", action=");

        $i2 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $action>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", code=");

        $i3 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $code>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", repeat=");

        $i4 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $repeat>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metaState=");

        $i5 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: int $metaState>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1 r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueKeyEvent$1$1: java.lang.String invoke()>();

        return $r1;
    }

androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $downTime>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $eventTime>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $action>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $coordinate>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $metaState>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $buttonState>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $axis>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: float $axisDelta>
    void <init>(long, long, int, long, int, int, int, float)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1 r0;
        long $l0, $l1, $l3;
        int $i2, $i4, $i5, $i6;
        float $f0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $l3 := @parameter3: long;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $i6 := @parameter6: int;

        $f0 := @parameter7: float;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $downTime> = $l0;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $eventTime> = $l1;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $action> = $i2;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $coordinate> = $l3;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $metaState> = $i4;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $buttonState> = $i5;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $axis> = $i6;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: float $axisDelta> = $f0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.String invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1 r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        long $l0, $l1, $l3;
        int $i2, $i4, $i5, $i6;
        java.lang.String $r9, $r20;
        float $f0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t enqueue mouse event (downTime=");

        $l0 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $downTime>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", eventTime=");

        $l1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $eventTime>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", action=");

        $i2 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $action>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", coordinate=");

        $l3 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: long $coordinate>;

        $r9 = staticinvoke <androidx.compose.ui.geometry.Offset: java.lang.String toString-impl(long)>($l3);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metaState=");

        $i4 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $metaState>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", buttonState=");

        $i5 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $buttonState>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", axis=");

        $i6 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: int $axis>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", axisDelta=");

        $f0 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: float $axisDelta>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1 r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1;

        $r1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueMouseEvent$2$1: java.lang.String invoke()>();

        return $r1;
    }

androidx.compose.ui.test.AndroidInputDispatcher$enqueueMoves$$inlined$sortedBy$1
    public void <init>()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueMoves$$inlined$sortedBy$1 r0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueMoves$$inlined$sortedBy$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueMoves$$inlined$sortedBy$1 r0;
        java.lang.Object r1, r2, $r4, $r6;
        java.lang.Comparable r3, $r8;
        java.lang.Integer $r5, $r7;
        int $i0;
        java.util.Map$Entry r9, r10;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueMoves$$inlined$sortedBy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r9 = (java.util.Map$Entry) r1;

        $r4 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.Integer) $r4;

        r10 = (java.util.Map$Entry) r2;

        r3 = (java.lang.Comparable) $r5;

        $r6 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.Integer) $r6;

        $r8 = (java.lang.Comparable) $r7;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r8);

        return $i0;
    }

androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1: long $eventTime>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1: float $scrollPixels>
    void <init>(long, float)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1 r0;
        long $l0;
        float $f0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1;

        $l0 := @parameter0: long;

        $f0 := @parameter1: float;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1: long $eventTime> = $l0;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1: float $scrollPixels> = $f0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.String invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1 r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        long $l0;
        float $f0;
        java.lang.String $r7;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t enqueue rotary scroll event (eventTime=");

        $l0 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1: long $eventTime>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", scrollDelta=");

        $f0 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1: float $scrollPixels>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1 r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueRotaryScrollEvent$1$1: java.lang.String invoke()>();

        return $r1;
    }

androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$$inlined$sortedBy$1
    public void <init>()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$$inlined$sortedBy$1 r0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$$inlined$sortedBy$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$$inlined$sortedBy$1 r0;
        java.lang.Object r1, r2, $r4, $r6;
        java.lang.Comparable r3, $r8;
        java.lang.Integer $r5, $r7;
        int $i0;
        java.util.Map$Entry r9, r10;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$$inlined$sortedBy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r9 = (java.util.Map$Entry) r1;

        $r4 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.Integer) $r4;

        r10 = (java.util.Map$Entry) r2;

        r3 = (java.lang.Comparable) $r5;

        $r6 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.Integer) $r6;

        $r8 = (java.lang.Comparable) $r7;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r8);

        return $i0;
    }

androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: long $downTime>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: int $action>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: int $actionIndex>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $pointerIds>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $eventTimes>
<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $coordinates>
    void <init>(long, int, int, java.util.List, java.util.List, java.util.List)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1 r0;
        long $l0;
        int $i1, $i2;
        java.util.List $r1, $r2, $r3;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: java.util.List;

        $r2 := @parameter4: java.util.List;

        $r3 := @parameter5: java.util.List;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: long $downTime> = $l0;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: int $action> = $i1;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: int $actionIndex> = $i2;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $pointerIds> = $r1;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $eventTimes> = $r2;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $coordinates> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.String invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1 r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17;
        long $l0;
        int $i1, $i2;
        java.util.List $r9, $r12, $r15;
        java.lang.String $r18;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t enqueue touch event (downTime=");

        $l0 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: long $downTime>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", action=");

        $i1 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: int $action>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actionIndex=");

        $i2 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: int $actionIndex>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pointerIds=");

        $r9 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $pointerIds>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", eventTimes=");

        $r12 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $eventTimes>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", coordinates=");

        $r15 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.util.List $coordinates>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1 r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1;

        $r1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher$enqueueTouchEvent$5$1: java.lang.String invoke()>();

        return $r1;
    }

androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1
<androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1: androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1 r0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.String invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1 r0;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1;

        return "Can\'t flush events";
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1 r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1;

        $r1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1: java.lang.String invoke()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1 $r0;

        $r0 = new androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1;

        specialinvoke $r0.<androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1: void <init>()>();

        <androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1: androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.test.AndroidInputDispatcher$flush$1
<androidx.compose.ui.test.AndroidInputDispatcher$flush$1: androidx.compose.ui.test.AndroidInputDispatcher this$0>
    void <init>(androidx.compose.ui.test.AndroidInputDispatcher)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1 r0;
        androidx.compose.ui.test.AndroidInputDispatcher $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$flush$1;

        $r1 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$flush$1: androidx.compose.ui.test.AndroidInputDispatcher this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1 r0;
        java.util.List r1, $r6, $r8, r13;
        androidx.compose.ui.test.AndroidInputDispatcher $r2, r11, r17;
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1 $r3;
        kotlin.jvm.functions.Function0 $r4;
        java.util.ArrayList $r5;
        java.util.Collection $r7;
        boolean $z1;
        long $l0, $l1, $l2, $l3;
        java.lang.Throwable $r9;
        java.lang.Object $r10, r19;
        java.lang.Iterable $r16;
        java.util.Iterator $r18;
        android.view.InputEvent $r20;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$flush$1;

        $r2 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$flush$1: androidx.compose.ui.test.AndroidInputDispatcher this$0>;

        $r10 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: java.lang.Object access$getBatchLock$p(androidx.compose.ui.test.AndroidInputDispatcher)>($r2);

        r11 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$flush$1: androidx.compose.ui.test.AndroidInputDispatcher this$0>;

        entermonitor $r10;

     label1:
        $r3 = <androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1: androidx.compose.ui.test.AndroidInputDispatcher$flush$1$events$1$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void access$ensureNotDisposed(androidx.compose.ui.test.AndroidInputDispatcher,kotlin.jvm.functions.Function0)>(r11, $r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r13 = (java.util.List) $r5;

        $r6 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: java.util.List access$getBatchedEvents$p(androidx.compose.ui.test.AndroidInputDispatcher)>(r11);

        $r7 = (java.util.Collection) $r6;

        interfaceinvoke r13.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r8 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: java.util.List access$getBatchedEvents$p(androidx.compose.ui.test.AndroidInputDispatcher)>(r11);

        interfaceinvoke $r8.<java.util.List: void clear()>();

     label2:
        exitmonitor $r10;

        goto label5;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor $r10;

        throw $r9;

     label5:
        r1 = r13;

        $r16 = (java.lang.Iterable) r1;

        r17 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$flush$1: androidx.compose.ui.test.AndroidInputDispatcher this$0>;

        $r18 = interfaceinvoke $r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (android.view.InputEvent) r19;

        $l0 = virtualinvoke $r20.<android.view.InputEvent: long getEventTime()>();

        $l1 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: long access$getCurrentClockTime$p(androidx.compose.ui.test.AndroidInputDispatcher)>(r17);

        $l2 = $l0 - $l1;

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void access$advanceClockTime(androidx.compose.ui.test.AndroidInputDispatcher,long)>(r17, $l2);

        $l3 = virtualinvoke $r20.<android.view.InputEvent: long getEventTime()>();

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void access$setCurrentClockTime$p(androidx.compose.ui.test.AndroidInputDispatcher,long)>(r17, $l3);

        staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: void access$sendAndRecycleEvent(androidx.compose.ui.test.AndroidInputDispatcher,android.view.InputEvent)>(r17, $r20);

        goto label6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$flush$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$flush$1;

        virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher$flush$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2
<androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2: androidx.compose.ui.test.AndroidInputDispatcher this$0>
    void <init>(androidx.compose.ui.test.AndroidInputDispatcher)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2 r0;
        androidx.compose.ui.test.AndroidInputDispatcher $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2;

        $r1 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2: androidx.compose.ui.test.AndroidInputDispatcher this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Float invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2 r0;
        android.content.Context r1;
        android.view.ViewConfiguration r2;
        androidx.compose.ui.test.AndroidInputDispatcher $r3;
        androidx.compose.ui.platform.ViewRootForTest $r4;
        android.view.View $r5;
        float $f0;
        java.lang.Float $r6;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2;

        $r3 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2: androidx.compose.ui.test.AndroidInputDispatcher this$0>;

        $r4 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.platform.ViewRootForTest access$getRoot$p(androidx.compose.ui.test.AndroidInputDispatcher)>($r3);

        $r5 = interfaceinvoke $r4.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        r1 = virtualinvoke $r5.<android.view.View: android.content.Context getContext()>();

        r2 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $f0 = staticinvoke <androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>(r2, r1);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2 r0;
        java.lang.Float $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2;

        $r1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher$horizontalScrollFactor$2: java.lang.Float invoke()>();

        return $r1;
    }

androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2
<androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2: androidx.compose.ui.test.AndroidInputDispatcher this$0>
    void <init>(androidx.compose.ui.test.AndroidInputDispatcher)
    {
        androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2 r0;
        androidx.compose.ui.test.AndroidInputDispatcher $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2;

        $r1 := @parameter0: androidx.compose.ui.test.AndroidInputDispatcher;

        r0.<androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2: androidx.compose.ui.test.AndroidInputDispatcher this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Float invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2 r0;
        android.content.Context r1;
        android.view.ViewConfiguration r2;
        androidx.compose.ui.test.AndroidInputDispatcher $r3;
        androidx.compose.ui.platform.ViewRootForTest $r4;
        android.view.View $r5;
        float $f0;
        java.lang.Float $r6;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2;

        $r3 = r0.<androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2: androidx.compose.ui.test.AndroidInputDispatcher this$0>;

        $r4 = staticinvoke <androidx.compose.ui.test.AndroidInputDispatcher: androidx.compose.ui.platform.ViewRootForTest access$getRoot$p(androidx.compose.ui.test.AndroidInputDispatcher)>($r3);

        $r5 = interfaceinvoke $r4.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        r1 = virtualinvoke $r5.<android.view.View: android.content.Context getContext()>();

        r2 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $f0 = staticinvoke <androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>(r2, r1);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2 r0;
        java.lang.Float $r1;

        r0 := @this: androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2;

        $r1 = virtualinvoke r0.<androidx.compose.ui.test.AndroidInputDispatcher$verticalScrollFactor$2: java.lang.Float invoke()>();

        return $r1;
    }

