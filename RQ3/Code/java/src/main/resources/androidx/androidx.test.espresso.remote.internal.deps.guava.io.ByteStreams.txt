androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams
<androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams: java.io.OutputStream NULL_OUTPUT_STREAM>
    public static long copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        byte[] r2;
        int i0;
        long $l1, l2;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams: byte[] createBuffer()>();

        l2 = 0L;

     label1:
        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2);

        if i0 != -1 goto label2;

        return l2;

     label2:
        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i0);

        $l1 = (long) i0;

        l2 = l2 + $l1;

        goto label1;
    }

    static void <clinit>()
    {
        androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;

        r0 = new androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1: void <init>()>();

        <androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams: java.io.OutputStream NULL_OUTPUT_STREAM> = r0;

        return;
    }

    private static byte[] combineBuffers(java.util.Queue, int)
    {
        java.util.Queue r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        byte[] r1, $r4, r5, r6;
        boolean $z0;
        java.lang.Object $r2, $r3;

        r0 := @parameter0: java.util.Queue;

        i0 := @parameter1: int;

        $z0 = interfaceinvoke r0.<java.util.Queue: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = newarray (byte)[0];

        return $r4;

     label1:
        $r2 = interfaceinvoke r0.<java.util.Queue: java.lang.Object remove()>();

        r5 = (byte[]) $r2;

        $i2 = lengthof r5;

        if $i2 != i0 goto label2;

        return r5;

     label2:
        $i3 = lengthof r5;

        i6 = i0 - $i3;

        r1 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r5, i0);

        i7 = i6;

     label3:
        if i7 <= 0 goto label4;

        $r3 = interfaceinvoke r0.<java.util.Queue: java.lang.Object remove()>();

        r6 = (byte[]) $r3;

        $i4 = lengthof r6;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i7, $i4);

        $i5 = i0 - i7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r1, $i5, i1);

        i7 = i7 - i1;

        goto label3;

     label4:
        return r1;
    }

    static byte[] createBuffer()
    {
        byte[] $r0;

        $r0 = newarray (byte)[8192];

        return $r0;
    }

    public static byte[] toByteArray(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.util.ArrayDeque r1;
        byte[] $r3;

        r0 := @parameter0: java.io.InputStream;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r1 = new java.util.ArrayDeque;

        specialinvoke r1.<java.util.ArrayDeque: void <init>(int)>(20);

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams: byte[] toByteArrayInternal(java.io.InputStream,java.util.Queue,int)>(r0, r1, 0);

        return $r3;
    }

    private static byte[] toByteArrayInternal(java.io.InputStream, java.util.Queue, int) throws java.io.IOException
    {
        java.util.Queue r0;
        byte[] r1, $r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        java.io.InputStream r4;
        byte b13;
        java.lang.OutOfMemoryError r5;

        r4 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.util.Queue;

        i9 := @parameter2: int;

        i10 = staticinvoke <java.lang.Integer: int highestOneBit(int)>(i9);

        $i1 = i10 + i10;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(128, $i1);

        i11 = staticinvoke <java.lang.Math: int min(int,int)>(8192, $i2);

     label1:
        if i9 >= 2147483639 goto label7;

        $i4 = 2147483639 - i9;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i11, $i4);

        r1 = newarray (byte)[$i5];

        interfaceinvoke r0.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        i12 = 0;

     label2:
        $i6 = lengthof r1;

        if i12 >= $i6 goto label4;

        $i7 = lengthof r1;

        $i8 = $i7 - i12;

        i0 = virtualinvoke r4.<java.io.InputStream: int read(byte[],int,int)>(r1, i12, $i8);

        if i0 != -1 goto label3;

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams: byte[] combineBuffers(java.util.Queue,int)>(r0, i9);

        return $r3;

     label3:
        i12 = i12 + i0;

        i9 = i9 + i0;

        goto label2;

     label4:
        if i11 >= 4096 goto label6;

        b13 = 4;

     label5:
        i11 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.math.IntMath: int saturatedMultiply(int,int)>(i11, b13);

        goto label1;

     label6:
        b13 = 2;

        goto label5;

     label7:
        $i3 = virtualinvoke r4.<java.io.InputStream: int read()>();

        if $i3 == -1 goto label8;

        r5 = new java.lang.OutOfMemoryError;

        specialinvoke r5.<java.lang.OutOfMemoryError: void <init>(java.lang.String)>("input is too large to fit in a byte array");

        throw r5;

     label8:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams: byte[] combineBuffers(java.util.Queue,int)>(r0, 2147483639);

        return $r2;
    }

androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1
    public java.lang.String toString()
    {
        androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        return "ByteStreams.nullOutputStream()";
    }

    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        return;
    }

    public void write(int)
    {
        androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        i0 := @parameter0: int;

        return;
    }

    public void write(byte[])
    {
        androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;
        byte[] r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        r1 := @parameter0: byte[];

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return;
    }

    public void write(byte[], int, int)
    {
        androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;
        byte[] r1;
        int i0, i1, $i2, $i3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: void checkPositionIndexes(int,int,int)>(i0, $i3, $i2);

        return;
    }

