androidx.compose.ActualAndroidKt
<androidx.compose.ActualAndroidKt: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.compose.ActualAndroidKt: kotlin.Lazy MainAndroidUiDispatcher$delegate>
<androidx.compose.ActualAndroidKt: kotlin.Lazy MainAndroidCompositionFrameClock$delegate>
    public static final boolean isMainThread()
    {
        android.os.Looper $r0, $r1;
        boolean $z0;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $z0;
    }

    private static final kotlinx.coroutines.CoroutineDispatcher getMainAndroidUiDispatcher()
    {
        kotlin.Lazy r0;
        kotlin.reflect.KProperty r1;
        kotlin.reflect.KProperty[] $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.CoroutineDispatcher $r4;

        r0 = <androidx.compose.ActualAndroidKt: kotlin.Lazy MainAndroidUiDispatcher$delegate>;

        $r2 = <androidx.compose.ActualAndroidKt: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r1 = $r2[0];

        $r3 = interfaceinvoke r0.<kotlin.Lazy: java.lang.Object getValue()>();

        $r4 = (kotlinx.coroutines.CoroutineDispatcher) $r3;

        return $r4;
    }

    private static final androidx.compose.CompositionFrameClock getMainAndroidCompositionFrameClock()
    {
        kotlin.Lazy r0;
        kotlin.reflect.KProperty r1;
        kotlin.reflect.KProperty[] $r2;
        java.lang.Object $r3;
        androidx.compose.CompositionFrameClock $r4;

        r0 = <androidx.compose.ActualAndroidKt: kotlin.Lazy MainAndroidCompositionFrameClock$delegate>;

        $r2 = <androidx.compose.ActualAndroidKt: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r1 = $r2[1];

        $r3 = interfaceinvoke r0.<kotlin.Lazy: java.lang.Object getValue()>();

        $r4 = (androidx.compose.CompositionFrameClock) $r3;

        return $r4;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher mainThreadCompositionDispatcher()
    {
        kotlinx.coroutines.CoroutineDispatcher $r0;

        $r0 = staticinvoke <androidx.compose.ActualAndroidKt: kotlinx.coroutines.CoroutineDispatcher getMainAndroidUiDispatcher()>();

        return $r0;
    }

    public static final androidx.compose.CompositionFrameClock mainThreadCompositionFrameClock()
    {
        androidx.compose.CompositionFrameClock $r0;

        $r0 = staticinvoke <androidx.compose.ActualAndroidKt: androidx.compose.CompositionFrameClock getMainAndroidCompositionFrameClock()>();

        return $r0;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.PropertyReference0Impl $r1, $r6;
        kotlin.reflect.KDeclarationContainer $r2, $r7;
        kotlin.jvm.internal.PropertyReference0 $r3, $r8;
        kotlin.reflect.KProperty0 $r4, $r9;
        kotlin.reflect.KProperty $r5, $r10;
        androidx.compose.ActualAndroidKt$MainAndroidUiDispatcher$2 $r11;
        kotlin.jvm.functions.Function0 $r12, $r15;
        kotlin.Lazy $r13, $r16;
        androidx.compose.ActualAndroidKt$MainAndroidCompositionFrameClock$2 $r14;

        r0 = newarray (kotlin.reflect.KProperty)[2];

        $r1 = new kotlin.jvm.internal.PropertyReference0Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)>(class "Landroidx/compose/ActualAndroidKt;", "compose-runtime_release");

        specialinvoke $r1.<kotlin.jvm.internal.PropertyReference0Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r2, "MainAndroidUiDispatcher", "getMainAndroidUiDispatcher()Lkotlinx/coroutines/CoroutineDispatcher;");

        $r3 = (kotlin.jvm.internal.PropertyReference0) $r1;

        $r4 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)>($r3);

        $r5 = (kotlin.reflect.KProperty) $r4;

        r0[0] = $r5;

        $r6 = new kotlin.jvm.internal.PropertyReference0Impl;

        $r7 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)>(class "Landroidx/compose/ActualAndroidKt;", "compose-runtime_release");

        specialinvoke $r6.<kotlin.jvm.internal.PropertyReference0Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r7, "MainAndroidCompositionFrameClock", "getMainAndroidCompositionFrameClock()Landroidx/compose/CompositionFrameClock;");

        $r8 = (kotlin.jvm.internal.PropertyReference0) $r6;

        $r9 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)>($r8);

        $r10 = (kotlin.reflect.KProperty) $r9;

        r0[1] = $r10;

        <androidx.compose.ActualAndroidKt: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        $r11 = new androidx.compose.ActualAndroidKt$MainAndroidUiDispatcher$2;

        specialinvoke $r11.<androidx.compose.ActualAndroidKt$MainAndroidUiDispatcher$2: void <init>()>();

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        <androidx.compose.ActualAndroidKt: kotlin.Lazy MainAndroidUiDispatcher$delegate> = $r13;

        $r14 = new androidx.compose.ActualAndroidKt$MainAndroidCompositionFrameClock$2;

        specialinvoke $r14.<androidx.compose.ActualAndroidKt$MainAndroidCompositionFrameClock$2: void <init>()>();

        $r15 = (kotlin.jvm.functions.Function0) $r14;

        $r16 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r15);

        <androidx.compose.ActualAndroidKt: kotlin.Lazy MainAndroidCompositionFrameClock$delegate> = $r16;

        return;
    }

