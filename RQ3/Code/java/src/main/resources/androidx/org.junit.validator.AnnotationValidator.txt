org.junit.validator.AnnotationValidator
<org.junit.validator.AnnotationValidator: java.util.List NO_VALIDATION_ERRORS>
    static void <clinit>()
    {
        java.util.List $r0;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        <org.junit.validator.AnnotationValidator: java.util.List NO_VALIDATION_ERRORS> = $r0;

        return;
    }

    public void <init>()
    {
        org.junit.validator.AnnotationValidator $r0;

        $r0 := @this: org.junit.validator.AnnotationValidator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List validateAnnotatedClass(org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationValidator $r0;
        org.junit.runners.model.TestClass $r1;
        java.util.List r2;

        $r0 := @this: org.junit.validator.AnnotationValidator;

        $r1 := @parameter0: org.junit.runners.model.TestClass;

        r2 = <org.junit.validator.AnnotationValidator: java.util.List NO_VALIDATION_ERRORS>;

        return r2;
    }

    public java.util.List validateAnnotatedField(org.junit.runners.model.FrameworkField)
    {
        org.junit.validator.AnnotationValidator $r0;
        org.junit.runners.model.FrameworkField $r1;
        java.util.List r2;

        $r0 := @this: org.junit.validator.AnnotationValidator;

        $r1 := @parameter0: org.junit.runners.model.FrameworkField;

        r2 = <org.junit.validator.AnnotationValidator: java.util.List NO_VALIDATION_ERRORS>;

        return r2;
    }

    public java.util.List validateAnnotatedMethod(org.junit.runners.model.FrameworkMethod)
    {
        org.junit.validator.AnnotationValidator $r0;
        org.junit.runners.model.FrameworkMethod $r1;
        java.util.List r2;

        $r0 := @this: org.junit.validator.AnnotationValidator;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        r2 = <org.junit.validator.AnnotationValidator: java.util.List NO_VALIDATION_ERRORS>;

        return r2;
    }

