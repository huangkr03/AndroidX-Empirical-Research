androidx.media3.extractor.ExtractorUtil
    public static void checkContainerInput(boolean, java.lang.String) throws androidx.media3.common.ParserException
    {
        boolean z0;
        java.lang.String r0;
        androidx.media3.common.ParserException $r1;
        java.lang.Throwable r2;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.String;

        if z0 != 0 goto label1;

        $r1 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>(r0, null);

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        return;
    }

    public static int peekToLength(androidx.media3.extractor.ExtractorInput, byte[], int, int) throws java.io.IOException
    {
        androidx.media3.extractor.ExtractorInput r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, i5;

        r0 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i5 = 0;

     label1:
        if i5 >= i1 goto label3;

        $i4 = i0 + i5;

        $i3 = i1 - i5;

        i2 = interfaceinvoke r0.<androidx.media3.extractor.ExtractorInput: int peek(byte[],int,int)>(r1, $i4, $i3);

        if i2 != -1 goto label2;

        goto label3;

     label2:
        i5 = i5 + i2;

        goto label1;

     label3:
        return i5;
    }

    public static boolean readFullyQuietly(androidx.media3.extractor.ExtractorInput, byte[], int, int) throws java.io.IOException
    {
        androidx.media3.extractor.ExtractorInput r0;
        byte[] r1;
        int i0, i1;
        java.lang.Throwable r2, $r3;

        r0 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

     label1:
        interfaceinvoke r0.<androidx.media3.extractor.ExtractorInput: void readFully(byte[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        return 0;

     label4:
        return 1;

        catch java.io.EOFException from label1 to label2 with label3;
    }

    public static boolean skipFullyQuietly(androidx.media3.extractor.ExtractorInput, int) throws java.io.IOException
    {
        androidx.media3.extractor.ExtractorInput r0;
        int i0;
        java.lang.Throwable r1, $r2;

        r0 := @parameter0: androidx.media3.extractor.ExtractorInput;

        i0 := @parameter1: int;

     label1:
        interfaceinvoke r0.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        return 0;

     label4:
        return 1;

        catch java.io.EOFException from label1 to label2 with label3;
    }

    public static boolean peekFullyQuietly(androidx.media3.extractor.ExtractorInput, byte[], int, int, boolean) throws java.io.IOException
    {
        androidx.media3.extractor.ExtractorInput r0;
        byte[] r1;
        int i0, i1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r3;

        r0 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

     label1:
        $z1 = interfaceinvoke r0.<androidx.media3.extractor.ExtractorInput: boolean peekFully(byte[],int,int,boolean)>(r1, i0, i1, z0);

     label2:
        return $z1;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        if z0 == 0 goto label4;

        return 0;

     label4:
        throw r2;

        catch java.io.EOFException from label1 to label2 with label3;
    }

    private void <init>()
    {
        androidx.media3.extractor.ExtractorUtil r0;

        r0 := @this: androidx.media3.extractor.ExtractorUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

