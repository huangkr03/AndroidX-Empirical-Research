androidx.compose.ui.test.ErrorMessagesKt
    public static final java.lang.String buildErrorMessageForCountMismatch(java.lang.String, androidx.compose.ui.test.SemanticsSelector, java.util.List, int, java.util.List)
    {
        java.lang.String r0, $r14, $r20, $r32, $r38, $r41, $r45, $r48, $r56, $r60;
        androidx.compose.ui.test.SemanticsSelector r1;
        java.util.List r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder r4, $r5, $r10, $r11, $r12, $r13, $r17, $r18, $r21, $r22, $r23, $r24, $r26, $r28, $r29, $r30, $r31, $r36, $r37, $r39, $r40, $r43, $r44, $r46, $r47, $r52, $r53, $r54, $r55, $r58;
        java.util.Collection $r19, $r25, $r59;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.compose.ui.test.SemanticsSelector;

        r2 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        r3 := @parameter4: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "errorMessage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "foundNodes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "foundNodesUnmerged");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r4 = $r5;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reason: ");

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            default: goto label03;
        };

     label01:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not expect any node");

        goto label04;

     label02:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected exactly \'1\' node");

        goto label04;

     label03:
        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \'");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' nodes");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

     label04:
        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label05;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but could not find any");

        goto label06;

     label05:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but found \'");

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label06:
        if r1 == null goto label08;

        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i5 > 1 goto label07;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node that satisfies: (");

        $r45 = virtualinvoke r1.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        goto label09;

     label07:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nodes that satisfy: (");

        $r38 = virtualinvoke r1.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        goto label09;

     label08:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label09:
        $z2 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label14;

        $r25 = (java.util.Collection) r3;

        $z0 = interfaceinvoke $r25.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        if $z3 == 0 goto label14;

        $r26 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "append(\'\\n\')");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("However, the unmerged tree contains ");

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i3 != 1 goto label12;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'1\' node that matches. ");

        goto label13;

     label12:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' nodes that match. ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

     label13:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Are you missing `useUnmergedNode = true` in your finder?");

     label14:
        $r58 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r58, "append(\'\\n\')");

        $r59 = (java.util.Collection) r2;

        $z4 = interfaceinvoke $r59.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label15;

        $z5 = 1;

        goto label16;

     label15:
        $z5 = 0;

     label16:
        if $z5 == 0 goto label19;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i2 != 1 goto label17;

        $r23 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node found:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "append(value)");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "append(\'\\n\')");

        goto label18;

     label17:
        $r17 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nodes found:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "append(value)");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "append(\'\\n\')");

     label18:
        $r19 = (java.util.Collection) r2;

        $r20 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString$default(java.util.Collection,int,int,java.lang.Object)>($r19, 0, 1, null);

        $r21 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "append(value)");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "append(\'\\n\')");

     label19:
        $r60 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r60, "sb.toString()");

        return $r60;
    }

    public static java.lang.String buildErrorMessageForCountMismatch$default(java.lang.String, androidx.compose.ui.test.SemanticsSelector, java.util.List, int, java.util.List, int, java.lang.Object)
    {
        java.lang.String r0, $r4;
        androidx.compose.ui.test.SemanticsSelector r1;
        java.util.List r2, r5;
        int i0, i1, $i2;
        java.lang.Object r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.compose.ui.test.SemanticsSelector;

        r2 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        r5 := @parameter4: java.util.List;

        i1 := @parameter5: int;

        r3 := @parameter6: java.lang.Object;

        $i2 = i1 & 16;

        if $i2 == 0 goto label1;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $r4 = staticinvoke <androidx.compose.ui.test.ErrorMessagesKt: java.lang.String buildErrorMessageForCountMismatch(java.lang.String,androidx.compose.ui.test.SemanticsSelector,java.util.List,int,java.util.List)>(r0, r1, r2, i0, r5);

        return $r4;
    }

    public static final java.lang.String buildErrorMessageForNodeMissingInTree(java.lang.String, androidx.compose.ui.test.SemanticsSelector, java.lang.String)
    {
        java.lang.String r0, r2, $r12, $r15;
        androidx.compose.ui.test.SemanticsSelector r1;
        java.lang.StringBuilder r3, $r4, $r7, $r8, $r9, $r10, $r13, $r14;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.compose.ui.test.SemanticsSelector;

        r2 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "errorMessage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "lastSeenSemantics");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The node is no longer in the tree, last known semantics:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "append(value)");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "append(\'\\n\')");

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "append(value)");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "append(\'\\n\')");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Original selector: ");

        $r12 = virtualinvoke r1.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "append(value)");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "append(\'\\n\')");

        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "sb.toString()");

        return $r15;
    }

    public static final java.lang.String buildErrorMessageForAssertAnyFail(androidx.compose.ui.test.SemanticsSelector, java.util.List, androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsSelector r0;
        java.util.List r1;
        androidx.compose.ui.test.SemanticsMatcher r2;
        java.lang.StringBuilder r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r17, $r18, $r22, $r23;
        java.lang.String $r7, $r10, $r16, $r20, $r24;
        java.util.Collection $r15;

        r0 := @parameter0: androidx.compose.ui.test.SemanticsSelector;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "selector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nodes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "assertionMatcher");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r3 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to assertAny(");

        $r7 = virtualinvoke r2.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String getDescription()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "append(value)");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "append(\'\\n\')");

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("None of the following nodes match:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "append(value)");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "append(\'\\n\')");

        $r15 = (java.util.Collection) r1;

        $r16 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString$default(java.util.Collection,int,int,java.lang.Object)>($r15, 0, 1, null);

        $r17 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "append(value)");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "append(\'\\n\')");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selector used: \'");

        $r20 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "append(value)");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "append(\'\\n\')");

        $r24 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "sb.toString()");

        return $r24;
    }

    public static final java.lang.String buildErrorMessageForAssertAllFail(androidx.compose.ui.test.SemanticsSelector, java.util.List, androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsSelector r0;
        java.util.List r1;
        androidx.compose.ui.test.SemanticsMatcher r2;
        java.lang.StringBuilder r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r20, $r21, $r24, $r25, $r29, $r30;
        java.lang.String $r7, $r10, $r17, $r23, $r27, $r31, $r33;
        int $i0, $i1;
        java.util.Collection $r22;

        r0 := @parameter0: androidx.compose.ui.test.SemanticsSelector;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "selector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nodesNotMatching");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "assertionMatcher");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r3 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to assertAll(");

        $r7 = virtualinvoke r2.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String getDescription()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "append(value)");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "append(\'\\n\')");

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found \'");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 1 goto label1;

        $r33 = "node";

        goto label2;

     label1:
        $r33 = "nodes";

     label2:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r20 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not matching:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "append(value)");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "append(\'\\n\')");

        $r22 = (java.util.Collection) r1;

        $r23 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString$default(java.util.Collection,int,int,java.lang.Object)>($r22, 0, 1, null);

        $r24 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "append(value)");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "append(\'\\n\')");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selector used: \'");

        $r27 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "append(value)");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "append(\'\\n\')");

        $r31 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r31, "sb.toString()");

        return $r31;
    }

    public static final java.lang.String buildErrorMessageForAtLeastOneNodeExpected(java.lang.String, androidx.compose.ui.test.SemanticsSelector)
    {
        java.lang.String r0, $r8, $r12;
        androidx.compose.ui.test.SemanticsSelector r1;
        java.lang.StringBuilder r2, $r3, $r4, $r5, $r10, $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.compose.ui.test.SemanticsSelector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "errorMessage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selector");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "append(value)");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "append(\'\\n\')");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assert needs to receive at least 1 node but 0 nodes were found for selector: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke r1.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "append(value)");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "append(\'\\n\')");

        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "sb.toString()");

        return $r12;
    }

    public static final java.lang.String buildGeneralErrorMessage(java.lang.String, androidx.compose.ui.test.SemanticsSelector, androidx.compose.ui.semantics.SemanticsNode)
    {
        java.lang.String r0, $r9, $r13, $r17;
        androidx.compose.ui.test.SemanticsSelector r1;
        androidx.compose.ui.semantics.SemanticsNode r2;
        java.lang.StringBuilder r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r15, $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.compose.ui.test.SemanticsSelector;

        r2 := @parameter2: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "errorMessage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "node");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r3 = $r4;

        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "append(value)");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "append(\'\\n\')");

        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Semantics of the node:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "append(value)");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "append(\'\\n\')");

        $r9 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString$default(androidx.compose.ui.semantics.SemanticsNode,int,int,java.lang.Object)>(r2, 0, 1, null);

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "append(value)");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "append(\'\\n\')");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selector used: (");

        $r13 = virtualinvoke r1.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "append(value)");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "append(\'\\n\')");

        $r17 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "sb.toString()");

        return $r17;
    }

    public static final java.lang.String buildIndexErrorMessage(int, androidx.compose.ui.test.SemanticsSelector, java.util.List)
    {
        int i0, $i1, $i2;
        androidx.compose.ui.test.SemanticsSelector r0;
        java.util.List r1;
        java.lang.StringBuilder r2, $r3, $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32;
        java.lang.String $r8, $r10, $r18, $r22, $r28, $r33;
        boolean $z0;
        java.util.Collection $r21, $r27;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.compose.ui.test.SemanticsSelector;

        r1 := @parameter2: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "selector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nodes");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t retrieve node at index \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "append(value)");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "append(\'\\n\')");

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r31 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are no existing nodes for that selector.");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r31, "append(value)");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r32, "append(\'\\n\')");

        goto label3;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r25 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is 1 node only:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "append(value)");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "append(\'\\n\')");

        $r27 = (java.util.Collection) r1;

        $r28 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString$default(java.util.Collection,int,int,java.lang.Object)>($r27, 0, 1, null);

        $r29 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "append(value)");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "append(\'\\n\')");

        goto label3;

     label2:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are \'");

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' nodes only:");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "append(value)");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "append(\'\\n\')");

        $r21 = (java.util.Collection) r1;

        $r22 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString$default(java.util.Collection,int,int,java.lang.Object)>($r21, 0, 1, null);

        $r23 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "append(value)");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "append(\'\\n\')");

     label3:
        $r33 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "sb.toString()");

        return $r33;
    }

