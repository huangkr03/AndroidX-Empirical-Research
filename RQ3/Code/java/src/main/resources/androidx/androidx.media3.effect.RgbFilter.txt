androidx.media3.effect.RgbFilter
<androidx.media3.effect.RgbFilter: int COLOR_FILTER_GRAYSCALE_INDEX>
<androidx.media3.effect.RgbFilter: int COLOR_FILTER_INVERTED_INDEX>
<androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_GRAYSCALE_SDR>
<androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_GRAYSCALE_HDR>
<androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_INVERTED>
<androidx.media3.effect.RgbFilter: int colorFilter>
<androidx.media3.effect.RgbFilter: java.lang.Boolean useHdr>
    public static androidx.media3.effect.RgbFilter createGrayscaleFilter()
    {
        androidx.media3.effect.RgbFilter $r0;

        $r0 = new androidx.media3.effect.RgbFilter;

        specialinvoke $r0.<androidx.media3.effect.RgbFilter: void <init>(int)>(1);

        return $r0;
    }

    public static androidx.media3.effect.RgbFilter createInvertedFilter()
    {
        androidx.media3.effect.RgbFilter $r0;

        $r0 = new androidx.media3.effect.RgbFilter;

        specialinvoke $r0.<androidx.media3.effect.RgbFilter: void <init>(int)>(2);

        return $r0;
    }

    private void <init>(int)
    {
        androidx.media3.effect.RgbFilter r0;
        int i0;

        r0 := @this: androidx.media3.effect.RgbFilter;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.effect.RgbFilter: int colorFilter> = i0;

        return;
    }

    private void checkForConsistentHdrSetting(boolean)
    {
        androidx.media3.effect.RgbFilter r0;
        boolean z0, $z1, $z2;
        java.lang.Boolean $r1, $r2, $r3;

        r0 := @this: androidx.media3.effect.RgbFilter;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.effect.RgbFilter: java.lang.Boolean useHdr>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.media3.effect.RgbFilter: java.lang.Boolean useHdr> = $r3;

        goto label4;

     label1:
        $r2 = r0.<androidx.media3.effect.RgbFilter: java.lang.Boolean useHdr>;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != z0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z2, "Changing HDR setting is not supported.");

     label4:
        return;
    }

    public float[] getMatrix(long, boolean)
    {
        androidx.media3.effect.RgbFilter r0;
        long l0;
        boolean z0;
        int $i1, $i2;
        float[] $r1, $r7;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.media3.effect.RgbFilter;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.effect.RgbFilter: void checkForConsistentHdrSetting(boolean)>(z0);

        $i1 = r0.<androidx.media3.effect.RgbFilter: int colorFilter>;

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label4;
            default: goto label5;
        };

     label1:
        if z0 == 0 goto label2;

        $r7 = <androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_GRAYSCALE_HDR>;

        goto label3;

     label2:
        $r7 = <androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_GRAYSCALE_SDR>;

     label3:
        return $r7;

     label4:
        $r1 = <androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_INVERTED>;

        return $r1;

     label5:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid color filter ");

        $i2 = r0.<androidx.media3.effect.RgbFilter: int colorFilter>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public androidx.media3.effect.SingleFrameGlTextureProcessor toGlTextureProcessor(android.content.Context, boolean) throws androidx.media3.common.FrameProcessingException
    {
        androidx.media3.effect.RgbFilter r0;
        android.content.Context r1;
        boolean z0;
        androidx.media3.effect.SingleFrameGlTextureProcessor $r2;

        r0 := @this: androidx.media3.effect.RgbFilter;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.effect.RgbFilter: void checkForConsistentHdrSetting(boolean)>(z0);

        $r2 = specialinvoke r0.<androidx.media3.effect.RgbMatrix: androidx.media3.effect.SingleFrameGlTextureProcessor toGlTextureProcessor(android.content.Context,boolean)>(r1, z0);

        return $r2;
    }

    public volatile androidx.media3.effect.GlTextureProcessor toGlTextureProcessor(android.content.Context, boolean) throws androidx.media3.common.FrameProcessingException
    {
        androidx.media3.effect.RgbFilter r0;
        android.content.Context r1;
        boolean z0;
        androidx.media3.effect.SingleFrameGlTextureProcessor $r2;

        r0 := @this: androidx.media3.effect.RgbFilter;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<androidx.media3.effect.RgbFilter: androidx.media3.effect.SingleFrameGlTextureProcessor toGlTextureProcessor(android.content.Context,boolean)>(r1, z0);

        return $r2;
    }

    static void <clinit>()
    {
        float[] $r0, $r1, $r2;

        $r0 = newarray (float)[16];

        $r0[0] = 0.2126F;

        $r0[1] = 0.2126F;

        $r0[2] = 0.2126F;

        $r0[3] = 0.0F;

        $r0[4] = 0.7152F;

        $r0[5] = 0.7152F;

        $r0[6] = 0.7152F;

        $r0[7] = 0.0F;

        $r0[8] = 0.0722F;

        $r0[9] = 0.0722F;

        $r0[10] = 0.0722F;

        $r0[11] = 0.0F;

        $r0[12] = 0.0F;

        $r0[13] = 0.0F;

        $r0[14] = 0.0F;

        $r0[15] = 1.0F;

        <androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_GRAYSCALE_SDR> = $r0;

        $r1 = newarray (float)[16];

        $r1[0] = 0.2627F;

        $r1[1] = 0.2627F;

        $r1[2] = 0.2627F;

        $r1[3] = 0.0F;

        $r1[4] = 0.678F;

        $r1[5] = 0.678F;

        $r1[6] = 0.678F;

        $r1[7] = 0.0F;

        $r1[8] = 0.0593F;

        $r1[9] = 0.0593F;

        $r1[10] = 0.0593F;

        $r1[11] = 0.0F;

        $r1[12] = 0.0F;

        $r1[13] = 0.0F;

        $r1[14] = 0.0F;

        $r1[15] = 1.0F;

        <androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_GRAYSCALE_HDR> = $r1;

        $r2 = newarray (float)[16];

        $r2[0] = -1.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = -1.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r2[10] = -1.0F;

        $r2[11] = 0.0F;

        $r2[12] = 1.0F;

        $r2[13] = 1.0F;

        $r2[14] = 1.0F;

        $r2[15] = 1.0F;

        <androidx.media3.effect.RgbFilter: float[] FILTER_MATRIX_INVERTED> = $r2;

        return;
    }

