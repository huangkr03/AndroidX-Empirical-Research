androidx.media2.widget.SelectiveLayout
    void <init>(android.content.Context)
    {
        androidx.media2.widget.SelectiveLayout r0;
        android.content.Context r1;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.media2.widget.MediaViewGroup: void <init>(android.content.Context)>(r1);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.media2.widget.SelectiveLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.media2.widget.MediaViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.media2.widget.SelectiveLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.media2.widget.MediaViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.media2.widget.SelectiveLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.media2.widget.SelectiveLayout$LayoutParams;

        return $z0;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.media2.widget.SelectiveLayout r0;
        androidx.media2.widget.SelectiveLayout$LayoutParams $r1;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        $r1 = new androidx.media2.widget.SelectiveLayout$LayoutParams;

        specialinvoke $r1.<androidx.media2.widget.SelectiveLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.media2.widget.SelectiveLayout r0;
        android.util.AttributeSet r1;
        androidx.media2.widget.SelectiveLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new androidx.media2.widget.SelectiveLayout$LayoutParams;

        $r3 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.media2.widget.SelectiveLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.media2.widget.SelectiveLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        androidx.media2.widget.SelectiveLayout$LayoutParams $r2;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.media2.widget.SelectiveLayout$LayoutParams;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r2 = new androidx.media2.widget.SelectiveLayout$LayoutParams;

        specialinvoke $r2.<androidx.media2.widget.SelectiveLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    protected void onMeasure(int, int)
    {
        androidx.media2.widget.SelectiveLayout r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, $i36, $i37, $i38, $i39, $i40, i41, i42;
        android.view.View r1, r5;
        androidx.media2.widget.SelectiveLayout$LayoutParams r2, r6;
        android.view.ViewGroup$LayoutParams $r3, $r4;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable r7;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getChildCount()>();

        i19 = 0;

        i20 = 0;

        i21 = 0;

        i22 = 0;

     label1:
        if i22 >= i2 goto label3;

        r5 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: android.view.View getChildAt(int)>(i22);

        $r4 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (androidx.media2.widget.SelectiveLayout$LayoutParams) $r4;

        $i15 = virtualinvoke r5.<android.view.View: int getVisibility()>();

        if $i15 == 8 goto label2;

        $z1 = r6.<androidx.media2.widget.SelectiveLayout$LayoutParams: boolean forceMatchParent>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: void measureChild(android.view.View,int,int)>(r5, i0, i1);

        $i16 = virtualinvoke r5.<android.view.View: int getMeasuredWidth()>();

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(i19, $i16);

        $i17 = virtualinvoke r5.<android.view.View: int getMeasuredHeight()>();

        i20 = staticinvoke <java.lang.Math: int max(int,int)>(i20, $i17);

        $i18 = virtualinvoke r5.<android.view.View: int getMeasuredState()>();

        i21 = i21 | $i18;

     label2:
        i22 = i22 + 1;

        goto label1;

     label3:
        $i3 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingLeft()>();

        $i4 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingRight()>();

        $i5 = $i3 + $i4;

        i23 = i19 + $i5;

        $i6 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingTop()>();

        $i7 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingBottom()>();

        $i8 = $i6 + $i7;

        i24 = i20 + $i8;

        $i9 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getSuggestedMinimumWidth()>();

        i25 = staticinvoke <java.lang.Math: int max(int,int)>(i23, $i9);

        $i10 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getSuggestedMinimumHeight()>();

        i26 = staticinvoke <java.lang.Math: int max(int,int)>(i24, $i10);

        $i11 = <android.os.Build$VERSION: int SDK_INT>;

        if $i11 < 23 goto label4;

        r7 = staticinvoke <androidx.media2.widget.SelectiveLayout$Api23Impl: android.graphics.drawable.Drawable getForeground(android.view.View)>(r0);

        if r7 == null goto label4;

        $i13 = virtualinvoke r7.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        i25 = staticinvoke <java.lang.Math: int max(int,int)>(i25, $i13);

        $i14 = virtualinvoke r7.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        i26 = staticinvoke <java.lang.Math: int max(int,int)>(i26, $i14);

     label4:
        $i27 = staticinvoke <androidx.media2.widget.SelectiveLayout: int resolveSizeAndState(int,int,int)>(i25, i0, i21);

        $i28 = i21 << 16;

        $i29 = staticinvoke <androidx.media2.widget.SelectiveLayout: int resolveSizeAndState(int,int,int)>(i26, i1, $i28);

        virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: void setMeasuredDimension(int,int)>($i27, $i29);

        $i30 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getMeasuredWidth()>();

        $i31 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingLeft()>();

        $i32 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingRight()>();

        $i33 = $i31 + $i32;

        $i34 = $i30 - $i33;

        i35 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i34, 1073741824);

        $i36 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getMeasuredHeight()>();

        $i37 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingTop()>();

        $i38 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingBottom()>();

        $i39 = $i37 + $i38;

        $i40 = $i36 - $i39;

        i41 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i40, 1073741824);

        i42 = 0;

     label5:
        if i42 >= i2 goto label7;

        r1 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: android.view.View getChildAt(int)>(i42);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.media2.widget.SelectiveLayout$LayoutParams) $r3;

        $i12 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i12 == 8 goto label6;

        $z0 = r2.<androidx.media2.widget.SelectiveLayout$LayoutParams: boolean forceMatchParent>;

        if $z0 == 0 goto label6;

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i35, i41);

     label6:
        i42 = i42 + 1;

        goto label5;

     label7:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.media2.widget.SelectiveLayout r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26;
        android.view.View r1;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getChildCount()>();

        i5 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingLeft()>();

        $i13 = i2 - i0;

        $i14 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingRight()>();

        i6 = $i13 - $i14;

        i7 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingTop()>();

        $i15 = i3 - i1;

        $i16 = specialinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPositivePaddingBottom()>();

        i8 = $i15 - $i16;

        i26 = 0;

     label1:
        if i26 >= i4 goto label3;

        r1 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: android.view.View getChildAt(int)>(i26);

        $i17 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i17 == 8 goto label2;

        i9 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i10 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i18 = i6 - i5;

        $i19 = $i18 - i9;

        $i20 = $i19 / 2;

        i11 = i5 + $i20;

        $i21 = i8 - i7;

        $i22 = $i21 - i10;

        $i23 = $i22 / 2;

        i12 = i7 + $i23;

        $i25 = i11 + i9;

        $i24 = i12 + i10;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i11, i12, $i25, $i24);

     label2:
        i26 = i26 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.media2.widget.SelectiveLayout r0;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        return 0;
    }

    private int getPositivePaddingLeft()
    {
        androidx.media2.widget.SelectiveLayout r0;
        int $i0, $i1;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        $i0 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPaddingLeft()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        return $i1;
    }

    private int getPositivePaddingRight()
    {
        androidx.media2.widget.SelectiveLayout r0;
        int $i0, $i1;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        $i0 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPaddingRight()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        return $i1;
    }

    private int getPositivePaddingTop()
    {
        androidx.media2.widget.SelectiveLayout r0;
        int $i0, $i1;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        $i0 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPaddingTop()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        return $i1;
    }

    private int getPositivePaddingBottom()
    {
        androidx.media2.widget.SelectiveLayout r0;
        int $i0, $i1;

        r0 := @this: androidx.media2.widget.SelectiveLayout;

        $i0 = virtualinvoke r0.<androidx.media2.widget.SelectiveLayout: int getPaddingBottom()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        return $i1;
    }

