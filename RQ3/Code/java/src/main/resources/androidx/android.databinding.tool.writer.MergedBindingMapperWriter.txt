android.databinding.tool.writer.MergedBindingMapperWriter
<android.databinding.tool.writer.MergedBindingMapperWriter: boolean generateAsTest>
<android.databinding.tool.writer.MergedBindingMapperWriter: boolean generateTestOverride>
<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.FieldSpec overrideField>
<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String pkg>
<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String qualifiedName>
<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName dataBinderMapper>
<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName mergedMapperBase>
<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName testOverride>
<android.databinding.tool.writer.MergedBindingMapperWriter: java.util.List packages>
<android.databinding.tool.writer.MergedBindingMapperWriter: java.util.Set featurePackages>
<android.databinding.tool.writer.MergedBindingMapperWriter: boolean hasV1CompatMapper>
<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String APP_CLASS_NAME>
<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String TEST_CLASS_NAME>
<android.databinding.tool.writer.MergedBindingMapperWriter: android.databinding.tool.writer.MergedBindingMapperWriter$Companion Companion>
    public final java.lang.String getPkg()
    {
        android.databinding.tool.writer.MergedBindingMapperWriter r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.writer.MergedBindingMapperWriter;

        $r1 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String pkg>;

        return $r1;
    }

    public final java.lang.String getQualifiedName()
    {
        android.databinding.tool.writer.MergedBindingMapperWriter r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.writer.MergedBindingMapperWriter;

        $r1 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String qualifiedName>;

        return $r1;
    }

    public final com.squareup.javapoet.TypeSpec write()
    {
        android.databinding.tool.writer.MergedBindingMapperWriter r0;
        com.squareup.javapoet.TypeSpec$Builder r1, r106, r119, r122;
        com.squareup.javapoet.ClassName r3, $r4, $r36, $r37, $r38, $r47, $r112;
        com.squareup.javapoet.TypeName $r5;
        javax.lang.model.element.Modifier[] $r7;
        javax.lang.model.element.Modifier $r8;
        java.util.List $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r11;
        com.squareup.javapoet.MethodSpec $r12;
        com.squareup.javapoet.TypeSpec $r14;
        com.squareup.javapoet.FieldSpec $r15, $r35, $r55, $r67, $r75;
        com.squareup.javapoet.CodeBlock$Builder $r17, $r57, r118, r120, r121, r123;
        java.lang.Object[] $r18, $r34, $r46, $r54, $r66, $r74, $r84, $r93, $r103;
        java.lang.StringBuilder $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r40, $r41, $r43, $r44, $r48, $r49, $r51, $r52, $r60, $r61, $r63, $r64, $r68, $r69, $r71, $r72, $r78, $r79, $r81, $r82, $r87, $r88, $r90, $r91, $r97, $r98, $r100, $r101;
        java.lang.String $r21, $r24, $r27, $r30, $r33, $r42, $r45, $r50, $r53, $r62, $r65, $r70, $r73, $r80, $r83, $r89, $r92, $r99, $r102, r111, r115;
        com.squareup.javapoet.CodeBlock $r58;
        java.lang.String[] $r86, $r96;
        java.lang.Iterable $r95, $r108;
        com.squareup.javapoet.MethodSpec$Builder r105, $r116, r117;
        java.util.Iterator $r109, $r113;
        java.lang.Object r110, r114;

        r0 := @this: android.databinding.tool.writer.MergedBindingMapperWriter;

        r1 = staticinvoke <com.squareup.javapoet.TypeSpec: com.squareup.javapoet.TypeSpec$Builder classBuilder(java.lang.String)>("DataBinderMapperImpl");

        $r4 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName mergedMapperBase>;

        $r5 = (com.squareup.javapoet.TypeName) $r4;

        virtualinvoke r1.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder superclass(com.squareup.javapoet.TypeName)>($r5);

        $r7 = newarray (javax.lang.model.element.Modifier)[1];

        $r8 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        $r7[0] = $r8;

        virtualinvoke r1.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r7);

        r105 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder constructorBuilder()>();

        r106 = r1;

        $r10 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.util.List packages>;

        $r108 = (java.lang.Iterable) $r10;

        $r109 = interfaceinvoke $r108.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r109.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r110 = interfaceinvoke $r109.<java.util.Iterator: java.lang.Object next()>();

        r111 = (java.lang.String) r110;

        $r96 = newarray (java.lang.String)[0];

        r3 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>(r111, "DataBinderMapperImpl", $r96);

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addMapper(new ");

        $r99 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getT()>();

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("())");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        $r103 = newarray (java.lang.Object)[1];

        $r103[0] = r3;

        virtualinvoke r105.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>($r102, $r103);

        goto label1;

     label2:
        $z1 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: boolean hasV1CompatMapper>;

        if $z1 == 0 goto label3;

        $r86 = newarray (java.lang.String)[0];

        $r112 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("android.databinding", "V1CompatDataBinderMapperImpl", $r86);

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addMapper(new ");

        $r89 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getT()>();

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("())");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        $r93 = newarray (java.lang.Object)[1];

        $r93[0] = $r112;

        virtualinvoke r105.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>($r92, $r93);

     label3:
        $r11 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.util.Set featurePackages>;

        $r95 = (java.lang.Iterable) $r11;

        $r113 = interfaceinvoke $r95.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke $r113.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        r114 = interfaceinvoke $r113.<java.util.Iterator: java.lang.Object next()>();

        r115 = (java.lang.String) r114;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addMapper(");

        $r80 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getS()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        $r84 = newarray (java.lang.Object)[1];

        $r84[0] = r115;

        virtualinvoke r105.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>($r83, $r84);

        goto label4;

     label5:
        $z2 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: boolean generateTestOverride>;

        if $z2 == 0 goto label6;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("if(");

        $r62 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getN()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != null)");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        $r66 = newarray (java.lang.Object)[1];

        $r67 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.FieldSpec overrideField>;

        $r66[0] = $r67;

        $r116 = virtualinvoke r105.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder beginControlFlow(java.lang.String,java.lang.Object[])>($r65, $r66);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addMapper(");

        $r70 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getN()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        $r74 = newarray (java.lang.Object)[1];

        $r75 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.FieldSpec overrideField>;

        $r74[0] = $r75;

        virtualinvoke $r116.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>($r73, $r74);

        virtualinvoke $r116.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder endControlFlow()>();

     label6:
        r117 = r105;

        $r12 = virtualinvoke r117.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        virtualinvoke r106.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r12);

        $z3 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: boolean generateTestOverride>;

        if $z3 == 0 goto label7;

        $r15 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.FieldSpec overrideField>;

        virtualinvoke r1.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addField(com.squareup.javapoet.FieldSpec)>($r15);

        $r17 = staticinvoke <com.squareup.javapoet.CodeBlock: com.squareup.javapoet.CodeBlock$Builder builder()>();

        $r18 = newarray (java.lang.Object)[0];

        r118 = virtualinvoke $r17.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder beginControlFlow(java.lang.String,java.lang.Object[])>("try", $r18);

        r119 = r1;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r21 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getN()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (");

        $r24 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getT()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r27 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getT()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class.getClassLoader().loadClass(");

        $r30 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getS()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").newInstance()");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = newarray (java.lang.Object)[4];

        $r35 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.FieldSpec overrideField>;

        $r34[0] = $r35;

        $r36 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName dataBinderMapper>;

        $r34[1] = $r36;

        $r37 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName dataBinderMapper>;

        $r34[2] = $r37;

        $r38 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName testOverride>;

        $r34[3] = $r38;

        virtualinvoke r118.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>($r33, $r34);

        r120 = r118;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("catch(");

        $r42 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getT()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored)");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = newarray (java.lang.Object)[1];

        $r47 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.Class)>(class "Ljava/lang/Throwable;");

        $r46[0] = $r47;

        r121 = virtualinvoke r120.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder nextControlFlow(java.lang.String,java.lang.Object[])>($r45, $r46);

        r122 = r119;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r50 = staticinvoke <android.databinding.tool.ext.Javapoet_extKt: java.lang.String getN()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = null");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = newarray (java.lang.Object)[1];

        $r55 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.FieldSpec overrideField>;

        $r54[0] = $r55;

        virtualinvoke r121.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>($r53, $r54);

        r123 = r121;

        $r57 = virtualinvoke r123.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder endControlFlow()>();

        $r58 = virtualinvoke $r57.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock build()>();

        virtualinvoke r122.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addStaticBlock(com.squareup.javapoet.CodeBlock)>($r58);

     label7:
        $r14 = virtualinvoke r1.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec build()>();

        if $r14 != null goto label8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwNpe()>();

     label8:
        return $r14;
    }

    public void <init>(java.util.List, android.databinding.tool.DataBindingCompilerArgs, java.util.Set, boolean, android.databinding.tool.LibTypes)
    {
        android.databinding.tool.writer.MergedBindingMapperWriter r0;
        java.util.List r1;
        android.databinding.tool.DataBindingCompilerArgs r2;
        java.util.Set r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.databinding.tool.LibTypes r4;
        java.lang.String $r7, $r16, $r19, $r22, $r23, $r25, $r28;
        com.squareup.javapoet.ClassName $r8, $r24, $r27, $r30;
        com.squareup.javapoet.TypeName $r9;
        javax.lang.model.element.Modifier[] $r10, $r12;
        com.squareup.javapoet.FieldSpec$Builder $r11, $r14;
        javax.lang.model.element.Modifier $r13;
        com.squareup.javapoet.FieldSpec $r15;
        java.lang.StringBuilder $r17, $r18, $r20, $r21;
        java.lang.String[] $r26, $r29;

        r0 := @this: android.databinding.tool.writer.MergedBindingMapperWriter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.databinding.tool.DataBindingCompilerArgs;

        r3 := @parameter2: java.util.Set;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.databinding.tool.LibTypes;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "packages");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r2, "compilerArgs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r3, "featurePackages");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r4, "libTypes");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.util.List packages> = r1;

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.util.Set featurePackages> = r3;

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: boolean hasV1CompatMapper> = z0;

        $z1 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isTestVariant()>();

        if $z1 == 0 goto label1;

        $z3 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isApp()>();

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: boolean generateAsTest> = $z4;

        $z5 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: boolean generateAsTest>;

        if $z5 != 0 goto label3;

        $z2 = virtualinvoke r2.<android.databinding.tool.DataBindingCompilerArgs: boolean isEnabledForTests()>();

        if $z2 == 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: boolean generateTestOverride> = $z6;

        $r7 = virtualinvoke r4.<android.databinding.tool.LibTypes: java.lang.String getDataBinderMapper()>();

        $r8 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName bestGuess(java.lang.String)>($r7);

        $r9 = (com.squareup.javapoet.TypeName) $r8;

        $r10 = newarray (javax.lang.model.element.Modifier)[0];

        $r11 = staticinvoke <com.squareup.javapoet.FieldSpec: com.squareup.javapoet.FieldSpec$Builder builder(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r9, "sTestOverride", $r10);

        $r12 = newarray (javax.lang.model.element.Modifier)[1];

        $r13 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier STATIC>;

        $r12[0] = $r13;

        $r14 = virtualinvoke $r11.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r12);

        $r15 = virtualinvoke $r14.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec build()>();

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.FieldSpec overrideField> = $r15;

        $r16 = virtualinvoke r4.<android.databinding.tool.LibTypes: java.lang.String getBindingPackage()>();

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String pkg> = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r19 = r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String pkg>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".DataBinderMapperImpl");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: java.lang.String qualifiedName> = $r22;

        $r23 = virtualinvoke r4.<android.databinding.tool.LibTypes: java.lang.String getDataBinderMapper()>();

        $r24 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName bestGuess(java.lang.String)>($r23);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r24, "ClassName.bestGuess(libTypes.dataBinderMapper)");

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName dataBinderMapper> = $r24;

        $r25 = virtualinvoke r4.<android.databinding.tool.LibTypes: java.lang.String getBindingPackage()>();

        $r26 = newarray (java.lang.String)[0];

        $r27 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>($r25, "MergedDataBinderMapper", $r26);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r27, "ClassName.get(\n         \u2026\"MergedDataBinderMapper\")");

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName mergedMapperBase> = $r27;

        $r28 = virtualinvoke r4.<android.databinding.tool.LibTypes: java.lang.String getBindingPackage()>();

        $r29 = newarray (java.lang.String)[0];

        $r30 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>($r28, "TestDataBinderMapperImpl", $r29);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r30, "ClassName.get(\n         \u2026         TEST_CLASS_NAME)");

        r0.<android.databinding.tool.writer.MergedBindingMapperWriter: com.squareup.javapoet.ClassName testOverride> = $r30;

        return;
    }

    static void <clinit>()
    {
        android.databinding.tool.writer.MergedBindingMapperWriter$Companion $r0;

        $r0 = new android.databinding.tool.writer.MergedBindingMapperWriter$Companion;

        specialinvoke $r0.<android.databinding.tool.writer.MergedBindingMapperWriter$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <android.databinding.tool.writer.MergedBindingMapperWriter: android.databinding.tool.writer.MergedBindingMapperWriter$Companion Companion> = $r0;

        return;
    }

android.databinding.tool.writer.MergedBindingMapperWriter$Companion
    private void <init>()
    {
        android.databinding.tool.writer.MergedBindingMapperWriter$Companion r0;

        r0 := @this: android.databinding.tool.writer.MergedBindingMapperWriter$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        android.databinding.tool.writer.MergedBindingMapperWriter$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: android.databinding.tool.writer.MergedBindingMapperWriter$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<android.databinding.tool.writer.MergedBindingMapperWriter$Companion: void <init>()>();

        return;
    }

