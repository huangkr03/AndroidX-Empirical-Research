androidx.compose.ui.graphics.Matrix
<androidx.compose.ui.graphics.Matrix: androidx.compose.ui.graphics.Matrix$Companion Companion>
<androidx.compose.ui.graphics.Matrix: float[] values>
<androidx.compose.ui.graphics.Matrix: int ScaleX>
<androidx.compose.ui.graphics.Matrix: int SkewY>
<androidx.compose.ui.graphics.Matrix: int Perspective0>
<androidx.compose.ui.graphics.Matrix: int SkewX>
<androidx.compose.ui.graphics.Matrix: int ScaleY>
<androidx.compose.ui.graphics.Matrix: int Perspective1>
<androidx.compose.ui.graphics.Matrix: int ScaleZ>
<androidx.compose.ui.graphics.Matrix: int TranslateX>
<androidx.compose.ui.graphics.Matrix: int TranslateY>
<androidx.compose.ui.graphics.Matrix: int TranslateZ>
<androidx.compose.ui.graphics.Matrix: int Perspective2>
    public final float[] getValues()
    {
        androidx.compose.ui.graphics.Matrix r0;
        float[] $r1;

        r0 := @this: androidx.compose.ui.graphics.Matrix;

        $r1 = r0.<androidx.compose.ui.graphics.Matrix: float[] values>;

        return $r1;
    }

    public static final float get-impl(float[], int, int)
    {
        float[] r0;
        int i0, i1, $i2, $i3;
        float $f0;

        r0 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i0 * 4;

        $i3 = $i2 + i1;

        $f0 = r0[$i3];

        return $f0;
    }

    public static final void set-impl(float[], int, int, float)
    {
        float[] r0;
        int i0, i1, $i2, $i3;
        float f0;

        r0 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        $i2 = i0 * 4;

        $i3 = $i2 + i1;

        r0[$i3] = f0;

        return;
    }

    public static final long map-MK-Hz9U(float[], long)
    {
        float[] r0;
        long l0, $l19;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, f26, $f28, f29;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0, $z1, $z5;
        byte b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31;

        r0 := @parameter0: float[];

        l0 := @parameter1: long;

        f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        b20 = 0;

        b21 = 3;

        $i1 = b20 * 4;

        $i2 = $i1 + b21;

        $f3 = r0[$i2];

        $f6 = $f3 * f0;

        b22 = 1;

        b23 = 3;

        $i3 = b22 * 4;

        $i4 = $i3 + b23;

        $f4 = r0[$i4];

        $f5 = $f4 * f1;

        $f8 = $f6 + $f5;

        b24 = 3;

        b25 = 3;

        $i5 = b24 * 4;

        $i6 = $i5 + b25;

        $f7 = r0[$i6];

        f2 = $f8 + $f7;

        $f9 = (float) 1;

        f26 = $f9 / f2;

        $z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f26);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f26);

        if $z1 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        if $z5 == 0 goto label3;

        $f28 = f26;

        goto label4;

     label3:
        $f28 = 0.0F;

     label4:
        f29 = $f28;

        b26 = 0;

        $i7 = 0 * 4;

        $i8 = $i7 + b26;

        $f10 = r0[$i8];

        $f13 = $f10 * f0;

        b27 = 0;

        $i9 = 1 * 4;

        $i10 = $i9 + b27;

        $f11 = r0[$i10];

        $f12 = $f11 * f1;

        $f15 = $f13 + $f12;

        b28 = 0;

        $i11 = 3 * 4;

        $i12 = $i11 + b28;

        $f14 = r0[$i12];

        $f16 = $f15 + $f14;

        $f25 = f29 * $f16;

        b29 = 1;

        $i13 = 0 * 4;

        $i14 = $i13 + b29;

        $f17 = r0[$i14];

        $f20 = $f17 * f0;

        b30 = 1;

        $i15 = 1 * 4;

        $i16 = $i15 + b30;

        $f18 = r0[$i16];

        $f19 = $f18 * f1;

        $f22 = $f20 + $f19;

        b31 = 1;

        $i17 = 3 * 4;

        $i18 = $i17 + b31;

        $f21 = r0[$i18];

        $f23 = $f22 + $f21;

        $f24 = f29 * $f23;

        $l19 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f25, $f24);

        return $l19;
    }

    public static final androidx.compose.ui.geometry.Rect map-impl(float[], androidx.compose.ui.geometry.Rect)
    {
        float[] r0;
        androidx.compose.ui.geometry.Rect r1, $r2;
        long l0, l1, l2, l3, $l4, $l5, $l6, $l7;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35;

        r0 := @parameter0: float[];

        r1 := @parameter1: androidx.compose.ui.geometry.Rect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        $f4 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $l4 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f4, $f5);

        l0 = staticinvoke <androidx.compose.ui.graphics.Matrix: long map-MK-Hz9U(float[],long)>(r0, $l4);

        $f6 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $l5 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f6, $f7);

        l1 = staticinvoke <androidx.compose.ui.graphics.Matrix: long map-MK-Hz9U(float[],long)>(r0, $l5);

        $f8 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $f9 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $l6 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f8, $f9);

        l2 = staticinvoke <androidx.compose.ui.graphics.Matrix: long map-MK-Hz9U(float[],long)>(r0, $l6);

        $f10 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $f11 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $l7 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f10, $f11);

        l3 = staticinvoke <androidx.compose.ui.graphics.Matrix: long map-MK-Hz9U(float[],long)>(r0, $l7);

        $f12 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f13 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f14 = staticinvoke <java.lang.Math: float min(float,float)>($f12, $f13);

        $f15 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l2);

        $f16 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l3);

        $f17 = staticinvoke <java.lang.Math: float min(float,float)>($f15, $f16);

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f14, $f17);

        $f18 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f19 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f20 = staticinvoke <java.lang.Math: float min(float,float)>($f18, $f19);

        $f21 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l2);

        $f22 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l3);

        $f23 = staticinvoke <java.lang.Math: float min(float,float)>($f21, $f22);

        f1 = staticinvoke <java.lang.Math: float min(float,float)>($f20, $f23);

        $f24 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f25 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f26 = staticinvoke <java.lang.Math: float max(float,float)>($f24, $f25);

        $f27 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l2);

        $f28 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l3);

        $f29 = staticinvoke <java.lang.Math: float max(float,float)>($f27, $f28);

        f2 = staticinvoke <java.lang.Math: float max(float,float)>($f26, $f29);

        $f30 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f31 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f32 = staticinvoke <java.lang.Math: float max(float,float)>($f30, $f31);

        $f33 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l2);

        $f34 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l3);

        $f35 = staticinvoke <java.lang.Math: float max(float,float)>($f33, $f34);

        f3 = staticinvoke <java.lang.Math: float max(float,float)>($f32, $f35);

        $r2 = new androidx.compose.ui.geometry.Rect;

        specialinvoke $r2.<androidx.compose.ui.geometry.Rect: void <init>(float,float,float,float)>(f0, f1, f2, f3);

        return $r2;
    }

    public static final void map-impl(float[], androidx.compose.ui.geometry.MutableRect)
    {
        float[] r0;
        androidx.compose.ui.geometry.MutableRect r1;
        long l0, l1, l2, l3, $l4, $l5, $l6, $l7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35;

        r0 := @parameter0: float[];

        r1 := @parameter1: androidx.compose.ui.geometry.MutableRect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        $f0 = virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: float getLeft()>();

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: float getTop()>();

        $l4 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f0, $f1);

        l0 = staticinvoke <androidx.compose.ui.graphics.Matrix: long map-MK-Hz9U(float[],long)>(r0, $l4);

        $f2 = virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: float getLeft()>();

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: float getBottom()>();

        $l5 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f2, $f3);

        l1 = staticinvoke <androidx.compose.ui.graphics.Matrix: long map-MK-Hz9U(float[],long)>(r0, $l5);

        $f4 = virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: float getRight()>();

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: float getTop()>();

        $l6 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f4, $f5);

        l2 = staticinvoke <androidx.compose.ui.graphics.Matrix: long map-MK-Hz9U(float[],long)>(r0, $l6);

        $f6 = virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: float getRight()>();

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: float getBottom()>();

        $l7 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f6, $f7);

        l3 = staticinvoke <androidx.compose.ui.graphics.Matrix: long map-MK-Hz9U(float[],long)>(r0, $l7);

        $f8 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f9 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f10 = staticinvoke <java.lang.Math: float min(float,float)>($f8, $f9);

        $f11 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l2);

        $f12 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l3);

        $f13 = staticinvoke <java.lang.Math: float min(float,float)>($f11, $f12);

        $f14 = staticinvoke <java.lang.Math: float min(float,float)>($f10, $f13);

        virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: void setLeft(float)>($f14);

        $f15 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f16 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f17 = staticinvoke <java.lang.Math: float min(float,float)>($f15, $f16);

        $f18 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l2);

        $f19 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l3);

        $f20 = staticinvoke <java.lang.Math: float min(float,float)>($f18, $f19);

        $f21 = staticinvoke <java.lang.Math: float min(float,float)>($f17, $f20);

        virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: void setTop(float)>($f21);

        $f22 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f23 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f24 = staticinvoke <java.lang.Math: float max(float,float)>($f22, $f23);

        $f25 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l2);

        $f26 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l3);

        $f27 = staticinvoke <java.lang.Math: float max(float,float)>($f25, $f26);

        $f28 = staticinvoke <java.lang.Math: float max(float,float)>($f24, $f27);

        virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: void setRight(float)>($f28);

        $f29 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f30 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $f31 = staticinvoke <java.lang.Math: float max(float,float)>($f29, $f30);

        $f32 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l2);

        $f33 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l3);

        $f34 = staticinvoke <java.lang.Math: float max(float,float)>($f32, $f33);

        $f35 = staticinvoke <java.lang.Math: float max(float,float)>($f31, $f34);

        virtualinvoke r1.<androidx.compose.ui.geometry.MutableRect: void setBottom(float)>($f35);

        return;
    }

    public static final void timesAssign-58bKbWc(float[], float[])
    {
        float[] r0, r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        byte b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49, b50, b51, b52, b53, b54, b55, b56, b57, b58, b59, b60, b61, b62, b63;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "m");

        f0 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 0, r1, 0);

        f1 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 0, r1, 1);

        f2 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 0, r1, 2);

        f3 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 0, r1, 3);

        f4 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 1, r1, 0);

        f5 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 1, r1, 1);

        f6 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 1, r1, 2);

        f7 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 1, r1, 3);

        f8 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 2, r1, 0);

        f9 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 2, r1, 1);

        f10 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 2, r1, 2);

        f11 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 2, r1, 3);

        f12 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 3, r1, 0);

        f13 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 3, r1, 1);

        f14 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 3, r1, 2);

        f15 = staticinvoke <androidx.compose.ui.graphics.MatrixKt: float access$dot-p89u6pk(float[],int,float[],int)>(r0, 3, r1, 3);

        b32 = 0;

        b33 = 0;

        $i0 = b32 * 4;

        $i1 = $i0 + b33;

        r0[$i1] = f0;

        b34 = 0;

        b35 = 1;

        $i2 = b34 * 4;

        $i3 = $i2 + b35;

        r0[$i3] = f1;

        b36 = 0;

        b37 = 2;

        $i4 = b36 * 4;

        $i5 = $i4 + b37;

        r0[$i5] = f2;

        b38 = 0;

        b39 = 3;

        $i6 = b38 * 4;

        $i7 = $i6 + b39;

        r0[$i7] = f3;

        b40 = 1;

        b41 = 0;

        $i8 = b40 * 4;

        $i9 = $i8 + b41;

        r0[$i9] = f4;

        b42 = 1;

        b43 = 1;

        $i10 = b42 * 4;

        $i11 = $i10 + b43;

        r0[$i11] = f5;

        b44 = 1;

        b45 = 2;

        $i12 = b44 * 4;

        $i13 = $i12 + b45;

        r0[$i13] = f6;

        b46 = 1;

        b47 = 3;

        $i14 = b46 * 4;

        $i15 = $i14 + b47;

        r0[$i15] = f7;

        b48 = 2;

        b49 = 0;

        $i16 = b48 * 4;

        $i17 = $i16 + b49;

        r0[$i17] = f8;

        b50 = 2;

        b51 = 1;

        $i18 = b50 * 4;

        $i19 = $i18 + b51;

        r0[$i19] = f9;

        b52 = 2;

        b53 = 2;

        $i20 = b52 * 4;

        $i21 = $i20 + b53;

        r0[$i21] = f10;

        b54 = 2;

        b55 = 3;

        $i22 = b54 * 4;

        $i23 = $i22 + b55;

        r0[$i23] = f11;

        b56 = 3;

        b57 = 0;

        $i24 = b56 * 4;

        $i25 = $i24 + b57;

        r0[$i25] = f12;

        b58 = 3;

        b59 = 1;

        $i26 = b58 * 4;

        $i27 = $i26 + b59;

        r0[$i27] = f13;

        b60 = 3;

        b61 = 2;

        $i28 = b60 * 4;

        $i29 = $i28 + b61;

        r0[$i29] = f14;

        b62 = 3;

        b63 = 3;

        $i30 = b62 * 4;

        $i31 = $i30 + b63;

        r0[$i31] = f15;

        return;
    }

    public static java.lang.String toString-impl(float[])
    {
        float[] r0;
        java.lang.StringBuilder r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        java.lang.String $r36, $r37;
        byte b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49, b50, b51, b52, b53, b54, b55, b56, b57, b58, b59, b60, b61, b62, b63;

        r0 := @parameter0: float[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            |");

        b32 = 0;

        b33 = 0;

        $i0 = b32 * 4;

        $i1 = $i0 + b33;

        $f0 = r0[$i1];

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b34 = 0;

        b35 = 1;

        $i2 = b34 * 4;

        $i3 = $i2 + b35;

        $f1 = r0[$i3];

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b36 = 0;

        b37 = 2;

        $i4 = b36 * 4;

        $i5 = $i4 + b37;

        $f2 = r0[$i5];

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b38 = 0;

        b39 = 3;

        $i6 = b38 * 4;

        $i7 = $i6 + b39;

        $f3 = r0[$i7];

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|\n            |");

        b40 = 1;

        b41 = 0;

        $i8 = b40 * 4;

        $i9 = $i8 + b41;

        $f4 = r0[$i9];

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b42 = 1;

        b43 = 1;

        $i10 = b42 * 4;

        $i11 = $i10 + b43;

        $f5 = r0[$i11];

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b44 = 1;

        b45 = 2;

        $i12 = b44 * 4;

        $i13 = $i12 + b45;

        $f6 = r0[$i13];

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b46 = 1;

        b47 = 3;

        $i14 = b46 * 4;

        $i15 = $i14 + b47;

        $f7 = r0[$i15];

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|\n            |");

        b48 = 2;

        b49 = 0;

        $i16 = b48 * 4;

        $i17 = $i16 + b49;

        $f8 = r0[$i17];

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f8);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b50 = 2;

        b51 = 1;

        $i18 = b50 * 4;

        $i19 = $i18 + b51;

        $f9 = r0[$i19];

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b52 = 2;

        b53 = 2;

        $i20 = b52 * 4;

        $i21 = $i20 + b53;

        $f10 = r0[$i21];

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f10);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b54 = 2;

        b55 = 3;

        $i22 = b54 * 4;

        $i23 = $i22 + b55;

        $f11 = r0[$i23];

        $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f11);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|\n            |");

        b56 = 3;

        b57 = 0;

        $i24 = b56 * 4;

        $i25 = $i24 + b57;

        $f12 = r0[$i25];

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f12);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b58 = 3;

        b59 = 1;

        $i26 = b58 * 4;

        $i27 = $i26 + b59;

        $f13 = r0[$i27];

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f13);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b60 = 3;

        b61 = 2;

        $i28 = b60 * 4;

        $i29 = $i28 + b61;

        $f14 = r0[$i29];

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f14);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        b62 = 3;

        b63 = 3;

        $i30 = b62 * 4;

        $i31 = $i30 + b63;

        $f15 = r0[$i31];

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f15);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|\n        ");

        $r36 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r36);

        return $r37;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.graphics.Matrix r0;
        float[] $r1;
        java.lang.String $r2;

        r0 := @this: androidx.compose.ui.graphics.Matrix;

        $r1 = r0.<androidx.compose.ui.graphics.Matrix: float[] values>;

        $r2 = staticinvoke <androidx.compose.ui.graphics.Matrix: java.lang.String toString-impl(float[])>($r1);

        return $r2;
    }

    public static final void invert-impl(float[])
    {
        float[] r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, $f86, $f87, $f88, $f89, $f90, $f91, $f92, $f93, $f94, $f95, $f96, $f97, $f98, $f99, $f100, $f101, $f102, $f103, $f104, $f105, $f106, $f107, $f108, $f109, $f110, $f111, $f112, $f113, $f114, $f115, $f116, $f117, $f118, $f119, $f120, $f121, $f122, $f123, $f124, $f125, $f126, $f127, $f128, $f129, $f130, $f131, $f132, $f133, f134, f135, $f136, $f137, $f138, $f139, $f140, $f141, $f142, $f143, $f144, $f145, $f146, $f147, $f148, $f149, $f150, $f151, f152, f153, f154, f155, f156, f157, f158, f159, f160, f161, f162, f163, f164, f165, f166, f167;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64;
        byte $b32, b65, b66, b67, b68, b69, b70, b71, b72, b73, b74, b75, b76, b77, b78, b79, b80, b81, b82, b83, b84, b85, b86, b87, b88, b89, b90, b91, b92, b93, b94, b95, b96, b97, b98, b99;
        boolean $z16;

        r0 := @parameter0: float[];

        b65 = 0;

        b66 = 0;

        $i0 = b65 * 4;

        $i1 = $i0 + b66;

        f0 = r0[$i1];

        b67 = 0;

        $i2 = b67 * 4;

        $i3 = $i2 + 1;

        f134 = r0[$i3];

        $i4 = 0 * 4;

        $i5 = $i4 + 2;

        f135 = r0[$i5];

        $i6 = 0 * 4;

        $i7 = $i6 + 3;

        $f136 = r0[$i7];

        $i8 = 1 * 4;

        $i9 = $i8 + 0;

        $f137 = r0[$i9];

        $i10 = 1 * 4;

        $i11 = $i10 + 1;

        $f138 = r0[$i11];

        $i12 = 1 * 4;

        $i13 = $i12 + 2;

        $f139 = r0[$i13];

        $i14 = 1 * 4;

        $i15 = $i14 + 3;

        $f140 = r0[$i15];

        $i16 = 2 * 4;

        $i17 = $i16 + 0;

        $f141 = r0[$i17];

        $i18 = 2 * 4;

        $i19 = $i18 + 1;

        $f142 = r0[$i19];

        $i20 = 2 * 4;

        $i21 = $i20 + 2;

        $f143 = r0[$i21];

        $i22 = 2 * 4;

        $i23 = $i22 + 3;

        $f144 = r0[$i23];

        $i24 = 3 * 4;

        $i25 = $i24 + 0;

        $f145 = r0[$i25];

        $i26 = 3 * 4;

        $i27 = $i26 + 1;

        $f146 = r0[$i27];

        $i28 = 3 * 4;

        $i29 = $i28 + 2;

        $f147 = r0[$i29];

        $i30 = 3 * 4;

        $i31 = $i30 + 3;

        $f148 = r0[$i31];

        $f13 = f0 * $f138;

        $f12 = f134 * $f137;

        $f149 = $f13 - $f12;

        $f15 = f0 * $f139;

        $f14 = f135 * $f137;

        $f150 = $f15 - $f14;

        $f17 = f0 * $f140;

        $f16 = $f136 * $f137;

        $f151 = $f17 - $f16;

        $f19 = f134 * $f139;

        $f18 = f135 * $f138;

        f1 = $f19 - $f18;

        $f21 = f134 * $f140;

        $f20 = $f136 * $f138;

        f2 = $f21 - $f20;

        $f23 = f135 * $f140;

        $f22 = $f136 * $f139;

        f3 = $f23 - $f22;

        $f25 = $f141 * $f146;

        $f24 = $f142 * $f145;

        f4 = $f25 - $f24;

        $f27 = $f141 * $f147;

        $f26 = $f143 * $f145;

        f5 = $f27 - $f26;

        $f29 = $f141 * $f148;

        $f28 = $f144 * $f145;

        f6 = $f29 - $f28;

        $f31 = $f142 * $f147;

        $f30 = $f143 * $f146;

        f7 = $f31 - $f30;

        $f33 = $f142 * $f148;

        $f32 = $f144 * $f146;

        f8 = $f33 - $f32;

        $f35 = $f143 * $f148;

        $f34 = $f144 * $f147;

        f9 = $f35 - $f34;

        $f37 = $f149 * f9;

        $f36 = $f150 * f8;

        $f39 = $f37 - $f36;

        $f38 = $f151 * f7;

        $f41 = $f39 + $f38;

        $f40 = f1 * f6;

        $f43 = $f41 + $f40;

        $f42 = f2 * f5;

        $f45 = $f43 - $f42;

        $f44 = f3 * f4;

        f10 = $f45 + $f44;

        $b32 = f10 cmpg 0.0F;

        if $b32 != 0 goto label1;

        $z16 = 1;

        goto label2;

     label1:
        $z16 = 0;

     label2:
        if $z16 == 0 goto label3;

        return;

     label3:
        f11 = 1.0F / f10;

        b68 = 0;

        b69 = 0;

        $f47 = $f138 * f9;

        $f46 = $f139 * f8;

        $f49 = $f47 - $f46;

        $f48 = $f140 * f7;

        $f50 = $f49 + $f48;

        f152 = $f50 * f11;

        $i33 = b68 * 4;

        $i34 = $i33 + b69;

        r0[$i34] = f152;

        b70 = 0;

        b71 = 1;

        $f51 = neg f134;

        $f53 = $f51 * f9;

        $f52 = f135 * f8;

        $f55 = $f53 + $f52;

        $f54 = $f136 * f7;

        $f56 = $f55 - $f54;

        f153 = $f56 * f11;

        $i35 = b70 * 4;

        $i36 = $i35 + b71;

        r0[$i36] = f153;

        b72 = 0;

        b73 = 2;

        $f58 = $f146 * f3;

        $f57 = $f147 * f2;

        $f60 = $f58 - $f57;

        $f59 = $f148 * f1;

        $f61 = $f60 + $f59;

        f154 = $f61 * f11;

        $i37 = b72 * 4;

        $i38 = $i37 + b73;

        r0[$i38] = f154;

        b74 = 0;

        b75 = 3;

        $f62 = neg $f142;

        $f64 = $f62 * f3;

        $f63 = $f143 * f2;

        $f66 = $f64 + $f63;

        $f65 = $f144 * f1;

        $f67 = $f66 - $f65;

        f155 = $f67 * f11;

        $i39 = b74 * 4;

        $i40 = $i39 + b75;

        r0[$i40] = f155;

        b76 = 1;

        b77 = 0;

        $f68 = neg $f137;

        $f70 = $f68 * f9;

        $f69 = $f139 * f6;

        $f72 = $f70 + $f69;

        $f71 = $f140 * f5;

        $f73 = $f72 - $f71;

        f156 = $f73 * f11;

        $i41 = b76 * 4;

        $i42 = $i41 + b77;

        r0[$i42] = f156;

        b78 = 1;

        b79 = 1;

        $f75 = f0 * f9;

        $f74 = f135 * f6;

        $f77 = $f75 - $f74;

        $f76 = $f136 * f5;

        $f78 = $f77 + $f76;

        f157 = $f78 * f11;

        $i43 = b78 * 4;

        $i44 = $i43 + b79;

        r0[$i44] = f157;

        b80 = 1;

        b81 = 2;

        $f79 = neg $f145;

        $f81 = $f79 * f3;

        $f80 = $f147 * $f151;

        $f83 = $f81 + $f80;

        $f82 = $f148 * $f150;

        $f84 = $f83 - $f82;

        f158 = $f84 * f11;

        $i45 = b80 * 4;

        $i46 = $i45 + b81;

        r0[$i46] = f158;

        b82 = 1;

        b83 = 3;

        $f86 = $f141 * f3;

        $f85 = $f143 * $f151;

        $f88 = $f86 - $f85;

        $f87 = $f144 * $f150;

        $f89 = $f88 + $f87;

        f159 = $f89 * f11;

        $i47 = b82 * 4;

        $i48 = $i47 + b83;

        r0[$i48] = f159;

        b84 = 2;

        b85 = 0;

        $f91 = $f137 * f8;

        $f90 = $f138 * f6;

        $f93 = $f91 - $f90;

        $f92 = $f140 * f4;

        $f94 = $f93 + $f92;

        f160 = $f94 * f11;

        $i49 = b84 * 4;

        $i50 = $i49 + b85;

        r0[$i50] = f160;

        b86 = 2;

        b87 = 1;

        $f95 = neg f0;

        $f97 = $f95 * f8;

        $f96 = f134 * f6;

        $f99 = $f97 + $f96;

        $f98 = $f136 * f4;

        $f100 = $f99 - $f98;

        f161 = $f100 * f11;

        $i51 = b86 * 4;

        $i52 = $i51 + b87;

        r0[$i52] = f161;

        b88 = 2;

        b89 = 2;

        $f102 = $f145 * f2;

        $f101 = $f146 * $f151;

        $f104 = $f102 - $f101;

        $f103 = $f148 * $f149;

        $f105 = $f104 + $f103;

        f162 = $f105 * f11;

        $i53 = b88 * 4;

        $i54 = $i53 + b89;

        r0[$i54] = f162;

        b90 = 2;

        b91 = 3;

        $f106 = neg $f141;

        $f108 = $f106 * f2;

        $f107 = $f142 * $f151;

        $f110 = $f108 + $f107;

        $f109 = $f144 * $f149;

        $f111 = $f110 - $f109;

        f163 = $f111 * f11;

        $i55 = b90 * 4;

        $i56 = $i55 + b91;

        r0[$i56] = f163;

        b92 = 3;

        b93 = 0;

        $f112 = neg $f137;

        $f114 = $f112 * f7;

        $f113 = $f138 * f5;

        $f116 = $f114 + $f113;

        $f115 = $f139 * f4;

        $f117 = $f116 - $f115;

        f164 = $f117 * f11;

        $i57 = b92 * 4;

        $i58 = $i57 + b93;

        r0[$i58] = f164;

        b94 = 3;

        b95 = 1;

        $f119 = f0 * f7;

        $f118 = f134 * f5;

        $f121 = $f119 - $f118;

        $f120 = f135 * f4;

        $f122 = $f121 + $f120;

        f165 = $f122 * f11;

        $i59 = b94 * 4;

        $i60 = $i59 + b95;

        r0[$i60] = f165;

        b96 = 3;

        b97 = 2;

        $f123 = neg $f145;

        $f125 = $f123 * f1;

        $f124 = $f146 * $f150;

        $f127 = $f125 + $f124;

        $f126 = $f147 * $f149;

        $f128 = $f127 - $f126;

        f166 = $f128 * f11;

        $i61 = b96 * 4;

        $i62 = $i61 + b97;

        r0[$i62] = f166;

        b98 = 3;

        b99 = 3;

        $f130 = $f141 * f1;

        $f129 = $f142 * $f150;

        $f132 = $f130 - $f129;

        $f131 = $f143 * $f149;

        $f133 = $f132 + $f131;

        f167 = $f133 * f11;

        $i63 = b98 * 4;

        $i64 = $i63 + b99;

        r0[$i64] = f167;

        return;
    }

    public static final void reset-impl(float[])
    {
        float[] r0;
        float f0, $f1;
        int $i0, $i1, i2, i3;

        r0 := @parameter0: float[];

        i2 = 0;

     label1:
        if i2 >= 4 goto label6;

        i3 = 0;

     label2:
        if i3 >= 4 goto label5;

        if i2 != i3 goto label3;

        $f1 = 1.0F;

        goto label4;

     label3:
        $f1 = 0.0F;

     label4:
        f0 = $f1;

        $i0 = i3 * 4;

        $i1 = $i0 + i2;

        r0[$i1] = f0;

        i3 = i3 + 1;

        goto label2;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;
    }

    public static final void setFrom-58bKbWc(float[], float[])
    {
        float[] r0, r1;
        float $f0;
        int i0;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "matrix");

        i0 = 0;

     label1:
        if i0 >= 16 goto label2;

        $f0 = r1[i0];

        r0[i0] = $f0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void rotateX-impl(float[], float)
    {
        float[] r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, f20, f21, $f22, $f23, f24, f25, $f26, $f27, f28, f29, $f30, $f31, f32, f33, $f34;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        byte b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49, b50, b51;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        $d0 = (double) f0;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 180.0;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        f1 = (float) $d3;

        $d4 = (double) f0;

        $d5 = $d4 * 3.141592653589793;

        $d6 = $d5 / 180.0;

        $d7 = staticinvoke <java.lang.Math: double sin(double)>($d6);

        f2 = (float) $d7;

        b32 = 0;

        b33 = 1;

        $i0 = b32 * 4;

        $i1 = $i0 + b33;

        f3 = r0[$i1];

        b34 = 0;

        $i2 = b34 * 4;

        $i3 = $i2 + 2;

        f20 = r0[$i3];

        $f5 = f3 * f1;

        $f4 = f20 * f2;

        f21 = $f5 - $f4;

        $f7 = f3 * f2;

        $f6 = f20 * f1;

        $f22 = $f7 + $f6;

        b35 = 1;

        b36 = 1;

        $i4 = b35 * 4;

        $i5 = $i4 + b36;

        $f23 = r0[$i5];

        b37 = 1;

        $i6 = b37 * 4;

        $i7 = $i6 + 2;

        f24 = r0[$i7];

        $f9 = $f23 * f1;

        $f8 = f24 * f2;

        f25 = $f9 - $f8;

        $f11 = $f23 * f2;

        $f10 = f24 * f1;

        $f26 = $f11 + $f10;

        b38 = 2;

        b39 = 1;

        $i8 = b38 * 4;

        $i9 = $i8 + b39;

        $f27 = r0[$i9];

        b40 = 2;

        $i10 = b40 * 4;

        $i11 = $i10 + 2;

        f28 = r0[$i11];

        $f13 = $f27 * f1;

        $f12 = f28 * f2;

        f29 = $f13 - $f12;

        $f15 = $f27 * f2;

        $f14 = f28 * f1;

        $f30 = $f15 + $f14;

        b41 = 3;

        b42 = 1;

        $i12 = b41 * 4;

        $i13 = $i12 + b42;

        $f31 = r0[$i13];

        b43 = 3;

        $i14 = b43 * 4;

        $i15 = $i14 + 2;

        f32 = r0[$i15];

        $f17 = $f31 * f1;

        $f16 = f32 * f2;

        f33 = $f17 - $f16;

        $f19 = $f31 * f2;

        $f18 = f32 * f1;

        $f34 = $f19 + $f18;

        b44 = 1;

        $i16 = 0 * 4;

        $i17 = $i16 + b44;

        r0[$i17] = f21;

        b45 = 2;

        $i18 = 0 * 4;

        $i19 = $i18 + b45;

        r0[$i19] = $f22;

        b46 = 1;

        $i20 = 1 * 4;

        $i21 = $i20 + b46;

        r0[$i21] = f25;

        b47 = 2;

        $i22 = 1 * 4;

        $i23 = $i22 + b47;

        r0[$i23] = $f26;

        b48 = 1;

        $i24 = 2 * 4;

        $i25 = $i24 + b48;

        r0[$i25] = f29;

        b49 = 2;

        $i26 = 2 * 4;

        $i27 = $i26 + b49;

        r0[$i27] = $f30;

        b50 = 1;

        $i28 = 3 * 4;

        $i29 = $i28 + b50;

        r0[$i29] = f33;

        b51 = 2;

        $i30 = 3 * 4;

        $i31 = $i30 + b51;

        r0[$i31] = $f34;

        return;
    }

    public static final void rotateY-impl(float[], float)
    {
        float[] r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, f24, f25, $f26, $f27, f28, f29, $f30, $f31, f32, f33, $f34, $f35, f36, f37, $f38;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        byte b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49, b50, b51;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        $d0 = (double) f0;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 180.0;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        f1 = (float) $d3;

        $d4 = (double) f0;

        $d5 = $d4 * 3.141592653589793;

        $d6 = $d5 / 180.0;

        $d7 = staticinvoke <java.lang.Math: double sin(double)>($d6);

        f2 = (float) $d7;

        b32 = 0;

        b33 = 0;

        $i0 = b32 * 4;

        $i1 = $i0 + b33;

        f3 = r0[$i1];

        b34 = 0;

        $i2 = b34 * 4;

        $i3 = $i2 + 2;

        f24 = r0[$i3];

        $f5 = f3 * f1;

        $f4 = f24 * f2;

        f25 = $f5 + $f4;

        $f6 = neg f3;

        $f8 = $f6 * f2;

        $f7 = f24 * f1;

        $f26 = $f8 + $f7;

        b35 = 1;

        b36 = 0;

        $i4 = b35 * 4;

        $i5 = $i4 + b36;

        $f27 = r0[$i5];

        b37 = 1;

        $i6 = b37 * 4;

        $i7 = $i6 + 2;

        f28 = r0[$i7];

        $f10 = $f27 * f1;

        $f9 = f28 * f2;

        f29 = $f10 + $f9;

        $f11 = neg $f27;

        $f13 = $f11 * f2;

        $f12 = f28 * f1;

        $f30 = $f13 + $f12;

        b38 = 2;

        b39 = 0;

        $i8 = b38 * 4;

        $i9 = $i8 + b39;

        $f31 = r0[$i9];

        b40 = 2;

        $i10 = b40 * 4;

        $i11 = $i10 + 2;

        f32 = r0[$i11];

        $f15 = $f31 * f1;

        $f14 = f32 * f2;

        f33 = $f15 + $f14;

        $f16 = neg $f31;

        $f18 = $f16 * f2;

        $f17 = f32 * f1;

        $f34 = $f18 + $f17;

        b41 = 3;

        b42 = 0;

        $i12 = b41 * 4;

        $i13 = $i12 + b42;

        $f35 = r0[$i13];

        b43 = 3;

        $i14 = b43 * 4;

        $i15 = $i14 + 2;

        f36 = r0[$i15];

        $f20 = $f35 * f1;

        $f19 = f36 * f2;

        f37 = $f20 + $f19;

        $f21 = neg $f35;

        $f23 = $f21 * f2;

        $f22 = f36 * f1;

        $f38 = $f23 + $f22;

        b44 = 0;

        $i16 = 0 * 4;

        $i17 = $i16 + b44;

        r0[$i17] = f25;

        b45 = 2;

        $i18 = 0 * 4;

        $i19 = $i18 + b45;

        r0[$i19] = $f26;

        b46 = 0;

        $i20 = 1 * 4;

        $i21 = $i20 + b46;

        r0[$i21] = f29;

        b47 = 2;

        $i22 = 1 * 4;

        $i23 = $i22 + b47;

        r0[$i23] = $f30;

        b48 = 0;

        $i24 = 2 * 4;

        $i25 = $i24 + b48;

        r0[$i25] = f33;

        b49 = 2;

        $i26 = 2 * 4;

        $i27 = $i26 + b49;

        r0[$i27] = $f34;

        b50 = 0;

        $i28 = 3 * 4;

        $i29 = $i28 + b50;

        r0[$i29] = f37;

        b51 = 2;

        $i30 = 3 * 4;

        $i31 = $i30 + b51;

        r0[$i31] = $f38;

        return;
    }

    public static final void rotateZ-impl(float[], float)
    {
        float[] r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, f24, f25, $f26, $f27, f28, f29, $f30, $f31, f32, f33, $f34, $f35, f36, f37, $f38;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        byte b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49, b50, b51;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        $d0 = (double) f0;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 180.0;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        f1 = (float) $d3;

        $d4 = (double) f0;

        $d5 = $d4 * 3.141592653589793;

        $d6 = $d5 / 180.0;

        $d7 = staticinvoke <java.lang.Math: double sin(double)>($d6);

        f2 = (float) $d7;

        b32 = 0;

        b33 = 0;

        $i0 = b32 * 4;

        $i1 = $i0 + b33;

        f3 = r0[$i1];

        b34 = 1;

        $i2 = b34 * 4;

        $i3 = $i2 + 0;

        f24 = r0[$i3];

        $f5 = f1 * f3;

        $f4 = f2 * f24;

        f25 = $f5 + $f4;

        $f6 = neg f2;

        $f8 = $f6 * f3;

        $f7 = f1 * f24;

        $f26 = $f8 + $f7;

        b35 = 0;

        b36 = 1;

        $i4 = b35 * 4;

        $i5 = $i4 + b36;

        $f27 = r0[$i5];

        b37 = 1;

        $i6 = b37 * 4;

        $i7 = $i6 + 1;

        f28 = r0[$i7];

        $f10 = f1 * $f27;

        $f9 = f2 * f28;

        f29 = $f10 + $f9;

        $f11 = neg f2;

        $f13 = $f11 * $f27;

        $f12 = f1 * f28;

        $f30 = $f13 + $f12;

        b38 = 0;

        b39 = 2;

        $i8 = b38 * 4;

        $i9 = $i8 + b39;

        $f31 = r0[$i9];

        b40 = 1;

        $i10 = b40 * 4;

        $i11 = $i10 + 2;

        f32 = r0[$i11];

        $f15 = f1 * $f31;

        $f14 = f2 * f32;

        f33 = $f15 + $f14;

        $f16 = neg f2;

        $f18 = $f16 * $f31;

        $f17 = f1 * f32;

        $f34 = $f18 + $f17;

        b41 = 0;

        b42 = 3;

        $i12 = b41 * 4;

        $i13 = $i12 + b42;

        $f35 = r0[$i13];

        b43 = 1;

        $i14 = b43 * 4;

        $i15 = $i14 + 3;

        f36 = r0[$i15];

        $f20 = f1 * $f35;

        $f19 = f2 * f36;

        f37 = $f20 + $f19;

        $f21 = neg f2;

        $f23 = $f21 * $f35;

        $f22 = f1 * f36;

        $f38 = $f23 + $f22;

        b44 = 0;

        $i16 = 0 * 4;

        $i17 = $i16 + b44;

        r0[$i17] = f25;

        b45 = 1;

        $i18 = 0 * 4;

        $i19 = $i18 + b45;

        r0[$i19] = f29;

        b46 = 2;

        $i20 = 0 * 4;

        $i21 = $i20 + b46;

        r0[$i21] = f33;

        b47 = 3;

        $i22 = 0 * 4;

        $i23 = $i22 + b47;

        r0[$i23] = f37;

        b48 = 0;

        $i24 = 1 * 4;

        $i25 = $i24 + b48;

        r0[$i25] = $f26;

        b49 = 1;

        $i26 = 1 * 4;

        $i27 = $i26 + b49;

        r0[$i27] = $f30;

        b50 = 2;

        $i28 = 1 * 4;

        $i29 = $i28 + b50;

        r0[$i29] = $f34;

        b51 = 3;

        $i30 = 1 * 4;

        $i31 = $i30 + b51;

        r0[$i31] = $f38;

        return;
    }

    public static final void scale-impl(float[], float, float, float)
    {
        float[] r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47;
        byte b48, b49, b50, b51, b52, b53, b54, b55, b56, b57, b58, b59, b60, b61, b62, b63, b64, b65, b66, b67, b68, b69, b70, b71, b72, b73, b74, b75, b76, b77, b78, b79, b80, b81, b82, b83, b84, b85, b86, b87, b88, b89, b90, b91, b92, b93, b94, b95;
        boolean z1, z3, z5, z7, z9, z11, z13, z15, z17, z19, z21, z23;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        b48 = 0;

        b49 = 0;

        b50 = 0;

        b51 = 0;

        $i0 = b50 * 4;

        $i1 = $i0 + b51;

        $f3 = r0[$i1];

        f15 = $f3 * f0;

        z1 = 0;

        $i2 = b48 * 4;

        $i3 = $i2 + b49;

        r0[$i3] = f15;

        b52 = 0;

        b53 = 1;

        b54 = 0;

        b55 = 1;

        $i4 = b54 * 4;

        $i5 = $i4 + b55;

        $f4 = r0[$i5];

        f16 = $f4 * f0;

        z3 = 0;

        $i6 = b52 * 4;

        $i7 = $i6 + b53;

        r0[$i7] = f16;

        b56 = 0;

        b57 = 2;

        b58 = 0;

        b59 = 2;

        $i8 = b58 * 4;

        $i9 = $i8 + b59;

        $f5 = r0[$i9];

        f17 = $f5 * f0;

        z5 = 0;

        $i10 = b56 * 4;

        $i11 = $i10 + b57;

        r0[$i11] = f17;

        b60 = 0;

        b61 = 3;

        b62 = 0;

        b63 = 3;

        $i12 = b62 * 4;

        $i13 = $i12 + b63;

        $f6 = r0[$i13];

        f18 = $f6 * f0;

        z7 = 0;

        $i14 = b60 * 4;

        $i15 = $i14 + b61;

        r0[$i15] = f18;

        b64 = 1;

        b65 = 0;

        b66 = 1;

        b67 = 0;

        $i16 = b66 * 4;

        $i17 = $i16 + b67;

        $f7 = r0[$i17];

        f19 = $f7 * f1;

        z9 = 0;

        $i18 = b64 * 4;

        $i19 = $i18 + b65;

        r0[$i19] = f19;

        b68 = 1;

        b69 = 1;

        b70 = 1;

        b71 = 1;

        $i20 = b70 * 4;

        $i21 = $i20 + b71;

        $f8 = r0[$i21];

        f20 = $f8 * f1;

        z11 = 0;

        $i22 = b68 * 4;

        $i23 = $i22 + b69;

        r0[$i23] = f20;

        b72 = 1;

        b73 = 2;

        b74 = 1;

        b75 = 2;

        $i24 = b74 * 4;

        $i25 = $i24 + b75;

        $f9 = r0[$i25];

        f21 = $f9 * f1;

        z13 = 0;

        $i26 = b72 * 4;

        $i27 = $i26 + b73;

        r0[$i27] = f21;

        b76 = 1;

        b77 = 3;

        b78 = 1;

        b79 = 3;

        $i28 = b78 * 4;

        $i29 = $i28 + b79;

        $f10 = r0[$i29];

        f22 = $f10 * f1;

        z15 = 0;

        $i30 = b76 * 4;

        $i31 = $i30 + b77;

        r0[$i31] = f22;

        b80 = 2;

        b81 = 0;

        b82 = 2;

        b83 = 0;

        $i32 = b82 * 4;

        $i33 = $i32 + b83;

        $f11 = r0[$i33];

        f23 = $f11 * f2;

        z17 = 0;

        $i34 = b80 * 4;

        $i35 = $i34 + b81;

        r0[$i35] = f23;

        b84 = 2;

        b85 = 1;

        b86 = 2;

        b87 = 1;

        $i36 = b86 * 4;

        $i37 = $i36 + b87;

        $f12 = r0[$i37];

        f24 = $f12 * f2;

        z19 = 0;

        $i38 = b84 * 4;

        $i39 = $i38 + b85;

        r0[$i39] = f24;

        b88 = 2;

        b89 = 2;

        b90 = 2;

        b91 = 2;

        $i40 = b90 * 4;

        $i41 = $i40 + b91;

        $f13 = r0[$i41];

        f25 = $f13 * f2;

        z21 = 0;

        $i42 = b88 * 4;

        $i43 = $i42 + b89;

        r0[$i43] = f25;

        b92 = 2;

        b93 = 3;

        b94 = 2;

        b95 = 3;

        $i44 = b94 * 4;

        $i45 = $i44 + b95;

        $f14 = r0[$i45];

        f26 = $f14 * f2;

        z23 = 0;

        $i46 = b92 * 4;

        $i47 = $i46 + b93;

        r0[$i47] = f26;

        return;
    }

    public static void scale-impl$default(float[], float, float, float, int, java.lang.Object)
    {
        float[] r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        float f0, f1, f2;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 1.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = 1.0F;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        f2 = 1.0F;

     label3:
        staticinvoke <androidx.compose.ui.graphics.Matrix: void scale-impl(float[],float,float,float)>(r0, f0, f1, f2);

        return;
    }

    public static final void translate-impl(float[], float, float, float)
    {
        float[] r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, f40, f41, $f42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39;
        byte b40, b41, b42, b43, b44, b45, b46, b47, b48, b49, b50, b51;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        b40 = 0;

        b41 = 0;

        $i0 = b40 * 4;

        $i1 = $i0 + b41;

        $f4 = r0[$i1];

        $f7 = $f4 * f0;

        b42 = 1;

        b43 = 0;

        $i2 = b42 * 4;

        $i3 = $i2 + b43;

        $f5 = r0[$i3];

        $f6 = $f5 * f1;

        $f10 = $f7 + $f6;

        b44 = 2;

        b45 = 0;

        $i4 = b44 * 4;

        $i5 = $i4 + b45;

        $f8 = r0[$i5];

        $f9 = $f8 * f2;

        $f12 = $f10 + $f9;

        b46 = 3;

        b47 = 0;

        $i6 = b46 * 4;

        $i7 = $i6 + b47;

        $f11 = r0[$i7];

        f3 = $f12 + $f11;

        b48 = 0;

        $i8 = b48 * 4;

        $i9 = $i8 + 1;

        $f13 = r0[$i9];

        $f16 = $f13 * f0;

        b49 = 1;

        $i10 = b49 * 4;

        $i11 = $i10 + 1;

        $f14 = r0[$i11];

        $f15 = $f14 * f1;

        $f19 = $f16 + $f15;

        b50 = 2;

        $i12 = b50 * 4;

        $i13 = $i12 + 1;

        $f17 = r0[$i13];

        $f18 = $f17 * f2;

        $f21 = $f19 + $f18;

        b51 = 3;

        $i14 = b51 * 4;

        $i15 = $i14 + 1;

        $f20 = r0[$i15];

        f40 = $f21 + $f20;

        $i16 = 0 * 4;

        $i17 = $i16 + 2;

        $f22 = r0[$i17];

        $f25 = $f22 * f0;

        $i18 = 1 * 4;

        $i19 = $i18 + 2;

        $f23 = r0[$i19];

        $f24 = $f23 * f1;

        $f28 = $f25 + $f24;

        $i20 = 2 * 4;

        $i21 = $i20 + 2;

        $f26 = r0[$i21];

        $f27 = $f26 * f2;

        $f30 = $f28 + $f27;

        $i22 = 3 * 4;

        $i23 = $i22 + 2;

        $f29 = r0[$i23];

        f41 = $f30 + $f29;

        $i24 = 0 * 4;

        $i25 = $i24 + 3;

        $f31 = r0[$i25];

        $f34 = $f31 * f0;

        $i26 = 1 * 4;

        $i27 = $i26 + 3;

        $f32 = r0[$i27];

        $f33 = $f32 * f1;

        $f37 = $f34 + $f33;

        $i28 = 2 * 4;

        $i29 = $i28 + 3;

        $f35 = r0[$i29];

        $f36 = $f35 * f2;

        $f39 = $f37 + $f36;

        $i30 = 3 * 4;

        $i31 = $i30 + 3;

        $f38 = r0[$i31];

        $f42 = $f39 + $f38;

        $i32 = 3 * 4;

        $i33 = $i32 + 0;

        r0[$i33] = f3;

        $i34 = 3 * 4;

        $i35 = $i34 + 1;

        r0[$i35] = f40;

        $i36 = 3 * 4;

        $i37 = $i36 + 2;

        r0[$i37] = f41;

        $i38 = 3 * 4;

        $i39 = $i38 + 3;

        r0[$i39] = $f42;

        return;
    }

    public static void translate-impl$default(float[], float, float, float, int, java.lang.Object)
    {
        float[] r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        float f0, f1, f2;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 0.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = 0.0F;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        f2 = 0.0F;

     label3:
        staticinvoke <androidx.compose.ui.graphics.Matrix: void translate-impl(float[],float,float,float)>(r0, f0, f1, f2);

        return;
    }

    public static int hashCode-impl(float[])
    {
        float[] r0;
        int $i0;

        r0 := @parameter0: float[];

        $i0 = staticinvoke <java.util.Arrays: int hashCode(float[])>(r0);

        return $i0;
    }

    public int hashCode()
    {
        androidx.compose.ui.graphics.Matrix r0;
        float[] $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.graphics.Matrix;

        $r1 = r0.<androidx.compose.ui.graphics.Matrix: float[] values>;

        $i0 = staticinvoke <androidx.compose.ui.graphics.Matrix: int hashCode-impl(float[])>($r1);

        return $i0;
    }

    public static boolean equals-impl(float[], java.lang.Object)
    {
        float[] r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        androidx.compose.ui.graphics.Matrix $r2;

        r0 := @parameter0: float[];

        r1 := @parameter1: java.lang.Object;

        $z0 = r1 instanceof androidx.compose.ui.graphics.Matrix;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (androidx.compose.ui.graphics.Matrix) r1;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.graphics.Matrix: float[] unbox-impl()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r0, $r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.graphics.Matrix r0;
        java.lang.Object r1;
        float[] $r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.graphics.Matrix;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.ui.graphics.Matrix: float[] values>;

        $z0 = staticinvoke <androidx.compose.ui.graphics.Matrix: boolean equals-impl(float[],java.lang.Object)>($r2, r1);

        return $z0;
    }

    private void <init>(float[])
    {
        androidx.compose.ui.graphics.Matrix r0;
        float[] r1;

        r0 := @this: androidx.compose.ui.graphics.Matrix;

        r1 := @parameter0: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.graphics.Matrix: float[] values> = r1;

        return;
    }

    public static float[] constructor-impl(float[])
    {
        float[] r0;

        r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "values");

        return r0;
    }

    public static float[] constructor-impl$default(float[], int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r0;
        float[] r1, $r2, r3;

        r3 := @parameter0: float[];

        i0 := @parameter1: int;

        r0 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r1 = newarray (float)[16];

        r1[0] = 1.0F;

        r1[1] = 0.0F;

        r1[2] = 0.0F;

        r1[3] = 0.0F;

        r1[4] = 0.0F;

        r1[5] = 1.0F;

        r1[6] = 0.0F;

        r1[7] = 0.0F;

        r1[8] = 0.0F;

        r1[9] = 0.0F;

        r1[10] = 1.0F;

        r1[11] = 0.0F;

        r1[12] = 0.0F;

        r1[13] = 0.0F;

        r1[14] = 0.0F;

        r1[15] = 1.0F;

        r3 = r1;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.graphics.Matrix: float[] constructor-impl(float[])>(r3);

        return $r2;
    }

    public static final androidx.compose.ui.graphics.Matrix box-impl(float[])
    {
        float[] r0;
        androidx.compose.ui.graphics.Matrix $r1;

        r0 := @parameter0: float[];

        $r1 = new androidx.compose.ui.graphics.Matrix;

        specialinvoke $r1.<androidx.compose.ui.graphics.Matrix: void <init>(float[])>(r0);

        return $r1;
    }

    public final float[] unbox-impl()
    {
        androidx.compose.ui.graphics.Matrix r0;
        float[] $r1;

        r0 := @this: androidx.compose.ui.graphics.Matrix;

        $r1 = r0.<androidx.compose.ui.graphics.Matrix: float[] values>;

        return $r1;
    }

    public static final boolean equals-impl0(float[], float[])
    {
        float[] r0, r1;
        boolean $z0;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r0, r1);

        return $z0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.graphics.Matrix$Companion $r0;

        $r0 = new androidx.compose.ui.graphics.Matrix$Companion;

        specialinvoke $r0.<androidx.compose.ui.graphics.Matrix$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.graphics.Matrix: androidx.compose.ui.graphics.Matrix$Companion Companion> = $r0;

        return;
    }

