androidx.ui.graphics.Paint
<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>
<androidx.ui.graphics.Paint: androidx.ui.graphics.BlendMode _blendMode>
<androidx.ui.graphics.Paint: android.graphics.Shader internalShader>
<androidx.ui.graphics.Paint: androidx.ui.graphics.ColorFilter internalColorFilter>
    public void <init>()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        androidx.ui.graphics.BlendMode $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: android.graphics.Paint makeNativePaint()>();

        r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint> = $r1;

        $r2 = <androidx.ui.graphics.BlendMode: androidx.ui.graphics.BlendMode srcOver>;

        r0.<androidx.ui.graphics.Paint: androidx.ui.graphics.BlendMode _blendMode> = $r2;

        return;
    }

    public final android.graphics.Paint asFrameworkPaint()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        return $r1;
    }

    public final float getAlpha()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        float $f0;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $f0 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: float getNativeAlpha(android.graphics.Paint)>($r1);

        return $f0;
    }

    public final void setAlpha(float)
    {
        androidx.ui.graphics.Paint r0;
        float f0;
        android.graphics.Paint $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeAlpha(android.graphics.Paint,float)>($r1, f0);

        return;
    }

    public final boolean isAntiAlias()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        boolean $z0;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $z0 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: boolean getNativeAntiAlias(android.graphics.Paint)>($r1);

        return $z0;
    }

    public final void setAntiAlias(boolean)
    {
        androidx.ui.graphics.Paint r0;
        boolean z0;
        android.graphics.Paint $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeAntiAlias(android.graphics.Paint,boolean)>($r1, z0);

        return;
    }

    public final long getColor()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        long $l0;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $l0 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: long getNativeColor(android.graphics.Paint)>($r1);

        return $l0;
    }

    public final void setColor-QEYXlZo(long)
    {
        androidx.ui.graphics.Paint r0;
        long l0;
        android.graphics.Paint $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeColor-6CSLprE(android.graphics.Paint,long)>($r1, l0);

        return;
    }

    public final androidx.ui.graphics.BlendMode getBlendMode()
    {
        androidx.ui.graphics.Paint r0;
        androidx.ui.graphics.BlendMode $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: androidx.ui.graphics.BlendMode _blendMode>;

        return $r1;
    }

    public final void setBlendMode(androidx.ui.graphics.BlendMode)
    {
        androidx.ui.graphics.Paint r0;
        androidx.ui.graphics.BlendMode r1;
        android.graphics.Paint $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        r1 := @parameter0: androidx.ui.graphics.BlendMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r0.<androidx.ui.graphics.Paint: androidx.ui.graphics.BlendMode _blendMode> = r1;

        $r2 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeBlendMode(android.graphics.Paint,androidx.ui.graphics.BlendMode)>($r2, r1);

        return;
    }

    public final androidx.ui.graphics.PaintingStyle getStyle()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        androidx.ui.graphics.PaintingStyle $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $r2 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: androidx.ui.graphics.PaintingStyle getNativeStyle(android.graphics.Paint)>($r1);

        return $r2;
    }

    public final void setStyle(androidx.ui.graphics.PaintingStyle)
    {
        androidx.ui.graphics.Paint r0;
        androidx.ui.graphics.PaintingStyle r1;
        android.graphics.Paint $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        r1 := @parameter0: androidx.ui.graphics.PaintingStyle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeStyle(android.graphics.Paint,androidx.ui.graphics.PaintingStyle)>($r2, r1);

        return;
    }

    public final float getStrokeWidth()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        float $f0;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $f0 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: float getNativeStrokeWidth(android.graphics.Paint)>($r1);

        return $f0;
    }

    public final void setStrokeWidth(float)
    {
        androidx.ui.graphics.Paint r0;
        float f0;
        android.graphics.Paint $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeStrokeWidth(android.graphics.Paint,float)>($r1, f0);

        return;
    }

    public final androidx.ui.graphics.StrokeCap getStrokeCap()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        androidx.ui.graphics.StrokeCap $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $r2 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: androidx.ui.graphics.StrokeCap getNativeStrokeCap(android.graphics.Paint)>($r1);

        return $r2;
    }

    public final void setStrokeCap(androidx.ui.graphics.StrokeCap)
    {
        androidx.ui.graphics.Paint r0;
        androidx.ui.graphics.StrokeCap r1;
        android.graphics.Paint $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        r1 := @parameter0: androidx.ui.graphics.StrokeCap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeStrokeCap(android.graphics.Paint,androidx.ui.graphics.StrokeCap)>($r2, r1);

        return;
    }

    public final androidx.ui.graphics.StrokeJoin getStrokeJoin()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        androidx.ui.graphics.StrokeJoin $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $r2 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: androidx.ui.graphics.StrokeJoin getNativeStrokeJoin(android.graphics.Paint)>($r1);

        return $r2;
    }

    public final void setStrokeJoin(androidx.ui.graphics.StrokeJoin)
    {
        androidx.ui.graphics.Paint r0;
        androidx.ui.graphics.StrokeJoin r1;
        android.graphics.Paint $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        r1 := @parameter0: androidx.ui.graphics.StrokeJoin;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeStrokeJoin(android.graphics.Paint,androidx.ui.graphics.StrokeJoin)>($r2, r1);

        return;
    }

    public final float getStrokeMiterLimit()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        float $f0;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $f0 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: float getNativeStrokeMiterLimit(android.graphics.Paint)>($r1);

        return $f0;
    }

    public final void setStrokeMiterLimit(float)
    {
        androidx.ui.graphics.Paint r0;
        float f0;
        android.graphics.Paint $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeStrokeMiterLimit(android.graphics.Paint,float)>($r1, f0);

        return;
    }

    public final androidx.ui.graphics.FilterQuality getFilterQuality()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Paint $r1;
        androidx.ui.graphics.FilterQuality $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        $r2 = staticinvoke <androidx.ui.graphics.AndroidPaintKt: androidx.ui.graphics.FilterQuality getNativeFilterQuality(android.graphics.Paint)>($r1);

        return $r2;
    }

    public final void setFilterQuality(androidx.ui.graphics.FilterQuality)
    {
        androidx.ui.graphics.Paint r0;
        androidx.ui.graphics.FilterQuality r1;
        android.graphics.Paint $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        r1 := @parameter0: androidx.ui.graphics.FilterQuality;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeFilterQuality(android.graphics.Paint,androidx.ui.graphics.FilterQuality)>($r2, r1);

        return;
    }

    public final android.graphics.Shader getShader()
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Shader $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: android.graphics.Shader internalShader>;

        return $r1;
    }

    public final void setShader-DcPGf4I(android.graphics.Shader)
    {
        androidx.ui.graphics.Paint r0;
        android.graphics.Shader r1, r2, $r4;
        android.graphics.Paint $r3;

        r0 := @this: androidx.ui.graphics.Paint;

        r1 := @parameter0: android.graphics.Shader;

        r0.<androidx.ui.graphics.Paint: android.graphics.Shader internalShader> = r1;

        $r3 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        r2 = r0.<androidx.ui.graphics.Paint: android.graphics.Shader internalShader>;

        if r2 != null goto label1;

        $r4 = (android.graphics.Shader) null;

        goto label2;

     label1:
        $r4 = r2;

     label2:
        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeShader(android.graphics.Paint,android.graphics.Shader)>($r3, $r4);

        return;
    }

    public final androidx.ui.graphics.ColorFilter getColorFilter()
    {
        androidx.ui.graphics.Paint r0;
        androidx.ui.graphics.ColorFilter $r1;

        r0 := @this: androidx.ui.graphics.Paint;

        $r1 = r0.<androidx.ui.graphics.Paint: androidx.ui.graphics.ColorFilter internalColorFilter>;

        return $r1;
    }

    public final void setColorFilter(androidx.ui.graphics.ColorFilter)
    {
        androidx.ui.graphics.Paint r0;
        androidx.ui.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: androidx.ui.graphics.Paint;

        r1 := @parameter0: androidx.ui.graphics.ColorFilter;

        r0.<androidx.ui.graphics.Paint: androidx.ui.graphics.ColorFilter internalColorFilter> = r1;

        $r2 = r0.<androidx.ui.graphics.Paint: android.graphics.Paint internalPaint>;

        staticinvoke <androidx.ui.graphics.AndroidPaintKt: void setNativeColorFilter(android.graphics.Paint,androidx.ui.graphics.ColorFilter)>($r2, r1);

        return;
    }

