androidx.compose.runtime.collection.MutableVector
<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>
<androidx.compose.runtime.collection.MutableVector: java.util.List list>
<androidx.compose.runtime.collection.MutableVector: int size>
<androidx.compose.runtime.collection.MutableVector: int $stable>
    public void <init>(java.lang.Object[], int)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object[] r1;
        int i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content> = r1;

        r0.<androidx.compose.runtime.collection.MutableVector: int size> = i0;

        return;
    }

    public final java.lang.Object[] getContent()
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object[] $r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $r1 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        return $r1;
    }

    public final void setContent(java.lang.Object[])
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object[] r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content> = r1;

        return;
    }

    public static void getContent$annotations()
    {
        return;
    }

    public final int getSize()
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        return $i0;
    }

    public final int getLastIndex()
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int $i0, $i1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public final kotlin.ranges.IntRange getIndices()
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.ranges.IntRange $r1;
        int $i0, $i1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $r1 = new kotlin.ranges.IntRange;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i1 = $i0 - 1;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        return $r1;
    }

    public final boolean add(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i2 = $i1 + 1;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: void ensureCapacity(int)>($i2);

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i3 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $r2[$i3] = r1;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i4 = i0 + 1;

        r0.<androidx.compose.runtime.collection.MutableVector: int size> = $i4;

        return 1;
    }

    public final void add(int, java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object r1;
        java.lang.Object[] r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i2 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i3 = $i2 + 1;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: void ensureCapacity(int)>($i3);

        r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i4 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 == $i4 goto label1;

        $i7 = i0 + 1;

        $i6 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>(r2, r2, $i7, i0, $i6);

     label1:
        r2[i0] = r1;

        i1 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i5 = i1 + 1;

        r0.<androidx.compose.runtime.collection.MutableVector: int size> = $i5;

        return;
    }

    public final boolean addAll(int, java.util.List)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        java.util.List r1;
        java.lang.Object[] r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i2 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        $i4 = $i2 + $i3;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: void ensureCapacity(int)>($i4);

        r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i5 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 == $i5 goto label2;

        $i10 = interfaceinvoke r1.<java.util.List: int size()>();

        $i12 = i0 + $i10;

        $i11 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>(r2, r2, $i12, i0, $i11);

     label2:
        i13 = 0;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label3:
        if i13 >= i1 goto label4;

        $i9 = i0 + i13;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i13);

        r2[$i9] = $r3;

        i13 = i13 + 1;

        goto label3;

     label4:
        $i6 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i7 = interfaceinvoke r1.<java.util.List: int size()>();

        $i8 = $i6 + $i7;

        r0.<androidx.compose.runtime.collection.MutableVector: int size> = $i8;

        return 1;
    }

    public final boolean addAll(int, androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.runtime.collection.MutableVector r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.Object[] r2, $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $z0 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i2 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i1 = r1.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i3 = $i2 + $i1;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: void ensureCapacity(int)>($i3);

        r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i4 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 == $i4 goto label2;

        $i9 = r1.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i11 = i0 + $i9;

        $i10 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>(r2, r2, $i11, i0, $i10);

     label2:
        $r3 = r1.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i5 = r1.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>($r3, r2, i0, 0, $i5);

        $i7 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i6 = r1.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i8 = $i7 + $i6;

        r0.<androidx.compose.runtime.collection.MutableVector: int size> = $i8;

        return 1;
    }

    public final boolean addAll(java.util.List)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.util.List r1;
        int $i0;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $z1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean addAll(int,java.util.List)>($i0, r1);

        return $z1;
    }

    public final boolean addAll(androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.runtime.collection.MutableVector r0, r1;
        int $i0;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $z1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean addAll(int,androidx.compose.runtime.collection.MutableVector)>($i0, r1);

        return $z1;
    }

    public final boolean addAll(java.lang.Object[])
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return 0;

     label3:
        $i2 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i1 = lengthof r1;

        $i3 = $i2 + $i1;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: void ensureCapacity(int)>($i3);

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i4 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)>(r1, $r2, $i4, 0, 0, 12, null);

        $i6 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i5 = lengthof r1;

        $i7 = $i6 + $i5;

        r0.<androidx.compose.runtime.collection.MutableVector: int size> = $i7;

        return 1;
    }

    public final boolean addAll(int, java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.util.Collection r1;
        java.lang.Object[] r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2, $z3;
        java.lang.Iterable $r7;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        return 0;

     label1:
        $i3 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i4 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i5 = $i3 + $i4;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: void ensureCapacity(int)>($i5);

        r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i6 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 == $i6 goto label2;

        $i12 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i14 = i0 + $i12;

        $i13 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>(r2, r2, $i14, i0, $i13);

     label2:
        i15 = 0;

        $r7 = (java.lang.Iterable) r1;

        r3 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $i10 = i15;

        i15 = i15 + 1;

        i1 = $i10;

        if i1 >= 0 goto label4;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label4:
        r5 = r4;

        i2 = i1;

        $i11 = i0 + i2;

        r2[$i11] = r5;

        goto label3;

     label5:
        $i7 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i8 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i9 = $i7 + $i8;

        r0.<androidx.compose.runtime.collection.MutableVector: int size> = $i9;

        return 1;
    }

    public final boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.util.Collection r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $z0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean addAll(int,java.util.Collection)>($i0, r1);

        return $z0;
    }

    public final boolean any(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = 0;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = r2[i1];

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label3:
        return 0;
    }

    public final boolean reversedAny(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = i0 - 1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = r2[i1];

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label3:
        return 0;
    }

    public final java.util.List asMutableList()
    {
        androidx.compose.runtime.collection.MutableVector r0;
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r1, r2, $r3;
        java.util.List $r4, $r5;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $r5 = r0.<androidx.compose.runtime.collection.MutableVector: java.util.List list>;

        if $r5 != null goto label1;

        $r3 = new androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        specialinvoke $r3.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: void <init>(androidx.compose.runtime.collection.MutableVector)>(r0);

        r1 = $r3;

        r2 = r1;

        $r4 = (java.util.List) r2;

        r0.<androidx.compose.runtime.collection.MutableVector: java.util.List list> = $r4;

        $r5 = (java.util.List) r1;

     label1:
        return $r5;
    }

    public final void clear()
    {
        androidx.compose.runtime.collection.MutableVector r0, r2;
        java.lang.Object[] r1;
        int $i0, i1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        r2 = r0;

        $i0 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i1 = $i0 - 1;

     label1:
        if -1 >= i1 goto label2;

        r1[i1] = null;

        i1 = i1 + -1;

        goto label1;

     label2:
        r0.<androidx.compose.runtime.collection.MutableVector: int size> = 0;

        return;
    }

    public final boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0, r4, r5;
        java.lang.Object r1, $r3;
        int i0, $i1, i2;
        java.lang.Object[] $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        i2 = 0;

        r4 = r0;

        $i1 = virtualinvoke r4.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i0 = $i1 - 1;

        if i2 > i0 goto label3;

     label1:
        r5 = r0;

        $r2 = virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r3 = $r2[i2];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        if i2 == i0 goto label3;

        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public final boolean containsAll(java.util.List)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.util.List r1;
        int i0, i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        i1 = 0;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public final boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.util.Collection r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2, $z3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = (java.lang.Iterable) r1;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        $z3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean contains(java.lang.Object)>(r5);

        if $z3 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public final boolean containsAll(androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.runtime.collection.MutableVector r0, r1, r3, r7;
        kotlin.ranges.IntRange r2, $r4;
        int $i0, $i1, i2, $i3;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        r7 = r1;

        $r4 = new kotlin.ranges.IntRange;

        $i0 = virtualinvoke r7.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i1 = $i0 - 1;

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        r2 = $r4;

        i2 = virtualinvoke r2.<kotlin.ranges.IntRange: int getFirst()>();

        $i3 = virtualinvoke r2.<kotlin.ranges.IntRange: int getLast()>();

        if i2 > $i3 goto label3;

     label1:
        r3 = r1;

        $r5 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r6 = $r5[i2];

        $z1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean contains(java.lang.Object)>($r6);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        if i2 == $i3 goto label3;

        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public final boolean contentEquals(androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.runtime.collection.MutableVector r0, r1, r6, r7, r8;
        int i0, $i1, $i2, $i3, i4;
        java.lang.Object[] $r2, $r4;
        java.lang.Object $r3, $r5;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $i2 = r1.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if $i2 == $i1 goto label1;

        return 0;

     label1:
        i4 = 0;

        r6 = r0;

        $i3 = virtualinvoke r6.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i0 = $i3 - 1;

        if i4 > i0 goto label4;

     label2:
        r7 = r1;

        $r2 = virtualinvoke r7.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r3 = $r2[i4];

        r8 = r0;

        $r4 = virtualinvoke r8.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r5 = $r4[i4];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        if i4 == i0 goto label4;

        i4 = i4 + 1;

        goto label2;

     label4:
        return 1;
    }

    public final void ensureCapacity(int)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object[] r1, $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        r1 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i2 = lengthof r1;

        if $i2 >= i0 goto label1;

        $i3 = lengthof r1;

        $i4 = $i3 * 2;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i4);

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "copyOf(this, newSize)");

        r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content> = $r2;

     label1:
        return;
    }

    public final java.lang.Object first()
    {
        androidx.compose.runtime.collection.MutableVector r0, r1;
        byte b0;
        boolean $z1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $z1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("MutableVector is empty.");

        throw $r4;

     label1:
        r1 = r0;

        b0 = 0;

        $r2 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r3 = $r2[b0];

        return $r3;
    }

    public final java.lang.Object first(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r6;
        java.lang.Object r3, $r7;
        kotlin.KotlinNothingValueException $r5;
        java.lang.Boolean $r8;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = 0;

        $r6 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r6;

     label1:
        r3 = r2[i1];

        $r7 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label3:
        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Void throwNoSuchElementException()>();

        $r5 = new kotlin.KotlinNothingValueException;

        specialinvoke $r5.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r5;
    }

    public final java.lang.Object firstOrNull()
    {
        androidx.compose.runtime.collection.MutableVector r0, r1;
        byte b0;
        boolean $z2;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $z2 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        r1 = r0;

        b0 = 0;

        $r2 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r3 = $r2[b0];

     label2:
        return $r3;
    }

    public final java.lang.Object firstOrNull(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r4;
        java.lang.Object r3, $r5;
        java.lang.Boolean $r6;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = 0;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r4;

     label1:
        r3 = r2[i1];

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label3:
        return null;
    }

    public final java.lang.Object fold(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1, $r5, r6;
        kotlin.jvm.functions.Function2 r2;
        int i0, i1;
        java.lang.Object[] r3, $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        r6 = r1;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = 0;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r4;

     label1:
        $r5 = r3[i1];

        r6 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r6, $r5);

        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label2:
        return r6;
    }

    public final java.lang.Object foldIndexed(java.lang.Object, kotlin.jvm.functions.Function3)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1, $r6, r7;
        kotlin.jvm.functions.Function3 r2;
        int i0, i1;
        java.lang.Object[] r3, $r4;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        r7 = r1;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = 0;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r4;

     label1:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6 = r3[i1];

        r7 = interfaceinvoke r2.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, r7, $r6);

        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label2:
        return r7;
    }

    public final java.lang.Object foldRight(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1, $r5, r6;
        kotlin.jvm.functions.Function2 r2;
        int i0, i1;
        java.lang.Object[] r3, $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        r6 = r1;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = i0 - 1;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r4;

     label1:
        $r5 = r3[i1];

        r6 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, r6);

        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label2:
        return r6;
    }

    public final java.lang.Object foldRightIndexed(java.lang.Object, kotlin.jvm.functions.Function3)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1, $r6, r7;
        kotlin.jvm.functions.Function3 r2;
        int i0, i1;
        java.lang.Object[] r3, $r4;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        r7 = r1;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = i0 - 1;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r4;

     label1:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6 = r3[i1];

        r7 = interfaceinvoke r2.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, r7);

        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label2:
        return r7;
    }

    public final void forEach(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = 0;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = r2[i1];

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label2:
        return;
    }

    public final void forEachIndexed(kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function2 r1;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = 0;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5 = r2[i1];

        interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label2:
        return;
    }

    public final void forEachReversed(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        i1 = i0 - 1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = r2[i1];

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label2:
        return;
    }

    public final void forEachReversedIndexed(kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function2 r1;
        java.lang.Object[] r2, $r3;
        int $i0, $i1, i2;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if $i0 <= 0 goto label2;

        $i1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i2 = $i1 - 1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r5 = r2[i2];

        interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        i2 = i2 + -1;

        if i2 >= 0 goto label1;

     label2:
        return;
    }

    public final java.lang.Object get(int)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r2 = $r1[i0];

        return $r2;
    }

    public final int indexOf(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1, $r4;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 <= 0 goto label3;

        i1 = 0;

        $r3 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = r2[i1];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r4);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label3:
        return -1;
    }

    public final int indexOfFirst(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = 0;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = r2[i1];

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label3:
        return -1;
    }

    public final int indexOfLast(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = i0 - 1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = r2[i1];

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label3:
        return -1;
    }

    public final boolean isEmpty()
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isNotEmpty()
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.lang.Object last()
    {
        androidx.compose.runtime.collection.MutableVector r0, r1, r5;
        boolean $z0;
        int $i0, i1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $z0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("MutableVector is empty.");

        throw $r4;

     label1:
        r1 = r0;

        r5 = r0;

        $i0 = virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i1 = $i0 - 1;

        $r2 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r3 = $r2[i1];

        return $r3;
    }

    public final java.lang.Object last(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r6;
        java.lang.Object r3, $r7;
        kotlin.KotlinNothingValueException $r5;
        java.lang.Boolean $r8;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = i0 - 1;

        $r6 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r6;

     label1:
        r3 = r2[i1];

        $r7 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label3:
        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Void throwNoSuchElementException()>();

        $r5 = new kotlin.KotlinNothingValueException;

        specialinvoke $r5.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r5;
    }

    public final int lastIndexOf(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1, $r4;
        int i0, i1;
        java.lang.Object[] r2, $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 <= 0 goto label3;

        i1 = i0 - 1;

        $r3 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

     label1:
        $r4 = r2[i1];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r4);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label3:
        return -1;
    }

    public final java.lang.Object lastOrNull()
    {
        androidx.compose.runtime.collection.MutableVector r0, r1, r4;
        boolean $z1;
        int $i0, i1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $z1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        r1 = r0;

        r4 = r0;

        $i0 = virtualinvoke r4.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i1 = $i0 - 1;

        $r2 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r3 = $r2[i1];

     label2:
        return $r3;
    }

    public final java.lang.Object lastOrNull(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object[] r2, $r4;
        java.lang.Object r3, $r5;
        java.lang.Boolean $r6;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = i0 - 1;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r4;

     label1:
        r3 = r2[i1];

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label3:
        return null;
    }

    public final java.lang.Object[] map(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0, r3;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1, i2;
        java.lang.Object[] r2, $r4;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        i2 = 0;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "R");

        r2 = newarray (java.lang.Object)[i0];

     label1:
        if i2 >= i0 goto label2;

        i1 = i2;

        r3 = r0;

        $r4 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r5 = $r4[i1];

        $r6 = (java.lang.Object) $r5;

        $r7 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        r2[i1] = $r7;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public final java.lang.Object[] mapIndexed(kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.collection.MutableVector r0, r3;
        kotlin.jvm.functions.Function2 r1;
        int i0, i1, i2;
        java.lang.Object[] r2, $r5;
        java.lang.Integer $r4;
        java.lang.Object $r6, $r7, $r8;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        i2 = 0;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "R");

        r2 = newarray (java.lang.Object)[i0];

     label1:
        if i2 >= i0 goto label2;

        i1 = i2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r3 = r0;

        $r5 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r6 = $r5[i1];

        $r7 = (java.lang.Object) $r6;

        $r8 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r7);

        r2[i1] = $r8;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public final androidx.compose.runtime.collection.MutableVector mapIndexedNotNull(kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.collection.MutableVector r0, $r5;
        kotlin.jvm.functions.Function2 r1;
        int i0, $i1, i2, i3;
        java.lang.Object[] r2, r3, $r6;
        java.lang.Object r4, $r8;
        java.lang.Integer $r7;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "R?");

        r2 = newarray (java.lang.Object)[i0];

        i2 = 0;

        if i0 <= 0 goto label3;

        $r6 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = (java.lang.Object[]) $r6;

        i3 = 0;

     label1:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r8 = r3[i3];

        r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r7, $r8);

        if r4 == null goto label2;

        $i1 = i2;

        i2 = i2 + 1;

        r2[$i1] = r4;

     label2:
        i3 = i3 + 1;

        if i3 < i0 goto label1;

     label3:
        $r5 = new androidx.compose.runtime.collection.MutableVector;

        specialinvoke $r5.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>(r2, i2);

        return $r5;
    }

    public final androidx.compose.runtime.collection.MutableVector mapNotNull(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0, $r5;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, i2, i3;
        java.lang.Object[] r2, r3, $r6;
        java.lang.Object r4, $r7;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "R?");

        r2 = newarray (java.lang.Object)[i0];

        i2 = 0;

        if i0 <= 0 goto label3;

        $r6 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = (java.lang.Object[]) $r6;

        i3 = 0;

     label1:
        $r7 = r3[i3];

        r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        if r4 == null goto label2;

        $i1 = i2;

        i2 = i2 + 1;

        r2[$i1] = r4;

     label2:
        i3 = i3 + 1;

        if i3 < i0 goto label1;

     label3:
        $r5 = new androidx.compose.runtime.collection.MutableVector;

        specialinvoke $r5.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>(r2, i2);

        return $r5;
    }

    public final void plusAssign(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void minusAssign(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public final boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.lang.Object r1;
        int i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.lang.Object;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>(i0);

        return 1;

     label1:
        return 0;
    }

    public final boolean removeAll(java.util.List)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.util.List r1;
        int i0, i1, $i2, i3;
        java.lang.Object $r2;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        i3 = 0;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i3 >= i1 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean remove(java.lang.Object)>($r2);

        i3 = i3 + 1;

        goto label1;

     label2:
        $i2 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 == $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public final boolean removeAll(androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.runtime.collection.MutableVector r0, r1, r4, r5;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        boolean $z3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        i4 = 0;

        r4 = r1;

        $i2 = virtualinvoke r4.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i1 = $i2 - 1;

        if i4 > i1 goto label2;

     label1:
        r5 = r1;

        $r2 = virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r3 = $r2[i4];

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean remove(java.lang.Object)>($r3);

        if i4 == i1 goto label2;

        i4 = i4 + 1;

        goto label1;

     label2:
        $i3 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 == $i3 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public final boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.util.Collection r1;
        int i0, $i1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2, $z3, $z5;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        return 0;

     label1:
        i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $r2 = (java.lang.Iterable) r1;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: boolean remove(java.lang.Object)>(r5);

        goto label2;

     label3:
        $i1 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 == $i1 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        return $z5;
    }

    public final java.lang.Object removeAt(int)
    {
        androidx.compose.runtime.collection.MutableVector r0, r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.Object[] r1;
        java.lang.Object r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        r1 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        r2 = r1[i0];

        r4 = r0;

        $i1 = virtualinvoke r4.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i2 = $i1 - 1;

        if i0 == $i2 goto label1;

        $i6 = i0 + 1;

        $i5 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>(r1, r1, i0, $i6, $i5);

     label1:
        i7 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i3 = i7 + -1;

        r0.<androidx.compose.runtime.collection.MutableVector: int size> = $i3;

        $i4 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        r1[$i4] = null;

        return r2;
    }

    public final void removeRange(int, int)
    {
        androidx.compose.runtime.collection.MutableVector r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Object[] $r2, $r3, $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= i0 goto label4;

        $i4 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i1 >= $i4 goto label1;

        $r4 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $r3 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $i8 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)>($r4, $r3, i0, i1, $i8);

     label1:
        $i6 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        $i5 = i1 - i0;

        i2 = $i6 - $i5;

        i9 = i2;

        r1 = r0;

        $i7 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i3 = $i7 - 1;

        if i9 > i3 goto label3;

     label2:
        $r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        $r2[i9] = null;

        if i9 == i3 goto label3;

        i9 = i9 + 1;

        goto label2;

     label3:
        r0.<androidx.compose.runtime.collection.MutableVector: int size> = i2;

     label4:
        return;
    }

    public final boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector r0, r4;
        java.util.Collection r1;
        int i0, $i1, $i2, i3;
        java.lang.Object[] $r2;
        boolean $z1, $z3;
        java.lang.Object r5;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        r4 = r0;

        $i1 = virtualinvoke r4.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i3 = $i1 - 1;

     label1:
        if -1 >= i3 goto label3;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        r5 = $r2[i3];

        $z1 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r5);

        if $z1 != 0 goto label2;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>(i3);

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        $i2 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        if i0 == $i2 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public final java.lang.Object set(int, java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        int i0;
        java.lang.Object r1, r3;
        java.lang.Object[] r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        r3 = r2[i0];

        r2[i0] = r1;

        return r3;
    }

    public final void sortWith(java.util.Comparator)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.util.Comparator r1;
        java.lang.Object[] $r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "comparator");

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] content>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector: int size>;

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator,int,int)>($r2, r1, 0, $i0);

        return;
    }

    public final int sumBy(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, i2, i3;
        java.lang.Object[] r2, $r3;
        java.lang.Object $r4, $r5;
        java.lang.Number $r6;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selector");

        i2 = 0;

        i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r2 = $r3;

        i3 = 0;

     label1:
        $r4 = r2[i3];

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Number) $r5;

        $i1 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        if i3 < i0 goto label1;

     label2:
        return i2;
    }

    public final java.lang.Void throwNoSuchElementException()
    {
        androidx.compose.runtime.collection.MutableVector r0;
        java.util.NoSuchElementException $r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("MutableVector contains no element matching the predicate.");

        throw $r1;
    }

    static void <clinit>()
    {
        <androidx.compose.runtime.collection.MutableVector: int $stable> = 8;

        return;
    }

androidx.compose.runtime.collection.MutableVector$MutableVectorList
<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>
    public void <init>(androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        androidx.compose.runtime.collection.MutableVector r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "vector");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector> = r1;

        return;
    }

    public int getSize()
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        androidx.compose.runtime.collection.MutableVector $r1;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        $r1 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $i0 = virtualinvoke $r1.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.lang.Object r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.util.Collection r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public java.lang.Object get(int)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int i0;
        androidx.compose.runtime.collection.MutableVector r1;
        java.util.List $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        i0 := @parameter0: int;

        $r2 = (java.util.List) r0;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void access$checkIndex(java.util.List,int)>($r2, i0);

        r1 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $r3 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r4 = $r3[i0];

        return $r4;
    }

    public int indexOf(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.lang.Object r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $i0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public boolean isEmpty()
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        androidx.compose.runtime.collection.MutableVector $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        $r1 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r1.<androidx.compose.runtime.collection.MutableVector: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        androidx.compose.runtime.collection.MutableVector$VectorListIterator $r1;
        java.util.List $r2;
        java.util.Iterator $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        $r1 = new androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $r2 = (java.util.List) r0;

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: void <init>(java.util.List,int)>($r2, 0);

        $r3 = (java.util.Iterator) $r1;

        return $r3;
    }

    public int lastIndexOf(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.lang.Object r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $i0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: int lastIndexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public boolean add(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.lang.Object r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public void add(int, java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int i0;
        java.lang.Object r1;
        androidx.compose.runtime.collection.MutableVector $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: void add(int,java.lang.Object)>(i0, r1);

        return;
    }

    public boolean addAll(int, java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int i0;
        java.util.Collection r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean addAll(int,java.util.Collection)>(i0, r1);

        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.util.Collection r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean addAll(java.util.Collection)>(r1);

        return $z0;
    }

    public void clear()
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        androidx.compose.runtime.collection.MutableVector $r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        $r1 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        virtualinvoke $r1.<androidx.compose.runtime.collection.MutableVector: void clear()>();

        return;
    }

    public java.util.ListIterator listIterator()
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        androidx.compose.runtime.collection.MutableVector$VectorListIterator $r1;
        java.util.List $r2;
        java.util.ListIterator $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        $r1 = new androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $r2 = (java.util.List) r0;

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: void <init>(java.util.List,int)>($r2, 0);

        $r3 = (java.util.ListIterator) $r1;

        return $r3;
    }

    public java.util.ListIterator listIterator(int)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int i0;
        androidx.compose.runtime.collection.MutableVector$VectorListIterator $r1;
        java.util.List $r2;
        java.util.ListIterator $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        i0 := @parameter0: int;

        $r1 = new androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $r2 = (java.util.List) r0;

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: void <init>(java.util.List,int)>($r2, i0);

        $r3 = (java.util.ListIterator) $r1;

        return $r3;
    }

    public boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.lang.Object r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.util.Collection r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean removeAll(java.util.Collection)>(r1);

        return $z0;
    }

    public java.lang.Object removeAt(int)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int i0;
        java.util.List $r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        i0 := @parameter0: int;

        $r1 = (java.util.List) r0;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void access$checkIndex(java.util.List,int)>($r1, i0);

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>(i0);

        return $r3;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.util.Collection r1;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean retainAll(java.util.Collection)>(r1);

        return $z0;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int i0;
        java.lang.Object r1, $r4;
        java.util.List $r2;
        androidx.compose.runtime.collection.MutableVector $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (java.util.List) r0;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void access$checkIndex(java.util.List,int)>($r2, i0);

        $r3 = r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: androidx.compose.runtime.collection.MutableVector vector>;

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return $r4;
    }

    public java.util.List subList(int, int)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int i0, i1;
        java.util.List $r1, $r3, $r4;
        androidx.compose.runtime.collection.MutableVector$SubList $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = (java.util.List) r0;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void access$checkSubIndex(java.util.List,int,int)>($r1, i0, i1);

        $r2 = new androidx.compose.runtime.collection.MutableVector$SubList;

        $r3 = (java.util.List) r0;

        specialinvoke $r2.<androidx.compose.runtime.collection.MutableVector$SubList: void <init>(java.util.List,int,int)>($r3, i0, i1);

        $r4 = (java.util.List) $r2;

        return $r4;
    }

    public final volatile int size()
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: int getSize()>();

        return $i0;
    }

    public final volatile java.lang.Object remove(int)
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector$MutableVectorList: java.lang.Object removeAt(int)>(i0);

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.lang.Object[] r1, $r3;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "array");

        $r2 = (java.util.Collection) r0;

        $r3 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])>($r2, r1);

        return $r3;
    }

    public java.lang.Object[] toArray()
    {
        androidx.compose.runtime.collection.MutableVector$MutableVectorList r0;
        java.util.Collection $r1;
        java.lang.Object[] $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$MutableVectorList;

        $r1 = (java.util.Collection) r0;

        $r2 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)>($r1);

        return $r2;
    }

androidx.compose.runtime.collection.MutableVector$SubList
<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>
<androidx.compose.runtime.collection.MutableVector$SubList: int start>
<androidx.compose.runtime.collection.MutableVector$SubList: int end>
    public void <init>(java.util.List, int, int)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.util.List r1;
        int i0, i1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "list");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list> = r1;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start> = i0;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = i1;

        return;
    }

    public int getSize()
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.lang.Object r1, $r3;
        int i0, i1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.lang.Object;

        i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.util.Collection r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2, $z3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = (java.lang.Iterable) r1;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        $z3 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector$SubList: boolean contains(java.lang.Object)>(r5);

        if $z3 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public java.lang.Object get(int)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int i0, $i1, $i2;
        java.util.List $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        i0 := @parameter0: int;

        $r1 = (java.util.List) r0;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void access$checkIndex(java.util.List,int)>($r1, i0);

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        $i2 = i0 + $i1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        return $r3;
    }

    public int indexOf(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.lang.Object r1, $r3;
        int i0, $i1, $i2, i3;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.lang.Object;

        i3 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

     label1:
        if i3 >= i0 goto label3;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z0 == 0 goto label2;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        $i2 = i3 - $i1;

        return $i2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public boolean isEmpty()
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        androidx.compose.runtime.collection.MutableVector$VectorListIterator $r1;
        java.util.List $r2;
        java.util.Iterator $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        $r1 = new androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $r2 = (java.util.List) r0;

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: void <init>(java.util.List,int)>($r2, 0);

        $r3 = (java.util.Iterator) $r1;

        return $r3;
    }

    public int lastIndexOf(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.lang.Object r1, $r3;
        int i0, $i1, $i2, $i3, i4;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        i4 = $i1 - 1;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        if i0 > i4 goto label3;

     label1:
        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i4);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z0 == 0 goto label2;

        $i2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        $i3 = i4 - $i2;

        return $i3;

     label2:
        if i4 == i0 goto label3;

        i4 = i4 + -1;

        goto label1;

     label3:
        return -1;
    }

    public boolean add(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.lang.Object r1;
        int i0, $i1;
        java.util.List $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i1 = i0 + 1;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = $i1;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        return 1;
    }

    public void add(int, java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $i2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        $i3 = i0 + $i2;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i3, r1);

        i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i4 = i1 + 1;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = $i4;

        return;
    }

    public boolean addAll(int, java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Collection r1;
        java.util.List $r2;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        $i2 = i0 + $i1;

        interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>($i2, r1);

        $i3 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i4 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i5 = $i3 + $i4;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = $i5;

        $i6 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i6 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.util.Collection r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.List $r2;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>($i0, r1);

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i2 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i3 = $i1 + $i2;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = $i3;

        $i4 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i4 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void clear()
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int i0, $i1, $i2, i3;
        java.util.List $r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        i3 = $i1 - 1;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        if i0 > i3 goto label2;

     label1:
        $r1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i3);

        if i3 == i0 goto label2;

        i3 = i3 + -1;

        goto label1;

     label2:
        $i2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = $i2;

        return;
    }

    public java.util.ListIterator listIterator()
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        androidx.compose.runtime.collection.MutableVector$VectorListIterator $r1;
        java.util.List $r2;
        java.util.ListIterator $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        $r1 = new androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $r2 = (java.util.List) r0;

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: void <init>(java.util.List,int)>($r2, 0);

        $r3 = (java.util.ListIterator) $r1;

        return $r3;
    }

    public java.util.ListIterator listIterator(int)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int i0;
        androidx.compose.runtime.collection.MutableVector$VectorListIterator $r1;
        java.util.List $r2;
        java.util.ListIterator $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        i0 := @parameter0: int;

        $r1 = new androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $r2 = (java.util.List) r0;

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: void <init>(java.util.List,int)>($r2, i0);

        $r3 = (java.util.ListIterator) $r1;

        return $r3;
    }

    public boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.lang.Object r1, $r3;
        int i0, i1, $i2, i3;
        java.util.List $r2, $r4;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.lang.Object;

        i3 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

     label1:
        if i3 >= i0 goto label3;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>(i3);

        i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i2 = i1 + -1;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = $i2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.util.Collection r1;
        int i0, $i1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2, $z4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $r2 = (java.lang.Iterable) r1;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector$SubList: boolean remove(java.lang.Object)>(r5);

        goto label1;

     label2:
        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        if i0 == $i1 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public java.lang.Object removeAt(int)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        i0 := @parameter0: int;

        $r2 = (java.util.List) r0;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void access$checkIndex(java.util.List,int)>($r2, i0);

        $r3 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $i2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        $i3 = i0 + $i2;

        r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>($i3);

        i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i4 = i1 + -1;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = $i4;

        return r1;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.util.Collection r1;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        java.lang.Object r2;
        java.util.List $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i3 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        i6 = $i3 - 1;

        i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        if i1 > i6 goto label3;

     label1:
        $r3 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        r2 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i6);

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r4 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>(i6);

        i2 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        $i5 = i2 + -1;

        r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end> = $i5;

     label2:
        if i6 == i1 goto label3;

        i6 = i6 + -1;

        goto label1;

     label3:
        $i4 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int end>;

        if i0 == $i4 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r4;
        java.util.List $r2, $r3;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (java.util.List) r0;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void access$checkIndex(java.util.List,int)>($r2, i0);

        $r3 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.util.List list>;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$SubList: int start>;

        $i2 = i0 + $i1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, r1);

        return $r4;
    }

    public java.util.List subList(int, int)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0, $r2;
        int i0, i1;
        java.util.List $r1, $r3, $r4;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = (java.util.List) r0;

        staticinvoke <androidx.compose.runtime.collection.MutableVectorKt: void access$checkSubIndex(java.util.List,int,int)>($r1, i0, i1);

        $r2 = new androidx.compose.runtime.collection.MutableVector$SubList;

        $r3 = (java.util.List) r0;

        specialinvoke $r2.<androidx.compose.runtime.collection.MutableVector$SubList: void <init>(java.util.List,int,int)>($r3, i0, i1);

        $r4 = (java.util.List) $r2;

        return $r4;
    }

    public final volatile int size()
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector$SubList: int getSize()>();

        return $i0;
    }

    public final volatile java.lang.Object remove(int)
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.collection.MutableVector$SubList: java.lang.Object removeAt(int)>(i0);

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.lang.Object[] r1, $r3;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "array");

        $r2 = (java.util.Collection) r0;

        $r3 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])>($r2, r1);

        return $r3;
    }

    public java.lang.Object[] toArray()
    {
        androidx.compose.runtime.collection.MutableVector$SubList r0;
        java.util.Collection $r1;
        java.lang.Object[] $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$SubList;

        $r1 = (java.util.Collection) r0;

        $r2 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)>($r1);

        return $r2;
    }

androidx.compose.runtime.collection.MutableVector$VectorListIterator
<androidx.compose.runtime.collection.MutableVector$VectorListIterator: java.util.List list>
<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>
    public void <init>(java.util.List, int)
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        java.util.List r1;
        int i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "list");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: java.util.List list> = r1;

        r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index> = i0;

        return;
    }

    public boolean hasNext()
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        java.util.List $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        $r1 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: java.util.List list>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        int i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $r1 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: java.util.List list>;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        $i1 = i0 + 1;

        r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index> = $i1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public void remove()
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        int i0, $i1, $i2;
        java.util.List $r1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        $i1 = i0 + -1;

        r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index> = $i1;

        $r1 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: java.util.List list>;

        $i2 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i2);

        return;
    }

    public boolean hasPrevious()
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int nextIndex()
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        return $i0;
    }

    public java.lang.Object previous()
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        int i0, $i1, $i2;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        $i1 = i0 + -1;

        r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index> = $i1;

        $r1 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: java.util.List list>;

        $i2 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        return $r2;
    }

    public int previousIndex()
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        int $i0, $i1;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public void add(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        java.lang.Object r1;
        int i0, $i1, $i2;
        java.util.List $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: java.util.List list>;

        $i1 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i1, r1);

        i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        $i2 = i0 + 1;

        r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index> = $i2;

        return;
    }

    public void set(java.lang.Object)
    {
        androidx.compose.runtime.collection.MutableVector$VectorListIterator r0;
        java.lang.Object r1;
        int $i0;
        java.util.List $r2;

        r0 := @this: androidx.compose.runtime.collection.MutableVector$VectorListIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: java.util.List list>;

        $i0 = r0.<androidx.compose.runtime.collection.MutableVector$VectorListIterator: int index>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, r1);

        return;
    }

