androidx.slice.SliceProvider
<androidx.slice.SliceProvider: java.util.Set sSpecs>
<androidx.slice.SliceProvider: androidx.slice.Clock sClock>
<androidx.slice.SliceProvider: java.lang.String TAG>
<androidx.slice.SliceProvider: boolean DEBUG>
<androidx.slice.SliceProvider: java.lang.String[] mAutoGrantPermissions>
<androidx.slice.SliceProvider: androidx.slice.compat.SliceProviderCompat mCompat>
<androidx.slice.SliceProvider: java.util.List mPinnedSliceUris>
    public transient void <init>(java.lang.String[])
    {
        androidx.slice.SliceProvider r0;
        java.lang.String[] r1;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        r0.<androidx.slice.SliceProvider: java.lang.String[] mAutoGrantPermissions> = r1;

        return;
    }

    public void <init>()
    {
        androidx.slice.SliceProvider r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.slice.SliceProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        $r1 = newarray (java.lang.String)[0];

        r0.<androidx.slice.SliceProvider: java.lang.String[] mAutoGrantPermissions> = $r1;

        return;
    }

<androidx.slice.SliceProvider: boolean onCreateSliceProvider()>
    public java.lang.Object getWrapper()
    {
        androidx.slice.SliceProvider r0;
        int $i0;
        androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper $r1;
        java.lang.String[] $r2;

        r0 := @this: androidx.slice.SliceProvider;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = new androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper;

        $r2 = r0.<androidx.slice.SliceProvider: java.lang.String[] mAutoGrantPermissions>;

        specialinvoke $r1.<androidx.slice.compat.SliceProviderWrapperContainer$SliceProviderWrapper: void <init>(androidx.slice.SliceProvider,java.lang.String[])>(r0, $r2);

        return $r1;

     label1:
        return null;
    }

    public final boolean onCreate()
    {
        androidx.slice.SliceProvider r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        android.content.Context $r2, $r8;
        androidx.slice.SliceManager $r3;
        java.util.List $r4;
        boolean $z0;
        androidx.slice.compat.SliceProviderCompat $r5;
        java.lang.String[] $r6;
        androidx.slice.compat.CompatPermissionManager $r7;

        r0 := @this: androidx.slice.SliceProvider;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 19 goto label1;

        return 0;

     label1:
        $r1 = new java.util.ArrayList;

        $r2 = virtualinvoke r0.<androidx.slice.SliceProvider: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.slice.SliceManager: androidx.slice.SliceManager getInstance(android.content.Context)>($r2);

        $r4 = virtualinvoke $r3.<androidx.slice.SliceManager: java.util.List getPinnedSlices()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r0.<androidx.slice.SliceProvider: java.util.List mPinnedSliceUris> = $r1;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 28 goto label2;

        $r5 = new androidx.slice.compat.SliceProviderCompat;

        $r6 = r0.<androidx.slice.SliceProvider: java.lang.String[] mAutoGrantPermissions>;

        $r7 = virtualinvoke r0.<androidx.slice.SliceProvider: androidx.slice.compat.CompatPermissionManager onCreatePermissionManager(java.lang.String[])>($r6);

        $r8 = virtualinvoke r0.<androidx.slice.SliceProvider: android.content.Context getContext()>();

        specialinvoke $r5.<androidx.slice.compat.SliceProviderCompat: void <init>(androidx.slice.SliceProvider,androidx.slice.compat.CompatPermissionManager,android.content.Context)>(r0, $r7, $r8);

        r0.<androidx.slice.SliceProvider: androidx.slice.compat.SliceProviderCompat mCompat> = $r5;

     label2:
        $z0 = virtualinvoke r0.<androidx.slice.SliceProvider: boolean onCreateSliceProvider()>();

        return $z0;
    }

    protected androidx.slice.compat.CompatPermissionManager onCreatePermissionManager(java.lang.String[])
    {
        androidx.slice.SliceProvider r0;
        java.lang.String[] r1;
        androidx.slice.compat.CompatPermissionManager $r2;
        android.content.Context $r3;
        java.lang.StringBuilder $r4, $r5, $r8;
        java.lang.Class $r6;
        java.lang.String $r7, $r9;
        int $i0;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: java.lang.String[];

        $r2 = new androidx.slice.compat.CompatPermissionManager;

        $r3 = virtualinvoke r0.<androidx.slice.SliceProvider: android.content.Context getContext()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("slice_perms_");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        specialinvoke $r2.<androidx.slice.compat.CompatPermissionManager: void <init>(android.content.Context,java.lang.String,int,java.lang.String[])>($r3, $r9, $i0, r1);

        return $r2;
    }

    public final java.lang.String getType(android.net.Uri)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        int $i0;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 19 goto label1;

        return null;

     label1:
        return "vnd.android.slice";
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, android.os.Bundle)
    {
        androidx.slice.SliceProvider r0;
        java.lang.String r1, r2;
        android.os.Bundle r3, $r6;
        int $i0;
        androidx.slice.compat.SliceProviderCompat $r4, $r5;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 19 goto label1;

        return null;

     label1:
        $r4 = r0.<androidx.slice.SliceProvider: androidx.slice.compat.SliceProviderCompat mCompat>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.slice.SliceProvider: androidx.slice.compat.SliceProviderCompat mCompat>;

        $r6 = virtualinvoke $r5.<androidx.slice.compat.SliceProviderCompat: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>(r1, r2, r3);

        goto label3;

     label2:
        $r6 = null;

     label3:
        return $r6;
    }

    public static androidx.slice.Slice createPermissionSlice(android.content.Context, android.net.Uri, java.lang.String)
    {
        android.content.Context r0;
        android.net.Uri r1, $r23;
        java.lang.String r2;
        android.app.PendingIntent r3;
        androidx.slice.Slice$Builder r4, r5, $r7, $r8, $r11, $r14, $r15, $r20, $r26, $r29, $r31, $r33, $r38;
        android.util.TypedValue r6, $r17;
        int i0, $i1, $i2;
        android.support.v4.graphics.drawable.IconCompat $r9, $r24;
        java.lang.String[] $r10, $r12, $r25, $r28, $r30, $r36;
        java.util.List $r13, $r37;
        androidx.slice.Slice $r16, $r32, $r34, $r39;
        android.view.ContextThemeWrapper $r18;
        android.content.res.Resources$Theme $r19;
        android.net.Uri$Builder $r21, $r22;
        java.lang.CharSequence $r27;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <androidx.slice.SliceProvider: android.app.PendingIntent createPermissionIntent(android.content.Context,android.net.Uri,java.lang.String)>(r0, r1, r2);

        $r7 = new androidx.slice.Slice$Builder;

        specialinvoke $r7.<androidx.slice.Slice$Builder: void <init>(android.net.Uri)>(r1);

        r4 = $r7;

        $r8 = new androidx.slice.Slice$Builder;

        specialinvoke $r8.<androidx.slice.Slice$Builder: void <init>(androidx.slice.Slice$Builder)>(r4);

        $i1 = <androidx.slice.core.R$drawable: int abc_ic_permission>;

        $r9 = staticinvoke <android.support.v4.graphics.drawable.IconCompat: android.support.v4.graphics.drawable.IconCompat createWithResource(android.content.Context,int)>(r0, $i1);

        $r10 = newarray (java.lang.String)[0];

        $r11 = virtualinvoke $r8.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addIcon(android.support.v4.graphics.drawable.IconCompat,java.lang.String,java.lang.String[])>($r9, null, $r10);

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = "title";

        $r12[1] = "shortcut";

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        $r14 = virtualinvoke $r11.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addHints(java.util.List)>($r13);

        $r15 = new androidx.slice.Slice$Builder;

        specialinvoke $r15.<androidx.slice.Slice$Builder: void <init>(androidx.slice.Slice$Builder)>(r4);

        $r16 = virtualinvoke $r15.<androidx.slice.Slice$Builder: androidx.slice.Slice build()>();

        r5 = virtualinvoke $r14.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addAction(android.app.PendingIntent,androidx.slice.Slice,java.lang.String)>(r3, $r16, null);

        $r17 = new android.util.TypedValue;

        specialinvoke $r17.<android.util.TypedValue: void <init>()>();

        r6 = $r17;

        $r18 = new android.view.ContextThemeWrapper;

        specialinvoke $r18.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r0, 16974123);

        $r19 = virtualinvoke $r18.<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r19.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843829, r6, 1);

        i0 = r6.<android.util.TypedValue: int data>;

        $r20 = new androidx.slice.Slice$Builder;

        $r21 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r22 = virtualinvoke $r21.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("permission");

        $r23 = virtualinvoke $r22.<android.net.Uri$Builder: android.net.Uri build()>();

        specialinvoke $r20.<androidx.slice.Slice$Builder: void <init>(android.net.Uri)>($r23);

        $i2 = <androidx.slice.core.R$drawable: int abc_ic_arrow_forward>;

        $r24 = staticinvoke <android.support.v4.graphics.drawable.IconCompat: android.support.v4.graphics.drawable.IconCompat createWithResource(android.content.Context,int)>(r0, $i2);

        $r25 = newarray (java.lang.String)[0];

        $r26 = virtualinvoke $r20.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addIcon(android.support.v4.graphics.drawable.IconCompat,java.lang.String,java.lang.String[])>($r24, null, $r25);

        $r27 = staticinvoke <androidx.slice.SliceProvider: java.lang.CharSequence getPermissionString(android.content.Context,java.lang.String)>(r0, r2);

        $r28 = newarray (java.lang.String)[0];

        $r29 = virtualinvoke $r26.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addText(java.lang.CharSequence,java.lang.String,java.lang.String[])>($r27, null, $r28);

        $r30 = newarray (java.lang.String)[0];

        $r31 = virtualinvoke $r29.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addInt(int,java.lang.String,java.lang.String[])>(i0, "color", $r30);

        $r32 = virtualinvoke r5.<androidx.slice.Slice$Builder: androidx.slice.Slice build()>();

        $r33 = virtualinvoke $r31.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice,java.lang.String)>($r32, null);

        $r34 = virtualinvoke $r33.<androidx.slice.Slice$Builder: androidx.slice.Slice build()>();

        virtualinvoke r4.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addSubSlice(androidx.slice.Slice,java.lang.String)>($r34, null);

        $r36 = newarray (java.lang.String)[1];

        $r36[0] = "permission_request";

        $r37 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r36);

        $r38 = virtualinvoke r4.<androidx.slice.Slice$Builder: androidx.slice.Slice$Builder addHints(java.util.List)>($r37);

        $r39 = virtualinvoke $r38.<androidx.slice.Slice$Builder: androidx.slice.Slice build()>();

        return $r39;
    }

    public static android.app.PendingIntent createPermissionIntent(android.content.Context, android.net.Uri, java.lang.String)
    {
        android.content.Context r0;
        android.net.Uri r1, $r14;
        java.lang.String r2, $r6, $r10;
        android.content.Intent r3, $r4;
        android.content.ComponentName $r5;
        android.net.Uri$Builder $r12, $r13;
        android.app.PendingIntent $r16;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>()>();

        r3 = $r4;

        $r5 = new android.content.ComponentName;

        $r6 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r6, "androidx.slice.compat.SlicePermissionActivity");

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r5);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("slice_uri", r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("pkg", r2);

        $r10 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("provider_pkg", $r10);

        $r12 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r13 = virtualinvoke $r12.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("package", r2);

        $r14 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r14);

        $r16 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, r3, 0);

        return $r16;
    }

    public static java.lang.CharSequence getPermissionString(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r9;
        android.content.pm.PackageManager r2;
        java.lang.Throwable r3, $r10;
        java.lang.Object[] $r4;
        int $i0;
        android.content.pm.ApplicationInfo $r5, $r7;
        java.lang.CharSequence $r6, $r8;
        java.lang.RuntimeException $r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $i0 = <androidx.slice.core.R$string: int abc_slices_permission_request>;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $r6 = virtualinvoke $r5.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r2);

        $r4[0] = $r6;

        $r7 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r8 = virtualinvoke $r7.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r2);

        $r4[1] = $r8;

        $r9 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i0, $r4);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unknown calling app", r3);

        throw $r11;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

<androidx.slice.SliceProvider: androidx.slice.Slice onBindSlice(android.net.Uri)>
    public void onSlicePinned(android.net.Uri)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        return;
    }

    public void onSliceUnpinned(android.net.Uri)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        return;
    }

    public void handleSlicePinned(android.net.Uri)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        java.util.List $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.slice.SliceProvider: java.util.List mPinnedSliceUris>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.slice.SliceProvider: java.util.List mPinnedSliceUris>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void handleSliceUnpinned(android.net.Uri)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        java.util.List $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.slice.SliceProvider: java.util.List mPinnedSliceUris>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.slice.SliceProvider: java.util.List mPinnedSliceUris>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public android.net.Uri onMapIntentToUri(android.content.Intent)
    {
        androidx.slice.SliceProvider r0;
        android.content.Intent r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.content.Intent;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This provider has not implemented intent to uri mapping");

        throw $r2;
    }

    public java.util.Collection onGetSliceDescendants(android.net.Uri)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        java.util.List $r2;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }

    public java.util.List getPinnedSlices()
    {
        androidx.slice.SliceProvider r0;
        java.util.List $r1;

        r0 := @this: androidx.slice.SliceProvider;

        $r1 = r0.<androidx.slice.SliceProvider: java.util.List mPinnedSliceUris>;

        return $r1;
    }

    public final android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        return null;
    }

    public final android.database.Cursor query(android.net.Uri, java.lang.String[], android.os.Bundle, android.os.CancellationSignal)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2;
        android.os.Bundle r3;
        android.os.CancellationSignal r4;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.CancellationSignal;

        return null;
    }

    public final android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.os.CancellationSignal r6;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.CancellationSignal;

        return null;
    }

    public final android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        return null;
    }

    public final int bulkInsert(android.net.Uri, android.content.ContentValues[])
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        android.content.ContentValues[] r2;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues[];

        return 0;
    }

    public final int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        return 0;
    }

    public final int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        return 0;
    }

    public final android.net.Uri canonicalize(android.net.Uri)
    {
        androidx.slice.SliceProvider r0;
        android.net.Uri r1;

        r0 := @this: androidx.slice.SliceProvider;

        r1 := @parameter0: android.net.Uri;

        return null;
    }

    public static void setSpecs(java.util.Set)
    {
        java.util.Set r0;

        r0 := @parameter0: java.util.Set;

        <androidx.slice.SliceProvider: java.util.Set sSpecs> = r0;

        return;
    }

    public static java.util.Set getCurrentSpecs()
    {
        java.util.Set $r0;

        $r0 = <androidx.slice.SliceProvider: java.util.Set sSpecs>;

        return $r0;
    }

    public static void setClock(androidx.slice.Clock)
    {
        androidx.slice.Clock r0;

        r0 := @parameter0: androidx.slice.Clock;

        <androidx.slice.SliceProvider: androidx.slice.Clock sClock> = r0;

        return;
    }

    public static androidx.slice.Clock getClock()
    {
        androidx.slice.Clock $r0;

        $r0 = <androidx.slice.SliceProvider: androidx.slice.Clock sClock>;

        return $r0;
    }

