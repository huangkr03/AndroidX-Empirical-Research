androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Companion Companion>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean accessibilityForceEnabledForTesting>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.os.Handler handler>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat nodeProvider>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat actionIdToLabel>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat labelToActionId>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.Integer previousTraversedNode>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet subtreeChangedLayoutNodes>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: kotlinx.coroutines.channels.Channel boundsUpdateChannel>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean currentSemanticsNodesInvalidated>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent pendingTextTraversedEvent>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map currentSemanticsNodes>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet paneDisplayed>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy previousSemanticsRoot>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean checkingForSemanticsChanges>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.Runnable semanticsChangeChecker>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.List scrollObservationScopes>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: kotlin.jvm.functions.Function1 sendScrollEventIfNeededLambda>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int InvalidId>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String ClassName>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String LogTag>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String ExtraDataTestTagKey>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int ParcelSafeTextLength>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int AccessibilityCursorPositionUndefined>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int AccessibilitySliderStepsCount>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: long SendRecurringAccessibilityEventsIntervalMillis>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: long TextTraversedEventTimeoutMillis>
<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int[] AccessibilityActionsResourceIds>
    public void <init>(androidx.compose.ui.platform.AndroidComposeView)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.platform.AndroidComposeView r1, $r2, $r19, $r24;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.view.accessibility.AccessibilityManager $r5;
        android.os.Handler $r6;
        android.os.Looper $r7;
        androidx.core.view.accessibility.AccessibilityNodeProviderCompat $r8;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$MyNodeProvider $r9;
        androidx.collection.SparseArrayCompat $r10, $r11;
        androidx.collection.ArraySet $r12, $r15;
        kotlinx.coroutines.channels.Channel $r13;
        java.util.Map $r14, $r17, $r22;
        java.util.LinkedHashMap $r16;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy $r18;
        androidx.compose.ui.semantics.SemanticsOwner $r20;
        androidx.compose.ui.semantics.SemanticsNode $r21;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$1 $r23;
        android.view.View$OnAttachStateChangeListener $r25;
        java.lang.Runnable $r26;
        java.util.ArrayList $r27;
        java.util.List $r28;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendScrollEventIfNeededLambda$1 $r29;
        kotlin.jvm.functions.Function1 $r30;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.platform.AndroidComposeView;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        specialinvoke r0.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>();

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view> = r1;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId> = -2147483648;

        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type android.view.accessibility.AccessibilityManager");

        $r5 = (android.view.accessibility.AccessibilityManager) $r4;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager> = $r5;

        $r6 = new android.os.Handler;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.os.Handler handler> = $r6;

        $r8 = new androidx.core.view.accessibility.AccessibilityNodeProviderCompat;

        $r9 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$MyNodeProvider;

        specialinvoke $r9.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$MyNodeProvider: void <init>(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)>(r0);

        specialinvoke $r8.<androidx.core.view.accessibility.AccessibilityNodeProviderCompat: void <init>(java.lang.Object)>($r9);

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat nodeProvider> = $r8;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId> = -2147483648;

        $r10 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r10.<androidx.collection.SparseArrayCompat: void <init>()>();

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat actionIdToLabel> = $r10;

        $r11 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r11.<androidx.collection.SparseArrayCompat: void <init>()>();

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat labelToActionId> = $r11;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition> = -1;

        $r12 = new androidx.collection.ArraySet;

        specialinvoke $r12.<androidx.collection.ArraySet: void <init>()>();

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet subtreeChangedLayoutNodes> = $r12;

        $r13 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>(-1, null, null, 6, null);

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: kotlinx.coroutines.channels.Channel boundsUpdateChannel> = $r13;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean currentSemanticsNodesInvalidated> = 1;

        $r14 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map currentSemanticsNodes> = $r14;

        $r15 = new androidx.collection.ArraySet;

        specialinvoke $r15.<androidx.collection.ArraySet: void <init>()>();

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet paneDisplayed> = $r15;

        $r16 = new java.util.LinkedHashMap;

        specialinvoke $r16.<java.util.LinkedHashMap: void <init>()>();

        $r17 = (java.util.Map) $r16;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes> = $r17;

        $r18 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy;

        $r19 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r20 = virtualinvoke $r19.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()>();

        $r21 = virtualinvoke $r20.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.semantics.SemanticsNode getUnmergedRootSemanticsNode()>();

        $r22 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        specialinvoke $r18.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: void <init>(androidx.compose.ui.semantics.SemanticsNode,java.util.Map)>($r21, $r22);

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy previousSemanticsRoot> = $r18;

        $r24 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r23 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$1;

        specialinvoke $r23.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$1: void <init>(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)>(r0);

        $r25 = (android.view.View$OnAttachStateChangeListener) $r23;

        virtualinvoke $r24.<androidx.compose.ui.platform.AndroidComposeView: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r25);

        $r26 = dynamicinvoke "run" <java.lang.Runnable (androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void semanticsChangeChecker$lambda-26(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)>, methodtype: void __METHODTYPE__());

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.Runnable semanticsChangeChecker> = $r26;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        $r28 = (java.util.List) $r27;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.List scrollObservationScopes> = $r28;

        $r29 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendScrollEventIfNeededLambda$1;

        specialinvoke $r29.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendScrollEventIfNeededLambda$1: void <init>(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)>(r0);

        $r30 = (kotlin.jvm.functions.Function1) $r29;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: kotlin.jvm.functions.Function1 sendScrollEventIfNeededLambda> = $r30;

        return;
    }

    public final androidx.compose.ui.platform.AndroidComposeView getView()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.platform.AndroidComposeView $r1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        return $r1;
    }

    public final int getHoveredVirtualViewId$ui_release()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $i0 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>;

        return $i0;
    }

    public final void setHoveredVirtualViewId$ui_release(int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId> = i0;

        return;
    }

    public final boolean getAccessibilityForceEnabledForTesting$ui_release()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $z0 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean accessibilityForceEnabledForTesting>;

        return $z0;
    }

    public final void setAccessibilityForceEnabledForTesting$ui_release(boolean)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean accessibilityForceEnabledForTesting> = z0;

        return;
    }

    private final boolean isAccessibilityEnabled()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        boolean $z0, $z1, $z2, $z3;
        android.view.accessibility.AccessibilityManager $r1, $r2;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $z0 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean accessibilityForceEnabledForTesting>;

        if $z0 != 0 goto label1;

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>;

        $z1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>;

        $z2 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    private final java.util.Map getCurrentSemanticsNodes()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        boolean $z0;
        java.util.Map $r1, $r4;
        androidx.compose.ui.platform.AndroidComposeView $r2;
        androidx.compose.ui.semantics.SemanticsOwner $r3;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $z0 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean currentSemanticsNodesInvalidated>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()>();

        $r4 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: java.util.Map getAllUncoveredSemanticsNodesToMap(androidx.compose.ui.semantics.SemanticsOwner)>($r3);

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map currentSemanticsNodes> = $r4;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean currentSemanticsNodesInvalidated> = 0;

     label1:
        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map currentSemanticsNodes>;

        return $r1;
    }

    public final java.util.Map getPreviousSemanticsNodes$ui_release()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        java.util.Map $r1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes>;

        return $r1;
    }

    public final void setPreviousSemanticsNodes$ui_release(java.util.Map)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        java.util.Map r1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes> = r1;

        return;
    }

    public static void getPreviousSemanticsNodes$ui_release$annotations()
    {
        return;
    }

    public final boolean canScroll-0AR0LA0$ui_release(boolean, int, long)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        boolean z0, $z1;
        int i0;
        long l1;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r1 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $z1 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean canScroll-moWRBKg$ui_release(java.util.Collection,boolean,int,long)>($r2, z0, i0, l1);

        return $z1;
    }

    public final boolean canScroll-moWRBKg$ui_release(java.util.Collection, boolean, int, long)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        java.util.Collection r1, $r10;
        boolean z0, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12;
        int i0, $i5, i6;
        long l1, $l2;
        androidx.compose.ui.semantics.SemanticsPropertyKey r2, $r27;
        java.util.Iterator r3;
        java.lang.Object r4, $r15, $r18, $r21, $r24;
        androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds r5;
        androidx.compose.ui.semantics.ScrollAxisRange r6, $r16;
        androidx.compose.ui.geometry.Offset$Companion $r7;
        kotlin.NoWhenBranchMatchedException $r8;
        androidx.compose.ui.semantics.SemanticsProperties $r9, $r26;
        android.graphics.Rect $r11;
        androidx.compose.ui.geometry.Rect $r12;
        androidx.compose.ui.semantics.SemanticsNode $r13;
        androidx.compose.ui.semantics.SemanticsConfiguration $r14;
        kotlin.jvm.functions.Function0 $r17, $r20, $r23;
        java.lang.Number $r19, $r22, $r25;
        float $f0, $f1, $f2;
        byte $b3, $b4;
        java.lang.Iterable $r28;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "currentSemanticsNodes");

        $r7 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l2 = virtualinvoke $r7.<androidx.compose.ui.geometry.Offset$Companion: long getUnspecified-F1C5BW0()>();

        $z3 = staticinvoke <androidx.compose.ui.geometry.Offset: boolean equals-impl0(long,long)>(l1, $l2);

        if $z3 != 0 goto label01;

        $z4 = staticinvoke <androidx.compose.ui.geometry.Offset: boolean isValid-impl(long)>(l1);

        if $z4 != 0 goto label02;

     label01:
        return 0;

     label02:
        if z0 != 1 goto label03;

        $r26 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r27 = virtualinvoke $r26.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getVerticalScrollAxisRange()>();

        goto label05;

     label03:
        if z0 != 0 goto label04;

        $r9 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r27 = virtualinvoke $r9.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getHorizontalScrollAxisRange()>();

        goto label05;

     label04:
        $r8 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r8.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r8;

     label05:
        r2 = $r27;

        $r28 = (java.lang.Iterable) r1;

        $r10 = (java.util.Collection) $r28;

        $z5 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label06;

        $z11 = 0;

        goto label18;

     label06:
        r3 = interfaceinvoke $r28.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label17;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) r4;

        $r11 = virtualinvoke r5.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: android.graphics.Rect getAdjustedBounds()>();

        $r12 = staticinvoke <androidx.compose.ui.graphics.RectHelper_androidKt: androidx.compose.ui.geometry.Rect toComposeRect(android.graphics.Rect)>($r11);

        $z7 = virtualinvoke $r12.<androidx.compose.ui.geometry.Rect: boolean contains-k-4lQ0M(long)>(l1);

        if $z7 != 0 goto label08;

        $z12 = 0;

        goto label16;

     label08:
        $r13 = virtualinvoke r5.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        $r14 = virtualinvoke $r13.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r15 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r14, r2);

        $r16 = (androidx.compose.ui.semantics.ScrollAxisRange) $r15;

        if $r16 != null goto label09;

        $z12 = 0;

        goto label16;

     label09:
        r6 = $r16;

        $z8 = virtualinvoke r6.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z8 == 0 goto label10;

        $i5 = neg i0;

        goto label11;

     label10:
        $i5 = i0;

     label11:
        i6 = $i5;

        if i0 != 0 goto label12;

        $z9 = virtualinvoke r6.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z9 == 0 goto label12;

        i6 = -1;

     label12:
        if i6 >= 0 goto label14;

        $r23 = virtualinvoke r6.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getValue()>();

        $r24 = interfaceinvoke $r23.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r25 = (java.lang.Number) $r24;

        $f2 = virtualinvoke $r25.<java.lang.Number: float floatValue()>();

        $b4 = $f2 cmpl 0.0F;

        if $b4 <= 0 goto label13;

        $z12 = 1;

        goto label16;

     label13:
        $z12 = 0;

        goto label16;

     label14:
        $r17 = virtualinvoke r6.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getValue()>();

        $r18 = interfaceinvoke $r17.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r19 = (java.lang.Number) $r18;

        $f0 = virtualinvoke $r19.<java.lang.Number: float floatValue()>();

        $r20 = virtualinvoke r6.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getMaxValue()>();

        $r21 = interfaceinvoke $r20.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r22 = (java.lang.Number) $r21;

        $f1 = virtualinvoke $r22.<java.lang.Number: float floatValue()>();

        $b3 = $f0 cmpg $f1;

        if $b3 >= 0 goto label15;

        $z12 = 1;

        goto label16;

     label15:
        $z12 = 0;

     label16:
        if $z12 == 0 goto label07;

        $z11 = 1;

        goto label18;

     label17:
        $z11 = 0;

     label18:
        return $z11;
    }

    private final android.view.accessibility.AccessibilityNodeInfo createNodeInfo(int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i13, i14;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1, $r6;
        androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds r2;
        androidx.compose.ui.semantics.SemanticsNode r3, $r10, $r17, $r20;
        long l1, l2, $l6, $l9;
        androidx.compose.ui.platform.AndroidComposeView $r4, $r18, $r21, $r23, $r25, $r26, $r29;
        androidx.compose.ui.platform.AndroidComposeView$ViewTreeOwners $r5;
        java.util.Map $r7;
        java.lang.Integer $r8;
        java.lang.Object $r9;
        java.lang.IllegalStateException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        java.lang.String $r16;
        androidx.compose.ui.semantics.SemanticsOwner $r19;
        android.view.View $r22, $r24, $r30, $r37;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.graphics.Rect $r27, r38;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        android.view.accessibility.AccessibilityNodeInfo $r28;
        boolean $z0;
        androidx.lifecycle.LifecycleOwner $r32;
        androidx.lifecycle.Lifecycle $r33;
        androidx.lifecycle.Lifecycle$State $r34, $r35;
        android.view.ViewParent r36;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $r4 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidComposeView$ViewTreeOwners getViewTreeOwners()>();

        if $r5 == null goto label01;

        $r32 = virtualinvoke $r5.<androidx.compose.ui.platform.AndroidComposeView$ViewTreeOwners: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        if $r32 == null goto label01;

        $r33 = interfaceinvoke $r32.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        if $r33 == null goto label01;

        $r34 = virtualinvoke $r33.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        goto label02;

     label01:
        $r34 = null;

     label02:
        $r35 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r34 != $r35 goto label03;

        return null;

     label03:
        $r6 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "obtain()");

        r1 = $r6;

        $r7 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r2 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r9;

        if r2 != null goto label04;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void recycle()>();

        return null;

     label04:
        r3 = virtualinvoke r2.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        if i0 != -1 goto label07;

        $r29 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r30 = (android.view.View) $r29;

        r36 = staticinvoke <androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)>($r30);

        $z0 = r36 instanceof android.view.View;

        if $z0 == 0 goto label05;

        $r37 = (android.view.View) r36;

        goto label06;

     label05:
        $r37 = null;

     label06:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r37);

        goto label10;

     label07:
        $r10 = virtualinvoke r3.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        if $r10 == null goto label09;

        $r17 = virtualinvoke r3.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r17);

        i14 = virtualinvoke $r17.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r18 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r19 = virtualinvoke $r18.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()>();

        $r20 = virtualinvoke $r19.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.semantics.SemanticsNode getUnmergedRootSemanticsNode()>();

        $i3 = virtualinvoke $r20.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        if i14 != $i3 goto label08;

        i14 = -1;

     label08:
        $r21 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r22 = (android.view.View) $r21;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)>($r22, i14);

        goto label10;

     label09:
        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("semanticsNode ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has null parent");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label10:
        $r23 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r24 = (android.view.View) $r23;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)>($r24, i0);

        r38 = virtualinvoke r2.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: android.graphics.Rect getAdjustedBounds()>();

        $r25 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $i4 = r38.<android.graphics.Rect: int left>;

        $f1 = (float) $i4;

        $i5 = r38.<android.graphics.Rect: int top>;

        $f0 = (float) $i5;

        $l6 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f1, $f0);

        l1 = virtualinvoke $r25.<androidx.compose.ui.platform.AndroidComposeView: long localToScreen-MK-Hz9U(long)>($l6);

        $r26 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $i7 = r38.<android.graphics.Rect: int right>;

        $f3 = (float) $i7;

        $i8 = r38.<android.graphics.Rect: int bottom>;

        $f2 = (float) $i8;

        $l9 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f3, $f2);

        l2 = virtualinvoke $r26.<androidx.compose.ui.platform.AndroidComposeView: long localToScreen-MK-Hz9U(long)>($l9);

        $r27 = new android.graphics.Rect;

        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $d0 = (double) $f4;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $f5 = (float) $d1;

        $i10 = (int) $f5;

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        $d2 = (double) $f6;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $f7 = (float) $d3;

        $i11 = (int) $f7;

        $f8 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l2);

        $d4 = (double) $f8;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $f9 = (float) $d5;

        $i12 = (int) $f9;

        $f10 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l2);

        $d6 = (double) $f10;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        $f11 = (float) $d7;

        $i13 = (int) $f11;

        specialinvoke $r27.<android.graphics.Rect: void <init>(int,int,int,int)>($i10, $i11, $i12, $i13);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r27);

        virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void populateAccessibilityNodeInfoProperties(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.compose.ui.semantics.SemanticsNode)>(i0, r1, r3);

        $r28 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()>();

        return $r28;
    }

    public final void populateAccessibilityNodeInfoProperties(int, androidx.core.view.accessibility.AccessibilityNodeInfoCompat, androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i12, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, i48, i49, $i50, $i51, i52, i53, i54, i55, i56, $i58, $i59, i60, $i61, $i62, i63, i64, i65, i66, i67, $i68, i69, i70;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1;
        androidx.compose.ui.semantics.SemanticsNode r2, $r285, r386, r396;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z31, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z59, z60, z62, $z63, $z64, z65, z66, $z67, $z68, z69, $z70, $z71, z72, $z73, z74, z75, z76, $z77, z78, z79, z80, z81, z82, $z83, $z84, $z85, $z86, $z87, $z88, $z89, $z90, $z91, $z92, z99, z100, z101, $z102, z103, $z104;
        androidx.compose.ui.semantics.Role r3;
        androidx.collection.SparseArrayCompat r4, $r87, $r89, $r90, $r91, $r99;
        java.lang.Integer r5, $r343, $r433, r464, $r471;
        androidx.compose.ui.semantics.SemanticsConfiguration $r6, $r14, $r19, $r23, $r28, $r29, $r34, $r37, $r42, $r47, $r52, $r56, $r60, $r64, $r69, $r74, $r79, $r82, $r158, $r206, $r209, $r215, $r219, $r224, $r229, $r234, $r266, $r281, $r286, $r293, $r296, $r362, $r375, $r391, $r397, $r406, $r420, $r423, $r436, $r443, $r448;
        androidx.compose.ui.semantics.SemanticsProperties $r7, $r15, $r20, $r24, $r30, $r35, $r53, $r216, $r267, $r282, $r287, $r376, $r392, $r398, $r407, $r421, $r424, $r444, $r449;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r8, $r16, $r21, $r25, $r31, $r36, $r39, $r44, $r49, $r54, $r58, $r66, $r71, $r76, $r81, $r84, $r160, $r208, $r211, $r217, $r221, $r226, $r231, $r236, $r268, $r283, $r288, $r295, $r298, $r377, $r393, $r399, $r408, $r422, $r425, $r438, $r445, $r450;
        androidx.compose.ui.platform.AndroidComposeView $r9, $r179, $r241, $r308, $r312, $r321, $r328, $r335, $r344, $r349, $r363, $r429;
        android.content.Context $r10, $r180, $r309, $r313, $r322, $r329, $r336, $r364, $r430;
        java.lang.String $r11, $r93, $r94, $r97, $r105, $r106, $r109, $r111, $r112, $r114, $r115, $r118, $r126, $r128, $r133, $r138, $r182, $r244, $r247, $r252, $r257, $r264, $r274, $r311, $r315, $r324, $r331, $r338, $r366, $r380, r381, $r390, r395, r413, $r416, $r434;
        java.lang.CharSequence $r12, $r18, $r33, $r61, $r62, $r63, $r98, $r110, $r119, $r129, $r134, $r139, $r149, $r157, $r161, $r164, $r183, $r191, $r202, $r214, $r245, $r248, $r253, $r258, $r265, $r275, $r305, $r318, $r325, $r327, $r332, $r334, $r339, $r352, $r353, $r367, $r374, $r383, $r388, r414, $r419, $r435, $r452, $r472;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r13, $r96, $r108, $r117, $r127, $r132, $r137, $r145, $r146, $r147, $r148, $r153, $r155, $r177, $r178, $r213, $r243, $r246, $r251, $r256, $r263, $r273, $r340, $r441, $r442;
        java.lang.Object $r17, $r22, $r26, $r32, $r40, $r45, $r50, $r55, $r59, $r67, $r72, $r77, $r85, $r100, $r103, $r113, $r143, $r151, $r212, $r218, $r227, $r232, $r237, $r269, $r284, $r289, $r299, $r301, $r348, $r378, r385, $r394, $r400, $r409, $r426, $r446, $r451, r462, r466, $r469;
        java.lang.Boolean $r27, $r270, $r290, $r300;
        androidx.compose.ui.semantics.SemanticsActions $r38, $r43, $r48, $r57, $r65, $r70, $r75, $r80, $r83, $r159, $r207, $r210, $r220, $r225, $r230, $r235, $r437;
        androidx.compose.ui.semantics.AccessibilityAction $r41, $r46, $r51, $r68, $r73, $r78, $r228, $r233, $r238, r415, r440, r453, r454, r455;
        int[] $r86, $r92, $r101, $r123, $r317;
        java.util.LinkedHashMap $r88;
        java.util.ArrayList $r102, $r203;
        java.lang.Number $r104, $r144, $r152, $r167, $r170, $r173, $r176, $r186, $r189, $r193, $r195, $r197, $r199, $r201;
        java.lang.IllegalStateException $r120;
        java.lang.StringBuilder $r121, $r122, $r124, $r125;
        kotlin.Unit $r130, $r131, $r135, $r136, $r140, $r141, $r239, $r240, $r249, $r250, $r254, $r255, $r259, $r260, $r261, $r262, $r271, $r272, $r279, $r280, $r291, $r292, $r306, $r307, $r319, $r320, $r360, $r361, $r401, r402;
        kotlin.jvm.functions.Function0 $r142, $r150;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25, f26;
        byte $b8, $b9, $b10, $b11, $b13, $b14, $b15, $b57;
        androidx.compose.ui.semantics.ProgressBarRangeInfo$Companion $r162;
        androidx.compose.ui.semantics.ProgressBarRangeInfo $r163, r427;
        kotlin.ranges.ClosedFloatingPointRange $r165, $r168, $r171, $r174, $r184, $r187, $r428;
        java.lang.Comparable $r166, $r169, $r172, $r175, $r185, $r188, $r192, $r194, $r196, $r198, $r200;
        android.content.res.Resources $r181, $r310, $r314, $r323, $r330, $r337, $r365, $r431;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat $r190;
        androidx.compose.ui.platform.AccessibilityNodeInfoVerificationHelperMethods $r204;
        android.view.accessibility.AccessibilityNodeInfo $r205;
        java.util.List $r223, $r303, $r368, $r369, $r384, r389, r418, r456, r459, r460;
        androidx.compose.ui.platform.AndroidClipboardManager $r242;
        androidx.compose.ui.semantics.LiveRegionMode$Companion $r277, $r278;
        androidx.compose.ui.semantics.SemanticsPropertiesAndroid $r294, $r297;
        androidx.compose.ui.semantics.Role$Companion $r304, $r326, $r333, $r354, $r355, $r356, $r357, $r358, $r359, $r382;
        androidx.compose.ui.state.ToggleableState $r341;
        java.util.Map $r342, r457, $r458;
        androidx.compose.ui.platform.AndroidViewsHandler $r345;
        java.util.HashMap $r346;
        androidx.compose.ui.node.LayoutNode $r347, $r370, $r373;
        android.view.View $r350, $r351;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$populateAccessibilityNodeInfoProperties$isUnmergedLeafNode$1 $r371;
        kotlin.jvm.functions.Function1 $r372;
        androidx.compose.ui.viewinterop.AndroidViewHolder r387;
        androidx.compose.ui.node.NodeCoordinator $r403;
        androidx.compose.ui.semantics.LiveRegionMode $r410;
        java.util.Collection r417;
        java.lang.Object[] r432;
        androidx.compose.ui.semantics.ScrollAxisRange $r439, r447;
        androidx.compose.ui.semantics.CustomAccessibilityAction r463, r467, r470;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r2 := @parameter2: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "info");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "semanticsNode");

        $z1 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: boolean isFake$ui_release()>();

        if $z1 != 0 goto label001;

        $r369 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getReplacedChildren$ui_release()>();

        $z56 = interfaceinvoke $r369.<java.util.List: boolean isEmpty()>();

        if $z56 == 0 goto label001;

        $r370 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode getLayoutNode$ui_release()>();

        $r371 = <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$populateAccessibilityNodeInfoProperties$isUnmergedLeafNode$1: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$populateAccessibilityNodeInfoProperties$isUnmergedLeafNode$1 INSTANCE>;

        $r372 = (kotlin.jvm.functions.Function1) $r371;

        $r373 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: androidx.compose.ui.node.LayoutNode access$findClosestParentNode(androidx.compose.ui.node.LayoutNode,kotlin.jvm.functions.Function1)>($r370, $r372);

        if $r373 != null goto label001;

        $z57 = 1;

        goto label002;

     label001:
        $z57 = 0;

     label002:
        z0 = $z57;

        $r374 = (java.lang.CharSequence) "android.view.View";

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r374);

        $r375 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r376 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r377 = virtualinvoke $r376.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getRole()>();

        $r378 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r375, $r377);

        r3 = (androidx.compose.ui.semantics.Role) $r378;

        if r3 == null goto label013;

        i46 = virtualinvoke r3.<androidx.compose.ui.semantics.Role: int unbox-impl()>();

        $z47 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: boolean isFake$ui_release()>();

        if $z47 != 0 goto label003;

        $r368 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getReplacedChildren$ui_release()>();

        $z55 = interfaceinvoke $r368.<java.util.List: boolean isEmpty()>();

        if $z55 == 0 goto label012;

     label003:
        $r354 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        i47 = virtualinvoke $r354.<androidx.compose.ui.semantics.Role$Companion: int getTab-o7Vup1c()>();

        $i39 = virtualinvoke r3.<androidx.compose.ui.semantics.Role: int unbox-impl()>();

        $z48 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>($i39, i47);

        if $z48 == 0 goto label004;

        $r363 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r364 = virtualinvoke $r363.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r365 = virtualinvoke $r364.<android.content.Context: android.content.res.Resources getResources()>();

        $i45 = <androidx.compose.ui.R$string: int tab>;

        $r366 = virtualinvoke $r365.<android.content.res.Resources: java.lang.String getString(int)>($i45);

        $r367 = (java.lang.CharSequence) $r366;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRoleDescription(java.lang.CharSequence)>($r367);

        goto label012;

     label004:
        i48 = i46;

        $r355 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        $i40 = virtualinvoke $r355.<androidx.compose.ui.semantics.Role$Companion: int getButton-o7Vup1c()>();

        $z49 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>(i48, $i40);

        if $z49 == 0 goto label005;

        $r380 = "android.widget.Button";

        goto label010;

     label005:
        $r356 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        $i41 = virtualinvoke $r356.<androidx.compose.ui.semantics.Role$Companion: int getCheckbox-o7Vup1c()>();

        $z50 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>(i48, $i41);

        if $z50 == 0 goto label006;

        $r380 = "android.widget.CheckBox";

        goto label010;

     label006:
        $r357 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        $i42 = virtualinvoke $r357.<androidx.compose.ui.semantics.Role$Companion: int getSwitch-o7Vup1c()>();

        $z51 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>(i48, $i42);

        if $z51 == 0 goto label007;

        $r380 = "android.widget.Switch";

        goto label010;

     label007:
        $r358 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        $i43 = virtualinvoke $r358.<androidx.compose.ui.semantics.Role$Companion: int getRadioButton-o7Vup1c()>();

        $z52 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>(i48, $i43);

        if $z52 == 0 goto label008;

        $r380 = "android.widget.RadioButton";

        goto label010;

     label008:
        $r359 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        $i44 = virtualinvoke $r359.<androidx.compose.ui.semantics.Role$Companion: int getImage-o7Vup1c()>();

        $z53 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>(i48, $i44);

        if $z53 == 0 goto label009;

        $r380 = "android.widget.ImageView";

        goto label010;

     label009:
        $r380 = null;

     label010:
        r381 = $r380;

        $r382 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        i49 = virtualinvoke $r382.<androidx.compose.ui.semantics.Role$Companion: int getImage-o7Vup1c()>();

        $i50 = virtualinvoke r3.<androidx.compose.ui.semantics.Role: int unbox-impl()>();

        $z59 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>($i50, i49);

        if $z59 == 0 goto label011;

        if z0 != 0 goto label011;

        $r362 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $z54 = virtualinvoke $r362.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z54 == 0 goto label012;

     label011:
        $r383 = (java.lang.CharSequence) r381;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r383);

     label012:
        $r360 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r361 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label013;

     label013:
        $z2 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isTextField(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z2 == 0 goto label014;

        $r353 = (java.lang.CharSequence) "android.widget.EditText";

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r353);

     label014:
        $r6 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r7 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getText()>();

        $z3 = virtualinvoke $r6.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r8);

        if $z3 == 0 goto label015;

        $r352 = (java.lang.CharSequence) "android.widget.TextView";

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r352);

     label015:
        $r9 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r10 = virtualinvoke $r9.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getPackageName()>();

        $r12 = (java.lang.CharSequence) $r11;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r12);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)>(1);

        $r384 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getReplacedChildrenSortedByBounds$ui_release()>();

        z60 = 0;

        $i51 = 0;

        i52 = interfaceinvoke $r384.<java.util.List: int size()>();

     label016:
        if $i51 >= i52 goto label019;

        r385 = interfaceinvoke $r384.<java.util.List: java.lang.Object get(int)>($i51);

        r386 = (androidx.compose.ui.semantics.SemanticsNode) r385;

        $r342 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $i37 = virtualinvoke r386.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r343 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i37);

        $z46 = interfaceinvoke $r342.<java.util.Map: boolean containsKey(java.lang.Object)>($r343);

        if $z46 == 0 goto label018;

        $r344 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r345 = virtualinvoke $r344.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidViewsHandler getAndroidViewsHandler$ui_release()>();

        $r346 = virtualinvoke $r345.<androidx.compose.ui.platform.AndroidViewsHandler: java.util.HashMap getLayoutNodeToHolder()>();

        $r347 = virtualinvoke r386.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode getLayoutNode$ui_release()>();

        $r348 = virtualinvoke $r346.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r347);

        r387 = (androidx.compose.ui.viewinterop.AndroidViewHolder) $r348;

        if r387 == null goto label017;

        $r351 = (android.view.View) r387;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)>($r351);

        goto label018;

     label017:
        $r349 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r350 = (android.view.View) $r349;

        $i38 = virtualinvoke r386.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)>($r350, $i38);

     label018:
        $i51 = $i51 + 1;

        goto label016;

     label019:
        $i2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>;

        if $i2 != i0 goto label020;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>(1);

        $r340 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r340);

        goto label021;

     label020:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>(0);

        $r13 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r13);

     label021:
        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void setText(androidx.compose.ui.semantics.SemanticsNode,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r2, r1);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void setContentInvalid(androidx.compose.ui.semantics.SemanticsNode,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r2, r1);

        $r14 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r15 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r16 = virtualinvoke $r15.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getStateDescription()>();

        $r17 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r14, $r16);

        $r18 = (java.lang.CharSequence) $r17;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>($r18);

        $r19 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r20 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r21 = virtualinvoke $r20.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getToggleableState()>();

        $r22 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r19, $r21);

        $r341 = (androidx.compose.ui.state.ToggleableState) $r22;

        if $r341 == null goto label030;

        z62 = 0;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)>(1);

        $r317 = <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i30 = virtualinvoke $r341.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i31 = $r317[$i30];

        tableswitch($i31)
        {
            case 1: goto label022;
            case 2: goto label025;
            case 3: goto label028;
            default: goto label029;
        };

     label022:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)>(1);

        $r333 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        i53 = virtualinvoke $r333.<androidx.compose.ui.semantics.Role$Companion: int getSwitch-o7Vup1c()>();

        if r3 != null goto label023;

        $z63 = 0;

        goto label024;

     label023:
        $i35 = virtualinvoke r3.<androidx.compose.ui.semantics.Role: int unbox-impl()>();

        $z63 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>($i35, i53);

     label024:
        if $z63 == 0 goto label029;

        $r334 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()>();

        if $r334 != null goto label029;

        $r335 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r336 = virtualinvoke $r335.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r337 = virtualinvoke $r336.<android.content.Context: android.content.res.Resources getResources()>();

        $i36 = <androidx.compose.ui.R$string: int on>;

        $r338 = virtualinvoke $r337.<android.content.res.Resources: java.lang.String getString(int)>($i36);

        $r339 = (java.lang.CharSequence) $r338;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>($r339);

        goto label029;

     label025:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)>(0);

        $r326 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        i54 = virtualinvoke $r326.<androidx.compose.ui.semantics.Role$Companion: int getSwitch-o7Vup1c()>();

        if r3 != null goto label026;

        $z64 = 0;

        goto label027;

     label026:
        $i33 = virtualinvoke r3.<androidx.compose.ui.semantics.Role: int unbox-impl()>();

        $z64 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>($i33, i54);

     label027:
        if $z64 == 0 goto label029;

        $r327 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()>();

        if $r327 != null goto label029;

        $r328 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r329 = virtualinvoke $r328.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r330 = virtualinvoke $r329.<android.content.Context: android.content.res.Resources getResources()>();

        $i34 = <androidx.compose.ui.R$string: int off>;

        $r331 = virtualinvoke $r330.<android.content.res.Resources: java.lang.String getString(int)>($i34);

        $r332 = (java.lang.CharSequence) $r331;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>($r332);

        goto label029;

     label028:
        $r318 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()>();

        if $r318 != null goto label029;

        $r321 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r322 = virtualinvoke $r321.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r323 = virtualinvoke $r322.<android.content.Context: android.content.res.Resources getResources()>();

        $i32 = <androidx.compose.ui.R$string: int indeterminate>;

        $r324 = virtualinvoke $r323.<android.content.res.Resources: java.lang.String getString(int)>($i32);

        $r325 = (java.lang.CharSequence) $r324;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>($r325);

     label029:
        $r319 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r320 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label030;

     label030:
        $r23 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r24 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r25 = virtualinvoke $r24.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getSelected()>();

        $r26 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r23, $r25);

        $r27 = (java.lang.Boolean) $r26;

        if $r27 == null goto label037;

        z65 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();

        z66 = 0;

        $r304 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        i55 = virtualinvoke $r304.<androidx.compose.ui.semantics.Role$Companion: int getTab-o7Vup1c()>();

        if r3 != null goto label031;

        $z67 = 0;

        goto label032;

     label031:
        $i27 = virtualinvoke r3.<androidx.compose.ui.semantics.Role: int unbox-impl()>();

        $z67 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>($i27, i55);

     label032:
        if $z67 == 0 goto label033;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)>(z65);

        goto label036;

     label033:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)>(1);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)>(z65);

        $r305 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()>();

        if $r305 != null goto label036;

        if z65 == 0 goto label034;

        $r312 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r313 = virtualinvoke $r312.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r314 = virtualinvoke $r313.<android.content.Context: android.content.res.Resources getResources()>();

        $i29 = <androidx.compose.ui.R$string: int selected>;

        $r315 = virtualinvoke $r314.<android.content.res.Resources: java.lang.String getString(int)>($i29);

        $r388 = (java.lang.CharSequence) $r315;

        goto label035;

     label034:
        $r308 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r309 = virtualinvoke $r308.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r310 = virtualinvoke $r309.<android.content.Context: android.content.res.Resources getResources()>();

        $i28 = <androidx.compose.ui.R$string: int not_selected>;

        $r311 = virtualinvoke $r310.<android.content.res.Resources: java.lang.String getString(int)>($i28);

        $r388 = (java.lang.CharSequence) $r311;

     label035:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>($r388);

     label036:
        $r306 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r307 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label037;

     label037:
        $r28 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $z4 = virtualinvoke $r28.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z4 == 0 goto label038;

        $r303 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getReplacedChildren$ui_release()>();

        $z45 = interfaceinvoke $r303.<java.util.List: boolean isEmpty()>();

        if $z45 == 0 goto label041;

     label038:
        $r29 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r30 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r31 = virtualinvoke $r30.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $r32 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r29, $r31);

        r389 = (java.util.List) $r32;

        if r389 == null goto label039;

        $r301 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>(r389);

        $r390 = (java.lang.String) $r301;

        goto label040;

     label039:
        $r390 = null;

     label040:
        $r33 = (java.lang.CharSequence) $r390;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>($r33);

     label041:
        $r391 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r392 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r393 = virtualinvoke $r392.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTag()>();

        $r394 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r391, $r393);

        r395 = (java.lang.String) $r394;

        if r395 == null goto label045;

        $z68 = 0;

        r396 = r2;

     label042:
        if r396 == null goto label044;

        $r293 = virtualinvoke r396.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r294 = <androidx.compose.ui.semantics.SemanticsPropertiesAndroid: androidx.compose.ui.semantics.SemanticsPropertiesAndroid INSTANCE>;

        $r295 = virtualinvoke $r294.<androidx.compose.ui.semantics.SemanticsPropertiesAndroid: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTagsAsResourceId()>();

        $z44 = virtualinvoke $r293.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r295);

        if $z44 == 0 goto label043;

        $r296 = virtualinvoke r396.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r297 = <androidx.compose.ui.semantics.SemanticsPropertiesAndroid: androidx.compose.ui.semantics.SemanticsPropertiesAndroid INSTANCE>;

        $r298 = virtualinvoke $r297.<androidx.compose.ui.semantics.SemanticsPropertiesAndroid: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTagsAsResourceId()>();

        $r299 = virtualinvoke $r296.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r298);

        $r300 = (java.lang.Boolean) $r299;

        $z68 = virtualinvoke $r300.<java.lang.Boolean: boolean booleanValue()>();

        goto label044;

     label043:
        r396 = virtualinvoke r396.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        goto label042;

     label044:
        if $z68 == 0 goto label045;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setViewIdResourceName(java.lang.String)>(r395);

     label045:
        $r397 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r398 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r399 = virtualinvoke $r398.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getHeading()>();

        $r400 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r397, $r399);

        $r401 = (kotlin.Unit) $r400;

        if $r401 == null goto label046;

        r402 = $r401;

        z69 = 0;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>(1);

        $r291 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r292 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label046;

     label046:
        $z5 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isPassword(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)>($z5);

        $z6 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isTextField(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEditable(boolean)>($z6);

        $z7 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>($z7);

        $r34 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r35 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r36 = virtualinvoke $r35.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getFocused()>();

        $z8 = virtualinvoke $r34.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r36);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>($z8);

        $z9 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        if $z9 == 0 goto label048;

        $r286 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r287 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r288 = virtualinvoke $r287.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getFocused()>();

        $r289 = virtualinvoke $r286.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r288);

        $r290 = (java.lang.Boolean) $r289;

        $z42 = virtualinvoke $r290.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>($z42);

        $z43 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()>();

        if $z43 == 0 goto label047;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(2);

        goto label048;

     label047:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(1);

     label048:
        $z70 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: boolean isFake$ui_release()>();

        if $z70 == 0 goto label050;

        $r285 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        if $r285 == null goto label049;

        $r403 = virtualinvoke $r285.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

        goto label051;

     label049:
        $r403 = null;

        goto label051;

     label050:
        $r403 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

     label051:
        if $r403 == null goto label052;

        $z71 = virtualinvoke $r403.<androidx.compose.ui.node.NodeCoordinator: boolean isTransparent()>();

        goto label053;

     label052:
        $z71 = 0;

     label053:
        z72 = $z71;

        if z72 != 0 goto label054;

        $r281 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r282 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r283 = virtualinvoke $r282.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getInvisibleToUser()>();

        $r284 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r281, $r283);

        if $r284 != null goto label054;

        $z73 = 1;

        goto label055;

     label054:
        $z73 = 0;

     label055:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>($z73);

        $r406 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r407 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r408 = virtualinvoke $r407.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getLiveRegion()>();

        $r409 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r406, $r408);

        $r410 = (androidx.compose.ui.semantics.LiveRegionMode) $r409;

        if $r410 == null goto label059;

        z74 = 0;

        i56 = virtualinvoke $r410.<androidx.compose.ui.semantics.LiveRegionMode: int unbox-impl()>();

        $r277 = <androidx.compose.ui.semantics.LiveRegionMode: androidx.compose.ui.semantics.LiveRegionMode$Companion Companion>;

        $i25 = virtualinvoke $r277.<androidx.compose.ui.semantics.LiveRegionMode$Companion: int getPolite-0phEisY()>();

        $z40 = staticinvoke <androidx.compose.ui.semantics.LiveRegionMode: boolean equals-impl0(int,int)>(i56, $i25);

        if $z40 == 0 goto label056;

        $b57 = 1;

        goto label058;

     label056:
        $r278 = <androidx.compose.ui.semantics.LiveRegionMode: androidx.compose.ui.semantics.LiveRegionMode$Companion Companion>;

        $i26 = virtualinvoke $r278.<androidx.compose.ui.semantics.LiveRegionMode$Companion: int getAssertive-0phEisY()>();

        $z41 = staticinvoke <androidx.compose.ui.semantics.LiveRegionMode: boolean equals-impl0(int,int)>(i56, $i26);

        if $z41 == 0 goto label057;

        $b57 = 2;

        goto label058;

     label057:
        $b57 = 1;

     label058:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLiveRegion(int)>($b57);

        $r279 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r280 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label059;

     label059:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>(0);

        $r37 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r38 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r39 = virtualinvoke $r38.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getOnClick()>();

        $r40 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r37, $r39);

        $r41 = (androidx.compose.ui.semantics.AccessibilityAction) $r40;

        if $r41 == null goto label063;

        z75 = 0;

        $r266 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r267 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r268 = virtualinvoke $r267.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getSelected()>();

        $r269 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r266, $r268);

        $r270 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        z76 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r269, $r270);

        if z76 != 0 goto label060;

        $z77 = 1;

        goto label061;

     label060:
        $z77 = 0;

     label061:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>($z77);

        $z39 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z39 == 0 goto label062;

        if z76 != 0 goto label062;

        $r273 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r274 = virtualinvoke $r41.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r275 = (java.lang.CharSequence) $r274;

        specialinvoke $r273.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(16, $r275);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r273);

     label062:
        $r271 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r272 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label063;

     label063:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)>(0);

        $r42 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r43 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r44 = virtualinvoke $r43.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getOnLongClick()>();

        $r45 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r42, $r44);

        $r46 = (androidx.compose.ui.semantics.AccessibilityAction) $r45;

        if $r46 == null goto label065;

        z78 = 0;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)>(1);

        $z38 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z38 == 0 goto label064;

        $r263 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r264 = virtualinvoke $r46.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r265 = (java.lang.CharSequence) $r264;

        specialinvoke $r263.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(32, $r265);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r263);

     label064:
        $r261 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r262 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label065;

     label065:
        $r47 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r48 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r49 = virtualinvoke $r48.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCopyText()>();

        $r50 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r47, $r49);

        $r51 = (androidx.compose.ui.semantics.AccessibilityAction) $r50;

        if $r51 == null goto label066;

        z79 = 0;

        $r256 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r257 = virtualinvoke $r51.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r258 = (java.lang.CharSequence) $r257;

        specialinvoke $r256.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(16384, $r258);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r256);

        $r259 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r260 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label066;

     label066:
        $z10 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z10 == 0 goto label070;

        $r224 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r225 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r226 = virtualinvoke $r225.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetText()>();

        $r227 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r224, $r226);

        $r228 = (androidx.compose.ui.semantics.AccessibilityAction) $r227;

        if $r228 == null goto label067;

        z80 = 0;

        $r251 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r252 = virtualinvoke $r228.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r253 = (java.lang.CharSequence) $r252;

        specialinvoke $r251.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(2097152, $r253);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r251);

        $r254 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r255 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label067;

     label067:
        $r229 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r230 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r231 = virtualinvoke $r230.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCutText()>();

        $r232 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r229, $r231);

        $r233 = (androidx.compose.ui.semantics.AccessibilityAction) $r232;

        if $r233 == null goto label068;

        z81 = 0;

        $r246 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r247 = virtualinvoke $r233.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r248 = (java.lang.CharSequence) $r247;

        specialinvoke $r246.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(65536, $r248);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r246);

        $r249 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r250 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label068;

     label068:
        $r234 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r235 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r236 = virtualinvoke $r235.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getPasteText()>();

        $r237 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r234, $r236);

        $r238 = (androidx.compose.ui.semantics.AccessibilityAction) $r237;

        if $r238 == null goto label070;

        z82 = 0;

        $z36 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()>();

        if $z36 == 0 goto label069;

        $r241 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r242 = virtualinvoke $r241.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidClipboardManager getClipboardManager()>();

        $z37 = virtualinvoke $r242.<androidx.compose.ui.platform.AndroidClipboardManager: boolean hasText()>();

        if $z37 == 0 goto label069;

        $r243 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r244 = virtualinvoke $r238.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r245 = (java.lang.CharSequence) $r244;

        specialinvoke $r243.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(32768, $r245);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r243);

     label069:
        $r239 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r240 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label070;

     label070:
        r413 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String getIterableTextForAccessibility(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        r414 = (java.lang.CharSequence) r413;

        if r414 == null goto label071;

        $i24 = interfaceinvoke r414.<java.lang.CharSequence: int length()>();

        if $i24 != 0 goto label072;

     label071:
        $z83 = 1;

        goto label073;

     label072:
        $z83 = 0;

     label073:
        if $z83 != 0 goto label079;

        $i18 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int getAccessibilitySelectionStart(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        $i19 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int getAccessibilitySelectionEnd(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextSelection(int,int)>($i18, $i19);

        $r209 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r210 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r211 = virtualinvoke $r210.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetSelection()>();

        $r212 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r209, $r211);

        r415 = (androidx.compose.ui.semantics.AccessibilityAction) $r212;

        $r213 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        if r415 == null goto label074;

        $r416 = virtualinvoke r415.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        goto label075;

     label074:
        $r416 = null;

     label075:
        $r214 = (java.lang.CharSequence) $r416;

        specialinvoke $r213.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(131072, $r214);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r213);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(256);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(512);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)>(11);

        $r215 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r216 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r217 = virtualinvoke $r216.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $r218 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r215, $r217);

        $r223 = (java.util.List) $r218;

        r417 = (java.util.Collection) $r223;

        if r417 == null goto label076;

        $z35 = interfaceinvoke r417.<java.util.Collection: boolean isEmpty()>();

        if $z35 == 0 goto label077;

     label076:
        $z84 = 1;

        goto label078;

     label077:
        $z84 = 0;

     label078:
        if $z84 == 0 goto label079;

        $r219 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r220 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r221 = virtualinvoke $r220.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getGetTextLayoutResult()>();

        $z33 = virtualinvoke $r219.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r221);

        if $z33 == 0 goto label079;

        $z34 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$excludeLineAndPageGranularities(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z34 != 0 goto label079;

        $i20 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()>();

        $i21 = $i20 | 4;

        $i22 = $i21 | 16;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)>($i22);

     label079:
        $i58 = <android.os.Build$VERSION: int SDK_INT>;

        if $i58 < 26 goto label085;

        $r203 = new java.util.ArrayList;

        specialinvoke $r203.<java.util.ArrayList: void <init>()>();

        r418 = (java.util.List) $r203;

        $r419 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>();

        if $r419 == null goto label080;

        $i17 = interfaceinvoke $r419.<java.lang.CharSequence: int length()>();

        if $i17 != 0 goto label081;

     label080:
        $z85 = 1;

        goto label082;

     label081:
        $z85 = 0;

     label082:
        if $z85 != 0 goto label083;

        $r206 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r207 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r208 = virtualinvoke $r207.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getGetTextLayoutResult()>();

        $z31 = virtualinvoke $r206.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r208);

        if $z31 == 0 goto label083;

        interfaceinvoke r418.<java.util.List: boolean add(java.lang.Object)>("android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_KEY");

     label083:
        $r420 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r421 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r422 = virtualinvoke $r421.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTag()>();

        $z86 = virtualinvoke $r420.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r422);

        if $z86 == 0 goto label084;

        interfaceinvoke r418.<java.util.List: boolean add(java.lang.Object)>("androidx.compose.ui.semantics.testTag");

     label084:
        $z29 = interfaceinvoke r418.<java.util.List: boolean isEmpty()>();

        if $z29 != 0 goto label085;

        $r204 = <androidx.compose.ui.platform.AccessibilityNodeInfoVerificationHelperMethods: androidx.compose.ui.platform.AccessibilityNodeInfoVerificationHelperMethods INSTANCE>;

        $r205 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r205, "info.unwrap()");

        virtualinvoke $r204.<androidx.compose.ui.platform.AccessibilityNodeInfoVerificationHelperMethods: void setAvailableExtraData(android.view.accessibility.AccessibilityNodeInfo,java.util.List)>($r205, r418);

     label085:
        $r423 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r424 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r425 = virtualinvoke $r424.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getProgressBarRangeInfo()>();

        $r426 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r423, $r425);

        r427 = (androidx.compose.ui.semantics.ProgressBarRangeInfo) $r426;

        if r427 == null goto label102;

        $r158 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r159 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r160 = virtualinvoke $r159.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetProgress()>();

        $z27 = virtualinvoke $r158.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r160);

        if $z27 == 0 goto label086;

        $r202 = (java.lang.CharSequence) "android.widget.SeekBar";

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r202);

        goto label087;

     label086:
        $r161 = (java.lang.CharSequence) "android.widget.ProgressBar";

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r161);

     label087:
        $r162 = <androidx.compose.ui.semantics.ProgressBarRangeInfo: androidx.compose.ui.semantics.ProgressBarRangeInfo$Companion Companion>;

        $r163 = virtualinvoke $r162.<androidx.compose.ui.semantics.ProgressBarRangeInfo$Companion: androidx.compose.ui.semantics.ProgressBarRangeInfo getIndeterminate()>();

        if r427 == $r163 goto label099;

        $r184 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r185 = interfaceinvoke $r184.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r186 = (java.lang.Number) $r185;

        $f10 = virtualinvoke $r186.<java.lang.Number: float floatValue()>();

        $r187 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r188 = interfaceinvoke $r187.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r189 = (java.lang.Number) $r188;

        $f11 = virtualinvoke $r189.<java.lang.Number: float floatValue()>();

        $f12 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: float getCurrent()>();

        $r190 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float)>(1, $f10, $f11, $f12);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)>($r190);

        $r191 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()>();

        if $r191 != null goto label100;

        $r428 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r192 = interfaceinvoke $r428.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r193 = (java.lang.Number) $r192;

        $f13 = virtualinvoke $r193.<java.lang.Number: float floatValue()>();

        $r194 = interfaceinvoke $r428.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r195 = (java.lang.Number) $r194;

        $f14 = virtualinvoke $r195.<java.lang.Number: float floatValue()>();

        $f15 = $f13 - $f14;

        $b13 = $f15 cmpg 0.0F;

        if $b13 != 0 goto label088;

        $z87 = 1;

        goto label089;

     label088:
        $z87 = 0;

     label089:
        if $z87 == 0 goto label090;

        $f24 = 0.0F;

        goto label091;

     label090:
        $f16 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: float getCurrent()>();

        $r196 = interfaceinvoke $r428.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r197 = (java.lang.Number) $r196;

        $f17 = virtualinvoke $r197.<java.lang.Number: float floatValue()>();

        $f18 = $f16 - $f17;

        $r198 = interfaceinvoke $r428.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r199 = (java.lang.Number) $r198;

        $f19 = virtualinvoke $r199.<java.lang.Number: float floatValue()>();

        $r200 = interfaceinvoke $r428.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r201 = (java.lang.Number) $r200;

        $f20 = virtualinvoke $r201.<java.lang.Number: float floatValue()>();

        $f21 = $f19 - $f20;

        $f24 = $f18 / $f21;

     label091:
        f25 = staticinvoke <kotlin.ranges.RangesKt: float coerceIn(float,float,float)>($f24, 0.0F, 1.0F);

        f26 = f25;

        $b14 = f26 cmpg 0.0F;

        if $b14 != 0 goto label092;

        $z88 = 1;

        goto label093;

     label092:
        $z88 = 0;

     label093:
        if $z88 == 0 goto label094;

        $i59 = 0;

        goto label098;

     label094:
        $b15 = f26 cmpg 1.0F;

        if $b15 != 0 goto label095;

        $z89 = 1;

        goto label096;

     label095:
        $z89 = 0;

     label096:
        if $z89 == 0 goto label097;

        $i59 = 100;

        goto label098;

     label097:
        $f22 = (float) 100;

        $f23 = f25 * $f22;

        $i16 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f23);

        $i59 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i16, 1, 99);

     label098:
        i60 = $i59;

        $r429 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r430 = virtualinvoke $r429.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r431 = virtualinvoke $r430.<android.content.Context: android.content.res.Resources getResources()>();

        $i61 = <androidx.compose.ui.R$string: int template_percent>;

        r432 = newarray (java.lang.Object)[1];

        $r433 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i60);

        r432[0] = $r433;

        $r434 = virtualinvoke $r431.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>($i61, r432);

        $r435 = (java.lang.CharSequence) $r434;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>($r435);

        goto label100;

     label099:
        $r164 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()>();

        if $r164 != null goto label100;

        $r179 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r180 = virtualinvoke $r179.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r181 = virtualinvoke $r180.<android.content.Context: android.content.res.Resources getResources()>();

        $i12 = <androidx.compose.ui.R$string: int in_progress>;

        $r182 = virtualinvoke $r181.<android.content.res.Resources: java.lang.String getString(int)>($i12);

        $r183 = (java.lang.CharSequence) $r182;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>($r183);

     label100:
        $r436 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r437 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r438 = virtualinvoke $r437.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetProgress()>();

        $z90 = virtualinvoke $r436.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r438);

        if $z90 == 0 goto label102;

        $z28 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z28 == 0 goto label102;

        $f2 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: float getCurrent()>();

        $r165 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r166 = interfaceinvoke $r165.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r167 = (java.lang.Number) $r166;

        $f3 = virtualinvoke $r167.<java.lang.Number: float floatValue()>();

        $r168 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r169 = interfaceinvoke $r168.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r170 = (java.lang.Number) $r169;

        $f4 = virtualinvoke $r170.<java.lang.Number: float floatValue()>();

        $f5 = staticinvoke <kotlin.ranges.RangesKt: float coerceAtLeast(float,float)>($f3, $f4);

        $b10 = $f2 cmpg $f5;

        if $b10 >= 0 goto label101;

        $r178 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r178);

     label101:
        $f6 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: float getCurrent()>();

        $r171 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r172 = interfaceinvoke $r171.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r173 = (java.lang.Number) $r172;

        $f7 = virtualinvoke $r173.<java.lang.Number: float floatValue()>();

        $r174 = virtualinvoke r427.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r175 = interfaceinvoke $r174.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r176 = (java.lang.Number) $r175;

        $f8 = virtualinvoke $r176.<java.lang.Number: float floatValue()>();

        $f9 = staticinvoke <kotlin.ranges.RangesKt: float coerceAtMost(float,float)>($f7, $f8);

        $b11 = $f6 cmpl $f9;

        if $b11 <= 0 goto label102;

        $r177 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r177);

     label102:
        $i62 = <android.os.Build$VERSION: int SDK_INT>;

        if $i62 < 24 goto label103;

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Api24Impl: void addSetProgressAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.compose.ui.semantics.SemanticsNode)>(r1, r2);

     label103:
        staticinvoke <androidx.compose.ui.platform.accessibility.CollectionInfoKt: void setCollectionInfo(androidx.compose.ui.semantics.SemanticsNode,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r2, r1);

        staticinvoke <androidx.compose.ui.platform.accessibility.CollectionInfoKt: void setCollectionItemInfo(androidx.compose.ui.semantics.SemanticsNode,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r2, r1);

        $r52 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r53 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r54 = virtualinvoke $r53.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getHorizontalScrollAxisRange()>();

        $r55 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r52, $r54);

        $r439 = (androidx.compose.ui.semantics.ScrollAxisRange) $r55;

        $r56 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r57 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r58 = virtualinvoke $r57.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getScrollBy()>();

        $r59 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r56, $r58);

        r440 = (androidx.compose.ui.semantics.AccessibilityAction) $r59;

        if $r439 == null goto label111;

        if r440 == null goto label111;

        $z22 = staticinvoke <androidx.compose.ui.platform.accessibility.CollectionInfoKt: boolean hasCollectionInfo(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z22 != 0 goto label104;

        $r157 = (java.lang.CharSequence) "android.widget.HorizontalScrollView";

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r157);

     label104:
        $r150 = virtualinvoke $r439.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getMaxValue()>();

        $r151 = interfaceinvoke $r150.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r152 = (java.lang.Number) $r151;

        $f1 = virtualinvoke $r152.<java.lang.Number: float floatValue()>();

        $b9 = $f1 cmpl 0.0F;

        if $b9 <= 0 goto label105;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

     label105:
        $z23 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z23 == 0 goto label111;

        $z24 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean populateAccessibilityNodeInfoProperties$canScrollForward(androidx.compose.ui.semantics.ScrollAxisRange)>($r439);

        if $z24 == 0 goto label108;

        $r155 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r155);

        $z26 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isRtl(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z26 != 0 goto label106;

        $r441 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT>;

        goto label107;

     label106:
        $r441 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT>;

     label107:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r441);

     label108:
        $z91 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean populateAccessibilityNodeInfoProperties$canScrollBackward(androidx.compose.ui.semantics.ScrollAxisRange)>($r439);

        if $z91 == 0 goto label111;

        $r153 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r153);

        $z25 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isRtl(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z25 != 0 goto label109;

        $r442 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT>;

        goto label110;

     label109:
        $r442 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT>;

     label110:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r442);

     label111:
        $r443 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r444 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r445 = virtualinvoke $r444.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getVerticalScrollAxisRange()>();

        $r446 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r443, $r445);

        r447 = (androidx.compose.ui.semantics.ScrollAxisRange) $r446;

        if r447 == null goto label115;

        if r440 == null goto label115;

        $z18 = staticinvoke <androidx.compose.ui.platform.accessibility.CollectionInfoKt: boolean hasCollectionInfo(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z18 != 0 goto label112;

        $r149 = (java.lang.CharSequence) "android.widget.ScrollView";

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r149);

     label112:
        $r142 = virtualinvoke r447.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getMaxValue()>();

        $r143 = interfaceinvoke $r142.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r144 = (java.lang.Number) $r143;

        $f0 = virtualinvoke $r144.<java.lang.Number: float floatValue()>();

        $b8 = $f0 cmpl 0.0F;

        if $b8 <= 0 goto label113;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

     label113:
        $z19 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z19 == 0 goto label115;

        $z20 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean populateAccessibilityNodeInfoProperties$canScrollForward(androidx.compose.ui.semantics.ScrollAxisRange)>(r447);

        if $z20 == 0 goto label114;

        $r147 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r147);

        $r148 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r148);

     label114:
        $z21 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean populateAccessibilityNodeInfoProperties$canScrollBackward(androidx.compose.ui.semantics.ScrollAxisRange)>(r447);

        if $z21 == 0 goto label115;

        $r145 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r145);

        $r146 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r146);

     label115:
        $r448 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r449 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r450 = virtualinvoke $r449.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getPaneTitle()>();

        $r451 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r448, $r450);

        $r452 = (java.lang.CharSequence) $r451;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)>($r452);

        $z92 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z92 == 0 goto label129;

        $r64 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r65 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r66 = virtualinvoke $r65.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getExpand()>();

        $r67 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r64, $r66);

        $r68 = (androidx.compose.ui.semantics.AccessibilityAction) $r67;

        if $r68 == null goto label116;

        r453 = $r68;

        $r137 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r138 = virtualinvoke r453.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r139 = (java.lang.CharSequence) $r138;

        specialinvoke $r137.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(262144, $r139);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r137);

        $r140 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r141 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label116;

     label116:
        $r69 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r70 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r71 = virtualinvoke $r70.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCollapse()>();

        $r72 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r69, $r71);

        $r73 = (androidx.compose.ui.semantics.AccessibilityAction) $r72;

        if $r73 == null goto label117;

        r454 = $r73;

        $r132 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r133 = virtualinvoke r454.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r134 = (java.lang.CharSequence) $r133;

        specialinvoke $r132.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(524288, $r134);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r132);

        $r135 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r136 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label117;

     label117:
        $r74 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r75 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r76 = virtualinvoke $r75.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getDismiss()>();

        $r77 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r74, $r76);

        $r78 = (androidx.compose.ui.semantics.AccessibilityAction) $r77;

        if $r78 == null goto label118;

        r455 = $r78;

        $r127 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r128 = virtualinvoke r455.<androidx.compose.ui.semantics.AccessibilityAction: java.lang.String getLabel()>();

        $r129 = (java.lang.CharSequence) $r128;

        specialinvoke $r127.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(1048576, $r129);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r127);

        $r130 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r131 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label118;

     label118:
        $r79 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r80 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r81 = virtualinvoke $r80.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCustomActions()>();

        $z13 = virtualinvoke $r79.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r81);

        if $z13 == 0 goto label129;

        $r82 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r83 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r84 = virtualinvoke $r83.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCustomActions()>();

        $r85 = virtualinvoke $r82.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r84);

        r456 = (java.util.List) $r85;

        $i3 = interfaceinvoke r456.<java.util.List: int size()>();

        $r86 = <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int[] AccessibilityActionsResourceIds>;

        $i4 = lengthof $r86;

        if $i3 < $i4 goto label119;

        $r120 = new java.lang.IllegalStateException;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t have more than ");

        $r123 = <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int[] AccessibilityActionsResourceIds>;

        $i7 = lengthof $r123;

        $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" custom actions for one widget");

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r120.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r126);

        throw $r120;

     label119:
        $r87 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r87.<androidx.collection.SparseArrayCompat: void <init>()>();

        r4 = $r87;

        $r88 = new java.util.LinkedHashMap;

        specialinvoke $r88.<java.util.LinkedHashMap: void <init>()>();

        r457 = (java.util.Map) $r88;

        $r89 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat labelToActionId>;

        $z14 = virtualinvoke $r89.<androidx.collection.SparseArrayCompat: boolean containsKey(int)>(i0);

        if $z14 == 0 goto label126;

        $r99 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat labelToActionId>;

        $r100 = virtualinvoke $r99.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i0);

        $r458 = (java.util.Map) $r100;

        $r101 = <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int[] AccessibilityActionsResourceIds>;

        r459 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(int[])>($r101);

        $r102 = new java.util.ArrayList;

        specialinvoke $r102.<java.util.ArrayList: void <init>()>();

        r460 = (java.util.List) $r102;

        i63 = 0;

        i64 = interfaceinvoke r456.<java.util.List: int size()>();

     label120:
        if i63 >= i64 goto label123;

        r462 = interfaceinvoke r456.<java.util.List: java.lang.Object get(int)>(i63);

        r463 = (androidx.compose.ui.semantics.CustomAccessibilityAction) r462;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r458);

        $r111 = virtualinvoke r463.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        $z15 = interfaceinvoke $r458.<java.util.Map: boolean containsKey(java.lang.Object)>($r111);

        if $z15 == 0 goto label121;

        $r112 = virtualinvoke r463.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        $r113 = interfaceinvoke $r458.<java.util.Map: java.lang.Object get(java.lang.Object)>($r112);

        r464 = (java.lang.Integer) $r113;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r464);

        $i5 = virtualinvoke r464.<java.lang.Integer: int intValue()>();

        $r114 = virtualinvoke r463.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        virtualinvoke r4.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>($i5, $r114);

        $r115 = virtualinvoke r463.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        interfaceinvoke r457.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r115, r464);

        interfaceinvoke r459.<java.util.List: boolean remove(java.lang.Object)>(r464);

        $r117 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $i6 = virtualinvoke r464.<java.lang.Integer: int intValue()>();

        $r118 = virtualinvoke r463.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        $r119 = (java.lang.CharSequence) $r118;

        specialinvoke $r117.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>($i6, $r119);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r117);

        goto label122;

     label121:
        interfaceinvoke r460.<java.util.List: boolean add(java.lang.Object)>(r463);

     label122:
        i63 = i63 + 1;

        goto label120;

     label123:
        i65 = 0;

        i66 = interfaceinvoke r460.<java.util.List: int size()>();

     label124:
        if i65 >= i66 goto label125;

        r466 = interfaceinvoke r460.<java.util.List: java.lang.Object get(int)>(i65);

        r467 = (androidx.compose.ui.semantics.CustomAccessibilityAction) r466;

        z99 = 0;

        $r103 = interfaceinvoke r459.<java.util.List: java.lang.Object get(int)>(i65);

        $r104 = (java.lang.Number) $r103;

        i1 = virtualinvoke $r104.<java.lang.Number: int intValue()>();

        $r105 = virtualinvoke r467.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        virtualinvoke r4.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>(i1, $r105);

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r106 = virtualinvoke r467.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        interfaceinvoke r457.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r106, r5);

        $r108 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r109 = virtualinvoke r467.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        $r110 = (java.lang.CharSequence) $r109;

        specialinvoke $r108.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(i1, $r110);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r108);

        i65 = i65 + 1;

        goto label124;

     label125:
        goto label128;

     label126:
        z100 = 0;

        i67 = 0;

        $i68 = interfaceinvoke r456.<java.util.List: int size()>();

     label127:
        if i67 >= $i68 goto label128;

        $r469 = interfaceinvoke r456.<java.util.List: java.lang.Object get(int)>(i67);

        r470 = (androidx.compose.ui.semantics.CustomAccessibilityAction) $r469;

        i69 = i67;

        z101 = 0;

        $r92 = <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int[] AccessibilityActionsResourceIds>;

        i70 = $r92[i69];

        $r93 = virtualinvoke r470.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        virtualinvoke r4.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>(i70, $r93);

        $r471 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i70);

        $r94 = virtualinvoke r470.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        interfaceinvoke r457.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r94, $r471);

        $r96 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r97 = virtualinvoke r470.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        $r98 = (java.lang.CharSequence) $r97;

        specialinvoke $r96.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>(i70, $r98);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r96);

        i67 = i67 + 1;

        goto label127;

     label128:
        $r90 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat actionIdToLabel>;

        virtualinvoke $r90.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>(i0, r4);

        $r91 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat labelToActionId>;

        virtualinvoke $r91.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>(i0, r457);

     label129:
        $r472 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        if $r472 != null goto label130;

        $r61 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>();

        if $r61 != null goto label130;

        $r62 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()>();

        if $r62 != null goto label130;

        $r63 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()>();

        if $r63 != null goto label130;

        $z12 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()>();

        if $z12 == 0 goto label131;

     label130:
        $z102 = 1;

        goto label132;

     label131:
        $z102 = 0;

     label132:
        z103 = $z102;

        $r60 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $z11 = virtualinvoke $r60.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z11 != 0 goto label133;

        if z0 == 0 goto label134;

        if z103 == 0 goto label134;

     label133:
        $z104 = 1;

        goto label135;

     label134:
        $z104 = 0;

     label135:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>($z104);

        return;
    }

    private final void setContentInvalid(androidx.compose.ui.semantics.SemanticsNode, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r2;
        androidx.compose.ui.semantics.SemanticsConfiguration $r3, $r6;
        androidx.compose.ui.semantics.SemanticsProperties $r4, $r7;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r5, $r8;
        boolean $z0;
        java.lang.Object $r9;
        java.lang.CharSequence $r10;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        r2 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r3 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r4 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getError()>();

        $z0 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r5);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentInvalid(boolean)>(1);

        $r6 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r7 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getError()>();

        $r9 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r6, $r8);

        $r10 = (java.lang.CharSequence) $r9;

        virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)>($r10);

     label1:
        return;
    }

    private final void setText(androidx.compose.ui.semantics.SemanticsNode, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r2;
        androidx.compose.ui.text.font.FontFamily$Resolver r3;
        android.text.SpannableString r4, $r23, $r25, r28;
        java.util.List r5;
        androidx.compose.ui.text.AnnotatedString r6, r22;
        androidx.compose.ui.platform.AndroidComposeView $r7, $r17, $r19;
        androidx.compose.ui.semantics.SemanticsConfiguration $r8, $r11;
        java.lang.CharSequence $r9, $r10, $r26, $r27, $r30;
        androidx.compose.ui.semantics.SemanticsProperties $r12;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r13;
        java.lang.Object $r14, $r16;
        androidx.compose.ui.unit.Density $r18, $r20;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        r2 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r7 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        r3 = virtualinvoke $r7.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.font.FontFamily$Resolver getFontFamilyResolver()>();

        $r8 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        r22 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.text.AnnotatedString getTextForTextField(androidx.compose.ui.semantics.SemanticsConfiguration)>($r8);

        if r22 == null goto label1;

        $r19 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r20 = virtualinvoke $r19.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.unit.Density getDensity()>();

        $r23 = staticinvoke <androidx.compose.ui.text.platform.AndroidAccessibilitySpannableString_androidKt: android.text.SpannableString toAccessibilitySpannableString(androidx.compose.ui.text.AnnotatedString,androidx.compose.ui.unit.Density,androidx.compose.ui.text.font.FontFamily$Resolver)>(r22, $r20, r3);

        goto label2;

     label1:
        $r23 = null;

     label2:
        $r9 = (java.lang.CharSequence) $r23;

        $r10 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.CharSequence trimToSize(java.lang.CharSequence,int)>($r9, 100000);

        r4 = (android.text.SpannableString) $r10;

        $r11 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r12 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r13 = virtualinvoke $r12.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getText()>();

        $r14 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r11, $r13);

        r5 = (java.util.List) $r14;

        if r5 == null goto label3;

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>(r5);

        r6 = (androidx.compose.ui.text.AnnotatedString) $r16;

        if r6 == null goto label3;

        $r17 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r18 = virtualinvoke $r17.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.unit.Density getDensity()>();

        $r25 = staticinvoke <androidx.compose.ui.text.platform.AndroidAccessibilitySpannableString_androidKt: android.text.SpannableString toAccessibilitySpannableString(androidx.compose.ui.text.AnnotatedString,androidx.compose.ui.unit.Density,androidx.compose.ui.text.font.FontFamily$Resolver)>(r6, $r18, r3);

        goto label4;

     label3:
        $r25 = null;

     label4:
        $r26 = (java.lang.CharSequence) $r25;

        $r27 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.CharSequence trimToSize(java.lang.CharSequence,int)>($r26, 100000);

        r28 = (android.text.SpannableString) $r27;

        if r4 == null goto label5;

        $r30 = (java.lang.CharSequence) r4;

        goto label6;

     label5:
        $r30 = (java.lang.CharSequence) r28;

     label6:
        virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)>($r30);

        return;
    }

    private final boolean isAccessibilityFocused(int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final boolean requestAccessibilityFocus(int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        androidx.compose.ui.platform.AndroidComposeView $r1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityFocused(int)>(i0);

        if $z1 != 0 goto label3;

        $i1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>;

        if $i1 == -2147483648 goto label2;

        $i2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>;

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i2, 65536, null, null, 12, null);

     label2:
        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId> = i0;

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        virtualinvoke $r1.<androidx.compose.ui.platform.AndroidComposeView: void invalidate()>();

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, i0, 32768, null, null, 12, null);

        return 1;

     label3:
        return 0;
    }

    private final boolean sendEventForVirtualView(int, int, java.lang.Integer, java.util.List)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, $i2;
        java.lang.Integer r1;
        java.util.List r2;
        android.view.accessibility.AccessibilityEvent r3;
        boolean $z0, $z1;
        java.lang.CharSequence $r4, $r6;
        java.lang.String $r5;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Integer;

        r2 := @parameter3: java.util.List;

        if i0 == -2147483648 goto label1;

        $z0 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r3 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createEvent$ui_release(int,int)>(i0, i1);

        if r1 == null goto label3;

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>($i2);

     label3:
        if r2 == null goto label4;

        $r4 = (java.lang.CharSequence) ",";

        $r5 = staticinvoke <androidx.compose.ui.TempListUtilsKt: java.lang.String fastJoinToString$default(java.util.List,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r2, $r4, null, null, 0, null, null, 62, null);

        $r6 = (java.lang.CharSequence) $r5;

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r6);

     label4:
        $z1 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>(r3);

        return $z1;
    }

    static boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat, int, int, java.lang.Integer, java.util.List, int, java.lang.Object)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Integer r2;
        java.util.List r3;

        r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Integer;

        r3 := @parameter4: java.util.List;

        i2 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i3 = i2 & 4;

        if $i3 == 0 goto label1;

        r2 = null;

     label1:
        $i4 = i2 & 8;

        if $i4 == 0 goto label2;

        r3 = null;

     label2:
        $z0 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView(int,int,java.lang.Integer,java.util.List)>(i0, i1, r2, r3);

        return $z0;
    }

    private final boolean sendEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0, $z1;
        androidx.compose.ui.platform.AndroidComposeView $r2, $r4;
        android.view.ViewParent $r3;
        android.view.View $r5;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.platform.AndroidComposeView: android.view.ViewParent getParent()>();

        $r4 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r5 = (android.view.View) $r4;

        $z1 = interfaceinvoke $r3.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r5, r1);

        return $z1;
    }

    public final android.view.accessibility.AccessibilityEvent createEvent$ui_release(int, int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1;
        android.view.accessibility.AccessibilityEvent r1, $r3;
        androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds r2, $r14;
        java.lang.CharSequence $r4, $r8;
        androidx.compose.ui.platform.AndroidComposeView $r5, $r9;
        android.content.Context $r6;
        java.lang.String $r7;
        android.view.View $r10;
        java.util.Map $r11;
        java.lang.Integer $r12;
        java.lang.Object $r13;
        androidx.compose.ui.semantics.SemanticsNode $r15;
        boolean $z1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "obtain(eventType)");

        r1 = $r3;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>(1);

        $r4 = (java.lang.CharSequence) "android.view.View";

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r4);

        $r5 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        $r8 = (java.lang.CharSequence) $r7;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r8);

        $r9 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r10 = (android.view.View) $r9;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setSource(android.view.View,int)>($r10, i0);

        $r11 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        $r14 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r13;

        if $r14 == null goto label1;

        r2 = $r14;

        $r15 = virtualinvoke r2.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        $z1 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isPassword(androidx.compose.ui.semantics.SemanticsNode)>($r15);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>($z1);

        goto label1;

     label1:
        return r1;
    }

    private final android.view.accessibility.AccessibilityEvent createTextSelectionChangedEvent(int, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, i2, i3;
        java.lang.Integer r1, r2, r3;
        java.lang.String r4, r14;
        android.view.accessibility.AccessibilityEvent r5;
        java.util.List $r7;
        java.lang.Number $r8, $r10, $r12;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Integer;

        r2 := @parameter2: java.lang.Integer;

        r3 := @parameter3: java.lang.Integer;

        r4 := @parameter4: java.lang.String;

        r5 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createEvent$ui_release(int,int)>(i0, 8192);

        if r1 == null goto label1;

        $r12 = (java.lang.Number) r1;

        i1 = virtualinvoke $r12.<java.lang.Number: int intValue()>();

        virtualinvoke r5.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>(i1);

        goto label1;

     label1:
        if r2 == null goto label2;

        $r10 = (java.lang.Number) r2;

        i2 = virtualinvoke $r10.<java.lang.Number: int intValue()>();

        virtualinvoke r5.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>(i2);

        goto label2;

     label2:
        if r3 == null goto label3;

        $r8 = (java.lang.Number) r3;

        i3 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        virtualinvoke r5.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>(i3);

        goto label3;

     label3:
        if r4 == null goto label4;

        r14 = r4;

        $r7 = virtualinvoke r5.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r14);

        goto label4;

     label4:
        return r5;
    }

    private final boolean clearAccessibilityFocus(int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0;
        boolean $z0;
        androidx.compose.ui.platform.AndroidComposeView $r1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityFocused(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId> = -2147483648;

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        virtualinvoke $r1.<androidx.compose.ui.platform.AndroidComposeView: void invalidate()>();

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, i0, 65536, null, null, 12, null);

        return 1;

     label1:
        return 0;
    }

    private final boolean performActionHelper(int, int, android.os.Bundle)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, $i2, $i3, $i8, $i9, $i10, i11, $i12, i13, $i14, i15, i19, i20;
        android.os.Bundle r1;
        androidx.compose.ui.semantics.SemanticsNode r2, $r7, r228;
        java.util.Map $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r12, $r14, $r21, $r26, $r37, $r41, $r46, $r54, $r58, $r62, $r65, $r71, $r73, $r78, $r80, $r85, $r87, $r92, $r94, $r99, $r101, $r106, $r110, $r114, $r119, $r125, $r142, $r147, $r151, $r156, $r160, $r164, $r171, $r173, $r176, $r178, $r183, $r187, $r202, $r209, r240;
        androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds $r6;
        androidx.compose.ui.semantics.SemanticsConfiguration $r9, $r18, $r34, $r38, $r51, $r55, $r59, $r68, $r75, $r82, $r89, $r96, $r103, $r107, $r111, $r144, $r153, $r161, $r168, $r180, $r199, $r206;
        androidx.compose.ui.semantics.SemanticsActions $r10, $r19, $r52, $r56, $r60, $r69, $r76, $r83, $r90, $r97, $r108, $r145, $r154, $r169, $r181, $r200;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r11, $r20, $r36, $r40, $r53, $r57, $r61, $r70, $r77, $r84, $r91, $r98, $r105, $r109, $r113, $r146, $r155, $r163, $r170, $r182, $r201, $r208;
        kotlin.Function $r13, $r23, $r42, $r63, $r72, $r79, $r86, $r93, $r100, $r115, $r121, $r139, $r149, $r158, $r172;
        java.lang.Boolean $r15, $r27, $r47, $r66, $r74, $r81, $r88, $r95, $r102, $r120, $r126, $r143, $r152, $r165, $r174, $r188, $r191, r192;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, $z13, $z14, z15, $z16, z17, $z18, $z19, $z20, $z21, z22, $z23, z24, $z25, z26, $z27, z28, $z29, z30, $z31, z32, $z33, z34, $z35, z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, z55, z56;
        androidx.compose.ui.semantics.AccessibilityAction $r22, $r148, $r157, r189, r195, $r203, r204, r211, r215, r218, r220, r222, r224, r226, $r229, r230, $r231;
        kotlin.jvm.functions.Function1 $r24, $r140, r216;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, f23, f24, $f25, f26, f27, f28, f29, f30;
        java.lang.Float $r25, $r44, $r45, $r117, $r118, $r123, $r124, $r141;
        androidx.compose.ui.layout.LayoutInfo $r28, $r30, $r196;
        androidx.compose.ui.layout.LayoutCoordinates $r29, $r31, $r32, $r197;
        androidx.compose.ui.geometry.Offset$Companion $r33;
        long $l5, $l6, $l7, l16, $l17, l18;
        androidx.compose.ui.semantics.SemanticsProperties $r35, $r39, $r104, $r112, $r162, $r207;
        kotlin.jvm.functions.Function2 $r43, $r116, $r122;
        androidx.compose.ui.text.AnnotatedString $r64;
        kotlin.ranges.ClosedFloatingPointRange $r127, $r130, $r133, $r136;
        java.lang.Comparable $r128, $r131, $r134, $r137;
        java.lang.Number $r129, $r132, $r135, $r138;
        kotlin.jvm.functions.Function0 $r150, $r159, $r186, r190, r212, r219, r221, r223, r225, r227;
        androidx.compose.ui.platform.AndroidComposeView $r166;
        androidx.compose.ui.focus.FocusManager $r167;
        androidx.collection.SparseArrayCompat $r175, $r177;
        java.lang.CharSequence $r179, r237;
        java.util.List $r184, r238, r239;
        java.lang.String $r185, $r213, r214, $r217;
        androidx.compose.ui.semantics.ProgressBarRangeInfo r194;
        androidx.compose.ui.geometry.Rect $r198, r232, r233, r234;
        androidx.compose.ui.semantics.ScrollAxisRange r205, r210, r235, r236;
        androidx.compose.ui.semantics.CustomAccessibilityAction r241;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $r3 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r5;

        if $r6 == null goto label001;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        if $r7 != null goto label002;

     label001:
        return 0;

     label002:
        r2 = $r7;

        lookupswitch(i1)
        {
            case 64: goto label003;
            case 128: goto label004;
            case 256: goto label005;
            case 512: goto label005;
            case 16384: goto label015;
            case 131072: goto label009;
            default: goto label018;
        };

     label003:
        $z3 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean requestAccessibilityFocus(int)>(i0);

        return $z3;

     label004:
        $z2 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean clearAccessibilityFocus(int)>(i0);

        return $z2;

     label005:
        if r1 == null goto label008;

        i11 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT");

        z15 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN");

        if i1 != 256 goto label006;

        $z16 = 1;

        goto label007;

     label006:
        $z16 = 0;

     label007:
        $z1 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean traverseAtGranularity(androidx.compose.ui.semantics.SemanticsNode,int,boolean,boolean)>(r2, i11, $z16, z15);

        return $z1;

     label008:
        return 0;

     label009:
        if r1 == null goto label010;

        $i12 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_START_INT", -1);

        goto label011;

     label010:
        $i12 = -1;

     label011:
        i13 = $i12;

        if r1 == null goto label012;

        $i14 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_END_INT", -1);

        goto label013;

     label012:
        $i14 = -1;

     label013:
        i15 = $i14;

        z17 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean setAccessibilitySelection(androidx.compose.ui.semantics.SemanticsNode,int,int,boolean)>(r2, i13, i15, 0);

        if z17 == 0 goto label014;

        $i2 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $i3 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>($i2);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i3, 0, null, null, 12, null);

     label014:
        return z17;

     label015:
        $r9 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r10 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r11 = virtualinvoke $r10.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCopyText()>();

        $r12 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r9, $r11);

        r189 = (androidx.compose.ui.semantics.AccessibilityAction) $r12;

        if r189 == null goto label016;

        $r13 = virtualinvoke r189.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        r190 = (kotlin.jvm.functions.Function0) $r13;

        if r190 == null goto label016;

        $r14 = interfaceinvoke r190.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r15 = (java.lang.Boolean) $r14;

        $z18 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        goto label017;

     label016:
        $z18 = 0;

     label017:
        return $z18;

     label018:
        $z4 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z4 != 0 goto label019;

        return 0;

     label019:
        lookupswitch(i1)
        {
            case 1: goto label074;
            case 2: goto label077;
            case 16: goto label020;
            case 32: goto label025;
            case 4096: goto label028;
            case 8192: goto label028;
            case 32768: goto label086;
            case 65536: goto label089;
            case 262144: goto label092;
            case 524288: goto label095;
            case 1048576: goto label098;
            case 2097152: goto label080;
            case 16908342: goto label101;
            case 16908344: goto label028;
            case 16908345: goto label028;
            case 16908346: goto label028;
            case 16908347: goto label028;
            case 16908349: goto label069;
            default: goto label123;
        };

     label020:
        $r153 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r154 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r155 = virtualinvoke $r154.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getOnClick()>();

        $r156 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r153, $r155);

        $r157 = (androidx.compose.ui.semantics.AccessibilityAction) $r156;

        if $r157 == null goto label021;

        $r158 = virtualinvoke $r157.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r159 = (kotlin.jvm.functions.Function0) $r158;

        if $r159 == null goto label021;

        $r160 = interfaceinvoke $r159.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r191 = (java.lang.Boolean) $r160;

        goto label022;

     label021:
        $r191 = null;

     label022:
        r192 = $r191;

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, i0, 1, null, null, 12, null);

        if r192 == null goto label023;

        $z19 = virtualinvoke r192.<java.lang.Boolean: boolean booleanValue()>();

        goto label024;

     label023:
        $z19 = 0;

     label024:
        return $z19;

     label025:
        $r144 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r145 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r146 = virtualinvoke $r145.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getOnLongClick()>();

        $r147 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r144, $r146);

        $r148 = (androidx.compose.ui.semantics.AccessibilityAction) $r147;

        if $r148 == null goto label026;

        $r149 = virtualinvoke $r148.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r150 = (kotlin.jvm.functions.Function0) $r149;

        if $r150 == null goto label026;

        $r151 = interfaceinvoke $r150.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r152 = (java.lang.Boolean) $r151;

        $z20 = virtualinvoke $r152.<java.lang.Boolean: boolean booleanValue()>();

        goto label027;

     label026:
        $z20 = 0;

     label027:
        return $z20;

     label028:
        if i1 != 4096 goto label029;

        $z21 = 1;

        goto label030;

     label029:
        $z21 = 0;

     label030:
        z22 = $z21;

        if i1 != 8192 goto label031;

        $z23 = 1;

        goto label032;

     label031:
        $z23 = 0;

     label032:
        z24 = $z23;

        if i1 != 16908345 goto label033;

        $z25 = 1;

        goto label034;

     label033:
        $z25 = 0;

     label034:
        z26 = $z25;

        if i1 != 16908347 goto label035;

        $z27 = 1;

        goto label036;

     label035:
        $z27 = 0;

     label036:
        z28 = $z27;

        if i1 != 16908344 goto label037;

        $z29 = 1;

        goto label038;

     label037:
        $z29 = 0;

     label038:
        z30 = $z29;

        if i1 != 16908346 goto label039;

        $z31 = 1;

        goto label040;

     label039:
        $z31 = 0;

     label040:
        z32 = $z31;

        if z26 != 0 goto label041;

        if z28 != 0 goto label041;

        if z22 != 0 goto label041;

        if z24 == 0 goto label042;

     label041:
        $z33 = 1;

        goto label043;

     label042:
        $z33 = 0;

     label043:
        z34 = $z33;

        if z30 != 0 goto label044;

        if z32 != 0 goto label044;

        if z22 != 0 goto label044;

        if z24 == 0 goto label045;

     label044:
        $z35 = 1;

        goto label046;

     label045:
        $z35 = 0;

     label046:
        z36 = $z35;

        if z22 != 0 goto label047;

        if z24 == 0 goto label053;

     label047:
        $r103 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r104 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r105 = virtualinvoke $r104.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getProgressBarRangeInfo()>();

        $r106 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r103, $r105);

        r194 = (androidx.compose.ui.semantics.ProgressBarRangeInfo) $r106;

        $r107 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r108 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r109 = virtualinvoke $r108.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetProgress()>();

        $r110 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r107, $r109);

        r195 = (androidx.compose.ui.semantics.AccessibilityAction) $r110;

        if r194 == null goto label053;

        if r195 == null goto label053;

        $r127 = virtualinvoke r194.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r128 = interfaceinvoke $r127.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r129 = (java.lang.Number) $r128;

        $f13 = virtualinvoke $r129.<java.lang.Number: float floatValue()>();

        $r130 = virtualinvoke r194.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r131 = interfaceinvoke $r130.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r132 = (java.lang.Number) $r131;

        $f14 = virtualinvoke $r132.<java.lang.Number: float floatValue()>();

        f23 = staticinvoke <kotlin.ranges.RangesKt: float coerceAtLeast(float,float)>($f13, $f14);

        $r133 = virtualinvoke r194.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r134 = interfaceinvoke $r133.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getStart()>();

        $r135 = (java.lang.Number) $r134;

        $f15 = virtualinvoke $r135.<java.lang.Number: float floatValue()>();

        $r136 = virtualinvoke r194.<androidx.compose.ui.semantics.ProgressBarRangeInfo: kotlin.ranges.ClosedFloatingPointRange getRange()>();

        $r137 = interfaceinvoke $r136.<kotlin.ranges.ClosedFloatingPointRange: java.lang.Comparable getEndInclusive()>();

        $r138 = (java.lang.Number) $r137;

        $f16 = virtualinvoke $r138.<java.lang.Number: float floatValue()>();

        f24 = staticinvoke <kotlin.ranges.RangesKt: float coerceAtMost(float,float)>($f15, $f16);

        $i8 = virtualinvoke r194.<androidx.compose.ui.semantics.ProgressBarRangeInfo: int getSteps()>();

        if $i8 <= 0 goto label048;

        $f21 = f23 - f24;

        $i9 = virtualinvoke r194.<androidx.compose.ui.semantics.ProgressBarRangeInfo: int getSteps()>();

        $i10 = $i9 + 1;

        $f22 = (float) $i10;

        $f25 = $f21 / $f22;

        goto label049;

     label048:
        $f18 = f23 - f24;

        $f17 = (float) 20;

        $f25 = $f18 / $f17;

     label049:
        f26 = $f25;

        if z24 == 0 goto label050;

        f26 = neg f26;

     label050:
        $r139 = virtualinvoke r195.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r140 = (kotlin.jvm.functions.Function1) $r139;

        if $r140 == null goto label051;

        $f19 = virtualinvoke r194.<androidx.compose.ui.semantics.ProgressBarRangeInfo: float getCurrent()>();

        $f20 = $f19 + f26;

        $r141 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f20);

        $r142 = interfaceinvoke $r140.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r141);

        $r143 = (java.lang.Boolean) $r142;

        $z37 = virtualinvoke $r143.<java.lang.Boolean: boolean booleanValue()>();

        goto label052;

     label051:
        $z37 = 0;

     label052:
        return $z37;

     label053:
        $r196 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.layout.LayoutInfo getLayoutInfo()>();

        $r197 = interfaceinvoke $r196.<androidx.compose.ui.layout.LayoutInfo: androidx.compose.ui.layout.LayoutCoordinates getCoordinates()>();

        $r198 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: androidx.compose.ui.geometry.Rect boundsInParent(androidx.compose.ui.layout.LayoutCoordinates)>($r197);

        l16 = virtualinvoke $r198.<androidx.compose.ui.geometry.Rect: long getSize-NH-jbRc()>();

        $r199 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r200 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r201 = virtualinvoke $r200.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getScrollBy()>();

        $r202 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r199, $r201);

        $r203 = (androidx.compose.ui.semantics.AccessibilityAction) $r202;

        if $r203 != null goto label054;

        return 0;

     label054:
        r204 = $r203;

        $r111 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r112 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r113 = virtualinvoke $r112.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getHorizontalScrollAxisRange()>();

        $r114 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r111, $r113);

        r205 = (androidx.compose.ui.semantics.ScrollAxisRange) $r114;

        if r205 == null goto label062;

        if z34 == 0 goto label062;

        f27 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>(l16);

        if z26 != 0 goto label055;

        if z24 == 0 goto label056;

     label055:
        f27 = neg f27;

     label056:
        $z38 = virtualinvoke r205.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z38 == 0 goto label057;

        f27 = neg f27;

     label057:
        $z10 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isRtl(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z10 == 0 goto label059;

        if z26 != 0 goto label058;

        if z28 == 0 goto label059;

     label058:
        f27 = neg f27;

     label059:
        $z39 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean performActionHelper$canScroll(androidx.compose.ui.semantics.ScrollAxisRange,float)>(r205, f27);

        if $z39 == 0 goto label062;

        $r121 = virtualinvoke r204.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r122 = (kotlin.jvm.functions.Function2) $r121;

        if $r122 == null goto label060;

        $r123 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f27);

        $r124 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r125 = interfaceinvoke $r122.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r123, $r124);

        $r126 = (java.lang.Boolean) $r125;

        $z40 = virtualinvoke $r126.<java.lang.Boolean: boolean booleanValue()>();

        goto label061;

     label060:
        $z40 = 0;

     label061:
        return $z40;

     label062:
        $r206 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r207 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r208 = virtualinvoke $r207.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getVerticalScrollAxisRange()>();

        $r209 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r206, $r208);

        r210 = (androidx.compose.ui.semantics.ScrollAxisRange) $r209;

        if r210 == null goto label068;

        if z36 == 0 goto label068;

        f28 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>(l16);

        if z30 != 0 goto label063;

        if z24 == 0 goto label064;

     label063:
        f28 = neg f28;

     label064:
        $z41 = virtualinvoke r210.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z41 == 0 goto label065;

        f28 = neg f28;

     label065:
        $z9 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean performActionHelper$canScroll(androidx.compose.ui.semantics.ScrollAxisRange,float)>(r210, f28);

        if $z9 == 0 goto label068;

        $r115 = virtualinvoke r204.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r116 = (kotlin.jvm.functions.Function2) $r115;

        if $r116 == null goto label066;

        $r117 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r118 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f28);

        $r119 = interfaceinvoke $r116.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r117, $r118);

        $r120 = (java.lang.Boolean) $r119;

        $z42 = virtualinvoke $r120.<java.lang.Boolean: boolean booleanValue()>();

        goto label067;

     label066:
        $z42 = 0;

     label067:
        return $z42;

     label068:
        return 0;

     label069:
        if r1 == null goto label070;

        $z5 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.view.accessibility.action.ARGUMENT_PROGRESS_VALUE");

        if $z5 != 0 goto label071;

     label070:
        return 0;

     label071:
        $r18 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r19 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r20 = virtualinvoke $r19.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetProgress()>();

        $r21 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r18, $r20);

        $r22 = (androidx.compose.ui.semantics.AccessibilityAction) $r21;

        if $r22 == null goto label072;

        $r23 = virtualinvoke $r22.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r24 = (kotlin.jvm.functions.Function1) $r23;

        if $r24 == null goto label072;

        $f0 = virtualinvoke r1.<android.os.Bundle: float getFloat(java.lang.String)>("android.view.accessibility.action.ARGUMENT_PROGRESS_VALUE");

        $r25 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r26 = interfaceinvoke $r24.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r25);

        $r27 = (java.lang.Boolean) $r26;

        $z43 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();

        goto label073;

     label072:
        $z43 = 0;

     label073:
        return $z43;

     label074:
        $r168 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r169 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r170 = virtualinvoke $r169.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getRequestFocus()>();

        $r171 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r168, $r170);

        r211 = (androidx.compose.ui.semantics.AccessibilityAction) $r171;

        if r211 == null goto label075;

        $r172 = virtualinvoke r211.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        r212 = (kotlin.jvm.functions.Function0) $r172;

        if r212 == null goto label075;

        $r173 = interfaceinvoke r212.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r174 = (java.lang.Boolean) $r173;

        $z44 = virtualinvoke $r174.<java.lang.Boolean: boolean booleanValue()>();

        goto label076;

     label075:
        $z44 = 0;

     label076:
        return $z44;

     label077:
        $r161 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r162 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r163 = virtualinvoke $r162.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getFocused()>();

        $r164 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r161, $r163);

        $r165 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r164, $r165);

        if $z12 == 0 goto label078;

        $r166 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r167 = virtualinvoke $r166.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.focus.FocusManager getFocusManager()>();

        staticinvoke <androidx.compose.ui.focus.FocusManager: void clearFocus$default(androidx.compose.ui.focus.FocusManager,boolean,int,java.lang.Object)>($r167, 0, 1, null);

        $z45 = 1;

        goto label079;

     label078:
        $z45 = 0;

     label079:
        return $z45;

     label080:
        if r1 == null goto label081;

        $r213 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE");

        goto label082;

     label081:
        $r213 = null;

     label082:
        r214 = $r213;

        $r59 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r60 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r61 = virtualinvoke $r60.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetText()>();

        $r62 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r59, $r61);

        r215 = (androidx.compose.ui.semantics.AccessibilityAction) $r62;

        if r215 == null goto label084;

        $r63 = virtualinvoke r215.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        r216 = (kotlin.jvm.functions.Function1) $r63;

        if r216 == null goto label084;

        $r64 = new androidx.compose.ui.text.AnnotatedString;

        $r217 = r214;

        if r214 != null goto label083;

        $r217 = "";

     label083:
        specialinvoke $r64.<androidx.compose.ui.text.AnnotatedString: void <init>(java.lang.String,java.util.List,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r217, null, null, 6, null);

        $r65 = interfaceinvoke r216.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r64);

        $r66 = (java.lang.Boolean) $r65;

        $z46 = virtualinvoke $r66.<java.lang.Boolean: boolean booleanValue()>();

        goto label085;

     label084:
        $z46 = 0;

     label085:
        return $z46;

     label086:
        $r96 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r97 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r98 = virtualinvoke $r97.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getPasteText()>();

        $r99 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r96, $r98);

        r218 = (androidx.compose.ui.semantics.AccessibilityAction) $r99;

        if r218 == null goto label087;

        $r100 = virtualinvoke r218.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        r219 = (kotlin.jvm.functions.Function0) $r100;

        if r219 == null goto label087;

        $r101 = interfaceinvoke r219.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r102 = (java.lang.Boolean) $r101;

        $z47 = virtualinvoke $r102.<java.lang.Boolean: boolean booleanValue()>();

        goto label088;

     label087:
        $z47 = 0;

     label088:
        return $z47;

     label089:
        $r89 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r90 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r91 = virtualinvoke $r90.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCutText()>();

        $r92 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r89, $r91);

        r220 = (androidx.compose.ui.semantics.AccessibilityAction) $r92;

        if r220 == null goto label090;

        $r93 = virtualinvoke r220.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        r221 = (kotlin.jvm.functions.Function0) $r93;

        if r221 == null goto label090;

        $r94 = interfaceinvoke r221.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r95 = (java.lang.Boolean) $r94;

        $z48 = virtualinvoke $r95.<java.lang.Boolean: boolean booleanValue()>();

        goto label091;

     label090:
        $z48 = 0;

     label091:
        return $z48;

     label092:
        $r82 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r83 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r84 = virtualinvoke $r83.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getExpand()>();

        $r85 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r82, $r84);

        r222 = (androidx.compose.ui.semantics.AccessibilityAction) $r85;

        if r222 == null goto label093;

        $r86 = virtualinvoke r222.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        r223 = (kotlin.jvm.functions.Function0) $r86;

        if r223 == null goto label093;

        $r87 = interfaceinvoke r223.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r88 = (java.lang.Boolean) $r87;

        $z49 = virtualinvoke $r88.<java.lang.Boolean: boolean booleanValue()>();

        goto label094;

     label093:
        $z49 = 0;

     label094:
        return $z49;

     label095:
        $r75 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r76 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r77 = virtualinvoke $r76.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCollapse()>();

        $r78 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r75, $r77);

        r224 = (androidx.compose.ui.semantics.AccessibilityAction) $r78;

        if r224 == null goto label096;

        $r79 = virtualinvoke r224.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        r225 = (kotlin.jvm.functions.Function0) $r79;

        if r225 == null goto label096;

        $r80 = interfaceinvoke r225.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r81 = (java.lang.Boolean) $r80;

        $z50 = virtualinvoke $r81.<java.lang.Boolean: boolean booleanValue()>();

        goto label097;

     label096:
        $z50 = 0;

     label097:
        return $z50;

     label098:
        $r68 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r69 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r70 = virtualinvoke $r69.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getDismiss()>();

        $r71 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r68, $r70);

        r226 = (androidx.compose.ui.semantics.AccessibilityAction) $r71;

        if r226 == null goto label099;

        $r72 = virtualinvoke r226.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        r227 = (kotlin.jvm.functions.Function0) $r72;

        if r227 == null goto label099;

        $r73 = interfaceinvoke r227.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r74 = (java.lang.Boolean) $r73;

        $z51 = virtualinvoke $r74.<java.lang.Boolean: boolean booleanValue()>();

        goto label100;

     label099:
        $z51 = 0;

     label100:
        return $z51;

     label101:
        r228 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        if r228 == null goto label102;

        $r55 = virtualinvoke r228.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        if $r55 == null goto label102;

        $r56 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r57 = virtualinvoke $r56.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getScrollBy()>();

        $r58 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r55, $r57);

        $r229 = (androidx.compose.ui.semantics.AccessibilityAction) $r58;

        goto label103;

     label102:
        $r229 = null;

     label103:
        r230 = $r229;

     label104:
        if r228 == null goto label108;

        if r230 == null goto label105;

        goto label108;

     label105:
        r228 = virtualinvoke r228.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        if r228 == null goto label106;

        $r51 = virtualinvoke r228.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        if $r51 == null goto label106;

        $r52 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r53 = virtualinvoke $r52.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getScrollBy()>();

        $r54 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r51, $r53);

        $r231 = (androidx.compose.ui.semantics.AccessibilityAction) $r54;

        goto label107;

     label106:
        $r231 = null;

     label107:
        r230 = $r231;

        goto label104;

     label108:
        if r228 != null goto label109;

        return 0;

     label109:
        $r28 = virtualinvoke r228.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.layout.LayoutInfo getLayoutInfo()>();

        $r29 = interfaceinvoke $r28.<androidx.compose.ui.layout.LayoutInfo: androidx.compose.ui.layout.LayoutCoordinates getCoordinates()>();

        r232 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: androidx.compose.ui.geometry.Rect boundsInParent(androidx.compose.ui.layout.LayoutCoordinates)>($r29);

        $r30 = virtualinvoke r228.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.layout.LayoutInfo getLayoutInfo()>();

        $r31 = interfaceinvoke $r30.<androidx.compose.ui.layout.LayoutInfo: androidx.compose.ui.layout.LayoutCoordinates getCoordinates()>();

        $r32 = interfaceinvoke $r31.<androidx.compose.ui.layout.LayoutCoordinates: androidx.compose.ui.layout.LayoutCoordinates getParentLayoutCoordinates()>();

        if $r32 == null goto label110;

        $l17 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: long positionInRoot(androidx.compose.ui.layout.LayoutCoordinates)>($r32);

        goto label111;

     label110:
        $r33 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l17 = virtualinvoke $r33.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

     label111:
        l18 = $l17;

        r233 = virtualinvoke r232.<androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect translate-k-4lQ0M(long)>(l18);

        $l5 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: long getPositionInRoot-F1C5BW0()>();

        $l6 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: long getSize-YbymL2g()>();

        $l7 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long toSize-ozmzZPI(long)>($l6);

        r234 = staticinvoke <androidx.compose.ui.geometry.RectKt: androidx.compose.ui.geometry.Rect Rect-tz77jQw(long,long)>($l5, $l7);

        $r34 = virtualinvoke r228.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r35 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r36 = virtualinvoke $r35.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getHorizontalScrollAxisRange()>();

        $r37 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r34, $r36);

        r235 = (androidx.compose.ui.semantics.ScrollAxisRange) $r37;

        $r38 = virtualinvoke r228.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r39 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r40 = virtualinvoke $r39.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getVerticalScrollAxisRange()>();

        $r41 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r38, $r40);

        r236 = (androidx.compose.ui.semantics.ScrollAxisRange) $r41;

        $f1 = virtualinvoke r234.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f2 = virtualinvoke r233.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f3 = $f1 - $f2;

        $f4 = virtualinvoke r234.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $f5 = virtualinvoke r233.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $f6 = $f4 - $f5;

        f29 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: float performActionHelper$scrollDelta(float,float)>($f3, $f6);

        if r235 == null goto label113;

        $z8 = virtualinvoke r235.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z8 != 1 goto label112;

        $z52 = 1;

        goto label114;

     label112:
        $z52 = 0;

        goto label114;

     label113:
        $z52 = 0;

     label114:
        if $z52 == 0 goto label115;

        f29 = neg f29;

     label115:
        $z6 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isRtl(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z6 == 0 goto label116;

        f29 = neg f29;

     label116:
        $f7 = virtualinvoke r234.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $f8 = virtualinvoke r233.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $f9 = $f7 - $f8;

        $f10 = virtualinvoke r234.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $f11 = virtualinvoke r233.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $f12 = $f10 - $f11;

        f30 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: float performActionHelper$scrollDelta(float,float)>($f9, $f12);

        if r236 == null goto label118;

        $z7 = virtualinvoke r236.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z7 != 1 goto label117;

        $z53 = 1;

        goto label119;

     label117:
        $z53 = 0;

        goto label119;

     label118:
        $z53 = 0;

     label119:
        if $z53 == 0 goto label120;

        f30 = neg f30;

     label120:
        if r230 == null goto label121;

        $r42 = virtualinvoke r230.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r43 = (kotlin.jvm.functions.Function2) $r42;

        if $r43 == null goto label121;

        $r44 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f29);

        $r45 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f30);

        $r46 = interfaceinvoke $r43.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r44, $r45);

        $r47 = (java.lang.Boolean) $r46;

        $z54 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();

        goto label122;

     label121:
        $z54 = 0;

     label122:
        return $z54;

     label123:
        $r175 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.SparseArrayCompat actionIdToLabel>;

        $r176 = virtualinvoke $r175.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i0);

        $r177 = (androidx.collection.SparseArrayCompat) $r176;

        if $r177 == null goto label124;

        $r178 = virtualinvoke $r177.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i1);

        $r179 = (java.lang.CharSequence) $r178;

        if $r179 != null goto label125;

     label124:
        return 0;

     label125:
        r237 = $r179;

        $r180 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r181 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r182 = virtualinvoke $r181.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCustomActions()>();

        $r183 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r180, $r182);

        $r184 = (java.util.List) $r183;

        if $r184 != null goto label126;

        return 0;

     label126:
        r238 = $r184;

        r239 = r238;

        z55 = 0;

        i19 = 0;

        i20 = interfaceinvoke r239.<java.util.List: int size()>();

     label127:
        if i19 >= i20 goto label129;

        r240 = interfaceinvoke r239.<java.util.List: java.lang.Object get(int)>(i19);

        r241 = (androidx.compose.ui.semantics.CustomAccessibilityAction) r240;

        z56 = 0;

        $r185 = virtualinvoke r241.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        $z13 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r185, r237);

        if $z13 == 0 goto label128;

        $r186 = virtualinvoke r241.<androidx.compose.ui.semantics.CustomAccessibilityAction: kotlin.jvm.functions.Function0 getAction()>();

        $r187 = interfaceinvoke $r186.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r188 = (java.lang.Boolean) $r187;

        $z14 = virtualinvoke $r188.<java.lang.Boolean: boolean booleanValue()>();

        return $z14;

     label128:
        i19 = i19 + 1;

        goto label127;

     label129:
        return 0;
    }

    private final void addExtraDataToAccessibilityNodeInfoHelper(int, android.view.accessibility.AccessibilityNodeInfo, java.lang.String, android.os.Bundle)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, $i2, $i3, $i4, i6, $i7, i8;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.String r2, r5, r50;
        android.os.Bundle r3, $r21, $r34;
        androidx.compose.ui.semantics.SemanticsNode r4, $r13;
        java.util.List r6, r8;
        java.lang.Boolean r7, $r31, $r41;
        java.util.Map $r9;
        java.lang.Integer $r10;
        java.lang.Object $r11, $r20, $r27, $r32, $r40;
        androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds $r12;
        androidx.compose.ui.semantics.SemanticsConfiguration $r14, $r17, $r24, $r47;
        androidx.compose.ui.semantics.SemanticsActions $r15, $r25;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r16, $r19, $r26, $r49;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.compose.ui.semantics.SemanticsProperties $r18, $r48;
        java.lang.CharSequence $r22;
        java.util.ArrayList $r23, $r33;
        androidx.compose.ui.semantics.AccessibilityAction $r28;
        kotlin.Function $r29;
        kotlin.jvm.functions.Function1 $r30;
        android.graphics.RectF[] $r35;
        java.lang.Object[] $r36;
        android.os.Parcelable[] $r37;
        androidx.compose.ui.text.TextLayoutInput $r38;
        androidx.compose.ui.text.AnnotatedString $r39;
        androidx.compose.ui.text.TextLayoutResult r42;
        androidx.compose.ui.geometry.Rect r43;
        android.graphics.RectF r44;
        java.util.Collection r45, r46;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        $r9 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r12 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r11;

        if $r12 == null goto label01;

        $r13 = virtualinvoke $r12.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        if $r13 != null goto label02;

     label01:
        return;

     label02:
        r4 = $r13;

        r5 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String getIterableTextForAccessibility(androidx.compose.ui.semantics.SemanticsNode)>(r4);

        $r14 = virtualinvoke r4.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r15 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r16 = virtualinvoke $r15.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getGetTextLayoutResult()>();

        $z0 = virtualinvoke $r14.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r16);

        if $z0 == 0 goto label15;

        if r3 == null goto label15;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, "android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_KEY");

        if $z2 == 0 goto label15;

        i6 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String,int)>("android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX", -1);

        i1 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String,int)>("android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH", -1);

        if i1 <= 0 goto label05;

        if i6 < 0 goto label05;

        if r5 == null goto label03;

        $i7 = virtualinvoke r5.<java.lang.String: int length()>();

        goto label04;

     label03:
        $i7 = 2147483647;

     label04:
        if i6 < $i7 goto label06;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityDelegate", "Invalid arguments for accessibility character locations");

        return;

     label06:
        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r6 = (java.util.List) $r23;

        $r24 = virtualinvoke r4.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r25 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r26 = virtualinvoke $r25.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getGetTextLayoutResult()>();

        $r27 = virtualinvoke $r24.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r26);

        $r28 = (androidx.compose.ui.semantics.AccessibilityAction) $r27;

        $r29 = virtualinvoke $r28.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r30 = (kotlin.jvm.functions.Function1) $r29;

        if $r30 == null goto label07;

        $r40 = interfaceinvoke $r30.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        $r41 = (java.lang.Boolean) $r40;

        goto label08;

     label07:
        $r41 = null;

     label08:
        r7 = $r41;

        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r7, $r31);

        if $z3 == 0 goto label09;

        $r32 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        r42 = (androidx.compose.ui.text.TextLayoutResult) $r32;

        goto label10;

     label09:
        return;

     label10:
        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        r8 = (java.util.List) $r33;

        i8 = 0;

     label11:
        if i8 >= i1 goto label14;

        $i2 = i6 + i8;

        $r38 = virtualinvoke r42.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.text.TextLayoutInput getLayoutInput()>();

        $r39 = virtualinvoke $r38.<androidx.compose.ui.text.TextLayoutInput: androidx.compose.ui.text.AnnotatedString getText()>();

        $i3 = virtualinvoke $r39.<androidx.compose.ui.text.AnnotatedString: int length()>();

        if $i2 < $i3 goto label12;

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label13;

     label12:
        $i4 = i6 + i8;

        r43 = virtualinvoke r42.<androidx.compose.ui.text.TextLayoutResult: androidx.compose.ui.geometry.Rect getBoundingBox(int)>($i4);

        r44 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.graphics.RectF toScreenCoords(androidx.compose.ui.semantics.SemanticsNode,androidx.compose.ui.geometry.Rect)>(r4, r43);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r44);

     label13:
        i8 = i8 + 1;

        goto label11;

     label14:
        $r34 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        r45 = (java.util.Collection) r8;

        r46 = r45;

        $r35 = newarray (android.graphics.RectF)[0];

        $r36 = interfaceinvoke r46.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r35);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r36, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        $r37 = (android.os.Parcelable[]) $r36;

        virtualinvoke $r34.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>(r2, $r37);

        goto label16;

     label15:
        $r47 = virtualinvoke r4.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r48 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r49 = virtualinvoke $r48.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTag()>();

        $z4 = virtualinvoke $r47.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r49);

        if $z4 == 0 goto label16;

        if r3 == null goto label16;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, "androidx.compose.ui.semantics.testTag");

        if $z1 == 0 goto label16;

        $r17 = virtualinvoke r4.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r18 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r19 = virtualinvoke $r18.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTag()>();

        $r20 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r17, $r19);

        r50 = (java.lang.String) $r20;

        if r50 == null goto label16;

        $r21 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r22 = (java.lang.CharSequence) r50;

        virtualinvoke $r21.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>(r2, $r22);

     label16:
        return;
    }

    private final android.graphics.RectF toScreenCoords(androidx.compose.ui.semantics.SemanticsNode, androidx.compose.ui.geometry.Rect)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.geometry.Rect r2, r3, r4, r5, $r8;
        long l0, l1, $l2, $l3, $l4;
        boolean $z0;
        androidx.compose.ui.platform.AndroidComposeView $r6, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.RectF $r9;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        r2 := @parameter1: androidx.compose.ui.geometry.Rect;

        if r1 != null goto label1;

        return null;

     label1:
        $l2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: long getPositionInRoot-F1C5BW0()>();

        r3 = virtualinvoke r2.<androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect translate-k-4lQ0M(long)>($l2);

        r4 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.geometry.Rect getBoundsInRoot()>();

        $z0 = virtualinvoke r3.<androidx.compose.ui.geometry.Rect: boolean overlaps(androidx.compose.ui.geometry.Rect)>(r4);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r3.<androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect intersect(androidx.compose.ui.geometry.Rect)>(r4);

        goto label3;

     label2:
        $r8 = (androidx.compose.ui.geometry.Rect) null;

     label3:
        r5 = $r8;

        if r5 == null goto label4;

        $r6 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $f0 = virtualinvoke r5.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f1 = virtualinvoke r5.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $l3 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f0, $f1);

        l0 = virtualinvoke $r6.<androidx.compose.ui.platform.AndroidComposeView: long localToScreen-MK-Hz9U(long)>($l3);

        $r7 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $f2 = virtualinvoke r5.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $f3 = virtualinvoke r5.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $l4 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f2, $f3);

        l1 = virtualinvoke $r7.<androidx.compose.ui.platform.AndroidComposeView: long localToScreen-MK-Hz9U(long)>($l4);

        $r9 = new android.graphics.RectF;

        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f5 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l1);

        $f7 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l1);

        specialinvoke $r9.<android.graphics.RectF: void <init>(float,float,float,float)>($f4, $f5, $f6, $f7);

        goto label5;

     label4:
        $r9 = (android.graphics.RectF) null;

     label5:
        return $r9;
    }

    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2, $z3;
        androidx.compose.ui.platform.AndroidComposeView $r2, $r4;
        androidx.compose.ui.platform.AndroidViewsHandler $r3, $r5;
        float $f0, $f1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        $z1 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityEnabled()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i1)
        {
            case 7: goto label2;
            case 8: goto label8;
            case 9: goto label2;
            case 10: goto label5;
            default: goto label8;
        };

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i0 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hitTestSemanticsAt$ui_release(float,float)>($f0, $f1);

        $r4 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidViewsHandler getAndroidViewsHandler$ui_release()>();

        z0 = virtualinvoke $r5.<androidx.compose.ui.platform.AndroidViewsHandler: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void updateHoveredVirtualView(int)>(i0);

        if i0 != -2147483648 goto label3;

        $z2 = z0;

        goto label4;

     label3:
        $z2 = 1;

     label4:
        return $z2;

     label5:
        $i2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>;

        if $i2 == -2147483648 goto label6;

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void updateHoveredVirtualView(int)>(-2147483648);

        $z3 = 1;

        goto label7;

     label6:
        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidViewsHandler getAndroidViewsHandler$ui_release()>();

        $z3 = virtualinvoke $r3.<androidx.compose.ui.platform.AndroidViewsHandler: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

     label7:
        return $z3;

     label8:
        return 0;
    }

    public final int hitTestSemanticsAt$ui_release(float, float)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        float f0, f1;
        androidx.compose.ui.node.HitTestResult r1, $r9;
        androidx.compose.ui.node.SemanticsModifierNode r2, $r14, $r26;
        androidx.compose.ui.semantics.SemanticsNode r3, $r15;
        androidx.compose.ui.node.NodeCoordinator r4;
        androidx.compose.ui.node.LayoutNode r5, $r11, $r25;
        androidx.compose.ui.viewinterop.AndroidViewHolder r6;
        androidx.compose.ui.platform.AndroidComposeView $r7, $r10, $r20;
        androidx.compose.ui.node.Owner $r8;
        long $l0;
        java.util.List $r12;
        java.lang.Object $r13, $r23;
        androidx.compose.ui.semantics.SemanticsConfiguration $r16;
        androidx.compose.ui.semantics.SemanticsProperties $r17;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r18;
        boolean $z0, $z1;
        androidx.compose.ui.node.DelegatableNode $r19, $r24;
        androidx.compose.ui.platform.AndroidViewsHandler $r21;
        java.util.HashMap $r22;
        int $i1, i2;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r7 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r8 = (androidx.compose.ui.node.Owner) $r7;

        staticinvoke <androidx.compose.ui.node.Owner: void measureAndLayout$default(androidx.compose.ui.node.Owner,boolean,int,java.lang.Object)>($r8, 0, 1, null);

        $r9 = new androidx.compose.ui.node.HitTestResult;

        specialinvoke $r9.<androidx.compose.ui.node.HitTestResult: void <init>()>();

        r1 = $r9;

        $r10 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r11 = virtualinvoke $r10.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.LayoutNode getRoot()>();

        $l0 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>(f0, f1);

        staticinvoke <androidx.compose.ui.node.LayoutNode: void hitTestSemantics-M_7yMNQ$ui_release$default(androidx.compose.ui.node.LayoutNode,long,androidx.compose.ui.node.HitTestResult,boolean,boolean,int,java.lang.Object)>($r11, $l0, r1, 0, 0, 12, null);

        $r12 = (java.util.List) r1;

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object lastOrNull(java.util.List)>($r12);

        $r14 = (androidx.compose.ui.node.SemanticsModifierNode) $r13;

        if $r14 == null goto label1;

        $r24 = (androidx.compose.ui.node.DelegatableNode) $r14;

        $r25 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r24);

        if $r25 == null goto label1;

        $r26 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>($r25);

        goto label2;

     label1:
        $r26 = null;

     label2:
        r2 = $r26;

        i2 = -2147483648;

        if r2 == null goto label3;

        $r15 = new androidx.compose.ui.semantics.SemanticsNode;

        specialinvoke $r15.<androidx.compose.ui.semantics.SemanticsNode: void <init>(androidx.compose.ui.node.SemanticsModifierNode,boolean,androidx.compose.ui.node.LayoutNode,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r2, 0, null, 4, null);

        r3 = $r15;

        r4 = virtualinvoke r3.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds$ui_release()>();

        $r16 = virtualinvoke r3.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r17 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r18 = virtualinvoke $r17.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getInvisibleToUser()>();

        $z0 = virtualinvoke $r16.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r18);

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r4.<androidx.compose.ui.node.NodeCoordinator: boolean isTransparent()>();

        if $z1 != 0 goto label3;

        $r19 = (androidx.compose.ui.node.DelegatableNode) r2;

        r5 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r19);

        $r20 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r21 = virtualinvoke $r20.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidViewsHandler getAndroidViewsHandler$ui_release()>();

        $r22 = virtualinvoke $r21.<androidx.compose.ui.platform.AndroidViewsHandler: java.util.HashMap getLayoutNodeToHolder()>();

        $r23 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (androidx.compose.ui.viewinterop.AndroidViewHolder) $r23;

        if r6 != null goto label3;

        $i1 = virtualinvoke r5.<androidx.compose.ui.node.LayoutNode: int getSemanticsId()>();

        i2 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>($i1);

     label3:
        return i2;
    }

    private final void updateHoveredVirtualView(int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, $i2;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>;

        if $i2 != i0 goto label1;

        return;

     label1:
        i1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId> = i0;

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, i0, 128, null, null, 12, null);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, i1, 256, null, null, 12, null);

        return;
    }

    public androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        android.view.View r1;
        androidx.core.view.accessibility.AccessibilityNodeProviderCompat $r2;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "host");

        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat nodeProvider>;

        return $r2;
    }

    private final java.lang.CharSequence trimToSize(java.lang.CharSequence, int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        java.lang.CharSequence r1, r5, $r6;
        int i0, $i1, $i2, $i5, i6;
        char $c3, $c4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3, r4;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        if i0 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        r4 = "Failed requirement.";

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        i6 = i0;

        r5 = r1;

        if r5 == null goto label4;

        $i5 = interfaceinvoke r5.<java.lang.CharSequence: int length()>();

        if $i5 != 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        if $z3 != 0 goto label7;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i1 > i0 goto label8;

     label7:
        return r1;

     label8:
        $i2 = i0 - 1;

        $c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>($c3);

        if $z0 == 0 goto label9;

        $c4 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i0);

        $z1 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>($c4);

        if $z1 == 0 goto label9;

        i6 = i0 - 1;

     label9:
        $r6 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, i6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type T of androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat.trimToSize");

        return $r6;
    }

    public final void onSemanticsChange$ui_release()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        boolean $z0, $z1;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean currentSemanticsNodesInvalidated> = 1;

        $z0 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean checkingForSemanticsChanges>;

        if $z1 != 0 goto label1;

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean checkingForSemanticsChanges> = 1;

        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.os.Handler handler>;

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.Runnable semanticsChangeChecker>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

     label1:
        return;
    }

    public final java.lang.Object boundsUpdatesEventLoop(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r36, r37;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object $r1, r2, $r4, $r5, $r6, $r15, $r17, $r18, $r19, $r29, $r31;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Boolean $r7;
        androidx.collection.ArraySet $r8, $r11, $r14, $r24, r27, $r30, r34;
        kotlin.Unit $r9;
        java.lang.Runnable $r12;
        android.os.Handler $r13;
        androidx.compose.ui.node.LayoutNode $r16;
        kotlinx.coroutines.channels.Channel $r21;
        java.lang.Throwable $r23, r32;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r25;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1 $r26, r33;
        kotlinx.coroutines.channels.ChannelIterator r28;
        java.lang.IllegalStateException r35;

        r25 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1;

        if $z0 == 0 goto label01;

        $r26 = (androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1) r0;

        $i1 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label01;

        $i3 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: int label>;

        $i4 = $i3 - -2147483648;

        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: int label> = $i4;

        goto label02;

     label01:
        r33 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1;

        specialinvoke r33.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: void <init>(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,kotlin.coroutines.Continuation)>(r25, r0);

        $r26 = r33;

     label02:
        $r1 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object result>;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label03;
            case 1: goto label07;
            case 2: goto label14;
            default: goto label21;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label04:
        r34 = new androidx.collection.ArraySet;

        specialinvoke r34.<androidx.collection.ArraySet: void <init>()>();

        r27 = r34;

        $r21 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: kotlinx.coroutines.channels.Channel boundsUpdateChannel>;

        r28 = interfaceinvoke $r21.<kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label05:
        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$0> = r25;

        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$1> = r27;

        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$2> = r28;

        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: int label> = 1;

        r36 = (kotlin.coroutines.Continuation) $r26;

        $r29 = interfaceinvoke r28.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>(r36);

     label06:
        if $r29 != r2 goto label09;

        return r2;

     label07:
        $r17 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$2>;

        r28 = (kotlinx.coroutines.channels.ChannelIterator) $r17;

        $r18 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$1>;

        r27 = (androidx.collection.ArraySet) $r18;

        $r19 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$0>;

        r25 = (androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat) $r19;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r29 = $r1;

     label09:
        $r7 = (java.lang.Boolean) $r29;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label17;

        interfaceinvoke r28.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        $z2 = specialinvoke r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityEnabled()>();

        if $z2 == 0 goto label12;

        i6 = 0;

        $r11 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet subtreeChangedLayoutNodes>;

        i0 = virtualinvoke $r11.<androidx.collection.ArraySet: int size()>();

     label10:
        if i6 >= i0 goto label11;

        $r14 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet subtreeChangedLayoutNodes>;

        $r15 = virtualinvoke $r14.<androidx.collection.ArraySet: java.lang.Object valueAt(int)>(i6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r15);

        $r16 = (androidx.compose.ui.node.LayoutNode) $r15;

        specialinvoke r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendSubtreeChangeAccessibilityEvents(androidx.compose.ui.node.LayoutNode,androidx.collection.ArraySet)>($r16, r27);

        i6 = i6 + 1;

        goto label10;

     label11:
        virtualinvoke r27.<androidx.collection.ArraySet: void clear()>();

        $z3 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean checkingForSemanticsChanges>;

        if $z3 != 0 goto label12;

        r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean checkingForSemanticsChanges> = 1;

        $r13 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.os.Handler handler>;

        $r12 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.Runnable semanticsChangeChecker>;

        virtualinvoke $r13.<android.os.Handler: boolean post(java.lang.Runnable)>($r12);

     label12:
        $r30 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet subtreeChangedLayoutNodes>;

        virtualinvoke $r30.<androidx.collection.ArraySet: void clear()>();

        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$0> = r25;

        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$1> = r27;

        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$2> = r28;

        $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: int label> = 2;

        r37 = (kotlin.coroutines.Continuation) $r26;

        $r31 = staticinvoke <kotlinx.coroutines.DelayKt: java.lang.Object delay(long,kotlin.coroutines.Continuation)>(100L, r37);

     label13:
        if $r31 != r2 goto label16;

        return r2;

     label14:
        $r4 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$2>;

        r28 = (kotlinx.coroutines.channels.ChannelIterator) $r4;

        $r5 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$1>;

        r27 = (androidx.collection.ArraySet) $r5;

        $r6 = $r26.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$boundsUpdatesEventLoop$1: java.lang.Object L$0>;

        r25 = (androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat) $r6;

     label15:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label16:
        goto label05;

     label17:
        $r8 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet subtreeChangedLayoutNodes>;

        virtualinvoke $r8.<androidx.collection.ArraySet: void clear()>();

        goto label20;

     label18:
        $r23 := @caughtexception;

        r32 = $r23;

     label19:
        $r24 = r25.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet subtreeChangedLayoutNodes>;

        virtualinvoke $r24.<androidx.collection.ArraySet: void clear()>();

        throw r32;

     label20:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;

     label21:
        r35 = new java.lang.IllegalStateException;

        specialinvoke r35.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r35;

        catch java.lang.Throwable from label04 to label06 with label18;
        catch java.lang.Throwable from label08 to label13 with label18;
        catch java.lang.Throwable from label15 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public final void onLayoutChange$ui_release(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean currentSemanticsNodesInvalidated> = 1;

        $z0 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void notifySubtreeAccessibilityStateChangedIfNeeded(androidx.compose.ui.node.LayoutNode)>(r1);

        return;
    }

    private final void notifySubtreeAccessibilityStateChangedIfNeeded(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.node.LayoutNode r1;
        androidx.collection.ArraySet $r2;
        boolean $z0;
        kotlin.Unit $r3;
        kotlinx.coroutines.channels.Channel $r4;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet subtreeChangedLayoutNodes>;

        $z0 = virtualinvoke $r2.<androidx.collection.ArraySet: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: kotlinx.coroutines.channels.Channel boundsUpdateChannel>;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r4.<kotlinx.coroutines.channels.Channel: java.lang.Object trySend-JP2dKIU(java.lang.Object)>($r3);

     label1:
        return;
    }

    private final void sendSubtreeChangeAccessibilityEvents(androidx.compose.ui.node.LayoutNode, androidx.collection.ArraySet)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.node.LayoutNode r1, r4, r18, $r20;
        androidx.collection.ArraySet r2;
        androidx.compose.ui.node.SemanticsModifierNode r3, r5, $r16, r17;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.ui.platform.AndroidComposeView $r6;
        androidx.compose.ui.platform.AndroidViewsHandler $r7;
        java.util.HashMap $r8;
        java.util.Map $r9;
        androidx.compose.ui.semantics.SemanticsConfiguration $r10;
        int $i0, i1;
        java.lang.Integer $r11, $r21;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendSubtreeChangeAccessibilityEvents$1 $r12;
        kotlin.jvm.functions.Function1 $r13, $r15;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendSubtreeChangeAccessibilityEvents$semanticsWrapper$1 $r14;
        androidx.compose.ui.node.DelegatableNode $r19;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r2 := @parameter1: androidx.collection.ArraySet;

        $z0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidViewsHandler getAndroidViewsHandler$ui_release()>();

        $r8 = virtualinvoke $r7.<androidx.compose.ui.platform.AndroidViewsHandler: java.util.HashMap getLayoutNodeToHolder()>();

        $r9 = (java.util.Map) $r8;

        $z1 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return;

     label2:
        $r16 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>(r1);

        if $r16 != null goto label5;

        $r14 = <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendSubtreeChangeAccessibilityEvents$semanticsWrapper$1: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendSubtreeChangeAccessibilityEvents$semanticsWrapper$1 INSTANCE>;

        $r15 = (kotlin.jvm.functions.Function1) $r14;

        r4 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: androidx.compose.ui.node.LayoutNode access$findClosestParentNode(androidx.compose.ui.node.LayoutNode,kotlin.jvm.functions.Function1)>(r1, $r15);

        if r4 == null goto label3;

        $r16 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>(r4);

        goto label4;

     label3:
        $r16 = null;

     label4:
        if $r16 != null goto label5;

        return;

     label5:
        r17 = $r16;

        $r10 = staticinvoke <androidx.compose.ui.node.SemanticsModifierNodeKt: androidx.compose.ui.semantics.SemanticsConfiguration collapsedSemanticsConfiguration(androidx.compose.ui.node.SemanticsModifierNode)>(r17);

        $z2 = virtualinvoke $r10.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z2 != 0 goto label6;

        $r12 = <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendSubtreeChangeAccessibilityEvents$1: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendSubtreeChangeAccessibilityEvents$1 INSTANCE>;

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        r18 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: androidx.compose.ui.node.LayoutNode access$findClosestParentNode(androidx.compose.ui.node.LayoutNode,kotlin.jvm.functions.Function1)>(r1, $r13);

        if r18 == null goto label6;

        r3 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>(r18);

        if r3 == null goto label6;

        r5 = r3;

        r17 = r5;

        goto label6;

     label6:
        $r19 = (androidx.compose.ui.node.DelegatableNode) r17;

        $r20 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r19);

        i1 = virtualinvoke $r20.<androidx.compose.ui.node.LayoutNode: int getSemanticsId()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z3 = virtualinvoke r2.<androidx.collection.ArraySet: boolean add(java.lang.Object)>($r21);

        if $z3 != 0 goto label7;

        return;

     label7:
        $i0 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i1);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i0, 2048, $r11, null, 8, null);

        return;
    }

    private final void checkForSemanticsChanges()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.platform.AndroidComposeView $r1;
        androidx.compose.ui.semantics.SemanticsOwner $r2;
        androidx.compose.ui.semantics.SemanticsNode $r3;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy $r4;
        java.util.Map $r5;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()>();

        $r3 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.semantics.SemanticsNode getUnmergedRootSemanticsNode()>();

        $r4 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy previousSemanticsRoot>;

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendSemanticsStructureChangeEvents(androidx.compose.ui.semantics.SemanticsNode,androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy)>($r3, $r4);

        $r5 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendSemanticsPropertyChangeEvents$ui_release(java.util.Map)>($r5);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void updateSemanticsNodesCopyAndPanes()>();

        return;
    }

    private final void updateSemanticsNodesCopyAndPanes()
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1, $r9, $r14, $r22, $r42, $r52;
        androidx.collection.ArraySet $r2, $r16, $r32;
        java.util.Map $r3, $r4, $r10, $r29, $r33, $r47, $r53;
        java.util.Set $r5;
        boolean $z0, $z1, $z2, $z4, $z5;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy $r6, $r35, $r49;
        androidx.compose.ui.platform.AndroidComposeView $r7;
        androidx.compose.ui.semantics.SemanticsOwner $r8;
        java.lang.Object $r11, $r12, $r17, $r18, $r20, $r26, $r28, $r30, $r34, $r39, $r48, $r50;
        androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds $r13, $r21, $r31, $r51;
        java.lang.Number $r19;
        int $i0, $i1;
        androidx.compose.ui.semantics.SemanticsConfiguration $r23, $r36;
        androidx.compose.ui.semantics.SemanticsProperties $r24, $r37;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r25, $r38;
        java.lang.String $r27, $r44;
        java.util.Iterator r40, r45;
        java.lang.Integer r41;
        java.util.Map$Entry r46;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet paneDisplayed>;

        r40 = virtualinvoke $r2.<androidx.collection.ArraySet: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label07;

        $r28 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.lang.Integer) $r28;

        $r29 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object get(java.lang.Object)>(r41);

        $r31 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r30;

        if $r31 == null goto label02;

        $r42 = virtualinvoke $r31.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        goto label03;

     label02:
        $r42 = null;

     label03:
        r1 = $r42;

        if r1 == null goto label04;

        $z4 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$hasPaneTitle(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if $z4 != 0 goto label01;

     label04:
        $r32 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet paneDisplayed>;

        virtualinvoke $r32.<androidx.collection.ArraySet: boolean remove(java.lang.Object)>(r41);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r41, "id");

        $i1 = virtualinvoke r41.<java.lang.Integer: int intValue()>();

        $r33 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes>;

        $r34 = interfaceinvoke $r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r41);

        $r35 = (androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy) $r34;

        if $r35 == null goto label05;

        $r36 = virtualinvoke $r35.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig()>();

        if $r36 == null goto label05;

        $r37 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r38 = virtualinvoke $r37.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getPaneTitle()>();

        $r39 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r36, $r38);

        $r44 = (java.lang.String) $r39;

        goto label06;

     label05:
        $r44 = null;

     label06:
        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendPaneChangeEvents(int,int,java.lang.String)>($i1, 32, $r44);

        goto label01;

     label07:
        $r3 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        $r4 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r45 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r12;

        $r14 = virtualinvoke $r13.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        $z1 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$hasPaneTitle(androidx.compose.ui.semantics.SemanticsNode)>($r14);

        if $z1 == 0 goto label09;

        $r16 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.collection.ArraySet paneDisplayed>;

        $r17 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z2 = virtualinvoke $r16.<androidx.collection.ArraySet: boolean add(java.lang.Object)>($r17);

        if $z2 == 0 goto label09;

        $r18 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.Number) $r18;

        $i0 = virtualinvoke $r19.<java.lang.Number: int intValue()>();

        $r20 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r20;

        $r22 = virtualinvoke $r21.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        $r23 = virtualinvoke $r22.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r24 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r25 = virtualinvoke $r24.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getPaneTitle()>();

        $r26 = virtualinvoke $r23.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r25);

        $r27 = (java.lang.String) $r26;

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendPaneChangeEvents(int,int,java.lang.String)>($i0, 16, $r27);

     label09:
        $r47 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes>;

        $r48 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r49 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy;

        $r50 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r51 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r50;

        $r52 = virtualinvoke $r51.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        $r53 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        specialinvoke $r49.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: void <init>(androidx.compose.ui.semantics.SemanticsNode,java.util.Map)>($r52, $r53);

        interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r49);

        goto label08;

     label10:
        $r6 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy;

        $r7 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()>();

        $r9 = virtualinvoke $r8.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.semantics.SemanticsNode getUnmergedRootSemanticsNode()>();

        $r10 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        specialinvoke $r6.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: void <init>(androidx.compose.ui.semantics.SemanticsNode,java.util.Map)>($r9, $r10);

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy previousSemanticsRoot> = $r6;

        return;
    }

    public final void sendSemanticsPropertyChangeEvents$ui_release(java.util.Map)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        java.util.Map r1, $r16;
        java.util.ArrayList r2, $r9;
        java.util.Iterator r3, r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33, i34, $i35, $i36, i37, i38, $i40, $i41, $i42, $i43, $i44, i45, $i46, $i47, i48;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy r4, $r19;
        androidx.compose.ui.semantics.SemanticsNode r5, $r119, $r152, r156;
        java.util.Map$Entry r7;
        androidx.compose.ui.semantics.SemanticsPropertyKey r8, $r28, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r60, $r64, $r68, $r86, $r91, $r108, $r115, $r123, $r127, $r146, $r150, $r174;
        java.util.List $r10, $r12, $r29, $r82, $r101, $r105, $r129, r157, r160, r185, r186, r188, r192;
        java.util.Collection $r11, $r70, $r73, $r74;
        java.util.Set $r13, r187, r191;
        java.lang.Object $r14, $r18, $r21, $r25, $r26, $r30, $r55, $r56, $r59, $r61, $r65, $r69, $r77, $r87, $r92, $r104, $r109, $r116, $r124, $r128, $r142, $r143, $r145, $r147, $r148, $r175, r189, r193;
        java.lang.Number $r15;
        java.lang.Integer $r17, $r20, $r24, $r79, $r96, $r103, $r111, $r112, $r118, $r138, $r139, $r140, $r141, $r177, $r178, $r179;
        androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds $r22;
        androidx.compose.ui.semantics.SemanticsConfiguration $r23, $r58, $r62, $r66, $r84, $r89, $r94, $r97, $r99, $r106, $r113, $r121, $r125, $r144, $r172;
        androidx.compose.ui.semantics.SemanticsProperties $r27, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r85, $r90, $r107, $r114, $r122, $r126, $r149, $r173;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z20, $z24, $z31, $z34, $z39, $z40, $z41, $z42, z43, $z44, z45, $z46, $z47, $z50, z51, z52, z53, $z54, $z55, $z56;
        androidx.compose.ui.semantics.SemanticsActions $r53, $r63, $r67;
        androidx.compose.ui.semantics.AccessibilityAction $r57;
        java.util.LinkedHashSet $r71, $r72;
        java.lang.String $r75, $r76, r153, $r158, r159, $r161, r162, r163, r164, $r170, r171, $r182;
        java.lang.Boolean $r78, $r117;
        android.view.accessibility.AccessibilityEvent $r80, r155, r169, r183;
        androidx.compose.ui.node.LayoutNode $r81;
        androidx.compose.ui.platform.ScrollObservationScope $r83, r184;
        androidx.compose.ui.semantics.ScrollAxisRange $r88, $r93;
        androidx.compose.ui.text.AnnotatedString $r95, $r98, $r100;
        java.lang.CharSequence $r102, $r131, $r135, $r137, $r165, r166, $r167, r168, $r180, $r181;
        char $c12, $c15, $c17, $c18;
        androidx.compose.ui.semantics.Role$Companion $r110;
        androidx.compose.ui.node.SemanticsModifierNode $r120;
        kotlin.Unit $r132, $r133;
        androidx.compose.ui.semantics.Role r154;
        androidx.compose.ui.text.TextRange $r176;
        long l39;
        androidx.compose.ui.semantics.CustomAccessibilityAction r190, r194;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "newSemanticsNodes");

        $r9 = new java.util.ArrayList;

        $r10 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.List scrollObservationScopes>;

        $r11 = (java.util.Collection) $r10;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        r2 = $r9;

        $r12 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.List scrollObservationScopes>;

        interfaceinvoke $r12.<java.util.List: void clear()>();

        $r13 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z42 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z42 == 0 goto label61;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.Number) $r14;

        i0 = virtualinvoke $r15.<java.lang.Number: int intValue()>();

        $r16 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        $r19 = (androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy) $r18;

        if $r19 != null goto label02;

        goto label01;

     label02:
        r4 = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r21 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20);

        $r22 = (androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds) $r21;

        if $r22 == null goto label03;

        $r152 = virtualinvoke $r22.<androidx.compose.ui.platform.SemanticsNodeWithAdjustedBounds: androidx.compose.ui.semantics.SemanticsNode getSemanticsNode()>();

        goto label04;

     label03:
        $r152 = null;

     label04:
        r5 = $r152;

        z43 = 0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r5);

        $r23 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        r6 = virtualinvoke $r23.<androidx.compose.ui.semantics.SemanticsConfiguration: java.util.Iterator iterator()>();

     label05:
        $z44 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z44 == 0 goto label59;

        $r25 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r25;

        z45 = 0;

        $r26 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r28 = virtualinvoke $r27.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getHorizontalScrollAxisRange()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r26, $r28);

        if $z2 != 0 goto label06;

        $r148 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r149 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r150 = virtualinvoke $r149.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getVerticalScrollAxisRange()>();

        $z41 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r148, $r150);

        if $z41 == 0 goto label07;

     label06:
        $r29 = (java.util.List) r2;

        z45 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean registerScrollingId(int,java.util.List)>(i0, $r29);

     label07:
        if z45 != 0 goto label08;

        $r143 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r144 = virtualinvoke r4.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig()>();

        $r145 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r146 = (androidx.compose.ui.semantics.SemanticsPropertyKey) $r145;

        $r147 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r144, $r146);

        $z40 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r143, $r147);

        if $z40 == 0 goto label08;

        goto label05;

     label08:
        $r30 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (androidx.compose.ui.semantics.SemanticsPropertyKey) $r30;

        $r31 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r32 = virtualinvoke $r31.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getPaneTitle()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r32);

        if $z3 == 0 goto label09;

        $r142 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r142, "null cannot be cast to non-null type kotlin.String");

        r153 = (java.lang.String) $r142;

        $z39 = virtualinvoke r4.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: boolean hasPaneTitle()>();

        if $z39 == 0 goto label05;

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendPaneChangeEvents(int,int,java.lang.String)>(i0, 8, r153);

        goto label05;

     label09:
        $r33 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r34 = virtualinvoke $r33.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getStateDescription()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r34);

        if $z4 == 0 goto label10;

        $z46 = 1;

        goto label11;

     label10:
        $r35 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r36 = virtualinvoke $r35.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getToggleableState()>();

        $z46 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r36);

     label11:
        if $z46 == 0 goto label12;

        $i28 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r140 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i28, 2048, $r140, null, 8, null);

        $i29 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r141 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i29, 2048, $r141, null, 8, null);

        goto label05;

     label12:
        $r37 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r38 = virtualinvoke $r37.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getProgressBarRangeInfo()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r38);

        if $z5 == 0 goto label13;

        $i26 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r138 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i26, 2048, $r138, null, 8, null);

        $i27 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r139 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i27, 2048, $r139, null, 8, null);

        goto label05;

     label13:
        $r39 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r40 = virtualinvoke $r39.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getSelected()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r40);

        if $z6 == 0 goto label24;

        $r106 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r107 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r108 = virtualinvoke $r107.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getRole()>();

        $r109 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r106, $r108);

        r154 = (androidx.compose.ui.semantics.Role) $r109;

        $r110 = <androidx.compose.ui.semantics.Role: androidx.compose.ui.semantics.Role$Companion Companion>;

        i30 = virtualinvoke $r110.<androidx.compose.ui.semantics.Role$Companion: int getTab-o7Vup1c()>();

        if r154 != null goto label14;

        $z47 = 0;

        goto label15;

     label14:
        $i21 = virtualinvoke r154.<androidx.compose.ui.semantics.Role: int unbox-impl()>();

        $z47 = staticinvoke <androidx.compose.ui.semantics.Role: boolean equals-impl0(int,int)>($i21, i30);

     label15:
        if $z47 == 0 goto label23;

        $r113 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r114 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r115 = virtualinvoke $r114.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getSelected()>();

        $r116 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r113, $r115);

        $r117 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z31 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r116, $r117);

        if $z31 == 0 goto label22;

        $i25 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        r155 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createEvent$ui_release(int,int)>($i25, 4);

        $r119 = new androidx.compose.ui.semantics.SemanticsNode;

        $r120 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.SemanticsModifierNode getOuterSemanticsNode$ui_release()>();

        specialinvoke $r119.<androidx.compose.ui.semantics.SemanticsNode: void <init>(androidx.compose.ui.node.SemanticsModifierNode,boolean,androidx.compose.ui.node.LayoutNode,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r120, 1, null, 4, null);

        r156 = $r119;

        $r121 = virtualinvoke r156.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r122 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r123 = virtualinvoke $r122.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $r124 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r121, $r123);

        r157 = (java.util.List) $r124;

        if r157 == null goto label16;

        $r137 = (java.lang.CharSequence) ",";

        $r158 = staticinvoke <androidx.compose.ui.TempListUtilsKt: java.lang.String fastJoinToString$default(java.util.List,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r157, $r137, null, null, 0, null, null, 62, null);

        goto label17;

     label16:
        $r158 = null;

     label17:
        r159 = $r158;

        $r125 = virtualinvoke r156.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r126 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r127 = virtualinvoke $r126.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getText()>();

        $r128 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r125, $r127);

        r160 = (java.util.List) $r128;

        if r160 == null goto label18;

        $r135 = (java.lang.CharSequence) ",";

        $r161 = staticinvoke <androidx.compose.ui.TempListUtilsKt: java.lang.String fastJoinToString$default(java.util.List,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r160, $r135, null, null, 0, null, null, 62, null);

        goto label19;

     label18:
        $r161 = null;

     label19:
        r162 = $r161;

        if r159 == null goto label20;

        r163 = r159;

        $r131 = (java.lang.CharSequence) r163;

        virtualinvoke r155.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r131);

        $r132 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r133 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label20;

     label20:
        if r162 == null goto label21;

        r164 = r162;

        $r129 = virtualinvoke r155.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $z34 = interfaceinvoke $r129.<java.util.List: boolean add(java.lang.Object)>(r164);

        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z34);

        goto label21;

     label21:
        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>(r155);

        goto label05;

     label22:
        $i24 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i24, 2048, $r118, null, 8, null);

        goto label05;

     label23:
        $i22 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i22, 2048, $r111, null, 8, null);

        $i23 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r112 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i23, 2048, $r112, null, 8, null);

        goto label05;

     label24:
        $r41 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r42 = virtualinvoke $r41.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r42);

        if $z7 == 0 goto label25;

        $i20 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r104 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r104, "null cannot be cast to non-null type kotlin.collections.List<kotlin.String>");

        $r105 = (java.util.List) $r104;

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView(int,int,java.lang.Integer,java.util.List)>($i20, 2048, $r103, $r105);

        goto label05;

     label25:
        $r43 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r44 = virtualinvoke $r43.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getEditableText()>();

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r44);

        if $z8 == 0 goto label36;

        $z24 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isTextField(androidx.compose.ui.semantics.SemanticsNode)>(r5);

        if $z24 == 0 goto label35;

        $r97 = virtualinvoke r4.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig()>();

        $r98 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.text.AnnotatedString getTextForTextField(androidx.compose.ui.semantics.SemanticsConfiguration)>($r97);

        if $r98 == null goto label26;

        $r165 = (java.lang.CharSequence) $r98;

        goto label27;

     label26:
        $r165 = (java.lang.CharSequence) "";

     label27:
        r166 = $r165;

        $r99 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r100 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.text.AnnotatedString getTextForTextField(androidx.compose.ui.semantics.SemanticsConfiguration)>($r99);

        if $r100 == null goto label28;

        $r167 = (java.lang.CharSequence) $r100;

        goto label29;

     label28:
        $r167 = (java.lang.CharSequence) "";

     label29:
        r168 = $r167;

        i31 = 0;

        i32 = 0;

        i33 = interfaceinvoke r166.<java.lang.CharSequence: int length()>();

        i34 = interfaceinvoke r168.<java.lang.CharSequence: int length()>();

        $i35 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>(i33, i34);

     label30:
        if i31 >= $i35 goto label32;

        $c17 = interfaceinvoke r166.<java.lang.CharSequence: char charAt(int)>(i31);

        $c18 = interfaceinvoke r168.<java.lang.CharSequence: char charAt(int)>(i31);

        if $c17 == $c18 goto label31;

        goto label32;

     label31:
        i31 = i31 + 1;

        goto label30;

     label32:
        $i36 = $i35 - i31;

        if i32 >= $i36 goto label34;

        $i10 = i33 - 1;

        $i11 = $i10 - i32;

        $c12 = interfaceinvoke r166.<java.lang.CharSequence: char charAt(int)>($i11);

        $i13 = i34 - 1;

        $i14 = $i13 - i32;

        $c15 = interfaceinvoke r168.<java.lang.CharSequence: char charAt(int)>($i14);

        if $c12 == $c15 goto label33;

        goto label34;

     label33:
        i32 = i32 + 1;

        goto label32;

     label34:
        $i7 = i33 - i32;

        i37 = $i7 - i31;

        $i8 = i34 - i32;

        i38 = $i8 - i31;

        $i9 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        r169 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createEvent$ui_release(int,int)>($i9, 16);

        virtualinvoke r169.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>(i31);

        virtualinvoke r169.<android.view.accessibility.AccessibilityEvent: void setRemovedCount(int)>(i37);

        virtualinvoke r169.<android.view.accessibility.AccessibilityEvent: void setAddedCount(int)>(i38);

        virtualinvoke r169.<android.view.accessibility.AccessibilityEvent: void setBeforeText(java.lang.CharSequence)>(r166);

        $r101 = virtualinvoke r169.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r102 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.CharSequence trimToSize(java.lang.CharSequence,int)>(r168, 100000);

        interfaceinvoke $r101.<java.util.List: boolean add(java.lang.Object)>($r102);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>(r169);

        goto label05;

     label35:
        $i6 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i6, 2048, $r96, null, 8, null);

        goto label05;

     label36:
        $r45 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r46 = virtualinvoke $r45.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTextSelectionRange()>();

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r46);

        if $z9 == 0 goto label39;

        $r94 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r95 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.text.AnnotatedString getTextForTextField(androidx.compose.ui.semantics.SemanticsConfiguration)>($r94);

        if $r95 == null goto label37;

        $r170 = virtualinvoke $r95.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        if $r170 != null goto label38;

     label37:
        $r170 = "";

     label38:
        r171 = $r170;

        $r172 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r173 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r174 = virtualinvoke $r173.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTextSelectionRange()>();

        $r175 = virtualinvoke $r172.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r174);

        $r176 = (androidx.compose.ui.text.TextRange) $r175;

        l39 = virtualinvoke $r176.<androidx.compose.ui.text.TextRange: long unbox-impl()>();

        $i40 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $i41 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>(l39);

        $r177 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i41);

        $i42 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>(l39);

        $r178 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i42);

        $i43 = virtualinvoke r171.<java.lang.String: int length()>();

        $r179 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i43);

        $r180 = (java.lang.CharSequence) r171;

        $r181 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.CharSequence trimToSize(java.lang.CharSequence,int)>($r180, 100000);

        $r182 = (java.lang.String) $r181;

        r183 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createTextSelectionChangedEvent(int,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)>($i40, $r177, $r178, $r179, $r182);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>(r183);

        $i44 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendPendingTextTraversedAtGranularityEvent(int)>($i44);

        goto label05;

     label39:
        $r47 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r48 = virtualinvoke $r47.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getHorizontalScrollAxisRange()>();

        $z10 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r48);

        if $z10 == 0 goto label40;

        $z50 = 1;

        goto label41;

     label40:
        $r49 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r50 = virtualinvoke $r49.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getVerticalScrollAxisRange()>();

        $z50 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r50);

     label41:
        if $z50 == 0 goto label42;

        $r81 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode getLayoutNode$ui_release()>();

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void notifySubtreeAccessibilityStateChangedIfNeeded(androidx.compose.ui.node.LayoutNode)>($r81);

        $r82 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.List scrollObservationScopes>;

        $r83 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: androidx.compose.ui.platform.ScrollObservationScope findById(java.util.List,int)>($r82, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r83);

        r184 = $r83;

        $r84 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r85 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r86 = virtualinvoke $r85.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getHorizontalScrollAxisRange()>();

        $r87 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r84, $r86);

        $r88 = (androidx.compose.ui.semantics.ScrollAxisRange) $r87;

        virtualinvoke r184.<androidx.compose.ui.platform.ScrollObservationScope: void setHorizontalScrollAxisRange(androidx.compose.ui.semantics.ScrollAxisRange)>($r88);

        $r89 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r90 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r91 = virtualinvoke $r90.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getVerticalScrollAxisRange()>();

        $r92 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r89, $r91);

        $r93 = (androidx.compose.ui.semantics.ScrollAxisRange) $r92;

        virtualinvoke r184.<androidx.compose.ui.platform.ScrollObservationScope: void setVerticalScrollAxisRange(androidx.compose.ui.semantics.ScrollAxisRange)>($r93);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendScrollEventIfNeeded(androidx.compose.ui.platform.ScrollObservationScope)>(r184);

        goto label05;

     label42:
        $r51 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r52 = virtualinvoke $r51.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getFocused()>();

        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r52);

        if $z11 == 0 goto label44;

        $r77 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r77, "null cannot be cast to non-null type kotlin.Boolean");

        $r78 = (java.lang.Boolean) $r77;

        $z20 = virtualinvoke $r78.<java.lang.Boolean: boolean booleanValue()>();

        if $z20 == 0 goto label43;

        $i4 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $i5 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>($i4);

        $r80 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createEvent$ui_release(int,int)>($i5, 8);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>($r80);

     label43:
        $i2 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $i3 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>($i2);

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i3, 2048, $r79, null, 8, null);

        goto label05;

     label44:
        $r53 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r54 = virtualinvoke $r53.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCustomActions()>();

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, $r54);

        if $z12 == 0 goto label55;

        $r62 = virtualinvoke r5.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r63 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r64 = virtualinvoke $r63.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCustomActions()>();

        $r65 = virtualinvoke $r62.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r64);

        r185 = (java.util.List) $r65;

        $r66 = virtualinvoke r4.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig()>();

        $r67 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r68 = virtualinvoke $r67.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getCustomActions()>();

        $r69 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r66, $r68);

        r186 = (java.util.List) $r69;

        if r186 == null goto label52;

        $r71 = new java.util.LinkedHashSet;

        specialinvoke $r71.<java.util.LinkedHashSet: void <init>()>();

        r187 = (java.util.Set) $r71;

        r188 = r185;

        z51 = 0;

        i45 = 0;

        $i46 = interfaceinvoke r188.<java.util.List: int size()>();

     label45:
        if i45 >= $i46 goto label46;

        r189 = interfaceinvoke r188.<java.util.List: java.lang.Object get(int)>(i45);

        r190 = (androidx.compose.ui.semantics.CustomAccessibilityAction) r189;

        z52 = 0;

        $r76 = virtualinvoke r190.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        interfaceinvoke r187.<java.util.Set: boolean add(java.lang.Object)>($r76);

        i45 = i45 + 1;

        goto label45;

     label46:
        $r72 = new java.util.LinkedHashSet;

        specialinvoke $r72.<java.util.LinkedHashSet: void <init>()>();

        r191 = (java.util.Set) $r72;

        r192 = r186;

        z53 = 0;

        $i47 = 0;

        i48 = interfaceinvoke r192.<java.util.List: int size()>();

     label47:
        if $i47 >= i48 goto label48;

        r193 = interfaceinvoke r192.<java.util.List: java.lang.Object get(int)>($i47);

        r194 = (androidx.compose.ui.semantics.CustomAccessibilityAction) r193;

        $r75 = virtualinvoke r194.<androidx.compose.ui.semantics.CustomAccessibilityAction: java.lang.String getLabel()>();

        interfaceinvoke r191.<java.util.Set: boolean add(java.lang.Object)>($r75);

        $i47 = $i47 + 1;

        goto label47;

     label48:
        $r73 = (java.util.Collection) r191;

        $z16 = interfaceinvoke r187.<java.util.Set: boolean containsAll(java.util.Collection)>($r73);

        if $z16 == 0 goto label49;

        $r74 = (java.util.Collection) r187;

        $z17 = interfaceinvoke r191.<java.util.Set: boolean containsAll(java.util.Collection)>($r74);

        if $z17 != 0 goto label50;

     label49:
        $z54 = 1;

        goto label51;

     label50:
        $z54 = 0;

     label51:
        z43 = $z54;

        goto label05;

     label52:
        $r70 = (java.util.Collection) r185;

        $z15 = interfaceinvoke $r70.<java.util.Collection: boolean isEmpty()>();

        if $z15 != 0 goto label53;

        $z55 = 1;

        goto label54;

     label53:
        $z55 = 0;

     label54:
        if $z55 == 0 goto label05;

        z43 = 1;

        goto label05;

     label55:
        $r55 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z13 = $r55 instanceof androidx.compose.ui.semantics.AccessibilityAction;

        if $z13 == 0 goto label58;

        $r56 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r56, "null cannot be cast to non-null type androidx.compose.ui.semantics.AccessibilityAction<*>");

        $r57 = (androidx.compose.ui.semantics.AccessibilityAction) $r56;

        $r58 = virtualinvoke r4.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig()>();

        $r59 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r60 = (androidx.compose.ui.semantics.SemanticsPropertyKey) $r59;

        $r61 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r58, $r60);

        $z14 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$accessibilityEquals(androidx.compose.ui.semantics.AccessibilityAction,java.lang.Object)>($r57, $r61);

        if $z14 != 0 goto label56;

        $z56 = 1;

        goto label57;

     label56:
        $z56 = 0;

     label57:
        z43 = $z56;

        goto label05;

     label58:
        z43 = 1;

        goto label05;

     label59:
        if z43 != 0 goto label60;

        z43 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$propertiesDeleted(androidx.compose.ui.semantics.SemanticsNode,androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy)>(r5, r4);

     label60:
        if z43 == 0 goto label01;

        $i1 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView$default(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat,int,int,java.lang.Integer,java.util.List,int,java.lang.Object)>(r0, $i1, 2048, $r24, null, 8, null);

        goto label01;

     label61:
        return;
    }

    private final boolean registerScrollingId(int, java.util.List)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0;
        java.util.List r1, $r4, $r5;
        androidx.compose.ui.platform.ScrollObservationScope r2, r3, $r6;
        boolean z1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        z1 = 0;

        r2 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: androidx.compose.ui.platform.ScrollObservationScope findById(java.util.List,int)>(r1, i0);

        if r2 == null goto label1;

        $r6 = r2;

        goto label2;

     label1:
        z1 = 1;

        $r6 = new androidx.compose.ui.platform.ScrollObservationScope;

        $r4 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.List scrollObservationScopes>;

        specialinvoke $r6.<androidx.compose.ui.platform.ScrollObservationScope: void <init>(int,java.util.List,java.lang.Float,java.lang.Float,androidx.compose.ui.semantics.ScrollAxisRange,androidx.compose.ui.semantics.ScrollAxisRange)>(i0, $r4, null, null, null, null);

     label2:
        r3 = $r6;

        $r5 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.List scrollObservationScopes>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

        return z1;
    }

    private final void sendScrollEventIfNeeded(androidx.compose.ui.platform.ScrollObservationScope)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.platform.ScrollObservationScope r1;
        boolean $z0;
        androidx.compose.ui.platform.AndroidComposeView $r2;
        androidx.compose.ui.node.OwnerSnapshotObserver $r3;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendScrollEventIfNeeded$1 $r4;
        androidx.compose.ui.node.OwnerScope $r5;
        kotlin.jvm.functions.Function1 $r6;
        kotlin.jvm.functions.Function0 $r7;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.platform.ScrollObservationScope;

        $z0 = virtualinvoke r1.<androidx.compose.ui.platform.ScrollObservationScope: boolean isValid()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.OwnerSnapshotObserver getSnapshotObserver()>();

        $r5 = (androidx.compose.ui.node.OwnerScope) r1;

        $r6 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: kotlin.jvm.functions.Function1 sendScrollEventIfNeededLambda>;

        $r4 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendScrollEventIfNeeded$1;

        specialinvoke $r4.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$sendScrollEventIfNeeded$1: void <init>(androidx.compose.ui.platform.ScrollObservationScope,androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)>(r1, r0);

        $r7 = (kotlin.jvm.functions.Function0) $r4;

        virtualinvoke $r3.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r5, $r6, $r7);

        return;
    }

    private final void sendPaneChangeEvents(int, int, java.lang.String)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, $i2;
        java.lang.String r1;
        android.view.accessibility.AccessibilityEvent r2;
        java.util.List $r3;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i2 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        r2 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createEvent$ui_release(int,int)>($i2, 32);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>(i1);

        if r1 == null goto label1;

        $r3 = virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    private final void sendSemanticsStructureChangeEvents(androidx.compose.ui.semantics.SemanticsNode, androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1, r24, r28;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy r2, $r11;
        java.util.Set r3, $r5, $r18;
        java.util.LinkedHashSet $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Map $r6, $r8, $r16;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, i8, i9;
        java.lang.Integer $r7, $r9, $r14, $r17, $r19, $r20;
        java.lang.Object $r10, $r12, r23, r27;
        java.lang.Number $r13;
        androidx.compose.ui.node.LayoutNode $r15, $r21;
        java.util.List $r22, $r26;
        java.util.Iterator $r25;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        r2 := @parameter1: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy;

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        r3 = (java.util.Set) $r4;

        $r22 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getReplacedChildren$ui_release()>();

        i5 = 0;

        i6 = interfaceinvoke $r22.<java.util.List: int size()>();

     label1:
        if i5 >= i6 goto label4;

        r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i5);

        r24 = (androidx.compose.ui.semantics.SemanticsNode) r23;

        $r16 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $i2 = virtualinvoke r24.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $z3 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>($r17);

        if $z3 == 0 goto label3;

        $r18 = virtualinvoke r2.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: java.util.Set getChildren()>();

        $i3 = virtualinvoke r24.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $z4 = interfaceinvoke $r18.<java.util.Set: boolean contains(java.lang.Object)>($r19);

        if $z4 != 0 goto label2;

        $r21 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode getLayoutNode$ui_release()>();

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void notifySubtreeAccessibilityStateChangedIfNeeded(androidx.compose.ui.node.LayoutNode)>($r21);

        return;

     label2:
        $i4 = virtualinvoke r24.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r20);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        $r5 = virtualinvoke r2.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy: java.util.Set getChildren()>();

        $r25 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r12 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.lang.Number) $r12;

        $i7 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $z2 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        if $z2 != 0 goto label5;

        $r15 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.LayoutNode getLayoutNode$ui_release()>();

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void notifySubtreeAccessibilityStateChangedIfNeeded(androidx.compose.ui.node.LayoutNode)>($r15);

        return;

     label6:
        $r26 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getReplacedChildren$ui_release()>();

        i8 = 0;

        i9 = interfaceinvoke $r26.<java.util.List: int size()>();

     label7:
        if i8 >= i9 goto label9;

        r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(i8);

        r28 = (androidx.compose.ui.semantics.SemanticsNode) r27;

        $r6 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map getCurrentSemanticsNodes()>();

        $i0 = virtualinvoke r28.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z1 == 0 goto label8;

        $r8 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.util.Map previousSemanticsNodes>;

        $i1 = virtualinvoke r28.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r10);

        $r11 = (androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy) $r10;

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendSemanticsStructureChangeEvents(androidx.compose.ui.semantics.SemanticsNode,androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$SemanticsNodeCopy)>(r28, $r11);

     label8:
        i8 = i8 + 1;

        goto label7;

     label9:
        return;
    }

    private final int semanticsNodeIdToAccessibilityVirtualNodeId(int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, $i1;
        androidx.compose.ui.platform.AndroidComposeView $r1;
        androidx.compose.ui.semantics.SemanticsOwner $r2;
        androidx.compose.ui.semantics.SemanticsNode $r3;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()>();

        $r3 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsOwner: androidx.compose.ui.semantics.SemanticsNode getUnmergedRootSemanticsNode()>();

        $i1 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        if i0 != $i1 goto label1;

        return -1;

     label1:
        return i0;
    }

    private final boolean traverseAtGranularity(androidx.compose.ui.semantics.SemanticsNode, int, boolean, boolean)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        int i0, i1, i2, $i4, $i5, $i7, $i8, i9, $i10, i11, $i12, $i13, i14, $i15;
        boolean z0, z1, $z3, $z4, z5, z6;
        java.lang.String r2;
        int[] r3, $r10;
        short s3, $s16;
        java.lang.Integer $r4, $r7;
        androidx.compose.ui.platform.AccessibilityIterators$TextSegmentIterator $r5, r9;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent $r6;
        long $l6;
        java.lang.CharSequence r8;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i4 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r4 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.Integer previousTraversedNode>;

        if $r4 != null goto label01;

        goto label02;

     label01:
        $i5 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        if $i4 == $i5 goto label03;

     label02:
        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition> = -1;

        $i8 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.Integer previousTraversedNode> = $r7;

     label03:
        r2 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String getIterableTextForAccessibility(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        r8 = (java.lang.CharSequence) r2;

        if r8 == null goto label04;

        $i7 = interfaceinvoke r8.<java.lang.CharSequence: int length()>();

        if $i7 != 0 goto label05;

     label04:
        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        if $z4 == 0 goto label07;

        return 0;

     label07:
        $r5 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(androidx.compose.ui.semantics.SemanticsNode,int)>(r1, i0);

        if $r5 != null goto label08;

        return 0;

     label08:
        r9 = $r5;

        i9 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int getAccessibilitySelectionEnd(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if i9 != -1 goto label11;

        if z0 == 0 goto label09;

        $i10 = 0;

        goto label10;

     label09:
        $i10 = virtualinvoke r2.<java.lang.String: int length()>();

     label10:
        i9 = $i10;

     label11:
        if z0 == 0 goto label12;

        $r10 = interfaceinvoke r9.<androidx.compose.ui.platform.AccessibilityIterators$TextSegmentIterator: int[] following(int)>(i9);

        goto label13;

     label12:
        $r10 = interfaceinvoke r9.<androidx.compose.ui.platform.AccessibilityIterators$TextSegmentIterator: int[] preceding(int)>(i9);

     label13:
        if $r10 != null goto label14;

        return 0;

     label14:
        r3 = $r10;

        i1 = r3[0];

        i2 = r3[1];

        z5 = 0;

        z6 = 0;

        if z1 == 0 goto label20;

        $z3 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilitySelectionExtendable(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if $z3 == 0 goto label20;

        i11 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int getAccessibilitySelectionStart(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if i11 != -1 goto label17;

        if z0 == 0 goto label15;

        $i12 = i1;

        goto label16;

     label15:
        $i12 = i2;

     label16:
        i11 = $i12;

     label17:
        if z0 == 0 goto label18;

        $i13 = i2;

        goto label19;

     label18:
        $i13 = i1;

     label19:
        i14 = $i13;

        goto label23;

     label20:
        if z0 == 0 goto label21;

        $i15 = i2;

        goto label22;

     label21:
        $i15 = i1;

     label22:
        i11 = $i15;

        i14 = i11;

     label23:
        if z0 == 0 goto label24;

        $s16 = 256;

        goto label25;

     label24:
        $s16 = 512;

     label25:
        s3 = $s16;

        $r6 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r6.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: void <init>(androidx.compose.ui.semantics.SemanticsNode,int,int,int,int,long)>(r1, s3, i0, i1, i2, $l6);

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent pendingTextTraversedEvent> = $r6;

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean setAccessibilitySelection(androidx.compose.ui.semantics.SemanticsNode,int,int,boolean)>(r1, i11, i14, 1);

        return 1;
    }

    private final void sendPendingTextTraversedAtGranularityEvent(int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, $i1, $i6, $i7, $i8, $i9, $i10, $i11;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent r1, $r3;
        android.view.accessibility.AccessibilityEvent r2;
        androidx.compose.ui.semantics.SemanticsNode $r4, $r5, $r7;
        long $l2, $l3, $l4;
        byte $b5;
        java.util.List $r6;
        java.lang.String $r8;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent pendingTextTraversedEvent>;

        if $r3 == null goto label3;

        r1 = $r3;

        $r4 = virtualinvoke r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: androidx.compose.ui.semantics.SemanticsNode getNode()>();

        $i1 = virtualinvoke $r4.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        if i0 == $i1 goto label1;

        return;

     label1:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = virtualinvoke r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: long getTraverseTime()>();

        $l4 = $l2 - $l3;

        $b5 = $l4 cmp 1000L;

        if $b5 > 0 goto label2;

        $r5 = virtualinvoke r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: androidx.compose.ui.semantics.SemanticsNode getNode()>();

        $i6 = virtualinvoke $r5.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $i7 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>($i6);

        r2 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createEvent$ui_release(int,int)>($i7, 131072);

        $i8 = virtualinvoke r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: int getFromIndex()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i8);

        $i9 = virtualinvoke r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: int getToIndex()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i9);

        $i10 = virtualinvoke r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: int getAction()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setAction(int)>($i10);

        $i11 = virtualinvoke r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: int getGranularity()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)>($i11);

        $r6 = virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r7 = virtualinvoke r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent: androidx.compose.ui.semantics.SemanticsNode getNode()>();

        $r8 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String getIterableTextForAccessibility(androidx.compose.ui.semantics.SemanticsNode)>($r7);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>(r2);

     label2:
        goto label3;

     label3:
        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$PendingTextTraversedEvent pendingTextTraversedEvent> = null;

        return;
    }

    private final boolean setAccessibilitySelection(androidx.compose.ui.semantics.SemanticsNode, int, int, boolean)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0, z1, $z2, $z4, $z5, $z6;
        java.lang.String r2, $r7;
        android.view.accessibility.AccessibilityEvent r3;
        androidx.compose.ui.semantics.SemanticsConfiguration $r4, $r10;
        androidx.compose.ui.semantics.SemanticsActions $r5, $r11;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r6, $r12;
        java.lang.Integer $r8, $r9, $r17, $r18, $r28, $r32, $r33;
        java.lang.Object $r13, $r20;
        androidx.compose.ui.semantics.AccessibilityAction $r14;
        kotlin.Function $r15;
        kotlin.jvm.functions.Function3 $r16;
        java.lang.Boolean $r19, $r21;
        java.lang.CharSequence $r23;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r4 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r5 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetSelection()>();

        $z2 = virtualinvoke $r4.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r6);

        if $z2 == 0 goto label03;

        $z4 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$enabled(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if $z4 == 0 goto label03;

        $r10 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r11 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r12 = virtualinvoke $r11.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getSetSelection()>();

        $r13 = virtualinvoke $r10.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r12);

        $r14 = (androidx.compose.ui.semantics.AccessibilityAction) $r13;

        $r15 = virtualinvoke $r14.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r16 = (kotlin.jvm.functions.Function3) $r15;

        if $r16 == null goto label01;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r20 = interfaceinvoke $r16.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r17, $r18, $r19);

        $r21 = (java.lang.Boolean) $r20;

        $z5 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        goto label02;

     label01:
        $z5 = 0;

     label02:
        return $z5;

     label03:
        if i0 != i1 goto label04;

        $i6 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition>;

        if i1 != $i6 goto label04;

        return 0;

     label04:
        $r7 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String getIterableTextForAccessibility(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if $r7 != null goto label05;

        return 0;

     label05:
        r2 = $r7;

        if i0 < 0 goto label06;

        if i0 != i1 goto label06;

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        if i1 > $i5 goto label06;

        $i7 = i0;

        goto label07;

     label06:
        $i7 = -1;

     label07:
        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition> = $i7;

        $r23 = (java.lang.CharSequence) r2;

        $i8 = interfaceinvoke $r23.<java.lang.CharSequence: int length()>();

        if $i8 <= 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        z1 = $z6;

        $i2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $i9 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>($i2);

        if z1 == 0 goto label10;

        $i4 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r28 = $r9;

        goto label11;

     label10:
        $r28 = null;

     label11:
        if z1 == 0 goto label12;

        $i3 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r32 = $r8;

        goto label13;

     label12:
        $r32 = null;

     label13:
        if z1 == 0 goto label14;

        $i10 = virtualinvoke r2.<java.lang.String: int length()>();

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        goto label15;

     label14:
        $r33 = null;

     label15:
        r3 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createTextSelectionChangedEvent(int,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)>($i9, $r28, $r32, $r33, r2);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>(r3);

        $i11 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendPendingTextTraversedAtGranularityEvent(int)>($i11);

        return 1;
    }

    private final int getAccessibilitySelectionStart(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.semantics.SemanticsConfiguration $r2, $r5, $r8;
        androidx.compose.ui.semantics.SemanticsProperties $r3, $r6, $r9;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r4, $r7, $r10;
        boolean $z0, $z1;
        int $i0, $i2;
        java.lang.Object $r11;
        androidx.compose.ui.text.TextRange $r12;
        long $l1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $r2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r3 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $z0 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r4);

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r6 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTextSelectionRange()>();

        $z1 = virtualinvoke $r5.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r7);

        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r9 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r10 = virtualinvoke $r9.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTextSelectionRange()>();

        $r11 = virtualinvoke $r8.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r10);

        $r12 = (androidx.compose.ui.text.TextRange) $r11;

        $l1 = virtualinvoke $r12.<androidx.compose.ui.text.TextRange: long unbox-impl()>();

        $i2 = staticinvoke <androidx.compose.ui.text.TextRange: int getStart-impl(long)>($l1);

        return $i2;

     label1:
        $i0 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition>;

        return $i0;
    }

    private final int getAccessibilitySelectionEnd(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.semantics.SemanticsConfiguration $r2, $r5, $r8;
        androidx.compose.ui.semantics.SemanticsProperties $r3, $r6, $r9;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r4, $r7, $r10;
        boolean $z0, $z1;
        int $i0, $i2;
        java.lang.Object $r11;
        androidx.compose.ui.text.TextRange $r12;
        long $l1;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $r2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r3 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $z0 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r4);

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r6 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTextSelectionRange()>();

        $z1 = virtualinvoke $r5.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r7);

        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r9 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r10 = virtualinvoke $r9.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTextSelectionRange()>();

        $r11 = virtualinvoke $r8.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r10);

        $r12 = (androidx.compose.ui.text.TextRange) $r11;

        $l1 = virtualinvoke $r12.<androidx.compose.ui.text.TextRange: long unbox-impl()>();

        $i2 = staticinvoke <androidx.compose.ui.text.TextRange: int getEnd-impl(long)>($l1);

        return $i2;

     label1:
        $i0 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int accessibilityCursorPosition>;

        return $i0;
    }

    private final boolean isAccessibilitySelectionExtendable(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.semantics.SemanticsConfiguration $r2, $r5;
        androidx.compose.ui.semantics.SemanticsProperties $r3, $r6;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r4, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $r2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r3 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $z0 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r4);

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r6 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getEditableText()>();

        $z1 = virtualinvoke $r5.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r7);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private final androidx.compose.ui.platform.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(androidx.compose.ui.semantics.SemanticsNode, int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        int i0, $i1;
        java.lang.String r2;
        java.util.List r3;
        java.lang.Boolean r4, $r18, $r43;
        androidx.compose.ui.platform.AccessibilityIterators$ParagraphTextSegmentIterator$Companion $r5;
        androidx.compose.ui.platform.AccessibilityIterators$ParagraphTextSegmentIterator $r6;
        androidx.compose.ui.semantics.SemanticsConfiguration $r7, $r11;
        androidx.compose.ui.semantics.SemanticsActions $r8, $r12;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r9, $r13;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r10;
        java.lang.Object $r14, $r19, $r26;
        androidx.compose.ui.semantics.AccessibilityAction $r15;
        kotlin.Function $r16;
        kotlin.jvm.functions.Function1 $r17;
        androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator$Companion $r20;
        androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator $r21, $r22;
        androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator$Companion $r23;
        androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator $r24, $r25;
        androidx.compose.ui.platform.AndroidComposeView $r27, $r34;
        androidx.compose.ui.platform.AccessibilityIterators$WordTextSegmentIterator$Companion $r28;
        android.content.Context $r29, $r36;
        android.content.res.Resources $r30, $r37;
        android.content.res.Configuration $r31, $r38;
        java.util.Locale $r32, $r39;
        androidx.compose.ui.platform.AccessibilityIterators$WordTextSegmentIterator $r33;
        androidx.compose.ui.platform.AccessibilityIterators$CharacterTextSegmentIterator$Companion $r35;
        androidx.compose.ui.platform.AccessibilityIterators$CharacterTextSegmentIterator $r40;
        java.lang.CharSequence r41;
        androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator r42;
        androidx.compose.ui.text.TextLayoutResult r44;
        androidx.compose.ui.platform.AccessibilityIterators$TextSegmentIterator $r45;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        i0 := @parameter1: int;

        if r1 != null goto label01;

        return null;

     label01:
        r2 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String getIterableTextForAccessibility(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        r41 = (java.lang.CharSequence) r2;

        if r41 == null goto label02;

        $i1 = interfaceinvoke r41.<java.lang.CharSequence: int length()>();

        if $i1 != 0 goto label03;

     label02:
        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        if $z2 == 0 goto label05;

        return null;

     label05:
        lookupswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 4: goto label09;
            case 8: goto label08;
            case 16: goto label09;
            default: goto label16;
        };

     label06:
        $r35 = <androidx.compose.ui.platform.AccessibilityIterators$CharacterTextSegmentIterator: androidx.compose.ui.platform.AccessibilityIterators$CharacterTextSegmentIterator$Companion Companion>;

        $r34 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r36 = virtualinvoke $r34.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r37 = virtualinvoke $r36.<android.content.Context: android.content.res.Resources getResources()>();

        $r38 = virtualinvoke $r37.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r39 = $r38.<android.content.res.Configuration: java.util.Locale locale>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r39, "view.context.resources.configuration.locale");

        $r40 = virtualinvoke $r35.<androidx.compose.ui.platform.AccessibilityIterators$CharacterTextSegmentIterator$Companion: androidx.compose.ui.platform.AccessibilityIterators$CharacterTextSegmentIterator getInstance(java.util.Locale)>($r39);

        r42 = (androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator) $r40;

        virtualinvoke r42.<androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator: void initialize(java.lang.String)>(r2);

        goto label17;

     label07:
        $r28 = <androidx.compose.ui.platform.AccessibilityIterators$WordTextSegmentIterator: androidx.compose.ui.platform.AccessibilityIterators$WordTextSegmentIterator$Companion Companion>;

        $r27 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r29 = virtualinvoke $r27.<androidx.compose.ui.platform.AndroidComposeView: android.content.Context getContext()>();

        $r30 = virtualinvoke $r29.<android.content.Context: android.content.res.Resources getResources()>();

        $r31 = virtualinvoke $r30.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r32 = $r31.<android.content.res.Configuration: java.util.Locale locale>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r32, "view.context.resources.configuration.locale");

        $r33 = virtualinvoke $r28.<androidx.compose.ui.platform.AccessibilityIterators$WordTextSegmentIterator$Companion: androidx.compose.ui.platform.AccessibilityIterators$WordTextSegmentIterator getInstance(java.util.Locale)>($r32);

        r42 = (androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator) $r33;

        virtualinvoke r42.<androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator: void initialize(java.lang.String)>(r2);

        goto label17;

     label08:
        $r5 = <androidx.compose.ui.platform.AccessibilityIterators$ParagraphTextSegmentIterator: androidx.compose.ui.platform.AccessibilityIterators$ParagraphTextSegmentIterator$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.platform.AccessibilityIterators$ParagraphTextSegmentIterator$Companion: androidx.compose.ui.platform.AccessibilityIterators$ParagraphTextSegmentIterator getInstance()>();

        r42 = (androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator) $r6;

        virtualinvoke r42.<androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator: void initialize(java.lang.String)>(r2);

        goto label17;

     label09:
        $r7 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r8 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r9 = virtualinvoke $r8.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getGetTextLayoutResult()>();

        $z0 = virtualinvoke $r7.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r9);

        if $z0 != 0 goto label10;

        return null;

     label10:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r10;

        $r11 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r12 = <androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsActions INSTANCE>;

        $r13 = virtualinvoke $r12.<androidx.compose.ui.semantics.SemanticsActions: androidx.compose.ui.semantics.SemanticsPropertyKey getGetTextLayoutResult()>();

        $r14 = virtualinvoke $r11.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r13);

        $r15 = (androidx.compose.ui.semantics.AccessibilityAction) $r14;

        $r16 = virtualinvoke $r15.<androidx.compose.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r17 = (kotlin.jvm.functions.Function1) $r16;

        if $r17 == null goto label11;

        $r26 = interfaceinvoke $r17.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r43 = (java.lang.Boolean) $r26;

        goto label12;

     label11:
        $r43 = null;

     label12:
        r4 = $r43;

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, $r18);

        if $z1 == 0 goto label13;

        $r19 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        r44 = (androidx.compose.ui.text.TextLayoutResult) $r19;

        goto label14;

     label13:
        return null;

     label14:
        if i0 != 4 goto label15;

        $r23 = <androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator: androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator$Companion Companion>;

        $r24 = virtualinvoke $r23.<androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator$Companion: androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator getInstance()>();

        r42 = (androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator) $r24;

        $r25 = (androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator) r42;

        virtualinvoke $r25.<androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator: void initialize(java.lang.String,androidx.compose.ui.text.TextLayoutResult)>(r2, r44);

        goto label17;

     label15:
        $r20 = <androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator: androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator$Companion Companion>;

        $r21 = virtualinvoke $r20.<androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator$Companion: androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator getInstance()>();

        r42 = (androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator) $r21;

        $r22 = (androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator) r42;

        virtualinvoke $r22.<androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator: void initialize(java.lang.String,androidx.compose.ui.text.TextLayoutResult,androidx.compose.ui.semantics.SemanticsNode)>(r2, r44, r1);

        goto label17;

     label16:
        return null;

     label17:
        $r45 = (androidx.compose.ui.platform.AccessibilityIterators$TextSegmentIterator) r42;

        return $r45;
    }

    private final java.lang.String getIterableTextForAccessibility(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.semantics.SemanticsConfiguration $r2, $r5, $r12, $r14;
        androidx.compose.ui.semantics.SemanticsProperties $r3, $r6, $r15;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r4, $r7, $r16;
        boolean $z0, $z1;
        java.lang.Object $r8, $r10, $r17;
        java.util.List $r9, $r19;
        androidx.compose.ui.text.AnnotatedString $r11, $r13;
        java.lang.CharSequence $r18;
        java.lang.String $r20, $r21, $r22;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r3 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $z0 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r4);

        if $z0 == 0 goto label2;

        $r14 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r15 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r16 = virtualinvoke $r15.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getContentDescription()>();

        $r17 = virtualinvoke $r14.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r16);

        $r19 = (java.util.List) $r17;

        $r18 = (java.lang.CharSequence) ",";

        $r20 = staticinvoke <androidx.compose.ui.TempListUtilsKt: java.lang.String fastJoinToString$default(java.util.List,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r19, $r18, null, null, 0, null, null, 62, null);

        return $r20;

     label2:
        $z1 = staticinvoke <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat_androidKt: boolean access$isTextField(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if $z1 == 0 goto label5;

        $r12 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r13 = specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.text.AnnotatedString getTextForTextField(androidx.compose.ui.semantics.SemanticsConfiguration)>($r12);

        if $r13 == null goto label3;

        $r21 = virtualinvoke $r13.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        goto label4;

     label3:
        $r21 = null;

     label4:
        return $r21;

     label5:
        $r5 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r6 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getText()>();

        $r8 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r5, $r7);

        $r9 = (java.util.List) $r8;

        if $r9 == null goto label6;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>($r9);

        $r11 = (androidx.compose.ui.text.AnnotatedString) $r10;

        if $r11 == null goto label6;

        $r22 = virtualinvoke $r11.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        goto label7;

     label6:
        $r22 = null;

     label7:
        return $r22;
    }

    private final androidx.compose.ui.text.AnnotatedString getTextForTextField(androidx.compose.ui.semantics.SemanticsConfiguration)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.semantics.SemanticsConfiguration $r1;
        androidx.compose.ui.semantics.SemanticsProperties $r2;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r3;
        java.lang.Object $r4;
        androidx.compose.ui.text.AnnotatedString $r5;

        r0 := @this: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $r1 := @parameter0: androidx.compose.ui.semantics.SemanticsConfiguration;

        $r2 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getEditableText()>();

        $r4 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r1, $r3);

        $r5 = (androidx.compose.ui.text.AnnotatedString) $r4;

        return $r5;
    }

    private static final boolean populateAccessibilityNodeInfoProperties$canScrollForward(androidx.compose.ui.semantics.ScrollAxisRange)
    {
        androidx.compose.ui.semantics.ScrollAxisRange $r0;
        kotlin.jvm.functions.Function0 $r1, $r4, $r7;
        java.lang.Object $r2, $r5, $r8;
        java.lang.Number $r3, $r6, $r9;
        float $f0, $f1, $f2;
        byte $b0, $b1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: androidx.compose.ui.semantics.ScrollAxisRange;

        $r1 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getValue()>();

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getMaxValue()>();

        $r5 = interfaceinvoke $r4.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r6 = (java.lang.Number) $r5;

        $f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        $z1 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z1 == 0 goto label2;

     label1:
        $r7 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getValue()>();

        $r8 = interfaceinvoke $r7.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r9 = (java.lang.Number) $r8;

        $f2 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        $b1 = $f2 cmpl 0.0F;

        if $b1 <= 0 goto label3;

        $z0 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z0 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    private static final boolean populateAccessibilityNodeInfoProperties$canScrollBackward(androidx.compose.ui.semantics.ScrollAxisRange)
    {
        androidx.compose.ui.semantics.ScrollAxisRange $r0;
        kotlin.jvm.functions.Function0 $r1, $r4, $r7;
        java.lang.Object $r2, $r5, $r8;
        java.lang.Number $r3, $r6, $r9;
        float $f0, $f1, $f2;
        byte $b0, $b1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: androidx.compose.ui.semantics.ScrollAxisRange;

        $r1 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getValue()>();

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $z1 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z1 == 0 goto label2;

     label1:
        $r4 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getValue()>();

        $r5 = interfaceinvoke $r4.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r6 = (java.lang.Number) $r5;

        $f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $r7 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getMaxValue()>();

        $r8 = interfaceinvoke $r7.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r9 = (java.lang.Number) $r8;

        $f2 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        $b1 = $f1 cmpg $f2;

        if $b1 >= 0 goto label3;

        $z0 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: boolean getReverseScrolling()>();

        if $z0 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    private static final boolean performActionHelper$canScroll(androidx.compose.ui.semantics.ScrollAxisRange, float)
    {
        androidx.compose.ui.semantics.ScrollAxisRange $r0;
        float f0, $f1, $f2, $f3;
        byte $b0, $b1, $b2, $b3;
        kotlin.jvm.functions.Function0 $r1, $r4, $r7;
        java.lang.Object $r2, $r5, $r8;
        java.lang.Number $r3, $r6, $r9;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.semantics.ScrollAxisRange;

        f0 := @parameter1: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $r7 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getValue()>();

        $r8 = interfaceinvoke $r7.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r9 = (java.lang.Number) $r8;

        $f3 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        $b3 = $f3 cmpl 0.0F;

        if $b3 > 0 goto label2;

     label1:
        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label3;

        $r1 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getValue()>();

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = virtualinvoke $r0.<androidx.compose.ui.semantics.ScrollAxisRange: kotlin.jvm.functions.Function0 getMaxValue()>();

        $r5 = interfaceinvoke $r4.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r6 = (java.lang.Number) $r5;

        $f2 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $b2 = $f1 cmpg $f2;

        if $b2 >= 0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static final float performActionHelper$scrollDelta(float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        byte $b0, $b1;
        boolean $z0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = staticinvoke <java.lang.Math: float signum(float)>(f0);

        $f3 = staticinvoke <java.lang.Math: float signum(float)>(f1);

        $b0 = $f2 cmpg $f3;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label4;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f5 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $b1 = $f4 cmpg $f5;

        if $b1 >= 0 goto label3;

        $f6 = f0;

        goto label5;

     label3:
        $f6 = f1;

        goto label5;

     label4:
        $f6 = 0.0F;

     label5:
        return $f6;
    }

    private static final void semanticsChangeChecker$lambda-26(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.compose.ui.platform.AndroidComposeView $r1;
        androidx.compose.ui.node.Owner $r2;

        r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r1 = r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeView view>;

        $r2 = (androidx.compose.ui.node.Owner) $r1;

        staticinvoke <androidx.compose.ui.node.Owner: void measureAndLayout$default(androidx.compose.ui.node.Owner,boolean,int,java.lang.Object)>($r2, 0, 1, null);

        specialinvoke r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void checkForSemanticsChanges()>();

        r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean checkingForSemanticsChanges> = 0;

        return;
    }

    public static final int access$semanticsNodeIdToAccessibilityVirtualNodeId(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat, int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat $r0;
        int i0, $i1;

        $r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter1: int;

        $i1 = specialinvoke $r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int semanticsNodeIdToAccessibilityVirtualNodeId(int)>(i0);

        return $i1;
    }

    public static final boolean access$sendEvent(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat, android.view.accessibility.AccessibilityEvent)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat $r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $z0 = specialinvoke $r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z0;
    }

    public static final android.view.accessibility.AccessibilityNodeInfo access$createNodeInfo(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat, int)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat $r0;
        int i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;

        $r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter1: int;

        $r1 = specialinvoke $r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityNodeInfo createNodeInfo(int)>(i0);

        return $r1;
    }

    public static final boolean access$performActionHelper(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat, int, int, android.os.Bundle)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat $r0;
        int i0, i1;
        android.os.Bundle r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.os.Bundle;

        $z0 = specialinvoke $r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: boolean performActionHelper(int,int,android.os.Bundle)>(i0, i1, r1);

        return $z0;
    }

    public static final void access$addExtraDataToAccessibilityNodeInfoHelper(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat, int, android.view.accessibility.AccessibilityNodeInfo, java.lang.String, android.os.Bundle)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat $r0;
        int i0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.String r2;
        android.os.Bundle r3;

        $r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.Bundle;

        specialinvoke $r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void addExtraDataToAccessibilityNodeInfoHelper(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle)>(i0, r1, r2, r3);

        return;
    }

    public static final android.os.Handler access$getHandler$p(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat $r0;
        android.os.Handler $r1;

        $r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $r1 = $r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: android.os.Handler handler>;

        return $r1;
    }

    public static final java.lang.Runnable access$getSemanticsChangeChecker$p(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat $r0;
        java.lang.Runnable $r1;

        $r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        $r1 = $r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: java.lang.Runnable semanticsChangeChecker>;

        return $r1;
    }

    public static final void access$sendScrollEventIfNeeded(androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat, androidx.compose.ui.platform.ScrollObservationScope)
    {
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat $r0;
        androidx.compose.ui.platform.ScrollObservationScope r1;

        $r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter1: androidx.compose.ui.platform.ScrollObservationScope;

        specialinvoke $r0.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: void sendScrollEventIfNeeded(androidx.compose.ui.platform.ScrollObservationScope)>(r1);

        return;
    }

    static void <clinit>()
    {
        int[] r0;
        androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Companion $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;

        $r1 = new androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Companion;

        specialinvoke $r1.<androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Companion Companion> = $r1;

        r0 = newarray (int)[32];

        $i0 = <androidx.compose.ui.R$id: int accessibility_custom_action_0>;

        r0[0] = $i0;

        $i1 = <androidx.compose.ui.R$id: int accessibility_custom_action_1>;

        r0[1] = $i1;

        $i2 = <androidx.compose.ui.R$id: int accessibility_custom_action_2>;

        r0[2] = $i2;

        $i3 = <androidx.compose.ui.R$id: int accessibility_custom_action_3>;

        r0[3] = $i3;

        $i4 = <androidx.compose.ui.R$id: int accessibility_custom_action_4>;

        r0[4] = $i4;

        $i5 = <androidx.compose.ui.R$id: int accessibility_custom_action_5>;

        r0[5] = $i5;

        $i6 = <androidx.compose.ui.R$id: int accessibility_custom_action_6>;

        r0[6] = $i6;

        $i7 = <androidx.compose.ui.R$id: int accessibility_custom_action_7>;

        r0[7] = $i7;

        $i8 = <androidx.compose.ui.R$id: int accessibility_custom_action_8>;

        r0[8] = $i8;

        $i9 = <androidx.compose.ui.R$id: int accessibility_custom_action_9>;

        r0[9] = $i9;

        $i10 = <androidx.compose.ui.R$id: int accessibility_custom_action_10>;

        r0[10] = $i10;

        $i11 = <androidx.compose.ui.R$id: int accessibility_custom_action_11>;

        r0[11] = $i11;

        $i12 = <androidx.compose.ui.R$id: int accessibility_custom_action_12>;

        r0[12] = $i12;

        $i13 = <androidx.compose.ui.R$id: int accessibility_custom_action_13>;

        r0[13] = $i13;

        $i14 = <androidx.compose.ui.R$id: int accessibility_custom_action_14>;

        r0[14] = $i14;

        $i15 = <androidx.compose.ui.R$id: int accessibility_custom_action_15>;

        r0[15] = $i15;

        $i16 = <androidx.compose.ui.R$id: int accessibility_custom_action_16>;

        r0[16] = $i16;

        $i17 = <androidx.compose.ui.R$id: int accessibility_custom_action_17>;

        r0[17] = $i17;

        $i18 = <androidx.compose.ui.R$id: int accessibility_custom_action_18>;

        r0[18] = $i18;

        $i19 = <androidx.compose.ui.R$id: int accessibility_custom_action_19>;

        r0[19] = $i19;

        $i20 = <androidx.compose.ui.R$id: int accessibility_custom_action_20>;

        r0[20] = $i20;

        $i21 = <androidx.compose.ui.R$id: int accessibility_custom_action_21>;

        r0[21] = $i21;

        $i22 = <androidx.compose.ui.R$id: int accessibility_custom_action_22>;

        r0[22] = $i22;

        $i23 = <androidx.compose.ui.R$id: int accessibility_custom_action_23>;

        r0[23] = $i23;

        $i24 = <androidx.compose.ui.R$id: int accessibility_custom_action_24>;

        r0[24] = $i24;

        $i25 = <androidx.compose.ui.R$id: int accessibility_custom_action_25>;

        r0[25] = $i25;

        $i26 = <androidx.compose.ui.R$id: int accessibility_custom_action_26>;

        r0[26] = $i26;

        $i27 = <androidx.compose.ui.R$id: int accessibility_custom_action_27>;

        r0[27] = $i27;

        $i28 = <androidx.compose.ui.R$id: int accessibility_custom_action_28>;

        r0[28] = $i28;

        $i29 = <androidx.compose.ui.R$id: int accessibility_custom_action_29>;

        r0[29] = $i29;

        $i30 = <androidx.compose.ui.R$id: int accessibility_custom_action_30>;

        r0[30] = $i30;

        $i31 = <androidx.compose.ui.R$id: int accessibility_custom_action_31>;

        r0[31] = $i31;

        <androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat: int[] AccessibilityActionsResourceIds> = r0;

        return;
    }

