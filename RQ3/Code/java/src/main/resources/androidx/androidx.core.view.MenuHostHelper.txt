androidx.core.view.MenuHostHelper
<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback>
<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>
<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>
    public void <init>(java.lang.Runnable)
    {
        androidx.core.view.MenuHostHelper r0;
        java.lang.Runnable r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        java.util.HashMap $r3;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers> = $r3;

        r0.<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback> = r1;

        return;
    }

    public void onPrepareMenu(android.view.Menu)
    {
        androidx.core.view.MenuHostHelper r0;
        android.view.Menu r1;
        java.util.Iterator r2;
        androidx.core.view.MenuProvider r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: android.view.Menu;

        $r4 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.core.view.MenuProvider) $r5;

        interfaceinvoke r3.<androidx.core.view.MenuProvider: void onPrepareMenu(android.view.Menu)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onCreateMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.core.view.MenuHostHelper r0;
        android.view.Menu r1;
        android.view.MenuInflater r2;
        java.util.Iterator r3;
        androidx.core.view.MenuProvider r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: android.view.Menu;

        r2 := @parameter1: android.view.MenuInflater;

        $r5 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        r3 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.core.view.MenuProvider) $r6;

        interfaceinvoke r4.<androidx.core.view.MenuProvider: void onCreateMenu(android.view.Menu,android.view.MenuInflater)>(r1, r2);

        goto label1;

     label2:
        return;
    }

    public boolean onMenuItemSelected(android.view.MenuItem)
    {
        androidx.core.view.MenuHostHelper r0;
        android.view.MenuItem r1;
        java.util.Iterator r2;
        androidx.core.view.MenuProvider r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: android.view.MenuItem;

        $r4 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.core.view.MenuProvider) $r5;

        $z1 = interfaceinvoke r3.<androidx.core.view.MenuProvider: boolean onMenuItemSelected(android.view.MenuItem)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public void onMenuClosed(android.view.Menu)
    {
        androidx.core.view.MenuHostHelper r0;
        android.view.Menu r1;
        java.util.Iterator r2;
        androidx.core.view.MenuProvider r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: android.view.Menu;

        $r4 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.core.view.MenuProvider) $r5;

        interfaceinvoke r3.<androidx.core.view.MenuProvider: void onMenuClosed(android.view.Menu)>(r1);

        goto label1;

     label2:
        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuProvider r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback>;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuProvider r1;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.lifecycle.Lifecycle r3;
        androidx.core.view.MenuHostHelper$LifecycleContainer r4, $r8;
        androidx.lifecycle.LifecycleEventObserver r5;
        java.util.Map $r6, $r9;
        java.lang.Object $r7;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        virtualinvoke r0.<androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider)>(r1);

        r3 = interfaceinvoke r2.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r6 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (androidx.core.view.MenuHostHelper$LifecycleContainer) $r7;

        if r4 == null goto label1;

        virtualinvoke r4.<androidx.core.view.MenuHostHelper$LifecycleContainer: void clearObservers()>();

     label1:
        r5 = dynamicinvoke "onStateChanged" <androidx.lifecycle.LifecycleEventObserver (androidx.core.view.MenuHostHelper,androidx.core.view.MenuProvider)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event), methodhandle: "REF_INVOKE_SPECIAL" <androidx.core.view.MenuHostHelper: void lambda$addMenuProvider$0(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>, methodtype: void __METHODTYPE__(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event));

        $r9 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r8 = new androidx.core.view.MenuHostHelper$LifecycleContainer;

        specialinvoke $r8.<androidx.core.view.MenuHostHelper$LifecycleContainer: void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver)>(r3, r5);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$State)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuProvider r1;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.lifecycle.Lifecycle$State r3;
        androidx.lifecycle.Lifecycle r4;
        androidx.core.view.MenuHostHelper$LifecycleContainer r5, $r9;
        androidx.lifecycle.LifecycleEventObserver r6;
        java.util.Map $r7, $r10;
        java.lang.Object $r8;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        r3 := @parameter2: androidx.lifecycle.Lifecycle$State;

        r4 = interfaceinvoke r2.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r7 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r5 = (androidx.core.view.MenuHostHelper$LifecycleContainer) $r8;

        if r5 == null goto label1;

        virtualinvoke r5.<androidx.core.view.MenuHostHelper$LifecycleContainer: void clearObservers()>();

     label1:
        r6 = dynamicinvoke "onStateChanged" <androidx.lifecycle.LifecycleEventObserver (androidx.core.view.MenuHostHelper,androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider)>(r0, r3, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event), methodhandle: "REF_INVOKE_SPECIAL" <androidx.core.view.MenuHostHelper: void lambda$addMenuProvider$1(androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>, methodtype: void __METHODTYPE__(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event));

        $r10 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r9 = new androidx.core.view.MenuHostHelper$LifecycleContainer;

        specialinvoke $r9.<androidx.core.view.MenuHostHelper$LifecycleContainer: void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver)>(r4, r6);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        return;
    }

    public void removeMenuProvider(androidx.core.view.MenuProvider)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuProvider r1;
        androidx.core.view.MenuHostHelper$LifecycleContainer r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.Runnable $r6;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        $r3 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (androidx.core.view.MenuHostHelper$LifecycleContainer) $r5;

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.core.view.MenuHostHelper$LifecycleContainer: void clearObservers()>();

     label1:
        $r6 = r0.<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback>;

        interfaceinvoke $r6.<java.lang.Runnable: void run()>();

        return;
    }

    private void lambda$addMenuProvider$1(androidx.lifecycle.Lifecycle$State, androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.lifecycle.Lifecycle$State r1;
        androidx.core.view.MenuProvider r2;
        androidx.lifecycle.LifecycleOwner r3;
        androidx.lifecycle.Lifecycle$Event r4, $r5, $r6, $r7;
        java.util.concurrent.CopyOnWriteArrayList $r8;
        java.lang.Runnable $r9;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: androidx.lifecycle.Lifecycle$State;

        r2 := @parameter1: androidx.core.view.MenuProvider;

        r3 := @parameter2: androidx.lifecycle.LifecycleOwner;

        r4 := @parameter3: androidx.lifecycle.Lifecycle$Event;

        $r5 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State)>(r1);

        if r4 != $r5 goto label1;

        virtualinvoke r0.<androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider)>(r2);

        goto label3;

     label1:
        $r6 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if r4 != $r6 goto label2;

        virtualinvoke r0.<androidx.core.view.MenuHostHelper: void removeMenuProvider(androidx.core.view.MenuProvider)>(r2);

        goto label3;

     label2:
        $r7 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)>(r1);

        if r4 != $r7 goto label3;

        $r8 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        virtualinvoke $r8.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r2);

        $r9 = r0.<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback>;

        interfaceinvoke $r9.<java.lang.Runnable: void run()>();

     label3:
        return;
    }

    private void lambda$addMenuProvider$0(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuProvider r1;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.lifecycle.Lifecycle$Event r3, $r4;

        r0 := @this: androidx.core.view.MenuHostHelper;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        r3 := @parameter2: androidx.lifecycle.Lifecycle$Event;

        $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if r3 != $r4 goto label1;

        virtualinvoke r0.<androidx.core.view.MenuHostHelper: void removeMenuProvider(androidx.core.view.MenuProvider)>(r1);

     label1:
        return;
    }

androidx.core.view.MenuHostHelper$LifecycleContainer
<androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle>
<androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.LifecycleEventObserver mObserver>
    void <init>(androidx.lifecycle.Lifecycle, androidx.lifecycle.LifecycleEventObserver)
    {
        androidx.core.view.MenuHostHelper$LifecycleContainer r0;
        androidx.lifecycle.Lifecycle r1, $r3;
        androidx.lifecycle.LifecycleEventObserver r2;

        r0 := @this: androidx.core.view.MenuHostHelper$LifecycleContainer;

        r1 := @parameter0: androidx.lifecycle.Lifecycle;

        r2 := @parameter1: androidx.lifecycle.LifecycleEventObserver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle> = r1;

        r0.<androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.LifecycleEventObserver mObserver> = r2;

        $r3 = r0.<androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle>;

        virtualinvoke $r3.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r2);

        return;
    }

    void clearObservers()
    {
        androidx.core.view.MenuHostHelper$LifecycleContainer r0;
        androidx.lifecycle.LifecycleEventObserver $r1;
        androidx.lifecycle.Lifecycle $r2;

        r0 := @this: androidx.core.view.MenuHostHelper$LifecycleContainer;

        $r2 = r0.<androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle>;

        $r1 = r0.<androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.LifecycleEventObserver mObserver>;

        virtualinvoke $r2.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r1);

        r0.<androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.LifecycleEventObserver mObserver> = null;

        return;
    }

