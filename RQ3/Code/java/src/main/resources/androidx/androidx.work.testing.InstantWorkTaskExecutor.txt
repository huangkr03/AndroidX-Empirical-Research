androidx.work.testing.InstantWorkTaskExecutor
<androidx.work.testing.InstantWorkTaskExecutor: java.util.concurrent.Executor mSynchronousExecutor>
<androidx.work.testing.InstantWorkTaskExecutor: androidx.work.impl.utils.SerialExecutorImpl mSerialExecutor>
    void <init>()
    {
        androidx.work.testing.InstantWorkTaskExecutor r0;
        java.util.concurrent.Executor $r3, r6;
        androidx.work.impl.utils.SynchronousExecutor r4;
        androidx.work.impl.utils.SerialExecutorImpl r5;

        r0 := @this: androidx.work.testing.InstantWorkTaskExecutor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r4 = new androidx.work.impl.utils.SynchronousExecutor;

        specialinvoke r4.<androidx.work.impl.utils.SynchronousExecutor: void <init>()>();

        r6 = (java.util.concurrent.Executor) r4;

        r0.<androidx.work.testing.InstantWorkTaskExecutor: java.util.concurrent.Executor mSynchronousExecutor> = r6;

        r5 = new androidx.work.impl.utils.SerialExecutorImpl;

        $r3 = r0.<androidx.work.testing.InstantWorkTaskExecutor: java.util.concurrent.Executor mSynchronousExecutor>;

        specialinvoke r5.<androidx.work.impl.utils.SerialExecutorImpl: void <init>(java.util.concurrent.Executor)>($r3);

        r0.<androidx.work.testing.InstantWorkTaskExecutor: androidx.work.impl.utils.SerialExecutorImpl mSerialExecutor> = r5;

        return;
    }

    java.util.concurrent.Executor getSynchronousExecutor()
    {
        androidx.work.testing.InstantWorkTaskExecutor r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.work.testing.InstantWorkTaskExecutor;

        $r1 = r0.<androidx.work.testing.InstantWorkTaskExecutor: java.util.concurrent.Executor mSynchronousExecutor>;

        return $r1;
    }

    public java.util.concurrent.Executor getMainThreadExecutor()
    {
        androidx.work.testing.InstantWorkTaskExecutor r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.work.testing.InstantWorkTaskExecutor;

        $r1 = r0.<androidx.work.testing.InstantWorkTaskExecutor: java.util.concurrent.Executor mSynchronousExecutor>;

        return $r1;
    }

    public androidx.work.impl.utils.taskexecutor.SerialExecutor getSerialTaskExecutor()
    {
        androidx.work.testing.InstantWorkTaskExecutor r0;
        androidx.work.impl.utils.SerialExecutorImpl $r1;
        androidx.work.impl.utils.taskexecutor.SerialExecutor r2;

        r0 := @this: androidx.work.testing.InstantWorkTaskExecutor;

        $r1 = r0.<androidx.work.testing.InstantWorkTaskExecutor: androidx.work.impl.utils.SerialExecutorImpl mSerialExecutor>;

        r2 = (androidx.work.impl.utils.taskexecutor.SerialExecutor) $r1;

        return r2;
    }

