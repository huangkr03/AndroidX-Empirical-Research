androidx.compose.ui.text.android.style.PlaceholderSpan
<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int widthPx>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int heightPx>
<androidx.compose.ui.text.android.style.PlaceholderSpan: boolean isLaidOut>
<androidx.compose.ui.text.android.style.PlaceholderSpan: float width>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int widthUnit>
<androidx.compose.ui.text.android.style.PlaceholderSpan: float height>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int heightUnit>
<androidx.compose.ui.text.android.style.PlaceholderSpan: float pxPerSp>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int verticalAlign>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int ALIGN_ABOVE_BASELINE>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int ALIGN_TOP>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int ALIGN_BOTTOM>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int ALIGN_CENTER>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int ALIGN_TEXT_TOP>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int ALIGN_TEXT_BOTTOM>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int ALIGN_TEXT_CENTER>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int UNIT_SP>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int UNIT_EM>
<androidx.compose.ui.text.android.style.PlaceholderSpan: int UNIT_INHERIT>
<androidx.compose.ui.text.android.style.PlaceholderSpan: androidx.compose.ui.text.android.style.PlaceholderSpan$Companion Companion>
    public final android.graphics.Paint$FontMetricsInt getFontMetrics()
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan r0;
        android.graphics.Paint$FontMetricsInt $r1;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan;

        $r1 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>;

        if $r1 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("fontMetrics");

     label1:
        return $r1;
    }

    public final int getWidthPx()
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan r0;
        boolean z0, z1, z3;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan;

        z0 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: boolean isLaidOut>;

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        r4 = "PlaceholderSpan is not laid out yet.";

        $r1 = new java.lang.IllegalStateException;

        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label1:
        $i0 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int widthPx>;

        return $i0;
    }

    public final int getHeightPx()
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan r0;
        boolean z0, z1, z3;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan;

        z0 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: boolean isLaidOut>;

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        r4 = "PlaceholderSpan is not laid out yet.";

        $r1 = new java.lang.IllegalStateException;

        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label1:
        $i0 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int heightPx>;

        return $i0;
    }

    public int getSize(android.graphics.Paint, java.lang.CharSequence, int, int, android.graphics.Paint$FontMetricsInt)
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan r0;
        android.graphics.Paint r1;
        java.lang.CharSequence r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, i49, i50, i51, i52;
        android.graphics.Paint$FontMetricsInt r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, r29, $r31;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.IllegalArgumentException $r13, $r20, $r23, $r25;
        java.lang.Throwable $r14, $r21, $r24, $r27;
        java.lang.String $r26, r28;
        boolean $z1, z2, z3, z4, z6, z7, z8, z9;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan;

        r1 := @parameter0: android.graphics.Paint;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.graphics.Paint$FontMetricsInt;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: boolean isLaidOut> = 1;

        f0 = virtualinvoke r1.<android.graphics.Paint: float getTextSize()>();

        $r4 = virtualinvoke r1.<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "paint.fontMetricsInt");

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics> = $r4;

        $r5 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>;

        if $r5 != null goto label01;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("fontMetrics");

     label01:
        $i3 = $r5.<android.graphics.Paint$FontMetricsInt: int descent>;

        $r6 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>;

        if $r6 != null goto label02;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("fontMetrics");

     label02:
        $i2 = $r6.<android.graphics.Paint$FontMetricsInt: int ascent>;

        if $i3 <= $i2 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        z2 = $z1;

        z3 = 0;

        z4 = 0;

        if z2 != 0 goto label05;

        r28 = "Invalid fontMetrics: line height can not be negative.";

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = virtualinvoke r28.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        $r27 = (java.lang.Throwable) $r25;

        throw $r27;

     label05:
        $i4 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int widthUnit>;

        tableswitch($i4)
        {
            case 0: goto label06;
            case 1: goto label07;
            default: goto label08;
        };

     label06:
        $f8 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float width>;

        $f7 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float pxPerSp>;

        $f9 = $f8 * $f7;

        goto label09;

     label07:
        $f1 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float width>;

        $f9 = $f1 * f0;

        goto label09;

     label08:
        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported unit.");

        $r24 = (java.lang.Throwable) $r23;

        throw $r24;

     label09:
        $i5 = staticinvoke <androidx.compose.ui.text.android.style.PlaceholderSpanKt: int ceilToInt(float)>($f9);

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int widthPx> = $i5;

        $i6 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int heightUnit>;

        tableswitch($i6)
        {
            case 0: goto label10;
            case 1: goto label11;
            default: goto label12;
        };

     label10:
        $f5 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float height>;

        $f4 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float pxPerSp>;

        $f6 = $f5 * $f4;

        $i48 = staticinvoke <androidx.compose.ui.text.android.style.PlaceholderSpanKt: int ceilToInt(float)>($f6);

        goto label13;

     label11:
        $f2 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float height>;

        $f3 = $f2 * f0;

        $i48 = staticinvoke <androidx.compose.ui.text.android.style.PlaceholderSpanKt: int ceilToInt(float)>($f3);

        goto label13;

     label12:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported unit.");

        $r21 = (java.lang.Throwable) $r20;

        throw $r21;

     label13:
        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int heightPx> = $i48;

        if r3 == null goto label25;

        r29 = r3;

        z6 = 0;

        z7 = 0;

        $r7 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>;

        if $r7 != null goto label14;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("fontMetrics");

     label14:
        $i8 = $r7.<android.graphics.Paint$FontMetricsInt: int ascent>;

        r29.<android.graphics.Paint$FontMetricsInt: int ascent> = $i8;

        $r8 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>;

        if $r8 != null goto label15;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("fontMetrics");

     label15:
        $i9 = $r8.<android.graphics.Paint$FontMetricsInt: int descent>;

        r29.<android.graphics.Paint$FontMetricsInt: int descent> = $i9;

        $r9 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>;

        if $r9 != null goto label16;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("fontMetrics");

     label16:
        $i10 = $r9.<android.graphics.Paint$FontMetricsInt: int leading>;

        r29.<android.graphics.Paint$FontMetricsInt: int leading> = $i10;

        $i11 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int verticalAlign>;

        tableswitch($i11)
        {
            case 0: goto label20;
            case 1: goto label17;
            case 2: goto label18;
            case 3: goto label19;
            case 4: goto label17;
            case 5: goto label18;
            case 6: goto label19;
            default: goto label21;
        };

     label17:
        $i36 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i37 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i39 = $i36 + $i37;

        $i38 = r29.<android.graphics.Paint$FontMetricsInt: int descent>;

        if $i39 <= $i38 goto label22;

        $i40 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i41 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i42 = $i40 + $i41;

        r29.<android.graphics.Paint$FontMetricsInt: int descent> = $i42;

        goto label22;

     label18:
        $i29 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i30 = r29.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i31 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i32 = $i30 - $i31;

        if $i29 <= $i32 goto label22;

        $i33 = r29.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i34 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i35 = $i33 - $i34;

        r29.<android.graphics.Paint$FontMetricsInt: int ascent> = $i35;

        goto label22;

     label19:
        $i13 = r29.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i12 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i14 = $i13 - $i12;

        $i15 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        if $i14 >= $i15 goto label22;

        $i18 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i19 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i21 = r29.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i20 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i22 = $i21 - $i20;

        $i23 = $i19 - $i22;

        $i24 = $i23 / 2;

        $i25 = $i18 - $i24;

        r29.<android.graphics.Paint$FontMetricsInt: int ascent> = $i25;

        $i26 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i27 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i28 = $i26 + $i27;

        r29.<android.graphics.Paint$FontMetricsInt: int descent> = $i28;

        goto label22;

     label20:
        $i43 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i44 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i45 = neg $i44;

        if $i43 <= $i45 goto label22;

        $i46 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i47 = neg $i46;

        r29.<android.graphics.Paint$FontMetricsInt: int ascent> = $i47;

        goto label22;

     label21:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown verticalAlign.");

        $r14 = (java.lang.Throwable) $r13;

        throw $r14;

     label22:
        $r31 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>;

        if $r31 != null goto label23;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("fontMetrics");

     label23:
        i49 = $r31.<android.graphics.Paint$FontMetricsInt: int top>;

        i50 = r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        z8 = 0;

        $i16 = staticinvoke <java.lang.Math: int min(int,int)>(i49, i50);

        r29.<android.graphics.Paint$FontMetricsInt: int top> = $i16;

        $r10 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt fontMetrics>;

        if $r10 != null goto label24;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("fontMetrics");

     label24:
        i51 = $r10.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i52 = r29.<android.graphics.Paint$FontMetricsInt: int descent>;

        z9 = 0;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(i51, i52);

        r29.<android.graphics.Paint$FontMetricsInt: int bottom> = $i17;

        goto label25;

     label25:
        $i7 = virtualinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getWidthPx()>();

        return $i7;
    }

    public void draw(android.graphics.Canvas, java.lang.CharSequence, int, int, float, int, int, int, android.graphics.Paint)
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan r0;
        android.graphics.Canvas r1;
        java.lang.CharSequence r2;
        int i0, i1, i2, i3, i4;
        float f0;
        android.graphics.Paint r3;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        f0 := @parameter4: float;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        return;
    }

    public final int getVerticalAlign()
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan;

        $i0 = r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int verticalAlign>;

        return $i0;
    }

    public void <init>(float, int, float, int, float, int)
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan r0;
        float f0, f1, f2;
        int i0, i1, i2;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        f1 := @parameter2: float;

        i1 := @parameter3: int;

        f2 := @parameter4: float;

        i2 := @parameter5: int;

        specialinvoke r0.<android.text.style.ReplacementSpan: void <init>()>();

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float width> = f0;

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int widthUnit> = i0;

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float height> = f1;

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int heightUnit> = i1;

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: float pxPerSp> = f2;

        r0.<androidx.compose.ui.text.android.style.PlaceholderSpan: int verticalAlign> = i2;

        return;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan$Companion $r0;

        $r0 = new androidx.compose.ui.text.android.style.PlaceholderSpan$Companion;

        specialinvoke $r0.<androidx.compose.ui.text.android.style.PlaceholderSpan$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.text.android.style.PlaceholderSpan: androidx.compose.ui.text.android.style.PlaceholderSpan$Companion Companion> = $r0;

        return;
    }

androidx.compose.ui.text.android.style.PlaceholderSpan$Companion$Unit
androidx.compose.ui.text.android.style.PlaceholderSpan$Companion$VerticalAlign
androidx.compose.ui.text.android.style.PlaceholderSpan$Companion
    private void <init>()
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan$Companion r0;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.android.style.PlaceholderSpan$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.text.android.style.PlaceholderSpan$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.text.android.style.PlaceholderSpan$Companion: void <init>()>();

        return;
    }

