androidx.constraintlayout.compose.EditableJSONLayout
<androidx.constraintlayout.compose.EditableJSONLayout: int forcedWidth>
<androidx.constraintlayout.compose.EditableJSONLayout: int forcedHeight>
<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.MotionLayoutDebugFlags forcedDrawDebug>
<androidx.constraintlayout.compose.EditableJSONLayout: androidx.compose.runtime.MutableState updateFlag>
<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.LayoutInfoFlags layoutInformationMode>
<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String layoutInformation>
<androidx.constraintlayout.compose.EditableJSONLayout: long last>
<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String debugName>
<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String currentContent>
    public void <init>(java.lang.String)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        java.lang.String r1;
        androidx.constraintlayout.compose.MotionLayoutDebugFlags $r2;
        androidx.constraintlayout.compose.LayoutInfoFlags $r3;
        long $l0;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: int forcedWidth> = -2147483648;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: int forcedHeight> = -2147483648;

        $r2 = <androidx.constraintlayout.compose.MotionLayoutDebugFlags: androidx.constraintlayout.compose.MotionLayoutDebugFlags UNKNOWN>;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.MotionLayoutDebugFlags forcedDrawDebug> = $r2;

        $r3 = <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags NONE>;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.LayoutInfoFlags layoutInformationMode> = $r3;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String layoutInformation> = "";

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: long last> = $l0;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String currentContent> = r1;

        return;
    }

    protected final void initialization()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        androidx.constraintlayout.core.state.Registry r1;
        java.lang.String $r2, $r3, $r6;
        androidx.constraintlayout.compose.EditableJSONLayout$initialization$callback$1 $r4, r8;
        androidx.constraintlayout.core.state.RegistryCallback $r5;
        java.lang.Throwable $r7, r9;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

     label1:
        $r2 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String currentContent>;

        virtualinvoke r0.<androidx.constraintlayout.compose.EditableJSONLayout: void onNewContent(java.lang.String)>($r2);

        $r3 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String debugName>;

        if $r3 == null goto label4;

        $r4 = new androidx.constraintlayout.compose.EditableJSONLayout$initialization$callback$1;

        specialinvoke $r4.<androidx.constraintlayout.compose.EditableJSONLayout$initialization$callback$1: void <init>(androidx.constraintlayout.compose.EditableJSONLayout)>(r0);

        r8 = $r4;

        r1 = staticinvoke <androidx.constraintlayout.core.state.Registry: androidx.constraintlayout.core.state.Registry getInstance()>();

        $r6 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String debugName>;

        $r5 = (androidx.constraintlayout.core.state.RegistryCallback) r8;

        virtualinvoke r1.<androidx.constraintlayout.core.state.Registry: void register(java.lang.String,androidx.constraintlayout.core.state.RegistryCallback)>($r6, $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r9 = $r7;

     label4:
        return;

        catch androidx.constraintlayout.core.parser.CLParsingException from label1 to label2 with label3;
    }

    public final void setUpdateFlag(androidx.compose.runtime.MutableState)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        androidx.compose.runtime.MutableState r1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        r1 := @parameter0: androidx.compose.runtime.MutableState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "needsUpdate");

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.compose.runtime.MutableState updateFlag> = r1;

        return;
    }

    protected final void signalUpdate()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        androidx.compose.runtime.MutableState $r1, r5, r6;
        java.lang.Object $r2;
        java.lang.Number $r3;
        long $l0, $l1;
        java.lang.Long $r4;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        $r1 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.compose.runtime.MutableState updateFlag>;

        if $r1 == null goto label1;

        r5 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.compose.runtime.MutableState updateFlag>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r5);

        r6 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.compose.runtime.MutableState updateFlag>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r6);

        $r2 = interfaceinvoke r6.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r3 = (java.lang.Number) $r2;

        $l0 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        $l1 = $l0 + 1L;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r5.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>($r4);

     label1:
        return;
    }

    public final void setCurrentContent(java.lang.String)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        java.lang.String r1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        virtualinvoke r0.<androidx.constraintlayout.compose.EditableJSONLayout: void onNewContent(java.lang.String)>(r1);

        return;
    }

    public final java.lang.String getCurrentContent()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        java.lang.String $r1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        $r1 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String currentContent>;

        return $r1;
    }

    public final void setDebugName(java.lang.String)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        java.lang.String r1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String debugName> = r1;

        return;
    }

    public final java.lang.String getDebugName()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        java.lang.String $r1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        $r1 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String debugName>;

        return $r1;
    }

    public final androidx.constraintlayout.compose.MotionLayoutDebugFlags getForcedDrawDebug()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        androidx.constraintlayout.compose.MotionLayoutDebugFlags $r1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        $r1 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.MotionLayoutDebugFlags forcedDrawDebug>;

        return $r1;
    }

    public int getForcedWidth()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        $i0 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: int forcedWidth>;

        return $i0;
    }

    public int getForcedHeight()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        $i0 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: int forcedHeight>;

        return $i0;
    }

    public void setLayoutInformation(java.lang.String)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "information");

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: long last> = $l0;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String layoutInformation> = r1;

        return;
    }

    public final java.lang.String getLayoutInformation()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        java.lang.String $r1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        $r1 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String layoutInformation>;

        return $r1;
    }

    public androidx.constraintlayout.compose.LayoutInfoFlags getLayoutInformationMode()
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        androidx.constraintlayout.compose.LayoutInfoFlags $r1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        $r1 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.LayoutInfoFlags layoutInformationMode>;

        return $r1;
    }

    protected void onNewContent(java.lang.String)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        java.lang.String r1, $r3, $r4, $r5;
        boolean z0, $z1;
        androidx.constraintlayout.core.parser.CLObject r2, r8;
        java.lang.Throwable $r6, $r7, r9, r10;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String currentContent> = r1;

     label1:
        $r3 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String currentContent>;

        r8 = staticinvoke <androidx.constraintlayout.core.parser.CLParser: androidx.constraintlayout.core.parser.CLObject parse(java.lang.String)>($r3);

        if r8 == null goto label8;

        $r4 = r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String debugName>;

        if $r4 != null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if z0 == 0 goto label4;

        r2 = virtualinvoke r8.<androidx.constraintlayout.core.parser.CLObject: androidx.constraintlayout.core.parser.CLObject getObjectOrNull(java.lang.String)>("Header");

        if r2 == null goto label4;

        $r5 = virtualinvoke r2.<androidx.constraintlayout.core.parser.CLObject: java.lang.String getStringOrNull(java.lang.String)>("exportAs");

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String debugName> = $r5;

     label4:
        if z0 != 0 goto label8;

        virtualinvoke r0.<androidx.constraintlayout.compose.EditableJSONLayout: void signalUpdate()>();

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        r9 = $r7;

        goto label8;

     label7:
        $r6 := @caughtexception;

        r10 = $r6;

     label8:
        return;

        catch androidx.constraintlayout.core.parser.CLParsingException from label1 to label5 with label6;
        catch java.lang.Exception from label1 to label5 with label7;
    }

    protected void onNewProgress(float)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        float f0;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        f0 := @parameter0: float;

        return;
    }

    public final void onNewDimensions(int, int)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        int i0, i1;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: int forcedWidth> = i0;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: int forcedHeight> = i1;

        virtualinvoke r0.<androidx.constraintlayout.compose.EditableJSONLayout: void signalUpdate()>();

        return;
    }

    protected final void onLayoutInformation(int)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        int i0, i1, $i2, $i3;
        androidx.constraintlayout.compose.LayoutInfoFlags $r1, $r2, $r3, $r4;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        i0 := @parameter0: int;

        i1 = i0;

        $r1 = <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags NONE>;

        $i2 = virtualinvoke $r1.<androidx.constraintlayout.compose.LayoutInfoFlags: int ordinal()>();

        if i1 != $i2 goto label1;

        $r4 = <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags NONE>;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.LayoutInfoFlags layoutInformationMode> = $r4;

        goto label2;

     label1:
        $r2 = <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags BOUNDS>;

        $i3 = virtualinvoke $r2.<androidx.constraintlayout.compose.LayoutInfoFlags: int ordinal()>();

        if i1 != $i3 goto label2;

        $r3 = <androidx.constraintlayout.compose.LayoutInfoFlags: androidx.constraintlayout.compose.LayoutInfoFlags BOUNDS>;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.LayoutInfoFlags layoutInformationMode> = $r3;

     label2:
        virtualinvoke r0.<androidx.constraintlayout.compose.EditableJSONLayout: void signalUpdate()>();

        return;
    }

    protected final void onDrawDebug(int)
    {
        androidx.constraintlayout.compose.EditableJSONLayout r0;
        int i0, i1, $i2, $i3, $i4;
        androidx.constraintlayout.compose.MotionLayoutDebugFlags $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: androidx.constraintlayout.compose.EditableJSONLayout;

        i0 := @parameter0: int;

        i1 = i0;

        if i1 != -1 goto label1;

        $r7 = <androidx.constraintlayout.compose.MotionLayoutDebugFlags: androidx.constraintlayout.compose.MotionLayoutDebugFlags UNKNOWN>;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.MotionLayoutDebugFlags forcedDrawDebug> = $r7;

        goto label4;

     label1:
        $r1 = <androidx.constraintlayout.compose.MotionLayoutDebugFlags: androidx.constraintlayout.compose.MotionLayoutDebugFlags UNKNOWN>;

        $i2 = virtualinvoke $r1.<androidx.constraintlayout.compose.MotionLayoutDebugFlags: int ordinal()>();

        if i1 != $i2 goto label2;

        $r6 = <androidx.constraintlayout.compose.MotionLayoutDebugFlags: androidx.constraintlayout.compose.MotionLayoutDebugFlags UNKNOWN>;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.MotionLayoutDebugFlags forcedDrawDebug> = $r6;

        goto label4;

     label2:
        $r2 = <androidx.constraintlayout.compose.MotionLayoutDebugFlags: androidx.constraintlayout.compose.MotionLayoutDebugFlags NONE>;

        $i3 = virtualinvoke $r2.<androidx.constraintlayout.compose.MotionLayoutDebugFlags: int ordinal()>();

        if i1 != $i3 goto label3;

        $r5 = <androidx.constraintlayout.compose.MotionLayoutDebugFlags: androidx.constraintlayout.compose.MotionLayoutDebugFlags NONE>;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.MotionLayoutDebugFlags forcedDrawDebug> = $r5;

        goto label4;

     label3:
        $r3 = <androidx.constraintlayout.compose.MotionLayoutDebugFlags: androidx.constraintlayout.compose.MotionLayoutDebugFlags SHOW_ALL>;

        $i4 = virtualinvoke $r3.<androidx.constraintlayout.compose.MotionLayoutDebugFlags: int ordinal()>();

        if i1 != $i4 goto label4;

        $r4 = <androidx.constraintlayout.compose.MotionLayoutDebugFlags: androidx.constraintlayout.compose.MotionLayoutDebugFlags SHOW_ALL>;

        r0.<androidx.constraintlayout.compose.EditableJSONLayout: androidx.constraintlayout.compose.MotionLayoutDebugFlags forcedDrawDebug> = $r4;

     label4:
        virtualinvoke r0.<androidx.constraintlayout.compose.EditableJSONLayout: void signalUpdate()>();

        return;
    }

    public static final java.lang.String access$getCurrentContent$p(androidx.constraintlayout.compose.EditableJSONLayout)
    {
        androidx.constraintlayout.compose.EditableJSONLayout $r0;
        java.lang.String $r1;

        $r0 := @parameter0: androidx.constraintlayout.compose.EditableJSONLayout;

        $r1 = $r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String currentContent>;

        return $r1;
    }

    public static final java.lang.String access$getLayoutInformation$p(androidx.constraintlayout.compose.EditableJSONLayout)
    {
        androidx.constraintlayout.compose.EditableJSONLayout $r0;
        java.lang.String $r1;

        $r0 := @parameter0: androidx.constraintlayout.compose.EditableJSONLayout;

        $r1 = $r0.<androidx.constraintlayout.compose.EditableJSONLayout: java.lang.String layoutInformation>;

        return $r1;
    }

    public static final long access$getLast$p(androidx.constraintlayout.compose.EditableJSONLayout)
    {
        androidx.constraintlayout.compose.EditableJSONLayout $r0;
        long $l0;

        $r0 := @parameter0: androidx.constraintlayout.compose.EditableJSONLayout;

        $l0 = $r0.<androidx.constraintlayout.compose.EditableJSONLayout: long last>;

        return $l0;
    }

