androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.String TAG>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>
    void <init>(android.view.Surface)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        android.view.Surface r1;
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21;

        specialinvoke $r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: void <init>(android.view.Surface)>(r1);

        r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject> = $r2;

        return;
    }

    void <init>(java.lang.Object)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        java.lang.Object r1;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject> = r1;

        return;
    }

    public void enableSurfaceSharing()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        java.lang.Object $r1;
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        $r1 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $r2 = (androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21) $r1;

        $r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: boolean mIsShared> = 1;

        return;
    }

    boolean isSurfaceSharingEnabled()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        java.lang.Object $r1;
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 $r2;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        $r1 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $r2 = (androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21) $r1;

        $z0 = $r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: boolean mIsShared>;

        return $z0;
    }

    public void setPhysicalCameraId(java.lang.String)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        java.lang.String r1;
        java.lang.Object $r2;
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 $r3;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $r3 = (androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21) $r2;

        $r3.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String mPhysicalCameraId> = r1;

        return;
    }

    public java.lang.String getPhysicalCameraId()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        java.lang.Object $r1;
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 $r2;
        java.lang.String $r3;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        $r1 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $r2 = (androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21) $r1;

        $r3 = $r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String mPhysicalCameraId>;

        return $r3;
    }

    public void setStreamUseCase(long)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        long l0;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        l0 := @parameter0: long;

        return;
    }

    public long getStreamUseCase()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        return -1L;
    }

    public void addSurface(android.view.Surface)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        android.view.Surface r1, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.IllegalStateException $r5, $r6;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        r1 := @parameter0: android.view.Surface;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Surface must not be null");

        $r3 = virtualinvoke r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: android.view.Surface getSurface()>();

        if $r3 != r1 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Surface is already added!");

        throw $r6;

     label1:
        $z0 = virtualinvoke r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: boolean isSurfaceSharingEnabled()>();

        if $z0 != 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot have 2 surfaces for a non-sharing configuration");

        throw $r5;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exceeds maximum number of surfaces");

        throw $r4;
    }

    public void removeSurface(android.view.Surface)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        android.view.Surface r1, $r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        r1 := @parameter0: android.view.Surface;

        $r2 = virtualinvoke r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: android.view.Surface getSurface()>();

        if $r2 != r1 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot remove surface associated with this output configuration");

        throw $r4;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Surface is not part of this output configuration");

        throw $r3;
    }

    public int getMaxSharedSurfaceCount()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        return 1;
    }

    public android.view.Surface getSurface()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        java.util.List r1;
        java.lang.Object $r2, $r4;
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 $r3;
        int $i0;
        android.view.Surface $r5;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        $r2 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $r3 = (androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21) $r2;

        r1 = $r3.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces>;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.view.Surface) $r4;

        return $r5;
    }

    public java.util.List getSurfaces()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        java.lang.Object $r1;
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 $r2;
        java.util.List $r3;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        $r1 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $r2 = (androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21) $r1;

        $r3 = $r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces>;

        return $r3;
    }

    public int getSurfaceGroupId()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        return -1;
    }

    public java.lang.Object getOutputConfiguration()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        return null;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0, $r2;
        java.lang.Object r1, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $r2 = (androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl) r1;

        $r3 = $r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $z1;
    }

    public int hashCode()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl;

        $r1 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl: java.lang.Object mObject>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int MAX_SURFACES_COUNT>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String LEGACY_CAMERA_DEVICE_CLASS>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String GET_SURFACE_SIZE_METHOD>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String DETECT_SURFACE_TYPE_METHOD>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String GET_GENERATION_ID_METHOD>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: android.util.Size mConfiguredSize>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredFormat>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredGenerationId>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String mPhysicalCameraId>
<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: boolean mIsShared>
    void <init>(android.view.Surface)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 r0;
        android.view.Surface r1;
        java.util.List $r3;
        android.util.Size $r4;
        int $i0, $i1;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: boolean mIsShared> = 0;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Surface must not be null");

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces> = $r3;

        $r4 = staticinvoke <androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: android.util.Size getSurfaceSize(android.view.Surface)>(r1);

        r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: android.util.Size mConfiguredSize> = $r4;

        $i0 = staticinvoke <androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int getSurfaceFormat(android.view.Surface)>(r1);

        r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredFormat> = $i0;

        $i1 = staticinvoke <androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int getSurfaceGenerationId(android.view.Surface)>(r1);

        r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredGenerationId> = $i1;

        return;
    }

    private static android.util.Size getSurfaceSize(android.view.Surface)
    {
        android.view.Surface r0;
        java.lang.reflect.Method r1;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        android.util.Size $r5;
        java.lang.Throwable $r6, r8;
        java.lang.Class r7;

        r0 := @parameter0: android.view.Surface;

     label1:
        r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.hardware.camera2.legacy.LegacyCameraDevice");

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Landroid/view/Surface;";

        r1 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getSurfaceSize", $r2);

        virtualinvoke r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

        $r5 = (android.util.Size) $r4;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("OutputConfigCompat", "Unable to retrieve surface size.", r8);

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private static int getSurfaceFormat(android.view.Surface)
    {
        android.view.Surface r0;
        java.lang.reflect.Method r1;
        java.lang.Class[] $r2;
        int $i0, $i1;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        java.lang.Throwable $r6, r8;
        java.lang.Class r7;

        r0 := @parameter0: android.view.Surface;

     label1:
        r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.hardware.camera2.legacy.LegacyCameraDevice");

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Landroid/view/Surface;";

        r1 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("detectSurfaceType", $r2);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 22 goto label2;

        virtualinvoke r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label3:
        return $i1;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("OutputConfigCompat", "Unable to retrieve surface format.", r8);

        return 0;

        catch java.lang.ClassNotFoundException from label1 to label3 with label4;
        catch java.lang.NoSuchMethodException from label1 to label3 with label4;
        catch java.lang.IllegalAccessException from label1 to label3 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label3 with label4;
    }

    private static int getSurfaceGenerationId(android.view.Surface)
    {
        android.view.Surface r0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        int $i0;
        java.lang.Throwable $r6, r8;
        java.lang.reflect.Method r7;

        r0 := @parameter0: android.view.Surface;

     label1:
        $r2 = class "Landroid/view/Surface;";

        $r1 = newarray (java.lang.Class)[0];

        r7 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getGenerationId", $r1);

        $r3 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r3);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("OutputConfigCompat", "Unable to retrieve surface generation id.", r8);

        return -1;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 r0, r2;
        java.lang.Object r1, $r10, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.util.Size $r3, $r4;
        java.lang.String $r5, $r6;
        java.util.List $r7, $r8, $r9, $r11;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21) r1;

        $r4 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: android.util.Size mConfiguredSize>;

        $r3 = r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: android.util.Size mConfiguredSize>;

        $z1 = virtualinvoke $r4.<android.util.Size: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $i2 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredFormat>;

        $i1 = r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredFormat>;

        if $i2 != $i1 goto label2;

        $i4 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredGenerationId>;

        $i3 = r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredGenerationId>;

        if $i4 != $i3 goto label2;

        $z3 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: boolean mIsShared>;

        $z2 = r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: boolean mIsShared>;

        if $z3 != $z2 goto label2;

        $r6 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String mPhysicalCameraId>;

        $r5 = r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String mPhysicalCameraId>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z4 != 0 goto label3;

     label2:
        return 0;

     label3:
        $r7 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces>;

        $i5 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces>;

        $i6 = interfaceinvoke $r8.<java.util.List: int size()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        i7 = 0;

     label4:
        if i7 >= i0 goto label6;

        $r9 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i7);

        $r11 = r2.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i7);

        if $r10 == $r12 goto label5;

        return 0;

     label5:
        i7 = i7 + 1;

        goto label4;

     label6:
        return 1;
    }

    public int hashCode()
    {
        androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i17, i18, i19, i20, i22, $i23, i24;
        java.util.List $r1;
        android.util.Size $r2;
        boolean $z0;
        java.lang.String $r3, $r4;
        byte b16, $b21;

        r0 := @this: androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21;

        b16 = 1;

        $i0 = b16 << 5;

        $i1 = $i0 - b16;

        $r1 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.util.List mSurfaces>;

        $i2 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        i17 = $i1 ^ $i2;

        $i3 = i17 << 5;

        $i5 = $i3 - i17;

        $i4 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredGenerationId>;

        i18 = $i5 ^ $i4;

        $i6 = i18 << 5;

        $i7 = $i6 - i18;

        $r2 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: android.util.Size mConfiguredSize>;

        $i8 = virtualinvoke $r2.<android.util.Size: int hashCode()>();

        i19 = $i7 ^ $i8;

        $i9 = i19 << 5;

        $i11 = $i9 - i19;

        $i10 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: int mConfiguredFormat>;

        i20 = $i11 ^ $i10;

        $i12 = i20 << 5;

        $i13 = $i12 - i20;

        $z0 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: boolean mIsShared>;

        if $z0 == 0 goto label1;

        $b21 = 1;

        goto label2;

     label1:
        $b21 = 0;

     label2:
        i22 = $i13 ^ $b21;

        $i14 = i22 << 5;

        $i15 = $i14 - i22;

        $r3 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String mPhysicalCameraId>;

        if $r3 != null goto label3;

        $i23 = 0;

        goto label4;

     label3:
        $r4 = r0.<androidx.camera.camera2.internal.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21: java.lang.String mPhysicalCameraId>;

        $i23 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

     label4:
        i24 = $i15 ^ $i23;

        return i24;
    }

