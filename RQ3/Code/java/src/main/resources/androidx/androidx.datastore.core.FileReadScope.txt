androidx.datastore.core.FileReadScope
<androidx.datastore.core.FileReadScope: java.io.File file>
<androidx.datastore.core.FileReadScope: androidx.datastore.core.Serializer serializer>
<androidx.datastore.core.FileReadScope: java.util.concurrent.atomic.AtomicBoolean closed>
    public void <init>(java.io.File, androidx.datastore.core.Serializer)
    {
        androidx.datastore.core.FileReadScope r0;
        java.io.File r1;
        androidx.datastore.core.Serializer r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;

        r0 := @this: androidx.datastore.core.FileReadScope;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: androidx.datastore.core.Serializer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "file");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "serializer");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.core.FileReadScope: java.io.File file> = r1;

        r0.<androidx.datastore.core.FileReadScope: androidx.datastore.core.Serializer serializer> = r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<androidx.datastore.core.FileReadScope: java.util.concurrent.atomic.AtomicBoolean closed> = $r3;

        return;
    }

    protected final java.io.File getFile()
    {
        androidx.datastore.core.FileReadScope r0;
        java.io.File $r1;

        r0 := @this: androidx.datastore.core.FileReadScope;

        $r1 = r0.<androidx.datastore.core.FileReadScope: java.io.File file>;

        return $r1;
    }

    protected final androidx.datastore.core.Serializer getSerializer()
    {
        androidx.datastore.core.FileReadScope r0;
        androidx.datastore.core.Serializer $r1;

        r0 := @this: androidx.datastore.core.FileReadScope;

        $r1 = r0.<androidx.datastore.core.FileReadScope: androidx.datastore.core.Serializer serializer>;

        return $r1;
    }

    public java.lang.Object readData(kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.FileReadScope r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.datastore.core.FileReadScope;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <androidx.datastore.core.FileReadScope: java.lang.Object readData$suspendImpl(androidx.datastore.core.FileReadScope,kotlin.coroutines.Continuation)>(r0, $r1);

        return $r2;
    }

    static java.lang.Object readData$suspendImpl(androidx.datastore.core.FileReadScope, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r45, r46;
        java.lang.Object $r1, r2, $r4, $r5, $r6, $r15, $r28, r29, r33, $r36, r37;
        boolean $z0, $z1;
        java.io.File $r8, $r13, $r17;
        androidx.datastore.core.Serializer $r9, $r14, $r18;
        java.io.InputStream $r10, $r19;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable $r12, $r20, $r21, $r22, $r23, r30, r31, r32, r38, r40;
        androidx.datastore.core.FileReadScope $r24;
        androidx.datastore.core.FileReadScope$readData$1 $r25, r41;
        java.io.Closeable r26, r34;
        java.io.FileInputStream r27, r35, r42, r43;
        java.lang.IllegalStateException r44;

        $r24 := @parameter0: androidx.datastore.core.FileReadScope;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.datastore.core.FileReadScope$readData$1;

        if $z0 == 0 goto label01;

        $r25 = (androidx.datastore.core.FileReadScope$readData$1) r0;

        $i0 = $r25.<androidx.datastore.core.FileReadScope$readData$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r25.<androidx.datastore.core.FileReadScope$readData$1: int label>;

        $i3 = $i2 - -2147483648;

        $r25.<androidx.datastore.core.FileReadScope$readData$1: int label> = $i3;

        goto label02;

     label01:
        r41 = new androidx.datastore.core.FileReadScope$readData$1;

        specialinvoke r41.<androidx.datastore.core.FileReadScope$readData$1: void <init>(androidx.datastore.core.FileReadScope,kotlin.coroutines.Continuation)>($r24, r0);

        $r25 = r41;

     label02:
        $r1 = $r25.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object result>;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r25.<androidx.datastore.core.FileReadScope$readData$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label07;
            case 2: goto label19;
            default: goto label29;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        virtualinvoke $r24.<androidx.datastore.core.FileReadScope: void checkNotClosed()>();

     label04:
        r42 = new java.io.FileInputStream;

        $r8 = $r24.<androidx.datastore.core.FileReadScope: java.io.File file>;

        specialinvoke r42.<java.io.FileInputStream: void <init>(java.io.File)>($r8);

        r26 = (java.io.Closeable) r42;

     label05:
        r27 = (java.io.FileInputStream) r26;

        $r9 = $r24.<androidx.datastore.core.FileReadScope: androidx.datastore.core.Serializer serializer>;

        $r10 = (java.io.InputStream) r27;

        $r25.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$0> = $r24;

        $r25.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$1> = r26;

        $r25.<androidx.datastore.core.FileReadScope$readData$1: int label> = 1;

        r45 = (kotlin.coroutines.Continuation) $r25;

        $r28 = interfaceinvoke $r9.<androidx.datastore.core.Serializer: java.lang.Object readFrom(java.io.InputStream,kotlin.coroutines.Continuation)>($r10, r45);

     label06:
        if $r28 != r2 goto label09;

        return r2;

     label07:
        $r5 = $r25.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$1>;

        r26 = (java.io.Closeable) $r5;

        $r6 = $r25.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$0>;

        $r24 = (androidx.datastore.core.FileReadScope) $r6;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r28 = $r1;

     label09:
        r29 = $r28;

     label10:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r26, null);

        goto label14;

     label11:
        $r22 := @caughtexception;

        r30 = $r22;

        r31 = r30;

        throw r30;

     label12:
        $r21 := @caughtexception;

        r32 = $r21;

     label13:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r26, r31);

        throw r32;

     label14:
        r33 = r29;

     label15:
        goto label28;

     label16:
        $r12 := @caughtexception;

        $r13 = $r24.<androidx.datastore.core.FileReadScope: java.io.File file>;

        $z1 = virtualinvoke $r13.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label27;

        r43 = new java.io.FileInputStream;

        $r17 = $r24.<androidx.datastore.core.FileReadScope: java.io.File file>;

        specialinvoke r43.<java.io.FileInputStream: void <init>(java.io.File)>($r17);

        r34 = (java.io.Closeable) r43;

     label17:
        r35 = (java.io.FileInputStream) r34;

        $r18 = $r24.<androidx.datastore.core.FileReadScope: androidx.datastore.core.Serializer serializer>;

        $r19 = (java.io.InputStream) r35;

        $r25.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$0> = r34;

        $r25.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$1> = null;

        $r25.<androidx.datastore.core.FileReadScope$readData$1: int label> = 2;

        r46 = (kotlin.coroutines.Continuation) $r25;

        $r36 = interfaceinvoke $r18.<androidx.datastore.core.Serializer: java.lang.Object readFrom(java.io.InputStream,kotlin.coroutines.Continuation)>($r19, r46);

     label18:
        if $r36 != r2 goto label21;

        return r2;

     label19:
        $r4 = $r25.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$0>;

        r34 = (java.io.Closeable) $r4;

     label20:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r36 = $r1;

     label21:
        r37 = $r36;

     label22:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r34, null);

        goto label26;

     label23:
        $r20 := @caughtexception;

        r38 = $r20;

        throw r38;

     label24:
        $r23 := @caughtexception;

        r40 = $r23;

     label25:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r34, r38);

        throw r40;

     label26:
        return r37;

     label27:
        $r14 = $r24.<androidx.datastore.core.FileReadScope: androidx.datastore.core.Serializer serializer>;

        $r15 = interfaceinvoke $r14.<androidx.datastore.core.Serializer: java.lang.Object getDefaultValue()>();

        return $r15;

     label28:
        return r33;

     label29:
        r44 = new java.lang.IllegalStateException;

        specialinvoke r44.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r44;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label20 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
        catch java.io.FileNotFoundException from label04 to label06 with label16;
        catch java.io.FileNotFoundException from label08 to label15 with label16;
    }

    public void close()
    {
        androidx.datastore.core.FileReadScope r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: androidx.datastore.core.FileReadScope;

        $r1 = r0.<androidx.datastore.core.FileReadScope: java.util.concurrent.atomic.AtomicBoolean closed>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    protected final void checkNotClosed()
    {
        androidx.datastore.core.FileReadScope r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.datastore.core.FileReadScope;

        $r1 = r0.<androidx.datastore.core.FileReadScope: java.util.concurrent.atomic.AtomicBoolean closed>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r4 = "This scope has already been closed.";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        return;
    }

androidx.datastore.core.FileReadScope$readData$1
<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$0>
<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object L$1>
<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object result>
<androidx.datastore.core.FileReadScope$readData$1: androidx.datastore.core.FileReadScope this$0>
<androidx.datastore.core.FileReadScope$readData$1: int label>
    void <init>(androidx.datastore.core.FileReadScope, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.FileReadScope$readData$1 r0;
        androidx.datastore.core.FileReadScope r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.core.FileReadScope$readData$1;

        r1 := @parameter0: androidx.datastore.core.FileReadScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.core.FileReadScope$readData$1: androidx.datastore.core.FileReadScope this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.core.FileReadScope$readData$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.datastore.core.FileReadScope $r3;

        r0 := @this: androidx.datastore.core.FileReadScope$readData$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.datastore.core.FileReadScope$readData$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.datastore.core.FileReadScope$readData$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.datastore.core.FileReadScope$readData$1: int label> = $i1;

        $r3 = r0.<androidx.datastore.core.FileReadScope$readData$1: androidx.datastore.core.FileReadScope this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = staticinvoke <androidx.datastore.core.FileReadScope: java.lang.Object readData$suspendImpl(androidx.datastore.core.FileReadScope,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

