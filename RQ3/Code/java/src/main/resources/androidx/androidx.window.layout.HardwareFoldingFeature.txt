androidx.window.layout.HardwareFoldingFeature
<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion>
<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>
<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type>
<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state>
    public void <init>(androidx.window.core.Bounds, androidx.window.layout.HardwareFoldingFeature$Type, androidx.window.layout.FoldingFeature$State)
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        androidx.window.core.Bounds r1, $r4;
        androidx.window.layout.HardwareFoldingFeature$Type r2;
        androidx.window.layout.FoldingFeature$State r3;
        androidx.window.layout.HardwareFoldingFeature$Companion $r5;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        r1 := @parameter0: androidx.window.core.Bounds;

        r2 := @parameter1: androidx.window.layout.HardwareFoldingFeature$Type;

        r3 := @parameter2: androidx.window.layout.FoldingFeature$State;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "featureBounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "state");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds> = r1;

        r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type> = r2;

        r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state> = r3;

        $r5 = <androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion>;

        $r4 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        virtualinvoke $r5.<androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)>($r4);

        return;
    }

    public final androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        androidx.window.layout.HardwareFoldingFeature$Type $r1;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        $r1 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type>;

        return $r1;
    }

    public androidx.window.layout.FoldingFeature$State getState()
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        androidx.window.layout.FoldingFeature$State $r1;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        $r1 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state>;

        return $r1;
    }

    public android.graphics.Rect getBounds()
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        androidx.window.core.Bounds $r1;
        android.graphics.Rect $r2;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        $r1 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        $r2 = virtualinvoke $r1.<androidx.window.core.Bounds: android.graphics.Rect toRect()>();

        return $r2;
    }

    public boolean isSeparating()
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        androidx.window.layout.HardwareFoldingFeature$Type$Companion $r1, $r4;
        androidx.window.layout.HardwareFoldingFeature$Type $r2, $r3, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        androidx.window.layout.FoldingFeature$State $r7, $r8;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        $r2 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type>;

        $r1 = <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion>;

        $r3 = virtualinvoke $r1.<androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        $z3 = 1;

        goto label3;

     label1:
        $r5 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type>;

        $r4 = <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion>;

        $r6 = virtualinvoke $r4.<androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()>();

        $r8 = <androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        androidx.window.core.Bounds $r1, $r2;
        int $i0, $i1;
        androidx.window.layout.FoldingFeature$OcclusionType $r3;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        $r1 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        $i0 = virtualinvoke $r1.<androidx.window.core.Bounds: int getWidth()>();

        if $i0 == 0 goto label1;

        $r2 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        $i1 = virtualinvoke $r2.<androidx.window.core.Bounds: int getHeight()>();

        if $i1 != 0 goto label2;

     label1:
        $r3 = <androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE>;

        goto label3;

     label2:
        $r3 = <androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL>;

     label3:
        return $r3;
    }

    public androidx.window.layout.FoldingFeature$Orientation getOrientation()
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        androidx.window.core.Bounds $r1, $r2;
        int $i0, $i1;
        androidx.window.layout.FoldingFeature$Orientation $r3;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        $r1 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        $i0 = virtualinvoke $r1.<androidx.window.core.Bounds: int getWidth()>();

        $r2 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        $i1 = virtualinvoke $r2.<androidx.window.core.Bounds: int getHeight()>();

        if $i0 <= $i1 goto label1;

        $r3 = <androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL>;

        goto label2;

     label1:
        $r3 = <androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL>;

     label2:
        return $r3;
    }

    public java.lang.String toString()
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14;
        java.lang.Class $r2;
        java.lang.String $r3, $r15;
        androidx.window.core.Bounds $r6;
        androidx.window.layout.HardwareFoldingFeature$Type $r9;
        androidx.window.layout.FoldingFeature$State $r12;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = class "Landroidx/window/layout/HardwareFoldingFeature;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" { ");

        $r6 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $r9 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=");

        $r12 = virtualinvoke r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.window.layout.HardwareFoldingFeature r0, $r3, $r4, $r7, $r11;
        java.lang.Object r1;
        java.lang.Class $r2, $r14;
        boolean $z0, $z1, $z2, $z3;
        androidx.window.core.Bounds $r5, $r6;
        androidx.window.layout.HardwareFoldingFeature$Type $r8, $r9;
        androidx.window.layout.FoldingFeature$State $r10, $r12;
        java.lang.NullPointerException $r13;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r1 != null goto label2;

        $r14 = null;

        goto label3;

     label2:
        $r14 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label3:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r14);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        if r1 != null goto label5;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type androidx.window.layout.HardwareFoldingFeature");

        throw $r13;

     label5:
        $r3 = (androidx.window.layout.HardwareFoldingFeature) r1;

        $r6 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        $r4 = (androidx.window.layout.HardwareFoldingFeature) r1;

        $r5 = $r4.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 != 0 goto label6;

        return 0;

     label6:
        $r9 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type>;

        $r7 = (androidx.window.layout.HardwareFoldingFeature) r1;

        $r8 = $r7.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r8);

        if $z2 != 0 goto label7;

        return 0;

     label7:
        $r10 = virtualinvoke r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()>();

        $r11 = (androidx.window.layout.HardwareFoldingFeature) r1;

        $r12 = virtualinvoke $r11.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r12);

        if $z3 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public int hashCode()
    {
        androidx.window.layout.HardwareFoldingFeature r0;
        androidx.window.core.Bounds $r1;
        androidx.window.layout.HardwareFoldingFeature$Type $r2;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        androidx.window.layout.FoldingFeature$State $r3;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature;

        $r1 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds>;

        i4 = virtualinvoke $r1.<androidx.window.core.Bounds: int hashCode()>();

        $i0 = 31 * i4;

        $r2 = r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type>;

        $i1 = virtualinvoke $r2.<androidx.window.layout.HardwareFoldingFeature$Type: int hashCode()>();

        i5 = $i0 + $i1;

        $i2 = 31 * i5;

        $r3 = virtualinvoke r0.<androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()>();

        $i3 = virtualinvoke $r3.<androidx.window.layout.FoldingFeature$State: int hashCode()>();

        i6 = $i2 + $i3;

        return i6;
    }

    static void <clinit>()
    {
        androidx.window.layout.HardwareFoldingFeature$Companion $r0;

        $r0 = new androidx.window.layout.HardwareFoldingFeature$Companion;

        specialinvoke $r0.<androidx.window.layout.HardwareFoldingFeature$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion> = $r0;

        return;
    }

androidx.window.layout.HardwareFoldingFeature$Companion
    private void <init>()
    {
        androidx.window.layout.HardwareFoldingFeature$Companion r0;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void validateFeatureBounds$window_release(androidx.window.core.Bounds)
    {
        androidx.window.layout.HardwareFoldingFeature$Companion r0;
        androidx.window.core.Bounds r1;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r2, $r4;
        java.lang.String $r3, $r5, $r6, $r7;
        boolean $z0, $z2;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Companion;

        r1 := @parameter0: androidx.window.core.Bounds;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        $i0 = virtualinvoke r1.<androidx.window.core.Bounds: int getWidth()>();

        if $i0 != 0 goto label1;

        $i3 = virtualinvoke r1.<androidx.window.core.Bounds: int getHeight()>();

        if $i3 == 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        $r6 = "Bounds must be non zero";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label4:
        $i1 = virtualinvoke r1.<androidx.window.core.Bounds: int getLeft()>();

        if $i1 == 0 goto label5;

        $i2 = virtualinvoke r1.<androidx.window.core.Bounds: int getTop()>();

        if $i2 != 0 goto label6;

     label5:
        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        if $z2 != 0 goto label8;

        $r7 = "Bounding rectangle must start at the top or left window edge for folding features";

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label8:
        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.layout.HardwareFoldingFeature$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.window.layout.HardwareFoldingFeature$Companion: void <init>()>();

        return;
    }

androidx.window.layout.HardwareFoldingFeature$Type$Companion
    private void <init>()
    {
        androidx.window.layout.HardwareFoldingFeature$Type$Companion r0;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Type$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
    {
        androidx.window.layout.HardwareFoldingFeature$Type$Companion r0;
        androidx.window.layout.HardwareFoldingFeature$Type $r1;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Type$Companion;

        $r1 = staticinvoke <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()>();

        return $r1;
    }

    public final androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
    {
        androidx.window.layout.HardwareFoldingFeature$Type$Companion r0;
        androidx.window.layout.HardwareFoldingFeature$Type $r1;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Type$Companion;

        $r1 = staticinvoke <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.layout.HardwareFoldingFeature$Type$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Type$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.window.layout.HardwareFoldingFeature$Type$Companion: void <init>()>();

        return;
    }

androidx.window.layout.HardwareFoldingFeature$Type
<androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion>
<androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description>
<androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD>
<androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE>
    private void <init>(java.lang.String)
    {
        androidx.window.layout.HardwareFoldingFeature$Type r0;
        java.lang.String r1;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Type;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description> = r1;

        return;
    }

    public java.lang.String toString()
    {
        androidx.window.layout.HardwareFoldingFeature$Type r0;
        java.lang.String $r1;

        r0 := @this: androidx.window.layout.HardwareFoldingFeature$Type;

        $r1 = r0.<androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description>;

        return $r1;
    }

    public static final androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
    {
        androidx.window.layout.HardwareFoldingFeature$Type $r0;

        $r0 = <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD>;

        return $r0;
    }

    public static final androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
    {
        androidx.window.layout.HardwareFoldingFeature$Type $r0;

        $r0 = <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.window.layout.HardwareFoldingFeature$Type$Companion $r0;
        androidx.window.layout.HardwareFoldingFeature$Type $r1, $r2;

        $r0 = new androidx.window.layout.HardwareFoldingFeature$Type$Companion;

        specialinvoke $r0.<androidx.window.layout.HardwareFoldingFeature$Type$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion> = $r0;

        $r1 = new androidx.window.layout.HardwareFoldingFeature$Type;

        specialinvoke $r1.<androidx.window.layout.HardwareFoldingFeature$Type: void <init>(java.lang.String)>("FOLD");

        <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD> = $r1;

        $r2 = new androidx.window.layout.HardwareFoldingFeature$Type;

        specialinvoke $r2.<androidx.window.layout.HardwareFoldingFeature$Type: void <init>(java.lang.String)>("HINGE");

        <androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE> = $r2;

        return;
    }

