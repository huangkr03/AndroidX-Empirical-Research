androidx.camera.core.ImageSaver
<androidx.camera.core.ImageSaver: java.lang.String TAG>
<androidx.camera.core.ImageSaver: java.lang.String TEMP_FILE_PREFIX>
<androidx.camera.core.ImageSaver: java.lang.String TEMP_FILE_SUFFIX>
<androidx.camera.core.ImageSaver: int COPY_BUFFER_SIZE>
<androidx.camera.core.ImageSaver: int PENDING>
<androidx.camera.core.ImageSaver: int NOT_PENDING>
<androidx.camera.core.ImageSaver: androidx.camera.core.ImageProxy mImage>
<androidx.camera.core.ImageSaver: int mOrientation>
<androidx.camera.core.ImageSaver: int mJpegQuality>
<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>
<androidx.camera.core.ImageSaver: java.util.concurrent.Executor mUserCallbackExecutor>
<androidx.camera.core.ImageSaver: androidx.camera.core.ImageSaver$OnImageSavedCallback mCallback>
<androidx.camera.core.ImageSaver: java.util.concurrent.Executor mSequentialIoExecutor>
    void <init>(androidx.camera.core.ImageProxy, androidx.camera.core.ImageCapture$OutputFileOptions, int, int, java.util.concurrent.Executor, java.util.concurrent.Executor, androidx.camera.core.ImageSaver$OnImageSavedCallback)
    {
        androidx.camera.core.ImageSaver r0;
        androidx.camera.core.ImageProxy r1;
        androidx.camera.core.ImageCapture$OutputFileOptions r2;
        int i0, i1;
        java.util.concurrent.Executor r3, r4;
        androidx.camera.core.ImageSaver$OnImageSavedCallback r5;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        r2 := @parameter1: androidx.camera.core.ImageCapture$OutputFileOptions;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.util.concurrent.Executor;

        r4 := @parameter5: java.util.concurrent.Executor;

        r5 := @parameter6: androidx.camera.core.ImageSaver$OnImageSavedCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageProxy mImage> = r1;

        r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions> = r2;

        r0.<androidx.camera.core.ImageSaver: int mOrientation> = i0;

        r0.<androidx.camera.core.ImageSaver: int mJpegQuality> = i1;

        r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageSaver$OnImageSavedCallback mCallback> = r5;

        r0.<androidx.camera.core.ImageSaver: java.util.concurrent.Executor mUserCallbackExecutor> = r3;

        r0.<androidx.camera.core.ImageSaver: java.util.concurrent.Executor mSequentialIoExecutor> = r4;

        return;
    }

    public void run()
    {
        androidx.camera.core.ImageSaver r0;
        java.io.File r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 = specialinvoke r0.<androidx.camera.core.ImageSaver: java.io.File saveImageToTempFile()>();

        if r1 == null goto label1;

        $r2 = r0.<androidx.camera.core.ImageSaver: java.util.concurrent.Executor mSequentialIoExecutor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.ImageSaver,java.io.File)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.ImageSaver: void lambda$run$0(java.io.File)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private java.io.File saveImageToTempFile()
    {
        androidx.camera.core.ImageSaver r0;
        androidx.camera.core.ImageCapture$Metadata r1, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.io.FileOutputStream $r2, r37;
        int $i0, $i1;
        androidx.camera.core.ImageProxy $r3, $r4, $r7, r36;
        androidx.camera.core.impl.utils.Exif $r5, r39;
        androidx.camera.core.internal.compat.workaround.ExifRotationAvailability $r6;
        androidx.camera.core.ImageCapture$OutputFileOptions $r8, $r10, $r14;
        android.location.Location $r9, $r12;
        java.io.File $r13, $r15, r31;
        java.lang.String $r16, $r20, $r23, r34;
        java.lang.StringBuilder $r17, $r18, $r21, $r22;
        java.util.UUID $r19;
        java.lang.Throwable $r24, $r25, $r26, $r27, $r28, $r29, r32, r35, r40, r41, r42, r43, r44;
        androidx.camera.core.ImageSaver$SaveError $r30, r33;
        byte[] r38;

        r0 := @this: androidx.camera.core.ImageSaver;

     label01:
        $z0 = specialinvoke r0.<androidx.camera.core.ImageSaver: boolean isSaveToFile()>();

        if $z0 == 0 goto label02;

        $r13 = new java.io.File;

        $r14 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r15 = virtualinvoke $r14.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.File getFile()>();

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getParent()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CameraX");

        $r19 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r20 = virtualinvoke $r19.<java.util.UUID: java.lang.String toString()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r16, $r23);

        r31 = $r13;

        goto label03;

     label02:
        r31 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("CameraX", ".tmp");

     label03:
        goto label05;

     label04:
        $r29 := @caughtexception;

        r32 = $r29;

        $r30 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED>;

        specialinvoke r0.<androidx.camera.core.ImageSaver: void postError(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable)>($r30, "Failed to create temp file", r32);

        return null;

     label05:
        r33 = null;

        r34 = null;

        r35 = null;

     label06:
        r36 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageProxy mImage>;

     label07:
        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r31);

        r37 = $r2;

     label08:
        $r3 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageProxy mImage>;

        $i0 = r0.<androidx.camera.core.ImageSaver: int mJpegQuality>;

        r38 = specialinvoke r0.<androidx.camera.core.ImageSaver: byte[] imageToJpegByteArray(androidx.camera.core.ImageProxy,int)>($r3, $i0);

        virtualinvoke r37.<java.io.FileOutputStream: void write(byte[])>(r38);

        r39 = staticinvoke <androidx.camera.core.impl.utils.Exif: androidx.camera.core.impl.utils.Exif createFromFile(java.io.File)>(r31);

        $r4 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageProxy mImage>;

        $r5 = staticinvoke <androidx.camera.core.impl.utils.Exif: androidx.camera.core.impl.utils.Exif createFromImageProxy(androidx.camera.core.ImageProxy)>($r4);

        virtualinvoke $r5.<androidx.camera.core.impl.utils.Exif: void copyToCroppedImage(androidx.camera.core.impl.utils.Exif)>(r39);

        $r6 = new androidx.camera.core.internal.compat.workaround.ExifRotationAvailability;

        specialinvoke $r6.<androidx.camera.core.internal.compat.workaround.ExifRotationAvailability: void <init>()>();

        $r7 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageProxy mImage>;

        $z1 = virtualinvoke $r6.<androidx.camera.core.internal.compat.workaround.ExifRotationAvailability: boolean shouldUseExifOrientation(androidx.camera.core.ImageProxy)>($r7);

        if $z1 != 0 goto label09;

        $i1 = r0.<androidx.camera.core.ImageSaver: int mOrientation>;

        virtualinvoke r39.<androidx.camera.core.impl.utils.Exif: void rotate(int)>($i1);

     label09:
        $r8 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        r1 = virtualinvoke $r8.<androidx.camera.core.ImageCapture$OutputFileOptions: androidx.camera.core.ImageCapture$Metadata getMetadata()>();

        $z2 = virtualinvoke r1.<androidx.camera.core.ImageCapture$Metadata: boolean isReversedHorizontal()>();

        if $z2 == 0 goto label10;

        virtualinvoke r39.<androidx.camera.core.impl.utils.Exif: void flipHorizontally()>();

     label10:
        $z3 = virtualinvoke r1.<androidx.camera.core.ImageCapture$Metadata: boolean isReversedVertical()>();

        if $z3 == 0 goto label11;

        virtualinvoke r39.<androidx.camera.core.impl.utils.Exif: void flipVertically()>();

     label11:
        $r9 = virtualinvoke r1.<androidx.camera.core.ImageCapture$Metadata: android.location.Location getLocation()>();

        if $r9 == null goto label12;

        $r10 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r11 = virtualinvoke $r10.<androidx.camera.core.ImageCapture$OutputFileOptions: androidx.camera.core.ImageCapture$Metadata getMetadata()>();

        $r12 = virtualinvoke $r11.<androidx.camera.core.ImageCapture$Metadata: android.location.Location getLocation()>();

        virtualinvoke r39.<androidx.camera.core.impl.utils.Exif: void attachLocation(android.location.Location)>($r12);

     label12:
        virtualinvoke r39.<androidx.camera.core.impl.utils.Exif: void save()>();

     label13:
        virtualinvoke r37.<java.io.FileOutputStream: void close()>();

        goto label19;

     label14:
        $r26 := @caughtexception;

        r40 = $r26;

     label15:
        virtualinvoke r37.<java.io.FileOutputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r25 := @caughtexception;

        r41 = $r25;

        virtualinvoke r40.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r41);

     label18:
        throw r40;

     label19:
        if r36 == null goto label25;

        interfaceinvoke r36.<androidx.camera.core.ImageProxy: void close()>();

        goto label25;

     label20:
        $r24 := @caughtexception;

        r42 = $r24;

        if r36 == null goto label24;

     label21:
        interfaceinvoke r36.<androidx.camera.core.ImageProxy: void close()>();

     label22:
        goto label24;

     label23:
        $r28 := @caughtexception;

        r43 = $r28;

        virtualinvoke r42.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r43);

     label24:
        throw r42;

     label25:
        goto label27;

     label26:
        $r27 := @caughtexception;

        r44 = $r27;

        r33 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED>;

        r34 = "Failed to write temp file";

        r35 = r44;

        goto label27;

     label27:
        if r33 == null goto label28;

        specialinvoke r0.<androidx.camera.core.ImageSaver: void postError(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable)>(r33, r34, r35);

        virtualinvoke r31.<java.io.File: boolean delete()>();

        return null;

     label28:
        return r31;

        catch java.io.IOException from label01 to label03 with label04;
        catch java.lang.Throwable from label08 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label07 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.io.IOException from label06 to label25 with label26;
        catch java.lang.IllegalArgumentException from label06 to label25 with label26;
    }

    private byte[] imageToJpegByteArray(androidx.camera.core.ImageProxy, int) throws androidx.camera.core.internal.utils.ImageUtil$CodecFailedException
    {
        androidx.camera.core.ImageSaver r0;
        androidx.camera.core.ImageProxy r1;
        int i0, i1;
        boolean z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        byte[] $r6, $r9, $r10;
        android.graphics.Rect $r8, $r11;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        i0 := @parameter1: int;

        z0 = staticinvoke <androidx.camera.core.internal.utils.ImageUtil: boolean shouldCropImage(androidx.camera.core.ImageProxy)>(r1);

        i1 = interfaceinvoke r1.<androidx.camera.core.ImageProxy: int getFormat()>();

        if i1 != 256 goto label2;

        if z0 != 0 goto label1;

        $r10 = staticinvoke <androidx.camera.core.internal.utils.ImageUtil: byte[] jpegImageToJpegByteArray(androidx.camera.core.ImageProxy)>(r1);

        return $r10;

     label1:
        $r8 = interfaceinvoke r1.<androidx.camera.core.ImageProxy: android.graphics.Rect getCropRect()>();

        $r9 = staticinvoke <androidx.camera.core.internal.utils.ImageUtil: byte[] jpegImageToJpegByteArray(androidx.camera.core.ImageProxy,android.graphics.Rect,int)>(r1, $r8, i0);

        return $r9;

     label2:
        if i1 != 35 goto label5;

        if z0 == 0 goto label3;

        $r11 = interfaceinvoke r1.<androidx.camera.core.ImageProxy: android.graphics.Rect getCropRect()>();

        goto label4;

     label3:
        $r11 = null;

     label4:
        $r6 = staticinvoke <androidx.camera.core.internal.utils.ImageUtil: byte[] yuvImageToJpegByteArray(androidx.camera.core.ImageProxy,android.graphics.Rect,int)>(r1, $r11, i0);

        return $r6;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized image format: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String)>("ImageSaver", $r5);

        return null;
    }

    void copyTempFileToDestination(java.io.File)
    {
        androidx.camera.core.ImageSaver r0;
        java.io.File r1, r23;
        java.lang.Throwable r2, $r15, $r16, r19, r24;
        boolean $z0, $z1, $z2, $z4, $z5, $z7;
        androidx.camera.core.ImageCapture$OutputFileOptions $r4, $r5, $r7, $r9, $r11, $r13;
        java.io.OutputStream $r6;
        android.content.ContentValues $r8, $r14, $r21, r22;
        android.content.ContentResolver $r10;
        android.net.Uri $r12, r20;
        androidx.camera.core.ImageSaver$SaveError r17;
        java.lang.String r18;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: java.io.File;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r17 = null;

        r18 = null;

        r19 = null;

        r20 = null;

     label01:
        $z0 = specialinvoke r0.<androidx.camera.core.ImageSaver: boolean isSaveToMediaStore()>();

        if $z0 == 0 goto label07;

        $r7 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r8 = virtualinvoke $r7.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentValues getContentValues()>();

        if $r8 == null goto label02;

        $r21 = new android.content.ContentValues;

        $r13 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r14 = virtualinvoke $r13.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentValues getContentValues()>();

        specialinvoke $r21.<android.content.ContentValues: void <init>(android.content.ContentValues)>($r14);

        goto label03;

     label02:
        $r21 = new android.content.ContentValues;

        specialinvoke $r21.<android.content.ContentValues: void <init>()>();

     label03:
        r22 = $r21;

        specialinvoke r0.<androidx.camera.core.ImageSaver: void setContentValuePending(android.content.ContentValues,int)>(r22, 1);

        $r9 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r10 = virtualinvoke $r9.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentResolver getContentResolver()>();

        $r11 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r12 = virtualinvoke $r11.<androidx.camera.core.ImageCapture$OutputFileOptions: android.net.Uri getSaveCollection()>();

        r20 = virtualinvoke $r10.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r12, r22);

        if r20 != null goto label04;

        r17 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED>;

        r18 = "Failed to insert URI.";

        goto label06;

     label04:
        $z7 = specialinvoke r0.<androidx.camera.core.ImageSaver: boolean copyTempFileToUri(java.io.File,android.net.Uri)>(r1, r20);

        if $z7 != 0 goto label05;

        r17 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED>;

        r18 = "Failed to save to URI.";

     label05:
        specialinvoke r0.<androidx.camera.core.ImageSaver: void setUriNotPending(android.net.Uri)>(r20);

     label06:
        goto label11;

     label07:
        $z1 = specialinvoke r0.<androidx.camera.core.ImageSaver: boolean isSaveToOutputStream()>();

        if $z1 == 0 goto label08;

        $r5 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r6 = virtualinvoke $r5.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.OutputStream getOutputStream()>();

        specialinvoke r0.<androidx.camera.core.ImageSaver: void copyTempFileToOutputStream(java.io.File,java.io.OutputStream)>(r1, $r6);

        goto label11;

     label08:
        $z2 = specialinvoke r0.<androidx.camera.core.ImageSaver: boolean isSaveToFile()>();

        if $z2 == 0 goto label11;

        $r4 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        r23 = virtualinvoke $r4.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.File getFile()>();

        $z4 = virtualinvoke r23.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label09;

        virtualinvoke r23.<java.io.File: boolean delete()>();

     label09:
        $z5 = virtualinvoke r1.<java.io.File: boolean renameTo(java.io.File)>(r23);

        if $z5 != 0 goto label10;

        r17 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED>;

        r18 = "Failed to rename file.";

     label10:
        r20 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r23);

     label11:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        goto label16;

     label12:
        $r16 := @caughtexception;

        r24 = $r16;

        r17 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED>;

        r18 = "Failed to write destination file.";

        r19 = r24;

     label13:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        goto label16;

     label14:
        $r15 := @caughtexception;

        r2 = $r15;

     label15:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        throw r2;

     label16:
        if r17 == null goto label17;

        specialinvoke r0.<androidx.camera.core.ImageSaver: void postError(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable)>(r17, r18, r19);

        goto label18;

     label17:
        specialinvoke r0.<androidx.camera.core.ImageSaver: void postSuccess(android.net.Uri)>(r20);

     label18:
        return;

        catch java.io.IOException from label01 to label11 with label12;
        catch java.lang.IllegalArgumentException from label01 to label11 with label12;
        catch java.lang.Throwable from label01 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private boolean isSaveToMediaStore()
    {
        androidx.camera.core.ImageSaver r0;
        androidx.camera.core.ImageCapture$OutputFileOptions $r1, $r3, $r5;
        android.net.Uri $r2;
        android.content.ContentResolver $r4;
        android.content.ContentValues $r6;
        boolean $z0;

        r0 := @this: androidx.camera.core.ImageSaver;

        $r1 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r2 = virtualinvoke $r1.<androidx.camera.core.ImageCapture$OutputFileOptions: android.net.Uri getSaveCollection()>();

        if $r2 == null goto label1;

        $r3 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r4 = virtualinvoke $r3.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentResolver getContentResolver()>();

        if $r4 == null goto label1;

        $r5 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r6 = virtualinvoke $r5.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentValues getContentValues()>();

        if $r6 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isSaveToFile()
    {
        androidx.camera.core.ImageSaver r0;
        androidx.camera.core.ImageCapture$OutputFileOptions $r1;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: androidx.camera.core.ImageSaver;

        $r1 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r2 = virtualinvoke $r1.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.File getFile()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isSaveToOutputStream()
    {
        androidx.camera.core.ImageSaver r0;
        androidx.camera.core.ImageCapture$OutputFileOptions $r1;
        java.io.OutputStream $r2;
        boolean $z0;

        r0 := @this: androidx.camera.core.ImageSaver;

        $r1 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r2 = virtualinvoke $r1.<androidx.camera.core.ImageCapture$OutputFileOptions: java.io.OutputStream getOutputStream()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void setUriNotPending(android.net.Uri)
    {
        androidx.camera.core.ImageSaver r0;
        android.net.Uri r1;
        android.content.ContentValues r2, $r3;
        int $i0;
        androidx.camera.core.ImageCapture$OutputFileOptions $r4;
        android.content.ContentResolver $r5;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: android.net.Uri;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        r2 = $r3;

        specialinvoke r0.<androidx.camera.core.ImageSaver: void setContentValuePending(android.content.ContentValues,int)>(r2, 0);

        $r4 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r5 = virtualinvoke $r4.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r5.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r2, null, null);

     label1:
        return;
    }

    private void setContentValuePending(android.content.ContentValues, int)
    {
        androidx.camera.core.ImageSaver r0;
        android.content.ContentValues r1;
        int i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: android.content.ContentValues;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("is_pending", $r2);

     label1:
        return;
    }

    private boolean copyTempFileToUri(java.io.File, android.net.Uri) throws java.io.IOException
    {
        androidx.camera.core.ImageSaver r0;
        java.io.File r1;
        android.net.Uri r2;
        java.io.OutputStream r3;
        java.lang.Throwable r4, $r7, $r8, r9;
        androidx.camera.core.ImageCapture$OutputFileOptions $r5;
        android.content.ContentResolver $r6;
        boolean z0;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.net.Uri;

        $r5 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageCapture$OutputFileOptions mOutputFileOptions>;

        $r6 = virtualinvoke $r5.<androidx.camera.core.ImageCapture$OutputFileOptions: android.content.ContentResolver getContentResolver()>();

        r3 = virtualinvoke $r6.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>(r2);

     label01:
        if r3 != null goto label04;

        z0 = 0;

     label02:
        if r3 == null goto label03;

        virtualinvoke r3.<java.io.OutputStream: void close()>();

     label03:
        return z0;

     label04:
        specialinvoke r0.<androidx.camera.core.ImageSaver: void copyTempFileToOutputStream(java.io.File,java.io.OutputStream)>(r1, r3);

     label05:
        if r3 == null goto label11;

        virtualinvoke r3.<java.io.OutputStream: void close()>();

        goto label11;

     label06:
        $r7 := @caughtexception;

        r9 = $r7;

        if r3 == null goto label10;

     label07:
        virtualinvoke r3.<java.io.OutputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        r4 = $r8;

        virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r4);

     label10:
        throw r9;

     label11:
        return 1;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    private void copyTempFileToOutputStream(java.io.File, java.io.OutputStream) throws java.io.IOException
    {
        androidx.camera.core.ImageSaver r0;
        java.io.File r1;
        java.io.OutputStream r2;
        java.io.FileInputStream r3, $r4;
        int $i0, i1;
        java.lang.Throwable $r5, $r6, r8, r9;
        byte[] r7;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.OutputStream;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r3 = $r4;

     label1:
        r7 = newarray (byte)[1024];

     label2:
        $i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r7);

        i1 = $i0;

        if $i0 <= 0 goto label3;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r7, 0, i1);

        goto label2;

     label3:
        virtualinvoke r3.<java.io.InputStream: void close()>();

        goto label9;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

     label5:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        r9 = $r5;

        virtualinvoke r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9);

     label8:
        throw r8;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private void postSuccess(android.net.Uri)
    {
        androidx.camera.core.ImageSaver r0;
        android.net.Uri r1;
        java.lang.Throwable r2, $r5;
        java.util.concurrent.Executor $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: android.net.Uri;

     label1:
        $r3 = r0.<androidx.camera.core.ImageSaver: java.util.concurrent.Executor mUserCallbackExecutor>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.ImageSaver,android.net.Uri)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.ImageSaver: void lambda$postSuccess$1(android.net.Uri)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String)>("ImageSaver", "Application executor rejected executing OnImageSavedCallback.onImageSaved callback. Skipping.");

     label4:
        return;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    private void postError(androidx.camera.core.ImageSaver$SaveError, java.lang.String, java.lang.Throwable)
    {
        androidx.camera.core.ImageSaver r0;
        androidx.camera.core.ImageSaver$SaveError r1;
        java.lang.String r2;
        java.lang.Throwable r3, r4, $r7;
        java.util.concurrent.Executor $r5;
        java.lang.Runnable $r6;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: androidx.camera.core.ImageSaver$SaveError;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

     label1:
        $r5 = r0.<androidx.camera.core.ImageSaver: java.util.concurrent.Executor mUserCallbackExecutor>;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.ImageSaver,androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable)>(r0, r1, r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.ImageSaver: void lambda$postError$2(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String)>("ImageSaver", "Application executor rejected executing OnImageSavedCallback.onError callback. Skipping.");

     label4:
        return;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    private void lambda$postError$2(androidx.camera.core.ImageSaver$SaveError, java.lang.String, java.lang.Throwable)
    {
        androidx.camera.core.ImageSaver r0;
        androidx.camera.core.ImageSaver$SaveError r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        androidx.camera.core.ImageSaver$OnImageSavedCallback $r4;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: androidx.camera.core.ImageSaver$SaveError;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageSaver$OnImageSavedCallback mCallback>;

        interfaceinvoke $r4.<androidx.camera.core.ImageSaver$OnImageSavedCallback: void onError(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    private void lambda$postSuccess$1(android.net.Uri)
    {
        androidx.camera.core.ImageSaver r0;
        android.net.Uri r1;
        androidx.camera.core.ImageCapture$OutputFileResults $r2;
        androidx.camera.core.ImageSaver$OnImageSavedCallback $r3;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: android.net.Uri;

        $r3 = r0.<androidx.camera.core.ImageSaver: androidx.camera.core.ImageSaver$OnImageSavedCallback mCallback>;

        $r2 = new androidx.camera.core.ImageCapture$OutputFileResults;

        specialinvoke $r2.<androidx.camera.core.ImageCapture$OutputFileResults: void <init>(android.net.Uri)>(r1);

        interfaceinvoke $r3.<androidx.camera.core.ImageSaver$OnImageSavedCallback: void onImageSaved(androidx.camera.core.ImageCapture$OutputFileResults)>($r2);

        return;
    }

    private void lambda$run$0(java.io.File)
    {
        androidx.camera.core.ImageSaver r0;
        java.io.File r1;

        r0 := @this: androidx.camera.core.ImageSaver;

        r1 := @parameter0: java.io.File;

        virtualinvoke r0.<androidx.camera.core.ImageSaver: void copyTempFileToDestination(java.io.File)>(r1);

        return;
    }

androidx.camera.core.ImageSaver$1
<androidx.camera.core.ImageSaver$1: int[] $SwitchMap$androidx$camera$core$internal$utils$ImageUtil$CodecFailedException$FailureType>
    static void <clinit>()
    {
        androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType[] $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1, $r3, $r5, $r7;
        androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType $r2, $r4, $r6;
        java.lang.Throwable $r8, $r9, $r10, r11, r12, r13;

        $r0 = staticinvoke <androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.camera.core.ImageSaver$1: int[] $SwitchMap$androidx$camera$core$internal$utils$ImageUtil$CodecFailedException$FailureType> = $r1;

     label01:
        $r3 = <androidx.camera.core.ImageSaver$1: int[] $SwitchMap$androidx$camera$core$internal$utils$ImageUtil$CodecFailedException$FailureType>;

        $r2 = <androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType ENCODE_FAILED>;

        $i1 = virtualinvoke $r2.<androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

        r11 = $r9;

     label04:
        $r5 = <androidx.camera.core.ImageSaver$1: int[] $SwitchMap$androidx$camera$core$internal$utils$ImageUtil$CodecFailedException$FailureType>;

        $r4 = <androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType DECODE_FAILED>;

        $i2 = virtualinvoke $r4.<androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r8 := @caughtexception;

        r12 = $r8;

     label07:
        $r7 = <androidx.camera.core.ImageSaver$1: int[] $SwitchMap$androidx$camera$core$internal$utils$ImageUtil$CodecFailedException$FailureType>;

        $r6 = <androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType UNKNOWN>;

        $i3 = virtualinvoke $r6.<androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r10 := @caughtexception;

        r13 = $r10;

     label10:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }

androidx.camera.core.ImageSaver$OnImageSavedCallback
<androidx.camera.core.ImageSaver$OnImageSavedCallback: void onImageSaved(androidx.camera.core.ImageCapture$OutputFileResults)>
<androidx.camera.core.ImageSaver$OnImageSavedCallback: void onError(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable)>
androidx.camera.core.ImageSaver$SaveError
<androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED>
<androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError ENCODE_FAILED>
<androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError CROP_FAILED>
<androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError UNKNOWN>
<androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError[] $VALUES>
    public static androidx.camera.core.ImageSaver$SaveError[] values()
    {
        androidx.camera.core.ImageSaver$SaveError[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.camera.core.ImageSaver$SaveError[]) $r1;

        return $r2;
    }

    public static androidx.camera.core.ImageSaver$SaveError valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.camera.core.ImageSaver$SaveError $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/camera/core/ImageSaver$SaveError;", r0);

        $r2 = (androidx.camera.core.ImageSaver$SaveError) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.camera.core.ImageSaver$SaveError r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.camera.core.ImageSaver$SaveError;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.camera.core.ImageSaver$SaveError $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        androidx.camera.core.ImageSaver$SaveError[] $r4;

        $r0 = new androidx.camera.core.ImageSaver$SaveError;

        specialinvoke $r0.<androidx.camera.core.ImageSaver$SaveError: void <init>(java.lang.String,int)>("FILE_IO_FAILED", 0);

        <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED> = $r0;

        $r1 = new androidx.camera.core.ImageSaver$SaveError;

        specialinvoke $r1.<androidx.camera.core.ImageSaver$SaveError: void <init>(java.lang.String,int)>("ENCODE_FAILED", 1);

        <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError ENCODE_FAILED> = $r1;

        $r2 = new androidx.camera.core.ImageSaver$SaveError;

        specialinvoke $r2.<androidx.camera.core.ImageSaver$SaveError: void <init>(java.lang.String,int)>("CROP_FAILED", 2);

        <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError CROP_FAILED> = $r2;

        $r3 = new androidx.camera.core.ImageSaver$SaveError;

        specialinvoke $r3.<androidx.camera.core.ImageSaver$SaveError: void <init>(java.lang.String,int)>("UNKNOWN", 3);

        <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError UNKNOWN> = $r3;

        $r4 = newarray (androidx.camera.core.ImageSaver$SaveError)[4];

        $r5 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED>;

        $r4[0] = $r5;

        $r6 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError ENCODE_FAILED>;

        $r4[1] = $r6;

        $r7 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError CROP_FAILED>;

        $r4[2] = $r7;

        $r8 = <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError UNKNOWN>;

        $r4[3] = $r8;

        <androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError[] $VALUES> = $r4;

        return;
    }

