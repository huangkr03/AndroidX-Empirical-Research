android.databinding.tool.LayoutBinder
<android.databinding.tool.LayoutBinder: java.util.Comparator COMPARE_FIELD_NAME>
<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>
<android.databinding.tool.LayoutBinder: android.databinding.tool.ExpressionParser mExpressionParser>
<android.databinding.tool.LayoutBinder: java.util.List mBindingTargets>
<android.databinding.tool.LayoutBinder: java.util.List mSortedBindingTargets>
<android.databinding.tool.LayoutBinder: java.lang.String mModulePackage>
<android.databinding.tool.LayoutBinder: java.util.HashMap mUserDefinedVariables>
<android.databinding.tool.LayoutBinder: android.databinding.tool.writer.LayoutBinderWriter mWriter>
<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>
<android.databinding.tool.LayoutBinder: java.lang.String[] sJavaLangClasses>
<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mLayoutBundle>
<android.databinding.tool.LayoutBinder: boolean mEnableV2>
    public void <init>(android.databinding.tool.store.ResourceBundle$LayoutFileBundle, boolean)
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r1, $r16, $r18, $r20;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z13;
        java.util.HashSet r2, r101;
        android.databinding.tool.expr.Expr r3;
        java.lang.Throwable r4, r5, r6, r7, $r74, $r75, $r76, $r77, $r78, r89;
        java.lang.String $r9, $r11, $r34, $r37, $r43, $r45, $r46, $r49, $r57, $r63, $r64, $r67, $r70, $r71, $r73, r84, r88, r92;
        android.databinding.tool.expr.ExprModel $r13, $r30, $r50, $r54, $r59, $r65, r98;
        java.util.List $r17, $r19, $r21, $r22, $r23, $r25, $r27, $r40;
        java.util.Comparator $r26;
        java.lang.Object $r28, $r31, $r41, $r48, $r61, $r68;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle $r29, $r32, $r39, r86;
        java.lang.StringBuilder $r35, $r36, $r38, $r55, $r56, r102, r103;
        android.databinding.tool.store.Location $r42, $r44, $r62, $r69;
        java.lang.Object[] $r52;
        java.util.Iterator r79, r81, r85, r90, r93, r95;
        android.databinding.tool.store.ResourceBundle$VariableDeclaration r80;
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r82;
        java.lang.String[] r83;
        int i0, i1;
        android.databinding.tool.BindingTarget r87, r91, r96;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r94;
        java.util.HashMap r97;
        android.databinding.tool.ExpressionParser r99;
        java.util.ArrayList r100, r104;
        android.databinding.tool.processing.scopes.ScopeProvider r105;

        r0 := @this: android.databinding.tool.LayoutBinder;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r97 = new java.util.HashMap;

        specialinvoke r97.<java.util.HashMap: void <init>()>();

        r0.<android.databinding.tool.LayoutBinder: java.util.HashMap mUserDefinedVariables> = r97;

        r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mLayoutBundle> = r1;

        r0.<android.databinding.tool.LayoutBinder: boolean mEnableV2> = z0;

     label01:
        r105 = (android.databinding.tool.processing.scopes.ScopeProvider) r0;

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r105);

        $r9 = virtualinvoke r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getModulePackage()>();

        r0.<android.databinding.tool.LayoutBinder: java.lang.String mModulePackage> = $r9;

        r98 = new android.databinding.tool.expr.ExprModel;

        $r11 = r0.<android.databinding.tool.LayoutBinder: java.lang.String mModulePackage>;

        specialinvoke r98.<android.databinding.tool.expr.ExprModel: void <init>(java.lang.String,boolean)>($r11, z0);

        r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel> = r98;

        r99 = new android.databinding.tool.ExpressionParser;

        $r13 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        specialinvoke r99.<android.databinding.tool.ExpressionParser: void <init>(android.databinding.tool.expr.ExprModel)>($r13);

        r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.ExpressionParser mExpressionParser> = r99;

        r100 = new java.util.ArrayList;

        specialinvoke r100.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.LayoutBinder: java.util.List mBindingTargets> = r100;

        r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle> = r1;

        r101 = new java.util.HashSet;

        specialinvoke r101.<java.util.HashSet: void <init>()>();

        r2 = r101;

        $r16 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r17 = virtualinvoke $r16.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getVariables()>();

        r79 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r79.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r68 = interfaceinvoke r79.<java.util.Iterator: java.lang.Object next()>();

        r80 = (android.databinding.tool.store.ResourceBundle$VariableDeclaration) $r68;

        $r71 = r80.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String name>;

        $r70 = r80.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String type>;

        $r69 = r80.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: android.databinding.tool.store.Location location>;

        $z13 = r80.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: boolean declared>;

        virtualinvoke r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.IdentifierExpr addVariable(java.lang.String,java.lang.String,android.databinding.tool.store.Location,boolean)>($r71, $r70, $r69, $z13);

        $r73 = r80.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String name>;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r73);

        goto label02;

     label03:
        $r18 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r19 = virtualinvoke $r18.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getImports()>();

        r81 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r81.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r61 = interfaceinvoke r81.<java.util.Iterator: java.lang.Object next()>();

        r82 = (android.databinding.tool.store.ResourceBundle$NameTypeLocation) $r61;

        $r65 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        $r64 = r82.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $r63 = r82.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        $r62 = r82.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        virtualinvoke $r65.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.StaticIdentifierExpr addImport(java.lang.String,java.lang.String,android.databinding.tool.store.Location)>($r64, $r63, $r62);

        $r67 = r82.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r67);

        goto label04;

     label05:
        $z3 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>("context");

        if $z3 != 0 goto label06;

        $r59 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        virtualinvoke $r59.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.BuiltInVariableExpr builtInVariable(java.lang.String,java.lang.String,java.lang.String)>("context", "android.content.Context", "getRoot().getContext()");

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("context");

     label06:
        r83 = <android.databinding.tool.LayoutBinder: java.lang.String[] sJavaLangClasses>;

        i0 = lengthof r83;

        i1 = 0;

     label07:
        if i1 >= i0 goto label08;

        r84 = r83[i1];

        $r54 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        r102 = new java.lang.StringBuilder;

        specialinvoke r102.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("java.lang.");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.StaticIdentifierExpr addImport(java.lang.String,java.lang.String,android.databinding.tool.store.Location)>(r84, $r57, null);

        i1 = i1 + 1;

        goto label07;

     label08:
        $r20 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r21 = virtualinvoke $r20.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getBindingTargetBundles()>();

        r85 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r85.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r48 = interfaceinvoke r85.<java.util.Iterator: java.lang.Object next()>();

        r86 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) $r48;

     label10:
        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r86);

        r87 = virtualinvoke r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.BindingTarget createBindingTarget(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)>(r86);

        $r49 = virtualinvoke r87.<android.databinding.tool.BindingTarget: java.lang.String getId()>();

        if $r49 == null goto label12;

        r88 = staticinvoke <android.databinding.tool.writer.LayoutBinderWriterKt: java.lang.String getReadableName(android.databinding.tool.BindingTarget)>(r87);

        $z9 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r88);

        if $z9 == 0 goto label11;

        $r52 = newarray (java.lang.Object)[1];

        $r52[0] = r88;

        staticinvoke <android.databinding.tool.util.L: void w(java.lang.String,java.lang.Object[])>("View field %s collides with a variable or import", $r52);

        goto label12;

     label11:
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r88);

        $r50 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        virtualinvoke $r50.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.ViewFieldExpr viewFieldExpr(android.databinding.tool.BindingTarget)>(r87);

     label12:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label15;

     label13:
        $r77 := @caughtexception;

        r89 = $r77;

     label14:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r89;

     label15:
        goto label09;

     label16:
        $r22 = r0.<android.databinding.tool.LayoutBinder: java.util.List mBindingTargets>;

        r90 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z5 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label30;

        $r31 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();

        r91 = (android.databinding.tool.BindingTarget) $r31;

     label18:
        $r32 = r91.<android.databinding.tool.BindingTarget: android.databinding.tool.store.ResourceBundle$BindingTargetBundle mBundle>;

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>($r32);

        r103 = new java.lang.StringBuilder;

        specialinvoke r103.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r0.<android.databinding.tool.LayoutBinder: java.lang.String getPackage()>();

        $r35 = virtualinvoke r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r37 = virtualinvoke r0.<android.databinding.tool.LayoutBinder: java.lang.String getImplementationName()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        r92 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = r91.<android.databinding.tool.BindingTarget: android.databinding.tool.store.ResourceBundle$BindingTargetBundle mBundle>;

        $r40 = virtualinvoke $r39.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.util.List getBindingBundleList()>();

        r93 = interfaceinvoke $r40.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z7 = interfaceinvoke r93.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label25;

        $r41 = interfaceinvoke r93.<java.util.Iterator: java.lang.Object next()>();

        r94 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle) $r41;

     label20:
        $r42 = virtualinvoke r94.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location getValueLocation()>();

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.store.Location)>($r42);

        $r43 = virtualinvoke r94.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String getExpr()>();

        $r44 = virtualinvoke r94.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location getValueLocation()>();

        r3 = virtualinvoke r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.Expr parse(java.lang.String,android.databinding.tool.store.Location,android.databinding.tool.BindingTarget)>($r43, $r44, r91);

        $r45 = virtualinvoke r94.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String getName()>();

        virtualinvoke r91.<android.databinding.tool.BindingTarget: void addBinding(java.lang.String,android.databinding.tool.expr.Expr)>($r45, r3);

        $z8 = virtualinvoke r94.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: boolean isTwoWay()>();

        if $z8 == 0 goto label21;

        $r46 = virtualinvoke r94.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String getName()>();

        virtualinvoke r91.<android.databinding.tool.BindingTarget: android.databinding.tool.InverseBinding addInverseBinding(java.lang.String,android.databinding.tool.expr.Expr,java.lang.String)>($r46, r3, r92);

     label21:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label24;

     label22:
        $r76 := @caughtexception;

        r4 = $r76;

     label23:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r4;

     label24:
        goto label19;

     label25:
        virtualinvoke r91.<android.databinding.tool.BindingTarget: void resolveCallbackParams()>();

        virtualinvoke r91.<android.databinding.tool.BindingTarget: void resolveTwoWayExpressions()>();

     label26:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label29;

     label27:
        $r78 := @caughtexception;

        r5 = $r78;

     label28:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r5;

     label29:
        goto label17;

     label30:
        $r23 = r0.<android.databinding.tool.LayoutBinder: java.util.List mBindingTargets>;

        r95 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label31:
        $z6 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label37;

        $r28 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        r96 = (android.databinding.tool.BindingTarget) $r28;

     label32:
        $r29 = r96.<android.databinding.tool.BindingTarget: android.databinding.tool.store.ResourceBundle$BindingTargetBundle mBundle>;

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>($r29);

        virtualinvoke r96.<android.databinding.tool.BindingTarget: void resolveMultiSetters()>();

        virtualinvoke r96.<android.databinding.tool.BindingTarget: void resolveListeners()>();

        $r30 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        virtualinvoke r96.<android.databinding.tool.BindingTarget: void injectSafeUnboxing(android.databinding.tool.expr.ExprModel)>($r30);

     label33:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label36;

     label34:
        $r74 := @caughtexception;

        r6 = $r74;

     label35:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r6;

     label36:
        goto label31;

     label37:
        r104 = new java.util.ArrayList;

        $r25 = r0.<android.databinding.tool.LayoutBinder: java.util.List mBindingTargets>;

        specialinvoke r104.<java.util.ArrayList: void <init>(java.util.Collection)>($r25);

        r0.<android.databinding.tool.LayoutBinder: java.util.List mSortedBindingTargets> = r104;

        $r27 = r0.<android.databinding.tool.LayoutBinder: java.util.List mSortedBindingTargets>;

        $r26 = <android.databinding.tool.LayoutBinder: java.util.Comparator COMPARE_FIELD_NAME>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r27, $r26);

     label38:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label41;

     label39:
        $r75 := @caughtexception;

        r7 = $r75;

     label40:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r7;

     label41:
        return;

        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label18 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label34 to label35 with label34;
        catch java.lang.Throwable from label01 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
    }

    public void resolveWhichExpressionsAreUsed()
    {
        android.databinding.tool.LayoutBinder r0;
        java.util.ArrayList r1, $r3;
        android.databinding.tool.Binding r2;
        java.util.List $r4, $r6, $r12;
        boolean $z0, $z1, $z2, $z3, $z5;
        int $i0, $i1;
        java.lang.Object $r5, $r7, $r11, $r13;
        android.databinding.tool.expr.Expr $r8, $r9, $r10, $r14, $r15, r19;
        java.util.Iterator r16, r18, r20;
        android.databinding.tool.BindingTarget r17;
        android.databinding.tool.expr.Dependency r21;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        $r4 = r0.<android.databinding.tool.LayoutBinder: java.util.List mBindingTargets>;

        r16 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (android.databinding.tool.BindingTarget) $r11;

        $r12 = virtualinvoke r17.<android.databinding.tool.BindingTarget: java.util.List getBindings()>();

        r18 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label3;

        $r13 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.Binding) $r13;

        $r14 = virtualinvoke r2.<android.databinding.tool.Binding: android.databinding.tool.expr.Expr getExpr()>();

        virtualinvoke $r14.<android.databinding.tool.expr.Expr: void markAsUsed()>();

        $r15 = virtualinvoke r2.<android.databinding.tool.Binding: android.databinding.tool.expr.Expr getExpr()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label2;

     label3:
        goto label1;

     label4:
        $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label8;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>($i1);

        r19 = (android.databinding.tool.expr.Expr) $r5;

        $r6 = virtualinvoke r19.<android.databinding.tool.expr.Expr: java.util.List getDependencies()>();

        r20 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r7 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (android.databinding.tool.expr.Dependency) $r7;

        $r8 = virtualinvoke r21.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getOther()>();

        $z3 = virtualinvoke $r8.<android.databinding.tool.expr.Expr: boolean isUsed()>();

        if $z3 != 0 goto label6;

        $r9 = virtualinvoke r21.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getOther()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = virtualinvoke r21.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getOther()>();

        virtualinvoke $r10.<android.databinding.tool.expr.Expr: void markAsUsed()>();

     label6:
        goto label5;

     label7:
        goto label4;

     label8:
        return;
    }

    public android.databinding.tool.expr.IdentifierExpr addVariable(java.lang.String, java.lang.String, android.databinding.tool.store.Location, boolean)
    {
        android.databinding.tool.LayoutBinder r0;
        java.lang.String r1, r2;
        android.databinding.tool.store.Location r3;
        boolean z0, $z1, $z2;
        android.databinding.tool.expr.IdentifierExpr r4;
        java.util.HashMap $r5, $r8;
        java.lang.Object[] $r6;
        android.databinding.tool.expr.ExprModel $r7;

        r0 := @this: android.databinding.tool.LayoutBinder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.databinding.tool.store.Location;

        z0 := @parameter3: boolean;

        $r5 = r0.<android.databinding.tool.LayoutBinder: java.util.HashMap mUserDefinedVariables>;

        $z1 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r1;

        $r6[1] = r2;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z2, "%s has already been defined as %s", $r6);

        $r7 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        r4 = virtualinvoke $r7.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.IdentifierExpr identifier(java.lang.String)>(r1);

        virtualinvoke r4.<android.databinding.tool.expr.IdentifierExpr: void setUserDefinedType(java.lang.String)>(r2);

        virtualinvoke r4.<android.databinding.tool.expr.IdentifierExpr: void enableDirectInvalidation()>();

        if r3 == null goto label3;

        virtualinvoke r4.<android.databinding.tool.expr.IdentifierExpr: void addLocation(android.databinding.tool.store.Location)>(r3);

     label3:
        $r8 = r0.<android.databinding.tool.LayoutBinder: java.util.HashMap mUserDefinedVariables>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        if z0 == 0 goto label4;

        virtualinvoke r4.<android.databinding.tool.expr.IdentifierExpr: void setDeclared()>();

     label4:
        return r4;
    }

    public java.util.HashMap getUserDefinedVariables()
    {
        android.databinding.tool.LayoutBinder r0;
        java.util.HashMap $r1;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: java.util.HashMap mUserDefinedVariables>;

        return $r1;
    }

    public android.databinding.tool.BindingTarget createBindingTarget(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r1;
        android.databinding.tool.BindingTarget r2, $r3;
        java.util.List $r4;
        android.databinding.tool.expr.ExprModel $r5;

        r0 := @this: android.databinding.tool.LayoutBinder;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r3 = new android.databinding.tool.BindingTarget;

        specialinvoke $r3.<android.databinding.tool.BindingTarget: void <init>(android.databinding.tool.store.ResourceBundle$BindingTargetBundle)>(r1);

        r2 = $r3;

        $r4 = r0.<android.databinding.tool.LayoutBinder: java.util.List mBindingTargets>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r5 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        virtualinvoke r2.<android.databinding.tool.BindingTarget: void setModel(android.databinding.tool.expr.ExprModel)>($r5);

        return r2;
    }

    public android.databinding.tool.expr.Expr parse(java.lang.String, android.databinding.tool.store.Location, android.databinding.tool.BindingTarget)
    {
        android.databinding.tool.LayoutBinder r0;
        java.lang.String r1;
        android.databinding.tool.store.Location r2;
        android.databinding.tool.BindingTarget r3;
        android.databinding.tool.expr.Expr r4;
        android.databinding.tool.ExpressionParser $r5;

        r0 := @this: android.databinding.tool.LayoutBinder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.databinding.tool.store.Location;

        r3 := @parameter2: android.databinding.tool.BindingTarget;

        $r5 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.ExpressionParser mExpressionParser>;

        r4 = virtualinvoke $r5.<android.databinding.tool.ExpressionParser: android.databinding.tool.expr.Expr parse(java.lang.String,android.databinding.tool.store.Location,android.databinding.tool.BindingTarget)>(r1, r2, r3);

        virtualinvoke r4.<android.databinding.tool.expr.Expr: void markAsBindingExpression()>();

        return r4;
    }

    public java.util.List getBindingTargets()
    {
        android.databinding.tool.LayoutBinder r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: java.util.List mBindingTargets>;

        return $r1;
    }

    public java.util.List getSortedTargets()
    {
        android.databinding.tool.LayoutBinder r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: java.util.List mSortedBindingTargets>;

        return $r1;
    }

    public boolean isEmpty()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.expr.ExprModel $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        $i0 = virtualinvoke $r1.<android.databinding.tool.expr.ExprModel: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.databinding.tool.expr.ExprModel getModel()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.expr.ExprModel $r1;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        return $r1;
    }

    private void ensureWriter()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.writer.LayoutBinderWriter $r1, $r2;
        android.databinding.tool.reflection.ModelAnalyzer $r3;
        android.databinding.tool.LibTypes $r4;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.writer.LayoutBinderWriter mWriter>;

        if $r1 != null goto label1;

        $r2 = new android.databinding.tool.writer.LayoutBinderWriter;

        $r3 = staticinvoke <android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.ModelAnalyzer getInstance()>();

        $r4 = $r3.<android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.LibTypes libTypes>;

        specialinvoke $r2.<android.databinding.tool.writer.LayoutBinderWriter: void <init>(android.databinding.tool.LayoutBinder,android.databinding.tool.LibTypes)>(r0, $r4);

        r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.writer.LayoutBinderWriter mWriter> = $r2;

     label1:
        return;
    }

    public void sealModel()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.expr.ExprModel $r1;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel mExprModel>;

        virtualinvoke $r1.<android.databinding.tool.expr.ExprModel: void seal()>();

        return;
    }

    public java.lang.String writeViewBinderBaseClass(boolean, java.util.List)
    {
        android.databinding.tool.LayoutBinder r0;
        boolean z0;
        java.util.List r1;
        android.databinding.tool.writer.LayoutBinderWriter $r2;
        java.lang.String $r3;

        r0 := @this: android.databinding.tool.LayoutBinder;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<android.databinding.tool.LayoutBinder: void ensureWriter()>();

        $r2 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.writer.LayoutBinderWriter mWriter>;

        $r3 = virtualinvoke $r2.<android.databinding.tool.writer.LayoutBinderWriter: java.lang.String writeBaseClass(boolean,java.util.List)>(z0, r1);

        return $r3;
    }

    public java.lang.String writeViewBinder(int)
    {
        android.databinding.tool.LayoutBinder r0;
        int i0;
        java.lang.String $r1, $r3, $r6;
        java.lang.Object[] $r2, $r4;
        android.databinding.tool.writer.LayoutBinderWriter $r5;

        r0 := @this: android.databinding.tool.LayoutBinder;

        i0 := @parameter0: int;

        specialinvoke r0.<android.databinding.tool.LayoutBinder: void ensureWriter()>();

        $r1 = virtualinvoke r0.<android.databinding.tool.LayoutBinder: java.lang.String getPackage()>();

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r1, "package cannot be null", $r2);

        $r3 = virtualinvoke r0.<android.databinding.tool.LayoutBinder: java.lang.String getClassName()>();

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r3, "base class name cannot be null", $r4);

        $r5 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.writer.LayoutBinderWriter mWriter>;

        $r6 = virtualinvoke $r5.<android.databinding.tool.writer.LayoutBinderWriter: java.lang.String write(int)>(i0);

        return $r6;
    }

    public java.lang.String getPackage()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r1;
        java.lang.String $r2;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r2 = virtualinvoke $r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassPackage()>();

        return $r2;
    }

    public boolean isMerge()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r1;
        boolean $z0;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $z0 = virtualinvoke $r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean isMerge()>();

        return $z0;
    }

    public java.lang.String getModulePackage()
    {
        android.databinding.tool.LayoutBinder r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: java.lang.String mModulePackage>;

        return $r1;
    }

    public java.lang.String getLayoutname()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r1;
        java.lang.String $r2;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r2 = virtualinvoke $r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        return $r2;
    }

    public java.lang.String getImplementationName()
    {
        android.databinding.tool.LayoutBinder r0;
        boolean $z0, $z1;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $z0 = r0.<android.databinding.tool.LayoutBinder: boolean mEnableV2>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.databinding.tool.LayoutBinder: boolean hasVariations()>();

        if $z1 == 0 goto label2;

     label1:
        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r2 = virtualinvoke $r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String createImplClassNameWithConfig()>();

        return $r2;

     label2:
        $r3 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r4 = virtualinvoke $r3.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassName()>();

        return $r4;
    }

    public boolean enableV2()
    {
        android.databinding.tool.LayoutBinder r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $z0 = r0.<android.databinding.tool.LayoutBinder: boolean mEnableV2>;

        return $z0;
    }

    public java.lang.String getClassName()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r1;
        java.lang.String $r2;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r2 = virtualinvoke $r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassName()>();

        return $r2;
    }

    public java.lang.String getTag()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r1;
        java.lang.String $r2;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r2 = virtualinvoke $r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String createTag()>();

        return $r2;
    }

    public boolean hasVariations()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r1;
        boolean $z0;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $z0 = virtualinvoke $r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean hasVariations()>();

        return $z0;
    }

    public java.lang.String provideScopeFilePath()
    {
        android.databinding.tool.LayoutBinder r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r1;
        java.lang.String $r2;

        r0 := @this: android.databinding.tool.LayoutBinder;

        $r1 = r0.<android.databinding.tool.LayoutBinder: android.databinding.tool.store.ResourceBundle$LayoutFileBundle mBundle>;

        $r2 = virtualinvoke $r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getAbsoluteFilePath()>();

        return $r2;
    }

    static void <clinit>()
    {
        android.databinding.tool.LayoutBinder$1 $r0;
        java.lang.String[] $r1;

        $r0 = new android.databinding.tool.LayoutBinder$1;

        specialinvoke $r0.<android.databinding.tool.LayoutBinder$1: void <init>()>();

        <android.databinding.tool.LayoutBinder: java.util.Comparator COMPARE_FIELD_NAME> = $r0;

        $r1 = newarray (java.lang.String)[98];

        $r1[0] = "Deprecated";

        $r1[1] = "Override";

        $r1[2] = "SafeVarargs";

        $r1[3] = "SuppressWarnings";

        $r1[4] = "Appendable";

        $r1[5] = "AutoCloseable";

        $r1[6] = "CharSequence";

        $r1[7] = "Cloneable";

        $r1[8] = "Comparable";

        $r1[9] = "Iterable";

        $r1[10] = "Readable";

        $r1[11] = "Runnable";

        $r1[12] = "Thread.UncaughtExceptionHandler";

        $r1[13] = "Boolean";

        $r1[14] = "Byte";

        $r1[15] = "Character";

        $r1[16] = "Character.Subset";

        $r1[17] = "Character.UnicodeBlock";

        $r1[18] = "Class";

        $r1[19] = "ClassLoader";

        $r1[20] = "Compiler";

        $r1[21] = "Double";

        $r1[22] = "Enum";

        $r1[23] = "Float";

        $r1[24] = "InheritableThreadLocal";

        $r1[25] = "Integer";

        $r1[26] = "Long";

        $r1[27] = "Math";

        $r1[28] = "Number";

        $r1[29] = "Object";

        $r1[30] = "Package";

        $r1[31] = "Process";

        $r1[32] = "ProcessBuilder";

        $r1[33] = "Runtime";

        $r1[34] = "RuntimePermission";

        $r1[35] = "SecurityManager";

        $r1[36] = "Short";

        $r1[37] = "StackTraceElement";

        $r1[38] = "StrictMath";

        $r1[39] = "String";

        $r1[40] = "StringBuffer";

        $r1[41] = "StringBuilder";

        $r1[42] = "System";

        $r1[43] = "Thread";

        $r1[44] = "ThreadGroup";

        $r1[45] = "ThreadLocal";

        $r1[46] = "Throwable";

        $r1[47] = "Void";

        $r1[48] = "Thread.State";

        $r1[49] = "ArithmeticException";

        $r1[50] = "ArrayIndexOutOfBoundsException";

        $r1[51] = "ArrayStoreException";

        $r1[52] = "ClassCastException";

        $r1[53] = "ClassNotFoundException";

        $r1[54] = "CloneNotSupportedException";

        $r1[55] = "EnumConstantNotPresentException";

        $r1[56] = "Exception";

        $r1[57] = "IllegalAccessException";

        $r1[58] = "IllegalArgumentException";

        $r1[59] = "IllegalMonitorStateException";

        $r1[60] = "IllegalStateException";

        $r1[61] = "IllegalThreadStateException";

        $r1[62] = "IndexOutOfBoundsException";

        $r1[63] = "InstantiationException";

        $r1[64] = "InterruptedException";

        $r1[65] = "NegativeArraySizeException";

        $r1[66] = "NoSuchFieldException";

        $r1[67] = "NoSuchMethodException";

        $r1[68] = "NullPointerException";

        $r1[69] = "NumberFormatException";

        $r1[70] = "ReflectiveOperationException";

        $r1[71] = "RuntimeException";

        $r1[72] = "SecurityException";

        $r1[73] = "StringIndexOutOfBoundsException";

        $r1[74] = "TypeNotPresentException";

        $r1[75] = "UnsupportedOperationException";

        $r1[76] = "AbstractMethodError";

        $r1[77] = "AssertionError";

        $r1[78] = "ClassCircularityError";

        $r1[79] = "ClassFormatError";

        $r1[80] = "Error";

        $r1[81] = "ExceptionInInitializerError";

        $r1[82] = "IllegalAccessError";

        $r1[83] = "IncompatibleClassChangeError";

        $r1[84] = "InstantiationError";

        $r1[85] = "InternalError";

        $r1[86] = "LinkageError";

        $r1[87] = "NoClassDefFoundError";

        $r1[88] = "NoSuchFieldError";

        $r1[89] = "NoSuchMethodError";

        $r1[90] = "OutOfMemoryError";

        $r1[91] = "StackOverflowError";

        $r1[92] = "ThreadDeath";

        $r1[93] = "UnknownError";

        $r1[94] = "UnsatisfiedLinkError";

        $r1[95] = "UnsupportedClassVersionError";

        $r1[96] = "VerifyError";

        $r1[97] = "VirtualMachineError";

        <android.databinding.tool.LayoutBinder: java.lang.String[] sJavaLangClasses> = $r1;

        return;
    }

android.databinding.tool.LayoutBinder$1
    void <init>()
    {
        android.databinding.tool.LayoutBinder$1 r0;

        r0 := @this: android.databinding.tool.LayoutBinder$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(android.databinding.tool.BindingTarget, android.databinding.tool.BindingTarget)
    {
        android.databinding.tool.LayoutBinder$1 r0;
        android.databinding.tool.BindingTarget r1, r2;
        java.lang.String r3, r4;
        int $i0;

        r0 := @this: android.databinding.tool.LayoutBinder$1;

        r1 := @parameter0: android.databinding.tool.BindingTarget;

        r2 := @parameter1: android.databinding.tool.BindingTarget;

        r3 = staticinvoke <android.databinding.tool.writer.LayoutBinderWriterKt: java.lang.String getFieldName(android.databinding.tool.BindingTarget)>(r1);

        r4 = staticinvoke <android.databinding.tool.writer.LayoutBinderWriterKt: java.lang.String getFieldName(android.databinding.tool.BindingTarget)>(r2);

        $i0 = virtualinvoke r3.<java.lang.String: int compareTo(java.lang.String)>(r4);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.databinding.tool.LayoutBinder$1 r0;
        java.lang.Object r1, r2;
        android.databinding.tool.BindingTarget $r3, $r4;
        int $i0;

        r0 := @this: android.databinding.tool.LayoutBinder$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.databinding.tool.BindingTarget) r1;

        $r3 = (android.databinding.tool.BindingTarget) r2;

        $i0 = virtualinvoke r0.<android.databinding.tool.LayoutBinder$1: int compare(android.databinding.tool.BindingTarget,android.databinding.tool.BindingTarget)>($r4, $r3);

        return $i0;
    }

