androidx.ui.node.UiComposerKt
    private static final java.lang.Void invalidNode(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String r1, $r3, $r5;
        boolean z0;
        java.lang.Class $r2;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r6;

        r0 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        r1 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Unsupported node type ", $r3);

        z0 = 0;

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;
    }

    public static final java.lang.Void access$invalidNode(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <androidx.ui.node.UiComposerKt: java.lang.Void invalidNode(java.lang.Object)>(r0);

        throw null;
    }

