android.databinding.tool.expr.Expr
<android.databinding.tool.expr.Expr: int NO_ID>
<android.databinding.tool.expr.Expr: java.util.List mChildren>
<android.databinding.tool.expr.Expr: java.util.List mParents>
<android.databinding.tool.expr.Expr: java.lang.Boolean mIsDynamic>
<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass mResolvedType>
<android.databinding.tool.expr.Expr: java.lang.String mUniqueKey>
<android.databinding.tool.expr.Expr: java.util.List mDependencies>
<android.databinding.tool.expr.Expr: java.util.List mDependants>
<android.databinding.tool.expr.Expr: int mId>
<android.databinding.tool.expr.Expr: int mRequirementId>
<android.databinding.tool.expr.Expr: int mVersion>
<android.databinding.tool.expr.Expr: boolean mCanBeInvalidated>
<android.databinding.tool.expr.Expr: boolean mUnboxedAChild>
<android.databinding.tool.expr.Expr: java.util.List mLocations>
<android.databinding.tool.expr.Expr: java.util.BitSet mInvalidFlags>
<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel>
<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadFlags>
<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar>
<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadWithConditionals>
<android.databinding.tool.expr.Expr: boolean mIsBindingExpression>
<android.databinding.tool.expr.Expr: boolean mRead>
<android.databinding.tool.expr.Expr: boolean mIsUsed>
<android.databinding.tool.expr.Expr: boolean mIsUsedInCallback>
<android.databinding.tool.expr.Expr: boolean mUnwrapObservableFields>
<android.databinding.tool.expr.Expr: java.lang.String KEY_JOIN>
<android.databinding.tool.expr.Expr: java.lang.String KEY_JOIN_START>
<android.databinding.tool.expr.Expr: java.lang.String KEY_JOIN_END>
<android.databinding.tool.expr.Expr: java.lang.String KEY_START>
<android.databinding.tool.expr.Expr: java.lang.String KEY_END>
<android.databinding.tool.expr.Expr: java.util.BitSet mConditionalFlags>
<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr$Node mCalculationPaths>
    void <init>(java.lang.Iterable)
    {
        android.databinding.tool.expr.Expr r0, r3;
        java.lang.Iterable r1;
        java.util.Iterator r2;
        java.util.ArrayList $r4, $r5, $r6, $r7;
        java.util.BitSet $r8;
        boolean $z0;
        java.lang.Object $r9;
        java.util.List $r10;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mChildren> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mParents> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mDependants> = $r6;

        r0.<android.databinding.tool.expr.Expr: int mId> = -1;

        r0.<android.databinding.tool.expr.Expr: int mRequirementId> = -1;

        r0.<android.databinding.tool.expr.Expr: int mVersion> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mCanBeInvalidated> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild> = 0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mLocations> = $r7;

        $r8 = new java.util.BitSet;

        specialinvoke $r8.<java.util.BitSet: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar> = $r8;

        r0.<android.databinding.tool.expr.Expr: boolean mIsBindingExpression> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mIsUsed> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mIsUsedInCallback> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mUnwrapObservableFields> = 1;

        r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr$Node mCalculationPaths> = null;

        r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Expr) $r9;

        $r10 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        specialinvoke r0.<android.databinding.tool.expr.Expr: void addParents()>();

        return;
    }

    transient void <init>(android.databinding.tool.expr.Expr[])
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.expr.Expr[] r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        java.util.BitSet $r6;
        java.util.List $r7;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.Expr[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mChildren> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mParents> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mDependants> = $r4;

        r0.<android.databinding.tool.expr.Expr: int mId> = -1;

        r0.<android.databinding.tool.expr.Expr: int mRequirementId> = -1;

        r0.<android.databinding.tool.expr.Expr: int mVersion> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mCanBeInvalidated> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild> = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mLocations> = $r5;

        $r6 = new java.util.BitSet;

        specialinvoke $r6.<java.util.BitSet: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar> = $r6;

        r0.<android.databinding.tool.expr.Expr: boolean mIsBindingExpression> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mIsUsed> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mIsUsedInCallback> = 0;

        r0.<android.databinding.tool.expr.Expr: boolean mUnwrapObservableFields> = 1;

        r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr$Node mCalculationPaths> = null;

        $r7 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r7, r1);

        specialinvoke r0.<android.databinding.tool.expr.Expr: void addParents()>();

        return;
    }

    public int getId()
    {
        android.databinding.tool.expr.Expr r0;
        int $i0, $i1;
        java.lang.Object[] $r1;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $i0 = r0.<android.databinding.tool.expr.Expr: int mId>;

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z0, "if getId is called on an expression, it should have an id: %s", $r1);

        $i1 = r0.<android.databinding.tool.expr.Expr: int mId>;

        return $i1;
    }

    public void setId(int)
    {
        android.databinding.tool.expr.Expr r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        i0 := @parameter0: int;

        $i1 = r0.<android.databinding.tool.expr.Expr: int mId>;

        if $i1 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z0, "ID is already set on %s", $r1);

        r0.<android.databinding.tool.expr.Expr: int mId> = i0;

        return;
    }

    public void addLocation(android.databinding.tool.store.Location)
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.store.Location r1;
        java.util.List $r2;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.store.Location;

        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.List mLocations>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getLocations()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.List mLocations>;

        return $r1;
    }

    public android.databinding.tool.expr.ExprModel getModel()
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.expr.ExprModel $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel>;

        return $r1;
    }

    public java.util.BitSet getInvalidFlags()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.BitSet $r1, $r2, $r3;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mInvalidFlags>;

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet resolveInvalidFlags()>();

        r0.<android.databinding.tool.expr.Expr: java.util.BitSet mInvalidFlags> = $r3;

     label1:
        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mInvalidFlags>;

        return $r2;
    }

    private java.util.BitSet resolveInvalidFlags()
    {
        android.databinding.tool.expr.Expr r0, $r9;
        java.util.BitSet r1, $r5, $r10;
        java.util.Iterator r2;
        android.databinding.tool.expr.Dependency r3;
        android.databinding.tool.expr.ExprModel $r4;
        java.lang.Object $r6, $r8;
        boolean $z0, $z1;
        java.util.List $r7;
        int $i0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r4 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel>;

        $r5 = virtualinvoke $r4.<android.databinding.tool.expr.ExprModel: java.util.BitSet getInvalidateAnyBitSet()>();

        $r6 = virtualinvoke $r5.<java.util.BitSet: java.lang.Object clone()>();

        r1 = (java.util.BitSet) $r6;

        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mCanBeInvalidated>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.databinding.tool.expr.Expr: int getId()>();

        virtualinvoke r1.<java.util.BitSet: void set(int,boolean)>($i0, 1);

     label1:
        $r7 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependencies()>();

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Dependency) $r8;

        $r9 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getOther()>();

        $r10 = virtualinvoke $r9.<android.databinding.tool.expr.Expr: java.util.BitSet getInvalidFlags()>();

        virtualinvoke r1.<java.util.BitSet: void or(java.util.BitSet)>($r10);

        goto label2;

     label3:
        return r1;
    }

    public void markAsBindingExpression()
    {
        android.databinding.tool.expr.Expr r0;

        r0 := @this: android.databinding.tool.expr.Expr;

        r0.<android.databinding.tool.expr.Expr: boolean mIsBindingExpression> = 1;

        return;
    }

    public boolean isBindingExpression()
    {
        android.databinding.tool.expr.Expr r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mIsBindingExpression>;

        return $z0;
    }

    public boolean canBeEvaluatedToAVariable()
    {
        android.databinding.tool.expr.Expr r0;

        r0 := @this: android.databinding.tool.expr.Expr;

        return 1;
    }

    public boolean isObservable()
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.reflection.ModelClass $r1;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z0 = virtualinvoke $r1.<android.databinding.tool.reflection.ModelClass: boolean isObservable()>();

        return $z0;
    }

    public java.lang.String getUpdateRegistrationCall()
    {
        android.databinding.tool.expr.Expr r0;
        boolean $z0, $z1;
        android.databinding.tool.reflection.ModelClass $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = virtualinvoke r0.<android.databinding.tool.expr.Expr: boolean isObservable()>();

        if $z0 != 0 goto label1;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("The expression isn\'t observable!", $r2);

     label1:
        $r1 = virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z1 = virtualinvoke $r1.<android.databinding.tool.reflection.ModelClass: boolean isLiveData()>();

        if $z1 == 0 goto label2;

        return "updateLiveDataRegistration";

     label2:
        return "updateRegistration";
    }

    public void setUnwrapObservableFields(boolean)
    {
        android.databinding.tool.expr.Expr r0;
        boolean z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        z0 := @parameter0: boolean;

        r0.<android.databinding.tool.expr.Expr: boolean mUnwrapObservableFields> = z0;

        return;
    }

    public android.databinding.tool.expr.Expr resolveListeners(android.databinding.tool.reflection.ModelClass, android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.Expr r0, r2, r3;
        android.databinding.tool.reflection.ModelClass r1;
        java.util.List $r4, $r5;
        int $i0, i1;
        java.lang.Object $r6;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelClass;

        r2 := @parameter1: android.databinding.tool.expr.Expr;

        $r4 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r5 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.databinding.tool.expr.Expr) $r6;

        virtualinvoke r3.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr resolveListeners(android.databinding.tool.reflection.ModelClass,android.databinding.tool.expr.Expr)>(r1, r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        virtualinvoke r0.<android.databinding.tool.expr.Expr: void resetResolvedType()>();

        return r0;
    }

    public void safeUnboxChild(android.databinding.tool.expr.ExprModel, android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.Expr r0, r2;
        android.databinding.tool.expr.ExprModel r1;
        int i0;
        android.databinding.tool.reflection.ModelClass $r3, $r4, $r5;
        java.lang.Object[] $r6;
        java.lang.String $r7;
        java.util.List $r8, $r9, $r10;
        android.databinding.tool.expr.MethodCallExpr $r11;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        r2 := @parameter1: android.databinding.tool.expr.Expr;

        $r3 = virtualinvoke r2.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $r4 = virtualinvoke $r3.<android.databinding.tool.reflection.ModelClass: android.databinding.tool.reflection.ModelClass unbox()>();

        $r5 = virtualinvoke r2.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        if $r4 != $r5 goto label1;

        return;

     label1:
        r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild> = 1;

        $r7 = <android.databinding.tool.processing.ErrorMessages: java.lang.String BOXED_VALUE_CASTING>;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r2;

        $r6[1] = r0;

        $r6[2] = r2;

        staticinvoke <android.databinding.tool.util.L: void w(java.lang.String,java.lang.Object[])>($r7, $r6);

        $r8 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getChildren()>();

        i0 = interfaceinvoke $r8.<java.util.List: int indexOf(java.lang.Object)>(r2);

        $r9 = virtualinvoke r2.<android.databinding.tool.expr.Expr: java.util.List getParents()>();

        interfaceinvoke $r9.<java.util.List: boolean remove(java.lang.Object)>(r0);

        $r10 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getChildren()>();

        $r11 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MethodCallExpr safeUnbox(android.databinding.tool.expr.Expr)>(r2);

        interfaceinvoke $r10.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r11);

        return;
    }

    public android.databinding.tool.expr.Expr resolveTwoWayExpressions(android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.Expr r0, r1, r2;
        java.util.List $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.Expr;

        $r3 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.databinding.tool.expr.Expr) $r5;

        virtualinvoke r2.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr resolveTwoWayExpressions(android.databinding.tool.expr.Expr)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        return r0;
    }

    protected void resetResolvedType()
    {
        android.databinding.tool.expr.Expr r0;

        r0 := @this: android.databinding.tool.expr.Expr;

        r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass mResolvedType> = null;

        return;
    }

    public java.util.BitSet getShouldReadFlags()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.BitSet $r1, $r2, $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadFlags>;

        if $r1 != null goto label1;

        virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet getShouldReadFlagsWithConditionals()>();

        $r4 = specialinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet resolveShouldReadFlags()>();

        r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadFlags> = $r4;

     label1:
        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadFlags>;

        return $r2;
    }

    public java.util.BitSet getShouldReadFlagsWithConditionals()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.BitSet $r1, $r2, $r3;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadWithConditionals>;

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet resolveShouldReadWithConditionals()>();

        r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadWithConditionals> = $r3;

     label1:
        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadWithConditionals>;

        return $r2;
    }

    public void setModel(android.databinding.tool.expr.ExprModel)
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.expr.ExprModel r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel> = r1;

        return;
    }

    private java.util.BitSet resolveShouldReadWithConditionals()
    {
        android.databinding.tool.expr.Expr r0, $r7, $r8, $r9;
        java.util.BitSet r1, $r4, $r10, $r11;
        java.util.Iterator r2;
        android.databinding.tool.expr.Dependency r3;
        boolean $z0, $z1, $z2;
        java.util.List $r5;
        java.lang.Object $r6;
        int $i0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r4 = new java.util.BitSet;

        specialinvoke $r4.<java.util.BitSet: void <init>()>();

        r1 = $r4;

        $z0 = virtualinvoke r0.<android.databinding.tool.expr.Expr: boolean isBindingExpression()>();

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet getInvalidFlags()>();

        virtualinvoke r1.<java.util.BitSet: void or(java.util.BitSet)>($r11);

     label1:
        $r5 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependants()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Dependency) $r6;

        $r7 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getCondition()>();

        if $r7 != null goto label3;

        $r9 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $r10 = virtualinvoke $r9.<android.databinding.tool.expr.Expr: java.util.BitSet getShouldReadFlagsWithConditionals()>();

        virtualinvoke r1.<java.util.BitSet: void or(java.util.BitSet)>($r10);

        goto label4;

     label3:
        $r8 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $z1 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: boolean getExpectedOutput()>();

        $i0 = virtualinvoke $r8.<android.databinding.tool.expr.Expr: int getRequirementFlagIndex(boolean)>($z1);

        virtualinvoke r1.<java.util.BitSet: void set(int)>($i0);

     label4:
        goto label2;

     label5:
        return r1;
    }

    private java.util.BitSet resolveShouldReadFlags()
    {
        android.databinding.tool.expr.Expr r0, $r9, $r11;
        java.util.BitSet r1, $r4, $r6, $r7, $r10, $r12;
        java.util.Iterator r2;
        android.databinding.tool.expr.Dependency r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r5;
        java.lang.Object $r8;
        int $i0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r4 = new java.util.BitSet;

        specialinvoke $r4.<java.util.BitSet: void <init>()>();

        r1 = $r4;

        $z1 = virtualinvoke r0.<android.databinding.tool.expr.Expr: boolean isRead()>();

        if $z1 == 0 goto label1;

        return r1;

     label1:
        $z2 = virtualinvoke r0.<android.databinding.tool.expr.Expr: boolean isBindingExpression()>();

        if $z2 == 0 goto label2;

        $r12 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet getInvalidFlags()>();

        virtualinvoke r1.<java.util.BitSet: void or(java.util.BitSet)>($r12);

     label2:
        $r5 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependants()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Dependency) $r8;

        z0 = staticinvoke <android.databinding.tool.expr.Expr: boolean isUnreadElevated(android.databinding.tool.expr.Dependency)>(r3);

        $z3 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: boolean isConditional()>();

        if $z3 == 0 goto label4;

        goto label3;

     label4:
        if z0 == 0 goto label5;

        $r11 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $z4 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: boolean getExpectedOutput()>();

        $i0 = virtualinvoke $r11.<android.databinding.tool.expr.Expr: int getRequirementFlagIndex(boolean)>($z4);

        virtualinvoke r1.<java.util.BitSet: void set(int)>($i0);

        goto label6;

     label5:
        $r9 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $r10 = virtualinvoke $r9.<android.databinding.tool.expr.Expr: java.util.BitSet getShouldReadFlags()>();

        virtualinvoke r1.<java.util.BitSet: void or(java.util.BitSet)>($r10);

     label6:
        goto label3;

     label7:
        $r6 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadWithConditionals>;

        virtualinvoke r1.<java.util.BitSet: void and(java.util.BitSet)>($r6);

        $r7 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar>;

        virtualinvoke r1.<java.util.BitSet: void andNot(java.util.BitSet)>($r7);

        return r1;
    }

    private static boolean isUnreadElevated(android.databinding.tool.expr.Dependency)
    {
        android.databinding.tool.expr.Dependency r0;
        boolean $z0, $z1, $z2;
        android.databinding.tool.expr.Expr $r1;

        r0 := @parameter0: android.databinding.tool.expr.Dependency;

        $z0 = virtualinvoke r0.<android.databinding.tool.expr.Dependency: boolean isElevated()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $z1 = virtualinvoke $r1.<android.databinding.tool.expr.Expr: boolean isRead()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private void addParents()
    {
        android.databinding.tool.expr.Expr r0, r2;
        java.util.Iterator r1;
        java.util.List $r3, $r5;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r3 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.expr.Expr) $r4;

        $r5 = r2.<android.databinding.tool.expr.Expr: java.util.List mParents>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r0);

        goto label1;

     label2:
        return;
    }

    public void onSwappedWith(android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.Expr r0, r1, r3;
        java.util.Iterator r2;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.Expr;

        $r4 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Expr) $r5;

        specialinvoke r3.<android.databinding.tool.expr.Expr: void onParentSwapped(android.databinding.tool.expr.Expr,android.databinding.tool.expr.Expr)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    private void onParentSwapped(android.databinding.tool.expr.Expr, android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.Expr r0, r1, r2;
        java.util.List $r3, $r5, $r6;
        boolean $z0;
        java.lang.Object[] $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.Expr;

        r2 := @parameter1: android.databinding.tool.expr.Expr;

        $r3 = r0.<android.databinding.tool.expr.Expr: java.util.List mParents>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r1;

        $r5 = r0.<android.databinding.tool.expr.Expr: java.util.List mParents>;

        $r4[1] = $r5;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z0, "trying to remove non-existent parent %s from %s", $r4);

        $r6 = r0.<android.databinding.tool.expr.Expr: java.util.List mParents>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public java.util.List getChildren()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        return $r1;
    }

    public java.util.List getParents()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.List mParents>;

        return $r1;
    }

    public boolean isDynamic()
    {
        android.databinding.tool.expr.Expr r0;
        java.lang.Boolean $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.lang.Boolean mIsDynamic>;

        if $r1 != null goto label1;

        $z1 = specialinvoke r0.<android.databinding.tool.expr.Expr: boolean isAnyChildDynamic()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        r0.<android.databinding.tool.expr.Expr: java.lang.Boolean mIsDynamic> = $r3;

     label1:
        $r2 = r0.<android.databinding.tool.expr.Expr: java.lang.Boolean mIsDynamic>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private boolean isAnyChildDynamic()
    {
        android.databinding.tool.expr.Expr r0, r2;
        java.util.Iterator r1;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r3 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.expr.Expr) $r4;

        $z1 = virtualinvoke r2.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public final android.databinding.tool.reflection.ModelClass getResolvedType()
    {
        android.databinding.tool.expr.Expr r0;
        java.lang.Throwable r1, $r8;
        android.databinding.tool.reflection.ModelClass $r2, $r3, $r5, $r6;
        boolean $z0;
        android.databinding.tool.reflection.ModelAnalyzer $r4;
        java.lang.Object[] $r7;
        android.databinding.tool.processing.scopes.ScopeProvider r9;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r2 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass mResolvedType>;

        if $r2 != null goto label4;

        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mUnwrapObservableFields>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.databinding.tool.expr.Expr: void unwrapObservableFieldChildren()>();

        r0.<android.databinding.tool.expr.Expr: boolean mUnwrapObservableFields> = 0;

     label1:
        r9 = (android.databinding.tool.processing.scopes.ScopeProvider) r0;

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r9);

        $r4 = staticinvoke <android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.ModelAnalyzer getInstance()>();

        $r5 = virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass resolveType(android.databinding.tool.reflection.ModelAnalyzer)>($r4);

        r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass mResolvedType> = $r5;

        $r6 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass mResolvedType>;

        if $r6 != null goto label2;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r0;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("Cannot resolve type for %s", $r7);

     label2:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label4;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r1;

     label4:
        $r3 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass mResolvedType>;

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.util.List toExecutionPath(android.databinding.tool.solver.ExecutionPath)
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.solver.ExecutionPath r1;
        java.util.ArrayList r2, $r3;
        java.util.List $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.solver.ExecutionPath;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = $r3;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List toExecutionPath(java.util.List)>(r2);

        return $r4;
    }

    public java.util.List toExecutionPath(java.util.List)
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List r1, $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.util.List;

        $r2 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getChildren()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List addJustMeToExecutionPath(java.util.List)>(r1);

        return $r5;

     label1:
        $r3 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getChildren()>();

        $r4 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List toExecutionPathInOrder(java.util.List,java.util.List)>(r1, $r3);

        return $r4;
    }

    protected final java.util.List addJustMeToExecutionPath(java.util.List)
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        android.databinding.tool.solver.ExecutionPath r4, $r7;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.util.List;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.databinding.tool.solver.ExecutionPath) $r6;

        $r7 = virtualinvoke r4.<android.databinding.tool.solver.ExecutionPath: android.databinding.tool.solver.ExecutionPath addPath(android.databinding.tool.expr.Expr)>(r0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return r2;
    }

    protected final transient java.util.List toExecutionPathInOrder(java.util.List, android.databinding.tool.expr.Expr[])
    {
        android.databinding.tool.expr.Expr r0, r3;
        java.util.List r1, r7;
        android.databinding.tool.expr.Expr[] r2, r8;
        java.util.ArrayList $r4, r9;
        int $i0, i1, i2;
        boolean $z0;
        java.lang.Object $r5;
        android.databinding.tool.solver.ExecutionPath $r6, r11;
        java.util.Iterator r10;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.databinding.tool.expr.Expr[];

        r7 = r1;

        r8 = r2;

        i1 = lengthof r8;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r3 = r8[i2];

        r7 = virtualinvoke r3.<android.databinding.tool.expr.Expr: java.util.List toExecutionPath(java.util.List)>(r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r9 = $r4;

        r10 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (android.databinding.tool.solver.ExecutionPath) $r5;

        $r6 = virtualinvoke r11.<android.databinding.tool.solver.ExecutionPath: android.databinding.tool.solver.ExecutionPath addPath(android.databinding.tool.expr.Expr)>(r0);

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label3;

     label4:
        return r9;
    }

    protected final java.util.List toExecutionPathInOrder(java.util.List, java.util.List)
    {
        android.databinding.tool.expr.Expr r0, r10;
        java.util.List r1, r2, r8;
        android.databinding.tool.solver.ExecutionPath r3, $r6;
        boolean $z0, $z1;
        java.util.ArrayList $r4, r11;
        int $i0;
        java.lang.Object $r5, $r7;
        java.util.Iterator r9, r12;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r8 = r1;

        r9 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.databinding.tool.expr.Expr) $r7;

        r8 = virtualinvoke r10.<android.databinding.tool.expr.Expr: java.util.List toExecutionPath(java.util.List)>(r8);

        goto label1;

     label2:
        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r11 = $r4;

        r12 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.solver.ExecutionPath) $r5;

        $r6 = virtualinvoke r3.<android.databinding.tool.solver.ExecutionPath: android.databinding.tool.solver.ExecutionPath addPath(android.databinding.tool.expr.Expr)>(r0);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label3;

     label4:
        return r11;
    }

<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass resolveType(android.databinding.tool.reflection.ModelAnalyzer)>
<android.databinding.tool.expr.Expr: java.util.List constructDependencies()>
    protected java.util.List constructDynamicChildrenDependencies()
    {
        android.databinding.tool.expr.Expr r0, r3;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        java.util.List $r5;
        java.lang.Object $r6;
        boolean $z0, $z2;
        android.databinding.tool.expr.Dependency $r7;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Expr) $r6;

        $z0 = virtualinvoke r3.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r7 = new android.databinding.tool.expr.Dependency;

        specialinvoke $r7.<android.databinding.tool.expr.Dependency: void <init>(android.databinding.tool.expr.Expr,android.databinding.tool.expr.Expr)>(r0, r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label3:
        return r1;
    }

    public final java.util.List getDependencies()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List $r1, $r2, $r3;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.List mDependencies>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List constructDependencies()>();

        r0.<android.databinding.tool.expr.Expr: java.util.List mDependencies> = $r3;

     label1:
        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.List mDependencies>;

        return $r2;
    }

    void addDependant(android.databinding.tool.expr.Dependency)
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.expr.Dependency r1;
        java.util.List $r2;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.Dependency;

        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.List mDependants>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getDependants()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.List mDependants>;

        return $r1;
    }

    public final java.lang.String getUniqueKey()
    {
        android.databinding.tool.expr.Expr r0;
        java.lang.String r1, $r2, $r4, $r10, $r11;
        java.lang.Object[] $r3, $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r2 = r0.<android.databinding.tool.expr.Expr: java.lang.String mUniqueKey>;

        if $r2 != null goto label3;

        r1 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.lang.String computeUniqueKey()>();

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, "you must override computeUniqueKey to return non-null String", $r3);

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z1, "you must override computeUniqueKey to return a non-empty String", $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.expr.Expr: java.lang.String mUniqueKey> = $r10;

     label3:
        $r11 = r0.<android.databinding.tool.expr.Expr: java.lang.String mUniqueKey>;

        return $r11;
    }

<android.databinding.tool.expr.Expr: java.lang.String computeUniqueKey()>
    public void enableDirectInvalidation()
    {
        android.databinding.tool.expr.Expr r0;

        r0 := @this: android.databinding.tool.expr.Expr;

        r0.<android.databinding.tool.expr.Expr: boolean mCanBeInvalidated> = 1;

        return;
    }

    public boolean canBeInvalidated()
    {
        android.databinding.tool.expr.Expr r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mCanBeInvalidated>;

        return $z0;
    }

    public void trimShouldReadFlags(java.util.BitSet)
    {
        android.databinding.tool.expr.Expr r0;
        java.util.BitSet r1, $r2;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.util.BitSet;

        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadFlags>;

        virtualinvoke $r2.<java.util.BitSet: void andNot(java.util.BitSet)>(r1);

        return;
    }

    public boolean isConditional()
    {
        android.databinding.tool.expr.Expr r0;

        r0 := @this: android.databinding.tool.expr.Expr;

        return 0;
    }

    public int getRequirementId()
    {
        android.databinding.tool.expr.Expr r0;
        int $i0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $i0 = r0.<android.databinding.tool.expr.Expr: int mRequirementId>;

        return $i0;
    }

    public void setRequirementId(int)
    {
        android.databinding.tool.expr.Expr r0;
        int i0;

        r0 := @this: android.databinding.tool.expr.Expr;

        i0 := @parameter0: int;

        r0.<android.databinding.tool.expr.Expr: int mRequirementId> = i0;

        return;
    }

    public int getRequirementFlagIndex(boolean)
    {
        android.databinding.tool.expr.Expr r0;
        boolean z0, $z1;
        int $i0, $i1, $i2;
        java.lang.Object[] $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.databinding.tool.expr.Expr: int mRequirementId>;

        if $i0 == -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z1, "If this is an expression w/ conditional dependencies, it must be assigned a requirement ID. %s", $r1);

        if z0 == 0 goto label3;

        $i1 = r0.<android.databinding.tool.expr.Expr: int mRequirementId>;

        $i2 = $i1 + 1;

        goto label4;

     label3:
        $i2 = r0.<android.databinding.tool.expr.Expr: int mRequirementId>;

     label4:
        return $i2;
    }

    public boolean hasId()
    {
        android.databinding.tool.expr.Expr r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $i0 = r0.<android.databinding.tool.expr.Expr: int mId>;

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void markFlagsAsRead(java.util.BitSet)
    {
        android.databinding.tool.expr.Expr r0;
        java.util.BitSet r1, $r2;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.util.BitSet;

        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar>;

        virtualinvoke $r2.<java.util.BitSet: void or(java.util.BitSet)>(r1);

        return;
    }

    public boolean isRead()
    {
        android.databinding.tool.expr.Expr r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mRead>;

        return $z0;
    }

    public boolean considerElevatingConditionals(android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.Expr r0, r1, $r6;
        java.util.Iterator r2;
        android.databinding.tool.expr.Dependency r3;
        java.util.List $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r5;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.Expr;

        z2 = 0;

        $r4 = r0.<android.databinding.tool.expr.Expr: java.util.List mDependencies>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Dependency) $r5;

        $z1 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: boolean isConditional()>();

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getCondition()>();

        if $r6 != r1 goto label2;

        virtualinvoke r3.<android.databinding.tool.expr.Dependency: void elevate()>();

        z2 = 1;

     label2:
        goto label1;

     label3:
        return z2;
    }

    public void invalidateReadFlags()
    {
        android.databinding.tool.expr.Expr r0;
        int $i0, $i1;

        r0 := @this: android.databinding.tool.expr.Expr;

        r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadFlags> = null;

        $i0 = r0.<android.databinding.tool.expr.Expr: int mVersion>;

        $i1 = $i0 + 1;

        r0.<android.databinding.tool.expr.Expr: int mVersion> = $i1;

        return;
    }

    public int getVersion()
    {
        android.databinding.tool.expr.Expr r0;
        int $i0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $i0 = r0.<android.databinding.tool.expr.Expr: int mVersion>;

        return $i0;
    }

    public boolean hasNestedCannotRead()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.Iterator r1;
        android.databinding.tool.expr.Dependency r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.BitSet $r3;
        java.util.List $r4;
        java.lang.Object $r5;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = virtualinvoke r0.<android.databinding.tool.expr.Expr: boolean isRead()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet getShouldReadFlags()>();

        $z1 = virtualinvoke $r3.<java.util.BitSet: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependencies()>();

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.expr.Dependency) $r5;

        $z3 = staticinvoke <android.databinding.tool.expr.Expr: boolean hasNestedCannotRead(android.databinding.tool.expr.Dependency)>(r2);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        goto label3;

     label5:
        return 0;
    }

    private static boolean hasNestedCannotRead(android.databinding.tool.expr.Dependency)
    {
        android.databinding.tool.expr.Dependency r0;
        boolean $z0, $z1, $z2;
        android.databinding.tool.expr.Expr $r1;

        r0 := @parameter0: android.databinding.tool.expr.Dependency;

        $z0 = virtualinvoke r0.<android.databinding.tool.expr.Dependency: boolean isConditional()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getOther()>();

        $z1 = virtualinvoke $r1.<android.databinding.tool.expr.Expr: boolean hasNestedCannotRead()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean markAsReadIfDone()
    {
        android.databinding.tool.expr.Expr r0, r2;
        java.util.BitSet r1, r3, $r4, $r6, $r7, $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        java.lang.Object $r5, $r10;
        android.databinding.tool.expr.ExprModel $r8;
        int $i0, i1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mRead>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadWithConditionals>;

        $r5 = virtualinvoke $r4.<java.util.BitSet: java.lang.Object clone()>();

        r1 = (java.util.BitSet) $r5;

        $r6 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar>;

        virtualinvoke r1.<java.util.BitSet: void andNot(java.util.BitSet)>($r6);

        $z1 = virtualinvoke r1.<java.util.BitSet: boolean isEmpty()>();

        r0.<android.databinding.tool.expr.Expr: boolean mRead> = $z1;

        $z2 = r0.<android.databinding.tool.expr.Expr: boolean mRead>;

        if $z2 != 0 goto label7;

        $r7 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar>;

        $z4 = virtualinvoke $r7.<java.util.BitSet: boolean isEmpty()>();

        if $z4 != 0 goto label7;

        z7 = 1;

        i1 = virtualinvoke r1.<java.util.BitSet: int nextSetBit(int)>(0);

     label2:
        if i1 == -1 goto label6;

        $r8 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel>;

        r2 = virtualinvoke $r8.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.Expr findFlagExpression(int)>(i1);

        if r2 != null goto label3;

        goto label5;

     label3:
        $z5 = virtualinvoke r2.<android.databinding.tool.expr.Expr: boolean isConditional()>();

        if $z5 != 0 goto label4;

        z7 = 0;

        goto label6;

     label4:
        $r9 = virtualinvoke r2.<android.databinding.tool.expr.Expr: java.util.BitSet getShouldReadFlagsWithConditionals()>();

        $r10 = virtualinvoke $r9.<java.util.BitSet: java.lang.Object clone()>();

        r3 = (java.util.BitSet) $r10;

        $r11 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar>;

        virtualinvoke r3.<java.util.BitSet: void andNot(java.util.BitSet)>($r11);

        $z6 = virtualinvoke r3.<java.util.BitSet: boolean isEmpty()>();

        if $z6 != 0 goto label5;

        z7 = 0;

        goto label6;

     label5:
        $i0 = i1 + 1;

        i1 = virtualinvoke r1.<java.util.BitSet: int nextSetBit(int)>($i0);

        goto label2;

     label6:
        r0.<android.databinding.tool.expr.Expr: boolean mRead> = z7;

     label7:
        $z8 = r0.<android.databinding.tool.expr.Expr: boolean mRead>;

        if $z8 == 0 goto label8;

        r0.<android.databinding.tool.expr.Expr: java.util.BitSet mShouldReadFlags> = null;

     label8:
        $z3 = r0.<android.databinding.tool.expr.Expr: boolean mRead>;

        return $z3;
    }

    private java.util.BitSet findConditionalFlags()
    {
        android.databinding.tool.expr.Expr r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.util.BitSet $r2, $r3, $r4, $r5;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = virtualinvoke r0.<android.databinding.tool.expr.Expr: boolean isConditional()>();

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z0, "should not call this on a non-conditional expr", $r1);

        $r2 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mConditionalFlags>;

        if $r2 != null goto label1;

        $r4 = new java.util.BitSet;

        specialinvoke $r4.<java.util.BitSet: void <init>()>();

        r0.<android.databinding.tool.expr.Expr: java.util.BitSet mConditionalFlags> = $r4;

        $r5 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mConditionalFlags>;

        specialinvoke r0.<android.databinding.tool.expr.Expr: void resolveConditionalFlags(java.util.BitSet)>($r5);

     label1:
        $r3 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mConditionalFlags>;

        return $r3;
    }

    private void resolveConditionalFlags(java.util.BitSet)
    {
        android.databinding.tool.expr.Expr r0, $r7, $r8, $r10;
        java.util.BitSet r1, $r3, $r9;
        android.databinding.tool.expr.Dependency r2;
        java.util.List $r4, $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.util.BitSet;

        $r3 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet getPredicateInvalidFlags()>();

        virtualinvoke r1.<java.util.BitSet: void or(java.util.BitSet)>($r3);

        $r4 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependants()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r5 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependants()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (android.databinding.tool.expr.Dependency) $r6;

        $r7 = virtualinvoke r2.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getCondition()>();

        if $r7 == null goto label1;

        $r8 = virtualinvoke r2.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $r9 = specialinvoke $r8.<android.databinding.tool.expr.Expr: java.util.BitSet findConditionalFlags()>();

        virtualinvoke r1.<java.util.BitSet: void or(java.util.BitSet)>($r9);

        $r10 = virtualinvoke r2.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $z0 = virtualinvoke r2.<android.databinding.tool.expr.Dependency: boolean getExpectedOutput()>();

        $i1 = virtualinvoke $r10.<android.databinding.tool.expr.Expr: int getRequirementFlagIndex(boolean)>($z0);

        virtualinvoke r1.<java.util.BitSet: void set(int)>($i1);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        android.databinding.tool.expr.Expr r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        java.lang.Class $r3;
        java.lang.String $r4, $r7, $r10;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.lang.String getUniqueKey()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.util.BitSet getReadSoFar()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.BitSet $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.BitSet mReadSoFar>;

        return $r1;
    }

    protected android.databinding.tool.expr.Expr$Node getAllCalculationPaths()
    {
        android.databinding.tool.expr.Expr r0, r4, $r13;
        android.databinding.tool.expr.Expr$Node r1, r5, $r6, $r7, $r8, $r15, $r16, $r18;
        java.util.Iterator r2;
        android.databinding.tool.expr.Dependency r3;
        boolean $z0, $z2, $z5;
        java.util.BitSet $r9, $r10, $r20, $r21;
        java.util.List $r11, $r14, $r17, $r19;
        java.lang.Object $r12;
        int $i0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r6 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr$Node mCalculationPaths>;

        if $r6 != null goto label7;

        $r8 = new android.databinding.tool.expr.Expr$Node;

        specialinvoke $r8.<android.databinding.tool.expr.Expr$Node: void <init>()>();

        r1 = $r8;

        $z0 = virtualinvoke r0.<android.databinding.tool.expr.Expr: boolean isConditional()>();

        if $z0 == 0 goto label1;

        $r20 = r1.<android.databinding.tool.expr.Expr$Node: java.util.BitSet mBitSet>;

        $r21 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet getPredicateInvalidFlags()>();

        virtualinvoke $r20.<java.util.BitSet: void or(java.util.BitSet)>($r21);

        goto label2;

     label1:
        $r9 = r1.<android.databinding.tool.expr.Expr$Node: java.util.BitSet mBitSet>;

        $r10 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet getInvalidFlags()>();

        virtualinvoke $r9.<java.util.BitSet: void or(java.util.BitSet)>($r10);

     label2:
        $r11 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependants()>();

        r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Dependency) $r12;

        r4 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $r13 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getCondition()>();

        if $r13 == null goto label4;

        $r16 = new android.databinding.tool.expr.Expr$Node;

        specialinvoke $r16.<android.databinding.tool.expr.Expr$Node: void <init>()>();

        r5 = $r16;

        $z2 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: boolean getExpectedOutput()>();

        $i0 = virtualinvoke r4.<android.databinding.tool.expr.Expr: int getRequirementFlagIndex(boolean)>($z2);

        virtualinvoke r5.<android.databinding.tool.expr.Expr$Node: void setConditionFlag(int)>($i0);

        $r17 = r5.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        $r18 = virtualinvoke r4.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr$Node getAllCalculationPaths()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = r1.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label5;

     label4:
        $r14 = r1.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        $r15 = virtualinvoke r4.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr$Node getAllCalculationPaths()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

     label5:
        goto label3;

     label6:
        r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr$Node mCalculationPaths> = r1;

     label7:
        $r7 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr$Node mCalculationPaths>;

        return $r7;
    }

    public java.lang.String getDefaultValue()
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.reflection.ModelAnalyzer $r1;
        android.databinding.tool.reflection.ModelClass $r2;
        java.lang.String $r3, $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = staticinvoke <android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.ModelAnalyzer getInstance()>();

        $r2 = virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $r3 = virtualinvoke $r2.<android.databinding.tool.reflection.ModelClass: java.lang.String toJavaCode()>();

        $r4 = virtualinvoke $r1.<android.databinding.tool.reflection.ModelAnalyzer: java.lang.String getDefaultValue(java.lang.String)>($r3);

        return $r4;
    }

    protected java.util.BitSet getPredicateInvalidFlags()
    {
        android.databinding.tool.expr.Expr r0;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must override getPredicateInvalidFlags in ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public boolean shouldReadNow(java.util.List)
    {
        android.databinding.tool.expr.Expr r0, $r7, $r8;
        java.util.List r1, $r5;
        java.util.Iterator r2;
        android.databinding.tool.expr.Dependency r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.BitSet $r4;
        java.lang.Object $r6;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: java.util.List;

        $r4 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.BitSet getShouldReadFlags()>();

        $z1 = virtualinvoke $r4.<java.util.BitSet: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $r5 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependencies()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.expr.Dependency) $r6;

        $r7 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getOther()>();

        $z3 = virtualinvoke $r7.<android.databinding.tool.expr.Expr: boolean isRead()>();

        if $z3 != 0 goto label3;

        if r1 == null goto label4;

        $r8 = virtualinvoke r3.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getOther()>();

        $z4 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z4 == 0 goto label4;

     label3:
        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        z0 = $z5;

        if z0 != 0 goto label6;

        return 0;

     label6:
        goto label2;

     label7:
        return 1;
    }

    public boolean isEqualityCheck()
    {
        android.databinding.tool.expr.Expr r0;

        r0 := @this: android.databinding.tool.expr.Expr;

        return 0;
    }

    public void markAsUsed()
    {
        android.databinding.tool.expr.Expr r0, r2;
        java.util.Iterator r1;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        r0.<android.databinding.tool.expr.Expr: boolean mIsUsed> = 1;

        $r3 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getChildren()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.expr.Expr) $r4;

        virtualinvoke r2.<android.databinding.tool.expr.Expr: void markAsUsed()>();

        goto label1;

     label2:
        return;
    }

    public void markAsUsedInCallback()
    {
        android.databinding.tool.expr.Expr r0, r2;
        java.util.Iterator r1;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        r0.<android.databinding.tool.expr.Expr: boolean mIsUsedInCallback> = 1;

        $r3 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getChildren()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.expr.Expr) $r4;

        virtualinvoke r2.<android.databinding.tool.expr.Expr: void markAsUsedInCallback()>();

        goto label1;

     label2:
        return;
    }

    public boolean isIsUsedInCallback()
    {
        android.databinding.tool.expr.Expr r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mIsUsedInCallback>;

        return $z0;
    }

    public boolean isUsed()
    {
        android.databinding.tool.expr.Expr r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mIsUsed>;

        return $z0;
    }

    public void updateExpr(android.databinding.tool.reflection.ModelAnalyzer)
    {
        android.databinding.tool.expr.Expr r0, r13, r15;
        android.databinding.tool.reflection.ModelAnalyzer r1;
        java.util.Map r2;
        android.databinding.tool.expr.ExprModel $r3;
        java.util.List $r4, $r5, $r7, $r11;
        int $i0, i1;
        boolean $z0;
        java.lang.Object $r6, $r8, $r10;
        java.lang.String $r9;
        java.util.Iterator r14;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        $r3 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel>;

        r2 = virtualinvoke $r3.<android.databinding.tool.expr.ExprModel: java.util.Map getExprMap()>();

        $r4 = r0.<android.databinding.tool.expr.Expr: java.util.List mParents>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r7 = r0.<android.databinding.tool.expr.Expr: java.util.List mParents>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        r13 = (android.databinding.tool.expr.Expr) $r8;

        $r9 = virtualinvoke r13.<android.databinding.tool.expr.Expr: java.lang.String getUniqueKey()>();

        $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        if $r10 == r13 goto label2;

        $r11 = r0.<android.databinding.tool.expr.Expr: java.util.List mParents>;

        interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>(i1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        $r5 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        r14 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.databinding.tool.expr.Expr) $r6;

        virtualinvoke r15.<android.databinding.tool.expr.Expr: void updateExpr(android.databinding.tool.reflection.ModelAnalyzer)>(r1);

        goto label4;

     label5:
        return;
    }

    protected static java.lang.String join(java.util.List)
    {
        java.util.List r0;
        boolean $z0;
        java.util.stream.Stream $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.stream.Stream stream()>();

        $r2 = staticinvoke <android.databinding.tool.expr.Expr: java.lang.String join(java.util.stream.Stream)>($r1);

        return $r2;
    }

    protected static transient java.lang.String join(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int $i0;
        java.util.stream.Stream $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(r0);

        $r2 = staticinvoke <android.databinding.tool.expr.Expr: java.lang.String join(java.util.stream.Stream)>($r1);

        return $r2;
    }

    private static java.lang.String join(java.util.stream.Stream)
    {
        java.util.stream.Stream r0, $r2;
        java.util.function.Function $r1;
        java.util.stream.Collector $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.util.stream.Stream;

        $r1 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <android.databinding.tool.expr.Expr: java.lang.String lambda$join$0(java.lang.Object)>, methodtype: java.lang.String __METHODTYPE__(java.lang.Object));

        $r2 = interfaceinvoke r0.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r1);

        $r3 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>("~", "(", ")");

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    protected java.lang.String asPackage()
    {
        android.databinding.tool.expr.Expr r0;

        r0 := @this: android.databinding.tool.expr.Expr;

        return null;
    }

    public java.util.List provideScopeLocation()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.List mLocations>;

        return $r1;
    }

    public android.databinding.tool.writer.KCode toCode()
    {
        android.databinding.tool.expr.Expr r0;
        boolean $z0;
        android.databinding.tool.writer.KCode $r1, $r2;
        java.lang.String $r3;

        r0 := @this: android.databinding.tool.expr.Expr;

        $z0 = virtualinvoke r0.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z0 == 0 goto label1;

        $r2 = new android.databinding.tool.writer.KCode;

        $r3 = staticinvoke <android.databinding.tool.writer.LayoutBinderWriterKt: java.lang.String scopedName(android.databinding.tool.expr.Expr)>(r0);

        specialinvoke $r2.<android.databinding.tool.writer.KCode: void <init>(java.lang.String)>($r3);

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.writer.KCode generateCode()>();

        return $r1;
    }

    public android.databinding.tool.writer.KCode toFullCode()
    {
        android.databinding.tool.expr.Expr r0;
        android.databinding.tool.writer.KCode $r1;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.writer.KCode generateCode()>();

        return $r1;
    }

<android.databinding.tool.expr.Expr: android.databinding.tool.writer.KCode generateCode()>
    public android.databinding.tool.expr.Expr generateInverse(android.databinding.tool.expr.ExprModel, android.databinding.tool.expr.Expr, java.lang.String)
    {
        android.databinding.tool.expr.Expr r0, r2;
        android.databinding.tool.expr.ExprModel r1;
        java.lang.String r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        r2 := @parameter1: android.databinding.tool.expr.Expr;

        r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("expression does not support two-way binding");

        throw $r4;
    }

<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)>
    protected static java.util.List cloneToModel(android.databinding.tool.expr.ExprModel, java.util.List)
    {
        android.databinding.tool.expr.ExprModel r0;
        java.util.List r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        android.databinding.tool.expr.Expr r4, $r7;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @parameter0: android.databinding.tool.expr.ExprModel;

        r1 := @parameter1: java.util.List;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.databinding.tool.expr.Expr) $r6;

        $r7 = virtualinvoke r4.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)>(r0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return r2;
    }

    public void assertIsInvertible()
    {
        android.databinding.tool.expr.Expr r0;
        java.lang.String r1, $r4;
        java.lang.Object[] $r2;
        android.databinding.tool.writer.KCode $r3;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.lang.String getInvertibleError()>();

        if r1 == null goto label1;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.writer.KCode toFullCode()>();

        $r4 = virtualinvoke $r3.<android.databinding.tool.writer.KCode: java.lang.String generate()>();

        $r2[0] = $r4;

        $r2[1] = r1;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("The expression %s cannot be inverted: %s", $r2);

     label1:
        return;
    }

<android.databinding.tool.expr.Expr: java.lang.String getInvertibleError()>
    public boolean hasConditionalDependant()
    {
        android.databinding.tool.expr.Expr r0, r3, $r7;
        java.util.Iterator r1;
        android.databinding.tool.expr.Dependency r2;
        android.databinding.tool.expr.TernaryExpr r4;
        java.util.List $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6;

        r0 := @this: android.databinding.tool.expr.Expr;

        $r5 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getDependants()>();

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.expr.Dependency) $r6;

        r3 = virtualinvoke r2.<android.databinding.tool.expr.Dependency: android.databinding.tool.expr.Expr getDependant()>();

        $z1 = virtualinvoke r3.<android.databinding.tool.expr.Expr: boolean isConditional()>();

        if $z1 == 0 goto label4;

        $z2 = r3 instanceof android.databinding.tool.expr.TernaryExpr;

        if $z2 == 0 goto label4;

        r4 = (android.databinding.tool.expr.TernaryExpr) r3;

        $r7 = virtualinvoke r4.<android.databinding.tool.expr.TernaryExpr: android.databinding.tool.expr.Expr getPred()>();

        if $r7 != r0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        goto label1;

     label5:
        return 0;
    }

    public final boolean recursivelyInjectSafeUnboxing(android.databinding.tool.reflection.ModelAnalyzer, android.databinding.tool.expr.ExprModel)
    {
        android.databinding.tool.expr.Expr r0, r3;
        android.databinding.tool.reflection.ModelAnalyzer r1;
        android.databinding.tool.expr.ExprModel r2;
        java.lang.Throwable r4, $r11;
        java.util.List $r6, $r9;
        int $i0, i1;
        boolean $z0, $z1, $z2, $z4, $z5, $z6;
        java.lang.Object $r10;
        android.databinding.tool.processing.scopes.ScopeProvider r12;

        r0 := @this: android.databinding.tool.expr.Expr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        r2 := @parameter1: android.databinding.tool.expr.ExprModel;

        virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

     label1:
        r12 = (android.databinding.tool.processing.scopes.ScopeProvider) r0;

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r12);

        r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild> = 0;

        $r6 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getChildren()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r9 = virtualinvoke r0.<android.databinding.tool.expr.Expr: java.util.List getChildren()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.databinding.tool.expr.Expr) $r10;

        virtualinvoke r3.<android.databinding.tool.expr.Expr: boolean recursivelyInjectSafeUnboxing(android.databinding.tool.reflection.ModelAnalyzer,android.databinding.tool.expr.ExprModel)>(r1, r2);

        $z5 = r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild>;

        $z4 = r3.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild>;

        $z6 = $z5 | $z4;

        r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild> = $z6;

        i1 = i1 + -1;

        goto label2;

     label3:
        $z0 = r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild>;

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.databinding.tool.expr.Expr: void resetResolvedType()>();

        virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild> = 0;

     label4:
        virtualinvoke r0.<android.databinding.tool.expr.Expr: void injectSafeUnboxing(android.databinding.tool.reflection.ModelAnalyzer,android.databinding.tool.expr.ExprModel)>(r1, r2);

        $z1 = r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild>;

        if $z1 == 0 goto label5;

        virtualinvoke r0.<android.databinding.tool.expr.Expr: void resetResolvedType()>();

        virtualinvoke r0.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

     label5:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label8;

     label6:
        $r11 := @caughtexception;

        r4 = $r11;

     label7:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r4;

     label8:
        $z2 = r0.<android.databinding.tool.expr.Expr: boolean mUnboxedAChild>;

        return $z2;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.databinding.tool.expr.Expr unwrapObservableField()
    {
        android.databinding.tool.expr.Expr r0, r9;
        java.lang.String r1, $r4;
        android.databinding.tool.expr.MethodCallExpr r2;
        android.databinding.tool.reflection.ModelClass $r3;
        java.util.List $r5;
        android.databinding.tool.expr.ExprModel $r6, $r7;

        r0 := @this: android.databinding.tool.expr.Expr;

        r9 = r0;

     label1:
        $r3 = virtualinvoke r9.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $r4 = virtualinvoke $r3.<android.databinding.tool.reflection.ModelClass: java.lang.String getObservableGetterName()>();

        r1 = $r4;

        if $r4 == null goto label2;

        $r6 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel>;

        $r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r2 = virtualinvoke $r6.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MethodCallExpr methodCall(android.databinding.tool.expr.Expr,java.lang.String,java.util.List)>(r9, r1, $r5);

        $r7 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel>;

        virtualinvoke $r7.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.Expr bindingExpr(android.databinding.tool.expr.Expr)>(r2);

        virtualinvoke r2.<android.databinding.tool.expr.Expr: void setUnwrapObservableFields(boolean)>(0);

        r9 = r2;

        goto label1;

     label2:
        return r9;
    }

    protected void unwrapObservableFieldChildren()
    {
        android.databinding.tool.expr.Expr r0;
        java.util.List $r1;
        int $i0, i1;

        r0 := @this: android.databinding.tool.expr.Expr;

        i1 = 0;

     label1:
        $r1 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<android.databinding.tool.expr.Expr: void unwrapChildTo(int,android.databinding.tool.reflection.ModelClass)>(i1, null);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void unwrapChildTo(int, android.databinding.tool.reflection.ModelClass)
    {
        android.databinding.tool.expr.Expr r0, r2, r18;
        int i0;
        android.databinding.tool.reflection.ModelClass r1, $r6, $r12;
        java.lang.String r3, $r7, $r16;
        java.util.List $r4, $r8, $r9, $r10, $r13;
        java.lang.Object $r5;
        boolean $z2;
        android.databinding.tool.expr.ExprModel $r14;
        java.lang.Object[] $r15;
        android.databinding.tool.expr.MethodCallExpr r17;

        r0 := @this: android.databinding.tool.expr.Expr;

        i0 := @parameter0: int;

        r1 := @parameter1: android.databinding.tool.reflection.ModelClass;

        $r4 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (android.databinding.tool.expr.Expr) $r5;

        r17 = null;

        r18 = r2;

     label1:
        $r6 = virtualinvoke r18.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $r7 = virtualinvoke $r6.<android.databinding.tool.reflection.ModelClass: java.lang.String getObservableGetterName()>();

        r3 = $r7;

        if $r7 == null goto label3;

        $r12 = virtualinvoke r18.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z2 = staticinvoke <android.databinding.tool.expr.Expr: boolean shouldUnwrap(android.databinding.tool.reflection.ModelClass,android.databinding.tool.reflection.ModelClass)>(r1, $r12);

        if $z2 == 0 goto label3;

        $r14 = r0.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.ExprModel mModel>;

        $r13 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r17 = virtualinvoke $r14.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MethodCallExpr methodCall(android.databinding.tool.expr.Expr,java.lang.String,java.util.List)>(r18, r3, $r13);

        if r17 != r0 goto label2;

        $r16 = <android.databinding.tool.processing.ErrorMessages: java.lang.String OBSERVABLE_FIELD_GET>;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r0;

        staticinvoke <android.databinding.tool.util.L: void w(java.lang.String,java.lang.Object[])>($r16, $r15);

        return;

     label2:
        virtualinvoke r17.<android.databinding.tool.expr.Expr: void setUnwrapObservableFields(boolean)>(0);

        r18 = r17;

        goto label1;

     label3:
        if r17 == null goto label4;

        $r8 = virtualinvoke r2.<android.databinding.tool.expr.Expr: java.util.List getParents()>();

        interfaceinvoke $r8.<java.util.List: boolean remove(java.lang.Object)>(r0);

        $r9 = virtualinvoke r17.<android.databinding.tool.expr.Expr: java.util.List getParents()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r10 = r0.<android.databinding.tool.expr.Expr: java.util.List mChildren>;

        interfaceinvoke $r10.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r17);

     label4:
        return;
    }

    private static boolean shouldUnwrap(android.databinding.tool.reflection.ModelClass, android.databinding.tool.reflection.ModelClass)
    {
        android.databinding.tool.reflection.ModelClass r0, r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.databinding.tool.reflection.ModelClass;

        r1 := @parameter1: android.databinding.tool.reflection.ModelClass;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.databinding.tool.reflection.ModelClass: boolean isObject()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<android.databinding.tool.reflection.ModelClass: boolean isAssignableFrom(android.databinding.tool.reflection.ModelClass)>(r0);

        if $z1 != 0 goto label2;

     label1:
        $z2 = staticinvoke <android.databinding.tool.reflection.ModelMethod: boolean isImplicitConversion(android.databinding.tool.reflection.ModelClass,android.databinding.tool.reflection.ModelClass)>(r0, r1);

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

<android.databinding.tool.expr.Expr: void injectSafeUnboxing(android.databinding.tool.reflection.ModelAnalyzer,android.databinding.tool.expr.ExprModel)>
    private static java.lang.String lambda$join$0(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        android.databinding.tool.expr.Expr $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof android.databinding.tool.expr.Expr;

        if $z0 == 0 goto label1;

        $r1 = (android.databinding.tool.expr.Expr) r0;

        $r2 = virtualinvoke $r1.<android.databinding.tool.expr.Expr: java.lang.String getUniqueKey()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r2;
    }

android.databinding.tool.expr.Expr$Node
<android.databinding.tool.expr.Expr$Node: java.util.BitSet mBitSet>
<android.databinding.tool.expr.Expr$Node: java.util.List mParents>
<android.databinding.tool.expr.Expr$Node: int mConditionFlag>
    void <init>()
    {
        android.databinding.tool.expr.Expr$Node r0;
        java.util.BitSet $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.databinding.tool.expr.Expr$Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.BitSet;

        specialinvoke $r1.<java.util.BitSet: void <init>()>();

        r0.<android.databinding.tool.expr.Expr$Node: java.util.BitSet mBitSet> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.expr.Expr$Node: java.util.List mParents> = $r2;

        r0.<android.databinding.tool.expr.Expr$Node: int mConditionFlag> = -1;

        return;
    }

    public boolean areAllPathsSatisfied(java.util.BitSet)
    {
        android.databinding.tool.expr.Expr$Node r0, r4, $r13, $r16, $r19;
        java.util.BitSet r1, r2, $r5;
        java.util.Iterator r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r6, $r9, $r12, $r15, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r7, $r8, $r10, $r11, $r14, $r17;

        r0 := @this: android.databinding.tool.expr.Expr$Node;

        r1 := @parameter0: java.util.BitSet;

        $i0 = r0.<android.databinding.tool.expr.Expr$Node: int mConditionFlag>;

        if $i0 == -1 goto label04;

        $i3 = r0.<android.databinding.tool.expr.Expr$Node: int mConditionFlag>;

        $z5 = virtualinvoke r1.<java.util.BitSet: boolean get(int)>($i3);

        if $z5 != 0 goto label01;

        $r17 = r0.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(0);

        $r19 = (android.databinding.tool.expr.Expr$Node) $r18;

        $z6 = virtualinvoke $r19.<android.databinding.tool.expr.Expr$Node: boolean areAllPathsSatisfied(java.util.BitSet)>(r1);

        if $z6 == 0 goto label02;

     label01:
        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        return $z7;

     label04:
        $r5 = r0.<android.databinding.tool.expr.Expr$Node: java.util.BitSet mBitSet>;

        $r6 = virtualinvoke $r5.<java.util.BitSet: java.lang.Object clone()>();

        r2 = (java.util.BitSet) $r6;

        virtualinvoke r2.<java.util.BitSet: void andNot(java.util.BitSet)>(r1);

        $z0 = virtualinvoke r2.<java.util.BitSet: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r10 = r0.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 != 1 goto label05;

        $r11 = r0.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (android.databinding.tool.expr.Expr$Node) $r12;

        $i2 = $r13.<android.databinding.tool.expr.Expr$Node: int mConditionFlag>;

        if $i2 == -1 goto label05;

        $r14 = r0.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        $r16 = (android.databinding.tool.expr.Expr$Node) $r15;

        $z4 = virtualinvoke $r16.<android.databinding.tool.expr.Expr$Node: boolean areAllPathsSatisfied(java.util.BitSet)>(r1);

        return $z4;

     label05:
        return 0;

     label06:
        $r7 = r0.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        $z1 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label07;

        return 1;

     label07:
        $r8 = r0.<android.databinding.tool.expr.Expr$Node: java.util.List mParents>;

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.databinding.tool.expr.Expr$Node) $r9;

        $z3 = virtualinvoke r4.<android.databinding.tool.expr.Expr$Node: boolean areAllPathsSatisfied(java.util.BitSet)>(r1);

        if $z3 != 0 goto label09;

        return 0;

     label09:
        goto label08;

     label10:
        return 1;
    }

    public void setConditionFlag(int)
    {
        android.databinding.tool.expr.Expr$Node r0;
        int i0;

        r0 := @this: android.databinding.tool.expr.Expr$Node;

        i0 := @parameter0: int;

        r0.<android.databinding.tool.expr.Expr$Node: int mConditionFlag> = i0;

        return;
    }

