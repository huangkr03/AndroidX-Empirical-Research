com.google.androidgamesdk.gametextinput.InputConnection
<com.google.androidgamesdk.gametextinput.InputConnection: java.lang.String TAG>
<com.google.androidgamesdk.gametextinput.InputConnection: int[] notInsertedKeyCodes>
<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.InputMethodManager imm>
<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>
<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Settings settings>
<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>
<com.google.androidgamesdk.gametextinput.InputConnection: java.util.BitSet dontInsertChars>
<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Listener listener>
<com.google.androidgamesdk.gametextinput.InputConnection: boolean mSoftKeyboardActive>
    public void <init>(android.content.Context, android.view.View, com.google.androidgamesdk.gametextinput.Settings)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.content.Context r1, $r10;
        android.view.View r2;
        com.google.androidgamesdk.gametextinput.Settings r3;
        java.lang.Object r4;
        int[] r5;
        int i0, i1, $i2, i3;
        android.view.inputmethod.EditorInfo $r6;
        android.view.inputmethod.InputMethodManager $r7;
        android.text.SpannableStringBuilder $r8;
        java.util.BitSet $r9, $r13;
        android.app.Activity $r11;
        android.view.Window $r12;
        java.lang.RuntimeException $r14;
        boolean $z0;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: com.google.androidgamesdk.gametextinput.Settings;

        $r6 = r3.<com.google.androidgamesdk.gametextinput.Settings: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i2 = $r6.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>(r2, $z0);

        r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView> = r2;

        r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Settings settings> = r3;

        r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        if r4 != null goto label3;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t get IMM");

        throw $r14;

     label3:
        $r7 = (android.view.inputmethod.InputMethodManager) r4;

        r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.InputMethodManager imm> = $r7;

        $r8 = new android.text.SpannableStringBuilder;

        specialinvoke $r8.<android.text.SpannableStringBuilder: void <init>()>();

        r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable> = $r8;

        $r9 = new java.util.BitSet;

        specialinvoke $r9.<java.util.BitSet: void <init>()>();

        r0.<com.google.androidgamesdk.gametextinput.InputConnection: java.util.BitSet dontInsertChars> = $r9;

        r5 = <com.google.androidgamesdk.gametextinput.InputConnection: int[] notInsertedKeyCodes>;

        i0 = lengthof r5;

        i3 = 0;

     label4:
        if i3 >= i0 goto label5;

        i1 = r5[i3];

        $r13 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: java.util.BitSet dontInsertChars>;

        virtualinvoke $r13.<java.util.BitSet: void set(int)>(i1);

        i3 = i3 + 1;

        goto label4;

     label5:
        $r10 = virtualinvoke r2.<android.view.View: android.content.Context getContext()>();

        $r11 = (android.app.Activity) $r10;

        $r12 = virtualinvoke $r11.<android.app.Activity: android.view.Window getWindow()>();

        staticinvoke <androidx.core.view.WindowCompat: void setDecorFitsSystemWindows(android.view.Window,boolean)>($r12, 0);

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>(r2, r0);

        virtualinvoke r2.<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>(r0);

        return;
    }

    public void restartInput()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.view.View $r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        $r2 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.InputMethodManager imm>;

        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>($r1);

        return;
    }

    public final boolean getSoftKeyboardActive()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        boolean $z0;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        $z0 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean mSoftKeyboardActive>;

        return $z0;
    }

    public final void setSoftKeyboardActive(boolean, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        boolean z0;
        int i0;
        android.view.View $r1, $r4, $r5, $r6;
        android.view.inputmethod.InputMethodManager $r2, $r7;
        android.os.IBinder $r3;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 == 0 goto label1;

        $r4 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>;

        virtualinvoke $r4.<android.view.View: void setFocusableInTouchMode(boolean)>(1);

        $r5 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>;

        virtualinvoke $r5.<android.view.View: boolean requestFocus()>();

        $r7 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.InputMethodManager imm>;

        $r6 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>;

        virtualinvoke $r7.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r6, i0);

        goto label2;

     label1:
        $r2 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.InputMethodManager imm>;

        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>;

        $r3 = virtualinvoke $r1.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r3, i0);

     label2:
        r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean mSoftKeyboardActive> = z0;

        return;
    }

    public final android.view.inputmethod.EditorInfo getEditorInfo()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        com.google.androidgamesdk.gametextinput.Settings $r1;
        android.view.inputmethod.EditorInfo $r2;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Settings settings>;

        $r2 = $r1.<com.google.androidgamesdk.gametextinput.Settings: android.view.inputmethod.EditorInfo mEditorInfo>;

        return $r2;
    }

    public final void setEditorInfo(android.view.inputmethod.EditorInfo)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.view.inputmethod.EditorInfo r1;
        com.google.androidgamesdk.gametextinput.Settings $r2;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $r2 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Settings settings>;

        $r2.<com.google.androidgamesdk.gametextinput.Settings: android.view.inputmethod.EditorInfo mEditorInfo> = r1;

        return;
    }

    public final void setState(com.google.androidgamesdk.gametextinput.State)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        com.google.androidgamesdk.gametextinput.State r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r4, $r15, $r17;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        android.text.Editable $r16, $r18;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: com.google.androidgamesdk.gametextinput.State;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setState: \'");

        $r4 = r1.<com.google.androidgamesdk.gametextinput.State: java.lang.String text>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', selection=(");

        $i0 = r1.<com.google.androidgamesdk.gametextinput.State: int selectionStart>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = r1.<com.google.androidgamesdk.gametextinput.State: int selectionEnd>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), composing region=(");

        $i2 = r1.<com.google.androidgamesdk.gametextinput.State: int composingRegionStart>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i3 = r1.<com.google.androidgamesdk.gametextinput.State: int composingRegionEnd>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r15);

        $r16 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        interfaceinvoke $r16.<android.text.Editable: void clear()>();

        $r18 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $r17 = r1.<com.google.androidgamesdk.gametextinput.State: java.lang.String text>;

        interfaceinvoke $r18.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>(0, $r17);

        $i6 = r1.<com.google.androidgamesdk.gametextinput.State: int selectionStart>;

        $i5 = r1.<com.google.androidgamesdk.gametextinput.State: int selectionEnd>;

        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void setSelectionInternal(int,int)>($i6, $i5);

        $i8 = r1.<com.google.androidgamesdk.gametextinput.State: int composingRegionStart>;

        $i7 = r1.<com.google.androidgamesdk.gametextinput.State: int composingRegionEnd>;

        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void setComposingRegionInternal(int,int)>($i8, $i7);

        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void informIMM()>();

        return;
    }

    public final com.google.androidgamesdk.gametextinput.Listener getListener()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        com.google.androidgamesdk.gametextinput.Listener $r1;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Listener listener>;

        return $r1;
    }

    public final com.google.androidgamesdk.gametextinput.InputConnection setListener(com.google.androidgamesdk.gametextinput.Listener)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        com.google.androidgamesdk.gametextinput.Listener r1;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: com.google.androidgamesdk.gametextinput.Listener;

        r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Listener listener> = r1;

        return r0;
    }

    public boolean onKey(android.view.View, int, android.view.KeyEvent)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.view.View r1;
        int i0;
        android.view.KeyEvent r2;
        boolean $z0;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.KeyEvent;

        $z0 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean processKeyEvent(android.view.KeyEvent)>(r2);

        return $z0;
    }

    public android.text.Editable getEditable()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.text.Editable $r1;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", "getEditable ");

        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        return $r1;
    }

    public boolean setSelection(int, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setSelection: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r6);

        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void setSelectionInternal(int,int)>(i0, i1);

        return 1;
    }

    public boolean setComposingText(java.lang.CharSequence, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        java.lang.CharSequence r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        android.text.Editable $r10, $r13, $r14;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair $r11, r12, r15;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setComposingText: \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', newCursorPosition=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r7);

        if r1 != null goto label1;

        return 0;

     label1:
        r12 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getComposingRegion()>();

        $i3 = r12.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        if $i3 != -1 goto label2;

        r12 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()>();

        $i10 = r12.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        if $i10 != -1 goto label2;

        $r11 = new com.google.androidgamesdk.gametextinput.GameTextInput$Pair;

        specialinvoke $r11.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: void <init>(int,int)>(0, 0);

        r12 = $r11;

     label2:
        $r13 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i11 = r12.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i12 = r12.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        interfaceinvoke $r13.<android.text.Editable: android.text.Editable delete(int,int)>($i11, $i12);

        $r14 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i13 = r12.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        interfaceinvoke $r14.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i13, r1);

        $i14 = r12.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i15 = r12.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i16 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i17 = $i15 + $i16;

        virtualinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean setComposingRegion(int,int)>($i14, $i17);

        r15 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getComposingRegion()>();

        if i0 <= 0 goto label3;

        $i6 = r15.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        $i7 = $i6 + i0;

        $i8 = $i7 - 1;

        $r10 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i9 = interfaceinvoke $r10.<android.text.Editable: int length()>();

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i9);

        goto label4;

     label3:
        $i4 = r15.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i5 = $i4 + i0;

        $i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

     label4:
        i1 = $i18;

        virtualinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean setSelection(int,int)>(i1, i1);

        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void stateUpdated(boolean)>(0);

        return 1;
    }

    public boolean setComposingRegion(int, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setComposingRegion: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r6);

        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void setComposingRegionInternal(int,int)>(i0, i1);

        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void stateUpdated(boolean)>(0);

        return 1;
    }

    public boolean finishComposingText()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", "finishComposingText");

        virtualinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean setComposingRegion(int,int)>(-1, -1);

        return 1;
    }

    public boolean commitText(java.lang.CharSequence, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        java.lang.CharSequence r1;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commit: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new pos = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r7);

        virtualinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>(r1, i0);

        virtualinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean finishComposingText()>();

        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void informIMM()>();

        return 1;
    }

    public boolean deleteSurroundingText(int, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        android.text.Editable $r8, $r9, $r11;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteSurroundingText: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r7);

        r1 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()>();

        i15 = 0;

        if i0 <= 0 goto label1;

        $r11 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i11 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i12 = $i11 - i0;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $i14 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        interfaceinvoke $r11.<android.text.Editable: android.text.Editable delete(int,int)>($i13, $i14);

        i15 = i0;

     label1:
        if i1 <= 0 goto label2;

        $r8 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i3 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        $i4 = $i3 - i15;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $r9 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i6 = interfaceinvoke $r9.<android.text.Editable: int length()>();

        $i7 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        $i8 = $i7 - i15;

        $i9 = $i8 + i1;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i9);

        interfaceinvoke $r8.<android.text.Editable: android.text.Editable delete(int,int)>($i5, $i10);

     label2:
        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void stateUpdated(boolean)>(0);

        return 1;
    }

    public boolean deleteSurroundingTextInCodePoints(int, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteSurroundingTextInCodePoints: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r6);

        $z0 = specialinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingTextInCodePoints(int,int)>(i0, i1);

        return $z0;
    }

    public boolean sendKeyEvent(android.view.KeyEvent)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.view.KeyEvent r1;
        com.google.androidgamesdk.gametextinput.Settings $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1;
        android.view.inputmethod.EditorInfo $r4;
        android.view.View $r5;
        android.view.inputmethod.InputMethodManager $r6;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Settings settings>;

        $z0 = $r2.<com.google.androidgamesdk.gametextinput.Settings: boolean mForwardKeyEvents>;

        if $z0 == 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r3 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Settings settings>;

        $r4 = $r3.<com.google.androidgamesdk.gametextinput.Settings: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i1 = $r4.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i1 != 0 goto label1;

        if r1 == null goto label1;

        $r6 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.InputMethodManager imm>;

        $r5 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>;

        virtualinvoke $r6.<android.view.inputmethod.InputMethodManager: void dispatchKeyEventFromInputMethod(android.view.View,android.view.KeyEvent)>($r5, r1);

     label1:
        $z1 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean processKeyEvent(android.view.KeyEvent)>(r1);

        return $z1;
    }

    public java.lang.CharSequence getSelectedText(int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, $i1, $i2, $i3;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair r1;
        android.text.Editable $r2;
        java.lang.Object $r3;
        java.lang.CharSequence r4;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()>();

        $i1 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        if $i1 != -1 goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r2 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i3 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i2 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        $r3 = interfaceinvoke $r2.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>($i3, $i2);

     label2:
        r4 = (java.lang.CharSequence) $r3;

        return r4;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair r1;
        java.lang.CharSequence r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8, $r11;
        android.text.Editable $r9, $r10;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getTextAfterCursor: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r8);

        r1 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()>();

        $i4 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        if $i4 != -1 goto label1;

        return "";

     label1:
        $i5 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        $i6 = $i5 + i0;

        $r9 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i7 = interfaceinvoke $r9.<android.text.Editable: int length()>();

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);

        $r10 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i8 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        r2 = interfaceinvoke $r10.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>($i8, i2);

        $r11 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair r1;
        java.lang.CharSequence r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8, $r10;
        android.text.Editable $r9;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getTextBeforeCursor: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", flags=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r8);

        r1 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()>();

        $i4 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        if $i4 != -1 goto label1;

        return "";

     label1:
        $i5 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i6 = $i5 - i0;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i6, 0);

        $r9 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i7 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        r2 = interfaceinvoke $r9.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(i2, $i7);

        $r10 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r10;
    }

    public boolean requestCursorUpdates(int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request cursor updates: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", $r4);

        $z0 = specialinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean requestCursorUpdates(int)>(i0);

        return $z0;
    }

    public void closeConnection()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", "closeConnection");

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void closeConnection()>();

        return;
    }

    private final void informIMM()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair r1, r2;
        int $i0, $i1, $i2, $i3;
        android.view.View $r3;
        android.view.inputmethod.InputMethodManager $r4;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()>();

        r2 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getComposingRegion()>();

        $r4 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.InputMethodManager imm>;

        $r3 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>;

        $i3 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i2 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        $i1 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i0 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        virtualinvoke $r4.<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>($r3, $i3, $i2, $i1, $i0);

        return;
    }

    private final com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.text.Editable $r1;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair $r2;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $r2 = staticinvoke <com.google.androidgamesdk.gametextinput.GameTextInput: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection(android.text.Editable)>($r1);

        return $r2;
    }

    private final com.google.androidgamesdk.gametextinput.GameTextInput$Pair getComposingRegion()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.text.Editable $r1;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair $r2;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $r2 = staticinvoke <com.google.androidgamesdk.gametextinput.GameTextInput: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getComposingRegion(android.text.Editable)>($r1);

        return $r2;
    }

    private final void setSelectionInternal(int, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, i1;
        android.text.Editable $r1;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        staticinvoke <com.google.androidgamesdk.gametextinput.GameTextInput: void setSelection(android.text.Editable,int,int)>($r1, i0, i1);

        return;
    }

    private final void setComposingRegionInternal(int, int)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.text.Editable $r1, $r2, $r3, $r4;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != -1 goto label1;

        $r4 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        staticinvoke <com.google.androidgamesdk.gametextinput.GameTextInput: void removeComposingRegion(android.text.Editable)>($r4);

        goto label2;

     label1:
        $r1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i4 = interfaceinvoke $r1.<android.text.Editable: int length()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0);

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $r2 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i6 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, i1);

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);

        $r3 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        staticinvoke <com.google.androidgamesdk.gametextinput.GameTextInput: void setComposingRegion(android.text.Editable,int,int)>($r3, i2, i3);

     label2:
        return;
    }

    private boolean processKeyEvent(android.view.KeyEvent)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.view.KeyEvent r1;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair r2;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        android.text.Editable $r3, $r6, $r7, $r8, $r10, $r12, $r14, $r15;
        char $c11;
        java.lang.String $r4;
        java.util.BitSet $r16;
        boolean $z0;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: android.view.KeyEvent;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("gti.InputConnection", "sendKeyEvent");

        r2 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i3 == 0 goto label2;

        return 1;

     label2:
        $i4 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        if $i4 != -1 goto label3;

        $r14 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i25 = interfaceinvoke $r14.<android.text.Editable: int length()>();

        r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first> = $i25;

        $r15 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i26 = interfaceinvoke $r15.<android.text.Editable: int length()>();

        r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second> = $i26;

     label3:
        $i6 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i5 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        if $i6 == $i5 goto label4;

        $r12 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i24 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i23 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        interfaceinvoke $r12.<android.text.Editable: android.text.Editable delete(int,int)>($i24, $i23);

        goto label6;

     label4:
        $i7 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i7 != 67 goto label5;

        $i19 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        if $i19 <= 0 goto label5;

        $r10 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i20 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i22 = $i20 - 1;

        $i21 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        interfaceinvoke $r10.<android.text.Editable: android.text.Editable delete(int,int)>($i22, $i21);

        goto label6;

     label5:
        $i8 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i8 != 112 goto label6;

        $i13 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $r7 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i14 = interfaceinvoke $r7.<android.text.Editable: int length()>();

        $i15 = $i14 - 1;

        if $i13 >= $i15 goto label6;

        $r8 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i18 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i16 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i17 = $i16 + 1;

        interfaceinvoke $r8.<android.text.Editable: android.text.Editable delete(int,int)>($i18, $i17);

     label6:
        i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $r16 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: java.util.BitSet dontInsertChars>;

        $z0 = virtualinvoke $r16.<java.util.BitSet: boolean get(int)>(i0);

        if $z0 != 0 goto label7;

        $r3 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $i9 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i10 = virtualinvoke r1.<android.view.KeyEvent: int getUnicodeChar()>();

        $c11 = (char) $i10;

        $r4 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c11);

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i9, $r4);

        $i12 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        i1 = $i12 + 1;

        $r6 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        staticinvoke <com.google.androidgamesdk.gametextinput.GameTextInput: void setSelection(android.text.Editable,int,int)>($r6, i1, i1);

     label7:
        specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: void stateUpdated(boolean)>(0);

        return 1;
    }

    private final void stateUpdated(boolean)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        boolean z0, $z1;
        com.google.androidgamesdk.gametextinput.GameTextInput$Pair r1, r2;
        com.google.androidgamesdk.gametextinput.State r3, $r5;
        com.google.androidgamesdk.gametextinput.Listener r4;
        android.text.Editable $r6;
        java.lang.String $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getSelection()>();

        r2 = specialinvoke r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.GameTextInput$Pair getComposingRegion()>();

        $r5 = new com.google.androidgamesdk.gametextinput.State;

        $r6 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.text.Editable mEditable>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $i3 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i2 = r1.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        $i1 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int first>;

        $i0 = r2.<com.google.androidgamesdk.gametextinput.GameTextInput$Pair: int second>;

        specialinvoke $r5.<com.google.androidgamesdk.gametextinput.State: void <init>(java.lang.String,int,int,int,int)>($r7, $i3, $i2, $i1, $i0);

        r3 = $r5;

        r4 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Listener listener>;

        if r4 == null goto label1;

        $z1 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: boolean mSoftKeyboardActive>;

        if $z1 == 0 goto label1;

        interfaceinvoke r4.<com.google.androidgamesdk.gametextinput.Listener: void stateChanged(com.google.androidgamesdk.gametextinput.State,boolean)>(r3, z0);

     label1:
        return;
    }

    public androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, androidx.core.view.WindowInsetsCompat)
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        android.view.View r1;
        androidx.core.view.WindowInsetsCompat r2;
        com.google.androidgamesdk.gametextinput.Listener $r3, $r4;
        int $i0;
        androidx.core.graphics.Insets $r5;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.core.view.WindowInsetsCompat;

        $r3 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Listener listener>;

        if $r3 == null goto label1;

        $r4 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.Listener listener>;

        $i0 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int ime()>();

        $r5 = virtualinvoke r2.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsets(int)>($i0);

        interfaceinvoke $r4.<com.google.androidgamesdk.gametextinput.Listener: void onImeInsetsChanged(androidx.core.graphics.Insets)>($r5);

     label1:
        return r2;
    }

    public androidx.core.graphics.Insets getImeInsets()
    {
        com.google.androidgamesdk.gametextinput.InputConnection r0;
        androidx.core.view.WindowInsetsCompat r1;
        android.view.View $r2;
        int $i0;
        androidx.core.graphics.Insets $r3;

        r0 := @this: com.google.androidgamesdk.gametextinput.InputConnection;

        $r2 = r0.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.View targetView>;

        r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>($r2);

        $i0 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int ime()>();

        $r3 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsets(int)>($i0);

        return $r3;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[14];

        $r0[0] = 67;

        $r0[1] = 112;

        $r0[2] = 59;

        $r0[3] = 60;

        $r0[4] = 23;

        $r0[5] = 20;

        $r0[6] = 19;

        $r0[7] = 21;

        $r0[8] = 22;

        $r0[9] = 269;

        $r0[10] = 268;

        $r0[11] = 268;

        $r0[12] = 270;

        $r0[13] = 4;

        <com.google.androidgamesdk.gametextinput.InputConnection: int[] notInsertedKeyCodes> = $r0;

        return;
    }

