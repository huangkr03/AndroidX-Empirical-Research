androidx.versionedparcelable.VersionedParcel
<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mParcelizerCache>
<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mReadCache>
<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mWriteCache>
    void <init>(androidx.collection.SimpleArrayMap, androidx.collection.SimpleArrayMap, androidx.collection.SimpleArrayMap)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        androidx.collection.SimpleArrayMap $r1, $r2, $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: androidx.collection.SimpleArrayMap;

        $r2 := @parameter1: androidx.collection.SimpleArrayMap;

        $r3 := @parameter2: androidx.collection.SimpleArrayMap;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mReadCache> = $r1;

        $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mWriteCache> = $r2;

        $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mParcelizerCache> = $r3;

        return;
    }

    private java.lang.Class findParcelClass(java.lang.Class) throws java.lang.ClassNotFoundException
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        java.lang.Class $r1, $r5;
        androidx.collection.SimpleArrayMap $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        java.lang.Package $r6;
        java.lang.Object[] $r7;
        java.lang.ClassLoader $r8;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mParcelizerCache>;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.Class) $r4;

        if $r5 != null goto label1;

        $r6 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();

        $r3 = virtualinvoke $r6.<java.lang.Package: java.lang.String getName()>();

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r3;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7[1] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%sParcelizer", $r7);

        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r3, 0, $r8);

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mParcelizerCache>;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label1:
        return $r5;
    }

    private java.lang.reflect.Method getReadMethod(java.lang.String) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.ClassNotFoundException
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        java.lang.String $r1;
        androidx.collection.SimpleArrayMap $r2;
        java.lang.Object $r3;
        java.lang.reflect.Method $r4;
        java.lang.Class $r5;
        java.lang.ClassLoader $r6;
        java.lang.Class[] $r7;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mReadCache>;

        $r3 = virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.reflect.Method) $r3;

        if $r4 != null goto label1;

        $r5 = class "Landroidx/versionedparcelable/VersionedParcel;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r1, 1, $r6);

        $r7 = newarray (java.lang.Class)[1];

        $r7[0] = class "Landroidx/versionedparcelable/VersionedParcel;";

        $r4 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("read", $r7);

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mReadCache>;

        virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        return $r4;
    }

    private java.lang.reflect.Method getWriteMethod(java.lang.Class) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.ClassNotFoundException
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        java.lang.Class $r1, $r6;
        androidx.collection.SimpleArrayMap $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        java.lang.reflect.Method $r5;
        java.lang.Class[] $r7;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mWriteCache>;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.reflect.Method) $r4;

        if $r5 != null goto label1;

        $r6 = specialinvoke $r0.<androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)>($r1);

        $r7 = newarray (java.lang.Class)[2];

        $r7[0] = $r1;

        $r7[1] = class "Landroidx/versionedparcelable/VersionedParcel;";

        $r5 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("write", $r7);

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcel: androidx.collection.SimpleArrayMap mWriteCache>;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label1:
        return $r5;
    }

    private void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        androidx.versionedparcelable.VersionedParcelable $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5, r6;
        java.lang.RuntimeException r7;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: androidx.versionedparcelable.VersionedParcelable;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = specialinvoke $r0.<androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)>($r2);

     label2:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String)>($r3);

        return;

     label3:
        $r4 := @caughtexception;

        r7 = new java.lang.RuntimeException;

        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a Parcelizer");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r4);

        $r4 = (java.lang.Throwable) r7;

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

<androidx.versionedparcelable.VersionedParcel: void closeField()>
<androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()>
    public boolean isStream()
    {
        androidx.versionedparcelable.VersionedParcel $r0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        return 0;
    }

<androidx.versionedparcelable.VersionedParcel: boolean readBoolean()>
    public boolean readBoolean(boolean, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        boolean $z0, $z1;
        int $i0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $z1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: boolean readField(int)>($i0);

        if $z1 != 0 goto label1;

        return $z0;

     label1:
        $z0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: boolean readBoolean()>();

        return $z0;
    }

<androidx.versionedparcelable.VersionedParcel: byte[] readByteArray()>
    public byte[] readByteArray(byte[], int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: boolean readField(int)>($i0);

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: byte[] readByteArray()>();

        return $r1;
    }

<androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence()>
    public java.lang.CharSequence readCharSequence(java.lang.CharSequence, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: boolean readField(int)>($i0);

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence()>();

        return $r1;
    }

<androidx.versionedparcelable.VersionedParcel: boolean readField(int)>
    protected androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String, androidx.versionedparcelable.VersionedParcel)
    {
        androidx.versionedparcelable.VersionedParcel $r0, $r2;
        java.lang.String $r1;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        androidx.versionedparcelable.VersionedParcelable $r6;
        java.lang.Throwable $r7, $r9, $r10, $r12;
        java.lang.RuntimeException $r8, r13;
        boolean $z0;
        java.lang.Error $r11;
        java.lang.reflect.InvocationTargetException r14;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: androidx.versionedparcelable.VersionedParcel;

     label01:
        $r3 = specialinvoke $r0.<androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)>($r1);

     label02:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

     label03:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

     label04:
        $r6 = (androidx.versionedparcelable.VersionedParcelable) $r5;

        return $r6;

     label05:
        $r7 := @caughtexception;

        r13 = new java.lang.RuntimeException;

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        $r7 = (java.lang.Throwable) r13;

        throw $r7;

     label06:
        $r9 := @caughtexception;

        r13 = new java.lang.RuntimeException;

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        $r7 = (java.lang.Throwable) r13;

        throw $r7;

     label07:
        $r10 := @caughtexception;

        r14 = (java.lang.reflect.InvocationTargetException) $r10;

        $r7 = virtualinvoke r14.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z0 = $r7 instanceof java.lang.RuntimeException;

        if $z0 != 0 goto label09;

        $z0 = $r7 instanceof java.lang.Error;

        if $z0 == 0 goto label08;

        $r11 = (java.lang.Error) $r7;

        $r7 = (java.lang.Throwable) $r11;

        throw $r7;

     label08:
        r13 = new java.lang.RuntimeException;

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        $r7 = (java.lang.Throwable) r13;

        throw $r7;

     label09:
        $r8 = (java.lang.RuntimeException) $r7;

        $r7 = (java.lang.Throwable) $r8;

        throw $r7;

     label10:
        $r12 := @caughtexception;

        r13 = new java.lang.RuntimeException;

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        $r7 = (java.lang.Throwable) r13;

        throw $r7;

        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label07;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label07;
        catch java.lang.NoSuchMethodException from label01 to label02 with label06;
        catch java.lang.NoSuchMethodException from label03 to label04 with label06;
        catch java.lang.ClassNotFoundException from label01 to label02 with label05;
        catch java.lang.ClassNotFoundException from label03 to label04 with label05;
    }

<androidx.versionedparcelable.VersionedParcel: int readInt()>
    public int readInt(int, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: boolean readField(int)>($i1);

        if $z0 != 0 goto label1;

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: int readInt()>();

        return $i0;
    }

<androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable()>
    public android.os.Parcelable readParcelable(android.os.Parcelable, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        android.os.Parcelable $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: android.os.Parcelable;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: boolean readField(int)>($i0);

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable()>();

        return $r1;
    }

<androidx.versionedparcelable.VersionedParcel: java.lang.String readString()>
    public java.lang.String readString(java.lang.String, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: boolean readField(int)>($i0);

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: java.lang.String readString()>();

        return $r1;
    }

    protected androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
    {
        androidx.versionedparcelable.VersionedParcel $r0, $r2;
        java.lang.String $r1;
        androidx.versionedparcelable.VersionedParcelable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: java.lang.String readString()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()>();

        $r3 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)>($r1, $r2);

        return $r3;
    }

    public androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        androidx.versionedparcelable.VersionedParcelable $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: androidx.versionedparcelable.VersionedParcelable;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: boolean readField(int)>($i0);

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()>();

        return $r1;
    }

<androidx.versionedparcelable.VersionedParcel: void setOutputField(int)>
    public void setSerializationFlags(boolean, boolean)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        boolean $z0, $z1;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        return;
    }

<androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean)>
    public void writeBoolean(boolean, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void setOutputField(int)>($i0);

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean)>($z0);

        return;
    }

<androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[])>
    public void writeByteArray(byte[], int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void setOutputField(int)>($i0);

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[])>($r1);

        return;
    }

<androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence)>
    public void writeCharSequence(java.lang.CharSequence, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void setOutputField(int)>($i0);

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence)>($r1);

        return;
    }

<androidx.versionedparcelable.VersionedParcel: void writeInt(int)>
    public void writeInt(int, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        int $i0, $i1;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void setOutputField(int)>($i1);

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeInt(int)>($i0);

        return;
    }

<androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable)>
    public void writeParcelable(android.os.Parcelable, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        android.os.Parcelable $r1;
        int $i0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: android.os.Parcelable;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void setOutputField(int)>($i0);

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable)>($r1);

        return;
    }

<androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String)>
    public void writeString(java.lang.String, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void setOutputField(int)>($i0);

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String)>($r1);

        return;
    }

    protected void writeToParcel(androidx.versionedparcelable.VersionedParcelable, androidx.versionedparcelable.VersionedParcel)
    {
        androidx.versionedparcelable.VersionedParcel $r0, $r2;
        androidx.versionedparcelable.VersionedParcelable $r1;
        java.lang.Class $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Throwable $r6, $r8, $r9, $r11;
        java.lang.RuntimeException $r7, r12;
        boolean $z0;
        java.lang.Error $r10;
        java.lang.reflect.InvocationTargetException r13;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: androidx.versionedparcelable.VersionedParcelable;

        $r2 := @parameter1: androidx.versionedparcelable.VersionedParcel;

     label01:
        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = specialinvoke $r0.<androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)>($r3);

     label02:
        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = $r1;

        $r5[1] = $r2;

     label03:
        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

     label04:
        return;

     label05:
        $r6 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        $r6 = (java.lang.Throwable) r12;

        throw $r6;

     label06:
        $r8 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        $r6 = (java.lang.Throwable) r12;

        throw $r6;

     label07:
        $r9 := @caughtexception;

        r13 = (java.lang.reflect.InvocationTargetException) $r9;

        $r6 = virtualinvoke r13.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z0 = $r6 instanceof java.lang.RuntimeException;

        if $z0 != 0 goto label09;

        $z0 = $r6 instanceof java.lang.Error;

        if $z0 == 0 goto label08;

        $r10 = (java.lang.Error) $r6;

        $r6 = (java.lang.Throwable) $r10;

        throw $r6;

     label08:
        r12 = new java.lang.RuntimeException;

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        $r6 = (java.lang.Throwable) r12;

        throw $r6;

     label09:
        $r7 = (java.lang.RuntimeException) $r6;

        $r6 = (java.lang.Throwable) $r7;

        throw $r6;

     label10:
        $r11 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        $r6 = (java.lang.Throwable) r12;

        throw $r6;

        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label07;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label07;
        catch java.lang.NoSuchMethodException from label01 to label02 with label06;
        catch java.lang.NoSuchMethodException from label03 to label04 with label06;
        catch java.lang.ClassNotFoundException from label01 to label02 with label05;
        catch java.lang.ClassNotFoundException from label03 to label04 with label05;
    }

    protected void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
    {
        androidx.versionedparcelable.VersionedParcel $r0, $r1;
        androidx.versionedparcelable.VersionedParcelable $r2;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r2 := @parameter0: androidx.versionedparcelable.VersionedParcelable;

        if $r2 != null goto label1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String)>(null);

        return;

     label1:
        specialinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)>($r2);

        $r1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()>();

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)>($r2, $r1);

        virtualinvoke $r1.<androidx.versionedparcelable.VersionedParcel: void closeField()>();

        return;
    }

    public void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable, int)
    {
        androidx.versionedparcelable.VersionedParcel $r0;
        androidx.versionedparcelable.VersionedParcelable $r1;
        int $i0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcel;

        $r1 := @parameter0: androidx.versionedparcelable.VersionedParcelable;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void setOutputField(int)>($i0);

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)>($r1);

        return;
    }

androidx.versionedparcelable.VersionedParcel$1
<androidx.versionedparcelable.VersionedParcel$1: androidx.versionedparcelable.VersionedParcel this$0>
    void <init>(androidx.versionedparcelable.VersionedParcel, java.io.InputStream)
    {
        androidx.versionedparcelable.VersionedParcel$1 r0;
        androidx.versionedparcelable.VersionedParcel r1;
        java.io.InputStream r2;

        r0 := @this: androidx.versionedparcelable.VersionedParcel$1;

        r1 := @parameter0: androidx.versionedparcelable.VersionedParcel;

        r2 := @parameter1: java.io.InputStream;

        r0.<androidx.versionedparcelable.VersionedParcel$1: androidx.versionedparcelable.VersionedParcel this$0> = r1;

        specialinvoke r0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r2);

        return;
    }

    protected java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        androidx.versionedparcelable.VersionedParcel$1 r0;
        java.io.ObjectStreamClass r1;
        java.lang.Class r2, $r4, $r6;
        java.lang.String $r3;
        java.lang.ClassLoader $r5;

        r0 := @this: androidx.versionedparcelable.VersionedParcel$1;

        r1 := @parameter0: java.io.ObjectStreamClass;

        $r3 = virtualinvoke r1.<java.io.ObjectStreamClass: java.lang.String getName()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r3, 0, $r5);

        if r2 == null goto label1;

        return r2;

     label1:
        $r6 = specialinvoke r0.<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>(r1);

        return $r6;
    }

androidx.versionedparcelable.VersionedParcel$ParcelException
    public void <init>(java.lang.Throwable)
    {
        androidx.versionedparcelable.VersionedParcel$ParcelException r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.versionedparcelable.VersionedParcel$ParcelException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        return;
    }

