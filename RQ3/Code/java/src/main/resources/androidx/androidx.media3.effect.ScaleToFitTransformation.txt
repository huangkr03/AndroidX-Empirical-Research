androidx.media3.effect.ScaleToFitTransformation
<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix transformationMatrix>
<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix adjustedTransformationMatrix>
    private void <init>(float, float, float)
    {
        androidx.media3.effect.ScaleToFitTransformation r0;
        float f0, f1, f2;
        android.graphics.Matrix $r1, $r2, $r3;

        r0 := @this: androidx.media3.effect.ScaleToFitTransformation;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix transformationMatrix> = $r1;

        $r2 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix transformationMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postScale(float,float)>(f0, f1);

        $r3 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix transformationMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean postRotate(float)>(f2);

        return;
    }

    public android.util.Pair configure(int, int)
    {
        androidx.media3.effect.ScaleToFitTransformation r0;
        int i0, i1, $i2, $i3, i4, i5;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, f19, f20, f21;
        float[][] r1, $r8, r21;
        float[] r2, $r9, $r10, $r11, $r12;
        android.graphics.Matrix $r3, $r4, $r5, $r6, $r7, $r13, $r17;
        boolean $z0, $z4, $z5;
        java.lang.Integer $r14, $r15, $r18, $r19;
        android.util.Pair $r16, $r20;

        r0 := @this: androidx.media3.effect.ScaleToFitTransformation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z4, "inputWidth must be positive");

        if i1 <= 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z5, "inputHeight must be positive");

        $r3 = new android.graphics.Matrix;

        $r4 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix transformationMatrix>;

        specialinvoke $r3.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r4);

        r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix adjustedTransformationMatrix> = $r3;

        $r5 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix transformationMatrix>;

        $z0 = virtualinvoke $r5.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label5;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r20 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r18, $r19);

        return $r20;

     label5:
        $f2 = (float) i0;

        $f1 = (float) i1;

        f0 = $f2 / $f1;

        $r6 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix adjustedTransformationMatrix>;

        virtualinvoke $r6.<android.graphics.Matrix: boolean preScale(float,float)>(f0, 1.0F);

        $r7 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix adjustedTransformationMatrix>;

        $f3 = 1.0F / f0;

        virtualinvoke $r7.<android.graphics.Matrix: boolean postScale(float,float)>($f3, 1.0F);

        $r8 = newarray (float[])[4];

        $r9 = newarray (float)[4];

        $r9[0] = -1.0F;

        $r9[1] = -1.0F;

        $r9[2] = 0.0F;

        $r9[3] = 1.0F;

        $r8[0] = $r9;

        $r10 = newarray (float)[4];

        $r10[0] = -1.0F;

        $r10[1] = 1.0F;

        $r10[2] = 0.0F;

        $r10[3] = 1.0F;

        $r8[1] = $r10;

        $r11 = newarray (float)[4];

        $r11[0] = 1.0F;

        $r11[1] = -1.0F;

        $r11[2] = 0.0F;

        $r11[3] = 1.0F;

        $r8[2] = $r11;

        $r12 = newarray (float)[4];

        $r12[0] = 1.0F;

        $r12[1] = 1.0F;

        $r12[2] = 0.0F;

        $r12[3] = 1.0F;

        $r8[3] = $r12;

        r1 = $r8;

        f16 = 3.4028235E38F;

        f17 = 1.4E-45F;

        f18 = 3.4028235E38F;

        f19 = 1.4E-45F;

        r21 = r1;

        i4 = lengthof r21;

        i5 = 0;

     label6:
        if i5 >= i4 goto label7;

        r2 = r21[i5];

        $r17 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix adjustedTransformationMatrix>;

        virtualinvoke $r17.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        $f12 = r2[0];

        f16 = staticinvoke <java.lang.Math: float min(float,float)>(f16, $f12);

        $f13 = r2[0];

        f17 = staticinvoke <java.lang.Math: float max(float,float)>(f17, $f13);

        $f14 = r2[1];

        f18 = staticinvoke <java.lang.Math: float min(float,float)>(f18, $f14);

        $f15 = r2[1];

        f19 = staticinvoke <java.lang.Math: float max(float,float)>(f19, $f15);

        i5 = i5 + 1;

        goto label6;

     label7:
        $f4 = f17 - f16;

        f20 = $f4 / 2.0F;

        $f5 = f19 - f18;

        f21 = $f5 / 2.0F;

        $r13 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix adjustedTransformationMatrix>;

        $f7 = 1.0F / f20;

        $f6 = 1.0F / f21;

        virtualinvoke $r13.<android.graphics.Matrix: boolean postScale(float,float)>($f7, $f6);

        $f8 = (float) i0;

        $f9 = $f8 * f20;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f9);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $f10 = (float) i1;

        $f11 = $f10 * f21;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f11);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r16 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r14, $r15);

        return $r16;
    }

    public android.graphics.Matrix getMatrix(long)
    {
        androidx.media3.effect.ScaleToFitTransformation r0;
        long l0;
        android.graphics.Matrix $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.effect.ScaleToFitTransformation;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.effect.ScaleToFitTransformation: android.graphics.Matrix adjustedTransformationMatrix>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object,java.lang.Object)>($r1, "configure must be called first");

        $r3 = (android.graphics.Matrix) $r2;

        return $r3;
    }

    void <init>(float, float, float, androidx.media3.effect.ScaleToFitTransformation$1)
    {
        androidx.media3.effect.ScaleToFitTransformation r0;
        float f0, f1, f2;
        androidx.media3.effect.ScaleToFitTransformation$1 r1;

        r0 := @this: androidx.media3.effect.ScaleToFitTransformation;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r1 := @parameter3: androidx.media3.effect.ScaleToFitTransformation$1;

        specialinvoke r0.<androidx.media3.effect.ScaleToFitTransformation: void <init>(float,float,float)>(f0, f1, f2);

        return;
    }

androidx.media3.effect.ScaleToFitTransformation$1
androidx.media3.effect.ScaleToFitTransformation$Builder
<androidx.media3.effect.ScaleToFitTransformation$Builder: float scaleX>
<androidx.media3.effect.ScaleToFitTransformation$Builder: float scaleY>
<androidx.media3.effect.ScaleToFitTransformation$Builder: float rotationDegrees>
    public void <init>()
    {
        androidx.media3.effect.ScaleToFitTransformation$Builder r0;

        r0 := @this: androidx.media3.effect.ScaleToFitTransformation$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float scaleX> = 1.0F;

        r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float scaleY> = 1.0F;

        r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float rotationDegrees> = 0.0F;

        return;
    }

    public androidx.media3.effect.ScaleToFitTransformation$Builder setScale(float, float)
    {
        androidx.media3.effect.ScaleToFitTransformation$Builder r0;
        float f0, f1;

        r0 := @this: androidx.media3.effect.ScaleToFitTransformation$Builder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float scaleX> = f0;

        r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float scaleY> = f1;

        return r0;
    }

    public androidx.media3.effect.ScaleToFitTransformation$Builder setRotationDegrees(float)
    {
        androidx.media3.effect.ScaleToFitTransformation$Builder r0;
        float f0;

        r0 := @this: androidx.media3.effect.ScaleToFitTransformation$Builder;

        f0 := @parameter0: float;

        r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float rotationDegrees> = f0;

        return r0;
    }

    public androidx.media3.effect.ScaleToFitTransformation build()
    {
        androidx.media3.effect.ScaleToFitTransformation$Builder r0;
        androidx.media3.effect.ScaleToFitTransformation $r1;
        float $f0, $f1, $f2;

        r0 := @this: androidx.media3.effect.ScaleToFitTransformation$Builder;

        $r1 = new androidx.media3.effect.ScaleToFitTransformation;

        $f2 = r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float scaleX>;

        $f1 = r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float scaleY>;

        $f0 = r0.<androidx.media3.effect.ScaleToFitTransformation$Builder: float rotationDegrees>;

        specialinvoke $r1.<androidx.media3.effect.ScaleToFitTransformation: void <init>(float,float,float,androidx.media3.effect.ScaleToFitTransformation$1)>($f2, $f1, $f0, null);

        return $r1;
    }

