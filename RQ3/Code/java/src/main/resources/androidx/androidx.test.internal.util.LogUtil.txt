androidx.test.internal.util.LogUtil
<androidx.test.internal.util.LogUtil: java.lang.String myProcName>
    static java.lang.String lambda$logDebug$0(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return r0;
    }

    static java.lang.String lambda$logDebugWithProcess$1(java.lang.String)
    {
        java.lang.String r0, r1, r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        r2 = staticinvoke <androidx.test.internal.util.LogUtil: java.lang.String procName()>();

        r1 = r0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static final java.lang.String procName()
    {
        androidx.test.internal.util.ProcSummary $r0;
        int $i0;
        boolean $z0;
        java.lang.String r1;

        r1 = <androidx.test.internal.util.LogUtil: java.lang.String myProcName>;

        if r1 != null goto label2;

        $r0 = staticinvoke <androidx.test.internal.util.ProcSummary: androidx.test.internal.util.ProcSummary summarize(java.lang.String)>("self");

        r1 = $r0.<androidx.test.internal.util.ProcSummary: java.lang.String cmdline>;

        goto label1;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 64 goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("-classpath");

        if $z0 == 0 goto label2;

        r1 = "robolectric";

     label2:
        return r1;
    }

    static void <clinit>()
    {
        <androidx.test.internal.util.LogUtil: java.lang.String myProcName> = null;

        return;
    }

    public void <init>()
    {
        androidx.test.internal.util.LogUtil r0;

        r0 := @this: androidx.test.internal.util.LogUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static transient void logDebug(java.lang.String, androidx.test.internal.util.LogUtil$Supplier, java.lang.Object[])
    {
        java.lang.String r0, $r4, $r5;
        androidx.test.internal.util.LogUtil$Supplier r1;
        java.lang.Object[] r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.test.internal.util.LogUtil$Supplier;

        r2 := @parameter2: java.lang.Object[];

        $z0 = staticinvoke <androidx.test.internal.util.LogUtil: boolean isLoggable(java.lang.String,int)>(r0, 3);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<androidx.test.internal.util.LogUtil$Supplier: java.lang.Object get()>();

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r0, $r5);

     label1:
        return;
    }

    public static transient void logDebug(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r1, r3;
        java.lang.Object[] r2;
        androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1 $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r3 = r1;

        $r4 = new androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1;

        specialinvoke $r4.<androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1: void <init>(java.lang.String)>(r3);

        staticinvoke <androidx.test.internal.util.LogUtil: void logDebug(java.lang.String,androidx.test.internal.util.LogUtil$Supplier,java.lang.Object[])>(r0, $r4, r2);

        return;
    }

    public static transient void logDebugWithProcess(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r1, r3;
        java.lang.Object[] r2;
        androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0 $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r3 = r1;

        $r4 = new androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0;

        specialinvoke $r4.<androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0: void <init>(java.lang.String)>(r3);

        staticinvoke <androidx.test.internal.util.LogUtil: void logDebug(java.lang.String,androidx.test.internal.util.LogUtil$Supplier,java.lang.Object[])>(r0, $r4, r2);

        return;
    }

    private static boolean isLoggable(java.lang.String, int)
    {
        int i0, $i1;
        boolean $z0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 23 goto label1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 22);

     label1:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r0, i0);

        return $z0;
    }

androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0
<androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0: java.lang.String f$0>
    public final java.lang.Object get()
    {
        androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0 r0;
        java.lang.String $r1, $r2;

        r0 := @this: androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0;

        $r1 = r0.<androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0: java.lang.String f$0>;

        $r2 = staticinvoke <androidx.test.internal.util.LogUtil: java.lang.String lambda$logDebugWithProcess$1(java.lang.String)>($r1);

        return $r2;
    }

    public void <init>(java.lang.String)
    {
        androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0 r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda0: java.lang.String f$0> = r1;

        return;
    }

androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1
<androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1: java.lang.String f$0>
    public final java.lang.Object get()
    {
        androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1 r0;
        java.lang.String $r1, $r2;

        r0 := @this: androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1;

        $r1 = r0.<androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1: java.lang.String f$0>;

        $r2 = staticinvoke <androidx.test.internal.util.LogUtil: java.lang.String lambda$logDebug$0(java.lang.String)>($r1);

        return $r2;
    }

    public void <init>(java.lang.String)
    {
        androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1 r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.internal.util.LogUtil$$ExternalSyntheticLambda1: java.lang.String f$0> = r1;

        return;
    }

androidx.test.internal.util.LogUtil$Supplier
<androidx.test.internal.util.LogUtil$Supplier: java.lang.Object get()>
