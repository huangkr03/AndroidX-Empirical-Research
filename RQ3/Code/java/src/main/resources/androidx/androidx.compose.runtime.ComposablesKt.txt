androidx.compose.runtime.ComposablesKt
    public static final java.lang.Object remember(kotlin.jvm.functions.Function0, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0;
        java.lang.Object r2, r4, r5, $r7, $r8;
        boolean z1;
        androidx.compose.runtime.Composer$Companion $r6;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        $r1 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "calculation");

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(remember):Composables.kt#9igjgp");

        z1 = 0;

        r4 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r6 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r4 != $r7 goto label1;

        r5 = interfaceinvoke r0.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r5);

        $r8 = r5;

        goto label2;

     label1:
        $r8 = r4;

     label2:
        r2 = $r8;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r2;
    }

    public static final java.lang.Object remember(java.lang.Object, kotlin.jvm.functions.Function0, androidx.compose.runtime.Composer, int)
    {
        java.lang.Object r0, r3, r5, r6, $r8, $r9;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.runtime.Composer $r2;
        int $i0;
        boolean z1;
        androidx.compose.runtime.Composer$Companion $r7;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "calculation");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1157296644);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(remember)P(1):Composables.kt#9igjgp");

        z1 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        r5 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z1 != 0 goto label1;

        $r7 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r8 = virtualinvoke $r7.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r5 != $r8 goto label2;

     label1:
        r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r6);

        $r9 = r6;

        goto label3;

     label2:
        $r9 = r5;

     label3:
        r3 = $r9;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public static final java.lang.Object remember(java.lang.Object, java.lang.Object, kotlin.jvm.functions.Function0, androidx.compose.runtime.Composer, int)
    {
        java.lang.Object r0, r1, r4, r6, r7, $r9, $r10;
        kotlin.jvm.functions.Function0 r2;
        androidx.compose.runtime.Composer $r3;
        int $i0;
        boolean z1, $z4, $z5;
        androidx.compose.runtime.Composer$Companion $r8;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 := @parameter3: androidx.compose.runtime.Composer;

        $i0 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "calculation");

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(511388516);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r3, "C(remember)P(1,2):Composables.kt#9igjgp");

        $z4 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        $z5 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        z1 = $z4 | $z5;

        r6 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z1 != 0 goto label1;

        $r8 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r6 != $r9 goto label2;

     label1:
        r7 = interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r7);

        $r10 = r7;

        goto label3;

     label2:
        $r10 = r6;

     label3:
        r4 = $r10;

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r4;
    }

    public static final java.lang.Object remember(java.lang.Object, java.lang.Object, java.lang.Object, kotlin.jvm.functions.Function0, androidx.compose.runtime.Composer, int)
    {
        java.lang.Object r0, r1, r2, r5, r7, r8, $r10, $r11;
        kotlin.jvm.functions.Function0 r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        boolean z1, $z4, $z5, $z6, $z7;
        androidx.compose.runtime.Composer$Companion $r9;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: kotlin.jvm.functions.Function0;

        $r4 := @parameter4: androidx.compose.runtime.Composer;

        $i0 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "calculation");

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1618982084);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r4, "C(remember)P(1,2,3):Composables.kt#9igjgp");

        $z4 = interfaceinvoke $r4.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        $z5 = interfaceinvoke $r4.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        $z6 = $z4 | $z5;

        $z7 = interfaceinvoke $r4.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r2);

        z1 = $z6 | $z7;

        r7 = interfaceinvoke $r4.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z1 != 0 goto label1;

        $r9 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r10 = virtualinvoke $r9.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r7 != $r10 goto label2;

     label1:
        r8 = interfaceinvoke r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r8);

        $r11 = r8;

        goto label3;

     label2:
        $r11 = r7;

     label3:
        r5 = $r11;

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r5;
    }

    public static final java.lang.Object remember(java.lang.Object[], kotlin.jvm.functions.Function0, androidx.compose.runtime.Composer, int)
    {
        java.lang.Object[] r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.runtime.Composer $r2;
        int $i0, i1, $i2;
        java.lang.Object r3, r4, $r6, r7, $r9, r10;
        androidx.compose.runtime.Composer$Companion $r5;
        boolean $z2, z3, z4;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "keys");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "calculation");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-568225417);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(remember)P(1):Composables.kt#9igjgp");

        z3 = 0;

        i1 = 0;

        $i2 = lengthof r0;

     label1:
        if i1 >= $i2 goto label2;

        r7 = r0[i1];

        $z2 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r7);

        z3 = z3 | $z2;

        i1 = i1 + 1;

        goto label1;

     label2:
        z4 = 0;

        r3 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z3 != 0 goto label3;

        $r5 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r3 != $r6 goto label4;

     label3:
        r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r4);

        $r9 = r4;

        goto label5;

     label4:
        $r9 = r3;

     label5:
        r10 = $r9;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r10;
    }

    public static final java.lang.Object key(java.lang.Object[], kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        java.lang.Object[] r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.compose.runtime.Composer $r2;
        int $i0, $i1, $i2;
        java.lang.Object r3;
        java.lang.Integer $r4;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "keys");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-11941951);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(key)P(1)128@4658L7:Composables.kt#9igjgp");

        $i1 = $i0 >> 3;

        $i2 = 14 & $i1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r4);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public static final void ReusableContent(java.lang.Object, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        java.lang.Object r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.compose.runtime.Composer $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(444418301);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(ReusableContent)P(1)145@5313L9:Composables.kt#9igjgp");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReusableGroup(int,java.lang.Object)>(207, r0);

        $i1 = $i0 >> 3;

        $i2 = 14 & $i1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReusableGroup()>();

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return;
    }

    public static final void ReusableContentHost(boolean, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        boolean z0, z2;
        kotlin.jvm.functions.Function2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        java.lang.Boolean $r2;
        java.lang.Integer $r3;

        z0 := @parameter0: boolean;

        r0 := @parameter1: kotlin.jvm.functions.Function2;

        $r1 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "content");

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReusableGroup(int,java.lang.Object)>(207, $r2);

        z2 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean changed(boolean)>(z0);

        if z0 == 0 goto label1;

        $i1 = $i0 >> 3;

        $i2 = 14 & $i1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r1, $r3);

        goto label2;

     label1:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void deactivateToEndGroup(boolean)>(z2);

     label2:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReusableGroup()>();

        return;
    }

    public static final androidx.compose.runtime.Composer getCurrentComposer(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.Composer $r0;
        int $i0;
        boolean $z0;
        kotlin.NotImplementedError $r1;

        $r0 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r0, -554250212, "C:Composables.kt#9igjgp");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-554250212, $i0, -1, "androidx.compose.runtime.<get-currentComposer> (Composables.kt:183)");

     label1:
        $r1 = new kotlin.NotImplementedError;

        specialinvoke $r1.<kotlin.NotImplementedError: void <init>(java.lang.String)>("Implemented as an intrinsic");

        throw $r1;
    }

    public static final androidx.compose.runtime.RecomposeScope getCurrentRecomposeScope(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.Composer $r0;
        int $i0;
        androidx.compose.runtime.RecomposeScope r1, $r2;
        boolean $z0, $z1;
        java.lang.String $r4, $r5;
        java.lang.IllegalStateException r6;
        java.lang.Throwable r7;

        $r0 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r0, 394957799, "C:Composables.kt#9igjgp");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(394957799, $i0, -1, "androidx.compose.runtime.<get-currentRecomposeScope> (Composables.kt:192)");

     label1:
        $r2 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: androidx.compose.runtime.RecomposeScope getRecomposeScope()>();

        if $r2 != null goto label2;

        r6 = new java.lang.IllegalStateException;

        $r4 = "no recompose scope found";

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        r7 = (java.lang.Throwable) r6;

        throw r7;

     label2:
        r1 = $r2;

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void recordUsed(androidx.compose.runtime.RecomposeScope)>(r1);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label3;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label3:
        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r0);

        return r1;
    }

    public static final androidx.compose.runtime.CompositionLocalContext getCurrentCompositionLocalContext(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.Composer $r0;
        int $i0;
        androidx.compose.runtime.CompositionLocalContext r1, $r2;
        boolean $z0, $z1;
        androidx.compose.runtime.CompositionContext $r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r4;

        $r0 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-43352356);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r0, "C:Composables.kt#9igjgp");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-43352356, $i0, -1, "androidx.compose.runtime.<get-currentCompositionLocalContext> (Composables.kt:207)");

     label1:
        $r2 = new androidx.compose.runtime.CompositionLocalContext;

        $r3 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: androidx.compose.runtime.CompositionContext buildContext()>();

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.CompositionContext: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getCompositionLocalScope$runtime_release()>();

        specialinvoke $r2.<androidx.compose.runtime.CompositionLocalContext: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r4);

        r1 = $r2;

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r1;
    }

    public static void getCurrentCompositionLocalContext$annotations()
    {
        return;
    }

    public static final int getCurrentCompositeKeyHash(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.Composer $r0;
        int $i0, i1;
        boolean $z0, $z1;

        $r0 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(524444915, $i0, -1, "androidx.compose.runtime.<get-currentCompositeKeyHash> (Composables.kt:224)");

     label1:
        i1 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: int getCompoundKeyHash()>();

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        return i1;
    }

    public static final void ComposeNode(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0, $r8;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.Composer $r2, $r4;
        int $i0;
        androidx.compose.runtime.Applier $r3;
        boolean $z1, $z2;
        androidx.compose.runtime.Updater $r5;
        androidx.compose.runtime.ComposablesKt$ComposeNode$1 $r7;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "factory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "update");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1886828752);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(ComposeNode):Composables.kt#9igjgp");

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: androidx.compose.runtime.Applier getApplier()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "E");

        $z1 = $r3 instanceof androidx.compose.runtime.Applier;

        if $z1 != 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposablesKt: void invalidApplier()>();

     label1:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startNode()>();

        $z2 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: boolean getInserting()>();

        if $z2 == 0 goto label2;

        $r7 = new androidx.compose.runtime.ComposablesKt$ComposeNode$1;

        specialinvoke $r7.<androidx.compose.runtime.ComposablesKt$ComposeNode$1: void <init>(kotlin.jvm.functions.Function0)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void createNode(kotlin.jvm.functions.Function0)>($r8);

        goto label3;

     label2:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void useNode()>();

     label3:
        $r4 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Composer constructor-impl(androidx.compose.runtime.Composer)>($r2);

        $r5 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Updater box-impl(androidx.compose.runtime.Composer)>($r4);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endNode()>();

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return;
    }

    public static final void ReusableComposeNode(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0, $r8;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.Composer $r2, $r4;
        int $i0;
        androidx.compose.runtime.Applier $r3;
        boolean $z1, $z2;
        androidx.compose.runtime.Updater $r5;
        androidx.compose.runtime.ComposablesKt$ReusableComposeNode$1 $r7;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "factory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "update");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1405779621);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(ReusableComposeNode):Composables.kt#9igjgp");

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: androidx.compose.runtime.Applier getApplier()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "E");

        $z1 = $r3 instanceof androidx.compose.runtime.Applier;

        if $z1 != 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposablesKt: void invalidApplier()>();

     label1:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReusableNode()>();

        $z2 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: boolean getInserting()>();

        if $z2 == 0 goto label2;

        $r7 = new androidx.compose.runtime.ComposablesKt$ReusableComposeNode$1;

        specialinvoke $r7.<androidx.compose.runtime.ComposablesKt$ReusableComposeNode$1: void <init>(kotlin.jvm.functions.Function0)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void createNode(kotlin.jvm.functions.Function0)>($r8);

        goto label3;

     label2:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void useNode()>();

     label3:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void disableReusing()>();

        $r4 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Composer constructor-impl(androidx.compose.runtime.Composer)>($r2);

        $r5 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Updater box-impl(androidx.compose.runtime.Composer)>($r4);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void enableReusing()>();

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endNode()>();

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return;
    }

    public static final void ComposeNode(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.jvm.functions.Function2 r2;
        androidx.compose.runtime.Composer $r3, $r5;
        int $i0, $i1, $i2;
        androidx.compose.runtime.Applier $r4;
        boolean $z1, $z2;
        androidx.compose.runtime.Updater $r6;
        java.lang.Integer $r8;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        $r3 := @parameter3: androidx.compose.runtime.Composer;

        $i0 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "factory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "update");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-548224868);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r3, "C(ComposeNode)P(1,2)334@12548L9:Composables.kt#9igjgp");

        $r4 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: androidx.compose.runtime.Applier getApplier()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "E");

        $z1 = $r4 instanceof androidx.compose.runtime.Applier;

        if $z1 != 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposablesKt: void invalidApplier()>();

     label1:
        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void startNode()>();

        $z2 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: boolean getInserting()>();

        if $z2 == 0 goto label2;

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void createNode(kotlin.jvm.functions.Function0)>(r0);

        goto label3;

     label2:
        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void useNode()>();

     label3:
        $r5 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Composer constructor-impl(androidx.compose.runtime.Composer)>($r3);

        $r6 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Updater box-impl(androidx.compose.runtime.Composer)>($r5);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $i1 = $i0 >> 6;

        $i2 = 14 & $i1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r8);

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void endNode()>();

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return;
    }

    public static final void ReusableComposeNode(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.jvm.functions.Function2 r2;
        androidx.compose.runtime.Composer $r3, $r5;
        int $i0, $i1, $i2;
        androidx.compose.runtime.Applier $r4;
        boolean $z1, $z2;
        androidx.compose.runtime.Updater $r6;
        java.lang.Integer $r8;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        $r3 := @parameter3: androidx.compose.runtime.Composer;

        $i0 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "factory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "update");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-692256719);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r3, "C(ReusableComposeNode)P(1,2)376@14087L9:Composables.kt#9igjgp");

        $r4 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: androidx.compose.runtime.Applier getApplier()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "E");

        $z1 = $r4 instanceof androidx.compose.runtime.Applier;

        if $z1 != 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposablesKt: void invalidApplier()>();

     label1:
        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void startReusableNode()>();

        $z2 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: boolean getInserting()>();

        if $z2 == 0 goto label2;

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void createNode(kotlin.jvm.functions.Function0)>(r0);

        goto label3;

     label2:
        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void useNode()>();

     label3:
        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void disableReusing()>();

        $r5 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Composer constructor-impl(androidx.compose.runtime.Composer)>($r3);

        $r6 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Updater box-impl(androidx.compose.runtime.Composer)>($r5);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void enableReusing()>();

        $i1 = $i0 >> 6;

        $i2 = 14 & $i1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r8);

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void endNode()>();

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return;
    }

    public static final void ComposeNode(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function3, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.jvm.functions.Function3 r2;
        kotlin.jvm.functions.Function2 r3;
        androidx.compose.runtime.Composer $r4, $r6, $r9;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.runtime.Applier $r5;
        boolean $z1, $z2;
        androidx.compose.runtime.Updater $r7;
        androidx.compose.runtime.SkippableUpdater $r10;
        java.lang.Integer $r11, $r13;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r2 := @parameter2: kotlin.jvm.functions.Function3;

        r3 := @parameter3: kotlin.jvm.functions.Function2;

        $r4 := @parameter4: androidx.compose.runtime.Composer;

        $i0 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "factory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "update");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "skippableUpdate");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "content");

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.Composer: androidx.compose.runtime.Applier getApplier()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "E");

        $z1 = $r5 instanceof androidx.compose.runtime.Applier;

        if $z1 != 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposablesKt: void invalidApplier()>();

     label1:
        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void startNode()>();

        $z2 = interfaceinvoke $r4.<androidx.compose.runtime.Composer: boolean getInserting()>();

        if $z2 == 0 goto label2;

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void createNode(kotlin.jvm.functions.Function0)>(r0);

        goto label3;

     label2:
        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void useNode()>();

     label3:
        $r6 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Composer constructor-impl(androidx.compose.runtime.Composer)>($r4);

        $r7 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Updater box-impl(androidx.compose.runtime.Composer)>($r6);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r9 = staticinvoke <androidx.compose.runtime.SkippableUpdater: androidx.compose.runtime.Composer constructor-impl(androidx.compose.runtime.Composer)>($r4);

        $r10 = staticinvoke <androidx.compose.runtime.SkippableUpdater: androidx.compose.runtime.SkippableUpdater box-impl(androidx.compose.runtime.Composer)>($r9);

        $i1 = $i0 >> 3;

        $i2 = 112 & $i1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r2.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r4, $r11);

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(2058660585);

        $i3 = $i0 >> 9;

        $i4 = 14 & $i3;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r13);

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void endNode()>();

        return;
    }

    public static final void ReusableComposeNode(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function3, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.jvm.functions.Function3 r2;
        kotlin.jvm.functions.Function2 r3;
        androidx.compose.runtime.Composer $r4, $r6, $r9;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.runtime.Applier $r5;
        boolean $z1, $z2;
        androidx.compose.runtime.Updater $r7;
        androidx.compose.runtime.SkippableUpdater $r10;
        java.lang.Integer $r11, $r13;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r2 := @parameter2: kotlin.jvm.functions.Function3;

        r3 := @parameter3: kotlin.jvm.functions.Function2;

        $r4 := @parameter4: androidx.compose.runtime.Composer;

        $i0 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "factory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "update");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "skippableUpdate");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "content");

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.Composer: androidx.compose.runtime.Applier getApplier()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "E");

        $z1 = $r5 instanceof androidx.compose.runtime.Applier;

        if $z1 != 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposablesKt: void invalidApplier()>();

     label1:
        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void startReusableNode()>();

        $z2 = interfaceinvoke $r4.<androidx.compose.runtime.Composer: boolean getInserting()>();

        if $z2 == 0 goto label2;

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void createNode(kotlin.jvm.functions.Function0)>(r0);

        goto label3;

     label2:
        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void useNode()>();

     label3:
        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void disableReusing()>();

        $r6 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Composer constructor-impl(androidx.compose.runtime.Composer)>($r4);

        $r7 = staticinvoke <androidx.compose.runtime.Updater: androidx.compose.runtime.Updater box-impl(androidx.compose.runtime.Composer)>($r6);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void enableReusing()>();

        $r9 = staticinvoke <androidx.compose.runtime.SkippableUpdater: androidx.compose.runtime.Composer constructor-impl(androidx.compose.runtime.Composer)>($r4);

        $r10 = staticinvoke <androidx.compose.runtime.SkippableUpdater: androidx.compose.runtime.SkippableUpdater box-impl(androidx.compose.runtime.Composer)>($r9);

        $i1 = $i0 >> 3;

        $i2 = 112 & $i1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r2.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r4, $r11);

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(2058660585);

        $i3 = $i0 >> 9;

        $i4 = 14 & $i3;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r13);

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        interfaceinvoke $r4.<androidx.compose.runtime.Composer: void endNode()>();

        return;
    }

    public static final void invalidApplier()
    {
        java.lang.String $r1, $r2;
        java.lang.IllegalStateException r3;
        java.lang.Throwable r4;

        r3 = new java.lang.IllegalStateException;

        $r1 = "Invalid applier";

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    public static final androidx.compose.runtime.CompositionContext rememberCompositionContext(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.Composer $r0;
        int $i0;
        androidx.compose.runtime.CompositionContext r1;
        boolean $z0, $z1;

        $r0 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-1165786124);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r0, "C(rememberCompositionContext):Composables.kt#9igjgp");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1165786124, $i0, -1, "androidx.compose.runtime.rememberCompositionContext (Composables.kt:486)");

     label1:
        r1 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: androidx.compose.runtime.CompositionContext buildContext()>();

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r1;
    }

