android.databinding.tool.processing.Scope
<android.databinding.tool.processing.Scope: java.lang.ThreadLocal sScopeItems>
<android.databinding.tool.processing.Scope: java.util.List sDeferredExceptions>
    public void <init>()
    {
        android.databinding.tool.processing.Scope r0;

        r0 := @this: android.databinding.tool.processing.Scope;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void enter(android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.Location r0;
        android.databinding.tool.processing.Scope$1 $r1;

        r0 := @parameter0: android.databinding.tool.store.Location;

        $r1 = new android.databinding.tool.processing.Scope$1;

        specialinvoke $r1.<android.databinding.tool.processing.Scope$1: void <init>(android.databinding.tool.store.Location)>(r0);

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>($r1);

        return;
    }

    public static void enter(android.databinding.tool.processing.scopes.ScopeProvider)
    {
        android.databinding.tool.processing.scopes.ScopeProvider r0;
        android.databinding.tool.processing.Scope$ScopeEntry r1, r2, $r5;
        java.lang.ThreadLocal $r3, $r6;
        java.lang.Object $r4;

        r0 := @parameter0: android.databinding.tool.processing.scopes.ScopeProvider;

        $r3 = <android.databinding.tool.processing.Scope: java.lang.ThreadLocal sScopeItems>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (android.databinding.tool.processing.Scope$ScopeEntry) $r4;

        $r5 = new android.databinding.tool.processing.Scope$ScopeEntry;

        specialinvoke $r5.<android.databinding.tool.processing.Scope$ScopeEntry: void <init>(android.databinding.tool.processing.scopes.ScopeProvider,android.databinding.tool.processing.Scope$ScopeEntry)>(r0, r1);

        r2 = $r5;

        $r6 = <android.databinding.tool.processing.Scope: java.lang.ThreadLocal sScopeItems>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

        return;
    }

    public static void exit()
    {
        android.databinding.tool.processing.Scope$ScopeEntry r0, $r4;
        java.lang.ThreadLocal $r1, $r5;
        java.lang.Object $r2;
        java.lang.Object[] $r3;

        $r1 = <android.databinding.tool.processing.Scope: java.lang.ThreadLocal sScopeItems>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r0 = (android.databinding.tool.processing.Scope$ScopeEntry) $r2;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Inconsistent scope exit", $r3);

        $r5 = <android.databinding.tool.processing.Scope: java.lang.ThreadLocal sScopeItems>;

        $r4 = r0.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.Scope$ScopeEntry mParent>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>($r4);

        return;
    }

    public static void defer(android.databinding.tool.processing.ScopedException)
    {
        android.databinding.tool.processing.ScopedException r0;
        java.util.List $r1;

        r0 := @parameter0: android.databinding.tool.processing.ScopedException;

        $r1 = <android.databinding.tool.processing.Scope: java.util.List sDeferredExceptions>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    private static transient void registerErrorInternal(java.lang.String, int, android.databinding.tool.processing.scopes.ScopeProvider[])
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3;
        android.databinding.tool.processing.scopes.ScopeProvider[] r1;
        java.lang.Throwable r2, $r7;
        android.databinding.tool.processing.ScopedException $r3;
        java.lang.Object[] $r4;
        android.databinding.tool.processing.scopes.ScopeProvider $r5, $r6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.databinding.tool.processing.scopes.ScopeProvider[];

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 > i0 goto label2;

     label1:
        $r3 = new android.databinding.tool.processing.ScopedException;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r3.<android.databinding.tool.processing.ScopedException: void <init>(java.lang.String,java.lang.Object[])>(r0, $r4);

        staticinvoke <android.databinding.tool.processing.Scope: void defer(android.databinding.tool.processing.ScopedException)>($r3);

        goto label6;

     label2:
        $r5 = r1[i0];

        if $r5 != null goto label3;

        $i3 = i0 + 1;

        staticinvoke <android.databinding.tool.processing.Scope: void registerErrorInternal(java.lang.String,int,android.databinding.tool.processing.scopes.ScopeProvider[])>(r0, $i3, r1);

        goto label6;

     label3:
        $r6 = r1[i0];

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>($r6);

        $i2 = i0 + 1;

        staticinvoke <android.databinding.tool.processing.Scope: void registerErrorInternal(java.lang.String,int,android.databinding.tool.processing.scopes.ScopeProvider[])>(r0, $i2, r1);

     label4:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label6;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static transient void registerError(java.lang.String, android.databinding.tool.processing.scopes.ScopeProvider[])
    {
        java.lang.String r0;
        android.databinding.tool.processing.scopes.ScopeProvider[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.databinding.tool.processing.scopes.ScopeProvider[];

        staticinvoke <android.databinding.tool.processing.Scope: void registerErrorInternal(java.lang.String,int,android.databinding.tool.processing.scopes.ScopeProvider[])>(r0, 0, r1);

        return;
    }

    public static void assertNoError()
    {
        java.lang.StringBuilder r0, $r11, $r13, $r16, r18, r20;
        java.util.HashSet r1, r19;
        java.util.Iterator r2;
        android.databinding.tool.processing.ScopedException r3;
        java.lang.String r4, $r12, $r14;
        java.util.List $r5, $r8;
        boolean $z0, $z1, $z2;
        java.lang.Object $r15;
        android.databinding.tool.util.LoggedErrorException r21;
        java.lang.Throwable r22;

        $r5 = <android.databinding.tool.processing.Scope: java.util.List sDeferredExceptions>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        r0 = r18;

        r19 = new java.util.HashSet;

        specialinvoke r19.<java.util.HashSet: void <init>()>();

        r1 = r19;

        $r8 = <android.databinding.tool.processing.Scope: java.util.List sDeferredExceptions>;

        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.processing.ScopedException) $r15;

        r4 = virtualinvoke r3.<android.databinding.tool.processing.ScopedException: java.lang.String getMessage()>();

        $z2 = virtualinvoke r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r4);

        if $z2 != 0 goto label3;

        $r16 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label3:
        goto label2;

     label4:
        r21 = new android.databinding.tool.util.LoggedErrorException;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found data binding errors.\n");

        $r12 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<android.databinding.tool.util.LoggedErrorException: void <init>(java.lang.String)>($r14);

        r22 = (java.lang.Throwable) r21;

        throw r22;
    }

    static java.lang.String produceScopeLog()
    {
        java.lang.StringBuilder r0, $r6, $r12, $r13, $r17, $r20, $r23;
        android.databinding.tool.processing.scopes.ScopeProvider r1;
        android.databinding.tool.processing.scopes.LocationScopeProvider r2;
        java.util.List r3;
        java.util.Iterator r4;
        android.databinding.tool.store.Location r5;
        java.lang.ThreadLocal $r8;
        java.lang.Object $r9, $r16;
        java.lang.String $r11, $r22;
        boolean $z0, $z1, $z2;
        android.databinding.tool.processing.scopes.FileScopeProvider $r21;
        android.databinding.tool.processing.Scope$ScopeEntry r25;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r0 = $r6;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("full scope log\n");

        $r8 = <android.databinding.tool.processing.Scope: java.lang.ThreadLocal sScopeItems>;

        $r9 = virtualinvoke $r8.<java.lang.ThreadLocal: java.lang.Object get()>();

        r25 = (android.databinding.tool.processing.Scope$ScopeEntry) $r9;

     label1:
        if r25 == null goto label6;

        r1 = r25.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.scopes.ScopeProvider mProvider>;

        $r12 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("---");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $z0 = r1 instanceof android.databinding.tool.processing.scopes.FileScopeProvider;

        if $z0 == 0 goto label2;

        $r20 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r21 = (android.databinding.tool.processing.scopes.FileScopeProvider) r1;

        $r22 = interfaceinvoke $r21.<android.databinding.tool.processing.scopes.FileScopeProvider: java.lang.String provideScopeFilePath()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        $z1 = r1 instanceof android.databinding.tool.processing.scopes.LocationScopeProvider;

        if $z1 == 0 goto label5;

        r2 = (android.databinding.tool.processing.scopes.LocationScopeProvider) r1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loc:");

        r3 = interfaceinvoke r2.<android.databinding.tool.processing.scopes.LocationScopeProvider: java.util.List provideScopeLocation()>();

        if r3 != null goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null\n");

        goto label5;

     label3:
        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.databinding.tool.store.Location) $r16;

        $r17 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label4;

     label5:
        r25 = r25.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.Scope$ScopeEntry mParent>;

        goto label1;

     label6:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("---\n");

        $r11 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    static android.databinding.tool.processing.ScopedErrorReport createReport()
    {
        android.databinding.tool.processing.scopes.ScopeProvider r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        android.databinding.tool.processing.ScopedErrorReport $r3;
        boolean $z0, $z1;
        android.databinding.tool.processing.scopes.FileScopeProvider $r4;
        android.databinding.tool.processing.scopes.LocationScopeProvider $r5;
        android.databinding.tool.processing.Scope$ScopeEntry r6;
        java.lang.String r7;
        java.util.List r8;

        $r1 = <android.databinding.tool.processing.Scope: java.lang.ThreadLocal sScopeItems>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r6 = (android.databinding.tool.processing.Scope$ScopeEntry) $r2;

        r7 = null;

        r8 = null;

     label1:
        if r6 == null goto label5;

        if r7 == null goto label2;

        if r8 != null goto label5;

     label2:
        r0 = r6.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.scopes.ScopeProvider mProvider>;

        if r8 != null goto label3;

        $z1 = r0 instanceof android.databinding.tool.processing.scopes.LocationScopeProvider;

        if $z1 == 0 goto label3;

        $r5 = (android.databinding.tool.processing.scopes.LocationScopeProvider) r0;

        r8 = staticinvoke <android.databinding.tool.processing.Scope: java.util.List findAbsoluteLocationFrom(android.databinding.tool.processing.Scope$ScopeEntry,android.databinding.tool.processing.scopes.LocationScopeProvider)>(r6, $r5);

     label3:
        if r7 != null goto label4;

        $z0 = r0 instanceof android.databinding.tool.processing.scopes.FileScopeProvider;

        if $z0 == 0 goto label4;

        $r4 = (android.databinding.tool.processing.scopes.FileScopeProvider) r0;

        r7 = interfaceinvoke $r4.<android.databinding.tool.processing.scopes.FileScopeProvider: java.lang.String provideScopeFilePath()>();

     label4:
        r6 = r6.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.Scope$ScopeEntry mParent>;

        goto label1;

     label5:
        $r3 = new android.databinding.tool.processing.ScopedErrorReport;

        specialinvoke $r3.<android.databinding.tool.processing.ScopedErrorReport: void <init>(java.lang.String,java.util.List)>(r7, r8);

        return $r3;
    }

    private static java.util.List findAbsoluteLocationFrom(android.databinding.tool.processing.Scope$ScopeEntry, android.databinding.tool.processing.scopes.LocationScopeProvider)
    {
        android.databinding.tool.processing.Scope$ScopeEntry r0, $r9;
        android.databinding.tool.processing.scopes.LocationScopeProvider r1;
        java.util.List r2, $r13, r16;
        java.util.ArrayList r3, r15;
        java.util.Iterator r4;
        android.databinding.tool.store.Location r5, r6, $r11, $r12;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        java.lang.Object $r8, $r10, $r14;

        r0 := @parameter0: android.databinding.tool.processing.Scope$ScopeEntry;

        r1 := @parameter1: android.databinding.tool.processing.scopes.LocationScopeProvider;

        r2 = interfaceinvoke r1.<android.databinding.tool.processing.scopes.LocationScopeProvider: java.util.List provideScopeLocation()>();

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 1 goto label3;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (android.databinding.tool.store.Location) $r10;

        $r12 = virtualinvoke $r11.<android.databinding.tool.store.Location: android.databinding.tool.store.Location toAbsoluteLocation()>();

        $r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r12);

        return $r13;

     label3:
        r15 = new java.util.ArrayList;

        specialinvoke r15.<java.util.ArrayList: void <init>()>();

        r3 = r15;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.databinding.tool.store.Location) $r8;

        r6 = virtualinvoke r5.<android.databinding.tool.store.Location: android.databinding.tool.store.Location toAbsoluteLocation()>();

        $r9 = r0.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.Scope$ScopeEntry mParent>;

        $z3 = staticinvoke <android.databinding.tool.processing.Scope: boolean validatedContained(android.databinding.tool.processing.Scope$ScopeEntry,android.databinding.tool.store.Location)>($r9, r6);

        if $z3 == 0 goto label5;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

     label5:
        goto label4;

     label6:
        $z2 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label7;

        $r14 = r2;

        goto label8;

     label7:
        $r14 = r3;

     label8:
        r16 = (java.util.List) $r14;

        return r16;
    }

    private static boolean validatedContained(android.databinding.tool.processing.Scope$ScopeEntry, android.databinding.tool.store.Location)
    {
        android.databinding.tool.processing.Scope$ScopeEntry r0, $r8;
        android.databinding.tool.store.Location r1, r5;
        android.databinding.tool.processing.scopes.ScopeProvider r2;
        java.util.List r3;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2, $z3;
        android.databinding.tool.processing.scopes.LocationScopeProvider $r6;
        java.lang.Object $r7;

        r0 := @parameter0: android.databinding.tool.processing.Scope$ScopeEntry;

        r1 := @parameter1: android.databinding.tool.store.Location;

        if r0 != null goto label1;

        return 1;

     label1:
        r2 = r0.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.scopes.ScopeProvider mProvider>;

        $z0 = r2 instanceof android.databinding.tool.processing.scopes.LocationScopeProvider;

        if $z0 != 0 goto label2;

        $r8 = r0.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.Scope$ScopeEntry mParent>;

        $z3 = staticinvoke <android.databinding.tool.processing.Scope: boolean validatedContained(android.databinding.tool.processing.Scope$ScopeEntry,android.databinding.tool.store.Location)>($r8, r1);

        return $z3;

     label2:
        $r6 = (android.databinding.tool.processing.scopes.LocationScopeProvider) r2;

        r3 = staticinvoke <android.databinding.tool.processing.Scope: java.util.List findAbsoluteLocationFrom(android.databinding.tool.processing.Scope$ScopeEntry,android.databinding.tool.processing.scopes.LocationScopeProvider)>(r0, $r6);

        if r3 == null goto label5;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.databinding.tool.store.Location) $r7;

        $z2 = virtualinvoke r5.<android.databinding.tool.store.Location: boolean contains(android.databinding.tool.store.Location)>(r1);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        goto label3;

     label5:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;
        java.util.ArrayList $r1;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <android.databinding.tool.processing.Scope: java.lang.ThreadLocal sScopeItems> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <android.databinding.tool.processing.Scope: java.util.List sDeferredExceptions> = $r1;

        return;
    }

android.databinding.tool.processing.Scope$1
<android.databinding.tool.processing.Scope$1: android.databinding.tool.store.Location val$location>
    void <init>(android.databinding.tool.store.Location)
    {
        android.databinding.tool.processing.Scope$1 r0;
        android.databinding.tool.store.Location r1;

        r0 := @this: android.databinding.tool.processing.Scope$1;

        r1 := @parameter0: android.databinding.tool.store.Location;

        r0.<android.databinding.tool.processing.Scope$1: android.databinding.tool.store.Location val$location> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List provideScopeLocation()
    {
        android.databinding.tool.processing.Scope$1 r0;
        android.databinding.tool.store.Location $r1;
        java.util.List $r2;

        r0 := @this: android.databinding.tool.processing.Scope$1;

        $r1 = r0.<android.databinding.tool.processing.Scope$1: android.databinding.tool.store.Location val$location>;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        return $r2;
    }

android.databinding.tool.processing.Scope$ScopeEntry
<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.scopes.ScopeProvider mProvider>
<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.Scope$ScopeEntry mParent>
    public void <init>(android.databinding.tool.processing.scopes.ScopeProvider, android.databinding.tool.processing.Scope$ScopeEntry)
    {
        android.databinding.tool.processing.Scope$ScopeEntry r0, r2;
        android.databinding.tool.processing.scopes.ScopeProvider r1;

        r0 := @this: android.databinding.tool.processing.Scope$ScopeEntry;

        r1 := @parameter0: android.databinding.tool.processing.scopes.ScopeProvider;

        r2 := @parameter1: android.databinding.tool.processing.Scope$ScopeEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.scopes.ScopeProvider mProvider> = r1;

        r0.<android.databinding.tool.processing.Scope$ScopeEntry: android.databinding.tool.processing.Scope$ScopeEntry mParent> = r2;

        return;
    }

