androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter
    private void <init>()
    {
        androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter r0;

        r0 := @this: androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.app.appsearch.SetSchemaRequest toPlatformSetSchemaRequest(androidx.appsearch.app.SetSchemaRequest)
    {
        androidx.appsearch.app.SetSchemaRequest r0;
        android.app.appsearch.SetSchemaRequest$Builder r1, $r3, $r11, $r12;
        java.util.Set $r4, $r5, $r7, $r10, $r21, $r24, $r32, r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.Map $r6, $r8, $r9, $r20;
        int $i0;
        android.app.appsearch.SetSchemaRequest $r13;
        java.lang.Object $r14, $r15, $r17, $r22, $r23, $r25, $r26, $r30, $r31, $r33, $r34, $r40, $r42;
        androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1 $r16, r61;
        java.lang.String $r18, $r27, $r36, $r37, r49;
        java.lang.UnsupportedOperationException $r29;
        android.app.appsearch.PackageIdentifier $r35;
        byte[] $r38;
        android.app.appsearch.AppSearchSchema[] $r43;
        android.app.appsearch.AppSearchSchema $r44;
        java.util.Iterator r46, r48, r50, r52, r54, r56, r58;
        androidx.appsearch.app.AppSearchSchema r47;
        java.util.Map$Entry r51, r55, r59;
        androidx.appsearch.app.PackageIdentifier r53;
        androidx.appsearch.app.Migrator r60;

        r0 := @parameter0: androidx.appsearch.app.SetSchemaRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = new android.app.appsearch.SetSchemaRequest$Builder;

        specialinvoke $r3.<android.app.appsearch.SetSchemaRequest$Builder: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Set getSchemas()>();

        r46 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r42 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (androidx.appsearch.app.AppSearchSchema) $r42;

        $r43 = newarray (android.app.appsearch.AppSearchSchema)[1];

        $r44 = staticinvoke <androidx.appsearch.platformstorage.converter.SchemaToPlatformConverter: android.app.appsearch.AppSearchSchema toPlatformSchema(androidx.appsearch.app.AppSearchSchema)>(r47);

        $r43[0] = $r44;

        virtualinvoke r1.<android.app.appsearch.SetSchemaRequest$Builder: android.app.appsearch.SetSchemaRequest$Builder addSchemas(android.app.appsearch.AppSearchSchema[])>($r43);

        goto label01;

     label02:
        $r5 = virtualinvoke r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Set getSchemasNotDisplayedBySystem()>();

        r48 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r40 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();

        r49 = (java.lang.String) $r40;

        virtualinvoke r1.<android.app.appsearch.SetSchemaRequest$Builder: android.app.appsearch.SetSchemaRequest$Builder setSchemaTypeDisplayedBySystem(java.lang.String,boolean)>(r49, 0);

        goto label03;

     label04:
        $r6 = virtualinvoke r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map getSchemasVisibleToPackagesInternal()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r50 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r30 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.util.Map$Entry) $r30;

        $r31 = interfaceinvoke r51.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r32 = (java.util.Set) $r31;

        r52 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z8 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label07;

        $r33 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>();

        r53 = (androidx.appsearch.app.PackageIdentifier) $r33;

        $r34 = interfaceinvoke r51.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r36 = (java.lang.String) $r34;

        $r35 = new android.app.appsearch.PackageIdentifier;

        $r37 = virtualinvoke r53.<androidx.appsearch.app.PackageIdentifier: java.lang.String getPackageName()>();

        $r38 = virtualinvoke r53.<androidx.appsearch.app.PackageIdentifier: byte[] getSha256Certificate()>();

        specialinvoke $r35.<android.app.appsearch.PackageIdentifier: void <init>(java.lang.String,byte[])>($r37, $r38);

        virtualinvoke r1.<android.app.appsearch.SetSchemaRequest$Builder: android.app.appsearch.SetSchemaRequest$Builder setSchemaTypeVisibilityForPackage(java.lang.String,boolean,android.app.appsearch.PackageIdentifier)>($r36, 1, $r35);

        goto label06;

     label07:
        goto label05;

     label08:
        $r8 = virtualinvoke r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map getRequiredPermissionsForSchemaTypeVisibility()>();

        $z3 = interfaceinvoke $r8.<java.util.Map: boolean isEmpty()>();

        if $z3 != 0 goto label13;

        $z5 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z5 != 0 goto label09;

        $r29 = new java.lang.UnsupportedOperationException;

        specialinvoke $r29.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Set required permissions for schema type visibility are not supported with this backend/Android API level combination.");

        throw $r29;

     label09:
        $r20 = virtualinvoke r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map getRequiredPermissionsForSchemaTypeVisibility()>();

        $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Set entrySet()>();

        r54 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z6 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label13;

        $r22 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.util.Map$Entry) $r22;

        $r23 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.util.Set) $r23;

        r56 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z7 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label12;

        $r25 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (java.util.Set) $r25;

        $r26 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (java.lang.String) $r26;

        virtualinvoke r1.<android.app.appsearch.SetSchemaRequest$Builder: android.app.appsearch.SetSchemaRequest$Builder addRequiredPermissionsForSchemaTypeVisibility(java.lang.String,java.util.Set)>($r27, r57);

        goto label11;

     label12:
        goto label10;

     label13:
        $r9 = virtualinvoke r0.<androidx.appsearch.app.SetSchemaRequest: java.util.Map getMigrators()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        r58 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z9 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label15;

        $r14 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();

        r59 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r59.<java.util.Map$Entry: java.lang.Object getValue()>();

        r60 = (androidx.appsearch.app.Migrator) $r15;

        $r16 = new androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1;

        specialinvoke $r16.<androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1: void <init>(androidx.appsearch.app.Migrator)>(r60);

        r61 = $r16;

        $r17 = interfaceinvoke r59.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r17;

        virtualinvoke r1.<android.app.appsearch.SetSchemaRequest$Builder: android.app.appsearch.SetSchemaRequest$Builder setMigrator(java.lang.String,android.app.appsearch.Migrator)>($r18, r61);

        goto label14;

     label15:
        $z4 = virtualinvoke r0.<androidx.appsearch.app.SetSchemaRequest: boolean isForceOverride()>();

        $r11 = virtualinvoke r1.<android.app.appsearch.SetSchemaRequest$Builder: android.app.appsearch.SetSchemaRequest$Builder setForceOverride(boolean)>($z4);

        $i0 = virtualinvoke r0.<androidx.appsearch.app.SetSchemaRequest: int getVersion()>();

        $r12 = virtualinvoke $r11.<android.app.appsearch.SetSchemaRequest$Builder: android.app.appsearch.SetSchemaRequest$Builder setVersion(int)>($i0);

        $r13 = virtualinvoke $r12.<android.app.appsearch.SetSchemaRequest$Builder: android.app.appsearch.SetSchemaRequest build()>();

        return $r13;
    }

    public static androidx.appsearch.app.SetSchemaResponse toJetpackSetSchemaResponse(android.app.appsearch.SetSchemaResponse)
    {
        android.app.appsearch.SetSchemaResponse r0;
        androidx.appsearch.app.SetSchemaResponse$Builder r1, $r5, $r7, $r9;
        java.util.Iterator r2;
        android.app.appsearch.SetSchemaResponse$MigrationFailure r3;
        java.util.Set $r6, $r8, $r10;
        java.util.List $r11;
        boolean $z0;
        androidx.appsearch.app.SetSchemaResponse $r12;
        java.lang.Object $r13;
        androidx.appsearch.app.SetSchemaResponse$MigrationFailure $r14;
        java.lang.String $r15, $r16, $r17;
        android.app.appsearch.AppSearchResult $r18;
        java.util.function.Function $r19;
        androidx.appsearch.app.AppSearchResult $r20;

        r0 := @parameter0: android.app.appsearch.SetSchemaResponse;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r5 = new androidx.appsearch.app.SetSchemaResponse$Builder;

        specialinvoke $r5.<androidx.appsearch.app.SetSchemaResponse$Builder: void <init>()>();

        $r6 = virtualinvoke r0.<android.app.appsearch.SetSchemaResponse: java.util.Set getDeletedTypes()>();

        $r7 = virtualinvoke $r5.<androidx.appsearch.app.SetSchemaResponse$Builder: androidx.appsearch.app.SetSchemaResponse$Builder addDeletedTypes(java.util.Collection)>($r6);

        $r8 = virtualinvoke r0.<android.app.appsearch.SetSchemaResponse: java.util.Set getIncompatibleTypes()>();

        $r9 = virtualinvoke $r7.<androidx.appsearch.app.SetSchemaResponse$Builder: androidx.appsearch.app.SetSchemaResponse$Builder addIncompatibleTypes(java.util.Collection)>($r8);

        $r10 = virtualinvoke r0.<android.app.appsearch.SetSchemaResponse: java.util.Set getMigratedTypes()>();

        r1 = virtualinvoke $r9.<androidx.appsearch.app.SetSchemaResponse$Builder: androidx.appsearch.app.SetSchemaResponse$Builder addMigratedTypes(java.util.Collection)>($r10);

        $r11 = virtualinvoke r0.<android.app.appsearch.SetSchemaResponse: java.util.List getMigrationFailures()>();

        r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.app.appsearch.SetSchemaResponse$MigrationFailure) $r13;

        $r14 = new androidx.appsearch.app.SetSchemaResponse$MigrationFailure;

        $r15 = virtualinvoke r3.<android.app.appsearch.SetSchemaResponse$MigrationFailure: java.lang.String getNamespace()>();

        $r16 = virtualinvoke r3.<android.app.appsearch.SetSchemaResponse$MigrationFailure: java.lang.String getDocumentId()>();

        $r17 = virtualinvoke r3.<android.app.appsearch.SetSchemaResponse$MigrationFailure: java.lang.String getSchemaType()>();

        $r18 = virtualinvoke r3.<android.app.appsearch.SetSchemaResponse$MigrationFailure: android.app.appsearch.AppSearchResult getAppSearchResult()>();

        $r19 = staticinvoke <java.util.function.Function: java.util.function.Function identity()>();

        $r20 = staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: androidx.appsearch.app.AppSearchResult platformAppSearchResultToJetpack(android.app.appsearch.AppSearchResult,java.util.function.Function)>($r18, $r19);

        specialinvoke $r14.<androidx.appsearch.app.SetSchemaResponse$MigrationFailure: void <init>(java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.app.AppSearchResult)>($r15, $r16, $r17, $r20);

        virtualinvoke r1.<androidx.appsearch.app.SetSchemaResponse$Builder: androidx.appsearch.app.SetSchemaResponse$Builder addMigrationFailure(androidx.appsearch.app.SetSchemaResponse$MigrationFailure)>($r14);

        goto label1;

     label2:
        $r12 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaResponse$Builder: androidx.appsearch.app.SetSchemaResponse build()>();

        return $r12;
    }

androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1
<androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1: androidx.appsearch.app.Migrator val$jetpackMigrator>
    void <init>(androidx.appsearch.app.Migrator)
    {
        androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1 r0;
        androidx.appsearch.app.Migrator r1;

        r0 := @this: androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1;

        r1 := @parameter0: androidx.appsearch.app.Migrator;

        r0.<androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1: androidx.appsearch.app.Migrator val$jetpackMigrator> = r1;

        specialinvoke r0.<android.app.appsearch.Migrator: void <init>()>();

        return;
    }

    public boolean shouldMigrate(int, int)
    {
        androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1 r0;
        int i0, i1;
        androidx.appsearch.app.Migrator $r1;
        boolean $z0;

        r0 := @this: androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1: androidx.appsearch.app.Migrator val$jetpackMigrator>;

        $z0 = virtualinvoke $r1.<androidx.appsearch.app.Migrator: boolean shouldMigrate(int,int)>(i0, i1);

        return $z0;
    }

    public android.app.appsearch.GenericDocument onUpgrade(int, int, android.app.appsearch.GenericDocument)
    {
        androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1 r0;
        int i0, i1;
        android.app.appsearch.GenericDocument r1, $r5;
        androidx.appsearch.app.GenericDocument r2, r3;
        androidx.appsearch.app.Migrator $r4;
        boolean $z0;

        r0 := @this: androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.app.appsearch.GenericDocument;

        r2 = staticinvoke <androidx.appsearch.platformstorage.converter.GenericDocumentToPlatformConverter: androidx.appsearch.app.GenericDocument toJetpackGenericDocument(android.app.appsearch.GenericDocument)>(r1);

        $r4 = r0.<androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1: androidx.appsearch.app.Migrator val$jetpackMigrator>;

        r3 = virtualinvoke $r4.<androidx.appsearch.app.Migrator: androidx.appsearch.app.GenericDocument onUpgrade(int,int,androidx.appsearch.app.GenericDocument)>(i0, i1, r2);

        $z0 = virtualinvoke r2.<androidx.appsearch.app.GenericDocument: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r5 = staticinvoke <androidx.appsearch.platformstorage.converter.GenericDocumentToPlatformConverter: android.app.appsearch.GenericDocument toPlatformGenericDocument(androidx.appsearch.app.GenericDocument)>(r3);

        return $r5;
    }

    public android.app.appsearch.GenericDocument onDowngrade(int, int, android.app.appsearch.GenericDocument)
    {
        androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1 r0;
        int i0, i1;
        android.app.appsearch.GenericDocument r1, $r5;
        androidx.appsearch.app.GenericDocument r2, r3;
        androidx.appsearch.app.Migrator $r4;
        boolean $z0;

        r0 := @this: androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.app.appsearch.GenericDocument;

        r2 = staticinvoke <androidx.appsearch.platformstorage.converter.GenericDocumentToPlatformConverter: androidx.appsearch.app.GenericDocument toJetpackGenericDocument(android.app.appsearch.GenericDocument)>(r1);

        $r4 = r0.<androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter$1: androidx.appsearch.app.Migrator val$jetpackMigrator>;

        r3 = virtualinvoke $r4.<androidx.appsearch.app.Migrator: androidx.appsearch.app.GenericDocument onDowngrade(int,int,androidx.appsearch.app.GenericDocument)>(i0, i1, r2);

        $z0 = virtualinvoke r2.<androidx.appsearch.app.GenericDocument: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r5 = staticinvoke <androidx.appsearch.platformstorage.converter.GenericDocumentToPlatformConverter: android.app.appsearch.GenericDocument toPlatformGenericDocument(androidx.appsearch.app.GenericDocument)>(r3);

        return $r5;
    }

