androidx.compose.foundation.layout.RowColumnImplKt
    public static final androidx.compose.ui.layout.MeasurePolicy rowColumnMeasurePolicy-TDGSqEk(androidx.compose.foundation.layout.LayoutOrientation, kotlin.jvm.functions.Function5, float, androidx.compose.foundation.layout.SizeMode, androidx.compose.foundation.layout.CrossAxisAlignment)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0;
        kotlin.jvm.functions.Function5 r1;
        float f0;
        androidx.compose.foundation.layout.SizeMode r2;
        androidx.compose.foundation.layout.CrossAxisAlignment r3;
        androidx.compose.foundation.layout.RowColumnImplKt$rowColumnMeasurePolicy$1 $r4;
        androidx.compose.ui.layout.MeasurePolicy $r5;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        r1 := @parameter1: kotlin.jvm.functions.Function5;

        f0 := @parameter2: float;

        r2 := @parameter3: androidx.compose.foundation.layout.SizeMode;

        r3 := @parameter4: androidx.compose.foundation.layout.CrossAxisAlignment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "orientation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "arrangement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "crossAxisSize");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "crossAxisAlignment");

        $r4 = new androidx.compose.foundation.layout.RowColumnImplKt$rowColumnMeasurePolicy$1;

        specialinvoke $r4.<androidx.compose.foundation.layout.RowColumnImplKt$rowColumnMeasurePolicy$1: void <init>(androidx.compose.foundation.layout.LayoutOrientation,float,androidx.compose.foundation.layout.SizeMode,kotlin.jvm.functions.Function5,androidx.compose.foundation.layout.CrossAxisAlignment)>(r0, f0, r2, r1, r3);

        $r5 = (androidx.compose.ui.layout.MeasurePolicy) $r4;

        return $r5;
    }

    private static final androidx.compose.foundation.layout.RowColumnParentData getData(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.ui.layout.IntrinsicMeasurable $r0;
        java.lang.Object r1;
        boolean $z0;
        androidx.compose.foundation.layout.RowColumnParentData $r2;

        $r0 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        r1 = interfaceinvoke $r0.<androidx.compose.ui.layout.IntrinsicMeasurable: java.lang.Object getParentData()>();

        $z0 = r1 instanceof androidx.compose.foundation.layout.RowColumnParentData;

        if $z0 == 0 goto label1;

        $r2 = (androidx.compose.foundation.layout.RowColumnParentData) r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    private static final float getWeight(androidx.compose.foundation.layout.RowColumnParentData)
    {
        androidx.compose.foundation.layout.RowColumnParentData $r0;
        float $f0;

        $r0 := @parameter0: androidx.compose.foundation.layout.RowColumnParentData;

        if $r0 == null goto label1;

        $f0 = virtualinvoke $r0.<androidx.compose.foundation.layout.RowColumnParentData: float getWeight()>();

        goto label2;

     label1:
        $f0 = 0.0F;

     label2:
        return $f0;
    }

    private static final boolean getFill(androidx.compose.foundation.layout.RowColumnParentData)
    {
        androidx.compose.foundation.layout.RowColumnParentData $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.foundation.layout.RowColumnParentData;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<androidx.compose.foundation.layout.RowColumnParentData: boolean getFill()>();

        goto label2;

     label1:
        $z0 = 1;

     label2:
        return $z0;
    }

    private static final androidx.compose.foundation.layout.CrossAxisAlignment getCrossAxisAlignment(androidx.compose.foundation.layout.RowColumnParentData)
    {
        androidx.compose.foundation.layout.RowColumnParentData $r0;
        androidx.compose.foundation.layout.CrossAxisAlignment $r1;

        $r0 := @parameter0: androidx.compose.foundation.layout.RowColumnParentData;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<androidx.compose.foundation.layout.RowColumnParentData: androidx.compose.foundation.layout.CrossAxisAlignment getCrossAxisAlignment()>();

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    private static final boolean isRelative(androidx.compose.foundation.layout.RowColumnParentData)
    {
        androidx.compose.foundation.layout.RowColumnParentData $r0;
        androidx.compose.foundation.layout.CrossAxisAlignment $r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.foundation.layout.RowColumnParentData;

        $r1 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: androidx.compose.foundation.layout.CrossAxisAlignment getCrossAxisAlignment(androidx.compose.foundation.layout.RowColumnParentData)>($r0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.compose.foundation.layout.CrossAxisAlignment: boolean isRelative$foundation_layout_release()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final kotlin.jvm.functions.Function3 MinIntrinsicWidthMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0, $r1;
        androidx.compose.foundation.layout.IntrinsicMeasureBlocks $r2, $r3;
        kotlin.jvm.functions.Function3 $r4;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        $r1 = <androidx.compose.foundation.layout.LayoutOrientation: androidx.compose.foundation.layout.LayoutOrientation Horizontal>;

        if r0 != $r1 goto label1;

        $r3 = <androidx.compose.foundation.layout.IntrinsicMeasureBlocks: androidx.compose.foundation.layout.IntrinsicMeasureBlocks INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.foundation.layout.IntrinsicMeasureBlocks: kotlin.jvm.functions.Function3 getHorizontalMinWidth()>();

        goto label2;

     label1:
        $r2 = <androidx.compose.foundation.layout.IntrinsicMeasureBlocks: androidx.compose.foundation.layout.IntrinsicMeasureBlocks INSTANCE>;

        $r4 = virtualinvoke $r2.<androidx.compose.foundation.layout.IntrinsicMeasureBlocks: kotlin.jvm.functions.Function3 getVerticalMinWidth()>();

     label2:
        return $r4;
    }

    private static final kotlin.jvm.functions.Function3 MinIntrinsicHeightMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0, $r1;
        androidx.compose.foundation.layout.IntrinsicMeasureBlocks $r2, $r3;
        kotlin.jvm.functions.Function3 $r4;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        $r1 = <androidx.compose.foundation.layout.LayoutOrientation: androidx.compose.foundation.layout.LayoutOrientation Horizontal>;

        if r0 != $r1 goto label1;

        $r3 = <androidx.compose.foundation.layout.IntrinsicMeasureBlocks: androidx.compose.foundation.layout.IntrinsicMeasureBlocks INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.foundation.layout.IntrinsicMeasureBlocks: kotlin.jvm.functions.Function3 getHorizontalMinHeight()>();

        goto label2;

     label1:
        $r2 = <androidx.compose.foundation.layout.IntrinsicMeasureBlocks: androidx.compose.foundation.layout.IntrinsicMeasureBlocks INSTANCE>;

        $r4 = virtualinvoke $r2.<androidx.compose.foundation.layout.IntrinsicMeasureBlocks: kotlin.jvm.functions.Function3 getVerticalMinHeight()>();

     label2:
        return $r4;
    }

    private static final kotlin.jvm.functions.Function3 MaxIntrinsicWidthMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0, $r1;
        androidx.compose.foundation.layout.IntrinsicMeasureBlocks $r2, $r3;
        kotlin.jvm.functions.Function3 $r4;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        $r1 = <androidx.compose.foundation.layout.LayoutOrientation: androidx.compose.foundation.layout.LayoutOrientation Horizontal>;

        if r0 != $r1 goto label1;

        $r3 = <androidx.compose.foundation.layout.IntrinsicMeasureBlocks: androidx.compose.foundation.layout.IntrinsicMeasureBlocks INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.foundation.layout.IntrinsicMeasureBlocks: kotlin.jvm.functions.Function3 getHorizontalMaxWidth()>();

        goto label2;

     label1:
        $r2 = <androidx.compose.foundation.layout.IntrinsicMeasureBlocks: androidx.compose.foundation.layout.IntrinsicMeasureBlocks INSTANCE>;

        $r4 = virtualinvoke $r2.<androidx.compose.foundation.layout.IntrinsicMeasureBlocks: kotlin.jvm.functions.Function3 getVerticalMaxWidth()>();

     label2:
        return $r4;
    }

    private static final kotlin.jvm.functions.Function3 MaxIntrinsicHeightMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0, $r1;
        androidx.compose.foundation.layout.IntrinsicMeasureBlocks $r2, $r3;
        kotlin.jvm.functions.Function3 $r4;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        $r1 = <androidx.compose.foundation.layout.LayoutOrientation: androidx.compose.foundation.layout.LayoutOrientation Horizontal>;

        if r0 != $r1 goto label1;

        $r3 = <androidx.compose.foundation.layout.IntrinsicMeasureBlocks: androidx.compose.foundation.layout.IntrinsicMeasureBlocks INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.compose.foundation.layout.IntrinsicMeasureBlocks: kotlin.jvm.functions.Function3 getHorizontalMaxHeight()>();

        goto label2;

     label1:
        $r2 = <androidx.compose.foundation.layout.IntrinsicMeasureBlocks: androidx.compose.foundation.layout.IntrinsicMeasureBlocks INSTANCE>;

        $r4 = virtualinvoke $r2.<androidx.compose.foundation.layout.IntrinsicMeasureBlocks: kotlin.jvm.functions.Function3 getVerticalMaxHeight()>();

     label2:
        return $r4;
    }

    private static final int intrinsicSize(java.util.List, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2, int, int, androidx.compose.foundation.layout.LayoutOrientation, androidx.compose.foundation.layout.LayoutOrientation)
    {
        java.util.List r0;
        kotlin.jvm.functions.Function2 r1, r2;
        int i0, i1, $i2;
        androidx.compose.foundation.layout.LayoutOrientation r3, r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: androidx.compose.foundation.layout.LayoutOrientation;

        r4 := @parameter6: androidx.compose.foundation.layout.LayoutOrientation;

        if r3 != r4 goto label1;

        $i2 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: int intrinsicMainAxisSize(java.util.List,kotlin.jvm.functions.Function2,int,int)>(r0, r1, i0, i1);

        goto label2;

     label1:
        $i2 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: int intrinsicCrossAxisSize(java.util.List,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,int,int)>(r0, r2, r1, i0, i1);

     label2:
        return $i2;
    }

    private static final int intrinsicMainAxisSize(java.util.List, kotlin.jvm.functions.Function2, int, int)
    {
        java.util.List r0;
        kotlin.jvm.functions.Function2 r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, i13, i14, i15;
        java.lang.Object r3, $r7;
        androidx.compose.ui.layout.IntrinsicMeasurable r4;
        float f0, $f1, $f2, $f3, $f4, f5;
        androidx.compose.foundation.layout.RowColumnParentData $r5;
        java.lang.Integer $r6;
        java.lang.Number $r8;
        byte $b10, $b11;
        boolean $z2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i13 = 0;

        i14 = 0;

        f5 = 0.0F;

        i15 = 0;

        i2 = interfaceinvoke r0.<java.util.List: int size()>();

     label1:
        if i15 >= i2 goto label6;

        r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i15);

        r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) r3;

        $r5 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: androidx.compose.foundation.layout.RowColumnParentData getData(androidx.compose.ui.layout.IntrinsicMeasurable)>(r4);

        f0 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: float getWeight(androidx.compose.foundation.layout.RowColumnParentData)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r4, $r6);

        $r8 = (java.lang.Number) $r7;

        i3 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        $b10 = f0 cmpg 0.0F;

        if $b10 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label4;

        i14 = i14 + i3;

        goto label5;

     label4:
        $b11 = f0 cmpl 0.0F;

        if $b11 <= 0 goto label5;

        f5 = f5 + f0;

        $f3 = (float) i3;

        $f4 = $f3 / f0;

        $i12 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f4);

        i13 = staticinvoke <java.lang.Math: int max(int,int)>(i13, $i12);

     label5:
        i15 = i15 + 1;

        goto label1;

     label6:
        $f1 = (float) i13;

        $f2 = $f1 * f5;

        $i4 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        $i5 = $i4 + i14;

        $i6 = interfaceinvoke r0.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        $i8 = $i7 * i1;

        $i9 = $i5 + $i8;

        return $i9;
    }

    private static final int intrinsicCrossAxisSize(java.util.List, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2, int, int)
    {
        java.util.List r0;
        kotlin.jvm.functions.Function2 r1, r2;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i13, $i14, $i15, i16, i17, i18, i19, i20, $i21, $i22, i23, i24, $i25;
        byte $b5, $b8, $b11, $b12;
        float $f0, $f1, $f2, $f3, f4, f5, f6;
        androidx.compose.foundation.layout.RowColumnParentData $r3, $r9;
        java.lang.Integer $r4, $r10, $r13;
        java.lang.Object $r5, $r11, $r14, r17, r20;
        java.lang.Number $r6, $r12, $r15;
        boolean z0, $z3, $z4, z5, z6;
        androidx.compose.ui.layout.IntrinsicMeasurable r18, $r21;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 = 0;

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $i4 = $i3 * i1;

        i16 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i0);

        i17 = 0;

        f4 = 0.0F;

        i18 = 0;

        i19 = interfaceinvoke r0.<java.util.List: int size()>();

     label01:
        if i18 >= i19 goto label06;

        r17 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i18);

        r18 = (androidx.compose.ui.layout.IntrinsicMeasurable) r17;

        $r9 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: androidx.compose.foundation.layout.RowColumnParentData getData(androidx.compose.ui.layout.IntrinsicMeasurable)>(r18);

        f5 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: float getWeight(androidx.compose.foundation.layout.RowColumnParentData)>($r9);

        $b11 = f5 cmpg 0.0F;

        if $b11 != 0 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        if $z3 == 0 goto label04;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);

        $r11 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r18, $r10);

        $r12 = (java.lang.Number) $r11;

        $i13 = virtualinvoke $r12.<java.lang.Number: int intValue()>();

        $i14 = i0 - i16;

        i20 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        i16 = i16 + i20;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        $r14 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r18, $r13);

        $r15 = (java.lang.Number) $r14;

        $i15 = virtualinvoke $r15.<java.lang.Number: int intValue()>();

        i17 = staticinvoke <java.lang.Math: int max(int,int)>(i17, $i15);

        goto label05;

     label04:
        $b12 = f5 cmpl 0.0F;

        if $b12 <= 0 goto label05;

        f4 = f4 + f5;

     label05:
        i18 = i18 + 1;

        goto label01;

     label06:
        $b5 = f4 cmpg 0.0F;

        if $b5 != 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        if $z4 == 0 goto label09;

        $i21 = 0;

        goto label11;

     label09:
        if i0 != 2147483647 goto label10;

        $i21 = 2147483647;

        goto label11;

     label10:
        $i6 = i0 - i16;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, 0);

        $f0 = (float) $i7;

        $f1 = $f0 / f4;

        $i21 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

     label11:
        $i22 = $i21;

        z5 = 0;

        i23 = 0;

        i24 = interfaceinvoke r0.<java.util.List: int size()>();

     label12:
        if i23 >= i24 goto label16;

        r20 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i23);

        $r21 = (androidx.compose.ui.layout.IntrinsicMeasurable) r20;

        z6 = 0;

        $r3 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: androidx.compose.foundation.layout.RowColumnParentData getData(androidx.compose.ui.layout.IntrinsicMeasurable)>($r21);

        f6 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: float getWeight(androidx.compose.foundation.layout.RowColumnParentData)>($r3);

        $b8 = f6 cmpl 0.0F;

        if $b8 <= 0 goto label15;

        $i10 = i17;

        if $i22 == 2147483647 goto label13;

        $f2 = (float) $i22;

        $f3 = $f2 * f6;

        $i25 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f3);

        goto label14;

     label13:
        $i25 = 2147483647;

     label14:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        $r5 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r21, $r4);

        $r6 = (java.lang.Number) $r5;

        $i9 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        i17 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i9);

     label15:
        i23 = i23 + 1;

        goto label12;

     label16:
        return i17;
    }

    private static final int rowColumnMeasurePolicy_TDGSqEk$mainAxisSize(androidx.compose.ui.layout.Placeable, androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.ui.layout.Placeable $r0;
        androidx.compose.foundation.layout.LayoutOrientation $r1, $r2;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.layout.Placeable;

        $r1 := @parameter1: androidx.compose.foundation.layout.LayoutOrientation;

        $r2 = <androidx.compose.foundation.layout.LayoutOrientation: androidx.compose.foundation.layout.LayoutOrientation Horizontal>;

        if $r1 != $r2 goto label1;

        $i0 = virtualinvoke $r0.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        goto label2;

     label1:
        $i0 = virtualinvoke $r0.<androidx.compose.ui.layout.Placeable: int getHeight()>();

     label2:
        return $i0;
    }

    private static final int rowColumnMeasurePolicy_TDGSqEk$crossAxisSize(androidx.compose.ui.layout.Placeable, androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.ui.layout.Placeable $r0;
        androidx.compose.foundation.layout.LayoutOrientation $r1, $r2;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.layout.Placeable;

        $r1 := @parameter1: androidx.compose.foundation.layout.LayoutOrientation;

        $r2 = <androidx.compose.foundation.layout.LayoutOrientation: androidx.compose.foundation.layout.LayoutOrientation Horizontal>;

        if $r1 != $r2 goto label1;

        $i0 = virtualinvoke $r0.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        goto label2;

     label1:
        $i0 = virtualinvoke $r0.<androidx.compose.ui.layout.Placeable: int getWidth()>();

     label2:
        return $i0;
    }

    public static final int access$intrinsicSize(java.util.List, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2, int, int, androidx.compose.foundation.layout.LayoutOrientation, androidx.compose.foundation.layout.LayoutOrientation)
    {
        java.util.List r0;
        kotlin.jvm.functions.Function2 r1, r2;
        int i0, i1, $i2;
        androidx.compose.foundation.layout.LayoutOrientation r3, r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: androidx.compose.foundation.layout.LayoutOrientation;

        r4 := @parameter6: androidx.compose.foundation.layout.LayoutOrientation;

        $i2 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: int intrinsicSize(java.util.List,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,int,int,androidx.compose.foundation.layout.LayoutOrientation,androidx.compose.foundation.layout.LayoutOrientation)>(r0, r1, r2, i0, i1, r3, r4);

        return $i2;
    }

    public static final androidx.compose.foundation.layout.RowColumnParentData access$getData(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.ui.layout.IntrinsicMeasurable $r0;
        androidx.compose.foundation.layout.RowColumnParentData $r1;

        $r0 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        $r1 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: androidx.compose.foundation.layout.RowColumnParentData getData(androidx.compose.ui.layout.IntrinsicMeasurable)>($r0);

        return $r1;
    }

    public static final float access$getWeight(androidx.compose.foundation.layout.RowColumnParentData)
    {
        androidx.compose.foundation.layout.RowColumnParentData $r0;
        float $f0;

        $r0 := @parameter0: androidx.compose.foundation.layout.RowColumnParentData;

        $f0 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: float getWeight(androidx.compose.foundation.layout.RowColumnParentData)>($r0);

        return $f0;
    }

    public static final int access$rowColumnMeasurePolicy_TDGSqEk$mainAxisSize(androidx.compose.ui.layout.Placeable, androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.ui.layout.Placeable $r0;
        androidx.compose.foundation.layout.LayoutOrientation $r1;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.layout.Placeable;

        $r1 := @parameter1: androidx.compose.foundation.layout.LayoutOrientation;

        $i0 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: int rowColumnMeasurePolicy_TDGSqEk$mainAxisSize(androidx.compose.ui.layout.Placeable,androidx.compose.foundation.layout.LayoutOrientation)>($r0, $r1);

        return $i0;
    }

    public static final int access$rowColumnMeasurePolicy_TDGSqEk$crossAxisSize(androidx.compose.ui.layout.Placeable, androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.ui.layout.Placeable $r0;
        androidx.compose.foundation.layout.LayoutOrientation $r1;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.layout.Placeable;

        $r1 := @parameter1: androidx.compose.foundation.layout.LayoutOrientation;

        $i0 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: int rowColumnMeasurePolicy_TDGSqEk$crossAxisSize(androidx.compose.ui.layout.Placeable,androidx.compose.foundation.layout.LayoutOrientation)>($r0, $r1);

        return $i0;
    }

    public static final boolean access$isRelative(androidx.compose.foundation.layout.RowColumnParentData)
    {
        androidx.compose.foundation.layout.RowColumnParentData $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.foundation.layout.RowColumnParentData;

        $z0 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: boolean isRelative(androidx.compose.foundation.layout.RowColumnParentData)>($r0);

        return $z0;
    }

    public static final boolean access$getFill(androidx.compose.foundation.layout.RowColumnParentData)
    {
        androidx.compose.foundation.layout.RowColumnParentData $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.foundation.layout.RowColumnParentData;

        $z0 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: boolean getFill(androidx.compose.foundation.layout.RowColumnParentData)>($r0);

        return $z0;
    }

    public static final androidx.compose.foundation.layout.CrossAxisAlignment access$getCrossAxisAlignment(androidx.compose.foundation.layout.RowColumnParentData)
    {
        androidx.compose.foundation.layout.RowColumnParentData $r0;
        androidx.compose.foundation.layout.CrossAxisAlignment $r1;

        $r0 := @parameter0: androidx.compose.foundation.layout.RowColumnParentData;

        $r1 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: androidx.compose.foundation.layout.CrossAxisAlignment getCrossAxisAlignment(androidx.compose.foundation.layout.RowColumnParentData)>($r0);

        return $r1;
    }

    public static final kotlin.jvm.functions.Function3 access$MinIntrinsicWidthMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0;
        kotlin.jvm.functions.Function3 $r1;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        $r1 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: kotlin.jvm.functions.Function3 MinIntrinsicWidthMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)>(r0);

        return $r1;
    }

    public static final kotlin.jvm.functions.Function3 access$MinIntrinsicHeightMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0;
        kotlin.jvm.functions.Function3 $r1;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        $r1 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: kotlin.jvm.functions.Function3 MinIntrinsicHeightMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)>(r0);

        return $r1;
    }

    public static final kotlin.jvm.functions.Function3 access$MaxIntrinsicWidthMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0;
        kotlin.jvm.functions.Function3 $r1;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        $r1 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: kotlin.jvm.functions.Function3 MaxIntrinsicWidthMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)>(r0);

        return $r1;
    }

    public static final kotlin.jvm.functions.Function3 access$MaxIntrinsicHeightMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)
    {
        androidx.compose.foundation.layout.LayoutOrientation r0;
        kotlin.jvm.functions.Function3 $r1;

        r0 := @parameter0: androidx.compose.foundation.layout.LayoutOrientation;

        $r1 = staticinvoke <androidx.compose.foundation.layout.RowColumnImplKt: kotlin.jvm.functions.Function3 MaxIntrinsicHeightMeasureBlock(androidx.compose.foundation.layout.LayoutOrientation)>(r0);

        return $r1;
    }

