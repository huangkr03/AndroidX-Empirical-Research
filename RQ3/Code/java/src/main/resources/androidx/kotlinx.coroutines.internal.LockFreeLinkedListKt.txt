kotlinx.coroutines.internal.LockFreeLinkedListKt
<kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE>
<kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object LIST_EMPTY>
    static void <clinit>()
    {
        kotlinx.coroutines.internal.Symbol $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("CONDITION_FALSE");

        <kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("LIST_EMPTY");

        <kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object LIST_EMPTY> = $r0;

        return;
    }

    public static final java.lang.Object getCONDITION_FALSE()
    {
        java.lang.Object r0;

        r0 = <kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        kotlinx.coroutines.internal.Removed $r1;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r2;

        $r0 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof kotlinx.coroutines.internal.Removed;

        if $z0 == 0 goto label1;

        $r1 = (kotlinx.coroutines.internal.Removed) $r0;

        goto label2;

     label1:
        $r1 = null;

     label2:
        if $r1 == null goto label4;

        $r2 = $r1.<kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref>;

        if $r2 != null goto label3;

        goto label4;

     label3:
        return $r2;

     label4:
        $r2 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r0;

        return $r2;
    }

