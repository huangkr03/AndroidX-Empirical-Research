androidx.ui.material.ScaffoldState
<androidx.ui.material.ScaffoldState: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.material.ScaffoldState: androidx.compose.MutableState drawerState$delegate>
<androidx.ui.material.ScaffoldState: androidx.compose.MutableState isDrawerGesturesEnabled$delegate>
<androidx.ui.material.ScaffoldState: androidx.ui.material.ScaffoldGeometry scaffoldGeometry>
    public void <init>(androidx.ui.material.DrawerState, boolean)
    {
        androidx.ui.material.ScaffoldState r0;
        androidx.ui.material.DrawerState r1;
        boolean z0;
        androidx.compose.MutableState $r2, $r4;
        java.lang.Boolean $r3;
        androidx.ui.material.ScaffoldGeometry $r5;

        r0 := @this: androidx.ui.material.ScaffoldState;

        r1 := @parameter0: androidx.ui.material.DrawerState;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "drawerState");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf$default(java.lang.Object,kotlin.jvm.functions.Function2,int,java.lang.Object)>(r1, null, 2, null);

        r0.<androidx.ui.material.ScaffoldState: androidx.compose.MutableState drawerState$delegate> = $r2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r4 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf$default(java.lang.Object,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r3, null, 2, null);

        r0.<androidx.ui.material.ScaffoldState: androidx.compose.MutableState isDrawerGesturesEnabled$delegate> = $r4;

        $r5 = new androidx.ui.material.ScaffoldGeometry;

        specialinvoke $r5.<androidx.ui.material.ScaffoldGeometry: void <init>()>();

        r0.<androidx.ui.material.ScaffoldState: androidx.ui.material.ScaffoldGeometry scaffoldGeometry> = $r5;

        return;
    }

    public void <init>(androidx.ui.material.DrawerState, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.material.ScaffoldState r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.ui.material.DrawerState r2;
        boolean z0;

        r0 := @this: androidx.ui.material.ScaffoldState;

        r2 := @parameter0: androidx.ui.material.DrawerState;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = <androidx.ui.material.DrawerState: androidx.ui.material.DrawerState Closed>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z0 = 1;

     label2:
        specialinvoke r0.<androidx.ui.material.ScaffoldState: void <init>(androidx.ui.material.DrawerState,boolean)>(r2, z0);

        return;
    }

    public final androidx.ui.material.DrawerState getDrawerState()
    {
        androidx.ui.material.ScaffoldState r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.material.DrawerState $r6;

        r0 := @this: androidx.ui.material.ScaffoldState;

        $r3 = r0.<androidx.ui.material.ScaffoldState: androidx.compose.MutableState drawerState$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ScaffoldState: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.material.DrawerState) $r5;

        return $r6;
    }

    public final void setDrawerState(androidx.ui.material.DrawerState)
    {
        androidx.ui.material.ScaffoldState r0;
        androidx.ui.material.DrawerState r1;
        androidx.compose.MutableState $r2;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ScaffoldState;

        r1 := @parameter0: androidx.ui.material.DrawerState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        $r2 = r0.<androidx.ui.material.ScaffoldState: androidx.compose.MutableState drawerState$delegate>;

        $r4 = <androidx.ui.material.ScaffoldState: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[0];

        interfaceinvoke $r2.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final boolean isDrawerGesturesEnabled()
    {
        androidx.ui.material.ScaffoldState r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z1;

        r0 := @this: androidx.ui.material.ScaffoldState;

        $r3 = r0.<androidx.ui.material.ScaffoldState: androidx.compose.MutableState isDrawerGesturesEnabled$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.material.ScaffoldState: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[1];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    public final void setDrawerGesturesEnabled(boolean)
    {
        androidx.ui.material.ScaffoldState r0;
        boolean z0;
        androidx.compose.MutableState $r1;
        kotlin.reflect.KProperty r2;
        java.lang.Boolean r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.material.ScaffoldState;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.ui.material.ScaffoldState: androidx.compose.MutableState isDrawerGesturesEnabled$delegate>;

        $r4 = <androidx.ui.material.ScaffoldState: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[1];

        r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public final androidx.ui.geometry.Size getTopBarSize()
    {
        androidx.ui.material.ScaffoldState r0;
        androidx.ui.unit.PxBounds r1;
        androidx.ui.material.ScaffoldGeometry $r2;
        androidx.ui.geometry.Size $r3;

        r0 := @this: androidx.ui.material.ScaffoldState;

        $r2 = virtualinvoke r0.<androidx.ui.material.ScaffoldState: androidx.ui.material.ScaffoldGeometry getScaffoldGeometry$ui_material_release()>();

        r1 = virtualinvoke $r2.<androidx.ui.material.ScaffoldGeometry: androidx.ui.unit.PxBounds getTopBarBounds()>();

        if r1 != null goto label1;

        $r3 = (androidx.ui.geometry.Size) null;

        goto label2;

     label1:
        $r3 = staticinvoke <androidx.ui.unit.PxKt: androidx.ui.geometry.Size toSize(androidx.ui.unit.PxBounds)>(r1);

     label2:
        return $r3;
    }

    public final androidx.ui.geometry.Size getBottomBarSize()
    {
        androidx.ui.material.ScaffoldState r0;
        androidx.ui.unit.PxBounds r1;
        androidx.ui.material.ScaffoldGeometry $r2;
        androidx.ui.geometry.Size $r3;

        r0 := @this: androidx.ui.material.ScaffoldState;

        $r2 = virtualinvoke r0.<androidx.ui.material.ScaffoldState: androidx.ui.material.ScaffoldGeometry getScaffoldGeometry$ui_material_release()>();

        r1 = virtualinvoke $r2.<androidx.ui.material.ScaffoldGeometry: androidx.ui.unit.PxBounds getBottomBarBounds()>();

        if r1 != null goto label1;

        $r3 = (androidx.ui.geometry.Size) null;

        goto label2;

     label1:
        $r3 = staticinvoke <androidx.ui.unit.PxKt: androidx.ui.geometry.Size toSize(androidx.ui.unit.PxBounds)>(r1);

     label2:
        return $r3;
    }

    public final androidx.ui.geometry.Size getFloatingActionButtonSize()
    {
        androidx.ui.material.ScaffoldState r0;
        androidx.ui.unit.PxBounds r1;
        androidx.ui.material.ScaffoldGeometry $r2;
        androidx.ui.geometry.Size $r3;

        r0 := @this: androidx.ui.material.ScaffoldState;

        $r2 = virtualinvoke r0.<androidx.ui.material.ScaffoldState: androidx.ui.material.ScaffoldGeometry getScaffoldGeometry$ui_material_release()>();

        r1 = virtualinvoke $r2.<androidx.ui.material.ScaffoldGeometry: androidx.ui.unit.PxBounds getFabBounds()>();

        if r1 != null goto label1;

        $r3 = (androidx.ui.geometry.Size) null;

        goto label2;

     label1:
        $r3 = staticinvoke <androidx.ui.unit.PxKt: androidx.ui.geometry.Size toSize(androidx.ui.unit.PxBounds)>(r1);

     label2:
        return $r3;
    }

    public final androidx.ui.material.ScaffoldGeometry getScaffoldGeometry$ui_material_release()
    {
        androidx.ui.material.ScaffoldState r0;
        androidx.ui.material.ScaffoldGeometry $r1;

        r0 := @this: androidx.ui.material.ScaffoldState;

        $r1 = r0.<androidx.ui.material.ScaffoldState: androidx.ui.material.ScaffoldGeometry scaffoldGeometry>;

        return $r1;
    }

    public void <init>()
    {
        androidx.ui.material.ScaffoldState r0;

        r0 := @this: androidx.ui.material.ScaffoldState;

        specialinvoke r0.<androidx.ui.material.ScaffoldState: void <init>(androidx.ui.material.DrawerState,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 0, 3, null);

        return;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.MutablePropertyReference1Impl $r1, $r7;
        kotlin.reflect.KClass $r2, $r8;
        kotlin.reflect.KDeclarationContainer $r3, $r9;
        kotlin.jvm.internal.MutablePropertyReference1 $r4, $r10;
        kotlin.reflect.KMutableProperty1 $r5, $r11;
        kotlin.reflect.KProperty $r6, $r12;

        r0 = newarray (kotlin.reflect.KProperty)[2];

        $r1 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ScaffoldState;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "drawerState", "getDrawerState()Landroidx/ui/material/DrawerState;");

        $r4 = (kotlin.jvm.internal.MutablePropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        $r7 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r8 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/material/ScaffoldState;");

        $r9 = (kotlin.reflect.KDeclarationContainer) $r8;

        specialinvoke $r7.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r9, "isDrawerGesturesEnabled", "isDrawerGesturesEnabled()Z");

        $r10 = (kotlin.jvm.internal.MutablePropertyReference1) $r7;

        $r11 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r10);

        $r12 = (kotlin.reflect.KProperty) $r11;

        r0[1] = $r12;

        <androidx.ui.material.ScaffoldState: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

