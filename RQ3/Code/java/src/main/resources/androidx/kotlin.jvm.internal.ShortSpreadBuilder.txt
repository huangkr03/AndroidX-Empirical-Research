kotlin.jvm.internal.ShortSpreadBuilder
<kotlin.jvm.internal.ShortSpreadBuilder: short[] values>
    public void <init>(int)
    {
        kotlin.jvm.internal.ShortSpreadBuilder $r0;
        int $i0;
        short[] $r1;

        $r0 := @this: kotlin.jvm.internal.ShortSpreadBuilder;

        $i0 := @parameter0: int;

        specialinvoke $r0.<kotlin.jvm.internal.PrimitiveSpreadBuilder: void <init>(int)>($i0);

        $r1 = newarray (short)[$i0];

        $r0.<kotlin.jvm.internal.ShortSpreadBuilder: short[] values> = $r1;

        return;
    }

    public final void add(short)
    {
        kotlin.jvm.internal.ShortSpreadBuilder $r0;
        short $s0;
        short[] $r1;
        int $i1, $i2;

        $r0 := @this: kotlin.jvm.internal.ShortSpreadBuilder;

        $s0 := @parameter0: short;

        $r1 = $r0.<kotlin.jvm.internal.ShortSpreadBuilder: short[] values>;

        $i2 = virtualinvoke $r0.<kotlin.jvm.internal.ShortSpreadBuilder: int getPosition()>();

        $i1 = $i2 + 1;

        virtualinvoke $r0.<kotlin.jvm.internal.ShortSpreadBuilder: void setPosition(int)>($i1);

        $r1[$i2] = $s0;

        return;
    }

    public volatile int getSize(java.lang.Object)
    {
        kotlin.jvm.internal.ShortSpreadBuilder $r0;
        int $i0;
        java.lang.Object $r1;
        short[] $r2;

        $r0 := @this: kotlin.jvm.internal.ShortSpreadBuilder;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (short[]) $r1;

        $i0 = virtualinvoke $r0.<kotlin.jvm.internal.ShortSpreadBuilder: int getSize(short[])>($r2);

        return $i0;
    }

    protected int getSize(short[])
    {
        kotlin.jvm.internal.ShortSpreadBuilder $r0;
        short[] $r1;
        int $i0;

        $r0 := @this: kotlin.jvm.internal.ShortSpreadBuilder;

        $r1 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        return $i0;
    }

    public final short[] toArray()
    {
        kotlin.jvm.internal.ShortSpreadBuilder $r0;
        short[] $r1, $r2;
        int $i0;
        java.lang.Object $r3;

        $r0 := @this: kotlin.jvm.internal.ShortSpreadBuilder;

        $r1 = $r0.<kotlin.jvm.internal.ShortSpreadBuilder: short[] values>;

        $i0 = virtualinvoke $r0.<kotlin.jvm.internal.ShortSpreadBuilder: int size()>();

        $r2 = newarray (short)[$i0];

        $r3 = virtualinvoke $r0.<kotlin.jvm.internal.ShortSpreadBuilder: java.lang.Object toArray(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r1 = (short[]) $r3;

        return $r1;
    }

