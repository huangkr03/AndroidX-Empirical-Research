androidx.constraintlayout.core.motion.utils.Oscillator
<androidx.constraintlayout.core.motion.utils.Oscillator: java.lang.String TAG>
<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>
<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>
<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mArea>
<androidx.constraintlayout.core.motion.utils.Oscillator: int SIN_WAVE>
<androidx.constraintlayout.core.motion.utils.Oscillator: int SQUARE_WAVE>
<androidx.constraintlayout.core.motion.utils.Oscillator: int TRIANGLE_WAVE>
<androidx.constraintlayout.core.motion.utils.Oscillator: int SAW_WAVE>
<androidx.constraintlayout.core.motion.utils.Oscillator: int REVERSE_SAW_WAVE>
<androidx.constraintlayout.core.motion.utils.Oscillator: int COS_WAVE>
<androidx.constraintlayout.core.motion.utils.Oscillator: int BOUNCE>
<androidx.constraintlayout.core.motion.utils.Oscillator: int CUSTOM>
<androidx.constraintlayout.core.motion.utils.Oscillator: java.lang.String mCustomType>
<androidx.constraintlayout.core.motion.utils.Oscillator: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit mCustomCurve>
<androidx.constraintlayout.core.motion.utils.Oscillator: int mType>
<androidx.constraintlayout.core.motion.utils.Oscillator: double PI2>
<androidx.constraintlayout.core.motion.utils.Oscillator: boolean mNormalized>
    public void <init>()
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        float[] $r1;
        double[] $r2;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[0];

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod> = $r1;

        $r2 = newarray (double)[0];

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition> = $r2;

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double PI2> = 6.283185307179586;

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: boolean mNormalized> = 0;

        return;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9;
        double[] $r3;
        java.lang.String $r4, $r8, $r10;
        float[] $r7;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pos =");

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" period=");

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void setType(int, java.lang.String)
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        int i0;
        java.lang.String r1, $r2;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r3;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: int mType> = i0;

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: java.lang.String mCustomType> = r1;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: java.lang.String mCustomType>;

        if $r2 == null goto label1;

        $r3 = staticinvoke <androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit buildWave(java.lang.String)>(r1);

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit mCustomCurve> = $r3;

     label1:
        return;
    }

    public void addPoint(double, float)
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        double d0;
        float f0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        float[] $r1, $r5, $r6, $r11;
        double[] $r2, $r3, $r4, $r7, $r8, $r9, $r10;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        d0 := @parameter0: double;

        f0 := @parameter1: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i1 = lengthof $r1;

        i0 = $i1 + 1;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        i6 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r2, d0);

        if i6 >= 0 goto label1;

        $i5 = neg i6;

        i6 = $i5 - 1;

     label1:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $r4 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r3, i0);

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition> = $r4;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $r6 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r5, i0);

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod> = $r6;

        $r7 = newarray (double)[i0];

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mArea> = $r7;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i4 = i6 + 1;

        $i2 = i0 - i6;

        $i3 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, i6, $r8, $i4, $i3);

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $r10[i6] = d0;

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $r11[i6] = f0;

        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: boolean mNormalized> = 0;

        return;
    }

    public void normalize()
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        float[] $r1, $r2, $r3, $r5, $r6, $r7, $r12, $r13, $r14, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        double[] $r4, $r8, $r9, $r10, $r11, $r15, $r16;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, d15, d16, d17;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        d14 = 0.0;

        d15 = 0.0;

        i9 = 0;

     label1:
        $r1 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i0 = lengthof $r1;

        if i9 >= $i0 goto label2;

        $r17 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $f8 = $r17[i9];

        $d13 = (double) $f8;

        d15 = d15 + $d13;

        i9 = i9 + 1;

        goto label1;

     label2:
        i10 = 1;

     label3:
        $r2 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i1 = lengthof $r2;

        if i10 >= $i1 goto label4;

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i7 = i10 - 1;

        $f6 = $r13[$i7];

        $r14 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $f5 = $r14[i10];

        $f7 = $f6 + $f5;

        f9 = $f7 / 2.0F;

        $r15 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $d10 = $r15[i10];

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i8 = i10 - 1;

        $d9 = $r16[$i8];

        d16 = $d10 - $d9;

        $d11 = (double) f9;

        $d12 = d16 * $d11;

        d14 = d14 + $d12;

        i10 = i10 + 1;

        goto label3;

     label4:
        i11 = 0;

     label5:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i2 = lengthof $r3;

        if i11 >= $i2 goto label6;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $f3 = $r12[i11];

        $d7 = (double) $f3;

        $d6 = d15 / d14;

        $d8 = $d7 * $d6;

        $f4 = (float) $d8;

        $r12[i11] = $f4;

        i11 = i11 + 1;

        goto label5;

     label6:
        $r4 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mArea>;

        $r4[0] = 0.0;

        i12 = 1;

     label7:
        $r5 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i3 = lengthof $r5;

        if i12 >= $i3 goto label8;

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i4 = i12 - 1;

        $f1 = $r6[$i4];

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $f0 = $r7[i12];

        $f2 = $f1 + $f0;

        f10 = $f2 / 2.0F;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $d1 = $r8[i12];

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i5 = i12 - 1;

        $d0 = $r9[$i5];

        d17 = $d1 - $d0;

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mArea>;

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mArea>;

        $i6 = i12 - 1;

        $d4 = $r10[$i6];

        $d2 = (double) f10;

        $d3 = d17 * $d2;

        $d5 = $d4 + $d3;

        $r11[i12] = $d5;

        i12 = i12 + 1;

        goto label7;

     label8:
        r0.<androidx.constraintlayout.core.motion.utils.Oscillator: boolean mNormalized> = 1;

        return;
    }

    double getP(double)
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, d22, d23;
        byte $b0, $b1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        float[] $r1, $r2, $r6;
        float $f0, $f1, $f2, $f3;
        double[] $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        d22 := @parameter0: double;

        $b0 = d22 cmpg 0.0;

        if $b0 >= 0 goto label1;

        d22 = 0.0;

        goto label2;

     label1:
        $b1 = d22 cmpl 1.0;

        if $b1 <= 0 goto label2;

        d22 = 1.0;

     label2:
        $r11 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        i11 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r11, d22);

        d23 = 0.0;

        if i11 <= 0 goto label3;

        d23 = 1.0;

        goto label4;

     label3:
        if i11 == 0 goto label4;

        $i2 = neg i11;

        i12 = $i2 - 1;

        d0 = d22;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $f1 = $r1[i12];

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i3 = i12 - 1;

        $f0 = $r2[$i3];

        $f2 = $f1 - $f0;

        $d5 = (double) $f2;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $d3 = $r3[i12];

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i4 = i12 - 1;

        $d2 = $r4[$i4];

        $d4 = $d3 - $d2;

        d1 = $d5 / $d4;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mArea>;

        $i5 = i12 - 1;

        $d13 = $r5[$i5];

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i6 = i12 - 1;

        $f3 = $r6[$i6];

        $d8 = (double) $f3;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i7 = i12 - 1;

        $d6 = $r7[$i7];

        $d7 = d1 * $d6;

        $d11 = $d8 - $d7;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i8 = i12 - 1;

        $d9 = $r8[$i8];

        $d10 = d0 - $d9;

        $d12 = $d11 * $d10;

        $d21 = $d13 + $d12;

        $d17 = d0 * d0;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i9 = i12 - 1;

        $d15 = $r9[$i9];

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i10 = i12 - 1;

        $d14 = $r10[$i10];

        $d16 = $d15 * $d14;

        $d18 = $d17 - $d16;

        $d19 = d1 * $d18;

        $d20 = $d19 / 2.0;

        d23 = $d21 + $d20;

     label4:
        return d23;
    }

    public double getValue(double, double)
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36;
        int $i0;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d4 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double getP(double)>(d0);

        d2 = d1 + $d4;

        $i0 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: int mType>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            default: goto label1;
        };

     label1:
        $d34 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double PI2>;

        $d35 = $d34 * d2;

        $d36 = staticinvoke <java.lang.Math: double sin(double)>($d35);

        return $d36;

     label2:
        $d31 = d2 % 1.0;

        $d32 = 0.5 - $d31;

        $d33 = staticinvoke <java.lang.Math: double signum(double)>($d32);

        return $d33;

     label3:
        $d25 = d2 * 4.0;

        $d26 = $d25 + 1.0;

        $d27 = $d26 % 4.0;

        $d28 = $d27 - 2.0;

        $d29 = staticinvoke <java.lang.Math: double abs(double)>($d28);

        $d30 = 1.0 - $d29;

        return $d30;

     label4:
        $d21 = d2 * 2.0;

        $d22 = $d21 + 1.0;

        $d23 = $d22 % 2.0;

        $d24 = $d23 - 1.0;

        return $d24;

     label5:
        $d17 = d2 * 2.0;

        $d18 = $d17 + 1.0;

        $d19 = $d18 % 2.0;

        $d20 = 1.0 - $d19;

        return $d20;

     label6:
        $d14 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double PI2>;

        $d13 = d1 + d2;

        $d15 = $d14 * $d13;

        $d16 = staticinvoke <java.lang.Math: double cos(double)>($d15);

        return $d16;

     label7:
        $d7 = d2 * 4.0;

        $d8 = $d7 % 4.0;

        $d9 = $d8 - 2.0;

        $d10 = staticinvoke <java.lang.Math: double abs(double)>($d9);

        d3 = 1.0 - $d10;

        $d11 = d3 * d3;

        $d12 = 1.0 - $d11;

        return $d12;

     label8:
        $r1 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit mCustomCurve>;

        $d5 = d2 % 1.0;

        $d6 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double getPos(double,int)>($d5, 0);

        return $d6;
    }

    double getDP(double)
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12;
        byte $b0, $b1;
        int $i2, $i3, $i4, $i5, $i6, i7, i8;
        float[] $r1, $r2, $r5;
        float $f0, $f1, $f2, $f3;
        double[] $r3, $r4, $r6, $r7;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        d11 := @parameter0: double;

        $b0 = d11 cmpg 0.0;

        if $b0 > 0 goto label1;

        d11 = 1.0E-5;

        goto label2;

     label1:
        $b1 = d11 cmpl 1.0;

        if $b1 < 0 goto label2;

        d11 = 0.999999;

     label2:
        $r7 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        i7 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r7, d11);

        d12 = 0.0;

        if i7 <= 0 goto label3;

        return 0.0;

     label3:
        if i7 == 0 goto label4;

        $i2 = neg i7;

        i8 = $i2 - 1;

        d0 = d11;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $f1 = $r1[i8];

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i3 = i8 - 1;

        $f0 = $r2[$i3];

        $f2 = $f1 - $f0;

        $d5 = (double) $f2;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $d3 = $r3[i8];

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i4 = i8 - 1;

        $d2 = $r4[$i4];

        $d4 = $d3 - $d2;

        d1 = $d5 / $d4;

        $d10 = d1 * d0;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: float[] mPeriod>;

        $i5 = i8 - 1;

        $f3 = $r5[$i5];

        $d8 = (double) $f3;

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double[] mPosition>;

        $i6 = i8 - 1;

        $d6 = $r6[$i6];

        $d7 = d1 * $d6;

        $d9 = $d8 - $d7;

        d12 = $d10 + $d9;

     label4:
        return d12;
    }

    public double getSlope(double, double, double)
    {
        androidx.constraintlayout.core.motion.utils.Oscillator r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37;
        int $i0;
        androidx.constraintlayout.core.motion.utils.MonotonicCurveFit $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Oscillator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $d5 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double getP(double)>(d0);

        d3 = d1 + $d5;

        $d6 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double getDP(double)>(d0);

        d4 = $d6 + d2;

        $i0 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: int mType>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            default: goto label1;
        };

     label1:
        $d32 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double PI2>;

        $d35 = $d32 * d4;

        $d33 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double PI2>;

        $d34 = $d33 * d3;

        $d36 = staticinvoke <java.lang.Math: double cos(double)>($d34);

        $d37 = $d35 * $d36;

        return $d37;

     label2:
        return 0.0;

     label3:
        $d29 = 4.0 * d4;

        $d25 = d3 * 4.0;

        $d26 = $d25 + 3.0;

        $d27 = $d26 % 4.0;

        $d28 = $d27 - 2.0;

        $d30 = staticinvoke <java.lang.Math: double signum(double)>($d28);

        $d31 = $d29 * $d30;

        return $d31;

     label4:
        $d24 = d4 * 2.0;

        return $d24;

     label5:
        $d22 = neg d4;

        $d23 = $d22 * 2.0;

        return $d23;

     label6:
        $d15 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double PI2>;

        $d16 = neg $d15;

        $d19 = $d16 * d4;

        $d17 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: double PI2>;

        $d18 = $d17 * d3;

        $d20 = staticinvoke <java.lang.Math: double sin(double)>($d18);

        $d21 = $d19 * $d20;

        return $d21;

     label7:
        $d13 = 4.0 * d4;

        $d9 = d3 * 4.0;

        $d10 = $d9 + 2.0;

        $d11 = $d10 % 4.0;

        $d12 = $d11 - 2.0;

        $d14 = $d13 * $d12;

        return $d14;

     label8:
        $r1 = r0.<androidx.constraintlayout.core.motion.utils.Oscillator: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit mCustomCurve>;

        $d7 = d3 % 1.0;

        $d8 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.utils.MonotonicCurveFit: double getSlope(double,int)>($d7, 0);

        return $d8;
    }

    static void <clinit>()
    {
        <androidx.constraintlayout.core.motion.utils.Oscillator: java.lang.String TAG> = "Oscillator";

        return;
    }

