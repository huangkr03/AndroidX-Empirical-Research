io.grpc.okhttp.internal.framed.Settings
<io.grpc.okhttp.internal.framed.Settings: int persistValue>
<io.grpc.okhttp.internal.framed.Settings: int persisted>
<io.grpc.okhttp.internal.framed.Settings: int set>
<io.grpc.okhttp.internal.framed.Settings: int[] values>
    public void <init>()
    {
        io.grpc.okhttp.internal.framed.Settings $r0;
        int[] $r1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Settings;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[10];

        $r0.<io.grpc.okhttp.internal.framed.Settings: int[] values> = $r1;

        return;
    }

    public int get(int)
    {
        io.grpc.okhttp.internal.framed.Settings $r0;
        int[] $r1;
        int $i0;

        $r0 := @this: io.grpc.okhttp.internal.framed.Settings;

        $i0 := @parameter0: int;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Settings: int[] values>;

        $i0 = $r1[$i0];

        return $i0;
    }

    int getHeaderTableSize()
    {
        io.grpc.okhttp.internal.framed.Settings $r0;
        int $i0;
        int[] $r1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Settings;

        $i0 = $r0.<io.grpc.okhttp.internal.framed.Settings: int set>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Settings: int[] values>;

        $i0 = $r1[1];

        return $i0;

     label1:
        return -1;
    }

    int getMaxFrameSize(int)
    {
        io.grpc.okhttp.internal.framed.Settings $r0;
        int $i0, $i1;
        int[] $r1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Settings;

        $i0 := @parameter0: int;

        $i1 = $r0.<io.grpc.okhttp.internal.framed.Settings: int set>;

        $i1 = $i1 & 32;

        if $i1 == 0 goto label1;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Settings: int[] values>;

        $i0 = $r1[5];

     label1:
        return $i0;
    }

    public boolean isSet(int)
    {
        io.grpc.okhttp.internal.framed.Settings $r0;
        int $i0, $i1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Settings;

        $i1 := @parameter0: int;

        $i0 = $r0.<io.grpc.okhttp.internal.framed.Settings: int set>;

        $i1 = 1 << $i1;

        $i1 = $i1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public io.grpc.okhttp.internal.framed.Settings set(int, int, int)
    {
        io.grpc.okhttp.internal.framed.Settings $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Settings;

        $i0 := @parameter0: int;

        $i3 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Settings: int[] values>;

        $i4 = lengthof $r1;

        if $i0 < $i4 goto label1;

        return $r0;

     label1:
        $i4 = 1 << $i0;

        $i2 = $r0.<io.grpc.okhttp.internal.framed.Settings: int set>;

        $i2 = $i2 | $i4;

        $r0.<io.grpc.okhttp.internal.framed.Settings: int set> = $i2;

        $i2 = $i3 & 1;

        if $i2 == 0 goto label2;

        $i2 = $r0.<io.grpc.okhttp.internal.framed.Settings: int persistValue>;

        $i2 = $i2 | $i4;

        $r0.<io.grpc.okhttp.internal.framed.Settings: int persistValue> = $i2;

        goto label3;

     label2:
        $i5 = $r0.<io.grpc.okhttp.internal.framed.Settings: int persistValue>;

        $i2 = $i4 ^ -1;

        $i2 = $i5 & $i2;

        $r0.<io.grpc.okhttp.internal.framed.Settings: int persistValue> = $i2;

     label3:
        $i3 = $i3 & 2;

        if $i3 == 0 goto label4;

        $i3 = $r0.<io.grpc.okhttp.internal.framed.Settings: int persisted>;

        $i3 = $i3 | $i4;

        $r0.<io.grpc.okhttp.internal.framed.Settings: int persisted> = $i3;

        goto label5;

     label4:
        $i3 = $r0.<io.grpc.okhttp.internal.framed.Settings: int persisted>;

        $i4 = $i4 ^ -1;

        $i3 = $i3 & $i4;

        $r0.<io.grpc.okhttp.internal.framed.Settings: int persisted> = $i3;

     label5:
        $r1[$i0] = $i1;

        return $r0;
    }

    int size()
    {
        io.grpc.okhttp.internal.framed.Settings $r0;
        int $i0;

        $r0 := @this: io.grpc.okhttp.internal.framed.Settings;

        $i0 = $r0.<io.grpc.okhttp.internal.framed.Settings: int set>;

        $i0 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        return $i0;
    }

