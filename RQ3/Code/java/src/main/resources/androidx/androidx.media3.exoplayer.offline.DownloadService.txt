androidx.media3.exoplayer.offline.DownloadService
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_INIT>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_RESTART>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_ADD_DOWNLOAD>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_REMOVE_DOWNLOAD>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_REMOVE_ALL_DOWNLOADS>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_RESUME_DOWNLOADS>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_PAUSE_DOWNLOADS>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_SET_STOP_REASON>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String ACTION_SET_REQUIREMENTS>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String KEY_DOWNLOAD_REQUEST>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String KEY_CONTENT_ID>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String KEY_STOP_REASON>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String KEY_REQUIREMENTS>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String KEY_FOREGROUND>
<androidx.media3.exoplayer.offline.DownloadService: int FOREGROUND_NOTIFICATION_ID_NONE>
<androidx.media3.exoplayer.offline.DownloadService: long DEFAULT_FOREGROUND_NOTIFICATION_UPDATE_INTERVAL>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String TAG>
<androidx.media3.exoplayer.offline.DownloadService: java.util.HashMap downloadManagerHelpers>
<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>
<androidx.media3.exoplayer.offline.DownloadService: java.lang.String channelId>
<androidx.media3.exoplayer.offline.DownloadService: int channelNameResourceId>
<androidx.media3.exoplayer.offline.DownloadService: int channelDescriptionResourceId>
<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper downloadManagerHelper>
<androidx.media3.exoplayer.offline.DownloadService: int lastStartId>
<androidx.media3.exoplayer.offline.DownloadService: boolean startedInForeground>
<androidx.media3.exoplayer.offline.DownloadService: boolean taskRemoved>
<androidx.media3.exoplayer.offline.DownloadService: boolean isStopped>
<androidx.media3.exoplayer.offline.DownloadService: boolean isDestroyed>
    protected void <init>(int)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void <init>(int,long)>(i0, 1000L);

        return;
    }

    protected void <init>(int, long)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        int i0;
        long l1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void <init>(int,long,java.lang.String,int,int)>(i0, l1, null, 0, 0);

        return;
    }

    protected void <init>(int, long, java.lang.String, int)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        int i0, i2;
        long l1;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void <init>(int,long,java.lang.String,int,int)>(i0, l1, r1, i2, 0);

        return;
    }

    protected void <init>(int, long, java.lang.String, int, int)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        int i0, i2, i3;
        long l1;
        java.lang.String r1;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.app.Service: void <init>()>();

        if i0 != 0 goto label1;

        r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater> = null;

        r0.<androidx.media3.exoplayer.offline.DownloadService: java.lang.String channelId> = null;

        r0.<androidx.media3.exoplayer.offline.DownloadService: int channelNameResourceId> = 0;

        r0.<androidx.media3.exoplayer.offline.DownloadService: int channelDescriptionResourceId> = 0;

        goto label2;

     label1:
        $r2 = new androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater;

        specialinvoke $r2.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void <init>(androidx.media3.exoplayer.offline.DownloadService,int,long)>(r0, i0, l1);

        r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater> = $r2;

        r0.<androidx.media3.exoplayer.offline.DownloadService: java.lang.String channelId> = r1;

        r0.<androidx.media3.exoplayer.offline.DownloadService: int channelNameResourceId> = i2;

        r0.<androidx.media3.exoplayer.offline.DownloadService: int channelDescriptionResourceId> = i3;

     label2:
        return;
    }

    public static android.content.Intent buildAddDownloadIntent(android.content.Context, java.lang.Class, androidx.media3.exoplayer.offline.DownloadRequest, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        androidx.media3.exoplayer.offline.DownloadRequest r2;
        boolean z0;
        android.content.Intent $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: androidx.media3.exoplayer.offline.DownloadRequest;

        z0 := @parameter3: boolean;

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildAddDownloadIntent(android.content.Context,java.lang.Class,androidx.media3.exoplayer.offline.DownloadRequest,int,boolean)>(r0, r1, r2, 0, z0);

        return $r3;
    }

    public static android.content.Intent buildAddDownloadIntent(android.content.Context, java.lang.Class, androidx.media3.exoplayer.offline.DownloadRequest, int, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        androidx.media3.exoplayer.offline.DownloadRequest r2;
        int i0;
        boolean z0;
        android.content.Intent $r3, $r4, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: androidx.media3.exoplayer.offline.DownloadRequest;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.ADD_DOWNLOAD", z0);

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("download_request", r2);

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("stop_reason", i0);

        return $r5;
    }

    public static android.content.Intent buildRemoveDownloadIntent(android.content.Context, java.lang.Class, java.lang.String, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2;
        boolean z0;
        android.content.Intent $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.REMOVE_DOWNLOAD", z0);

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("content_id", r2);

        return $r4;
    }

    public static android.content.Intent buildRemoveAllDownloadsIntent(android.content.Context, java.lang.Class, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        boolean z0;
        android.content.Intent $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.REMOVE_ALL_DOWNLOADS", z0);

        return $r2;
    }

    public static android.content.Intent buildResumeDownloadsIntent(android.content.Context, java.lang.Class, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        boolean z0;
        android.content.Intent $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.RESUME_DOWNLOADS", z0);

        return $r2;
    }

    public static android.content.Intent buildPauseDownloadsIntent(android.content.Context, java.lang.Class, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        boolean z0;
        android.content.Intent $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.PAUSE_DOWNLOADS", z0);

        return $r2;
    }

    public static android.content.Intent buildSetStopReasonIntent(android.content.Context, java.lang.Class, java.lang.String, int, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2;
        int i0;
        boolean z0;
        android.content.Intent $r3, $r4, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.SET_STOP_REASON", z0);

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("content_id", r2);

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("stop_reason", i0);

        return $r5;
    }

    public static android.content.Intent buildSetRequirementsIntent(android.content.Context, java.lang.Class, androidx.media3.exoplayer.scheduler.Requirements, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        androidx.media3.exoplayer.scheduler.Requirements r2;
        boolean z0;
        android.content.Intent $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: androidx.media3.exoplayer.scheduler.Requirements;

        z0 := @parameter3: boolean;

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.SET_REQUIREMENTS", z0);

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("requirements", r2);

        return $r4;
    }

    public static void sendAddDownload(android.content.Context, java.lang.Class, androidx.media3.exoplayer.offline.DownloadRequest, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        androidx.media3.exoplayer.offline.DownloadRequest r2;
        boolean z0;
        android.content.Intent r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: androidx.media3.exoplayer.offline.DownloadRequest;

        z0 := @parameter3: boolean;

        r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildAddDownloadIntent(android.content.Context,java.lang.Class,androidx.media3.exoplayer.offline.DownloadRequest,boolean)>(r0, r1, r2, z0);

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void startService(android.content.Context,android.content.Intent,boolean)>(r0, r3, z0);

        return;
    }

    public static void sendAddDownload(android.content.Context, java.lang.Class, androidx.media3.exoplayer.offline.DownloadRequest, int, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        androidx.media3.exoplayer.offline.DownloadRequest r2;
        int i0;
        boolean z0;
        android.content.Intent r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: androidx.media3.exoplayer.offline.DownloadRequest;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildAddDownloadIntent(android.content.Context,java.lang.Class,androidx.media3.exoplayer.offline.DownloadRequest,int,boolean)>(r0, r1, r2, i0, z0);

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void startService(android.content.Context,android.content.Intent,boolean)>(r0, r3, z0);

        return;
    }

    public static void sendRemoveDownload(android.content.Context, java.lang.Class, java.lang.String, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2;
        boolean z0;
        android.content.Intent r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildRemoveDownloadIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, r2, z0);

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void startService(android.content.Context,android.content.Intent,boolean)>(r0, r3, z0);

        return;
    }

    public static void sendRemoveAllDownloads(android.content.Context, java.lang.Class, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        boolean z0;
        android.content.Intent r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildRemoveAllDownloadsIntent(android.content.Context,java.lang.Class,boolean)>(r0, r1, z0);

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void startService(android.content.Context,android.content.Intent,boolean)>(r0, r2, z0);

        return;
    }

    public static void sendResumeDownloads(android.content.Context, java.lang.Class, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        boolean z0;
        android.content.Intent r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildResumeDownloadsIntent(android.content.Context,java.lang.Class,boolean)>(r0, r1, z0);

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void startService(android.content.Context,android.content.Intent,boolean)>(r0, r2, z0);

        return;
    }

    public static void sendPauseDownloads(android.content.Context, java.lang.Class, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        boolean z0;
        android.content.Intent r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildPauseDownloadsIntent(android.content.Context,java.lang.Class,boolean)>(r0, r1, z0);

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void startService(android.content.Context,android.content.Intent,boolean)>(r0, r2, z0);

        return;
    }

    public static void sendSetStopReason(android.content.Context, java.lang.Class, java.lang.String, int, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2;
        int i0;
        boolean z0;
        android.content.Intent r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildSetStopReasonIntent(android.content.Context,java.lang.Class,java.lang.String,int,boolean)>(r0, r1, r2, i0, z0);

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void startService(android.content.Context,android.content.Intent,boolean)>(r0, r3, z0);

        return;
    }

    public static void sendSetRequirements(android.content.Context, java.lang.Class, androidx.media3.exoplayer.scheduler.Requirements, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        androidx.media3.exoplayer.scheduler.Requirements r2;
        boolean z0;
        android.content.Intent r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: androidx.media3.exoplayer.scheduler.Requirements;

        z0 := @parameter3: boolean;

        r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent buildSetRequirementsIntent(android.content.Context,java.lang.Class,androidx.media3.exoplayer.scheduler.Requirements,boolean)>(r0, r1, r2, z0);

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void startService(android.content.Context,android.content.Intent,boolean)>(r0, r3, z0);

        return;
    }

    public static void start(android.content.Context, java.lang.Class)
    {
        android.content.Context r0;
        java.lang.Class r1;
        android.content.Intent $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.INIT");

        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r2);

        return;
    }

    public static void startForeground(android.content.Context, java.lang.Class)
    {
        android.content.Context r0;
        java.lang.Class r1;
        android.content.Intent r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String,boolean)>(r0, r1, "androidx.media3.exoplayer.downloadService.action.INIT", 1);

        staticinvoke <androidx.media3.common.util.Util: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)>(r0, r2);

        return;
    }

    public static void clearDownloadManagerHelpers()
    {
        java.util.HashMap $r0;

        $r0 = <androidx.media3.exoplayer.offline.DownloadService: java.util.HashMap downloadManagerHelpers>;

        virtualinvoke $r0.<java.util.HashMap: void clear()>();

        return;
    }

    public void onCreate()
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        java.lang.Class r1;
        boolean z0, z1, $z2, $z3;
        androidx.media3.exoplayer.scheduler.Scheduler r2, $r11;
        androidx.media3.exoplayer.offline.DownloadManager r3;
        java.lang.String $r4, $r9;
        java.util.HashMap $r5, $r14;
        java.lang.Object $r6;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r7;
        int $i0, $i1, $i2;
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r10, r15;
        android.content.Context $r13, r16;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadService: java.lang.String channelId>;

        if $r4 == null goto label1;

        $r9 = r0.<androidx.media3.exoplayer.offline.DownloadService: java.lang.String channelId>;

        $i2 = r0.<androidx.media3.exoplayer.offline.DownloadService: int channelNameResourceId>;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadService: int channelDescriptionResourceId>;

        r16 = (android.content.Context) r0;

        staticinvoke <androidx.media3.common.util.NotificationUtil: void createNotificationChannel(android.content.Context,java.lang.String,int,int,int)>(r16, $r9, $i2, $i1, 2);

     label1:
        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = <androidx.media3.exoplayer.offline.DownloadService: java.util.HashMap downloadManagerHelpers>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper) $r6;

        if r10 != null goto label8;

        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        if $r7 == null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 31 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z1 = $z3;

        if z0 == 0 goto label6;

        if z1 == 0 goto label6;

        $r11 = virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.scheduler.Scheduler getScheduler()>();

        goto label7;

     label6:
        $r11 = null;

     label7:
        r2 = $r11;

        r3 = virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadManager getDownloadManager()>();

        virtualinvoke r3.<androidx.media3.exoplayer.offline.DownloadManager: void resumeDownloads()>();

        r15 = new androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        $r13 = virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: android.content.Context getApplicationContext()>();

        specialinvoke r15.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void <init>(android.content.Context,androidx.media3.exoplayer.offline.DownloadManager,boolean,androidx.media3.exoplayer.scheduler.Scheduler,java.lang.Class,androidx.media3.exoplayer.offline.DownloadService$1)>($r13, r3, z0, r2, r1, null);

        r10 = r15;

        $r14 = <androidx.media3.exoplayer.offline.DownloadService: java.util.HashMap downloadManagerHelpers>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label8:
        r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper downloadManagerHelper> = r10;

        virtualinvoke r10.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void attachService(androidx.media3.exoplayer.offline.DownloadService)>(r0);

        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        android.content.Intent r1, $r9, $r14, $r16;
        int i0, i1, $i2, i4, i5, $i6;
        androidx.media3.exoplayer.offline.DownloadManager r2;
        java.lang.String r3, $r21, $r22, r24, r25;
        androidx.media3.exoplayer.offline.DownloadRequest r4;
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper $r5, $r7;
        java.lang.Object $r6, $r8, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        android.os.Parcelable $r10, $r17;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r11, $r12;
        java.lang.StringBuilder $r18, $r19, $r20;
        byte b3;
        androidx.media3.exoplayer.scheduler.Requirements r26;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<androidx.media3.exoplayer.offline.DownloadService: int lastStartId> = i1;

        r0.<androidx.media3.exoplayer.offline.DownloadService: boolean taskRemoved> = 0;

        r24 = null;

        r25 = null;

        if r1 == null goto label04;

        r24 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        r25 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("content_id");

        $z11 = r0.<androidx.media3.exoplayer.offline.DownloadService: boolean startedInForeground>;

        $z12 = virtualinvoke r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("foreground", 0);

        if $z12 != 0 goto label01;

        $r22 = "androidx.media3.exoplayer.downloadService.action.RESTART";

        $z14 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z14 == 0 goto label02;

     label01:
        $z15 = 1;

        goto label03;

     label02:
        $z15 = 0;

     label03:
        $z13 = $z11 | $z15;

        r0.<androidx.media3.exoplayer.offline.DownloadService: boolean startedInForeground> = $z13;

     label04:
        if r24 != null goto label05;

        r24 = "androidx.media3.exoplayer.downloadService.action.INIT";

     label05:
        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper downloadManagerHelper>;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper) $r6;

        r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager access$100(androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper)>($r7);

        r3 = r24;

        b3 = -1;

        $i2 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case -2068303304: goto label13;
            case -1192305801: goto label09;
            case -659421309: goto label07;
            case -238450692: goto label06;
            case 32678949: goto label11;
            case 464223742: goto label10;
            case 829812082: goto label08;
            case 845668953: goto label14;
            case 1746253622: goto label12;
            default: goto label15;
        };

     label06:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.INIT");

        if $z7 == 0 goto label15;

        b3 = 0;

        goto label15;

     label07:
        $z8 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.RESTART");

        if $z8 == 0 goto label15;

        b3 = 1;

        goto label15;

     label08:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.ADD_DOWNLOAD");

        if $z4 == 0 goto label15;

        b3 = 2;

        goto label15;

     label09:
        $z9 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.REMOVE_DOWNLOAD");

        if $z9 == 0 goto label15;

        b3 = 3;

        goto label15;

     label10:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.REMOVE_ALL_DOWNLOADS");

        if $z5 == 0 goto label15;

        b3 = 4;

        goto label15;

     label11:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.RESUME_DOWNLOADS");

        if $z6 == 0 goto label15;

        b3 = 5;

        goto label15;

     label12:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.PAUSE_DOWNLOADS");

        if $z0 == 0 goto label15;

        b3 = 6;

        goto label15;

     label13:
        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.SET_STOP_REASON");

        if $z10 == 0 goto label15;

        b3 = 7;

        goto label15;

     label14:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("androidx.media3.exoplayer.downloadService.action.SET_REQUIREMENTS");

        if $z3 == 0 goto label15;

        b3 = 8;

     label15:
        tableswitch(b3)
        {
            case 0: goto label16;
            case 1: goto label16;
            case 2: goto label17;
            case 3: goto label19;
            case 4: goto label21;
            case 5: goto label22;
            case 6: goto label23;
            case 7: goto label24;
            case 8: goto label26;
            default: goto label28;
        };

     label16:
        goto label29;

     label17:
        $r15 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r16 = (android.content.Intent) $r15;

        $r17 = virtualinvoke $r16.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("download_request");

        r4 = (androidx.media3.exoplayer.offline.DownloadRequest) $r17;

        if r4 != null goto label18;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DownloadService", "Ignored ADD_DOWNLOAD: Missing download_request extra");

        goto label29;

     label18:
        i4 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("stop_reason", 0);

        virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: void addDownload(androidx.media3.exoplayer.offline.DownloadRequest,int)>(r4, i4);

        goto label29;

     label19:
        if r25 != null goto label20;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DownloadService", "Ignored REMOVE_DOWNLOAD: Missing content_id extra");

        goto label29;

     label20:
        virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: void removeDownload(java.lang.String)>(r25);

        goto label29;

     label21:
        virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: void removeAllDownloads()>();

        goto label29;

     label22:
        virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: void resumeDownloads()>();

        goto label29;

     label23:
        virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: void pauseDownloads()>();

        goto label29;

     label24:
        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r14 = (android.content.Intent) $r13;

        $z2 = virtualinvoke $r14.<android.content.Intent: boolean hasExtra(java.lang.String)>("stop_reason");

        if $z2 != 0 goto label25;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DownloadService", "Ignored SET_STOP_REASON: Missing stop_reason extra");

        goto label29;

     label25:
        i5 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("stop_reason", 0);

        virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: void setStopReason(java.lang.String,int)>(r25, i5);

        goto label29;

     label26:
        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r9 = (android.content.Intent) $r8;

        $r10 = virtualinvoke $r9.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("requirements");

        r26 = (androidx.media3.exoplayer.scheduler.Requirements) $r10;

        if r26 != null goto label27;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DownloadService", "Ignored SET_REQUIREMENTS: Missing requirements extra");

        goto label29;

     label27:
        virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: void setRequirements(androidx.media3.exoplayer.scheduler.Requirements)>(r26);

        goto label29;

     label28:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignored unrecognized action: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DownloadService", $r21);

     label29:
        $i6 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i6 < 26 goto label30;

        $z1 = r0.<androidx.media3.exoplayer.offline.DownloadService: boolean startedInForeground>;

        if $z1 == 0 goto label30;

        $r11 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        if $r11 == null goto label30;

        $r12 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        virtualinvoke $r12.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void showNotificationIfNotAlready()>();

     label30:
        r0.<androidx.media3.exoplayer.offline.DownloadService: boolean isStopped> = 0;

        $z16 = virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: boolean isIdle()>();

        if $z16 == 0 goto label31;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void onIdle()>();

     label31:
        return 1;
    }

    public void onTaskRemoved(android.content.Intent)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        android.content.Intent r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        r1 := @parameter0: android.content.Intent;

        r0.<androidx.media3.exoplayer.offline.DownloadService: boolean taskRemoved> = 1;

        return;
    }

    public void onDestroy()
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper $r1, $r3;
        java.lang.Object $r2;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        r0.<androidx.media3.exoplayer.offline.DownloadService: boolean isDestroyed> = 1;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper downloadManagerHelper>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper) $r2;

        virtualinvoke $r3.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void detachService(androidx.media3.exoplayer.offline.DownloadService)>(r0);

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        virtualinvoke $r5.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void stopPeriodicUpdates()>();

     label1:
        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        android.content.Intent r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadManager getDownloadManager()>
<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.scheduler.Scheduler getScheduler()>
<androidx.media3.exoplayer.offline.DownloadService: android.app.Notification getForegroundNotification(java.util.List,int)>
    protected final void invalidateForegroundNotification()
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        if $r1 == null goto label1;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadService: boolean isDestroyed>;

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        virtualinvoke $r2.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void invalidate()>();

     label1:
        return;
    }

    private void notifyDownloads(java.util.List)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        java.util.List r1;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r2, $r5;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        androidx.media3.exoplayer.offline.Download $r4;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        if $r2 == null goto label3;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r4 = (androidx.media3.exoplayer.offline.Download) $r3;

        $i1 = $r4.<androidx.media3.exoplayer.offline.Download: int state>;

        $z0 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: boolean needsStartedService(int)>($i1);

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        virtualinvoke $r5.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void startPeriodicUpdates()>();

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void notifyDownloadChanged(androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        androidx.media3.exoplayer.offline.Download r1;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r2, $r3, $r4;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Download;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        if $r2 == null goto label2;

        $i0 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        $z0 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: boolean needsStartedService(int)>($i0);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        virtualinvoke $r4.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void startPeriodicUpdates()>();

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        virtualinvoke $r3.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void invalidate()>();

     label2:
        return;
    }

    private void notifyDownloadRemoved()
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r1, $r2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        virtualinvoke $r2.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void invalidate()>();

     label1:
        return;
    }

    private boolean isStopped()
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadService: boolean isStopped>;

        return $z0;
    }

    private void onIdle()
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater $r1, $r6;
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper $r2, $r4;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        if $r1 == null goto label1;

        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater foregroundNotificationUpdater>;

        virtualinvoke $r6.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void stopPeriodicUpdates()>();

     label1:
        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper downloadManagerHelper>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper) $r3;

        $z0 = virtualinvoke $r4.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean updateScheduler()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 28 goto label3;

        $z4 = r0.<androidx.media3.exoplayer.offline.DownloadService: boolean taskRemoved>;

        if $z4 == 0 goto label3;

        virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void stopSelf()>();

        r0.<androidx.media3.exoplayer.offline.DownloadService: boolean isStopped> = 1;

        goto label4;

     label3:
        $z1 = r0.<androidx.media3.exoplayer.offline.DownloadService: boolean isStopped>;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadService: int lastStartId>;

        $z2 = virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: boolean stopSelfResult(int)>($i1);

        $z3 = $z1 | $z2;

        r0.<androidx.media3.exoplayer.offline.DownloadService: boolean isStopped> = $z3;

     label4:
        return;
    }

    private static boolean needsStartedService(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        if i0 == 5 goto label1;

        if i0 != 7 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static android.content.Intent getIntent(android.content.Context, java.lang.Class, java.lang.String, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2;
        boolean z0;
        android.content.Intent $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String)>(r0, r1, r2);

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("foreground", z0);

        return $r4;
    }

    private static android.content.Intent getIntent(android.content.Context, java.lang.Class, java.lang.String)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2;
        android.content.Intent $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, r1);

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>(r2);

        return $r4;
    }

    private static void startService(android.content.Context, android.content.Intent, boolean)
    {
        android.content.Context r0;
        android.content.Intent r1;
        boolean z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        staticinvoke <androidx.media3.common.util.Util: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)>(r0, r1);

        goto label2;

     label1:
        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r1);

     label2:
        return;
    }

    static androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper access$200(androidx.media3.exoplayer.offline.DownloadService)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper $r1;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper downloadManagerHelper>;

        return $r1;
    }

    static void access$300(androidx.media3.exoplayer.offline.DownloadService, java.util.List)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        java.util.List r1;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void notifyDownloads(java.util.List)>(r1);

        return;
    }

    static void access$400(androidx.media3.exoplayer.offline.DownloadService, androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        androidx.media3.exoplayer.offline.Download r1;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        r1 := @parameter1: androidx.media3.exoplayer.offline.Download;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void notifyDownloadChanged(androidx.media3.exoplayer.offline.Download)>(r1);

        return;
    }

    static boolean access$500(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: boolean needsStartedService(int)>(i0);

        return $z0;
    }

    static void access$600(androidx.media3.exoplayer.offline.DownloadService)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void notifyDownloadRemoved()>();

        return;
    }

    static void access$700(androidx.media3.exoplayer.offline.DownloadService)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: void onIdle()>();

        return;
    }

    static boolean access$800(androidx.media3.exoplayer.offline.DownloadService)
    {
        androidx.media3.exoplayer.offline.DownloadService r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService: boolean isStopped()>();

        return $z0;
    }

    static android.content.Intent access$900(android.content.Context, java.lang.Class, java.lang.String)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2;
        android.content.Intent $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent getIntent(android.content.Context,java.lang.Class,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <androidx.media3.exoplayer.offline.DownloadService: java.util.HashMap downloadManagerHelpers> = $r0;

        return;
    }

androidx.media3.exoplayer.offline.DownloadService$1
androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper
<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: android.content.Context context>
<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager downloadManager>
<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean foregroundAllowed>
<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Scheduler scheduler>
<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: java.lang.Class serviceClass>
<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>
<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Requirements scheduledRequirements>
    private void <init>(android.content.Context, androidx.media3.exoplayer.offline.DownloadManager, boolean, androidx.media3.exoplayer.scheduler.Scheduler, java.lang.Class)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        android.content.Context r1;
        androidx.media3.exoplayer.offline.DownloadManager r2;
        boolean z0;
        androidx.media3.exoplayer.scheduler.Scheduler r3;
        java.lang.Class r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.exoplayer.offline.DownloadManager;

        z0 := @parameter2: boolean;

        r3 := @parameter3: androidx.media3.exoplayer.scheduler.Scheduler;

        r4 := @parameter4: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: android.content.Context context> = r1;

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager downloadManager> = r2;

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean foregroundAllowed> = z0;

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Scheduler scheduler> = r3;

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: java.lang.Class serviceClass> = r4;

        virtualinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager: void addListener(androidx.media3.exoplayer.offline.DownloadManager$Listener)>(r0);

        virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean updateScheduler()>();

        return;
    }

    public void attachService(androidx.media3.exoplayer.offline.DownloadService)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadService r1, $r2;
        androidx.media3.exoplayer.offline.DownloadManager $r3;
        boolean $z0, $z2;
        android.os.Handler $r4;
        java.lang.Runnable $r5;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        if $r2 != null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService> = r1;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager downloadManager>;

        $z0 = virtualinvoke $r3.<androidx.media3.exoplayer.offline.DownloadManager: boolean isInitialized()>();

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentOrMainLooper()>();

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper,androidx.media3.exoplayer.offline.DownloadService)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void lambda$attachService$0(androidx.media3.exoplayer.offline.DownloadService)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r4.<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>($r5);

     label3:
        return;
    }

    public void detachService(androidx.media3.exoplayer.offline.DownloadService)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadService r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        if $r2 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService> = null;

        return;
    }

    public boolean updateScheduler()
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.media3.exoplayer.scheduler.Requirements r1, r2;
        java.lang.String r3;
        androidx.media3.exoplayer.offline.DownloadManager $r4, $r6;
        androidx.media3.exoplayer.scheduler.Scheduler $r5, $r7, $r9;
        android.content.Context $r8;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager downloadManager>;

        z0 = virtualinvoke $r4.<androidx.media3.exoplayer.offline.DownloadManager: boolean isWaitingForRequirements()>();

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Scheduler scheduler>;

        if $r5 != null goto label3;

        if z0 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        if z0 != 0 goto label4;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void cancelScheduler()>();

        return 1;

     label4:
        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager downloadManager>;

        r1 = virtualinvoke $r6.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.Requirements getRequirements()>();

        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Scheduler scheduler>;

        r2 = interfaceinvoke $r7.<androidx.media3.exoplayer.scheduler.Scheduler: androidx.media3.exoplayer.scheduler.Requirements getSupportedRequirements(androidx.media3.exoplayer.scheduler.Requirements)>(r1);

        $z1 = virtualinvoke r2.<androidx.media3.exoplayer.scheduler.Requirements: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label5;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void cancelScheduler()>();

        return 0;

     label5:
        $z2 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean schedulerNeedsUpdate(androidx.media3.exoplayer.scheduler.Requirements)>(r1);

        if $z2 != 0 goto label6;

        return 1;

     label6:
        $r8 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: android.content.Context context>;

        r3 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        $r9 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Scheduler scheduler>;

        $z3 = interfaceinvoke $r9.<androidx.media3.exoplayer.scheduler.Scheduler: boolean schedule(androidx.media3.exoplayer.scheduler.Requirements,java.lang.String,java.lang.String)>(r1, r3, "androidx.media3.exoplayer.downloadService.action.RESTART");

        if $z3 == 0 goto label7;

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Requirements scheduledRequirements> = r1;

        return 1;

     label7:
        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DownloadService", "Failed to schedule restart");

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void cancelScheduler()>();

        return 0;
    }

    public void onInitialized(androidx.media3.exoplayer.offline.DownloadManager)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.offline.DownloadService $r2, $r3;
        java.util.List $r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        $r4 = virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List getCurrentDownloads()>();

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void access$300(androidx.media3.exoplayer.offline.DownloadService,java.util.List)>($r3, $r4);

     label1:
        return;
    }

    public void onDownloadChanged(androidx.media3.exoplayer.offline.DownloadManager, androidx.media3.exoplayer.offline.Download, java.lang.Exception)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.offline.Download r2;
        java.lang.Exception r3;
        androidx.media3.exoplayer.offline.DownloadService $r4, $r5;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Download;

        r3 := @parameter2: java.lang.Exception;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void access$400(androidx.media3.exoplayer.offline.DownloadService,androidx.media3.exoplayer.offline.Download)>($r5, r2);

     label1:
        $z0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean serviceMayNeedRestart()>();

        if $z0 == 0 goto label2;

        $i0 = r2.<androidx.media3.exoplayer.offline.Download: int state>;

        $z1 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: boolean access$500(int)>($i0);

        if $z1 == 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DownloadService", "DownloadService wasn\'t running. Restarting.");

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void restartService()>();

     label2:
        return;
    }

    public void onDownloadRemoved(androidx.media3.exoplayer.offline.DownloadManager, androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.offline.Download r2;
        androidx.media3.exoplayer.offline.DownloadService $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Download;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void access$600(androidx.media3.exoplayer.offline.DownloadService)>($r4);

     label1:
        return;
    }

    public final void onIdle(androidx.media3.exoplayer.offline.DownloadManager)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.offline.DownloadService $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void access$700(androidx.media3.exoplayer.offline.DownloadService)>($r3);

     label1:
        return;
    }

    public void onRequirementsStateChanged(androidx.media3.exoplayer.offline.DownloadManager, androidx.media3.exoplayer.scheduler.Requirements, int)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.scheduler.Requirements r2;
        int i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        r2 := @parameter1: androidx.media3.exoplayer.scheduler.Requirements;

        i0 := @parameter2: int;

        virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean updateScheduler()>();

        return;
    }

    public void onWaitingForRequirementsChanged(androidx.media3.exoplayer.offline.DownloadManager, boolean)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        boolean z0, $z1, $z2;
        java.util.List r2;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        androidx.media3.exoplayer.offline.Download $r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label3;

        $z1 = virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager: boolean getDownloadsPaused()>();

        if $z1 != 0 goto label3;

        $z2 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean serviceMayNeedRestart()>();

        if $z2 == 0 goto label3;

        r2 = virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List getCurrentDownloads()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r4 = (androidx.media3.exoplayer.offline.Download) $r3;

        $i1 = $r4.<androidx.media3.exoplayer.offline.Download: int state>;

        if $i1 != 0 goto label2;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void restartService()>();

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private boolean schedulerNeedsUpdate(androidx.media3.exoplayer.scheduler.Requirements)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.scheduler.Requirements r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.scheduler.Requirements;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Requirements scheduledRequirements>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void cancelScheduler()
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.scheduler.Requirements r1, $r2;
        boolean $z0;
        androidx.media3.exoplayer.scheduler.Scheduler $r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        $r2 = new androidx.media3.exoplayer.scheduler.Requirements;

        specialinvoke $r2.<androidx.media3.exoplayer.scheduler.Requirements: void <init>(int)>(0);

        r1 = $r2;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean schedulerNeedsUpdate(androidx.media3.exoplayer.scheduler.Requirements)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Scheduler scheduler>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.scheduler.Scheduler: boolean cancel()>();

        r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.scheduler.Requirements scheduledRequirements> = r1;

     label1:
        return;
    }

    private boolean serviceMayNeedRestart()
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadService $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadService downloadService>;

        $z0 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: boolean access$800(androidx.media3.exoplayer.offline.DownloadService)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private void restartService()
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        boolean $z0;
        java.lang.Class $r1, $r5;
        android.content.Context $r2, $r3, $r6, $r7;
        java.lang.Throwable $r9, $r10, r12, r14;
        android.content.Intent r11, r13;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: boolean foregroundAllowed>;

        if $z0 == 0 goto label4;

     label1:
        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: android.content.Context context>;

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: java.lang.Class serviceClass>;

        r11 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent access$900(android.content.Context,java.lang.Class,java.lang.String)>($r6, $r5, "androidx.media3.exoplayer.downloadService.action.RESTART");

        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: android.content.Context context>;

        staticinvoke <androidx.media3.common.util.Util: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)>($r7, r11);

     label2:
        goto label7;

     label3:
        $r10 := @caughtexception;

        r12 = $r10;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DownloadService", "Failed to restart (foreground launch restriction)");

        goto label7;

     label4:
        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: android.content.Context context>;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: java.lang.Class serviceClass>;

        r13 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: android.content.Intent access$900(android.content.Context,java.lang.Class,java.lang.String)>($r2, $r1, "androidx.media3.exoplayer.downloadService.action.INIT");

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: android.content.Context context>;

        virtualinvoke $r3.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r13);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        r14 = $r9;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DownloadService", "Failed to restart (process is idle)");

     label7:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label4 to label5 with label6;
    }

    private void lambda$attachService$0(androidx.media3.exoplayer.offline.DownloadService)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadService r1;
        androidx.media3.exoplayer.offline.DownloadManager $r2;
        java.util.List $r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager downloadManager>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List getCurrentDownloads()>();

        staticinvoke <androidx.media3.exoplayer.offline.DownloadService: void access$300(androidx.media3.exoplayer.offline.DownloadService,java.util.List)>(r1, $r3);

        return;
    }

    void <init>(android.content.Context, androidx.media3.exoplayer.offline.DownloadManager, boolean, androidx.media3.exoplayer.scheduler.Scheduler, java.lang.Class, androidx.media3.exoplayer.offline.DownloadService$1)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        android.content.Context r1;
        androidx.media3.exoplayer.offline.DownloadManager r2;
        boolean z0;
        androidx.media3.exoplayer.scheduler.Scheduler r3;
        java.lang.Class r4;
        androidx.media3.exoplayer.offline.DownloadService$1 r5;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.exoplayer.offline.DownloadManager;

        z0 := @parameter2: boolean;

        r3 := @parameter3: androidx.media3.exoplayer.scheduler.Scheduler;

        r4 := @parameter4: java.lang.Class;

        r5 := @parameter5: androidx.media3.exoplayer.offline.DownloadService$1;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: void <init>(android.content.Context,androidx.media3.exoplayer.offline.DownloadManager,boolean,androidx.media3.exoplayer.scheduler.Scheduler,java.lang.Class)>(r1, r2, z0, r3, r4);

        return;
    }

    static androidx.media3.exoplayer.offline.DownloadManager access$100(androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper)
    {
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper r0;
        androidx.media3.exoplayer.offline.DownloadManager $r1;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager downloadManager>;

        return $r1;
    }

androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater
<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: int notificationId>
<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: long updateInterval>
<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: android.os.Handler handler>
<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean periodicUpdatesStarted>
<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean notificationDisplayed>
<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: androidx.media3.exoplayer.offline.DownloadService this$0>
    public void <init>(androidx.media3.exoplayer.offline.DownloadService, int, long)
    {
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater r0;
        androidx.media3.exoplayer.offline.DownloadService r1;
        int i0;
        long l1;
        android.os.Handler $r2;
        android.os.Looper $r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadService;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: androidx.media3.exoplayer.offline.DownloadService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: int notificationId> = i0;

        r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: long updateInterval> = l1;

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: android.os.Handler handler> = $r2;

        return;
    }

    public void startPeriodicUpdates()
    {
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater r0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater;

        r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean periodicUpdatesStarted> = 1;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void update()>();

        return;
    }

    public void stopPeriodicUpdates()
    {
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater r0;
        android.os.Handler $r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater;

        r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean periodicUpdatesStarted> = 0;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: android.os.Handler handler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        return;
    }

    public void showNotificationIfNotAlready()
    {
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean notificationDisplayed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void update()>();

     label1:
        return;
    }

    public void invalidate()
    {
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean notificationDisplayed>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void update()>();

     label1:
        return;
    }

    private void update()
    {
        androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        java.util.List r2;
        int i0, $i1, $i3;
        android.app.Notification r3;
        androidx.media3.exoplayer.offline.DownloadService $r4, $r8, $r9, $r15;
        androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper $r5, $r7;
        java.lang.Object $r6, $r10;
        boolean $z0, $z1;
        android.app.NotificationManager $r11;
        android.os.Handler $r12, $r13;
        java.lang.Runnable $r14;
        long $l2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: androidx.media3.exoplayer.offline.DownloadService this$0>;

        $r5 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService: androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper access$200(androidx.media3.exoplayer.offline.DownloadService)>($r4);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper) $r6;

        r1 = staticinvoke <androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper: androidx.media3.exoplayer.offline.DownloadManager access$100(androidx.media3.exoplayer.offline.DownloadService$DownloadManagerHelper)>($r7);

        r2 = virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List getCurrentDownloads()>();

        i0 = virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager: int getNotMetRequirements()>();

        $r8 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: androidx.media3.exoplayer.offline.DownloadService this$0>;

        r3 = virtualinvoke $r8.<androidx.media3.exoplayer.offline.DownloadService: android.app.Notification getForegroundNotification(java.util.List,int)>(r2, i0);

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean notificationDisplayed>;

        if $z0 != 0 goto label1;

        $r15 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: androidx.media3.exoplayer.offline.DownloadService this$0>;

        $i3 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: int notificationId>;

        virtualinvoke $r15.<androidx.media3.exoplayer.offline.DownloadService: void startForeground(int,android.app.Notification)>($i3, r3);

        r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean notificationDisplayed> = 1;

        goto label2;

     label1:
        $r9 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: androidx.media3.exoplayer.offline.DownloadService this$0>;

        $r10 = virtualinvoke $r9.<androidx.media3.exoplayer.offline.DownloadService: java.lang.Object getSystemService(java.lang.String)>("notification");

        $r11 = (android.app.NotificationManager) $r10;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: int notificationId>;

        virtualinvoke $r11.<android.app.NotificationManager: void notify(int,android.app.Notification)>($i1, r3);

     label2:
        $z1 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: boolean periodicUpdatesStarted>;

        if $z1 == 0 goto label3;

        $r12 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: android.os.Handler handler>;

        virtualinvoke $r12.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        $r13 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: android.os.Handler handler>;

        $r14 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: void update()>, methodtype: void __METHODTYPE__());

        $l2 = r0.<androidx.media3.exoplayer.offline.DownloadService$ForegroundNotificationUpdater: long updateInterval>;

        virtualinvoke $r13.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r14, $l2);

     label3:
        return;
    }

