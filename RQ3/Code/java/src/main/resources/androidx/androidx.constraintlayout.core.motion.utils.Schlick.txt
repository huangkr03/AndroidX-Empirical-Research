androidx.constraintlayout.core.motion.utils.Schlick
<androidx.constraintlayout.core.motion.utils.Schlick: boolean DEBUG>
<androidx.constraintlayout.core.motion.utils.Schlick: double mS>
<androidx.constraintlayout.core.motion.utils.Schlick: double mT>
<androidx.constraintlayout.core.motion.utils.Schlick: double eps>
    void <init>(java.lang.String)
    {
        androidx.constraintlayout.core.motion.utils.Schlick r0;
        java.lang.String r1, $r2, $r3, $r4, $r5;
        int i0, i1, i2, $i3, $i4, $i5;
        double $d0, $d1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Schlick;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.constraintlayout.core.motion.utils.Easing: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.Schlick: java.lang.String str> = r1;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(40);

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(44, i0);

        $i3 = i0 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i3, i1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS> = $d0;

        $i4 = i1 + 1;

        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(44, $i4);

        $i5 = i1 + 1;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i5, i2);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT> = $d1;

        return;
    }

    private double func(double)
    {
        androidx.constraintlayout.core.motion.utils.Schlick r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        byte $b0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Schlick;

        d0 := @parameter0: double;

        $d1 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $b0 = d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $d13 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d19 = $d13 * d0;

        $d16 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS>;

        $d14 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d15 = $d14 - d0;

        $d17 = $d16 * $d15;

        $d18 = d0 + $d17;

        $d20 = $d19 / $d18;

        return $d20;

     label1:
        $d2 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d4 = 1.0 - $d2;

        $d3 = d0 - 1.0;

        $d11 = $d4 * $d3;

        $d9 = 1.0 - d0;

        $d7 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS>;

        $d5 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d6 = $d5 - d0;

        $d8 = $d7 * $d6;

        $d10 = $d9 - $d8;

        $d12 = $d11 / $d10;

        return $d12;
    }

    private double dfunc(double)
    {
        androidx.constraintlayout.core.motion.utils.Schlick r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41;
        byte $b0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Schlick;

        d0 := @parameter0: double;

        $d1 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $b0 = d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $d26 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS>;

        $d25 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d28 = $d26 * $d25;

        $d27 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d40 = $d28 * $d27;

        $d31 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS>;

        $d29 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d30 = $d29 - d0;

        $d32 = $d31 * $d30;

        $d38 = $d32 + d0;

        $d35 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS>;

        $d33 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d34 = $d33 - d0;

        $d36 = $d35 * $d34;

        $d37 = $d36 + d0;

        $d39 = $d38 * $d37;

        $d41 = $d40 / $d39;

        return $d41;

     label1:
        $d4 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS>;

        $d2 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d3 = $d2 - 1.0;

        $d7 = $d4 * $d3;

        $d5 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d6 = $d5 - 1.0;

        $d23 = $d7 * $d6;

        $d8 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS>;

        $d11 = neg $d8;

        $d9 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d10 = $d9 - d0;

        $d12 = $d11 * $d10;

        $d13 = $d12 - d0;

        $d21 = $d13 + 1.0;

        $d14 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mS>;

        $d17 = neg $d14;

        $d15 = r0.<androidx.constraintlayout.core.motion.utils.Schlick: double mT>;

        $d16 = $d15 - d0;

        $d18 = $d17 * $d16;

        $d19 = $d18 - d0;

        $d20 = $d19 + 1.0;

        $d22 = $d21 * $d20;

        $d24 = $d23 / $d22;

        return $d24;
    }

    public double getDiff(double)
    {
        androidx.constraintlayout.core.motion.utils.Schlick r0;
        double d0, $d1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Schlick;

        d0 := @parameter0: double;

        $d1 = specialinvoke r0.<androidx.constraintlayout.core.motion.utils.Schlick: double dfunc(double)>(d0);

        return $d1;
    }

    public double get(double)
    {
        androidx.constraintlayout.core.motion.utils.Schlick r0;
        double d0, $d1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.Schlick;

        d0 := @parameter0: double;

        $d1 = specialinvoke r0.<androidx.constraintlayout.core.motion.utils.Schlick: double func(double)>(d0);

        return $d1;
    }

