androidx.compose.ui.text.caches.LruCache
<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>
<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>
<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>
<androidx.compose.ui.text.caches.LruCache: int size>
<androidx.compose.ui.text.caches.LruCache: int maxSize>
<androidx.compose.ui.text.caches.LruCache: int putCount>
<androidx.compose.ui.text.caches.LruCache: int createCount>
<androidx.compose.ui.text.caches.LruCache: int evictionCount>
<androidx.compose.ui.text.caches.LruCache: int hitCount>
<androidx.compose.ui.text.caches.LruCache: int missCount>
    public final int size()
    {
        androidx.compose.ui.text.caches.LruCache r0, r1;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        int i0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0;

        r2 = staticinvoke <androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)>(r1);

        r3 = r2;

        entermonitor r3;

        i0 = r0.<androidx.compose.ui.text.caches.LruCache: int size>;

        exitmonitor r3;

        return i0;
    }

    public void <init>(int)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        int i0;
        androidx.compose.ui.text.platform.SynchronizedObject $r1;
        java.util.HashMap $r2;
        java.util.LinkedHashSet $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.compose.ui.text.platform.Synchronization_jvmKt: androidx.compose.ui.text.platform.SynchronizedObject createSynchronizedObject()>();

        r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor> = $r1;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r6 = "maxSize <= 0";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label3:
        r0.<androidx.compose.ui.text.caches.LruCache: int maxSize> = i0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int,float)>(0, 0.75F);

        r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map> = $r2;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet> = $r3;

        return;
    }

    public void resize(int)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        int i0;
        androidx.compose.ui.text.platform.SynchronizedObject r1, r2;
        kotlin.Unit r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, $r6;
        boolean $z1;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r6 = "maxSize <= 0";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label3:
        r1 = r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        r2 = r1;

        entermonitor r2;

        r0.<androidx.compose.ui.text.caches.LruCache: int maxSize> = i0;

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        exitmonitor r2;

        goto label4;

     label4:
        virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: void trimToSize(int)>(i0);

        return;
    }

    public final java.lang.Object get(java.lang.Object)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        java.lang.Object r1, r13, r14, r16, r18;
        java.util.HashMap $r2, $r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.util.LinkedHashSet $r4, $r5, $r7, $r8;
        java.lang.Throwable $r9, $r10, r15, r20;
        androidx.compose.ui.text.platform.SynchronizedObject r11, $r17;
        kotlin.Unit r19;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 := @parameter0: java.lang.Object;

        r11 = r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        entermonitor r11;

     label01:
        $r2 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        r13 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r13 == null goto label03;

        $r7 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        virtualinvoke $r7.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r1);

        $r8 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        virtualinvoke $r8.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r1);

        $i7 = r0.<androidx.compose.ui.text.caches.LruCache: int hitCount>;

        $i6 = $i7 + 1;

        r0.<androidx.compose.ui.text.caches.LruCache: int hitCount> = $i6;

        r14 = r13;

     label02:
        exitmonitor r11;

        return r14;

     label03:
        $i8 = r0.<androidx.compose.ui.text.caches.LruCache: int missCount>;

        $i0 = $i8 + 1;

        r0.<androidx.compose.ui.text.caches.LruCache: int missCount> = $i0;

     label04:
        exitmonitor r11;

        goto label07;

     label05:
        $r10 := @caughtexception;

        r15 = $r10;

     label06:
        exitmonitor r11;

        throw r15;

     label07:
        r16 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: java.lang.Object create(java.lang.Object)>(r1);

        if r16 != null goto label08;

        return null;

     label08:
        $r17 = r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        entermonitor $r17;

     label09:
        i9 = r0.<androidx.compose.ui.text.caches.LruCache: int createCount>;

        $i1 = i9 + 1;

        r0.<androidx.compose.ui.text.caches.LruCache: int createCount> = $i1;

        $r3 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        r18 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r16);

        $r4 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        virtualinvoke $r4.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        virtualinvoke $r5.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r1);

        if r18 == null goto label10;

        $r6 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r18);

        r13 = r18;

        goto label11;

     label10:
        $i2 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int size()>();

        $i3 = specialinvoke r0.<androidx.compose.ui.text.caches.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r16);

        $i4 = $i2 + $i3;

        r0.<androidx.compose.ui.text.caches.LruCache: int size> = $i4;

     label11:
        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label12:
        exitmonitor $r17;

        goto label15;

     label13:
        $r9 := @caughtexception;

        r20 = $r9;

     label14:
        exitmonitor $r17;

        throw r20;

     label15:
        if r13 == null goto label16;

        virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r16, r13);

        return r13;

     label16:
        $i5 = r0.<androidx.compose.ui.text.caches.LruCache: int maxSize>;

        virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: void trimToSize(int)>($i5);

        return r16;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public final java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        java.lang.Object r1, r2, r11;
        androidx.compose.ui.text.platform.SynchronizedObject r3, r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.NullPointerException $r5;
        java.util.HashMap $r6;
        java.util.LinkedHashSet $r7, $r8, $r9;
        boolean $z0;
        java.lang.Throwable $r10, r12;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label02:
        r3 = r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        r4 = r3;

        entermonitor r4;

     label03:
        i0 = r0.<androidx.compose.ui.text.caches.LruCache: int putCount>;

        $i1 = i0 + 1;

        r0.<androidx.compose.ui.text.caches.LruCache: int putCount> = $i1;

        $i2 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int size()>();

        $i3 = specialinvoke r0.<androidx.compose.ui.text.caches.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        $i4 = $i2 + $i3;

        r0.<androidx.compose.ui.text.caches.LruCache: int size> = $i4;

        $r6 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        r11 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        if r11 == null goto label04;

        $i6 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int size()>();

        $i7 = specialinvoke r0.<androidx.compose.ui.text.caches.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r11);

        $i8 = $i6 - $i7;

        r0.<androidx.compose.ui.text.caches.LruCache: int size> = $i8;

     label04:
        $r7 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        $z0 = virtualinvoke $r7.<java.util.LinkedHashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label05;

        $r9 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        virtualinvoke $r9.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r1);

     label05:
        $r8 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        virtualinvoke $r8.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r1);

     label06:
        exitmonitor r4;

        goto label09;

     label07:
        $r10 := @caughtexception;

        r12 = $r10;

     label08:
        exitmonitor r4;

        throw r12;

     label09:
        if r11 == null goto label10;

        virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r11, r2);

     label10:
        $i5 = r0.<androidx.compose.ui.text.caches.LruCache: int maxSize>;

        virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: void trimToSize(int)>($i5);

        return r11;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void trimToSize(int)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        androidx.compose.ui.text.platform.SynchronizedObject r1, r2;
        java.util.HashMap $r3, $r4, $r8, $r11, $r14;
        boolean $z2, $z3, $z4, $z5;
        java.util.LinkedHashSet $r5, $r9, $r17;
        java.lang.Iterable $r10;
        java.util.Map $r12, $r15, r24;
        java.lang.Object $r13, r21, r22, r25, r27;
        java.util.Collection $r18, r26;
        java.lang.IllegalStateException $r19, $r23;
        java.lang.Throwable $r20, r29;
        kotlin.Unit r28;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        i0 := @parameter0: int;

     label01:
        r21 = null;

        r22 = null;

        r1 = r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        r2 = r1;

        entermonitor r2;

     label02:
        $i1 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int size()>();

        if $i1 < 0 goto label04;

        $r3 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        $z2 = virtualinvoke $r3.<java.util.HashMap: boolean isEmpty()>();

        if $z2 == 0 goto label03;

        $i7 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int size()>();

        if $i7 != 0 goto label04;

     label03:
        $r4 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        $z3 = virtualinvoke $r4.<java.util.HashMap: boolean isEmpty()>();

        $r5 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        $z4 = virtualinvoke $r5.<java.util.LinkedHashSet: boolean isEmpty()>();

        if $z3 == $z4 goto label05;

     label04:
        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("map/keySet size inconsistency");

        throw $r23;

     label05:
        $i2 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int size()>();

        if $i2 <= i0 goto label07;

        $r8 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        $z5 = virtualinvoke $r8.<java.util.HashMap: boolean isEmpty()>();

        if $z5 != 0 goto label07;

        $r9 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        $r10 = (java.lang.Iterable) $r9;

        r21 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.lang.Iterable)>($r10);

        $r11 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        $r12 = (java.util.Map) $r11;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r21);

        if $r13 != null goto label06;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("inconsistent state");

        throw $r19;

     label06:
        r22 = $r13;

        $r14 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        r24 = (java.util.Map) $r14;

        r25 = r21;

        $r15 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)>(r24);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r25);

        $r17 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        r26 = (java.util.Collection) $r17;

        r27 = r21;

        $r18 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)>(r26);

        interfaceinvoke $r18.<java.util.Collection: boolean remove(java.lang.Object)>(r27);

        $i3 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int size()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r21);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r22);

        $i4 = specialinvoke r0.<androidx.compose.ui.text.caches.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r21, r22);

        $i5 = $i3 - $i4;

        r0.<androidx.compose.ui.text.caches.LruCache: int size> = $i5;

        i8 = r0.<androidx.compose.ui.text.caches.LruCache: int evictionCount>;

        $i6 = i8 + 1;

        r0.<androidx.compose.ui.text.caches.LruCache: int evictionCount> = $i6;

     label07:
        r28 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label08:
        exitmonitor r2;

        goto label11;

     label09:
        $r20 := @caughtexception;

        r29 = $r20;

     label10:
        exitmonitor r2;

        throw r29;

     label11:
        if r21 != null goto label12;

        if r22 != null goto label12;

        goto label13;

     label12:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r21);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r22);

        virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(1, r21, r22, null);

        goto label01;

     label13:
        return;

        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public final java.lang.Object remove(java.lang.Object)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        java.lang.Object r1, r8;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        java.util.HashMap $r4;
        java.util.LinkedHashSet $r5;
        int $i0, $i1, $i2;
        java.lang.NullPointerException $r6;
        java.lang.Throwable $r7, r10;
        kotlin.Unit r9;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>()>();

        throw $r6;

     label1:
        r2 = r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        r3 = r2;

        entermonitor r3;

     label2:
        $r4 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        r8 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r5 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        virtualinvoke $r5.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r1);

        if r8 == null goto label3;

        $i0 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int size()>();

        $i1 = specialinvoke r0.<androidx.compose.ui.text.caches.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r8);

        $i2 = $i0 - $i1;

        r0.<androidx.compose.ui.text.caches.LruCache: int size> = $i2;

     label3:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        exitmonitor r3;

        goto label7;

     label5:
        $r7 := @caughtexception;

        r10 = $r7;

     label6:
        exitmonitor r3;

        throw r10;

     label7:
        if r8 == null goto label8;

        virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r8, null);

     label8:
        return r8;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        boolean z0;
        java.lang.Object r1, r2, r3;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        return;
    }

    protected java.lang.Object create(java.lang.Object)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    private final int safeSizeOf(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        java.lang.Object r1, r2;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9, $r10;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 = virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative size: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label3:
        return i0;
    }

    protected int sizeOf(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        java.lang.Object r1, r2;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return 1;
    }

    public final void evictAll()
    {
        androidx.compose.ui.text.caches.LruCache r0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        virtualinvoke r0.<androidx.compose.ui.text.caches.LruCache: void trimToSize(int)>(-1);

        return;
    }

    public final int maxSize()
    {
        androidx.compose.ui.text.caches.LruCache r0, r1;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        int $i0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0;

        r2 = staticinvoke <androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)>(r1);

        r3 = r2;

        entermonitor r3;

        $i0 = r0.<androidx.compose.ui.text.caches.LruCache: int maxSize>;

        exitmonitor r3;

        goto label1;

     label1:
        return $i0;
    }

    public final int hitCount()
    {
        androidx.compose.ui.text.caches.LruCache r0, r1;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        int $i0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0;

        r2 = staticinvoke <androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)>(r1);

        r3 = r2;

        entermonitor r3;

        $i0 = r0.<androidx.compose.ui.text.caches.LruCache: int hitCount>;

        exitmonitor r3;

        goto label1;

     label1:
        return $i0;
    }

    public final int missCount()
    {
        androidx.compose.ui.text.caches.LruCache r0, r1;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        int $i0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0;

        r2 = staticinvoke <androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)>(r1);

        r3 = r2;

        entermonitor r3;

        $i0 = r0.<androidx.compose.ui.text.caches.LruCache: int missCount>;

        exitmonitor r3;

        goto label1;

     label1:
        return $i0;
    }

    public final int createCount()
    {
        androidx.compose.ui.text.caches.LruCache r0, r1;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        int $i0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0;

        r2 = staticinvoke <androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)>(r1);

        r3 = r2;

        entermonitor r3;

        $i0 = r0.<androidx.compose.ui.text.caches.LruCache: int createCount>;

        exitmonitor r3;

        goto label1;

     label1:
        return $i0;
    }

    public final int putCount()
    {
        androidx.compose.ui.text.caches.LruCache r0, r1;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        int $i0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0;

        r2 = staticinvoke <androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)>(r1);

        r3 = r2;

        entermonitor r3;

        $i0 = r0.<androidx.compose.ui.text.caches.LruCache: int putCount>;

        exitmonitor r3;

        goto label1;

     label1:
        return $i0;
    }

    public final int evictionCount()
    {
        androidx.compose.ui.text.caches.LruCache r0, r1;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        int $i0;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0;

        r2 = staticinvoke <androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)>(r1);

        r3 = r2;

        entermonitor r3;

        $i0 = r0.<androidx.compose.ui.text.caches.LruCache: int evictionCount>;

        exitmonitor r3;

        goto label1;

     label1:
        return $i0;
    }

    public final java.util.Map snapshot()
    {
        androidx.compose.ui.text.caches.LruCache r0;
        androidx.compose.ui.text.platform.SynchronizedObject r1, r2;
        java.util.LinkedHashMap r3, $r7;
        java.util.Iterator r4;
        java.lang.Object r5, $r10;
        java.util.Map r6;
        java.util.LinkedHashSet $r8;
        boolean $z1;
        java.util.HashMap $r9;
        java.lang.Throwable $r12;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        r2 = r1;

        entermonitor r2;

     label1:
        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r3 = $r7;

        $r8 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.LinkedHashSet keySet>;

        r4 = virtualinvoke $r8.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r9 = r0.<androidx.compose.ui.text.caches.LruCache: java.util.HashMap map>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r10);

        virtualinvoke r3.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r10);

        goto label2;

     label3:
        r6 = (java.util.Map) r3;

     label4:
        exitmonitor r2;

        return r6;

     label5:
        $r12 := @caughtexception;

     label6:
        exitmonitor r2;

        throw $r12;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.text.caches.LruCache r0;
        androidx.compose.ui.text.platform.SynchronizedObject r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.Throwable $r14;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 = r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        r2 = r1;

        entermonitor r2;

     label1:
        $i3 = r0.<androidx.compose.ui.text.caches.LruCache: int hitCount>;

        $i2 = r0.<androidx.compose.ui.text.caches.LruCache: int missCount>;

        i0 = $i3 + $i2;

        if i0 == 0 goto label2;

        $i7 = r0.<androidx.compose.ui.text.caches.LruCache: int hitCount>;

        $i8 = 100 * $i7;

        $i9 = $i8 / i0;

        goto label3;

     label2:
        $i9 = 0;

     label3:
        i1 = $i9;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LruCache[maxSize=");

        $i4 = r0.<androidx.compose.ui.text.caches.LruCache: int maxSize>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",hits=");

        $i5 = r0.<androidx.compose.ui.text.caches.LruCache: int hitCount>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",misses=");

        $i6 = r0.<androidx.compose.ui.text.caches.LruCache: int missCount>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",hitRate=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%]");

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        exitmonitor r2;

        return r3;

     label5:
        $r14 := @caughtexception;

     label6:
        exitmonitor r2;

        throw $r14;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final java.lang.Object synchronizedValue$ui_text_release(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.text.caches.LruCache r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.ui.text.platform.SynchronizedObject r2, r3;
        java.lang.Throwable $r4, r6;
        java.lang.Object r5;

        r0 := @this: androidx.compose.ui.text.caches.LruCache;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r2 = staticinvoke <androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)>(r0);

        r3 = r2;

        entermonitor r3;

     label1:
        r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label5;

     label3:
        $r4 := @caughtexception;

        r6 = $r4;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r6;

     label5:
        return r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final androidx.compose.ui.text.platform.SynchronizedObject access$getMonitor$p(androidx.compose.ui.text.caches.LruCache)
    {
        androidx.compose.ui.text.caches.LruCache $r0;
        androidx.compose.ui.text.platform.SynchronizedObject $r1;

        $r0 := @parameter0: androidx.compose.ui.text.caches.LruCache;

        $r1 = $r0.<androidx.compose.ui.text.caches.LruCache: androidx.compose.ui.text.platform.SynchronizedObject monitor>;

        return $r1;
    }

