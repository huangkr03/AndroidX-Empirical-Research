io.opencensus.internal.Utils
    public static void checkArgument(boolean, java.lang.Object)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static transient void checkArgument(boolean, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Object[];

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <io.opencensus.internal.Utils: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r0);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.Object)
    {
        java.lang.String $r0;
        java.lang.Object $r1, $r2;
        java.lang.NullPointerException $r3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r3 = new java.lang.NullPointerException;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r0);

        throw $r3;
    }

    public static void checkState(boolean, java.lang.Object)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static boolean equalsObjects(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        if $r1 != null goto label2;

        if $r0 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    private static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

        if $r0 != null goto label1;

        return $r2;

     label1:
        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = lengthof $r0;

        $i1 = $i1 * 16;

        $i0 = $i0 + $i1;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 0;

        $i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if $i0 >= $i2 goto label4;

        $i3 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String,int)>("%s", $i1);

        if $i3 != -1 goto label3;

        goto label4;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r2, $i1, $i3);

        $r3 = $r0[$i0];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $i1 = $i3 + 2;

        $i0 = $i0 + 1;

        goto label2;

     label4:
        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r2, $i1, $i2);

        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label7;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $i1 = $i0 + 1;

        $r3 = $r0[$i0];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

     label5:
        $i0 = lengthof $r0;

        if $i1 >= $i0 goto label6;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = $r0[$i1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label5;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

     label7:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

