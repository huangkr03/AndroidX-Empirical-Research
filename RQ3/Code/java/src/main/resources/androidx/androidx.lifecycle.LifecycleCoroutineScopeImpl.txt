androidx.lifecycle.LifecycleCoroutineScopeImpl
<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle lifecycle>
<androidx.lifecycle.LifecycleCoroutineScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext>
    public void <init>(androidx.lifecycle.Lifecycle, kotlin.coroutines.CoroutineContext)
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;
        androidx.lifecycle.Lifecycle r1, $r3;
        kotlin.coroutines.CoroutineContext r2, $r6;
        androidx.lifecycle.Lifecycle$State $r4, $r5;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        r1 := @parameter0: androidx.lifecycle.Lifecycle;

        r2 := @parameter1: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "lifecycle");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "coroutineContext");

        specialinvoke r0.<androidx.lifecycle.LifecycleCoroutineScope: void <init>()>();

        r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle lifecycle> = r1;

        r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext> = r2;

        $r3 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common()>();

        $r4 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r4 != $r5 goto label1;

        $r6 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        staticinvoke <kotlinx.coroutines.JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)>($r6, null, 1, null);

     label1:
        return;
    }

    public androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common()
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;
        androidx.lifecycle.Lifecycle $r1;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        $r1 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle lifecycle>;

        return $r1;
    }

    public kotlin.coroutines.CoroutineContext getCoroutineContext()
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;
        kotlin.coroutines.CoroutineContext $r1;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        $r1 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext>;

        return $r1;
    }

    public final void register()
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2, $r3;
        androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 $r4;
        kotlin.coroutines.CoroutineContext $r5;
        kotlin.jvm.functions.Function2 $r6;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        $r1 = (kotlinx.coroutines.CoroutineScope) r0;

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r3 = virtualinvoke $r2.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r5 = (kotlin.coroutines.CoroutineContext) $r3;

        $r4 = new androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1;

        specialinvoke $r4.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: void <init>(androidx.lifecycle.LifecycleCoroutineScopeImpl,kotlin.coroutines.Continuation)>(r0, null);

        $r6 = (kotlin.jvm.functions.Function2) $r4;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r1, $r5, null, $r6, 2, null);

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2;
        androidx.lifecycle.Lifecycle $r3, $r7;
        androidx.lifecycle.Lifecycle$State $r4, $r5;
        java.lang.Enum $r6;
        int $i0;
        androidx.lifecycle.LifecycleObserver $r8;
        kotlin.coroutines.CoroutineContext $r9;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "event");

        $r3 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common()>();

        $r4 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        $r6 = (java.lang.Enum) $r5;

        $i0 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r6);

        if $i0 > 0 goto label1;

        $r7 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common()>();

        $r8 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke $r7.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r8);

        $r9 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        staticinvoke <kotlinx.coroutines.JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)>($r9, null, 1, null);

     label1:
        return;
    }

androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1
<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: int label>
<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object L$0>
<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: androidx.lifecycle.LifecycleCoroutineScopeImpl this$0>
    void <init>(androidx.lifecycle.LifecycleCoroutineScopeImpl, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 r0;
        androidx.lifecycle.LifecycleCoroutineScopeImpl $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1;

        $r1 := @parameter0: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: androidx.lifecycle.LifecycleCoroutineScopeImpl this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 r0;
        java.lang.Object $r1, $r4;
        kotlinx.coroutines.CoroutineScope $r2;
        int $i0, $i1;
        androidx.lifecycle.LifecycleCoroutineScopeImpl $r5, $r12, $r14;
        androidx.lifecycle.Lifecycle $r6, $r13;
        androidx.lifecycle.Lifecycle$State $r7, $r8;
        java.lang.Enum $r9;
        kotlin.coroutines.CoroutineContext $r10;
        kotlin.Unit $r11;
        androidx.lifecycle.LifecycleObserver $r15;
        java.lang.IllegalStateException $r16;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object L$0>;

        $r2 = (kotlinx.coroutines.CoroutineScope) $r4;

        $r5 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: androidx.lifecycle.LifecycleCoroutineScopeImpl this$0>;

        $r6 = virtualinvoke $r5.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common()>();

        $r7 = virtualinvoke $r6.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r8 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED>;

        $r9 = (java.lang.Enum) $r8;

        $i1 = virtualinvoke $r7.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r9);

        if $i1 < 0 goto label2;

        $r12 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: androidx.lifecycle.LifecycleCoroutineScopeImpl this$0>;

        $r13 = virtualinvoke $r12.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common()>();

        $r14 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: androidx.lifecycle.LifecycleCoroutineScopeImpl this$0>;

        $r15 = (androidx.lifecycle.LifecycleObserver) $r14;

        virtualinvoke $r13.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r15);

        goto label3;

     label2:
        $r10 = interfaceinvoke $r2.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        staticinvoke <kotlinx.coroutines.JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)>($r10, null, 1, null);

     label3:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r11;

     label4:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r16;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.lifecycle.LifecycleCoroutineScopeImpl $r5;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1;

        $r5 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: androidx.lifecycle.LifecycleCoroutineScopeImpl this$0>;

        specialinvoke $r4.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: void <init>(androidx.lifecycle.LifecycleCoroutineScopeImpl,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

