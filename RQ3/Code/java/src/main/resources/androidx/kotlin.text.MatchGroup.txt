kotlin.text.MatchGroup
<kotlin.text.MatchGroup: kotlin.ranges.IntRange range>
<kotlin.text.MatchGroup: java.lang.String value>
    public void <init>(java.lang.String, kotlin.ranges.IntRange)
    {
        kotlin.text.MatchGroup $r0;
        java.lang.String $r1;
        kotlin.ranges.IntRange $r2;

        $r0 := @this: kotlin.text.MatchGroup;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "value");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "range");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.text.MatchGroup: java.lang.String value> = $r1;

        $r0.<kotlin.text.MatchGroup: kotlin.ranges.IntRange range> = $r2;

        return;
    }

    public static kotlin.text.MatchGroup copy$default(kotlin.text.MatchGroup, java.lang.String, kotlin.ranges.IntRange, int, java.lang.Object)
    {
        kotlin.text.MatchGroup $r0;
        java.lang.String $r1;
        kotlin.ranges.IntRange $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: kotlin.text.MatchGroup;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: kotlin.ranges.IntRange;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.Object;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r1 = $r0.<kotlin.text.MatchGroup: java.lang.String value>;

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $r2 = $r0.<kotlin.text.MatchGroup: kotlin.ranges.IntRange range>;

     label2:
        $r0 = virtualinvoke $r0.<kotlin.text.MatchGroup: kotlin.text.MatchGroup copy(java.lang.String,kotlin.ranges.IntRange)>($r1, $r2);

        return $r0;
    }

    public final java.lang.String component1()
    {
        kotlin.text.MatchGroup $r0;
        java.lang.String r1;

        $r0 := @this: kotlin.text.MatchGroup;

        r1 = $r0.<kotlin.text.MatchGroup: java.lang.String value>;

        return r1;
    }

    public final kotlin.ranges.IntRange component2()
    {
        kotlin.text.MatchGroup $r0;
        kotlin.ranges.IntRange r1;

        $r0 := @this: kotlin.text.MatchGroup;

        r1 = $r0.<kotlin.text.MatchGroup: kotlin.ranges.IntRange range>;

        return r1;
    }

    public final kotlin.text.MatchGroup copy(java.lang.String, kotlin.ranges.IntRange)
    {
        kotlin.text.MatchGroup $r0;
        java.lang.String $r1;
        kotlin.ranges.IntRange $r2;

        $r0 := @this: kotlin.text.MatchGroup;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "value");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "range");

        $r0 = new kotlin.text.MatchGroup;

        specialinvoke $r0.<kotlin.text.MatchGroup: void <init>(java.lang.String,kotlin.ranges.IntRange)>($r1, $r2);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.text.MatchGroup $r0, $r3;
        java.lang.String $r1, $r4;
        java.lang.Object $r2;
        boolean $z0;
        kotlin.ranges.IntRange $r5, $r6;

        $r0 := @this: kotlin.text.MatchGroup;

        $r2 := @parameter0: java.lang.Object;

        if $r0 != $r2 goto label1;

        return 1;

     label1:
        $z0 = $r2 instanceof kotlin.text.MatchGroup;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = (kotlin.text.MatchGroup) $r2;

        $r4 = $r0.<kotlin.text.MatchGroup: java.lang.String value>;

        $r1 = $r3.<kotlin.text.MatchGroup: java.lang.String value>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r1);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r5 = $r0.<kotlin.text.MatchGroup: kotlin.ranges.IntRange range>;

        $r6 = $r3.<kotlin.text.MatchGroup: kotlin.ranges.IntRange range>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public final kotlin.ranges.IntRange getRange()
    {
        kotlin.text.MatchGroup $r0;
        kotlin.ranges.IntRange r1;

        $r0 := @this: kotlin.text.MatchGroup;

        r1 = $r0.<kotlin.text.MatchGroup: kotlin.ranges.IntRange range>;

        return r1;
    }

    public final java.lang.String getValue()
    {
        kotlin.text.MatchGroup $r0;
        java.lang.String r1;

        $r0 := @this: kotlin.text.MatchGroup;

        r1 = $r0.<kotlin.text.MatchGroup: java.lang.String value>;

        return r1;
    }

    public int hashCode()
    {
        kotlin.text.MatchGroup $r0;
        java.lang.String $r1;
        int $i0, $i1;
        kotlin.ranges.IntRange $r2;

        $r0 := @this: kotlin.text.MatchGroup;

        $r1 = $r0.<kotlin.text.MatchGroup: java.lang.String value>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = $i0 * 31;

        $r2 = $r0.<kotlin.text.MatchGroup: kotlin.ranges.IntRange range>;

        $i1 = virtualinvoke $r2.<kotlin.ranges.IntRange: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        kotlin.text.MatchGroup $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        kotlin.ranges.IntRange $r3;

        $r0 := @this: kotlin.text.MatchGroup;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MatchGroup(value=");

        $r2 = $r0.<kotlin.text.MatchGroup: java.lang.String value>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", range=");

        $r3 = $r0.<kotlin.text.MatchGroup: kotlin.ranges.IntRange range>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

