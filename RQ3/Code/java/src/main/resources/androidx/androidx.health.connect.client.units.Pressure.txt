androidx.health.connect.client.units.Pressure
<androidx.health.connect.client.units.Pressure: androidx.health.connect.client.units.Pressure$Companion Companion>
<androidx.health.connect.client.units.Pressure: double value>
<androidx.health.connect.client.units.Pressure: androidx.health.connect.client.units.Pressure ZERO>
    private void <init>(double)
    {
        androidx.health.connect.client.units.Pressure r0;
        double d0;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.units.Pressure: double value> = d0;

        return;
    }

    public final double getMillimetersOfMercury()
    {
        androidx.health.connect.client.units.Pressure r0;
        double $d0;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        $d0 = r0.<androidx.health.connect.client.units.Pressure: double value>;

        return $d0;
    }

    public final androidx.health.connect.client.units.Pressure zero$health_connect_client_release()
    {
        androidx.health.connect.client.units.Pressure r0, $r1;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        $r1 = <androidx.health.connect.client.units.Pressure: androidx.health.connect.client.units.Pressure ZERO>;

        return $r1;
    }

    public int compareTo(androidx.health.connect.client.units.Pressure)
    {
        androidx.health.connect.client.units.Pressure r0, r1;
        double $d0, $d1;
        int $i0;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        r1 := @parameter0: androidx.health.connect.client.units.Pressure;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $d1 = r0.<androidx.health.connect.client.units.Pressure: double value>;

        $d0 = r1.<androidx.health.connect.client.units.Pressure: double value>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.units.Pressure r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        double $d0, $d1;
        byte $b0;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.connect.client.units.Pressure;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $d1 = r0.<androidx.health.connect.client.units.Pressure: double value>;

        $r2 = (androidx.health.connect.client.units.Pressure) r1;

        $d0 = $r2.<androidx.health.connect.client.units.Pressure: double value>;

        $b0 = $d1 cmpg $d0;

        if $b0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        if $z1 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.units.Pressure r0;
        double $d0;
        int $i0;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        $d0 = r0.<androidx.health.connect.client.units.Pressure: double value>;

        $i0 = staticinvoke <java.lang.Double: int hashCode(double)>($d0);

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.health.connect.client.units.Pressure r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        double $d0;
        java.lang.String $r4;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $d0 = r0.<androidx.health.connect.client.units.Pressure: double value>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mmHg");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static final androidx.health.connect.client.units.Pressure millimetersOfMercury(double)
    {
        double d0;
        androidx.health.connect.client.units.Pressure$Companion $r0;
        androidx.health.connect.client.units.Pressure $r1;

        d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Pressure: androidx.health.connect.client.units.Pressure$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Pressure$Companion: androidx.health.connect.client.units.Pressure millimetersOfMercury(double)>(d0);

        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.health.connect.client.units.Pressure r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.health.connect.client.units.Pressure) r1;

        $i0 = virtualinvoke r0.<androidx.health.connect.client.units.Pressure: int compareTo(androidx.health.connect.client.units.Pressure)>($r2);

        return $i0;
    }

    public void <init>(double, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.units.Pressure r0;
        double d0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.connect.client.units.Pressure;

        d0 := @parameter0: double;

        $r1 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.units.Pressure: void <init>(double)>(d0);

        return;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.units.Pressure$Companion $r0;
        androidx.health.connect.client.units.Pressure $r1;

        $r0 = new androidx.health.connect.client.units.Pressure$Companion;

        specialinvoke $r0.<androidx.health.connect.client.units.Pressure$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.connect.client.units.Pressure: androidx.health.connect.client.units.Pressure$Companion Companion> = $r0;

        $r1 = new androidx.health.connect.client.units.Pressure;

        specialinvoke $r1.<androidx.health.connect.client.units.Pressure: void <init>(double)>(0.0);

        <androidx.health.connect.client.units.Pressure: androidx.health.connect.client.units.Pressure ZERO> = $r1;

        return;
    }

androidx.health.connect.client.units.Pressure$Companion
    private void <init>()
    {
        androidx.health.connect.client.units.Pressure$Companion r0;

        r0 := @this: androidx.health.connect.client.units.Pressure$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.health.connect.client.units.Pressure millimetersOfMercury(double)
    {
        androidx.health.connect.client.units.Pressure$Companion r0;
        double d0;
        androidx.health.connect.client.units.Pressure $r1;

        r0 := @this: androidx.health.connect.client.units.Pressure$Companion;

        d0 := @parameter0: double;

        $r1 = new androidx.health.connect.client.units.Pressure;

        specialinvoke $r1.<androidx.health.connect.client.units.Pressure: void <init>(double,kotlin.jvm.internal.DefaultConstructorMarker)>(d0, null);

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.units.Pressure$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.connect.client.units.Pressure$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.units.Pressure$Companion: void <init>()>();

        return;
    }

