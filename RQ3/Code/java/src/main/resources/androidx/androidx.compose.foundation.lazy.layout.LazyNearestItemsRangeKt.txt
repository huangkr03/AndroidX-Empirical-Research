androidx.compose.foundation.lazy.layout.LazyNearestItemsRangeKt
    public static final androidx.compose.runtime.State rememberLazyNearestItemsRangeState(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function0, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function0 r0, r1, r2;
        androidx.compose.runtime.Composer $r3, r38;
        int $i0, $i5, $i6, $i7, $i10, i11;
        androidx.compose.runtime.MutableState r4, r6, r8, r30, r32;
        androidx.compose.runtime.snapshots.Snapshot r5, r28, r29;
        java.lang.Object r7, $r9, $r11, $r13, $r20, $r22, r26, $r34, $r37, $r39, $r41;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, z10, z16, z18;
        java.lang.Number $r10, $r12, $r14;
        kotlin.ranges.IntRange $r15;
        androidx.compose.foundation.lazy.layout.LazyNearestItemsRangeKt$rememberLazyNearestItemsRangeState$1$1 $r16;
        kotlin.jvm.functions.Function2 $r17, r40;
        androidx.compose.runtime.State $r18;
        androidx.compose.runtime.Composer$Companion $r19, $r21;
        java.lang.Throwable $r23, $r24, r31, r33;
        androidx.compose.runtime.snapshots.Snapshot$Companion r27;
        java.lang.Object[] $r35;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 := @parameter3: androidx.compose.runtime.Composer;

        $i0 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "firstVisibleItemIndex");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slidingWindowSize");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "extraItemCount");

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(429733345);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r3, "C(rememberLazyNearestItemsRangeState)P(1,2)46@1947L353,58@2328L254,58@2306L276:LazyNearestItemsRange.kt#wow0x6");

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(429733345, $i0, -1, "androidx.compose.foundation.lazy.layout.rememberLazyNearestItemsRangeState (LazyNearestItemsRange.kt:41)");

     label01:
        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1618982084);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r3, "C(remember)P(1,2,3):Composables.kt#9igjgp");

        $z3 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        $z4 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        $z5 = $z3 | $z4;

        $z6 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r2);

        z10 = $z5 | $z6;

        r26 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z10 != 0 goto label02;

        $r21 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r22 = virtualinvoke $r21.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r26 != $r22 goto label13;

     label02:
        r27 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r28 = virtualinvoke r27.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot createNonObservableSnapshot()>();

     label03:
        r29 = r28;

        r5 = virtualinvoke r29.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot makeCurrent()>();

     label04:
        $r9 = interfaceinvoke r0.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r10 = (java.lang.Number) $r9;

        $i5 = virtualinvoke $r10.<java.lang.Number: int intValue()>();

        $r11 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r12 = (java.lang.Number) $r11;

        $i6 = virtualinvoke $r12.<java.lang.Number: int intValue()>();

        $r13 = interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r14 = (java.lang.Number) $r13;

        $i7 = virtualinvoke $r14.<java.lang.Number: int intValue()>();

        $r15 = staticinvoke <androidx.compose.foundation.lazy.layout.LazyNearestItemsRangeKt: kotlin.ranges.IntRange access$calculateNearestItemsRange(int,int,int)>($i5, $i6, $i7);

        r30 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r15, null, 2, null);

     label05:
        virtualinvoke r29.<androidx.compose.runtime.snapshots.Snapshot: void restoreCurrent(androidx.compose.runtime.snapshots.Snapshot)>(r5);

        goto label08;

     label06:
        $r23 := @caughtexception;

        r31 = $r23;

     label07:
        virtualinvoke r29.<androidx.compose.runtime.snapshots.Snapshot: void restoreCurrent(androidx.compose.runtime.snapshots.Snapshot)>(r5);

        throw r31;

     label08:
        r32 = r30;

     label09:
        virtualinvoke r28.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        goto label12;

     label10:
        $r24 := @caughtexception;

        r33 = $r24;

     label11:
        virtualinvoke r28.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        throw r33;

     label12:
        r6 = r32;

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r6);

        $r34 = r6;

        goto label14;

     label13:
        $r34 = r26;

     label14:
        r7 = $r34;

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        r4 = (androidx.compose.runtime.MutableState) r7;

        $r35 = newarray (java.lang.Object)[4];

        $r35[0] = r0;

        $r35[1] = r1;

        $r35[2] = r2;

        $r35[3] = r4;

        r8 = r4;

        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-568225417);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r3, "C(remember)P(1):Composables.kt#9igjgp");

        z16 = 0;

        $i10 = 0;

        i11 = lengthof $r35;

     label15:
        if $i10 >= i11 goto label16;

        $r37 = $r35[$i10];

        $z8 = interfaceinvoke $r3.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>($r37);

        z16 = z16 | $z8;

        $i10 = $i10 + 1;

        goto label15;

     label16:
        r38 = $r3;

        $r39 = interfaceinvoke r38.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        z18 = 0;

        if z16 != 0 goto label17;

        $r19 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r20 = virtualinvoke $r19.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if $r39 != $r20 goto label18;

     label17:
        $r16 = new androidx.compose.foundation.lazy.layout.LazyNearestItemsRangeKt$rememberLazyNearestItemsRangeState$1$1;

        specialinvoke $r16.<androidx.compose.foundation.lazy.layout.LazyNearestItemsRangeKt$rememberLazyNearestItemsRangeState$1$1: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.MutableState,kotlin.coroutines.Continuation)>(r0, r1, r2, r4, null);

        r40 = (kotlin.jvm.functions.Function2) $r16;

        interfaceinvoke r38.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r40);

        $r41 = r40;

        goto label19;

     label18:
        $r41 = $r39;

     label19:
        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r17 = (kotlin.jvm.functions.Function2) $r41;

        staticinvoke <androidx.compose.runtime.EffectsKt: void LaunchedEffect(java.lang.Object,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>(r8, $r17, $r3, 64);

        $z7 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z7 == 0 goto label20;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label20:
        interfaceinvoke $r3.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r18 = (androidx.compose.runtime.State) r4;

        return $r18;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static final kotlin.ranges.IntRange calculateNearestItemsRange(int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8;
        kotlin.ranges.IntRange $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i6 = i0 / i1;

        i3 = i1 * $i6;

        $i7 = i3 - i2;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 0);

        $i8 = i3 + i1;

        i5 = $i8 + i2;

        $r0 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(i4, i5);

        return $r0;
    }

    public static final kotlin.ranges.IntRange access$calculateNearestItemsRange(int, int, int)
    {
        int i0, i1, i2;
        kotlin.ranges.IntRange $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = staticinvoke <androidx.compose.foundation.lazy.layout.LazyNearestItemsRangeKt: kotlin.ranges.IntRange calculateNearestItemsRange(int,int,int)>(i0, i1, i2);

        return $r0;
    }

