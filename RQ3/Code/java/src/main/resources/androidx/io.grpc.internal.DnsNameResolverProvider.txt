io.grpc.internal.DnsNameResolverProvider
    public void <init>()
    {
        io.grpc.internal.DnsNameResolverProvider $r0;

        $r0 := @this: io.grpc.internal.DnsNameResolverProvider;

        specialinvoke $r0.<io.grpc.NameResolverProvider: void <init>()>();

        return;
    }

    public java.lang.String getDefaultScheme()
    {
        io.grpc.internal.DnsNameResolverProvider $r0;

        $r0 := @this: io.grpc.internal.DnsNameResolverProvider;

        return "dns";
    }

    protected boolean isAvailable()
    {
        io.grpc.internal.DnsNameResolverProvider $r0;

        $r0 := @this: io.grpc.internal.DnsNameResolverProvider;

        return 1;
    }

    public volatile io.grpc.NameResolver newNameResolver(java.net.URI, io.grpc.NameResolver$Args)
    {
        io.grpc.internal.DnsNameResolverProvider $r0;
        io.grpc.NameResolver$Args $r1;
        io.grpc.internal.DnsNameResolver $r2;
        java.net.URI $r3;

        $r0 := @this: io.grpc.internal.DnsNameResolverProvider;

        $r3 := @parameter0: java.net.URI;

        $r1 := @parameter1: io.grpc.NameResolver$Args;

        $r2 = virtualinvoke $r0.<io.grpc.internal.DnsNameResolverProvider: io.grpc.internal.DnsNameResolver newNameResolver(java.net.URI,io.grpc.NameResolver$Args)>($r3, $r1);

        return $r2;
    }

    public io.grpc.internal.DnsNameResolver newNameResolver(java.net.URI, io.grpc.NameResolver$Args)
    {
        io.grpc.internal.DnsNameResolverProvider $r0;
        io.grpc.NameResolver$Args $r1;
        io.grpc.internal.SharedResourceHolder$Resource $r2;
        java.net.URI $r3;
        java.lang.String $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;
        io.grpc.internal.DnsNameResolver $r7;
        com.google.common.base.Stopwatch $r8;
        java.lang.Class $r9;
        java.lang.ClassLoader $r10;

        $r0 := @this: io.grpc.internal.DnsNameResolverProvider;

        $r3 := @parameter0: java.net.URI;

        $r1 := @parameter1: io.grpc.NameResolver$Args;

        $r4 = "dns";

        $r5 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r3.<java.net.URI: java.lang.String getPath()>();

        $r6 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r4, "targetPath");

        $r4 = (java.lang.String) $r6;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object)>($z0, "the path component (%s) of the target (%s) must start with \'/\'", $r4, $r3);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(1);

        $r7 = new io.grpc.internal.DnsNameResolver;

        $r5 = virtualinvoke $r3.<java.net.URI: java.lang.String getAuthority()>();

        $r2 = <io.grpc.internal.GrpcUtil: io.grpc.internal.SharedResourceHolder$Resource SHARED_CHANNEL_EXECUTOR>;

        $r8 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createUnstarted()>();

        $r9 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <io.grpc.InternalServiceProviders: boolean isAndroid(java.lang.ClassLoader)>($r10);

        specialinvoke $r7.<io.grpc.internal.DnsNameResolver: void <init>(java.lang.String,java.lang.String,io.grpc.NameResolver$Args,io.grpc.internal.SharedResourceHolder$Resource,com.google.common.base.Stopwatch,boolean)>($r5, $r4, $r1, $r2, $r8, $z0);

        return $r7;

     label1:
        return null;
    }

    public int priority()
    {
        io.grpc.internal.DnsNameResolverProvider $r0;

        $r0 := @this: io.grpc.internal.DnsNameResolverProvider;

        return 5;
    }

