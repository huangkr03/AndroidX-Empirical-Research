androidx.ui.core.TestTagKt
    public static final void TestTag(java.lang.String, kotlin.jvm.functions.Function1, androidx.compose.Composer)
    {
        java.lang.String r0;
        kotlin.jvm.functions.Function1 r1, $r8, r12, r13, r14;
        androidx.compose.Composer $r2;
        java.lang.Integer $r3, r17;
        boolean $z0, $z1, $z3, z4, $z9, $z10, $z11, z12;
        androidx.compose.SlotTable$Companion $r4;
        java.lang.Object $r5, r10;
        androidx.ui.core.TestTagKt$TestTag$1$1 $r6;
        androidx.ui.core.TestTagKt$TestTag$4 $r7;
        androidx.compose.ComposerValidator r18;
        androidx.compose.ScopeUpdateScope r19;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "tag");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "children");

        virtualinvoke $r2.<androidx.compose.Composer: void startRestartGroup(int)>(-802661228);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2008874459);

        virtualinvoke $r2.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r3);

        $z0 = virtualinvoke $r2.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z4 = $z3;

        r10 = virtualinvoke $r2.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r4 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r10 == $r5 goto label3;

        if z4 != 0 goto label4;

     label3:
        $r6 = new androidx.ui.core.TestTagKt$TestTag$1$1;

        specialinvoke $r6.<androidx.ui.core.TestTagKt$TestTag$1$1: void <init>(java.lang.String)>(r0);

        virtualinvoke $r2.<androidx.compose.Composer: void updateValue(java.lang.Object)>($r6);

        r10 = $r6;

     label4:
        r12 = (kotlin.jvm.functions.Function1) r10;

        virtualinvoke $r2.<androidx.compose.Composer: void endExpr()>();

        r13 = r12;

        r14 = r1;

        r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(471533443);

        virtualinvoke $r2.<androidx.compose.Composer: void startGroup(java.lang.Object)>(r17);

        r18 = (androidx.compose.ComposerValidator) $r2;

        $z9 = interfaceinvoke r18.<androidx.compose.ComposerValidator: boolean changed(java.lang.Object)>(r13);

        $z10 = interfaceinvoke r18.<androidx.compose.ComposerValidator: boolean changed(java.lang.Object)>(r14);

        $z11 = $z9 | $z10;

        if $z11 != 0 goto label5;

        $z1 = virtualinvoke $r2.<androidx.compose.Composer: boolean getSkipping()>();

        if $z1 != 0 goto label6;

     label5:
        z12 = 0;

        staticinvoke <androidx.ui.semantics.SemanticsKt: void Semantics$default(boolean,boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,androidx.compose.Composer,int,java.lang.Object)>(0, 0, r13, r14, $r2, 3, null);

        goto label7;

     label6:
        virtualinvoke $r2.<androidx.compose.Composer: void skipToGroupEnd()>();

     label7:
        virtualinvoke $r2.<androidx.compose.Composer: void endGroup()>();

        r19 = virtualinvoke $r2.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if r19 == null goto label8;

        $r7 = new androidx.ui.core.TestTagKt$TestTag$4;

        specialinvoke $r7.<androidx.ui.core.TestTagKt$TestTag$4: void <init>(java.lang.String,kotlin.jvm.functions.Function1)>(r0, r1);

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        interfaceinvoke r19.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function1)>($r8);

     label8:
        return;
    }

