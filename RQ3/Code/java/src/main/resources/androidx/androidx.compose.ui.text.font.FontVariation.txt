androidx.compose.ui.text.font.FontVariation
<androidx.compose.ui.text.font.FontVariation: androidx.compose.ui.text.font.FontVariation INSTANCE>
<androidx.compose.ui.text.font.FontVariation: int $stable>
    private void <init>()
    {
        androidx.compose.ui.text.font.FontVariation r0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.ui.text.font.FontVariation$Setting Setting(java.lang.String, float)
    {
        androidx.compose.ui.text.font.FontVariation r0;
        java.lang.String r1, $r9, $r10;
        float f0;
        int $i0;
        androidx.compose.ui.text.font.FontVariation$SettingFloat $r2;
        androidx.compose.ui.text.font.FontVariation$Setting $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Name must be exactly four characters. Actual: \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label3:
        $r2 = new androidx.compose.ui.text.font.FontVariation$SettingFloat;

        specialinvoke $r2.<androidx.compose.ui.text.font.FontVariation$SettingFloat: void <init>(java.lang.String,float)>(r1, f0);

        $r3 = (androidx.compose.ui.text.font.FontVariation$Setting) $r2;

        return $r3;
    }

    public final androidx.compose.ui.text.font.FontVariation$Setting italic(float)
    {
        androidx.compose.ui.text.font.FontVariation r0;
        float f0;
        byte $b0, $b1;
        androidx.compose.ui.text.font.FontVariation$SettingFloat $r1;
        androidx.compose.ui.text.font.FontVariation$Setting $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        f0 := @parameter0: float;

        $b0 = 0.0F cmpg f0;

        if $b0 > 0 goto label2;

        $b1 = f0 cmpg 1.0F;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'ital\' must be in 0.0f..1.0f. Actual: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        $r1 = new androidx.compose.ui.text.font.FontVariation$SettingFloat;

        specialinvoke $r1.<androidx.compose.ui.text.font.FontVariation$SettingFloat: void <init>(java.lang.String,float)>("ital", f0);

        $r2 = (androidx.compose.ui.text.font.FontVariation$Setting) $r1;

        return $r2;
    }

    public final androidx.compose.ui.text.font.FontVariation$Setting opticalSizing--R2X_6o(long)
    {
        androidx.compose.ui.text.font.FontVariation r0;
        long l0;
        boolean $z0;
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit $r1;
        androidx.compose.ui.text.font.FontVariation$Setting $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r5;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        l0 := @parameter0: long;

        $z0 = staticinvoke <androidx.compose.ui.unit.TextUnit: boolean isSp-impl(long)>(l0);

        if $z0 != 0 goto label1;

        $r5 = "\'opsz\' must be provided in sp units";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $r1 = new androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        specialinvoke $r1.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: void <init>(java.lang.String,long,kotlin.jvm.internal.DefaultConstructorMarker)>("opsz", l0, null);

        $r2 = (androidx.compose.ui.text.font.FontVariation$Setting) $r1;

        return $r2;
    }

    public final androidx.compose.ui.text.font.FontVariation$Setting slant(float)
    {
        androidx.compose.ui.text.font.FontVariation r0;
        float f0;
        byte $b0, $b1;
        androidx.compose.ui.text.font.FontVariation$SettingFloat $r1;
        androidx.compose.ui.text.font.FontVariation$Setting $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        f0 := @parameter0: float;

        $b0 = -90.0F cmpg f0;

        if $b0 > 0 goto label2;

        $b1 = f0 cmpg 90.0F;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'slnt\' must be in -90f..90f. Actual: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        $r1 = new androidx.compose.ui.text.font.FontVariation$SettingFloat;

        specialinvoke $r1.<androidx.compose.ui.text.font.FontVariation$SettingFloat: void <init>(java.lang.String,float)>("slnt", f0);

        $r2 = (androidx.compose.ui.text.font.FontVariation$Setting) $r1;

        return $r2;
    }

    public final androidx.compose.ui.text.font.FontVariation$Setting width(float)
    {
        androidx.compose.ui.text.font.FontVariation r0;
        float f0;
        byte $b0;
        androidx.compose.ui.text.font.FontVariation$SettingFloat $r1;
        androidx.compose.ui.text.font.FontVariation$Setting $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'wdth\' must be strictly > 0.0f. Actual: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $r1 = new androidx.compose.ui.text.font.FontVariation$SettingFloat;

        specialinvoke $r1.<androidx.compose.ui.text.font.FontVariation$SettingFloat: void <init>(java.lang.String,float)>("wdth", f0);

        $r2 = (androidx.compose.ui.text.font.FontVariation$Setting) $r1;

        return $r2;
    }

    public final androidx.compose.ui.text.font.FontVariation$Setting weight(int)
    {
        androidx.compose.ui.text.font.FontVariation r0;
        int i0;
        androidx.compose.ui.text.font.FontVariation$SettingInt $r1;
        androidx.compose.ui.text.font.FontVariation$Setting $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        i0 := @parameter0: int;

        if 1 > i0 goto label2;

        if i0 >= 1001 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'wght\' value must be in [1, 1000]. Actual: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        $r1 = new androidx.compose.ui.text.font.FontVariation$SettingInt;

        specialinvoke $r1.<androidx.compose.ui.text.font.FontVariation$SettingInt: void <init>(java.lang.String,int)>("wght", i0);

        $r2 = (androidx.compose.ui.text.font.FontVariation$Setting) $r1;

        return $r2;
    }

    public final androidx.compose.ui.text.font.FontVariation$Setting grade(int)
    {
        androidx.compose.ui.text.font.FontVariation r0;
        int i0;
        androidx.compose.ui.text.font.FontVariation$SettingInt $r1;
        androidx.compose.ui.text.font.FontVariation$Setting $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        i0 := @parameter0: int;

        if -1000 > i0 goto label2;

        if i0 >= 1001 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        $r5 = "\'GRAD\' must be in -1000..1000";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label4:
        $r1 = new androidx.compose.ui.text.font.FontVariation$SettingInt;

        specialinvoke $r1.<androidx.compose.ui.text.font.FontVariation$SettingInt: void <init>(java.lang.String,int)>("GRAD", i0);

        $r2 = (androidx.compose.ui.text.font.FontVariation$Setting) $r1;

        return $r2;
    }

    public final transient androidx.compose.ui.text.font.FontVariation$Settings Settings-6EWAqTQ(androidx.compose.ui.text.font.FontWeight, int, androidx.compose.ui.text.font.FontVariation$Setting[])
    {
        androidx.compose.ui.text.font.FontVariation r0;
        androidx.compose.ui.text.font.FontWeight r1;
        int i0, $i1, $i2;
        androidx.compose.ui.text.font.FontVariation$Setting[] r2, $r8, $r10;
        kotlin.jvm.internal.SpreadBuilder r3, $r5;
        androidx.compose.ui.text.font.FontVariation$Settings $r4;
        androidx.compose.ui.text.font.FontVariation$Setting $r6, $r7;
        float $f0;
        java.lang.Object[] $r9;

        r0 := @this: androidx.compose.ui.text.font.FontVariation;

        r1 := @parameter0: androidx.compose.ui.text.font.FontWeight;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.compose.ui.text.font.FontVariation$Setting[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "weight");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "settings");

        $r4 = new androidx.compose.ui.text.font.FontVariation$Settings;

        $r5 = new kotlin.jvm.internal.SpreadBuilder;

        specialinvoke $r5.<kotlin.jvm.internal.SpreadBuilder: void <init>(int)>(3);

        r3 = $r5;

        $i1 = virtualinvoke r1.<androidx.compose.ui.text.font.FontWeight: int getWeight()>();

        $r6 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation: androidx.compose.ui.text.font.FontVariation$Setting weight(int)>($i1);

        virtualinvoke r3.<kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)>($r6);

        $f0 = (float) i0;

        $r7 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation: androidx.compose.ui.text.font.FontVariation$Setting italic(float)>($f0);

        virtualinvoke r3.<kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)>($r7);

        virtualinvoke r3.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>(r2);

        $i2 = virtualinvoke r3.<kotlin.jvm.internal.SpreadBuilder: int size()>();

        $r8 = newarray (androidx.compose.ui.text.font.FontVariation$Setting)[$i2];

        $r9 = virtualinvoke r3.<kotlin.jvm.internal.SpreadBuilder: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (androidx.compose.ui.text.font.FontVariation$Setting[]) $r9;

        specialinvoke $r4.<androidx.compose.ui.text.font.FontVariation$Settings: void <init>(androidx.compose.ui.text.font.FontVariation$Setting[])>($r10);

        return $r4;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.font.FontVariation $r0;

        $r0 = new androidx.compose.ui.text.font.FontVariation;

        specialinvoke $r0.<androidx.compose.ui.text.font.FontVariation: void <init>()>();

        <androidx.compose.ui.text.font.FontVariation: androidx.compose.ui.text.font.FontVariation INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.text.font.FontVariation$Setting
<androidx.compose.ui.text.font.FontVariation$Setting: float toVariationValue(androidx.compose.ui.unit.Density)>
<androidx.compose.ui.text.font.FontVariation$Setting: boolean getNeedsDensity()>
<androidx.compose.ui.text.font.FontVariation$Setting: java.lang.String getAxisName()>
androidx.compose.ui.text.font.FontVariation$SettingFloat
<androidx.compose.ui.text.font.FontVariation$SettingFloat: java.lang.String axisName>
<androidx.compose.ui.text.font.FontVariation$SettingFloat: float value>
<androidx.compose.ui.text.font.FontVariation$SettingFloat: boolean needsDensity>
    public void <init>(java.lang.String, float)
    {
        androidx.compose.ui.text.font.FontVariation$SettingFloat r0;
        java.lang.String r1;
        float f0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingFloat;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "axisName");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: java.lang.String axisName> = r1;

        r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: float value> = f0;

        return;
    }

    public java.lang.String getAxisName()
    {
        androidx.compose.ui.text.font.FontVariation$SettingFloat r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingFloat;

        $r1 = r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: java.lang.String axisName>;

        return $r1;
    }

    public final float getValue()
    {
        androidx.compose.ui.text.font.FontVariation$SettingFloat r0;
        float $f0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingFloat;

        $f0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: float value>;

        return $f0;
    }

    public float toVariationValue(androidx.compose.ui.unit.Density)
    {
        androidx.compose.ui.text.font.FontVariation$SettingFloat r0;
        androidx.compose.ui.unit.Density r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingFloat;

        r1 := @parameter0: androidx.compose.ui.unit.Density;

        $f0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: float value>;

        return $f0;
    }

    public boolean getNeedsDensity()
    {
        androidx.compose.ui.text.font.FontVariation$SettingFloat r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingFloat;

        $z0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: boolean needsDensity>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontVariation$SettingFloat r0, $r3, $r5;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r4;
        float $f0, $f1;
        byte $b0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingFloat;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.ui.text.font.FontVariation$SettingFloat;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: java.lang.String getAxisName()>();

        $r3 = (androidx.compose.ui.text.font.FontVariation$SettingFloat) r1;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontVariation$SettingFloat: java.lang.String getAxisName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $f1 = r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: float value>;

        $r5 = (androidx.compose.ui.text.font.FontVariation$SettingFloat) r1;

        $f0 = $r5.<androidx.compose.ui.text.font.FontVariation$SettingFloat: float value>;

        $b0 = $f1 cmpg $f0;

        if $b0 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        androidx.compose.ui.text.font.FontVariation$SettingFloat r0;
        java.lang.String $r1;
        float $f0;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingFloat;

        $r1 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: java.lang.String getAxisName()>();

        i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = 31 * i2;

        $f0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: float value>;

        $i1 = staticinvoke <java.lang.Float: int hashCode(float)>($f0);

        i3 = $i0 + $i1;

        return i3;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.text.font.FontVariation$SettingFloat r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        java.lang.String $r3, $r8;
        float $f0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingFloat;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FontVariation.Setting(axisName=\'");

        $r3 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: java.lang.String getAxisName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', value=");

        $f0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingFloat: float value>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

androidx.compose.ui.text.font.FontVariation$SettingInt
<androidx.compose.ui.text.font.FontVariation$SettingInt: java.lang.String axisName>
<androidx.compose.ui.text.font.FontVariation$SettingInt: int value>
<androidx.compose.ui.text.font.FontVariation$SettingInt: boolean needsDensity>
    public void <init>(java.lang.String, int)
    {
        androidx.compose.ui.text.font.FontVariation$SettingInt r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingInt;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "axisName");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: java.lang.String axisName> = r1;

        r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: int value> = i0;

        return;
    }

    public java.lang.String getAxisName()
    {
        androidx.compose.ui.text.font.FontVariation$SettingInt r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingInt;

        $r1 = r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: java.lang.String axisName>;

        return $r1;
    }

    public final int getValue()
    {
        androidx.compose.ui.text.font.FontVariation$SettingInt r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingInt;

        $i0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: int value>;

        return $i0;
    }

    public float toVariationValue(androidx.compose.ui.unit.Density)
    {
        androidx.compose.ui.text.font.FontVariation$SettingInt r0;
        androidx.compose.ui.unit.Density r1;
        int $i0;
        float $f0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingInt;

        r1 := @parameter0: androidx.compose.ui.unit.Density;

        $i0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: int value>;

        $f0 = (float) $i0;

        return $f0;
    }

    public boolean getNeedsDensity()
    {
        androidx.compose.ui.text.font.FontVariation$SettingInt r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingInt;

        $z0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: boolean needsDensity>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontVariation$SettingInt r0, $r3, $r5;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r4;
        int $i0, $i1;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingInt;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.ui.text.font.FontVariation$SettingInt;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: java.lang.String getAxisName()>();

        $r3 = (androidx.compose.ui.text.font.FontVariation$SettingInt) r1;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontVariation$SettingInt: java.lang.String getAxisName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $i1 = r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: int value>;

        $r5 = (androidx.compose.ui.text.font.FontVariation$SettingInt) r1;

        $i0 = $r5.<androidx.compose.ui.text.font.FontVariation$SettingInt: int value>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        androidx.compose.ui.text.font.FontVariation$SettingInt r0;
        java.lang.String $r1;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingInt;

        $r1 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: java.lang.String getAxisName()>();

        i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = 31 * i2;

        $i0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: int value>;

        i3 = $i1 + $i0;

        return i3;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.text.font.FontVariation$SettingInt r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        java.lang.String $r3, $r8;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingInt;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FontVariation.Setting(axisName=\'");

        $r3 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: java.lang.String getAxisName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', value=");

        $i0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingInt: int value>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

androidx.compose.ui.text.font.FontVariation$Settings
<androidx.compose.ui.text.font.FontVariation$Settings: java.util.List settings>
<androidx.compose.ui.text.font.FontVariation$Settings: boolean needsDensity>
    public transient void <init>(androidx.compose.ui.text.font.FontVariation$Setting[])
    {
        androidx.compose.ui.text.font.FontVariation$Settings r0, r25, r35, r44;
        androidx.compose.ui.text.font.FontVariation$Setting[] r1;
        java.lang.Object r2, $r10, $r11, $r12, $r33, r46, r47;
        boolean z1, $z2, $z3, z12, $z13, z16, z17, z18, $z19;
        java.util.Collection r3, r36;
        java.util.LinkedHashMap $r4;
        java.util.ArrayList $r5, $r8, $r23;
        java.util.Set $r6;
        java.util.List $r7, $r9, $r32, r34, r41, $r45;
        int $i0, i1, i2, $i3, i4;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r19, $r20;
        java.lang.Iterable $r17, r43;
        java.lang.String $r18, $r22, r30, $r40, $r42;
        java.lang.IllegalArgumentException $r21;
        java.util.Map r27;
        androidx.compose.ui.text.font.FontVariation$Setting r28, r29, $r48;
        java.util.Iterator r37;
        java.util.Map$Entry r38, r39;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$Settings;

        r1 := @parameter0: androidx.compose.ui.text.font.FontVariation$Setting[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "settings");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r25 = r0;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r27 = (java.util.Map) $r4;

        i1 = 0;

        i2 = lengthof r1;

     label01:
        if i1 >= i2 goto label04;

        r28 = r1[i1];

        r29 = r28;

        r30 = interfaceinvoke r29.<androidx.compose.ui.text.font.FontVariation$Setting: java.lang.String getAxisName()>();

        r2 = interfaceinvoke r27.<java.util.Map: java.lang.Object get(java.lang.Object)>(r30);

        if r2 != null goto label02;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $r32 = (java.util.List) $r23;

        interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r30, $r32);

        $r33 = $r32;

        goto label03;

     label02:
        $r33 = r2;

     label03:
        r34 = (java.util.List) $r33;

        interfaceinvoke r34.<java.util.List: boolean add(java.lang.Object)>(r28);

        i1 = i1 + 1;

        goto label01;

     label04:
        r35 = r25;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r36 = (java.util.Collection) $r5;

        $r6 = interfaceinvoke r27.<java.util.Map: java.util.Set entrySet()>();

        r37 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r10 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.util.Map$Entry) $r10;

        r39 = r38;

        z12 = 0;

        $r11 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r40 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>();

        r41 = (java.util.List) $r12;

        $i0 = interfaceinvoke r41.<java.util.List: int size()>();

        if $i0 != 1 goto label06;

        $z13 = 1;

        goto label07;

     label06:
        $z13 = 0;

     label07:
        if $z13 != 0 goto label08;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' must be unique. Actual [ [");

        $r17 = (java.lang.Iterable) r41;

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r17, null, null, null, 0, null, null, 63, null);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r42 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke $r42.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label08:
        r43 = (java.lang.Iterable) r41;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r36, r43);

        goto label05;

     label09:
        $r7 = (java.util.List) r36;

        r3 = (java.util.Collection) $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        $r9 = (java.util.List) $r8;

        r35.<androidx.compose.ui.text.font.FontVariation$Settings: java.util.List settings> = $r9;

        r44 = r0;

        $r45 = r0.<androidx.compose.ui.text.font.FontVariation$Settings: java.util.List settings>;

        z16 = 0;

        $i3 = 0;

        i4 = interfaceinvoke $r45.<java.util.List: int size()>();

     label10:
        if $i3 >= i4 goto label12;

        r46 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>($i3);

        r47 = r46;

        z17 = 0;

        $r48 = (androidx.compose.ui.text.font.FontVariation$Setting) r47;

        z18 = 0;

        $z3 = interfaceinvoke $r48.<androidx.compose.ui.text.font.FontVariation$Setting: boolean getNeedsDensity()>();

        if $z3 == 0 goto label11;

        $z19 = 1;

        goto label13;

     label11:
        $i3 = $i3 + 1;

        goto label10;

     label12:
        $z19 = 0;

     label13:
        z1 = $z19;

        r44.<androidx.compose.ui.text.font.FontVariation$Settings: boolean needsDensity> = z1;

        return;
    }

    public final java.util.List getSettings()
    {
        androidx.compose.ui.text.font.FontVariation$Settings r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$Settings;

        $r1 = r0.<androidx.compose.ui.text.font.FontVariation$Settings: java.util.List settings>;

        return $r1;
    }

    public final boolean getNeedsDensity$ui_text_release()
    {
        androidx.compose.ui.text.font.FontVariation$Settings r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$Settings;

        $z0 = r0.<androidx.compose.ui.text.font.FontVariation$Settings: boolean needsDensity>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontVariation$Settings r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.List $r3, $r4;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$Settings;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.ui.text.font.FontVariation$Settings;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<androidx.compose.ui.text.font.FontVariation$Settings: java.util.List settings>;

        $r2 = (androidx.compose.ui.text.font.FontVariation$Settings) r1;

        $r3 = $r2.<androidx.compose.ui.text.font.FontVariation$Settings: java.util.List settings>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        androidx.compose.ui.text.font.FontVariation$Settings r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$Settings;

        $r1 = r0.<androidx.compose.ui.text.font.FontVariation$Settings: java.util.List settings>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

androidx.compose.ui.text.font.FontVariation$SettingTextUnit
<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: java.lang.String axisName>
<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: long value>
<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: boolean needsDensity>
    private void <init>(java.lang.String, long)
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0;
        java.lang.String r1;
        long l0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: java.lang.String axisName> = r1;

        r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: long value> = l0;

        r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: boolean needsDensity> = 1;

        return;
    }

    public java.lang.String getAxisName()
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        $r1 = r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: java.lang.String axisName>;

        return $r1;
    }

    public final long getValue-XSAIIZE()
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0;
        long $l0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        $l0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: long value>;

        return $l0;
    }

    public float toVariationValue(androidx.compose.ui.unit.Density)
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0;
        androidx.compose.ui.unit.Density r1;
        long $l0;
        float $f0, $f1, $f2;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        r1 := @parameter0: androidx.compose.ui.unit.Density;

        if r1 != null goto label1;

        $r4 = "density must not be null";

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $l0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: long value>;

        $f0 = staticinvoke <androidx.compose.ui.unit.TextUnit: float getValue-impl(long)>($l0);

        $f1 = interfaceinvoke r1.<androidx.compose.ui.unit.Density: float getFontScale()>();

        $f2 = $f0 * $f1;

        return $f2;
    }

    public boolean getNeedsDensity()
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        $z0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: boolean needsDensity>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0, $r3, $r5;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r4;
        long $l0, $l1;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: java.lang.String getAxisName()>();

        $r3 = (androidx.compose.ui.text.font.FontVariation$SettingTextUnit) r1;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: java.lang.String getAxisName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $l1 = r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: long value>;

        $r5 = (androidx.compose.ui.text.font.FontVariation$SettingTextUnit) r1;

        $l0 = $r5.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: long value>;

        $z2 = staticinvoke <androidx.compose.ui.unit.TextUnit: boolean equals-impl0(long,long)>($l1, $l0);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0;
        java.lang.String $r1;
        long $l0;
        int $i1, $i2, i3, i4;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        $r1 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: java.lang.String getAxisName()>();

        i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = 31 * i3;

        $l0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: long value>;

        $i2 = staticinvoke <androidx.compose.ui.unit.TextUnit: int hashCode-impl(long)>($l0);

        i4 = $i1 + $i2;

        return i4;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r6, $r9;
        long $l0;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FontVariation.Setting(axisName=\'");

        $r3 = virtualinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: java.lang.String getAxisName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', value=");

        $l0 = r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: long value>;

        $r6 = staticinvoke <androidx.compose.ui.unit.TextUnit: java.lang.String toString-impl(long)>($l0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void <init>(java.lang.String, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.font.FontVariation$SettingTextUnit r0;
        java.lang.String r1;
        long l0;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.compose.ui.text.font.FontVariation$SettingTextUnit;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.text.font.FontVariation$SettingTextUnit: void <init>(java.lang.String,long)>(r1, l0);

        return;
    }

