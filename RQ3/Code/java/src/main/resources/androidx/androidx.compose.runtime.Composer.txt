androidx.compose.runtime.Composer
<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>
<androidx.compose.runtime.Composer: androidx.compose.runtime.Applier getApplier()>
    public static void getApplier$annotations()
    {
        return;
    }

<androidx.compose.runtime.Composer: boolean getInserting()>
    public static void getInserting$annotations()
    {
        return;
    }

<androidx.compose.runtime.Composer: boolean getSkipping()>
    public static void getSkipping$annotations()
    {
        return;
    }

<androidx.compose.runtime.Composer: boolean getDefaultsInvalid()>
    public static void getDefaultsInvalid$annotations()
    {
        return;
    }

<androidx.compose.runtime.Composer: androidx.compose.runtime.RecomposeScope getRecomposeScope()>
    public static void getRecomposeScope$annotations()
    {
        return;
    }

<androidx.compose.runtime.Composer: java.lang.Object getRecomposeScopeIdentity()>
    public static void getRecomposeScopeIdentity$annotations()
    {
        return;
    }

<androidx.compose.runtime.Composer: int getCompoundKeyHash()>
    public static void getCompoundKeyHash$annotations()
    {
        return;
    }

<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>
<androidx.compose.runtime.Composer: void endReplaceableGroup()>
<androidx.compose.runtime.Composer: void startMovableGroup(int,java.lang.Object)>
<androidx.compose.runtime.Composer: void endMovableGroup()>
<androidx.compose.runtime.Composer: void startDefaults()>
<androidx.compose.runtime.Composer: void endDefaults()>
<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>
<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>
<androidx.compose.runtime.Composer: void insertMovableContent(androidx.compose.runtime.MovableContent,java.lang.Object)>
<androidx.compose.runtime.Composer: void insertMovableContentReferences(java.util.List)>
<androidx.compose.runtime.Composer: void sourceInformation(java.lang.String)>
<androidx.compose.runtime.Composer: void sourceInformationMarkerStart(int,java.lang.String)>
<androidx.compose.runtime.Composer: void sourceInformationMarkerEnd()>
<androidx.compose.runtime.Composer: void skipToGroupEnd()>
<androidx.compose.runtime.Composer: void deactivateToEndGroup(boolean)>
<androidx.compose.runtime.Composer: void skipCurrentGroup()>
<androidx.compose.runtime.Composer: void startNode()>
<androidx.compose.runtime.Composer: void startReusableNode()>
<androidx.compose.runtime.Composer: void createNode(kotlin.jvm.functions.Function0)>
<androidx.compose.runtime.Composer: void useNode()>
<androidx.compose.runtime.Composer: void endNode()>
<androidx.compose.runtime.Composer: void startReusableGroup(int,java.lang.Object)>
<androidx.compose.runtime.Composer: void endReusableGroup()>
<androidx.compose.runtime.Composer: void disableReusing()>
<androidx.compose.runtime.Composer: void enableReusing()>
<androidx.compose.runtime.Composer: void apply(java.lang.Object,kotlin.jvm.functions.Function2)>
<androidx.compose.runtime.Composer: java.lang.Object joinKey(java.lang.Object,java.lang.Object)>
<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>
<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>
<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>
    public boolean changed(boolean)
    {
        androidx.compose.runtime.Composer r0;
        boolean z0, $z1;

        r0 := @this: androidx.compose.runtime.Composer;

        z0 := @parameter0: boolean;

        $z1 = interfaceinvoke r0.<androidx.compose.runtime.Composer: boolean changed(boolean)>(z0);

        return $z1;
    }

    public boolean changed(char)
    {
        androidx.compose.runtime.Composer r0;
        char c0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.Composer;

        c0 := @parameter0: char;

        $z0 = interfaceinvoke r0.<androidx.compose.runtime.Composer: boolean changed(char)>(c0);

        return $z0;
    }

    public boolean changed(byte)
    {
        androidx.compose.runtime.Composer r0;
        byte b0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.Composer;

        b0 := @parameter0: byte;

        $z0 = interfaceinvoke r0.<androidx.compose.runtime.Composer: boolean changed(byte)>(b0);

        return $z0;
    }

    public boolean changed(short)
    {
        androidx.compose.runtime.Composer r0;
        short s0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.Composer;

        s0 := @parameter0: short;

        $z0 = interfaceinvoke r0.<androidx.compose.runtime.Composer: boolean changed(short)>(s0);

        return $z0;
    }

    public boolean changed(int)
    {
        androidx.compose.runtime.Composer r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.Composer;

        i0 := @parameter0: int;

        $z0 = interfaceinvoke r0.<androidx.compose.runtime.Composer: boolean changed(int)>(i0);

        return $z0;
    }

    public boolean changed(float)
    {
        androidx.compose.runtime.Composer r0;
        float f0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.Composer;

        f0 := @parameter0: float;

        $z0 = interfaceinvoke r0.<androidx.compose.runtime.Composer: boolean changed(float)>(f0);

        return $z0;
    }

    public boolean changed(long)
    {
        androidx.compose.runtime.Composer r0;
        long l0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.Composer;

        l0 := @parameter0: long;

        $z0 = interfaceinvoke r0.<androidx.compose.runtime.Composer: boolean changed(long)>(l0);

        return $z0;
    }

    public boolean changed(double)
    {
        androidx.compose.runtime.Composer r0;
        double d0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.Composer;

        d0 := @parameter0: double;

        $z0 = interfaceinvoke r0.<androidx.compose.runtime.Composer: boolean changed(double)>(d0);

        return $z0;
    }

<androidx.compose.runtime.Composer: void recordUsed(androidx.compose.runtime.RecomposeScope)>
<androidx.compose.runtime.Composer: void recordSideEffect(kotlin.jvm.functions.Function0)>
<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>
<androidx.compose.runtime.Composer: void startProviders(androidx.compose.runtime.ProvidedValue[])>
<androidx.compose.runtime.Composer: void endProviders()>
<androidx.compose.runtime.Composer: androidx.compose.runtime.tooling.CompositionData getCompositionData()>
<androidx.compose.runtime.Composer: void collectParameterInformation()>
<androidx.compose.runtime.Composer: androidx.compose.runtime.CompositionContext buildContext()>
<androidx.compose.runtime.Composer: kotlin.coroutines.CoroutineContext getApplyCoroutineContext()>
    public static void getApplyCoroutineContext$annotations()
    {
        return;
    }

<androidx.compose.runtime.Composer: androidx.compose.runtime.ControlledComposition getComposition()>
    static void <clinit>()
    {
        androidx.compose.runtime.Composer$Companion $r0;

        $r0 = <androidx.compose.runtime.Composer$Companion: androidx.compose.runtime.Composer$Companion $$INSTANCE>;

        <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion> = $r0;

        return;
    }

androidx.compose.runtime.Composer$Companion$Empty$1
    void <init>()
    {
        androidx.compose.runtime.Composer$Companion$Empty$1 r0;

        r0 := @this: androidx.compose.runtime.Composer$Companion$Empty$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String toString()
    {
        androidx.compose.runtime.Composer$Companion$Empty$1 r0;

        r0 := @this: androidx.compose.runtime.Composer$Companion$Empty$1;

        return "Empty";
    }

androidx.compose.runtime.Composer$Companion
<androidx.compose.runtime.Composer$Companion: androidx.compose.runtime.Composer$Companion $$INSTANCE>
<androidx.compose.runtime.Composer$Companion: java.lang.Object Empty>
    private void <init>()
    {
        androidx.compose.runtime.Composer$Companion r0;

        r0 := @this: androidx.compose.runtime.Composer$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object getEmpty()
    {
        androidx.compose.runtime.Composer$Companion r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.Composer$Companion;

        $r1 = <androidx.compose.runtime.Composer$Companion: java.lang.Object Empty>;

        return $r1;
    }

    public final void setTracer(androidx.compose.runtime.CompositionTracer)
    {
        androidx.compose.runtime.Composer$Companion r0;
        androidx.compose.runtime.CompositionTracer r1;

        r0 := @this: androidx.compose.runtime.Composer$Companion;

        r1 := @parameter0: androidx.compose.runtime.CompositionTracer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tracer");

        staticinvoke <androidx.compose.runtime.ComposerKt: void access$setCompositionTracer$p(androidx.compose.runtime.CompositionTracer)>(r1);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.Composer$Companion $r0;
        androidx.compose.runtime.Composer$Companion$Empty$1 $r1;

        $r0 = new androidx.compose.runtime.Composer$Companion;

        specialinvoke $r0.<androidx.compose.runtime.Composer$Companion: void <init>()>();

        <androidx.compose.runtime.Composer$Companion: androidx.compose.runtime.Composer$Companion $$INSTANCE> = $r0;

        $r1 = new androidx.compose.runtime.Composer$Companion$Empty$1;

        specialinvoke $r1.<androidx.compose.runtime.Composer$Companion$Empty$1: void <init>()>();

        <androidx.compose.runtime.Composer$Companion: java.lang.Object Empty> = $r1;

        return;
    }

