androidx.ui.tooling.inspector.MutableInspectorNode
<androidx.ui.tooling.inspector.MutableInspectorNode: long id>
<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List layoutNodes>
<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String name>
<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String fileName>
<androidx.ui.tooling.inspector.MutableInspectorNode: int packageHash>
<androidx.ui.tooling.inspector.MutableInspectorNode: int lineNumber>
<androidx.ui.tooling.inspector.MutableInspectorNode: int offset>
<androidx.ui.tooling.inspector.MutableInspectorNode: int length>
<androidx.ui.tooling.inspector.MutableInspectorNode: int left>
<androidx.ui.tooling.inspector.MutableInspectorNode: int top>
<androidx.ui.tooling.inspector.MutableInspectorNode: int width>
<androidx.ui.tooling.inspector.MutableInspectorNode: int height>
<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List parameters>
<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List children>
    public void <init>()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.util.ArrayList $r1, $r3, $r5;
        java.util.List $r2, $r4, $r6;
        boolean z0, z1, z2;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        z0 = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = (java.util.List) $r1;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List layoutNodes> = $r2;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String name> = "";

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String fileName> = "";

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int packageHash> = -1;

        z1 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = (java.util.List) $r3;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List parameters> = $r4;

        z2 = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = (java.util.List) $r5;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List children> = $r6;

        return;
    }

    public final long getId()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        long $l0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $l0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: long id>;

        return $l0;
    }

    public final void setId(long)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        long l0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        l0 := @parameter0: long;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: long id> = l0;

        return;
    }

    public final java.util.List getLayoutNodes()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $r1 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List layoutNodes>;

        return $r1;
    }

    public final void setLayoutNodes(java.util.List)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.util.List r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List layoutNodes> = r1;

        return;
    }

    public final java.lang.String getName()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.lang.String $r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $r1 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String name>;

        return $r1;
    }

    public final void setName(java.lang.String)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.lang.String r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String name> = r1;

        return;
    }

    public final java.lang.String getFileName()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.lang.String $r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $r1 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String fileName>;

        return $r1;
    }

    public final void setFileName(java.lang.String)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.lang.String r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String fileName> = r1;

        return;
    }

    public final int getPackageHash()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int $i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $i0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int packageHash>;

        return $i0;
    }

    public final void setPackageHash(int)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int packageHash> = i0;

        return;
    }

    public final int getLineNumber()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int $i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $i0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int lineNumber>;

        return $i0;
    }

    public final void setLineNumber(int)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int lineNumber> = i0;

        return;
    }

    public final int getOffset()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int $i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $i0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int offset>;

        return $i0;
    }

    public final void setOffset(int)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int offset> = i0;

        return;
    }

    public final int getLength()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int $i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $i0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int length>;

        return $i0;
    }

    public final void setLength(int)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int length> = i0;

        return;
    }

    public final int getLeft()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int $i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $i0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int left>;

        return $i0;
    }

    public final void setLeft(int)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int left> = i0;

        return;
    }

    public final int getTop()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int $i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $i0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int top>;

        return $i0;
    }

    public final void setTop(int)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int top> = i0;

        return;
    }

    public final int getWidth()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int $i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $i0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int width>;

        return $i0;
    }

    public final void setWidth(int)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int width> = i0;

        return;
    }

    public final int getHeight()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int $i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $i0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int height>;

        return $i0;
    }

    public final void setHeight(int)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        int i0;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int height> = i0;

        return;
    }

    public final java.util.List getParameters()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $r1 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List parameters>;

        return $r1;
    }

    public final java.util.List getChildren()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $r1 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List children>;

        return $r1;
    }

    public final void reset()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        virtualinvoke r0.<androidx.ui.tooling.inspector.MutableInspectorNode: void resetExceptIdLayoutNodesAndChildren()>();

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: long id> = 0L;

        $r1 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List layoutNodes>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List children>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public final void resetExceptIdLayoutNodesAndChildren()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String name> = "";

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String fileName> = "";

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int packageHash> = -1;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int lineNumber> = 0;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int offset> = 0;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int length> = 0;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int left> = 0;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int top> = 0;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int width> = 0;

        r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int height> = 0;

        $r1 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List parameters>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public final androidx.ui.tooling.inspector.MutableInspectorNode shallowCopy(androidx.ui.tooling.inspector.InspectorNode)
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0, r2, $r3, $r12;
        androidx.ui.tooling.inspector.InspectorNode r1;
        boolean z0, z1;
        long $l0;
        java.lang.String $r4, $r5;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.List $r6, $r7, $r9, $r10;
        java.util.Collection $r8, $r11;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        r1 := @parameter0: androidx.ui.tooling.inspector.InspectorNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.ui.tooling.inspector.MutableInspectorNode) r2;

        $l0 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: long getId()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setId(long)>($l0);

        $r4 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: java.lang.String getName()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setName(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: java.lang.String getFileName()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setFileName(java.lang.String)>($r5);

        $i1 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: int getPackageHash()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setPackageHash(int)>($i1);

        $i2 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: int getLineNumber()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setLineNumber(int)>($i2);

        $i3 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: int getOffset()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setOffset(int)>($i3);

        $i4 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: int getLength()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setLength(int)>($i4);

        $i5 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: int getLeft()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setLeft(int)>($i5);

        $i6 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: int getTop()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setTop(int)>($i6);

        $i7 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: int getWidth()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setWidth(int)>($i7);

        $i8 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: int getHeight()>();

        virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: void setHeight(int)>($i8);

        $r6 = virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List getParameters()>();

        $r7 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: java.util.List getParameters()>();

        $r8 = (java.util.Collection) $r7;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = virtualinvoke $r3.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List getChildren()>();

        $r10 = virtualinvoke r1.<androidx.ui.tooling.inspector.InspectorNode: java.util.List getChildren()>();

        $r11 = (java.util.Collection) $r10;

        interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r11);

        $r12 = (androidx.ui.tooling.inspector.MutableInspectorNode) r2;

        return $r12;
    }

    public final androidx.ui.tooling.inspector.InspectorNode build()
    {
        androidx.ui.tooling.inspector.MutableInspectorNode r0;
        androidx.ui.tooling.inspector.InspectorNode $r1;
        java.util.List $r2, $r6, $r7, $r9;
        java.lang.Iterable $r3, $r8;
        long $l0;
        java.lang.String $r4, $r5;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: androidx.ui.tooling.inspector.MutableInspectorNode;

        $r1 = new androidx.ui.tooling.inspector.InspectorNode;

        $l0 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: long id>;

        $r4 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String name>;

        $r5 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.lang.String fileName>;

        $i1 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int packageHash>;

        $i2 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int lineNumber>;

        $i3 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int offset>;

        $i4 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int length>;

        $i5 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int left>;

        $i6 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int top>;

        $i7 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int width>;

        $i8 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: int height>;

        $r2 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List parameters>;

        $r3 = (java.lang.Iterable) $r2;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r3);

        $r7 = r0.<androidx.ui.tooling.inspector.MutableInspectorNode: java.util.List children>;

        $r8 = (java.lang.Iterable) $r7;

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r8);

        specialinvoke $r1.<androidx.ui.tooling.inspector.InspectorNode: void <init>(long,java.lang.String,java.lang.String,int,int,int,int,int,int,int,int,java.util.List,java.util.List)>($l0, $r4, $r5, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $r6, $r9);

        return $r1;
    }

