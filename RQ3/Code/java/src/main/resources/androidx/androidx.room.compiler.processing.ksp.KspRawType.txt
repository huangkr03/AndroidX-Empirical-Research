androidx.room.compiler.processing.ksp.KspRawType
<androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.processing.ksp.KspType original>
<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy ksType$delegate>
<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy typeName$delegate>
<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy xTypeName$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspType)
    {
        androidx.room.compiler.processing.ksp.KspRawType r0;
        androidx.room.compiler.processing.ksp.KspType r1;
        androidx.room.compiler.processing.ksp.KspRawType$ksType$2 $r2;
        kotlin.jvm.functions.Function0 $r3, $r6, $r9;
        kotlin.Lazy $r4, $r7, $r10;
        androidx.room.compiler.processing.ksp.KspRawType$typeName$2 $r5;
        androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2 $r8;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "original");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.processing.ksp.KspType original> = r1;

        $r2 = new androidx.room.compiler.processing.ksp.KspRawType$ksType$2;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspRawType$ksType$2: void <init>(androidx.room.compiler.processing.ksp.KspRawType)>(r0);

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r3);

        r0.<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy ksType$delegate> = $r4;

        $r5 = new androidx.room.compiler.processing.ksp.KspRawType$typeName$2;

        specialinvoke $r5.<androidx.room.compiler.processing.ksp.KspRawType$typeName$2: void <init>(androidx.room.compiler.processing.ksp.KspRawType)>(r0);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        $r7 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r6);

        r0.<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy typeName$delegate> = $r7;

        $r8 = new androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2;

        specialinvoke $r8.<androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2: void <init>(androidx.room.compiler.processing.ksp.KspRawType)>(r0);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r9);

        r0.<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy xTypeName$delegate> = $r10;

        return;
    }

    private final com.google.devtools.ksp.symbol.KSType getKsType()
    {
        androidx.room.compiler.processing.ksp.KspRawType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.google.devtools.ksp.symbol.KSType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy ksType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (com.google.devtools.ksp.symbol.KSType) $r2;

        return $r3;
    }

    public com.squareup.javapoet.TypeName getTypeName()
    {
        androidx.room.compiler.processing.ksp.KspRawType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.squareup.javapoet.TypeName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy typeName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (com.squareup.javapoet.TypeName) $r2;

        return $r3;
    }

    private final androidx.room.compiler.codegen.XTypeName getXTypeName()
    {
        androidx.room.compiler.processing.ksp.KspRawType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.codegen.XTypeName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspRawType: kotlin.Lazy xTypeName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.codegen.XTypeName) $r2;

        return $r3;
    }

    public androidx.room.compiler.codegen.XTypeName asTypeName()
    {
        androidx.room.compiler.processing.ksp.KspRawType r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        return $r1;
    }

    public boolean isAssignableFrom(androidx.room.compiler.processing.XRawType)
    {
        androidx.room.compiler.processing.ksp.KspRawType r0, $r4;
        androidx.room.compiler.processing.XRawType r1;
        java.lang.String r2, $r7;
        boolean $z0, $z1;
        com.google.devtools.ksp.symbol.KSType $r3, $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        r1 := @parameter0: androidx.room.compiler.processing.XRawType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = r1 instanceof androidx.room.compiler.processing.ksp.KspRawType;

        if $z0 != 0 goto label1;

        r2 = "Check failed.";

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label1:
        $r3 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspRawType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r4 = (androidx.room.compiler.processing.ksp.KspRawType) r1;

        $r5 = specialinvoke $r4.<androidx.room.compiler.processing.ksp.KspRawType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $z1 = interfaceinvoke $r3.<com.google.devtools.ksp.symbol.KSType: boolean isAssignableFrom(com.google.devtools.ksp.symbol.KSType)>($r5);

        return $z1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspRawType r0;
        java.lang.Object r1;
        androidx.room.compiler.codegen.XTypeName $r2, $r4;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.XRawType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label5;

        $r2 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        $z0 = r1 instanceof androidx.room.compiler.processing.XRawType;

        if $z0 == 0 goto label1;

        $r3 = (androidx.room.compiler.processing.XRawType) r1;

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 == null goto label3;

        $r4 = interfaceinvoke $r3.<androidx.room.compiler.processing.XRawType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        goto label4;

     label3:
        $r4 = null;

     label4:
        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 == 0 goto label6;

     label5:
        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    public int hashCode()
    {
        androidx.room.compiler.processing.ksp.KspRawType r0;
        androidx.room.compiler.codegen.XTypeName $r1;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        $i0 = virtualinvoke $r1.<androidx.room.compiler.codegen.XTypeName: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.room.compiler.processing.ksp.KspRawType r0;
        androidx.room.compiler.codegen.XTypeName $r1;
        com.squareup.kotlinpoet.TypeName $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        $r2 = virtualinvoke $r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        $r3 = virtualinvoke $r2.<com.squareup.kotlinpoet.TypeName: java.lang.String toString()>();

        return $r3;
    }

    public static final androidx.room.compiler.processing.ksp.KspType access$getOriginal$p(androidx.room.compiler.processing.ksp.KspRawType)
    {
        androidx.room.compiler.processing.ksp.KspRawType $r0;
        androidx.room.compiler.processing.ksp.KspType $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspRawType;

        $r1 = $r0.<androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.processing.ksp.KspType original>;

        return $r1;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getXTypeName(androidx.room.compiler.processing.ksp.KspRawType)
    {
        androidx.room.compiler.processing.ksp.KspRawType $r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspRawType;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspRawType$ksType$2
<androidx.room.compiler.processing.ksp.KspRawType$ksType$2: androidx.room.compiler.processing.ksp.KspRawType this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspRawType)
    {
        androidx.room.compiler.processing.ksp.KspRawType$ksType$2 r0;
        androidx.room.compiler.processing.ksp.KspRawType $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$ksType$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspRawType;

        r0.<androidx.room.compiler.processing.ksp.KspRawType$ksType$2: androidx.room.compiler.processing.ksp.KspRawType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final com.google.devtools.ksp.symbol.KSType invoke()
    {
        androidx.room.compiler.processing.ksp.KspRawType$ksType$2 r0;
        androidx.room.compiler.processing.ksp.KspRawType $r1;
        androidx.room.compiler.processing.ksp.KspType $r2;
        com.google.devtools.ksp.symbol.KSType $r3, $r4, $r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$ksType$2;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspRawType$ksType$2: androidx.room.compiler.processing.ksp.KspRawType this$0>;

        $r2 = staticinvoke <androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.processing.ksp.KspType access$getOriginal$p(androidx.room.compiler.processing.ksp.KspRawType)>($r1);

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r4 = interfaceinvoke $r3.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSType starProjection()>();

        $r5 = interfaceinvoke $r4.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSType makeNotNullable()>();

        return $r5;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspRawType$ksType$2 r0;
        com.google.devtools.ksp.symbol.KSType $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$ksType$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspRawType$ksType$2: com.google.devtools.ksp.symbol.KSType invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspRawType$typeName$2
<androidx.room.compiler.processing.ksp.KspRawType$typeName$2: androidx.room.compiler.processing.ksp.KspRawType this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspRawType)
    {
        androidx.room.compiler.processing.ksp.KspRawType$typeName$2 r0;
        androidx.room.compiler.processing.ksp.KspRawType $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$typeName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspRawType;

        r0.<androidx.room.compiler.processing.ksp.KspRawType$typeName$2: androidx.room.compiler.processing.ksp.KspRawType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final com.squareup.javapoet.TypeName invoke()
    {
        androidx.room.compiler.processing.ksp.KspRawType$typeName$2 r0;
        androidx.room.compiler.processing.ksp.KspRawType $r1;
        androidx.room.compiler.codegen.XTypeName $r2;
        com.squareup.javapoet.TypeName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$typeName$2;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspRawType$typeName$2: androidx.room.compiler.processing.ksp.KspRawType this$0>;

        $r2 = staticinvoke <androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.codegen.XTypeName access$getXTypeName(androidx.room.compiler.processing.ksp.KspRawType)>($r1);

        $r3 = virtualinvoke $r2.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspRawType$typeName$2 r0;
        com.squareup.javapoet.TypeName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$typeName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspRawType$typeName$2: com.squareup.javapoet.TypeName invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2
<androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2: androidx.room.compiler.processing.ksp.KspRawType this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspRawType)
    {
        androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2 r0;
        androidx.room.compiler.processing.ksp.KspRawType $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspRawType;

        r0.<androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2: androidx.room.compiler.processing.ksp.KspRawType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.codegen.XTypeName invoke()
    {
        androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2 r0;
        androidx.room.compiler.processing.ksp.KspRawType $r1, $r7, $r12;
        androidx.room.compiler.codegen.XTypeName$Companion $r2;
        androidx.room.compiler.processing.ksp.KspType $r3, $r8, $r13;
        androidx.room.compiler.codegen.XTypeName $r4, $r9, $r15;
        com.squareup.javapoet.TypeName $r5, $r6;
        com.squareup.kotlinpoet.TypeName $r10, $r11;
        androidx.room.compiler.processing.XNullability $r14;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2;

        $r2 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion>;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2: androidx.room.compiler.processing.ksp.KspRawType this$0>;

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.processing.ksp.KspType access$getOriginal$p(androidx.room.compiler.processing.ksp.KspRawType)>($r1);

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r5 = virtualinvoke $r4.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r6 = staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.TypeName rawTypeName(com.squareup.javapoet.TypeName)>($r5);

        $r7 = r0.<androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2: androidx.room.compiler.processing.ksp.KspRawType this$0>;

        $r8 = staticinvoke <androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.processing.ksp.KspType access$getOriginal$p(androidx.room.compiler.processing.ksp.KspRawType)>($r7);

        $r9 = virtualinvoke $r8.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r10 = virtualinvoke $r9.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        $r11 = staticinvoke <androidx.room.compiler.processing.KotlinPoetExtKt: com.squareup.kotlinpoet.TypeName rawTypeName(com.squareup.kotlinpoet.TypeName)>($r10);

        $r12 = r0.<androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2: androidx.room.compiler.processing.ksp.KspRawType this$0>;

        $r13 = staticinvoke <androidx.room.compiler.processing.ksp.KspRawType: androidx.room.compiler.processing.ksp.KspType access$getOriginal$p(androidx.room.compiler.processing.ksp.KspRawType)>($r12);

        $r14 = virtualinvoke $r13.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.processing.XNullability getNullability()>();

        $r15 = virtualinvoke $r2.<androidx.room.compiler.codegen.XTypeName$Companion: androidx.room.compiler.codegen.XTypeName invoke(com.squareup.javapoet.TypeName,com.squareup.kotlinpoet.TypeName,androidx.room.compiler.processing.XNullability)>($r6, $r11, $r14);

        return $r15;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2 r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspRawType$xTypeName$2: androidx.room.compiler.codegen.XTypeName invoke()>();

        return $r1;
    }

