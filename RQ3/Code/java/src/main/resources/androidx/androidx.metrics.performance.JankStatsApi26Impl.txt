androidx.metrics.performance.JankStatsApi26Impl
    public void <init>(androidx.metrics.performance.JankStats, android.view.View, android.view.Window)
    {
        androidx.metrics.performance.JankStatsApi26Impl r0;
        androidx.metrics.performance.JankStats r1;
        android.view.View r2;
        android.view.Window r3;

        r0 := @this: androidx.metrics.performance.JankStatsApi26Impl;

        r1 := @parameter0: androidx.metrics.performance.JankStats;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.Window;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jankStats");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "window");

        specialinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: void <init>(androidx.metrics.performance.JankStats,android.view.View,android.view.Window)>(r1, r2, r3);

        return;
    }

    public long getFrameStartTime$metrics_performance_release(android.view.FrameMetrics)
    {
        androidx.metrics.performance.JankStatsApi26Impl r0;
        android.view.FrameMetrics r1;
        long $l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi26Impl;

        r1 := @parameter0: android.view.FrameMetrics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "frameMetrics");

        $l0 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(10);

        return $l0;
    }

