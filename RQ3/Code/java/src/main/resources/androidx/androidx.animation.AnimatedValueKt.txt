androidx.animation.AnimatedValueKt
<androidx.animation.AnimatedValueKt: long Unset>
    public static final void fling(androidx.animation.AnimatedFloat, float, androidx.animation.FloatDecayAnimationSpec, kotlin.jvm.functions.Function3)
    {
        androidx.animation.AnimatedFloat $r0;
        float f0, $f1, $f2, $f3;
        androidx.animation.FloatDecayAnimationSpec r1;
        kotlin.jvm.functions.Function3 r2;
        boolean $z0;
        androidx.animation.AnimatedValueKt$fling$1 $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Object $r5, $r9, $r13;
        java.lang.Number $r6, $r10;
        java.lang.Float $r7;
        androidx.animation.DecayAnimation $r8;
        androidx.animation.Animation $r11;
        androidx.animation.AnimationEndReason $r12;

        $r0 := @parameter0: androidx.animation.AnimatedFloat;

        f0 := @parameter1: float;

        r1 := @parameter2: androidx.animation.FloatDecayAnimationSpec;

        r2 := @parameter3: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$fling");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "decay");

        $z0 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r12 = <androidx.animation.AnimationEndReason: androidx.animation.AnimationEndReason Interrupted>;

        $r13 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: java.lang.Object getValue()>();

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void notifyEnded$ui_animation_core_release(androidx.animation.AnimationEndReason,java.lang.Object)>($r12, $r13);

     label1:
        $r3 = new androidx.animation.AnimatedValueKt$fling$1;

        specialinvoke $r3.<androidx.animation.AnimatedValueKt$fling$1: void <init>(androidx.animation.AnimatedFloat,kotlin.jvm.functions.Function3)>($r0, r2);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void setOnEnd$ui_animation_core_release(kotlin.jvm.functions.Function2)>($r4);

        $r5 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: java.lang.Object getValue()>();

        $r6 = (java.lang.Number) $r5;

        $f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $f2 = interfaceinvoke r1.<androidx.animation.FloatDecayAnimationSpec: float getTarget(float,float)>($f1, f0);

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void setTargetValue$ui_animation_core_release(java.lang.Object)>($r7);

        $r8 = new androidx.animation.DecayAnimation;

        $r9 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: java.lang.Object getValue()>();

        $r10 = (java.lang.Number) $r9;

        $f3 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        specialinvoke $r8.<androidx.animation.DecayAnimation: void <init>(androidx.animation.FloatDecayAnimationSpec,float,float)>(r1, $f3, f0);

        $r11 = (androidx.animation.Animation) $r8;

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void startAnimation$ui_animation_core_release(androidx.animation.Animation)>($r11);

        return;
    }

    public static void fling$default(androidx.animation.AnimatedFloat, float, androidx.animation.FloatDecayAnimationSpec, kotlin.jvm.functions.Function3, int, java.lang.Object)
    {
        androidx.animation.AnimatedFloat r0;
        float f0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        androidx.animation.ExponentialDecay $r2;
        androidx.animation.FloatDecayAnimationSpec r3;
        kotlin.jvm.functions.Function3 r4;

        r0 := @parameter0: androidx.animation.AnimatedFloat;

        f0 := @parameter1: float;

        r3 := @parameter2: androidx.animation.FloatDecayAnimationSpec;

        r4 := @parameter3: kotlin.jvm.functions.Function3;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r2 = new androidx.animation.ExponentialDecay;

        specialinvoke $r2.<androidx.animation.ExponentialDecay: void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 3, null);

        r3 = (androidx.animation.FloatDecayAnimationSpec) $r2;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = (kotlin.jvm.functions.Function3) null;

     label2:
        staticinvoke <androidx.animation.AnimatedValueKt: void fling(androidx.animation.AnimatedFloat,float,androidx.animation.FloatDecayAnimationSpec,kotlin.jvm.functions.Function3)>(r0, f0, r3, r4);

        return;
    }

    public static final void fling(androidx.animation.AnimatedFloat, float, androidx.animation.FloatDecayAnimationSpec, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function3)
    {
        androidx.animation.AnimatedFloat $r0;
        float f0, $f1, $f2, $f3, $f4, $f5;
        androidx.animation.FloatDecayAnimationSpec r1;
        kotlin.jvm.functions.Function1 r2;
        kotlin.jvm.functions.Function3 r3;
        androidx.animation.TargetAnimation r4;
        boolean $z0;
        androidx.animation.AnimatedValueKt$fling$2 $r5;
        kotlin.jvm.functions.Function2 $r6;
        java.lang.Object $r7, $r10, $r11, $r17, $r23, $r26;
        java.lang.Number $r8, $r24;
        java.lang.Float $r9, $r12, $r18;
        androidx.animation.TargetBasedAnimation $r13, r28;
        androidx.animation.AnimationBuilder $r14;
        androidx.animation.TwoWayConverter $r15, $r21;
        androidx.animation.AnimationSpec $r16;
        androidx.animation.AnimationVector1D $r19;
        androidx.animation.AnimationVector $r20;
        androidx.animation.Animation $r22, r27;
        androidx.animation.AnimationEndReason $r25;

        $r0 := @parameter0: androidx.animation.AnimatedFloat;

        f0 := @parameter1: float;

        r1 := @parameter2: androidx.animation.FloatDecayAnimationSpec;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        r3 := @parameter4: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$fling");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "decay");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "adjustTarget");

        $z0 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r25 = <androidx.animation.AnimationEndReason: androidx.animation.AnimationEndReason Interrupted>;

        $r26 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: java.lang.Object getValue()>();

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void notifyEnded$ui_animation_core_release(androidx.animation.AnimationEndReason,java.lang.Object)>($r25, $r26);

     label1:
        $r5 = new androidx.animation.AnimatedValueKt$fling$2;

        specialinvoke $r5.<androidx.animation.AnimatedValueKt$fling$2: void <init>(androidx.animation.AnimatedFloat,kotlin.jvm.functions.Function3)>($r0, r3);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void setOnEnd$ui_animation_core_release(kotlin.jvm.functions.Function2)>($r6);

        $r7 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: java.lang.Object getValue()>();

        $r8 = (java.lang.Number) $r7;

        $f1 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $f2 = interfaceinvoke r1.<androidx.animation.FloatDecayAnimationSpec: float getTarget(float,float)>($f1, f0);

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void setTargetValue$ui_animation_core_release(java.lang.Object)>($r9);

        $r10 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: java.lang.Object getTargetValue()>();

        $r11 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r10);

        r4 = (androidx.animation.TargetAnimation) $r11;

        if r4 != null goto label2;

        $r23 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: java.lang.Object getValue()>();

        $r24 = (java.lang.Number) $r23;

        $f5 = virtualinvoke $r24.<java.lang.Number: float floatValue()>();

        r27 = staticinvoke <androidx.animation.FloatDecayAnimationSpecKt: androidx.animation.Animation createAnimation(androidx.animation.FloatDecayAnimationSpec,float,float)>(r1, $f5, f0);

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void startAnimation$ui_animation_core_release(androidx.animation.Animation)>(r27);

        goto label3;

     label2:
        $f3 = virtualinvoke r4.<androidx.animation.TargetAnimation: float getTarget()>();

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void setTargetValue$ui_animation_core_release(java.lang.Object)>($r12);

        $r13 = new androidx.animation.TargetBasedAnimation;

        $r14 = virtualinvoke r4.<androidx.animation.TargetAnimation: androidx.animation.AnimationBuilder getAnimation()>();

        $r15 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: androidx.animation.TwoWayConverter getTypeConverter$ui_animation_core_release()>();

        $r16 = virtualinvoke $r14.<androidx.animation.AnimationBuilder: androidx.animation.AnimationSpec build(androidx.animation.TwoWayConverter)>($r15);

        $r17 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: java.lang.Object getValue()>();

        $f4 = virtualinvoke r4.<androidx.animation.TargetAnimation: float getTarget()>();

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r19 = new androidx.animation.AnimationVector1D;

        specialinvoke $r19.<androidx.animation.AnimationVector1D: void <init>(float)>(f0);

        $r20 = (androidx.animation.AnimationVector) $r19;

        $r21 = virtualinvoke $r0.<androidx.animation.AnimatedFloat: androidx.animation.TwoWayConverter getTypeConverter$ui_animation_core_release()>();

        specialinvoke $r13.<androidx.animation.TargetBasedAnimation: void <init>(androidx.animation.AnimationSpec,java.lang.Object,java.lang.Object,androidx.animation.AnimationVector,androidx.animation.TwoWayConverter)>($r16, $r17, $r18, $r20, $r21);

        r28 = $r13;

        $r22 = (androidx.animation.Animation) r28;

        virtualinvoke $r0.<androidx.animation.AnimatedFloat: void startAnimation$ui_animation_core_release(androidx.animation.Animation)>($r22);

     label3:
        return;
    }

    public static void fling$default(androidx.animation.AnimatedFloat, float, androidx.animation.FloatDecayAnimationSpec, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function3, int, java.lang.Object)
    {
        androidx.animation.AnimatedFloat r0;
        float f0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        androidx.animation.ExponentialDecay $r3;
        androidx.animation.FloatDecayAnimationSpec r4;
        kotlin.jvm.functions.Function3 r5;

        r0 := @parameter0: androidx.animation.AnimatedFloat;

        f0 := @parameter1: float;

        r4 := @parameter2: androidx.animation.FloatDecayAnimationSpec;

        r1 := @parameter3: kotlin.jvm.functions.Function1;

        r5 := @parameter4: kotlin.jvm.functions.Function3;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r3 = new androidx.animation.ExponentialDecay;

        specialinvoke $r3.<androidx.animation.ExponentialDecay: void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, 3, null);

        r4 = (androidx.animation.FloatDecayAnimationSpec) $r3;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        r5 = (kotlin.jvm.functions.Function3) null;

     label2:
        staticinvoke <androidx.animation.AnimatedValueKt: void fling(androidx.animation.AnimatedFloat,float,androidx.animation.FloatDecayAnimationSpec,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3)>(r0, f0, r4, r1, r5);

        return;
    }

    public static final androidx.animation.AnimatedValue AnimatedValue(java.lang.Object, androidx.animation.TwoWayConverter, androidx.animation.AnimationClockObservable, androidx.animation.AnimationVector)
    {
        java.lang.Object r0;
        androidx.animation.TwoWayConverter r1;
        androidx.animation.AnimationClockObservable r2;
        androidx.animation.AnimationVector r3;
        androidx.animation.AnimatedValueImpl $r4;
        androidx.animation.AnimatedValue $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.animation.TwoWayConverter;

        r2 := @parameter2: androidx.animation.AnimationClockObservable;

        r3 := @parameter3: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeConverter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "visibilityThreshold");

        $r4 = new androidx.animation.AnimatedValueImpl;

        specialinvoke $r4.<androidx.animation.AnimatedValueImpl: void <init>(java.lang.Object,androidx.animation.TwoWayConverter,androidx.animation.AnimationClockObservable,androidx.animation.AnimationVector)>(r0, r1, r2, r3);

        $r5 = (androidx.animation.AnimatedValue) $r4;

        return $r5;
    }

    public static androidx.animation.AnimatedValue AnimatedValue$default(java.lang.Object, androidx.animation.TwoWayConverter, androidx.animation.AnimationClockObservable, androidx.animation.AnimationVector, int, java.lang.Object)
    {
        java.lang.Object r0, r3, $r6;
        androidx.animation.TwoWayConverter r1;
        androidx.animation.AnimationClockObservable r2;
        int i0, $i1;
        androidx.animation.AnimatedValue $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.animation.AnimationVector $r7, r8;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.animation.TwoWayConverter;

        r2 := @parameter2: androidx.animation.AnimationClockObservable;

        r8 := @parameter3: androidx.animation.AnimationVector;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        $r5 = interfaceinvoke r1.<androidx.animation.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r6 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r0);

        $r7 = (androidx.animation.AnimationVector) $r6;

        r8 = staticinvoke <androidx.animation.AnimatedValueKt: androidx.animation.AnimationVector newInstanceOfValue(androidx.animation.AnimationVector,float)>($r7, 0.01F);

     label1:
        $r4 = staticinvoke <androidx.animation.AnimatedValueKt: androidx.animation.AnimatedValue AnimatedValue(java.lang.Object,androidx.animation.TwoWayConverter,androidx.animation.AnimationClockObservable,androidx.animation.AnimationVector)>(r0, r1, r2, r8);

        return $r4;
    }

    public static final androidx.animation.AnimatedValue AnimatedVector(androidx.animation.AnimationVector, androidx.animation.AnimationClockObservable, androidx.animation.AnimationVector)
    {
        androidx.animation.AnimationVector r0, r2;
        androidx.animation.AnimationClockObservable r1;
        androidx.animation.AnimatedValueImpl $r3;
        androidx.animation.AnimatedValueKt$AnimatedVector$1 $r4;
        androidx.animation.AnimatedValueKt$AnimatedVector$2 $r5;
        kotlin.jvm.functions.Function1 $r6, $r7;
        androidx.animation.TwoWayConverter $r8;
        androidx.animation.AnimatedValue $r9;

        r0 := @parameter0: androidx.animation.AnimationVector;

        r1 := @parameter1: androidx.animation.AnimationClockObservable;

        r2 := @parameter2: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "initVal");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "clock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "visibilityThreshold");

        $r3 = new androidx.animation.AnimatedValueImpl;

        $r4 = <androidx.animation.AnimatedValueKt$AnimatedVector$1: androidx.animation.AnimatedValueKt$AnimatedVector$1 INSTANCE>;

        $r7 = (kotlin.jvm.functions.Function1) $r4;

        $r5 = <androidx.animation.AnimatedValueKt$AnimatedVector$2: androidx.animation.AnimatedValueKt$AnimatedVector$2 INSTANCE>;

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r8 = staticinvoke <androidx.animation.PropKeyKt: androidx.animation.TwoWayConverter TwoWayConverter(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r7, $r6);

        specialinvoke $r3.<androidx.animation.AnimatedValueImpl: void <init>(java.lang.Object,androidx.animation.TwoWayConverter,androidx.animation.AnimationClockObservable,androidx.animation.AnimationVector)>(r0, $r8, r1, r2);

        $r9 = (androidx.animation.AnimatedValue) $r3;

        return $r9;
    }

    public static androidx.animation.AnimatedValue AnimatedVector$default(androidx.animation.AnimationVector, androidx.animation.AnimationClockObservable, androidx.animation.AnimationVector, int, java.lang.Object)
    {
        androidx.animation.AnimationVector r0, r4;
        androidx.animation.AnimationClockObservable r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.animation.AnimatedValue $r3;

        r0 := @parameter0: androidx.animation.AnimationVector;

        r1 := @parameter1: androidx.animation.AnimationClockObservable;

        r4 := @parameter2: androidx.animation.AnimationVector;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = staticinvoke <androidx.animation.AnimatedValueKt: androidx.animation.AnimationVector newInstanceOfValue(androidx.animation.AnimationVector,float)>(r0, 0.01F);

     label1:
        $r3 = staticinvoke <androidx.animation.AnimatedValueKt: androidx.animation.AnimatedValue AnimatedVector(androidx.animation.AnimationVector,androidx.animation.AnimationClockObservable,androidx.animation.AnimationVector)>(r0, r1, r4);

        return $r3;
    }

    public static final androidx.animation.AnimatedFloat AnimatedFloat(float, androidx.animation.AnimationClockObservable, float)
    {
        float f0, f1;
        androidx.animation.AnimationClockObservable r0;
        androidx.animation.AnimatedFloatImpl $r1;
        androidx.animation.AnimatedFloat $r2;

        f0 := @parameter0: float;

        r0 := @parameter1: androidx.animation.AnimationClockObservable;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "clock");

        $r1 = new androidx.animation.AnimatedFloatImpl;

        specialinvoke $r1.<androidx.animation.AnimatedFloatImpl: void <init>(float,androidx.animation.AnimationClockObservable,float)>(f0, r0, f1);

        $r2 = (androidx.animation.AnimatedFloat) $r1;

        return $r2;
    }

    public static androidx.animation.AnimatedFloat AnimatedFloat$default(float, androidx.animation.AnimationClockObservable, float, int, java.lang.Object)
    {
        float f0, f1;
        androidx.animation.AnimationClockObservable r0;
        int i0, $i1;
        java.lang.Object r1;
        androidx.animation.AnimatedFloat $r2;

        f0 := @parameter0: float;

        r0 := @parameter1: androidx.animation.AnimationClockObservable;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        f1 = 0.01F;

     label1:
        $r2 = staticinvoke <androidx.animation.AnimatedValueKt: androidx.animation.AnimatedFloat AnimatedFloat(float,androidx.animation.AnimationClockObservable,float)>(f0, r0, f1);

        return $r2;
    }

    private static final androidx.animation.AnimationVector newInstanceOfValue(androidx.animation.AnimationVector, float)
    {
        androidx.animation.AnimationVector $r0, r1;
        float f0;
        boolean z0, z1, $z5;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        int i0, i1, $i2;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r0 := @parameter0: androidx.animation.AnimationVector;

        f0 := @parameter1: float;

        r1 = staticinvoke <androidx.animation.AnimationVectorsKt: androidx.animation.AnimationVector newInstance(androidx.animation.AnimationVector)>($r0);

        z0 = 0;

        z1 = 0;

        $i2 = virtualinvoke r1.<androidx.animation.AnimationVector: int getSize$ui_animation_core_release()>();

        $r5 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i2);

        $r3 = (java.lang.Iterable) $r5;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label2;

        $r6 = (kotlin.collections.IntIterator) r4;

        i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        i1 = i0;

        virtualinvoke r1.<androidx.animation.AnimationVector: void set$ui_animation_core_release(int,float)>(i1, f0);

        goto label1;

     label2:
        return r1;
    }

