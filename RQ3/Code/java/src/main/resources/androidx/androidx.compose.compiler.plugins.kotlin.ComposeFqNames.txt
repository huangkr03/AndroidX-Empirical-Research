androidx.compose.compiler.plugins.kotlin.ComposeFqNames
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: java.lang.String root>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: java.lang.String internalRoot>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Composable>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName internal>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName CurrentComposerIntrinsic>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName ComposableContract>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName composableLambda>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName remember>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName key>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName StableMarker>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Stable>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Composer>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName ComposeVersion>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Package>
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>
    public final org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        java.lang.String r1, $r6;
        org.jetbrains.kotlin.name.FqName $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "cname");

        $r2 = new org.jetbrains.kotlin.name.FqName;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("androidx.compose.runtime.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.jetbrains.kotlin.name.FqName: void <init>(java.lang.String)>($r6);

        return $r2;
    }

    public final org.jetbrains.kotlin.name.FqName internalFqNameFor(java.lang.String)
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        java.lang.String r1, $r6;
        org.jetbrains.kotlin.name.FqName $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "cname");

        $r2 = new org.jetbrains.kotlin.name.FqName;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("androidx.compose.runtime.internal.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.jetbrains.kotlin.name.FqName: void <init>(java.lang.String)>($r6);

        return $r2;
    }

    public final org.jetbrains.kotlin.name.FqName getComposable()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Composable>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getInternal()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName internal>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getCurrentComposerIntrinsic()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName CurrentComposerIntrinsic>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getComposableContract()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName ComposableContract>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getComposableLambda()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName composableLambda>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getRemember()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName remember>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getKey()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName key>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getStableMarker()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName StableMarker>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getStable()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Stable>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getComposer()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Composer>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getComposeVersion()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName ComposeVersion>;

        return $r1;
    }

    public final org.jetbrains.kotlin.name.FqName getPackage()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Package>;

        return $r1;
    }

    public final org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor makeComposableAnnotation(org.jetbrains.kotlin.descriptors.ModuleDescriptor)
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;
        org.jetbrains.kotlin.descriptors.ModuleDescriptor r1;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1 $r2;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        r1 := @parameter0: org.jetbrains.kotlin.descriptors.ModuleDescriptor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "module");

        $r2 = new androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1;

        specialinvoke $r2.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1: void <init>(org.jetbrains.kotlin.descriptors.ModuleDescriptor)>(r1);

        $r3 = (org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor) $r2;

        return $r3;
    }

    private void <init>()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames r0, $r1;
        org.jetbrains.kotlin.name.FqName $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r1 = new androidx.compose.compiler.plugins.kotlin.ComposeFqNames;

        specialinvoke $r1.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: void <init>()>();

        r0 = $r1;

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE> = r0;

        $r2 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("Composable");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Composable> = $r2;

        $r3 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("internal");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName internal> = $r3;

        $r4 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("<get-currentComposer>");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName CurrentComposerIntrinsic> = $r4;

        $r5 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("ComposableContract");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName ComposableContract> = $r5;

        $r6 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName internalFqNameFor(java.lang.String)>("composableLambda");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName composableLambda> = $r6;

        $r7 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("remember");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName remember> = $r7;

        $r8 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("key");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName key> = $r8;

        $r9 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("StableMarker");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName StableMarker> = $r9;

        $r10 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("Stable");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Stable> = $r10;

        $r11 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("Composer");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Composer> = $r11;

        $r12 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("ComposeVersion");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName ComposeVersion> = $r12;

        $r13 = new org.jetbrains.kotlin.name.FqName;

        specialinvoke $r13.<org.jetbrains.kotlin.name.FqName: void <init>(java.lang.String)>("androidx.compose.runtime");

        <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName Package> = $r13;

        return;
    }

androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1
<androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1: org.jetbrains.kotlin.descriptors.ModuleDescriptor $module>
    public org.jetbrains.kotlin.types.KotlinType getType()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1 r0;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r1;
        org.jetbrains.kotlin.descriptors.ModuleDescriptor $r2;
        org.jetbrains.kotlin.name.FqName $r3;
        org.jetbrains.kotlin.name.ClassId $r4;
        org.jetbrains.kotlin.descriptors.ClassDescriptor $r5;
        org.jetbrains.kotlin.types.SimpleType $r6;
        org.jetbrains.kotlin.types.KotlinType $r7;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1: org.jetbrains.kotlin.descriptors.ModuleDescriptor $module>;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r3 = virtualinvoke $r1.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getComposable()>();

        $r4 = staticinvoke <org.jetbrains.kotlin.name.ClassId: org.jetbrains.kotlin.name.ClassId topLevel(org.jetbrains.kotlin.name.FqName)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "ClassId.topLevel(Composable)");

        $r5 = staticinvoke <org.jetbrains.kotlin.descriptors.FindClassInModuleKt: org.jetbrains.kotlin.descriptors.ClassDescriptor findClassAcrossModuleDependencies(org.jetbrains.kotlin.descriptors.ModuleDescriptor,org.jetbrains.kotlin.name.ClassId)>($r2, $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        $r6 = interfaceinvoke $r5.<org.jetbrains.kotlin.descriptors.ClassDescriptor: org.jetbrains.kotlin.types.SimpleType getDefaultType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "module.findClassAcrossMo\u2026          )!!.defaultType");

        $r7 = (org.jetbrains.kotlin.types.KotlinType) $r6;

        return $r7;
    }

    public java.util.Map getAllValueArguments()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1 r0;
        java.util.Map $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1;

        $r1 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        return $r1;
    }

    public org.jetbrains.kotlin.descriptors.SourceElement getSource()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1 r0;
        org.jetbrains.kotlin.descriptors.SourceElement $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1;

        $r1 = <org.jetbrains.kotlin.descriptors.SourceElement: org.jetbrains.kotlin.descriptors.SourceElement NO_SOURCE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "SourceElement.NO_SOURCE");

        return $r1;
    }

    public java.lang.String toString()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1 r0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1;

        return "[@Composable]";
    }

    void <init>(org.jetbrains.kotlin.descriptors.ModuleDescriptor)
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1 r0;
        org.jetbrains.kotlin.descriptors.ModuleDescriptor $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1;

        $r1 := @parameter0: org.jetbrains.kotlin.descriptors.ModuleDescriptor;

        r0.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1: org.jetbrains.kotlin.descriptors.ModuleDescriptor $module> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.jetbrains.kotlin.name.FqName getFqName()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1 r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeFqNames$makeComposableAnnotation$1;

        $r1 = staticinvoke <org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor$DefaultImpls: org.jetbrains.kotlin.name.FqName getFqName(org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor)>(r0);

        return $r1;
    }

