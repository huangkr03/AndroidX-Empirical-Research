androidx.compose.foundation.lazy.grid.PlaceableInfo
<androidx.compose.foundation.lazy.grid.PlaceableInfo: int mainAxisSize>
<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable animatedOffset>
<androidx.compose.foundation.lazy.grid.PlaceableInfo: long targetOffset>
<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.runtime.MutableState inProgress$delegate>
    private void <init>(long, int)
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        long l0;
        int i1;
        androidx.compose.animation.core.Animatable $r1;
        androidx.compose.ui.unit.IntOffset $r2;
        androidx.compose.ui.unit.IntOffset$Companion $r3;
        androidx.compose.animation.core.TwoWayConverter $r4;
        java.lang.Boolean $r5;
        androidx.compose.runtime.MutableState $r6;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: int mainAxisSize> = i1;

        $r1 = new androidx.compose.animation.core.Animatable;

        $r2 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>(l0);

        $r3 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $r4 = staticinvoke <androidx.compose.animation.core.VectorConvertersKt: androidx.compose.animation.core.TwoWayConverter getVectorConverter(androidx.compose.ui.unit.IntOffset$Companion)>($r3);

        specialinvoke $r1.<androidx.compose.animation.core.Animatable: void <init>(java.lang.Object,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r2, $r4, null, 4, null);

        r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable animatedOffset> = $r1;

        r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: long targetOffset> = l0;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r6 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r5, null, 2, null);

        r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.runtime.MutableState inProgress$delegate> = $r6;

        return;
    }

    public final int getMainAxisSize()
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        $i0 = r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: int mainAxisSize>;

        return $i0;
    }

    public final void setMainAxisSize(int)
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        int i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        i0 := @parameter0: int;

        r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: int mainAxisSize> = i0;

        return;
    }

    public final androidx.compose.animation.core.Animatable getAnimatedOffset()
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        androidx.compose.animation.core.Animatable $r1;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable animatedOffset>;

        return $r1;
    }

    public final long getTargetOffset-nOcc-ac()
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        long $l0;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        $l0 = r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: long targetOffset>;

        return $l0;
    }

    public final void setTargetOffset--gyyYBs(long)
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        long l0;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        l0 := @parameter0: long;

        r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: long targetOffset> = l0;

        return;
    }

    public final boolean getInProgress()
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        $r2 = r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.runtime.MutableState inProgress$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final void setInProgress(boolean)
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.runtime.MutableState inProgress$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public void <init>(long, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.grid.PlaceableInfo r0;
        long l0;
        int i1;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.grid.PlaceableInfo: void <init>(long,int)>(l0, i1);

        return;
    }

