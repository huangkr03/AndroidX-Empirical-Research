androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox
<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox$Companion Companion>
<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspProcessingEnv env>
<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.Class annotationClass>
<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation 'annotation'>
<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation value>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, java.lang.Class, java.lang.'annotation'.Annotation)
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation r3, $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.'annotation'.Annotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "annotationClass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "annotation");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspProcessingEnv env> = r1;

        r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.Class annotationClass> = r2;

        r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation 'annotation'> = r3;

        $r4 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation 'annotation'>;

        r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation value> = $r4;

        return;
    }

    public java.lang.'annotation'.Annotation getValue()
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox r0;
        java.lang.'annotation'.Annotation $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation value>;

        return $r1;
    }

    public androidx.room.compiler.processing.XType getAsType(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox r0;
        java.lang.String r1;
        java.lang.Class r2, $r4;
        java.lang.Object $r3;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r5;
        kotlin.reflect.KClass $r6;
        androidx.room.compiler.processing.XType $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "methodName");

        $r3 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.Object getFieldValue(java.lang.String)>(r1);

        $r4 = (java.lang.Class) $r3;

        if $r4 != null goto label1;

        return null;

     label1:
        r2 = $r4;

        $r5 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r6 = staticinvoke <kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)>(r2);

        $r7 = virtualinvoke $r5.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.XType findType(kotlin.reflect.KClass)>($r6);

        return $r7;
    }

    public java.util.List getAsTypeList(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5, $r8, r17;
        java.lang.Class r6;
        androidx.room.compiler.processing.XType r7, $r14;
        java.util.ArrayList $r9, $r11;
        java.util.List $r10, $r20;
        boolean $z3, $z5, z11;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r12;
        kotlin.reflect.KClass $r13;
        java.util.Collection r16, $r19;
        int $i0, $i1;
        java.lang.Iterable r18;

        r0 := @this: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "methodName");

        $r8 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.Object getFieldValue(java.lang.String)>(r1);

        r2 = (java.lang.Object[]) $r8;

        if r2 == null goto label7;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r16 = (java.util.Collection) $r9;

        $i0 = 0;

        $i1 = lengthof r2;

     label1:
        if $i0 >= $i1 goto label3;

        r17 = r2[$i0];

        $z5 = r17 instanceof java.lang.Class;

        if $z5 == 0 goto label2;

        interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>(r17);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r10 = (java.util.List) r16;

        r18 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r19 = (java.util.Collection) $r11;

        z11 = 0;

        r3 = interfaceinvoke r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        r6 = (java.lang.Class) r5;

        $r12 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r13 = staticinvoke <kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)>(r6);

        $r14 = virtualinvoke $r12.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.XType findType(kotlin.reflect.KClass)>($r13);

        if $r14 == null goto label5;

        r7 = $r14;

        interfaceinvoke $r19.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label5;

     label5:
        goto label4;

     label6:
        $r20 = (java.util.List) $r19;

        goto label8;

     label7:
        $r20 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label8:
        return $r20;
    }

    public androidx.room.compiler.processing.XAnnotationBox getAsAnnotationBox(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox r0, $r5;
        java.lang.String r1;
        java.lang.Class $r2;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r3;
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox$Companion $r4;
        androidx.room.compiler.processing.XAnnotationBox $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "methodName");

        $r4 = <androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox$Companion Companion>;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.Class annotationClass>;

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox$Companion: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox createFromDefaultValue(androidx.room.compiler.processing.ksp.KspProcessingEnv,java.lang.Class,java.lang.String)>($r3, $r2, r1);

        $r6 = (androidx.room.compiler.processing.XAnnotationBox) $r5;

        return $r6;
    }

    public androidx.room.compiler.processing.XAnnotationBox[] getAsAnnotationBoxArray(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox r0, $r17;
        java.lang.String r1, $r30, $r31, $r32;
        java.lang.reflect.Method r2, $r9, r35;
        java.lang.'annotation'.Annotation[] r3, $r38;
        java.lang.'annotation'.Annotation r4, r5, $r11;
        java.util.Collection r6, r41, $r42;
        java.lang.Class $r7, $r19, $r20, $r26;
        java.lang.reflect.Method[] $r8;
        java.lang.Object[] $r10, $r15, $r22, $r33;
        boolean $z1, $z3, z8;
        java.util.ArrayList $r12;
        int $i0, $i1, i2, i3, $i4;
        java.util.List $r13;
        androidx.room.compiler.processing.XAnnotationBox[] $r14, $r16, $r21, $r23;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r18;
        java.lang.IllegalStateException $r24;
        java.lang.StringBuilder $r25, $r27, $r28, $r29;
        java.lang.Object r34, $r36, $r37;

        r0 := @this: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "methodName");

        $r7 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.Class annotationClass>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "annotationClass.methods");

        $r33 = (java.lang.Object[]) $r8;

        $i1 = 0;

        i2 = lengthof $r33;

     label01:
        if $i1 >= i2 goto label03;

        r34 = $r33[$i1];

        r35 = (java.lang.reflect.Method) r34;

        $r32 = virtualinvoke r35.<java.lang.reflect.Method: java.lang.String getName()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r32, r1);

        if $z3 == 0 goto label02;

        $r36 = r34;

        goto label04;

     label02:
        $i1 = $i1 + 1;

        goto label01;

     label03:
        $r36 = null;

     label04:
        $r9 = (java.lang.reflect.Method) $r36;

        if $r9 != null goto label05;

        $r24 = new java.lang.IllegalStateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.Class annotationClass>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not contain ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r31);

        throw $r24;

     label05:
        r2 = $r9;

        $r11 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation 'annotation'>;

        $r10 = newarray (java.lang.Object)[0];

        $r37 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r10);

        $z1 = $r37 instanceof java.lang.'annotation'.Annotation[];

        if $z1 == 0 goto label06;

        $r38 = (java.lang.'annotation'.Annotation[]) $r37;

        goto label07;

     label06:
        $r38 = null;

     label07:
        if $r38 != null goto label08;

        $r21 = newarray (androidx.room.compiler.processing.XAnnotationBox)[0];

        $r22 = (java.lang.Object[]) $r21;

        $r23 = (androidx.room.compiler.processing.XAnnotationBox[]) $r22;

        return $r23;

     label08:
        r3 = $r38;

        $r12 = new java.util.ArrayList;

        $i0 = lengthof r3;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i0);

        r41 = (java.util.Collection) $r12;

        z8 = 0;

        i3 = 0;

        $i4 = lengthof r3;

     label09:
        if i3 >= $i4 goto label10;

        r4 = r3[i3];

        r5 = r4;

        r6 = r41;

        $r17 = new androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        $r18 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r19 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.Class getComponentType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r20, "null cannot be cast to non-null type java.lang.Class<T of androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox.getAsAnnotationBoxArray$lambda$2>");

        specialinvoke $r17.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,java.lang.Class,java.lang.'annotation'.Annotation)>($r18, $r20, r5);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r17);

        i3 = i3 + 1;

        goto label09;

     label10:
        $r13 = (java.util.List) r41;

        $r42 = (java.util.Collection) $r13;

        $r14 = newarray (androidx.room.compiler.processing.XAnnotationBox)[0];

        $r15 = interfaceinvoke $r42.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r15, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        $r16 = (androidx.room.compiler.processing.XAnnotationBox[]) $r15;

        return $r16;
    }

    private final java.lang.Object getFieldValue(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, r3, r6, $r13, $r14;
        java.lang.reflect.Method r4, r7;
        java.lang.Object[] $r5, $r10;
        int i0, i1;
        java.lang.Class $r8;
        java.lang.reflect.Method[] $r9;
        java.lang.'annotation'.Annotation $r11;
        boolean $z2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.Class annotationClass>;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "annotationClass.methods");

        $r5 = (java.lang.Object[]) $r9;

        i1 = 0;

        i0 = lengthof $r5;

     label1:
        if i1 >= i0 goto label3;

        r6 = $r5[i1];

        r7 = (java.lang.reflect.Method) r6;

        $r12 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.String getName()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, r1);

        if $z2 == 0 goto label2;

        $r13 = r6;

        goto label4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r13 = null;

     label4:
        r4 = (java.lang.reflect.Method) $r13;

        if r4 == null goto label5;

        $r11 = r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation 'annotation'>;

        $r10 = newarray (java.lang.Object)[0];

        $r14 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r10);

        goto label6;

     label5:
        $r14 = null;

     label6:
        r3 = $r14;

        if r3 != null goto label7;

        return null;

     label7:
        r2 = r3;

        return r2;
    }

    public volatile java.lang.Object getValue()
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox r0;
        java.lang.'annotation'.Annotation $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: java.lang.'annotation'.Annotation getValue()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox: androidx.room.compiler.processing.ksp.KspReflectiveAnnotationBox$Companion Companion> = $r0;

        return;
    }

