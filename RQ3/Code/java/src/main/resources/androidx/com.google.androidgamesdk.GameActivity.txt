com.google.androidgamesdk.GameActivity
<com.google.androidgamesdk.GameActivity: java.lang.String LOG_TAG>
<com.google.androidgamesdk.GameActivity: java.lang.String DEFAULT_NATIVE_LIB_NAME>
<com.google.androidgamesdk.GameActivity: java.lang.String META_DATA_LIB_NAME>
<com.google.androidgamesdk.GameActivity: java.lang.String KEY_NATIVE_SAVED_STATE>
<com.google.androidgamesdk.GameActivity: int contentViewId>
<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo imeEditorInfo>
<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>
<com.google.androidgamesdk.GameActivity: long mNativeHandle>
<com.google.androidgamesdk.GameActivity: android.view.SurfaceHolder mCurSurfaceHolder>
<com.google.androidgamesdk.GameActivity: int[] mLocation>
<com.google.androidgamesdk.GameActivity: int mLastContentX>
<com.google.androidgamesdk.GameActivity: int mLastContentY>
<com.google.androidgamesdk.GameActivity: int mLastContentWidth>
<com.google.androidgamesdk.GameActivity: int mLastContentHeight>
<com.google.androidgamesdk.GameActivity: boolean mDestroyed>
    public void <init>()
    {
        com.google.androidgamesdk.GameActivity r0;
        int[] $r1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<com.google.androidgamesdk.GameActivity: int[] mLocation> = $r1;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.MotionEvent r1;
        long $l0;
        boolean $z0, $z1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.view.MotionEvent;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $z0 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: boolean onTouchEventNative(long,android.view.MotionEvent)>($l0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.MotionEvent r1;
        long $l0;
        boolean $z0, $z1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.view.MotionEvent;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $z0 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: boolean onTouchEventNative(long,android.view.MotionEvent)>($l0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.google.androidgamesdk.GameActivity r0;
        int i0;
        android.view.KeyEvent r1;
        long $l1;
        boolean $z0, $z1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $l1 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $z0 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: boolean onKeyUpNative(long,android.view.KeyEvent)>($l1, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z1;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.google.androidgamesdk.GameActivity r0;
        int i0;
        android.view.KeyEvent r1;
        long $l1;
        boolean $z0, $z1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $l1 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $z0 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: boolean onKeyDownNative(long,android.view.KeyEvent)>($l1, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z1;
    }

    public void stateChanged(com.google.androidgamesdk.gametextinput.State, boolean)
    {
        com.google.androidgamesdk.GameActivity r0;
        com.google.androidgamesdk.gametextinput.State r1;
        boolean z0;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: com.google.androidgamesdk.gametextinput.State;

        z0 := @parameter1: boolean;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onTextInputEventNative(long,com.google.androidgamesdk.gametextinput.State)>($l0, r1);

        return;
    }

    public void onGlobalLayout()
    {
        com.google.androidgamesdk.GameActivity r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] $r1, $r5, $r6, $r7, $r8;
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView $r2, $r3, $r4;
        long $l8;
        boolean $z0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        $r2 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        $r1 = r0.<com.google.androidgamesdk.GameActivity: int[] mLocation>;

        virtualinvoke $r2.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: void getLocationInWindow(int[])>($r1);

        $r3 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        i0 = virtualinvoke $r3.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: int getWidth()>();

        $r4 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        i1 = virtualinvoke $r4.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: int getHeight()>();

        $r5 = r0.<com.google.androidgamesdk.GameActivity: int[] mLocation>;

        $i3 = $r5[0];

        $i2 = r0.<com.google.androidgamesdk.GameActivity: int mLastContentX>;

        if $i3 != $i2 goto label1;

        $r6 = r0.<com.google.androidgamesdk.GameActivity: int[] mLocation>;

        $i10 = $r6[1];

        $i9 = r0.<com.google.androidgamesdk.GameActivity: int mLastContentY>;

        if $i10 != $i9 goto label1;

        $i11 = r0.<com.google.androidgamesdk.GameActivity: int mLastContentWidth>;

        if i0 != $i11 goto label1;

        $i12 = r0.<com.google.androidgamesdk.GameActivity: int mLastContentHeight>;

        if i1 == $i12 goto label2;

     label1:
        $r7 = r0.<com.google.androidgamesdk.GameActivity: int[] mLocation>;

        $i13 = $r7[0];

        r0.<com.google.androidgamesdk.GameActivity: int mLastContentX> = $i13;

        $r8 = r0.<com.google.androidgamesdk.GameActivity: int[] mLocation>;

        $i14 = $r8[1];

        r0.<com.google.androidgamesdk.GameActivity: int mLastContentY> = $i14;

        r0.<com.google.androidgamesdk.GameActivity: int mLastContentWidth> = i0;

        r0.<com.google.androidgamesdk.GameActivity: int mLastContentHeight> = i1;

        $z0 = r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed>;

        if $z0 != 0 goto label2;

        $l8 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $i7 = r0.<com.google.androidgamesdk.GameActivity: int mLastContentX>;

        $i6 = r0.<com.google.androidgamesdk.GameActivity: int mLastContentY>;

        $i5 = r0.<com.google.androidgamesdk.GameActivity: int mLastContentWidth>;

        $i4 = r0.<com.google.androidgamesdk.GameActivity: int mLastContentHeight>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onContentRectChangedNative(long,int,int,int,int)>($l8, $i7, $i6, $i5, $i4);

     label2:
        return;
    }

    public void setTextInputState(com.google.androidgamesdk.gametextinput.State)
    {
        com.google.androidgamesdk.GameActivity r0;
        com.google.androidgamesdk.gametextinput.State r1;
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView $r2, $r3, $r5;
        com.google.androidgamesdk.gametextinput.InputConnection $r4, $r6;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: com.google.androidgamesdk.gametextinput.State;

        $r2 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        $r4 = $r3.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection>;

        if $r4 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GameActivity", "No input connection has been set yet");

        goto label3;

     label2:
        $r5 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        $r6 = $r5.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection>;

        virtualinvoke $r6.<com.google.androidgamesdk.gametextinput.InputConnection: void setState(com.google.androidgamesdk.gametextinput.State)>(r1);

     label3:
        return;
    }

<com.google.androidgamesdk.GameActivity: long initializeNativeCode(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,byte[],android.content.res.Configuration)>
<com.google.androidgamesdk.GameActivity: java.lang.String getDlError()>
<com.google.androidgamesdk.GameActivity: void terminateNativeCode(long)>
<com.google.androidgamesdk.GameActivity: void onStartNative(long)>
<com.google.androidgamesdk.GameActivity: void onResumeNative(long)>
<com.google.androidgamesdk.GameActivity: byte[] onSaveInstanceStateNative(long)>
<com.google.androidgamesdk.GameActivity: void onPauseNative(long)>
<com.google.androidgamesdk.GameActivity: void onStopNative(long)>
<com.google.androidgamesdk.GameActivity: void onConfigurationChangedNative(long,android.content.res.Configuration)>
<com.google.androidgamesdk.GameActivity: void onTrimMemoryNative(long,int)>
<com.google.androidgamesdk.GameActivity: void onWindowFocusChangedNative(long,boolean)>
<com.google.androidgamesdk.GameActivity: void onSurfaceCreatedNative(long,android.view.Surface)>
<com.google.androidgamesdk.GameActivity: void onSurfaceChangedNative(long,android.view.Surface,int,int,int)>
<com.google.androidgamesdk.GameActivity: void onSurfaceRedrawNeededNative(long,android.view.Surface)>
<com.google.androidgamesdk.GameActivity: void onSurfaceDestroyedNative(long)>
<com.google.androidgamesdk.GameActivity: boolean onTouchEventNative(long,android.view.MotionEvent)>
<com.google.androidgamesdk.GameActivity: boolean onKeyDownNative(long,android.view.KeyEvent)>
<com.google.androidgamesdk.GameActivity: boolean onKeyUpNative(long,android.view.KeyEvent)>
<com.google.androidgamesdk.GameActivity: void onTextInputEventNative(long,com.google.androidgamesdk.gametextinput.State)>
<com.google.androidgamesdk.GameActivity: void setInputConnectionNative(long,com.google.androidgamesdk.gametextinput.InputConnection)>
<com.google.androidgamesdk.GameActivity: void onWindowInsetsChangedNative(long)>
<com.google.androidgamesdk.GameActivity: void onContentRectChangedNative(long,int,int,int,int)>
    public long getGameActivityNativeHandle()
    {
        com.google.androidgamesdk.GameActivity r0;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        return $l0;
    }

    protected void onCreateSurfaceView()
    {
        com.google.androidgamesdk.GameActivity r0;
        android.widget.FrameLayout r1, r9;
        int $i0, $i1;
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView $r4, $r5, $r7, r8;
        android.view.SurfaceHolder $r6;
        android.content.Context r10;
        android.view.View r11, r13;
        android.view.SurfaceHolder$Callback r12;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r8 = new com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView;

        specialinvoke r8.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: void <init>(com.google.androidgamesdk.GameActivity,com.google.androidgamesdk.GameActivity)>(r0, r0);

        r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView> = r8;

        r9 = new android.widget.FrameLayout;

        r10 = (android.content.Context) r0;

        specialinvoke r9.<android.widget.FrameLayout: void <init>(android.content.Context)>(r10);

        r1 = r9;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int generateViewId()>();

        r0.<com.google.androidgamesdk.GameActivity: int contentViewId> = $i0;

        $i1 = r0.<com.google.androidgamesdk.GameActivity: int contentViewId>;

        virtualinvoke r1.<android.widget.FrameLayout: void setId(int)>($i1);

        $r4 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        r11 = (android.view.View) $r4;

        virtualinvoke r1.<android.widget.FrameLayout: void addView(android.view.View)>(r11);

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void setContentView(android.view.View)>(r1);

        virtualinvoke r1.<android.widget.FrameLayout: boolean requestFocus()>();

        $r5 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        $r6 = virtualinvoke $r5.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: android.view.SurfaceHolder getHolder()>();

        r12 = (android.view.SurfaceHolder$Callback) r0;

        interfaceinvoke $r6.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r12);

        $r7 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        r13 = (android.view.View) $r7;

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>(r13, r0);

        return;
    }

    protected void onSetUpWindow()
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.Window $r1, $r2;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        $r1 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFormat(int)>(4);

        $r2 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setSoftInputMode(int)>(16);

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.os.Bundle r1, $r11, $r59;
        android.content.pm.ActivityInfo r2;
        dalvik.system.BaseDexClassLoader r3;
        java.lang.String r4, $r7, $r19, $r25, $r27, $r29, $r31, $r43, $r45, $r51, $r53, $r58, r64, r65, r67;
        byte[] r5, $r68;
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView $r6, $r35, $r36, $r60;
        android.content.pm.PackageManager $r8;
        android.content.Intent $r9;
        android.content.ComponentName $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r39, $r40, $r41, $r42, $r44, $r47, $r48, $r49, $r50, $r52, $r54, $r55, $r56, $r57;
        java.lang.ClassLoader $r20;
        boolean $z0;
        java.io.File $r26, $r28, $r30;
        android.content.res.AssetManager $r32;
        android.content.res.Resources $r33;
        android.content.res.Configuration $r34;
        long $l2, $l3, $l5;
        byte $b4;
        com.google.androidgamesdk.gametextinput.InputConnection $r37;
        java.lang.UnsatisfiedLinkError $r38;
        java.lang.IllegalArgumentException $r46;
        android.view.ViewTreeObserver $r61;
        java.lang.Throwable $r62, r66;
        java.lang.RuntimeException $r63;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onCreateSurfaceView()>();

        $r6 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        if $r6 == null goto label01;

        $r60 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        $r61 = virtualinvoke $r60.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r61.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

     label01:
        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onSetUpWindow()>();

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(java.lang.String)>("main");

        r64 = $r7;

     label02:
        $r8 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.content.pm.PackageManager getPackageManager()>();

        $r9 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.content.Intent getIntent()>();

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        r2 = virtualinvoke $r8.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r10, 128);

        $r11 = r2.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r11 == null goto label03;

        $r59 = r2.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r65 = virtualinvoke $r59.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.app.lib_name");

        if r65 == null goto label03;

        r64 = r65;

     label03:
        goto label05;

     label04:
        $r62 := @caughtexception;

        r66 = $r62;

        $r63 = new java.lang.RuntimeException;

        specialinvoke $r63.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error getting activity info", r66);

        throw $r63;

     label05:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".so");

        r67 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for library ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GameActivity", $r19);

        $r20 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: java.lang.ClassLoader getClassLoader()>();

        r3 = (dalvik.system.BaseDexClassLoader) $r20;

        r4 = virtualinvoke r3.<dalvik.system.BaseDexClassLoader: java.lang.String findLibrary(java.lang.String)>(r64);

        if r4 == null goto label06;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found library ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Loading...");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GameActivity", $r58);

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>(r64);

        goto label08;

     label06:
        $z0 = virtualinvoke r64.<java.lang.String: boolean equals(java.lang.Object)>("main");

        if $z0 != 0 goto label07;

        $r46 = new java.lang.IllegalArgumentException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find native library ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using classloader: ");

        $r51 = virtualinvoke r3.<dalvik.system.BaseDexClassLoader: java.lang.String toString()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r53);

        throw $r46;

     label07:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application should have loaded the native library ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" explicitly by now. ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GameActivity", $r25);

     label08:
        if r1 == null goto label09;

        $r68 = virtualinvoke r1.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("android:native_state");

        goto label10;

     label09:
        $r68 = null;

     label10:
        r5 = $r68;

        $r26 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: java.io.File getFilesDir()>();

        $r27 = staticinvoke <com.google.androidgamesdk.GameActivity: java.lang.String getAbsolutePath(java.io.File)>($r26);

        $r28 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: java.io.File getObbDir()>();

        $r29 = staticinvoke <com.google.androidgamesdk.GameActivity: java.lang.String getAbsolutePath(java.io.File)>($r28);

        $r30 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: java.io.File getExternalFilesDir(java.lang.String)>(null);

        $r31 = staticinvoke <com.google.androidgamesdk.GameActivity: java.lang.String getAbsolutePath(java.io.File)>($r30);

        $r32 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.content.res.AssetManager getAssets()>();

        $r33 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.content.res.Resources getResources()>();

        $r34 = virtualinvoke $r33.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $l2 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: long initializeNativeCode(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,byte[],android.content.res.Configuration)>($r27, $r29, $r31, $r32, r5, $r34);

        r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle> = $l2;

        $l3 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label11;

        $r38 = new java.lang.UnsatisfiedLinkError;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to initialize native code \"");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r43 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: java.lang.String getDlError()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)>($r45);

        throw $r38;

     label11:
        $r35 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        if $r35 == null goto label12;

        $l5 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $r36 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        $r37 = $r36.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void setInputConnectionNative(long,com.google.androidgamesdk.gametextinput.InputConnection)>($l5, $r37);

     label12:
        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>(r1);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label04;
    }

    private static java.lang.String getAbsolutePath(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @parameter0: java.io.File;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    protected void onDestroy()
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.SurfaceHolder $r1;
        long $l0, $l1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed> = 1;

        $r1 = r0.<com.google.androidgamesdk.GameActivity: android.view.SurfaceHolder mCurSurfaceHolder>;

        if $r1 == null goto label1;

        $l1 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onSurfaceDestroyedNative(long)>($l1);

        r0.<com.google.androidgamesdk.GameActivity: android.view.SurfaceHolder mCurSurfaceHolder> = null;

     label1:
        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void terminateNativeCode(long)>($l0);

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onDestroy()>();

        return;
    }

    protected void onPause()
    {
        com.google.androidgamesdk.GameActivity r0;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onPause()>();

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onPauseNative(long)>($l0);

        return;
    }

    protected void onResume()
    {
        com.google.androidgamesdk.GameActivity r0;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onResume()>();

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onResumeNative(long)>($l0);

        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.os.Bundle r1;
        byte[] r2;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        r2 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: byte[] onSaveInstanceStateNative(long)>($l0);

        if r2 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("android:native_state", r2);

     label1:
        return;
    }

    protected void onStart()
    {
        com.google.androidgamesdk.GameActivity r0;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onStart()>();

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onStartNative(long)>($l0);

        return;
    }

    protected void onStop()
    {
        com.google.androidgamesdk.GameActivity r0;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onStop()>();

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onStopNative(long)>($l0);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.content.res.Configuration r1;
        boolean $z0;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $z0 = r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onConfigurationChangedNative(long,android.content.res.Configuration)>($l0, r1);

     label1:
        return;
    }

    public void onTrimMemory(int)
    {
        com.google.androidgamesdk.GameActivity r0;
        int i0;
        boolean $z0;
        long $l1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onTrimMemory(int)>(i0);

        $z0 = r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l1 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onTrimMemoryNative(long,int)>($l1, i0);

     label1:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.google.androidgamesdk.GameActivity r0;
        boolean z0, $z1;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.appcompat.app.AppCompatActivity: void onWindowFocusChanged(boolean)>(z0);

        $z1 = r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed>;

        if $z1 != 0 goto label1;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onWindowFocusChangedNative(long,boolean)>($l0, z0);

     label1:
        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;
        android.view.Surface $r2;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<com.google.androidgamesdk.GameActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onSurfaceCreatedNative(long,android.view.Surface)>($l0, $r2);

     label1:
        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;
        boolean $z0;
        long $l3;
        android.view.Surface $r2;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<com.google.androidgamesdk.GameActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l3 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onSurfaceChangedNative(long,android.view.Surface,int,int,int)>($l3, $r2, i0, i1, i2);

     label1:
        return;
    }

    public void surfaceRedrawNeeded(android.view.SurfaceHolder)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;
        android.view.Surface $r2;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<com.google.androidgamesdk.GameActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onSurfaceRedrawNeededNative(long,android.view.Surface)>($l0, $r2);

     label1:
        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        r0.<com.google.androidgamesdk.GameActivity: android.view.SurfaceHolder mCurSurfaceHolder> = null;

        $z0 = r0.<com.google.androidgamesdk.GameActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onSurfaceDestroyedNative(long)>($l0);

     label1:
        return;
    }

    void setWindowFlags(int, int)
    {
        com.google.androidgamesdk.GameActivity r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFlags(int,int)>(i0, i1);

        return;
    }

    void setWindowFormat(int)
    {
        com.google.androidgamesdk.GameActivity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFormat(int)>(i0);

        return;
    }

    public androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, androidx.core.view.WindowInsetsCompat)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.View r1;
        androidx.core.view.WindowInsetsCompat r2;
        long $l0;
        int $i1;
        android.view.WindowInsets $r3;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.core.view.WindowInsetsCompat;

        $l0 = r0.<com.google.androidgamesdk.GameActivity: long mNativeHandle>;

        virtualinvoke r0.<com.google.androidgamesdk.GameActivity: void onWindowInsetsChangedNative(long)>($l0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 20 goto label1;

        $r3 = virtualinvoke r2.<androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()>();

        virtualinvoke r1.<android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>($r3);

     label1:
        return r2;
    }

    public androidx.core.graphics.Insets getWindowInsets(int)
    {
        com.google.androidgamesdk.GameActivity r0;
        int i0;
        androidx.core.view.WindowInsetsCompat r1;
        androidx.core.graphics.Insets r2, $r4;
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView $r3;
        android.view.View r5;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        i0 := @parameter0: int;

        $r3 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        r5 = (android.view.View) $r3;

        r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>(r5);

        r2 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsets(int)>(i0);

        $r4 = <androidx.core.graphics.Insets: androidx.core.graphics.Insets NONE>;

        if r2 != $r4 goto label1;

        return null;

     label1:
        return r2;
    }

    public androidx.core.graphics.Insets getWaterfallInsets()
    {
        com.google.androidgamesdk.GameActivity r0;
        androidx.core.view.WindowInsetsCompat r1;
        androidx.core.view.DisplayCutoutCompat r2;
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView $r3;
        androidx.core.graphics.Insets $r4;
        android.view.View r5;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        $r3 = r0.<com.google.androidgamesdk.GameActivity: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView mSurfaceView>;

        r5 = (android.view.View) $r3;

        r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>(r5);

        r2 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()>();

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<androidx.core.view.DisplayCutoutCompat: androidx.core.graphics.Insets getWaterfallInsets()>();

        return $r4;

     label1:
        return null;
    }

    public void onImeInsetsChanged(androidx.core.graphics.Insets)
    {
        com.google.androidgamesdk.GameActivity r0;
        androidx.core.graphics.Insets r1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: androidx.core.graphics.Insets;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GameActivity", "onImeInsetsChanged from Text Listener");

        return;
    }

    public android.view.inputmethod.EditorInfo getImeEditorInfo()
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.inputmethod.EditorInfo $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        $r1 = r0.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo imeEditorInfo>;

        if $r1 != null goto label1;

        $r3 = new android.view.inputmethod.EditorInfo;

        specialinvoke $r3.<android.view.inputmethod.EditorInfo: void <init>()>();

        r0.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo imeEditorInfo> = $r3;

        $r4 = r0.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo imeEditorInfo>;

        $r4.<android.view.inputmethod.EditorInfo: int inputType> = 0;

        $r5 = r0.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo imeEditorInfo>;

        $r5.<android.view.inputmethod.EditorInfo: int actionId> = 1;

        $r6 = r0.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo imeEditorInfo>;

        $r6.<android.view.inputmethod.EditorInfo: int imeOptions> = 1073741824;

     label1:
        $r2 = r0.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo imeEditorInfo>;

        return $r2;
    }

    public void setImeEditorInfo(android.view.inputmethod.EditorInfo)
    {
        com.google.androidgamesdk.GameActivity r0;
        android.view.inputmethod.EditorInfo r1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        r0.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo imeEditorInfo> = r1;

        return;
    }

    public void setImeEditorInfoFields(int, int, int)
    {
        com.google.androidgamesdk.GameActivity r0;
        int i0, i1, i2;
        android.view.inputmethod.EditorInfo r1;

        r0 := @this: com.google.androidgamesdk.GameActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo getImeEditorInfo()>();

        r1.<android.view.inputmethod.EditorInfo: int inputType> = i0;

        r1.<android.view.inputmethod.EditorInfo: int actionId> = i1;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = i2;

        return;
    }

com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView
<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection>
<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.GameActivity this$0>
    public void <init>(com.google.androidgamesdk.GameActivity, com.google.androidgamesdk.GameActivity)
    {
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView r0;
        com.google.androidgamesdk.GameActivity r1, r2;
        android.view.inputmethod.EditorInfo r3;
        int $i0;
        com.google.androidgamesdk.gametextinput.InputConnection $r6, r12;
        boolean $z0;
        com.google.androidgamesdk.gametextinput.Settings r11;
        android.content.Context r13, r14;
        android.view.View r15;

        r0 := @this: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView;

        r1 := @parameter0: com.google.androidgamesdk.GameActivity;

        r2 := @parameter1: com.google.androidgamesdk.GameActivity;

        r0.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.GameActivity this$0> = r1;

        r13 = (android.content.Context) r2;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context)>(r13);

        r3 = virtualinvoke r2.<com.google.androidgamesdk.GameActivity: android.view.inputmethod.EditorInfo getImeEditorInfo()>();

        r12 = new com.google.androidgamesdk.gametextinput.InputConnection;

        r11 = new com.google.androidgamesdk.gametextinput.Settings;

        $i0 = r3.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        specialinvoke r11.<com.google.androidgamesdk.gametextinput.Settings: void <init>(android.view.inputmethod.EditorInfo,boolean)>(r3, $z0);

        r14 = (android.content.Context) r2;

        r15 = (android.view.View) r0;

        specialinvoke r12.<com.google.androidgamesdk.gametextinput.InputConnection: void <init>(android.content.Context,android.view.View,com.google.androidgamesdk.gametextinput.Settings)>(r14, r15, r11);

        $r6 = virtualinvoke r12.<com.google.androidgamesdk.gametextinput.InputConnection: com.google.androidgamesdk.gametextinput.InputConnection setListener(com.google.androidgamesdk.gametextinput.Listener)>(r2);

        r0.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection> = $r6;

        return;
    }

    public com.google.androidgamesdk.gametextinput.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView r0;
        android.view.inputmethod.EditorInfo r1, $r4;
        com.google.androidgamesdk.gametextinput.InputConnection $r2, $r3;

        r0 := @this: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        if r1 == null goto label1;

        $r3 = r0.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection>;

        $r4 = virtualinvoke $r3.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.EditorInfo getEditorInfo()>();

        staticinvoke <com.google.androidgamesdk.gametextinput.GameTextInput: void copyEditorInfo(android.view.inputmethod.EditorInfo,android.view.inputmethod.EditorInfo)>($r4, r1);

     label1:
        $r2 = r0.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection>;

        return $r2;
    }

    public android.view.inputmethod.EditorInfo getEditorInfo()
    {
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView r0;
        com.google.androidgamesdk.gametextinput.InputConnection $r1;
        android.view.inputmethod.EditorInfo $r2;

        r0 := @this: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView;

        $r1 = r0.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection>;

        $r2 = virtualinvoke $r1.<com.google.androidgamesdk.gametextinput.InputConnection: android.view.inputmethod.EditorInfo getEditorInfo()>();

        return $r2;
    }

    public void setEditorInfo(android.view.inputmethod.EditorInfo)
    {
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView r0;
        android.view.inputmethod.EditorInfo r1;
        com.google.androidgamesdk.gametextinput.InputConnection $r2;

        r0 := @this: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $r2 = r0.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection mInputConnection>;

        virtualinvoke $r2.<com.google.androidgamesdk.gametextinput.InputConnection: void setEditorInfo(android.view.inputmethod.EditorInfo)>(r1);

        return;
    }

    public volatile android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView r0;
        android.view.inputmethod.EditorInfo r1;
        com.google.androidgamesdk.gametextinput.InputConnection $r2;
        android.view.inputmethod.InputConnection r3;

        r0 := @this: com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $r2 = virtualinvoke r0.<com.google.androidgamesdk.GameActivity$InputEnabledSurfaceView: com.google.androidgamesdk.gametextinput.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>(r1);

        r3 = (android.view.inputmethod.InputConnection) $r2;

        return r3;
    }

