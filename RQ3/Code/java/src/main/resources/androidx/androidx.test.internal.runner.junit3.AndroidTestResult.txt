androidx.test.internal.runner.junit3.AndroidTestResult
<androidx.test.internal.runner.junit3.AndroidTestResult: android.app.Instrumentation instr>
<androidx.test.internal.runner.junit3.AndroidTestResult: android.os.Bundle bundle>
<androidx.test.internal.runner.junit3.AndroidTestResult: long timeout>
    void <init>(android.os.Bundle, android.app.Instrumentation, junit.framework.TestResult)
    {
        androidx.test.internal.runner.junit3.AndroidTestResult r0;
        android.os.Bundle r1;
        android.app.Instrumentation r2;
        junit.framework.TestResult r3;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestResult;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.app.Instrumentation;

        r3 := @parameter2: junit.framework.TestResult;

        specialinvoke r0.<androidx.test.internal.runner.junit3.DelegatingTestResult: void <init>(junit.framework.TestResult)>(r3);

        r0.<androidx.test.internal.runner.junit3.AndroidTestResult: android.os.Bundle bundle> = r1;

        r0.<androidx.test.internal.runner.junit3.AndroidTestResult: android.app.Instrumentation instr> = r2;

        return;
    }

    protected void run(junit.framework.TestCase)
    {
        androidx.test.internal.runner.junit3.AndroidTestResult r0;
        junit.framework.TestCase r1;
        boolean $z0, $z1;
        android.app.Instrumentation $r2, $r4;
        android.test.InstrumentationTestCase $r3;
        android.test.AndroidTestCase $r5;
        android.content.Context $r6;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestResult;

        r1 := @parameter0: junit.framework.TestCase;

        $z0 = r1 instanceof android.test.AndroidTestCase;

        if $z0 == 0 goto label1;

        $r5 = (android.test.AndroidTestCase) r1;

        $r4 = r0.<androidx.test.internal.runner.junit3.AndroidTestResult: android.app.Instrumentation instr>;

        $r6 = virtualinvoke $r4.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        virtualinvoke $r5.<android.test.AndroidTestCase: void setContext(android.content.Context)>($r6);

     label1:
        $z1 = r1 instanceof android.test.InstrumentationTestCase;

        if $z1 == 0 goto label2;

        $r3 = (android.test.InstrumentationTestCase) r1;

        $r2 = r0.<androidx.test.internal.runner.junit3.AndroidTestResult: android.app.Instrumentation instr>;

        virtualinvoke $r3.<android.test.InstrumentationTestCase: void injectInstrumentation(android.app.Instrumentation)>($r2);

     label2:
        specialinvoke r0.<androidx.test.internal.runner.junit3.DelegatingTestResult: void run(junit.framework.TestCase)>(r1);

        return;
    }

    public void runProtected(junit.framework.Test, junit.framework.Protectable)
    {
        androidx.test.internal.runner.junit3.AndroidTestResult r0;
        junit.framework.Test r1;
        junit.framework.Protectable r2;
        java.lang.Throwable $r3, $r4, $r9, $r10, r11, r12, r13, r14;
        java.util.concurrent.TimeoutException $r5;
        java.lang.Object[] $r6;
        long $l0;
        java.lang.Long $r7;
        java.lang.String $r8;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestResult;

        r1 := @parameter0: junit.framework.Test;

        r2 := @parameter1: junit.framework.Protectable;

     label1:
        interfaceinvoke r2.<junit.framework.Protectable: void protect()>();

     label2:
        goto label7;

     label3:
        $r9 := @caughtexception;

        r11 = $r9;

        specialinvoke r0.<androidx.test.internal.runner.junit3.DelegatingTestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>(r1, r11);

        goto label7;

     label4:
        $r3 := @caughtexception;

        r12 = $r3;

        throw r12;

     label5:
        $r4 := @caughtexception;

        r13 = $r4;

        $r5 = new java.util.concurrent.TimeoutException;

        $r6 = newarray (java.lang.Object)[1];

        $l0 = r0.<androidx.test.internal.runner.junit3.AndroidTestResult: long timeout>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Test timed out after %d milliseconds", $r6);

        specialinvoke $r5.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r8);

        specialinvoke r0.<androidx.test.internal.runner.junit3.DelegatingTestResult: void addError(junit.framework.Test,java.lang.Throwable)>(r1, $r5);

        goto label7;

     label6:
        $r10 := @caughtexception;

        r14 = $r10;

        specialinvoke r0.<androidx.test.internal.runner.junit3.DelegatingTestResult: void addError(junit.framework.Test,java.lang.Throwable)>(r1, r14);

     label7:
        return;

        catch junit.framework.AssertionFailedError from label1 to label2 with label3;
        catch java.lang.ThreadDeath from label1 to label2 with label4;
        catch java.lang.InterruptedException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
    }

    void setCurrentTimeout(long)
    {
        androidx.test.internal.runner.junit3.AndroidTestResult r0;
        long l0;

        r0 := @this: androidx.test.internal.runner.junit3.AndroidTestResult;

        l0 := @parameter0: long;

        r0.<androidx.test.internal.runner.junit3.AndroidTestResult: long timeout> = l0;

        return;
    }

