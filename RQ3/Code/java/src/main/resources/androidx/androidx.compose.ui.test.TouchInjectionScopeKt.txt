androidx.compose.ui.test.TouchInjectionScopeKt
    public static final void click-Uv8p0NA(androidx.compose.ui.test.TouchInjectionScope, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        long l0;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$click");

        interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: void down-k-4lQ0M(long)>(l0);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScope: void move$default(androidx.compose.ui.test.TouchInjectionScope,long,int,java.lang.Object)>($r0, 0L, 1, null);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScope: void up$default(androidx.compose.ui.test.TouchInjectionScope,int,int,java.lang.Object)>($r0, 0, 1, null);

        return;
    }

    public static void click-Uv8p0NA$default(androidx.compose.ui.test.TouchInjectionScope, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        int i0, $i1;
        java.lang.Object r1;
        long l2;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l2 := @parameter1: long;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l2 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: long getCenter-F1C5BW0()>();

     label1:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.TouchInjectionScope,long)>(r0, l2);

        return;
    }

    public static final void longClick-d-4ec7I(androidx.compose.ui.test.TouchInjectionScope, long, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        long l0, l1, $l2, $l4;
        androidx.compose.ui.platform.ViewConfiguration $r1, $r4;
        byte $b3;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r9;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$longClick");

        $r1 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l2 = interfaceinvoke $r1.<androidx.compose.ui.platform.ViewConfiguration: long getLongPressTimeoutMillis()>();

        $b3 = l1 cmp $l2;

        if $b3 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Long click must have a duration of at least ");

        $r4 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l4 = interfaceinvoke $r4.<androidx.compose.ui.platform.ViewConfiguration: long getLongPressTimeoutMillis()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe-DUneCvk(androidx.compose.ui.test.TouchInjectionScope,long,long,long)>($r0, l0, l0, l1);

        return;
    }

    public static void longClick-d-4ec7I$default(androidx.compose.ui.test.TouchInjectionScope, long, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        androidx.compose.ui.platform.ViewConfiguration $r2;
        long $l3, $l4, l5, l6;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l5 := @parameter1: long;

        l6 := @parameter2: long;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l5 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: long getCenter-F1C5BW0()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        $r2 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l3 = interfaceinvoke $r2.<androidx.compose.ui.platform.ViewConfiguration: long getLongPressTimeoutMillis()>();

        $l4 = (long) 100;

        l6 = $l3 + $l4;

     label2:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void longClick-d-4ec7I(androidx.compose.ui.test.TouchInjectionScope,long,long)>(r0, l5, l6);

        return;
    }

    private static final long getDefaultDoubleTapDelayMillis(androidx.compose.ui.platform.ViewConfiguration)
    {
        androidx.compose.ui.platform.ViewConfiguration $r0;
        long $l0, $l1, $l2, $l3, $l4;

        $r0 := @parameter0: androidx.compose.ui.platform.ViewConfiguration;

        $l0 = interfaceinvoke $r0.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapMinTimeMillis()>();

        $l1 = interfaceinvoke $r0.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapTimeoutMillis()>();

        $l3 = $l0 + $l1;

        $l2 = (long) 2;

        $l4 = $l3 / $l2;

        return $l4;
    }

    public static final void doubleClick-d-4ec7I(androidx.compose.ui.test.TouchInjectionScope, long, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        long l0, l1, $l2, $l4, $l6, $l7;
        androidx.compose.ui.platform.ViewConfiguration $r1, $r2, $r5, $r12;
        byte $b3, $b5;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r10, $r11, $r13, $r14;
        java.lang.IllegalArgumentException $r8, $r15;
        java.lang.String $r9, $r16, $r17, $r18;
        boolean $z0, $z2;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$doubleClick");

        $r1 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l2 = interfaceinvoke $r1.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapMinTimeMillis()>();

        $b3 = l1 cmp $l2;

        if $b3 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time between clicks in double click must be at least ");

        $r12 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l7 = interfaceinvoke $r12.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapMinTimeMillis()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label3:
        $r2 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l4 = interfaceinvoke $r2.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapTimeoutMillis()>();

        $b5 = l1 cmp $l4;

        if $b5 >= 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 != 0 goto label6;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time between clicks in double click must be smaller than ");

        $r5 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        $l6 = interfaceinvoke $r5.<androidx.compose.ui.platform.ViewConfiguration: long getDoubleTapTimeoutMillis()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r18 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label6:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.TouchInjectionScope,long)>($r0, l0);

        interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: void advanceEventTime(long)>(l1);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void click-Uv8p0NA(androidx.compose.ui.test.TouchInjectionScope,long)>($r0, l0);

        return;
    }

    public static void doubleClick-d-4ec7I$default(androidx.compose.ui.test.TouchInjectionScope, long, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        androidx.compose.ui.platform.ViewConfiguration $r2;
        long l3, l4;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l3 := @parameter1: long;

        l4 := @parameter2: long;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l3 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: long getCenter-F1C5BW0()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        $r2 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        l4 = staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: long getDefaultDoubleTapDelayMillis(androidx.compose.ui.platform.ViewConfiguration)>($r2);

     label2:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void doubleClick-d-4ec7I(androidx.compose.ui.test.TouchInjectionScope,long,long)>(r0, l3, l4);

        return;
    }

    public static final void swipe-DUneCvk(androidx.compose.ui.test.TouchInjectionScope, long, long, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        long l0, l1, l2;
        float f0;
        androidx.compose.ui.test.TouchInjectionScopeKt$swipe$1 $r1;
        kotlin.jvm.functions.Function1 $r2;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$swipe");

        f0 = (float) l2;

        $r1 = new androidx.compose.ui.test.TouchInjectionScopeKt$swipe$1;

        specialinvoke $r1.<androidx.compose.ui.test.TouchInjectionScopeKt$swipe$1: void <init>(long,long,float)>(l0, l1, f0);

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe$default(androidx.compose.ui.test.TouchInjectionScope,kotlin.jvm.functions.Function1,long,java.util.List,int,java.lang.Object)>($r0, $r2, l2, null, 4, null);

        return;
    }

    public static void swipe-DUneCvk$default(androidx.compose.ui.test.TouchInjectionScope, long, long, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        long l0, l1, l4;
        int i2, $i3;
        java.lang.Object r1;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l4 := @parameter3: long;

        i2 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i3 = i2 & 4;

        if $i3 == 0 goto label1;

        l4 = 200L;

     label1:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe-DUneCvk(androidx.compose.ui.test.TouchInjectionScope,long,long,long)>(r0, l0, l1, l4);

        return;
    }

    public static final void swipe(androidx.compose.ui.test.TouchInjectionScope, kotlin.jvm.functions.Function1, long, java.util.List)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        kotlin.jvm.functions.Function1 r1;
        long l0;
        java.util.List r2, $r3;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        l0 := @parameter2: long;

        r2 := @parameter3: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "curve");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "keyTimes");

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r1);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void multiTouchSwipe(androidx.compose.ui.test.TouchInjectionScope,java.util.List,long,java.util.List)>($r0, $r3, l0, r2);

        return;
    }

    public static void swipe$default(androidx.compose.ui.test.TouchInjectionScope, kotlin.jvm.functions.Function1, long, java.util.List, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        kotlin.jvm.functions.Function1 r1;
        long l0;
        int i1, $i2;
        java.lang.Object r2;
        java.util.List r3;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        l0 := @parameter2: long;

        r3 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe(androidx.compose.ui.test.TouchInjectionScope,kotlin.jvm.functions.Function1,long,java.util.List)>(r0, r1, l0, r3);

        return;
    }

    public static final void multiTouchSwipe(androidx.compose.ui.test.TouchInjectionScope, java.util.List, long, java.util.List)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        java.util.List r1, r2;
        long l0, l1, l2, $l7, $l10, $l11, l14, l15, $l19, $l21, l22;
        kotlin.ranges.LongRange r3, $r4;
        byte $b3, $b4, $b8, $b12, $b13;
        boolean $z1, $z2, $z3, $z4, $z5, $z8, $z9, $z11, z14, $z16;
        java.lang.Iterable $r5, $r40, $r48;
        kotlin.sequences.Sequence $r6, $r44;
        androidx.compose.ui.test.TouchInjectionScopeKt$multiTouchSwipe$4 $r7;
        kotlin.jvm.functions.Function2 $r8;
        int $i5, $i6, $i9, i16, i18, i20, i23, i24;
        java.lang.Object $r9, $r11, $r14, r42, r46, r50;
        java.lang.Number $r10, $r12, $r32;
        java.lang.Long $r13;
        androidx.compose.ui.geometry.Offset $r15;
        kotlin.jvm.functions.Function1 $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r34, $r35, $r36;
        java.lang.IllegalArgumentException $r20, $r30, $r37;
        java.lang.String $r21, $r31, $r38, $r39, $r43, $r47;
        java.lang.Boolean $r22;
        java.util.Collection $r33;
        java.util.Iterator r41, r45, r49;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        r1 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        r2 := @parameter3: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "curves");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "keyTimes");

        l1 = 0L;

        l2 = l0;

        $b3 = l0 cmp 1L;

        if $b3 < 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        if $z5 != 0 goto label03;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duration must be at least 1 millisecond, not ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = new java.lang.IllegalArgumentException;

        $r38 = virtualinvoke $r39.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38);

        throw $r37;

     label03:
        $r4 = new kotlin.ranges.LongRange;

        specialinvoke $r4.<kotlin.ranges.LongRange: void <init>(long,long)>(l1, l2);

        r3 = $r4;

        $r40 = (java.lang.Iterable) r2;

        $z1 = $r40 instanceof java.util.Collection;

        if $z1 == 0 goto label04;

        $r33 = (java.util.Collection) $r40;

        $z4 = interfaceinvoke $r33.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label04;

        $z8 = 1;

        goto label10;

     label04:
        r41 = interfaceinvoke $r40.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z9 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label09;

        r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (java.lang.Number) r42;

        l14 = virtualinvoke $r32.<java.lang.Number: long longValue()>();

        l15 = virtualinvoke r3.<kotlin.ranges.LongRange: long getFirst()>();

        $l11 = virtualinvoke r3.<kotlin.ranges.LongRange: long getLast()>();

        $b12 = l14 cmp $l11;

        if $b12 > 0 goto label07;

        $b13 = l15 cmp l14;

        if $b13 > 0 goto label06;

        $z11 = 1;

        goto label08;

     label06:
        $z11 = 0;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        if $z11 != 0 goto label05;

        $z8 = 0;

        goto label10;

     label09:
        $z8 = 1;

     label10:
        if $z8 != 0 goto label11;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keyTimes contains timestamps out of range [");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r43 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new java.lang.IllegalArgumentException;

        $r31 = virtualinvoke $r43.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r30;

     label11:
        $r5 = (java.lang.Iterable) r2;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r5);

        $r7 = <androidx.compose.ui.test.TouchInjectionScopeKt$multiTouchSwipe$4: androidx.compose.ui.test.TouchInjectionScopeKt$multiTouchSwipe$4 INSTANCE>;

        $r8 = (kotlin.jvm.functions.Function2) $r7;

        $r44 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)>($r6, $r8);

        r45 = interfaceinvoke $r44.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label12:
        $z2 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        r46 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        $r22 = (java.lang.Boolean) r46;

        z14 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        if z14 != 0 goto label12;

        $z16 = 0;

        goto label14;

     label13:
        $z16 = 1;

     label14:
        if $z16 != 0 goto label15;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keyTimes must be sorted: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r47 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = virtualinvoke $r47.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label15:
        $r48 = (java.lang.Iterable) r1;

        i16 = 0;

        r49 = interfaceinvoke $r48.<java.lang.Iterable: java.util.Iterator iterator()>();

     label16:
        $z3 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        r50 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        $i9 = i16;

        i16 = i16 + 1;

        if $i9 >= 0 goto label17;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label17:
        i18 = $i9;

        $r16 = (kotlin.jvm.functions.Function1) r50;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r14 = interfaceinvoke $r16.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r13);

        $r15 = (androidx.compose.ui.geometry.Offset) $r14;

        $l10 = virtualinvoke $r15.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: void down-Uv8p0NA(int,long)>(i18, $l10);

        goto label16;

     label18:
        $l19 = l1;

        i20 = 0;

     label19:
        $b4 = $l19 cmp l2;

        if $b4 >= 0 goto label24;

     label20:
        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        if i20 >= $i5 goto label21;

        $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i20);

        $r12 = (java.lang.Number) $r11;

        $l7 = virtualinvoke $r12.<java.lang.Number: long longValue()>();

        $b8 = $l7 cmp $l19;

        if $b8 > 0 goto label21;

        i20 = i20 + 1;

        goto label20;

     label21:
        $i6 = interfaceinvoke r2.<java.util.List: int size()>();

        if i20 >= $i6 goto label22;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i20);

        $r10 = (java.lang.Number) $r9;

        $l21 = virtualinvoke $r10.<java.lang.Number: long longValue()>();

        goto label23;

     label22:
        $l21 = l2;

     label23:
        l22 = $l21;

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void sendMultiTouchSwipeSegment(androidx.compose.ui.test.TouchInjectionScope,java.util.List,long,long)>($r0, r1, $l19, l22);

        $l19 = l22;

        goto label19;

     label24:
        i23 = interfaceinvoke r1.<java.util.List: int size()>();

        i24 = 0;

     label25:
        if i24 >= i23 goto label26;

        interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: void up(int)>(i24);

        i24 = i24 + 1;

        goto label25;

     label26:
        return;
    }

    public static void multiTouchSwipe$default(androidx.compose.ui.test.TouchInjectionScope, java.util.List, long, java.util.List, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        java.util.List r1, r3;
        long l0;
        int i1, $i2;
        java.lang.Object r2;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        r1 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        r3 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void multiTouchSwipe(androidx.compose.ui.test.TouchInjectionScope,java.util.List,long,java.util.List)>(r0, r1, l0, r3);

        return;
    }

    private static final void sendMultiTouchSwipeSegment(androidx.compose.ui.test.TouchInjectionScope, java.util.List, long, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        java.util.List r1;
        long l0, l1, l3, $l6, $l7, $l10, $l12, l14;
        int i2, i4, i5, $i8, $i9, $i11, i13, i15;
        float f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r7;
        kotlin.jvm.functions.Function1 r5;
        boolean $z2;
        java.lang.Long $r6;
        androidx.compose.ui.geometry.Offset $r8;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        r1 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i13 = 0;

        $l6 = l1 - l0;

        $f1 = (float) $l6;

        $l7 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: long getEventPeriodMillis()>();

        $f2 = (float) $l7;

        $f3 = $f1 / $f2;

        $i8 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f3);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i8);

        l14 = l0;

     label1:
        $i9 = i13;

        i13 = i13 + 1;

        if $i9 >= i2 goto label5;

        $f5 = (float) i13;

        $f4 = (float) i2;

        f0 = $f5 / $f4;

        l3 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: long lerp(long,long,float)>(l0, l1, f0);

        $r2 = (java.lang.Iterable) r1;

        i15 = 0;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $i11 = i15;

        i15 = i15 + 1;

        i4 = $i11;

        if i4 >= 0 goto label3;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label3:
        r5 = (kotlin.jvm.functions.Function1) r4;

        i5 = i4;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r7 = interfaceinvoke r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $r8 = (androidx.compose.ui.geometry.Offset) $r7;

        $l12 = virtualinvoke $r8.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: void updatePointerTo-Uv8p0NA(int,long)>(i5, $l12);

        goto label2;

     label4:
        $l10 = l3 - l14;

        interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: void move(long)>($l10);

        l14 = l3;

        goto label1;

     label5:
        return;
    }

    public static final void pinch-_QUENCA(androidx.compose.ui.test.TouchInjectionScope, long, long, long, long, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        long l0, l1, l2, l3, l4;
        float f0;
        kotlin.jvm.functions.Function1[] r1;
        androidx.compose.ui.test.TouchInjectionScopeKt$pinch$1 $r2;
        kotlin.jvm.functions.Function1 $r3, $r5;
        androidx.compose.ui.test.TouchInjectionScopeKt$pinch$2 $r4;
        java.util.List $r6;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$pinch");

        f0 = (float) l4;

        r1 = newarray (kotlin.jvm.functions.Function1)[2];

        $r2 = new androidx.compose.ui.test.TouchInjectionScopeKt$pinch$1;

        specialinvoke $r2.<androidx.compose.ui.test.TouchInjectionScopeKt$pinch$1: void <init>(long,long,float)>(l0, l1, f0);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        r1[0] = $r3;

        $r4 = new androidx.compose.ui.test.TouchInjectionScopeKt$pinch$2;

        specialinvoke $r4.<androidx.compose.ui.test.TouchInjectionScopeKt$pinch$2: void <init>(long,long,float)>(l2, l3, f0);

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        r1[1] = $r5;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r1);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void multiTouchSwipe$default(androidx.compose.ui.test.TouchInjectionScope,java.util.List,long,java.util.List,int,java.lang.Object)>($r0, $r6, l4, null, 4, null);

        return;
    }

    public static void pinch-_QUENCA$default(androidx.compose.ui.test.TouchInjectionScope, long, long, long, long, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        long l0, l1, l2, l3, l6;
        int i4, $i5;
        java.lang.Object r1;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        l6 := @parameter5: long;

        i4 := @parameter6: int;

        r1 := @parameter7: java.lang.Object;

        $i5 = i4 & 16;

        if $i5 == 0 goto label1;

        l6 = 400L;

     label1:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void pinch-_QUENCA(androidx.compose.ui.test.TouchInjectionScope,long,long,long,long,long)>(r0, l0, l1, l2, l3, l6);

        return;
    }

    public static final void swipeWithVelocity-5iVPX68(androidx.compose.ui.test.TouchInjectionScope, long, long, float, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        long l0, l1, l2, l3, $l5, $l7;
        float f0, $f1, $f2, $f3;
        androidx.compose.ui.test.VelocityPathFinder r1, $r2;
        byte $b4, $b6, $b8;
        double $d0, $d1;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15;
        java.lang.IllegalArgumentException $r8, $r10, $r16;
        java.lang.String $r9, $r11, $r17, $r18, $r19, $r20;
        boolean $z0, $z2, $z4;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        f0 := @parameter3: float;

        l2 := @parameter4: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$swipeWithVelocity");

        $b4 = f0 cmpl 0.0F;

        if $b4 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Velocity cannot be ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", it must be positive");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label3:
        $l5 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: long getEventPeriodMillis()>();

        $b6 = $l5 cmp 40L;

        if $b6 >= 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 != 0 goto label6;

        $r19 = "InputDispatcher.eventPeriod must be smaller than 40ms in order to generate velocities";

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label6:
        $l7 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: long getEventPeriodMillis()>();

        $f1 = (float) $l7;

        $f2 = 2.5F * $f1;

        $d0 = (double) $f2;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f3 = (float) $d1;

        l3 = staticinvoke <kotlin.math.MathKt: long roundToLong(float)>($f3);

        $b8 = l2 cmp l3;

        if $b8 < 0 goto label7;

        $z4 = 1;

        goto label8;

     label7:
        $z4 = 0;

     label8:
        if $z4 != 0 goto label9;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration must be at least ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms because velocity requires at least 3 input events");

        $r20 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label9:
        $r2 = new androidx.compose.ui.test.VelocityPathFinder;

        specialinvoke $r2.<androidx.compose.ui.test.VelocityPathFinder: void <init>(long,long,float,long,kotlin.jvm.internal.DefaultConstructorMarker)>(l0, l1, f0, l2, null);

        r1 = $r2;

        $r3 = virtualinvoke r1.<androidx.compose.ui.test.VelocityPathFinder: kotlin.jvm.functions.Function1 generateFunction()>();

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe$default(androidx.compose.ui.test.TouchInjectionScope,kotlin.jvm.functions.Function1,long,java.util.List,int,java.lang.Object)>($r0, $r3, l2, null, 4, null);

        return;
    }

    public static void swipeWithVelocity-5iVPX68$default(androidx.compose.ui.test.TouchInjectionScope, long, long, float, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        long l0, l1, l4;
        float f0;
        int i2, $i3;
        java.lang.Object r1;
        androidx.compose.ui.test.VelocityPathFinder$Companion $r2;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        f0 := @parameter3: float;

        l4 := @parameter4: long;

        i2 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i3 = i2 & 8;

        if $i3 == 0 goto label1;

        $r2 = <androidx.compose.ui.test.VelocityPathFinder: androidx.compose.ui.test.VelocityPathFinder$Companion Companion>;

        l4 = virtualinvoke $r2.<androidx.compose.ui.test.VelocityPathFinder$Companion: long calculateDefaultDuration-Wko1d7g(long,long,float)>(l0, l1, f0);

     label1:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipeWithVelocity-5iVPX68(androidx.compose.ui.test.TouchInjectionScope,long,long,float,long)>(r0, l0, l1, f0, l4);

        return;
    }

    public static final void swipeUp(androidx.compose.ui.test.TouchInjectionScope, float, float, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        float f0, f1, $f2, $f3;
        long l0, l1, l2;
        byte $b3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l0 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b3 = f0 cmpl f1;

        if $b3 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startY=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to be greater than or equal to endY=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $f2 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: float getCenterX()>();

        l1 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f2, f0);

        $f3 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: float getCenterX()>();

        l2 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f3, f1);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe-DUneCvk(androidx.compose.ui.test.TouchInjectionScope,long,long,long)>($r0, l1, l2, l0);

        return;
    }

    public static void swipeUp$default(androidx.compose.ui.test.TouchInjectionScope, float, float, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        float f0, f1;
        long l4;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l4 := @parameter3: long;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: float getBottom()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: float getTop()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        l4 = 200L;

     label3:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipeUp(androidx.compose.ui.test.TouchInjectionScope,float,float,long)>(r0, f0, f1, l4);

        return;
    }

    public static final void swipeDown(androidx.compose.ui.test.TouchInjectionScope, float, float, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        float f0, f1, $f2, $f3;
        long l0, l1, l2;
        byte $b3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l0 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b3 = f0 cmpg f1;

        if $b3 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startY=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to be less than or equal to endY=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $f2 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: float getCenterX()>();

        l1 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f2, f0);

        $f3 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: float getCenterX()>();

        l2 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f3, f1);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe-DUneCvk(androidx.compose.ui.test.TouchInjectionScope,long,long,long)>($r0, l1, l2, l0);

        return;
    }

    public static void swipeDown$default(androidx.compose.ui.test.TouchInjectionScope, float, float, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        float f0, f1;
        long l4;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l4 := @parameter3: long;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: float getTop()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: float getBottom()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        l4 = 200L;

     label3:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipeDown(androidx.compose.ui.test.TouchInjectionScope,float,float,long)>(r0, f0, f1, l4);

        return;
    }

    public static final void swipeLeft(androidx.compose.ui.test.TouchInjectionScope, float, float, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        float f0, f1, $f2, $f3;
        long l0, l1, l2;
        byte $b3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l0 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b3 = f0 cmpl f1;

        if $b3 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startX=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to be greater than or equal to endX=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $f2 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: float getCenterY()>();

        l1 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>(f0, $f2);

        $f3 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: float getCenterY()>();

        l2 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>(f1, $f3);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe-DUneCvk(androidx.compose.ui.test.TouchInjectionScope,long,long,long)>($r0, l1, l2, l0);

        return;
    }

    public static void swipeLeft$default(androidx.compose.ui.test.TouchInjectionScope, float, float, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        float f0, f1;
        long l4;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l4 := @parameter3: long;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: float getRight()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: float getLeft()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        l4 = 200L;

     label3:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipeLeft(androidx.compose.ui.test.TouchInjectionScope,float,float,long)>(r0, f0, f1, l4);

        return;
    }

    public static final void swipeRight(androidx.compose.ui.test.TouchInjectionScope, float, float, long)
    {
        androidx.compose.ui.test.TouchInjectionScope $r0;
        float f0, f1, $f2, $f3;
        long l0, l1, l2;
        byte $b3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l0 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b3 = f0 cmpg f1;

        if $b3 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startX=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to be less than or equal to endX=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $f2 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: float getCenterY()>();

        l1 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>(f0, $f2);

        $f3 = interfaceinvoke $r0.<androidx.compose.ui.test.TouchInjectionScope: float getCenterY()>();

        l2 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>(f1, $f3);

        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipe-DUneCvk(androidx.compose.ui.test.TouchInjectionScope,long,long,long)>($r0, l1, l2, l0);

        return;
    }

    public static void swipeRight$default(androidx.compose.ui.test.TouchInjectionScope, float, float, long, int, java.lang.Object)
    {
        androidx.compose.ui.test.TouchInjectionScope r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        float f0, f1;
        long l4;

        r0 := @parameter0: androidx.compose.ui.test.TouchInjectionScope;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l4 := @parameter3: long;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: float getLeft()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = interfaceinvoke r0.<androidx.compose.ui.test.TouchInjectionScope: float getRight()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        l4 = 200L;

     label3:
        staticinvoke <androidx.compose.ui.test.TouchInjectionScopeKt: void swipeRight(androidx.compose.ui.test.TouchInjectionScope,float,float,long)>(r0, f0, f1, l4);

        return;
    }

