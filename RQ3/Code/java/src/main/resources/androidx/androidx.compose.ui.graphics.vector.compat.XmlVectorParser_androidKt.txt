androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int LINECAP_BUTT>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int LINECAP_ROUND>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int LINECAP_SQUARE>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int LINEJOIN_MITER>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int LINEJOIN_ROUND>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int LINEJOIN_BEVEL>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int FILL_TYPE_WINDING>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: java.lang.String SHAPE_CLIP_PATH>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: java.lang.String SHAPE_GROUP>
<androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: java.lang.String SHAPE_PATH>
    private static final int getStrokeLineCap-CSYIeUk(int, int)
    {
        int i0, i1, $i2;
        androidx.compose.ui.graphics.StrokeCap$Companion $r0, $r1, $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = <androidx.compose.ui.graphics.StrokeCap: androidx.compose.ui.graphics.StrokeCap$Companion Companion>;

        $i2 = virtualinvoke $r2.<androidx.compose.ui.graphics.StrokeCap$Companion: int getButt-KaPHkGw()>();

        goto label5;

     label2:
        $r1 = <androidx.compose.ui.graphics.StrokeCap: androidx.compose.ui.graphics.StrokeCap$Companion Companion>;

        $i2 = virtualinvoke $r1.<androidx.compose.ui.graphics.StrokeCap$Companion: int getRound-KaPHkGw()>();

        goto label5;

     label3:
        $r0 = <androidx.compose.ui.graphics.StrokeCap: androidx.compose.ui.graphics.StrokeCap$Companion Companion>;

        $i2 = virtualinvoke $r0.<androidx.compose.ui.graphics.StrokeCap$Companion: int getSquare-KaPHkGw()>();

        goto label5;

     label4:
        $i2 = i1;

     label5:
        return $i2;
    }

    static int getStrokeLineCap-CSYIeUk$default(int, int, int, java.lang.Object)
    {
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r0;
        androidx.compose.ui.graphics.StrokeCap$Companion $r1;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        $r1 = <androidx.compose.ui.graphics.StrokeCap: androidx.compose.ui.graphics.StrokeCap$Companion Companion>;

        i4 = virtualinvoke $r1.<androidx.compose.ui.graphics.StrokeCap$Companion: int getButt-KaPHkGw()>();

     label1:
        $i3 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int getStrokeLineCap-CSYIeUk(int,int)>(i0, i4);

        return $i3;
    }

    private static final int getStrokeLineJoin-kLtJ_vA(int, int)
    {
        int i0, i1, $i2;
        androidx.compose.ui.graphics.StrokeJoin$Companion $r0, $r1, $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = <androidx.compose.ui.graphics.StrokeJoin: androidx.compose.ui.graphics.StrokeJoin$Companion Companion>;

        $i2 = virtualinvoke $r2.<androidx.compose.ui.graphics.StrokeJoin$Companion: int getMiter-LxFBmk8()>();

        goto label5;

     label2:
        $r1 = <androidx.compose.ui.graphics.StrokeJoin: androidx.compose.ui.graphics.StrokeJoin$Companion Companion>;

        $i2 = virtualinvoke $r1.<androidx.compose.ui.graphics.StrokeJoin$Companion: int getRound-LxFBmk8()>();

        goto label5;

     label3:
        $r0 = <androidx.compose.ui.graphics.StrokeJoin: androidx.compose.ui.graphics.StrokeJoin$Companion Companion>;

        $i2 = virtualinvoke $r0.<androidx.compose.ui.graphics.StrokeJoin$Companion: int getBevel-LxFBmk8()>();

        goto label5;

     label4:
        $i2 = i1;

     label5:
        return $i2;
    }

    static int getStrokeLineJoin-kLtJ_vA$default(int, int, int, java.lang.Object)
    {
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r0;
        androidx.compose.ui.graphics.StrokeJoin$Companion $r1;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        $r1 = <androidx.compose.ui.graphics.StrokeJoin: androidx.compose.ui.graphics.StrokeJoin$Companion Companion>;

        i4 = virtualinvoke $r1.<androidx.compose.ui.graphics.StrokeJoin$Companion: int getMiter-LxFBmk8()>();

     label1:
        $i3 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int getStrokeLineJoin-kLtJ_vA(int,int)>(i0, i4);

        return $i3;
    }

    public static final boolean isAtEnd(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 1 goto label1;

        $i1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 >= 1 goto label2;

        $i2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 != 3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static final int parseCurrentVectorNode(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser, android.content.res.Resources, android.util.AttributeSet, android.content.res.Resources$Theme, androidx.compose.ui.graphics.vector.ImageVector$Builder, int)
    {
        androidx.compose.ui.graphics.vector.compat.AndroidVectorParser $r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        androidx.compose.ui.graphics.vector.ImageVector$Builder r4;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        org.xmlpull.v1.XmlPullParser $r5, $r6, $r9;
        java.lang.String $r7, r10;
        boolean $z1, $z2, $z3, $z4;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.compat.AndroidVectorParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        r4 := @parameter4: androidx.compose.ui.graphics.vector.ImageVector$Builder;

        i0 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "attrs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "builder");

        $r5 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: org.xmlpull.v1.XmlPullParser getXmlParser()>();

        $i2 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        tableswitch($i2)
        {
            case 2: goto label01;
            case 3: goto label09;
            default: goto label12;
        };

     label01:
        $r9 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: org.xmlpull.v1.XmlPullParser getXmlParser()>();

        r10 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if r10 == null goto label12;

        $i3 = virtualinvoke r10.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -1649314686: goto label03;
            case 3433509: goto label02;
            case 98629247: goto label04;
            default: goto label08;
        };

     label02:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("path");

        if $z3 != 0 goto label05;

        goto label12;

     label03:
        $z4 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("clip-path");

        if $z4 != 0 goto label06;

        goto label12;

     label04:
        $z2 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z2 != 0 goto label07;

        goto label12;

     label05:
        staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: void parsePath(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,androidx.compose.ui.graphics.vector.ImageVector$Builder)>($r0, r1, r3, r2, r4);

        goto label12;

     label06:
        staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: void parseClipPath(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,androidx.compose.ui.graphics.vector.ImageVector$Builder)>($r0, r1, r3, r2, r4);

        $i4 = i0 + 1;

        return $i4;

     label07:
        staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: void parseGroup(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,androidx.compose.ui.graphics.vector.ImageVector$Builder)>($r0, r1, r3, r2, r4);

     label08:
        goto label12;

     label09:
        $r6 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: org.xmlpull.v1.XmlPullParser getXmlParser()>();

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>("group", $r7);

        if $z1 == 0 goto label12;

        i5 = i0 + 1;

        i6 = 0;

     label10:
        if i6 >= i5 goto label11;

        i1 = i6;

        virtualinvoke r4.<androidx.compose.ui.graphics.vector.ImageVector$Builder: androidx.compose.ui.graphics.vector.ImageVector$Builder clearGroup()>();

        i6 = i6 + 1;

        goto label10;

     label11:
        return 0;

     label12:
        return i0;
    }

    public static int parseCurrentVectorNode$default(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser, android.content.res.Resources, android.util.AttributeSet, android.content.res.Resources$Theme, androidx.compose.ui.graphics.vector.ImageVector$Builder, int, int, java.lang.Object)
    {
        androidx.compose.ui.graphics.vector.compat.AndroidVectorParser r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        androidx.compose.ui.graphics.vector.ImageVector$Builder r3;
        int i0, i1, $i2, $i3;
        java.lang.Object r4;
        android.content.res.Resources$Theme r5;

        r0 := @parameter0: androidx.compose.ui.graphics.vector.compat.AndroidVectorParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.util.AttributeSet;

        r5 := @parameter3: android.content.res.Resources$Theme;

        r3 := @parameter4: androidx.compose.ui.graphics.vector.ImageVector$Builder;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        r4 := @parameter7: java.lang.Object;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r5 = null;

     label1:
        $i3 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int parseCurrentVectorNode(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser,android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,androidx.compose.ui.graphics.vector.ImageVector$Builder,int)>(r0, r1, r2, r5, r3, i0);

        return $i3;
    }

    public static final org.xmlpull.v1.XmlPullParser seekToStartTag(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        org.xmlpull.v1.XmlPullParserException $r1;
        int i0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r1 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r1;

     label3:
        return $r0;
    }

    public static final androidx.compose.ui.graphics.vector.ImageVector$Builder createVectorImageBuilder(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet)
    {
        androidx.compose.ui.graphics.vector.compat.AndroidVectorParser $r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4;
        boolean z0, $z2;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9;
        long l0, $l13;
        androidx.compose.ui.graphics.vector.compat.AndroidVectorResources $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r23, $r24, $r41;
        int[] $r6;
        int $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, i15, $i16, i17;
        byte $b4, $b5;
        androidx.compose.ui.graphics.Color$Companion $r13, $r25, $r26;
        androidx.compose.ui.graphics.BlendMode$Companion $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        android.util.TypedValue $r22, r39;
        org.xmlpull.v1.XmlPullParserException $r27, $r33;
        java.lang.StringBuilder $r28, $r30, $r31, $r34, $r36, $r37;
        java.lang.String $r29, $r32, $r35, $r38;
        android.content.res.ColorStateList r40;
        android.util.DisplayMetrics $r42, $r43;
        androidx.compose.ui.graphics.vector.ImageVector$Builder $r44;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.compat.AndroidVectorParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 := @parameter3: android.util.AttributeSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "attrs");

        $r5 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int[] getSTYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY()>();

        r4 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r2, r3, $r6);

        $r7 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i1 = virtualinvoke $r7.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED()>();

        z0 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: boolean getNamedBoolean(android.content.res.TypedArray,java.lang.String,int,boolean)>(r4, "autoMirrored", $i1, 0);

        $r8 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i2 = virtualinvoke $r8.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH()>();

        f0 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r4, "viewportWidth", $i2, 0.0F);

        $r9 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i3 = virtualinvoke $r9.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT()>();

        f1 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r4, "viewportHeight", $i3, 0.0F);

        $b4 = f0 cmpg 0.0F;

        if $b4 > 0 goto label01;

        $r33 = new org.xmlpull.v1.XmlPullParserException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<VectorGraphic> tag requires viewportWidth > 0");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r38);

        throw $r33;

     label01:
        $b5 = f1 cmpg 0.0F;

        if $b5 > 0 goto label02;

        $r27 = new org.xmlpull.v1.XmlPullParserException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<VectorGraphic> tag requires viewportHeight > 0");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r32);

        throw $r27;

     label02:
        $r10 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i6 = virtualinvoke $r10.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_WIDTH()>();

        f2 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getDimension(android.content.res.TypedArray,int,float)>(r4, $i6, 0.0F);

        $r11 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i7 = virtualinvoke $r11.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_HEIGHT()>();

        f3 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getDimension(android.content.res.TypedArray,int,float)>(r4, $i7, 0.0F);

        $r12 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i8 = virtualinvoke $r12.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_TINT()>();

        $z2 = virtualinvoke r4.<android.content.res.TypedArray: boolean hasValue(int)>($i8);

        if $z2 == 0 goto label05;

        $r22 = new android.util.TypedValue;

        specialinvoke $r22.<android.util.TypedValue: void <init>()>();

        r39 = $r22;

        $r23 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i9 = virtualinvoke $r23.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_TINT()>();

        virtualinvoke r4.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i9, r39);

        $i10 = r39.<android.util.TypedValue: int type>;

        if $i10 != 2 goto label03;

        $r26 = <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color$Companion Companion>;

        $l13 = virtualinvoke $r26.<androidx.compose.ui.graphics.Color$Companion: long getUnspecified-0d7_KjU()>();

        goto label06;

     label03:
        $r24 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i11 = virtualinvoke $r24.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_TINT()>();

        r40 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,android.content.res.Resources$Theme,java.lang.String,int)>(r4, r2, "tint", $i11);

        if r40 == null goto label04;

        $i12 = virtualinvoke r40.<android.content.res.ColorStateList: int getDefaultColor()>();

        $l13 = staticinvoke <androidx.compose.ui.graphics.ColorKt: long Color(int)>($i12);

        goto label06;

     label04:
        $r25 = <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color$Companion Companion>;

        $l13 = virtualinvoke $r25.<androidx.compose.ui.graphics.Color$Companion: long getUnspecified-0d7_KjU()>();

        goto label06;

     label05:
        $r13 = <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color$Companion Companion>;

        $l13 = virtualinvoke $r13.<androidx.compose.ui.graphics.Color$Companion: long getUnspecified-0d7_KjU()>();

     label06:
        l0 = $l13;

        $r41 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i14 = virtualinvoke $r41.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_TINT_MODE()>();

        i15 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: int getInt(android.content.res.TypedArray,int,int)>(r4, $i14, -1);

        if i15 == -1 goto label14;

        lookupswitch(i15)
        {
            case 3: goto label07;
            case 5: goto label08;
            case 9: goto label09;
            case 14: goto label10;
            case 15: goto label11;
            case 16: goto label12;
            default: goto label13;
        };

     label07:
        $r20 = <androidx.compose.ui.graphics.BlendMode: androidx.compose.ui.graphics.BlendMode$Companion Companion>;

        $i16 = virtualinvoke $r20.<androidx.compose.ui.graphics.BlendMode$Companion: int getSrcOver-0nO6VwU()>();

        goto label15;

     label08:
        $r19 = <androidx.compose.ui.graphics.BlendMode: androidx.compose.ui.graphics.BlendMode$Companion Companion>;

        $i16 = virtualinvoke $r19.<androidx.compose.ui.graphics.BlendMode$Companion: int getSrcIn-0nO6VwU()>();

        goto label15;

     label09:
        $r18 = <androidx.compose.ui.graphics.BlendMode: androidx.compose.ui.graphics.BlendMode$Companion Companion>;

        $i16 = virtualinvoke $r18.<androidx.compose.ui.graphics.BlendMode$Companion: int getSrcAtop-0nO6VwU()>();

        goto label15;

     label10:
        $r17 = <androidx.compose.ui.graphics.BlendMode: androidx.compose.ui.graphics.BlendMode$Companion Companion>;

        $i16 = virtualinvoke $r17.<androidx.compose.ui.graphics.BlendMode$Companion: int getModulate-0nO6VwU()>();

        goto label15;

     label11:
        $r16 = <androidx.compose.ui.graphics.BlendMode: androidx.compose.ui.graphics.BlendMode$Companion Companion>;

        $i16 = virtualinvoke $r16.<androidx.compose.ui.graphics.BlendMode$Companion: int getScreen-0nO6VwU()>();

        goto label15;

     label12:
        $r15 = <androidx.compose.ui.graphics.BlendMode: androidx.compose.ui.graphics.BlendMode$Companion Companion>;

        $i16 = virtualinvoke $r15.<androidx.compose.ui.graphics.BlendMode$Companion: int getPlus-0nO6VwU()>();

        goto label15;

     label13:
        $r21 = <androidx.compose.ui.graphics.BlendMode: androidx.compose.ui.graphics.BlendMode$Companion Companion>;

        $i16 = virtualinvoke $r21.<androidx.compose.ui.graphics.BlendMode$Companion: int getSrcIn-0nO6VwU()>();

        goto label15;

     label14:
        $r14 = <androidx.compose.ui.graphics.BlendMode: androidx.compose.ui.graphics.BlendMode$Companion Companion>;

        $i16 = virtualinvoke $r14.<androidx.compose.ui.graphics.BlendMode$Companion: int getSrcIn-0nO6VwU()>();

     label15:
        i17 = $i16;

        $r42 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f5 = $r42.<android.util.DisplayMetrics: float density>;

        $f6 = f2 / $f5;

        f4 = staticinvoke <androidx.compose.ui.unit.Dp: float constructor-impl(float)>($f6);

        $r43 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f7 = $r43.<android.util.DisplayMetrics: float density>;

        $f8 = f3 / $f7;

        $f9 = staticinvoke <androidx.compose.ui.unit.Dp: float constructor-impl(float)>($f8);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r44 = new androidx.compose.ui.graphics.vector.ImageVector$Builder;

        specialinvoke $r44.<androidx.compose.ui.graphics.vector.ImageVector$Builder: void <init>(java.lang.String,float,float,float,float,long,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, f4, $f9, f0, f1, l0, i17, z0, 1, null);

        return $r44;
    }

    public static final void parsePath(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, androidx.compose.ui.graphics.vector.ImageVector$Builder) throws java.lang.IllegalArgumentException
    {
        androidx.compose.ui.graphics.vector.compat.AndroidVectorParser $r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        androidx.compose.ui.graphics.vector.ImageVector$Builder r4;
        android.content.res.TypedArray r5;
        boolean z0;
        java.lang.String r6, r7, $r36;
        java.util.List r8;
        androidx.core.content.res.ComplexColorCompat r9, r10;
        float f0, f1, f2, f3, f4, f5, f6;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        androidx.compose.ui.graphics.Brush r11, r12;
        androidx.compose.ui.graphics.vector.compat.AndroidVectorResources $r13, $r16, $r17, $r18, $r19, $r20, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        int[] $r14;
        org.xmlpull.v1.XmlPullParser $r15;
        androidx.compose.ui.graphics.StrokeCap$Companion $r21;
        androidx.compose.ui.graphics.StrokeJoin$Companion $r23;
        androidx.compose.ui.graphics.PathFillType$Companion $r32, $r34;
        java.lang.IllegalArgumentException $r35;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.compat.AndroidVectorParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 := @parameter3: android.util.AttributeSet;

        r4 := @parameter4: androidx.compose.ui.graphics.vector.ImageVector$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "attrs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "builder");

        $r13 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $r14 = virtualinvoke $r13.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int[] getSTYLEABLE_VECTOR_DRAWABLE_PATH()>();

        r5 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r2, r3, $r14);

        $r15 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: org.xmlpull.v1.XmlPullParser getXmlParser()>();

        z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r15, "pathData");

        if z0 != 0 goto label1;

        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No path data available");

        throw $r35;

     label1:
        $r16 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i6 = virtualinvoke $r16.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_NAME()>();

        $r36 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: java.lang.String getString(android.content.res.TypedArray,int)>(r5, $i6);

        if $r36 != null goto label2;

        $r36 = "";

     label2:
        r6 = $r36;

        $r17 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i7 = virtualinvoke $r17.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA()>();

        r7 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: java.lang.String getString(android.content.res.TypedArray,int)>(r5, $i7);

        r8 = staticinvoke <androidx.compose.ui.graphics.vector.VectorKt: java.util.List addPathNodes(java.lang.String)>(r7);

        $r18 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i8 = virtualinvoke $r18.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR()>();

        r9 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,android.content.res.Resources$Theme,java.lang.String,int,int)>(r5, r2, "fillColor", $i8, 0);

        $r19 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i9 = virtualinvoke $r19.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA()>();

        f0 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "fillAlpha", $i9, 1.0F);

        $r20 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i10 = virtualinvoke $r20.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP()>();

        i0 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: int getNamedInt(android.content.res.TypedArray,java.lang.String,int,int)>(r5, "strokeLineCap", $i10, -1);

        $r21 = <androidx.compose.ui.graphics.StrokeCap: androidx.compose.ui.graphics.StrokeCap$Companion Companion>;

        $i11 = virtualinvoke $r21.<androidx.compose.ui.graphics.StrokeCap$Companion: int getButt-KaPHkGw()>();

        i1 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int getStrokeLineCap-CSYIeUk(int,int)>(i0, $i11);

        $r22 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i12 = virtualinvoke $r22.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN()>();

        i2 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: int getNamedInt(android.content.res.TypedArray,java.lang.String,int,int)>(r5, "strokeLineJoin", $i12, -1);

        $r23 = <androidx.compose.ui.graphics.StrokeJoin: androidx.compose.ui.graphics.StrokeJoin$Companion Companion>;

        $i13 = virtualinvoke $r23.<androidx.compose.ui.graphics.StrokeJoin$Companion: int getBevel-LxFBmk8()>();

        i3 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int getStrokeLineJoin-kLtJ_vA(int,int)>(i2, $i13);

        $r24 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i14 = virtualinvoke $r24.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT()>();

        f1 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "strokeMiterLimit", $i14, 1.0F);

        $r25 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i15 = virtualinvoke $r25.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR()>();

        r10 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,android.content.res.Resources$Theme,java.lang.String,int,int)>(r5, r2, "strokeColor", $i15, 0);

        $r26 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i16 = virtualinvoke $r26.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA()>();

        f2 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "strokeAlpha", $i16, 1.0F);

        $r27 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i17 = virtualinvoke $r27.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH()>();

        f3 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "strokeWidth", $i17, 1.0F);

        $r28 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i18 = virtualinvoke $r28.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END()>();

        f4 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "trimPathEnd", $i18, 1.0F);

        $r29 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i19 = virtualinvoke $r29.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET()>();

        f5 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "trimPathOffset", $i19, 0.0F);

        $r30 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i20 = virtualinvoke $r30.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START()>();

        f6 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "trimPathStart", $i20, 0.0F);

        $r31 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i21 = virtualinvoke $r31.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE()>();

        $i22 = <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int FILL_TYPE_WINDING>;

        i4 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: int getNamedInt(android.content.res.TypedArray,java.lang.String,int,int)>(r5, "fillType", $i21, $i22);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        r11 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: androidx.compose.ui.graphics.Brush obtainBrushFromComplexColor(androidx.core.content.res.ComplexColorCompat)>(r9);

        r12 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: androidx.compose.ui.graphics.Brush obtainBrushFromComplexColor(androidx.core.content.res.ComplexColorCompat)>(r10);

        if i4 != 0 goto label3;

        $r34 = <androidx.compose.ui.graphics.PathFillType: androidx.compose.ui.graphics.PathFillType$Companion Companion>;

        $i23 = virtualinvoke $r34.<androidx.compose.ui.graphics.PathFillType$Companion: int getNonZero-Rg-k1Os()>();

        goto label4;

     label3:
        $r32 = <androidx.compose.ui.graphics.PathFillType: androidx.compose.ui.graphics.PathFillType$Companion Companion>;

        $i23 = virtualinvoke $r32.<androidx.compose.ui.graphics.PathFillType$Companion: int getEvenOdd-Rg-k1Os()>();

     label4:
        i5 = $i23;

        virtualinvoke r4.<androidx.compose.ui.graphics.vector.ImageVector$Builder: androidx.compose.ui.graphics.vector.ImageVector$Builder addPath-oIyEayM(java.util.List,int,java.lang.String,androidx.compose.ui.graphics.Brush,float,androidx.compose.ui.graphics.Brush,float,float,int,int,float,float,float,float)>(r8, i5, r6, r11, f0, r12, f2, f3, i1, i3, f1, f6, f4, f5);

        return;
    }

    private static final androidx.compose.ui.graphics.Brush obtainBrushFromComplexColor(androidx.core.content.res.ComplexColorCompat)
    {
        androidx.core.content.res.ComplexColorCompat r0;
        android.graphics.Shader r1;
        boolean $z0;
        androidx.compose.ui.graphics.SolidColor $r2;
        int $i0;
        long $l1;
        androidx.compose.ui.graphics.ShaderBrush $r3;
        androidx.compose.ui.graphics.Brush $r4;

        r0 := @parameter0: androidx.core.content.res.ComplexColorCompat;

        $z0 = virtualinvoke r0.<androidx.core.content.res.ComplexColorCompat: boolean willDraw()>();

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r0.<androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()>();

        if r1 == null goto label1;

        $r3 = staticinvoke <androidx.compose.ui.graphics.BrushKt: androidx.compose.ui.graphics.ShaderBrush ShaderBrush(android.graphics.Shader)>(r1);

        $r4 = (androidx.compose.ui.graphics.Brush) $r3;

        goto label3;

     label1:
        $r2 = new androidx.compose.ui.graphics.SolidColor;

        $i0 = virtualinvoke r0.<androidx.core.content.res.ComplexColorCompat: int getColor()>();

        $l1 = staticinvoke <androidx.compose.ui.graphics.ColorKt: long Color(int)>($i0);

        specialinvoke $r2.<androidx.compose.ui.graphics.SolidColor: void <init>(long,kotlin.jvm.internal.DefaultConstructorMarker)>($l1, null);

        $r4 = (androidx.compose.ui.graphics.Brush) $r2;

        goto label3;

     label2:
        $r4 = (androidx.compose.ui.graphics.Brush) null;

     label3:
        return $r4;
    }

    public static final void parseClipPath(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, androidx.compose.ui.graphics.vector.ImageVector$Builder)
    {
        androidx.compose.ui.graphics.vector.compat.AndroidVectorParser $r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        androidx.compose.ui.graphics.vector.ImageVector$Builder r4;
        android.content.res.TypedArray r5;
        java.lang.String r6, $r12, $r14;
        java.util.List r7;
        androidx.compose.ui.graphics.vector.compat.AndroidVectorResources $r8, $r10, $r11;
        int[] $r9;
        int $i0, $i1;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.compat.AndroidVectorParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 := @parameter3: android.util.AttributeSet;

        r4 := @parameter4: androidx.compose.ui.graphics.vector.ImageVector$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "attrs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "builder");

        $r8 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $r9 = virtualinvoke $r8.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int[] getSTYLEABLE_VECTOR_DRAWABLE_CLIP_PATH()>();

        r5 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r2, r3, $r9);

        $r10 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i0 = virtualinvoke $r10.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME()>();

        $r14 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: java.lang.String getString(android.content.res.TypedArray,int)>(r5, $i0);

        if $r14 != null goto label1;

        $r14 = "";

     label1:
        r6 = $r14;

        $r11 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i1 = virtualinvoke $r11.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA()>();

        $r12 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: java.lang.String getString(android.content.res.TypedArray,int)>(r5, $i1);

        r7 = staticinvoke <androidx.compose.ui.graphics.vector.VectorKt: java.util.List addPathNodes(java.lang.String)>($r12);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <androidx.compose.ui.graphics.vector.ImageVector$Builder: androidx.compose.ui.graphics.vector.ImageVector$Builder addGroup$default(androidx.compose.ui.graphics.vector.ImageVector$Builder,java.lang.String,float,float,float,float,float,float,float,java.util.List,int,java.lang.Object)>(r4, r6, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, r7, 254, null);

        return;
    }

    public static final void parseGroup(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, androidx.compose.ui.graphics.vector.ImageVector$Builder)
    {
        androidx.compose.ui.graphics.vector.compat.AndroidVectorParser $r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        androidx.compose.ui.graphics.vector.ImageVector$Builder r4;
        android.content.res.TypedArray r5;
        float f0, f1, f2, f3, f4, f5, f6;
        java.lang.String r6, $r19;
        androidx.compose.ui.graphics.vector.compat.AndroidVectorResources $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        int[] $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List $r17;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.compat.AndroidVectorParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 := @parameter3: android.util.AttributeSet;

        r4 := @parameter4: androidx.compose.ui.graphics.vector.ImageVector$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "attrs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "builder");

        $r7 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int[] getSTYLEABLE_VECTOR_DRAWABLE_GROUP()>();

        r5 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r2, r3, $r8);

        $r9 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i0 = virtualinvoke $r9.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION()>();

        f0 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "rotation", $i0, 0.0F);

        $r10 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i1 = virtualinvoke $r10.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X()>();

        f1 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getFloat(android.content.res.TypedArray,int,float)>(r5, $i1, 0.0F);

        $r11 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i2 = virtualinvoke $r11.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y()>();

        f2 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getFloat(android.content.res.TypedArray,int,float)>(r5, $i2, 0.0F);

        $r12 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i3 = virtualinvoke $r12.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X()>();

        f3 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "scaleX", $i3, 1.0F);

        $r13 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i4 = virtualinvoke $r13.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y()>();

        f4 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "scaleY", $i4, 1.0F);

        $r14 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i5 = virtualinvoke $r14.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X()>();

        f5 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "translateX", $i5, 0.0F);

        $r15 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i6 = virtualinvoke $r15.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y()>();

        f6 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: float getNamedFloat(android.content.res.TypedArray,java.lang.String,int,float)>(r5, "translateY", $i6, 0.0F);

        $r16 = <androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: androidx.compose.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i7 = virtualinvoke $r16.<androidx.compose.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_NAME()>();

        $r19 = virtualinvoke $r0.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: java.lang.String getString(android.content.res.TypedArray,int)>(r5, $i7);

        if $r19 != null goto label1;

        $r19 = "";

     label1:
        r6 = $r19;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        $r17 = staticinvoke <androidx.compose.ui.graphics.vector.VectorKt: java.util.List getEmptyPath()>();

        virtualinvoke r4.<androidx.compose.ui.graphics.vector.ImageVector$Builder: androidx.compose.ui.graphics.vector.ImageVector$Builder addGroup(java.lang.String,float,float,float,float,float,float,float,java.util.List)>(r6, f0, f1, f2, f3, f4, f5, f6, $r17);

        return;
    }

    static void <clinit>()
    {
        return;
    }

