com.google.common.flogger.backend.TemplateContext
<com.google.common.flogger.backend.TemplateContext: java.lang.String message>
<com.google.common.flogger.backend.TemplateContext: com.google.common.flogger.parser.MessageParser parser>
    public void <init>(com.google.common.flogger.parser.MessageParser, java.lang.String)
    {
        com.google.common.flogger.backend.TemplateContext $r0;
        java.lang.String $r1;
        com.google.common.flogger.parser.MessageParser $r2;
        java.lang.Object $r3;

        $r0 := @this: com.google.common.flogger.backend.TemplateContext;

        $r2 := @parameter0: com.google.common.flogger.parser.MessageParser;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.google.common.flogger.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r2, "parser");

        $r2 = (com.google.common.flogger.parser.MessageParser) $r3;

        $r0.<com.google.common.flogger.backend.TemplateContext: com.google.common.flogger.parser.MessageParser parser> = $r2;

        $r3 = staticinvoke <com.google.common.flogger.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r1, "message");

        $r1 = (java.lang.String) $r3;

        $r0.<com.google.common.flogger.backend.TemplateContext: java.lang.String message> = $r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.flogger.backend.TemplateContext $r0, $r3;
        com.google.common.flogger.parser.MessageParser $r1, $r4;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.String $r5, $r6;

        $r0 := @this: com.google.common.flogger.backend.TemplateContext;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof com.google.common.flogger.backend.TemplateContext;

        if $z0 == 0 goto label1;

        $r3 = (com.google.common.flogger.backend.TemplateContext) $r2;

        $r4 = $r0.<com.google.common.flogger.backend.TemplateContext: com.google.common.flogger.parser.MessageParser parser>;

        $r1 = $r3.<com.google.common.flogger.backend.TemplateContext: com.google.common.flogger.parser.MessageParser parser>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r5 = $r0.<com.google.common.flogger.backend.TemplateContext: java.lang.String message>;

        $r6 = $r3.<com.google.common.flogger.backend.TemplateContext: java.lang.String message>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getMessage()
    {
        com.google.common.flogger.backend.TemplateContext $r0;
        java.lang.String r1;

        $r0 := @this: com.google.common.flogger.backend.TemplateContext;

        r1 = $r0.<com.google.common.flogger.backend.TemplateContext: java.lang.String message>;

        return r1;
    }

    public com.google.common.flogger.parser.MessageParser getParser()
    {
        com.google.common.flogger.backend.TemplateContext $r0;
        com.google.common.flogger.parser.MessageParser r1;

        $r0 := @this: com.google.common.flogger.backend.TemplateContext;

        r1 = $r0.<com.google.common.flogger.backend.TemplateContext: com.google.common.flogger.parser.MessageParser parser>;

        return r1;
    }

    public int hashCode()
    {
        com.google.common.flogger.backend.TemplateContext $r0;
        com.google.common.flogger.parser.MessageParser $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @this: com.google.common.flogger.backend.TemplateContext;

        $r1 = $r0.<com.google.common.flogger.backend.TemplateContext: com.google.common.flogger.parser.MessageParser parser>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = $r0.<com.google.common.flogger.backend.TemplateContext: java.lang.String message>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }

