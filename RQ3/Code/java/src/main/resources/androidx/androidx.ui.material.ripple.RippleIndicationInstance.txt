androidx.ui.material.ripple.RippleIndicationInstance
<androidx.ui.material.ripple.RippleIndicationInstance: boolean bounded>
<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.unit.Dp radius>
<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.State color>
<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleOpacity rippleOpacity>
<androidx.ui.material.ripple.RippleIndicationInstance: androidx.animation.AnimationClockObservable clock>
<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.StateLayer stateLayer>
<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.frames.ModelList ripples>
<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.geometry.Offset currentPressPosition>
<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation currentRipple>
    private void <init>(boolean, androidx.ui.unit.Dp, androidx.compose.State, androidx.ui.material.ripple.RippleOpacity, androidx.animation.AnimationClockObservable)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        boolean z0, $z1;
        androidx.ui.unit.Dp r1;
        androidx.compose.State r2;
        androidx.ui.material.ripple.RippleOpacity r3, $r6;
        androidx.animation.AnimationClockObservable r4, $r7;
        androidx.ui.material.ripple.StateLayer $r5;
        androidx.compose.frames.ModelList $r8;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.ui.unit.Dp;

        r2 := @parameter2: androidx.compose.State;

        r3 := @parameter3: androidx.ui.material.ripple.RippleOpacity;

        r4 := @parameter4: androidx.animation.AnimationClockObservable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: boolean bounded> = z0;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.unit.Dp radius> = r1;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.State color> = r2;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleOpacity rippleOpacity> = r3;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.animation.AnimationClockObservable clock> = r4;

        $r5 = new androidx.ui.material.ripple.StateLayer;

        $r7 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.animation.AnimationClockObservable clock>;

        $z1 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: boolean bounded>;

        $r6 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleOpacity rippleOpacity>;

        specialinvoke $r5.<androidx.ui.material.ripple.StateLayer: void <init>(androidx.animation.AnimationClockObservable,boolean,androidx.ui.material.ripple.RippleOpacity)>($r7, $z1, $r6);

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.StateLayer stateLayer> = $r5;

        $r8 = staticinvoke <androidx.compose.frames.FrameContainersKt: androidx.compose.frames.ModelList modelListOf()>();

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.frames.ModelList ripples> = $r8;

        return;
    }

    public void <init>(boolean, androidx.ui.unit.Dp, androidx.compose.State, androidx.ui.material.ripple.RippleOpacity, androidx.animation.AnimationClockObservable, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        boolean z0;
        androidx.compose.State r1;
        androidx.ui.material.ripple.RippleOpacity r2;
        androidx.animation.AnimationClockObservable r3;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r4;
        androidx.ui.unit.Dp r5;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance;

        z0 := @parameter0: boolean;

        r5 := @parameter1: androidx.ui.unit.Dp;

        r1 := @parameter2: androidx.compose.State;

        r2 := @parameter3: androidx.ui.material.ripple.RippleOpacity;

        r3 := @parameter4: androidx.animation.AnimationClockObservable;

        i0 := @parameter5: int;

        r4 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r5 = (androidx.ui.unit.Dp) null;

     label1:
        specialinvoke r0.<androidx.ui.material.ripple.RippleIndicationInstance: void <init>(boolean,androidx.ui.unit.Dp,androidx.compose.State,androidx.ui.material.ripple.RippleOpacity,androidx.animation.AnimationClockObservable,kotlin.jvm.internal.DefaultConstructorMarker)>(z0, r5, r1, r2, r3, null);

        return;
    }

    public void drawIndication(androidx.ui.core.ContentDrawScope, androidx.ui.foundation.InteractionState)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        androidx.ui.core.ContentDrawScope $r1;
        androidx.ui.foundation.InteractionState r2;
        long l0;
        float f0, $f1, $f2, $f3;
        boolean z0, $z2, $z3, z4;
        androidx.compose.State $r3;
        java.lang.Object $r4;
        androidx.ui.graphics.Color $r5;
        androidx.ui.foundation.Interaction$Pressed $r6;
        androidx.ui.foundation.Interaction $r7;
        androidx.ui.geometry.Offset $r8, r15;
        androidx.ui.unit.Density $r9;
        androidx.ui.geometry.Size $r10;
        androidx.ui.unit.Dp r11;
        java.lang.Float $r12, r13;
        androidx.ui.material.ripple.StateLayer r14;
        androidx.ui.graphics.drawscope.DrawScope $r16;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance;

        $r1 := @parameter0: androidx.ui.core.ContentDrawScope;

        r2 := @parameter1: androidx.ui.foundation.InteractionState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "interactionState");

        $r3 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.State color>;

        $r4 = interfaceinvoke $r3.<androidx.compose.State: java.lang.Object getValue()>();

        $r5 = (androidx.ui.graphics.Color) $r4;

        l0 = virtualinvoke $r5.<androidx.ui.graphics.Color: long unbox-impl()>();

        r11 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.unit.Dp radius>;

        if r11 != null goto label1;

        $r12 = (java.lang.Float) null;

        goto label2;

     label1:
        $f1 = virtualinvoke r11.<androidx.ui.unit.Dp: float unbox-impl()>();

        $f2 = virtualinvoke $r1.<androidx.ui.core.ContentDrawScope: float toPx-ipo6vVg(float)>($f1);

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

     label2:
        r13 = $r12;

        if r13 != null goto label3;

        $r9 = (androidx.ui.unit.Density) $r1;

        $z3 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: boolean bounded>;

        $r10 = virtualinvoke $r1.<androidx.ui.core.ContentDrawScope: androidx.ui.geometry.Size getSize()>();

        $f3 = staticinvoke <androidx.ui.material.ripple.RippleAnimationKt: float getRippleEndRadius(androidx.ui.unit.Density,boolean,androidx.ui.geometry.Size)>($r9, $z3, $r10);

        goto label4;

     label3:
        $f3 = virtualinvoke r13.<java.lang.Float: float floatValue()>();

     label4:
        f0 = $f3;

        virtualinvoke $r1.<androidx.ui.core.ContentDrawScope: void drawContent()>();

        r14 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.StateLayer stateLayer>;

        z4 = 0;

        z0 = 0;

        virtualinvoke r14.<androidx.ui.material.ripple.StateLayer: void drawStateLayer-63rzH2k(androidx.ui.core.ContentDrawScope,androidx.ui.foundation.InteractionState,float,long)>($r1, r2, f0, l0);

        $r6 = <androidx.ui.foundation.Interaction$Pressed: androidx.ui.foundation.Interaction$Pressed INSTANCE>;

        $r7 = (androidx.ui.foundation.Interaction) $r6;

        r15 = virtualinvoke r2.<androidx.ui.foundation.InteractionState: androidx.ui.geometry.Offset interactionPositionFor(androidx.ui.foundation.Interaction)>($r7);

        if r15 == null goto label5;

        $r8 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.geometry.Offset currentPressPosition>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, r15);

        if $z2 != 0 goto label6;

        specialinvoke r0.<androidx.ui.material.ripple.RippleIndicationInstance: void addRipple(androidx.ui.core.ContentDrawScope,float,androidx.ui.geometry.Offset)>($r1, f0, r15);

        goto label6;

     label5:
        specialinvoke r0.<androidx.ui.material.ripple.RippleIndicationInstance: void removeRipple()>();

     label6:
        $r16 = (androidx.ui.graphics.drawscope.DrawScope) $r1;

        specialinvoke r0.<androidx.ui.material.ripple.RippleIndicationInstance: void drawRipples-z8Px3OI(androidx.ui.graphics.drawscope.DrawScope,long)>($r16, l0);

        return;
    }

    private final void addRipple(androidx.ui.core.ContentDrawScope, float, androidx.ui.geometry.Offset)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        androidx.ui.core.ContentDrawScope $r1;
        float f0, $f1, $f2;
        androidx.ui.geometry.Offset r2, r3, $r14;
        androidx.ui.material.ripple.RippleAnimation r4, $r7, r12;
        androidx.ui.geometry.Size $r5, $r6, r13;
        boolean $z0, $z1;
        androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1 $r8;
        androidx.animation.AnimationClockObservable $r9;
        kotlin.jvm.functions.Function1 $r10;
        androidx.compose.frames.ModelList $r11;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance;

        $r1 := @parameter0: androidx.ui.core.ContentDrawScope;

        f0 := @parameter1: float;

        r2 := @parameter2: androidx.ui.geometry.Offset;

        r12 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation currentRipple>;

        if r12 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r12.<androidx.ui.material.ripple.RippleAnimation: void finish()>();

     label2:
        $r5 = virtualinvoke $r1.<androidx.ui.core.ContentDrawScope: androidx.ui.geometry.Size getSize()>();

        $f1 = virtualinvoke $r5.<androidx.ui.geometry.Size: float getWidth()>();

        $r6 = virtualinvoke $r1.<androidx.ui.core.ContentDrawScope: androidx.ui.geometry.Size getSize()>();

        $f2 = virtualinvoke $r6.<androidx.ui.geometry.Size: float getHeight()>();

        r13 = staticinvoke <androidx.ui.geometry.SizeKt: androidx.ui.geometry.Size Size(float,float)>($f1, $f2);

        $z0 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: boolean bounded>;

        if $z0 == 0 goto label3;

        $r14 = r2;

        goto label4;

     label3:
        $r14 = staticinvoke <androidx.ui.geometry.Size: androidx.ui.geometry.Offset center$default(androidx.ui.geometry.Size,androidx.ui.geometry.Offset,int,java.lang.Object)>(r13, null, 1, null);

     label4:
        r3 = $r14;

        $r7 = new androidx.ui.material.ripple.RippleAnimation;

        $z1 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: boolean bounded>;

        $r9 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.animation.AnimationClockObservable clock>;

        $r8 = new androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1;

        specialinvoke $r8.<androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1: void <init>(androidx.ui.material.ripple.RippleIndicationInstance)>(r0);

        $r10 = (kotlin.jvm.functions.Function1) $r8;

        specialinvoke $r7.<androidx.ui.material.ripple.RippleAnimation: void <init>(androidx.ui.geometry.Size,androidx.ui.geometry.Offset,float,boolean,androidx.animation.AnimationClockObservable,kotlin.jvm.functions.Function1)>(r13, r3, f0, $z1, $r9, $r10);

        r4 = $r7;

        $r11 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.frames.ModelList ripples>;

        virtualinvoke $r11.<androidx.compose.frames.ModelList: boolean add(java.lang.Object)>(r4);

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.geometry.Offset currentPressPosition> = r2;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation currentRipple> = r4;

        return;
    }

    private final void removeRipple()
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        androidx.ui.material.ripple.RippleAnimation r1, $r2;
        androidx.ui.geometry.Offset $r3;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance;

        r1 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation currentRipple>;

        if r1 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r1.<androidx.ui.material.ripple.RippleAnimation: void finish()>();

     label2:
        $r2 = (androidx.ui.material.ripple.RippleAnimation) null;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation currentRipple> = $r2;

        $r3 = (androidx.ui.geometry.Offset) null;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.geometry.Offset currentPressPosition> = $r3;

        return;
    }

    private final void drawRipples-z8Px3OI(androidx.ui.graphics.drawscope.DrawScope, long)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        androidx.ui.graphics.drawscope.DrawScope $r1;
        long l0, $l5;
        java.util.List $r2;
        int i1, i2, $i3, i6;
        java.lang.Object r3;
        androidx.ui.material.ripple.RippleAnimation r4;
        boolean z2, z3, $z5;
        float f0;
        androidx.compose.frames.ModelList $r6;
        java.util.Collection $r7;
        androidx.ui.foundation.Interaction$Pressed $r8;
        androidx.ui.foundation.Interaction $r9;
        androidx.ui.material.ripple.RippleOpacity $r10;
        byte $b4;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance;

        $r1 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        l0 := @parameter1: long;

        $r6 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.frames.ModelList ripples>;

        $r2 = (java.util.List) $r6;

        i6 = 0;

        $r7 = (java.util.Collection) $r2;

        $i3 = interfaceinvoke $r7.<java.util.Collection: int size()>();

        i1 = $i3 + -1;

        if i6 > i1 goto label5;

     label1:
        i2 = i6;

        i6 = i6 + 1;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (androidx.ui.material.ripple.RippleAnimation) r3;

        z2 = 0;

        z3 = 0;

        $r10 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleOpacity rippleOpacity>;

        $r8 = <androidx.ui.foundation.Interaction$Pressed: androidx.ui.foundation.Interaction$Pressed INSTANCE>;

        $r9 = (androidx.ui.foundation.Interaction) $r8;

        f0 = interfaceinvoke $r10.<androidx.ui.material.ripple.RippleOpacity: float opacityForInteraction(androidx.ui.foundation.Interaction)>($r9);

        $b4 = f0 cmpg 0.0F;

        if $b4 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 != 0 goto label4;

        $l5 = staticinvoke <androidx.ui.graphics.Color: long copy-impl$default(long,float,float,float,float,int,java.lang.Object)>(l0, f0, 0.0F, 0.0F, 0.0F, 14, null);

        virtualinvoke r4.<androidx.ui.material.ripple.RippleAnimation: void draw-z8Px3OI(androidx.ui.graphics.drawscope.DrawScope,long)>($r1, $l5);

     label4:
        if i6 <= i1 goto label1;

     label5:
        return;
    }

    public void onDispose()
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        androidx.compose.frames.ModelList $r1;
        androidx.ui.material.ripple.RippleAnimation $r2;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance;

        $r1 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.frames.ModelList ripples>;

        virtualinvoke $r1.<androidx.compose.frames.ModelList: void clear()>();

        $r2 = (androidx.ui.material.ripple.RippleAnimation) null;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation currentRipple> = $r2;

        return;
    }

    public void <init>(boolean, androidx.ui.unit.Dp, androidx.compose.State, androidx.ui.material.ripple.RippleOpacity, androidx.animation.AnimationClockObservable, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        boolean z0;
        androidx.ui.unit.Dp r1;
        androidx.compose.State r2;
        androidx.ui.material.ripple.RippleOpacity r3;
        androidx.animation.AnimationClockObservable r4;
        kotlin.jvm.internal.DefaultConstructorMarker r5;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.ui.unit.Dp;

        r2 := @parameter2: androidx.compose.State;

        r3 := @parameter3: androidx.ui.material.ripple.RippleOpacity;

        r4 := @parameter4: androidx.animation.AnimationClockObservable;

        r5 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.material.ripple.RippleIndicationInstance: void <init>(boolean,androidx.ui.unit.Dp,androidx.compose.State,androidx.ui.material.ripple.RippleOpacity,androidx.animation.AnimationClockObservable)>(z0, r1, r2, r3, r4);

        return;
    }

    public static final androidx.compose.frames.ModelList access$getRipples$p(androidx.ui.material.ripple.RippleIndicationInstance)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        androidx.compose.frames.ModelList $r1;

        r0 := @parameter0: androidx.ui.material.ripple.RippleIndicationInstance;

        $r1 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.frames.ModelList ripples>;

        return $r1;
    }

    public static final androidx.ui.material.ripple.RippleAnimation access$getCurrentRipple$p(androidx.ui.material.ripple.RippleIndicationInstance)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        androidx.ui.material.ripple.RippleAnimation $r1;

        r0 := @parameter0: androidx.ui.material.ripple.RippleIndicationInstance;

        $r1 = r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation currentRipple>;

        return $r1;
    }

    public static final void access$setCurrentRipple$p(androidx.ui.material.ripple.RippleIndicationInstance, androidx.ui.material.ripple.RippleAnimation)
    {
        androidx.ui.material.ripple.RippleIndicationInstance r0;
        androidx.ui.material.ripple.RippleAnimation r1;

        r0 := @parameter0: androidx.ui.material.ripple.RippleIndicationInstance;

        r1 := @parameter1: androidx.ui.material.ripple.RippleAnimation;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation currentRipple> = r1;

        return;
    }

androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1
<androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1: androidx.ui.material.ripple.RippleIndicationInstance $this>
    void <init>(androidx.ui.material.ripple.RippleIndicationInstance)
    {
        androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1 r0;
        androidx.ui.material.ripple.RippleIndicationInstance $r1;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1;

        $r1 := @parameter0: androidx.ui.material.ripple.RippleIndicationInstance;

        r0.<androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1: androidx.ui.material.ripple.RippleIndicationInstance $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.material.ripple.RippleAnimation)
    {
        androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1 r0;
        androidx.ui.material.ripple.RippleAnimation r1, $r5, $r6;
        androidx.ui.material.ripple.RippleIndicationInstance $r2, $r4, $r7;
        androidx.compose.frames.ModelList $r3;
        boolean $z1;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1;

        r1 := @parameter0: androidx.ui.material.ripple.RippleAnimation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ripple");

        $r2 = r0.<androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1: androidx.ui.material.ripple.RippleIndicationInstance $this>;

        $r3 = staticinvoke <androidx.ui.material.ripple.RippleIndicationInstance: androidx.compose.frames.ModelList access$getRipples$p(androidx.ui.material.ripple.RippleIndicationInstance)>($r2);

        virtualinvoke $r3.<androidx.compose.frames.ModelList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1: androidx.ui.material.ripple.RippleIndicationInstance $this>;

        $r5 = staticinvoke <androidx.ui.material.ripple.RippleIndicationInstance: androidx.ui.material.ripple.RippleAnimation access$getCurrentRipple$p(androidx.ui.material.ripple.RippleIndicationInstance)>($r4);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z1 == 0 goto label1;

        $r7 = r0.<androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1: androidx.ui.material.ripple.RippleIndicationInstance $this>;

        $r6 = (androidx.ui.material.ripple.RippleAnimation) null;

        staticinvoke <androidx.ui.material.ripple.RippleIndicationInstance: void access$setCurrentRipple$p(androidx.ui.material.ripple.RippleIndicationInstance,androidx.ui.material.ripple.RippleAnimation)>($r7, $r6);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1 r0;
        java.lang.Object r1;
        androidx.ui.material.ripple.RippleAnimation $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.material.ripple.RippleAnimation) r1;

        virtualinvoke r0.<androidx.ui.material.ripple.RippleIndicationInstance$addRipple$ripple$1: void invoke(androidx.ui.material.ripple.RippleAnimation)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

