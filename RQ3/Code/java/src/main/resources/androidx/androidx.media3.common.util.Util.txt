androidx.media3.common.util.Util
<androidx.media3.common.util.Util: int SDK_INT>
<androidx.media3.common.util.Util: java.lang.String DEVICE>
<androidx.media3.common.util.Util: java.lang.String MANUFACTURER>
<androidx.media3.common.util.Util: java.lang.String MODEL>
<androidx.media3.common.util.Util: java.lang.String DEVICE_DEBUG_INFO>
<androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>
<androidx.media3.common.util.Util: java.lang.String TAG>
<androidx.media3.common.util.Util: java.util.regex.Pattern XS_DATE_TIME_PATTERN>
<androidx.media3.common.util.Util: java.util.regex.Pattern XS_DURATION_PATTERN>
<androidx.media3.common.util.Util: java.util.regex.Pattern ESCAPED_CHARACTER_PATTERN>
<androidx.media3.common.util.Util: java.util.regex.Pattern ISM_PATH_PATTERN>
<androidx.media3.common.util.Util: java.lang.String ISM_HLS_FORMAT_EXTENSION>
<androidx.media3.common.util.Util: java.lang.String ISM_DASH_FORMAT_EXTENSION>
<androidx.media3.common.util.Util: java.util.HashMap languageTagReplacementMap>
<androidx.media3.common.util.Util: java.lang.String[] additionalIsoLanguageReplacements>
<androidx.media3.common.util.Util: java.lang.String[] isoLegacyTagReplacements>
<androidx.media3.common.util.Util: int[] CRC32_BYTES_MSBF>
<androidx.media3.common.util.Util: int[] CRC8_BYTES_MSBF>
    private void <init>()
    {
        androidx.media3.common.util.Util r0;

        r0 := @this: androidx.media3.common.util.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] toByteArray(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte[] r1, $r4;
        java.io.ByteArrayOutputStream r2, $r3;
        int i0, $i1;

        r0 := @parameter0: java.io.InputStream;

        r1 = newarray (byte)[4096];

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r3;

     label1:
        $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r1);

        i0 = $i1;

        if $i1 == -1 goto label2;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, i0);

        goto label1;

     label2:
        $r4 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;
    }

    public static android.content.Intent registerReceiverNotExported(android.content.Context, android.content.BroadcastReceiver, android.content.IntentFilter)
    {
        android.content.Context r0;
        android.content.BroadcastReceiver r1;
        android.content.IntentFilter r2;
        int $i0;
        android.content.Intent $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.BroadcastReceiver;

        r2 := @parameter2: android.content.IntentFilter;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 33 goto label1;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r1, r2);

        return $r4;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,int)>(r1, r2, 4);

        return $r3;
    }

    public static android.content.ComponentName startForegroundService(android.content.Context, android.content.Intent)
    {
        android.content.Context r0;
        android.content.Intent r1;
        int $i0;
        android.content.ComponentName $r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.Intent;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>(r1);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r1);

        return $r2;
    }

    public static transient boolean maybeRequestReadExternalStoragePermission(android.app.Activity, android.net.Uri[])
    {
        android.app.Activity r0;
        android.net.Uri[] r1, r2;
        int i0, $i1, i2;
        android.net.Uri r3;
        boolean $z0;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.net.Uri[];

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 >= 23 goto label1;

        return 0;

     label1:
        r2 = r1;

        i0 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        r3 = r2[i2];

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean maybeRequestReadExternalStoragePermission(android.app.Activity,android.net.Uri)>(r0, r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static transient boolean maybeRequestReadExternalStoragePermission(android.app.Activity, androidx.media3.common.MediaItem[])
    {
        android.app.Activity r0;
        androidx.media3.common.MediaItem[] r1, r2;
        int i0, $i1, $i2, i3, i4;
        androidx.media3.common.MediaItem r3;
        com.google.common.collect.ImmutableList r4;
        androidx.media3.common.MediaItem$LocalConfiguration $r5, $r6, $r8;
        android.net.Uri $r7, $r11;
        boolean $z0, $z1;
        java.lang.Object $r9;
        androidx.media3.common.MediaItem$SubtitleConfiguration $r10;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: androidx.media3.common.MediaItem[];

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 >= 23 goto label1;

        return 0;

     label1:
        r2 = r1;

        i0 = lengthof r2;

        i3 = 0;

     label2:
        if i3 >= i0 goto label8;

        r3 = r2[i3];

        $r5 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        if $r5 != null goto label3;

        goto label7;

     label3:
        $r6 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r7 = $r6.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean maybeRequestReadExternalStoragePermission(android.app.Activity,android.net.Uri)>(r0, $r7);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $r8 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        r4 = $r8.<androidx.media3.common.MediaItem$LocalConfiguration: com.google.common.collect.ImmutableList subtitleConfigurations>;

        i4 = 0;

     label5:
        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if i4 >= $i2 goto label7;

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i4);

        $r10 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r9;

        $r11 = $r10.<androidx.media3.common.MediaItem$SubtitleConfiguration: android.net.Uri uri>;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean maybeRequestReadExternalStoragePermission(android.app.Activity,android.net.Uri)>(r0, $r11);

        if $z1 == 0 goto label6;

        return 1;

     label6:
        i4 = i4 + 1;

        goto label5;

     label7:
        i3 = i3 + 1;

        goto label2;

     label8:
        return 0;
    }

    private static boolean maybeRequestReadExternalStoragePermission(android.app.Activity, android.net.Uri)
    {
        android.app.Activity r0;
        android.net.Uri r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.net.Uri;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 23 goto label2;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean isLocalFileUri(android.net.Uri)>(r1);

        if $z0 != 0 goto label1;

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean isMediaStoreExternalContentUri(android.net.Uri)>(r1);

        if $z2 == 0 goto label2;

     label1:
        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean requestExternalStoragePermission(android.app.Activity)>(r0);

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    private static boolean isMediaStoreExternalContentUri(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.List r1;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r7;

        r0 := @parameter0: android.net.Uri;

        $r3 = "content";

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = "media";

        $r6 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        r1 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $z2 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (java.lang.String) $r7;

        $r8 = "external";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 != 0 goto label4;

        $r9 = "external_primary";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label5;

     label4:
        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    public static transient boolean checkCleartextTrafficPermitted(androidx.media3.common.MediaItem[])
    {
        androidx.media3.common.MediaItem[] r0, r1;
        int i0, $i1, $i2, i3, i4;
        androidx.media3.common.MediaItem r2;
        androidx.media3.common.MediaItem$LocalConfiguration $r3, $r4, $r6, $r8;
        android.net.Uri $r5, $r12;
        boolean $z0, $z1;
        com.google.common.collect.ImmutableList $r7, $r9;
        java.lang.Object $r10;
        androidx.media3.common.MediaItem$SubtitleConfiguration $r11;

        r0 := @parameter0: androidx.media3.common.MediaItem[];

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 >= 24 goto label1;

        return 1;

     label1:
        r1 = r0;

        i0 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label8;

        r2 = r1[i3];

        $r3 = r2.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        if $r3 != null goto label3;

        goto label7;

     label3:
        $r4 = r2.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r5 = $r4.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean isTrafficRestricted(android.net.Uri)>($r5);

        if $z0 == 0 goto label4;

        return 0;

     label4:
        i4 = 0;

     label5:
        $r6 = r2.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r7 = $r6.<androidx.media3.common.MediaItem$LocalConfiguration: com.google.common.collect.ImmutableList subtitleConfigurations>;

        $i2 = virtualinvoke $r7.<com.google.common.collect.ImmutableList: int size()>();

        if i4 >= $i2 goto label7;

        $r8 = r2.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r9 = $r8.<androidx.media3.common.MediaItem$LocalConfiguration: com.google.common.collect.ImmutableList subtitleConfigurations>;

        $r10 = virtualinvoke $r9.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i4);

        $r11 = (androidx.media3.common.MediaItem$SubtitleConfiguration) $r10;

        $r12 = $r11.<androidx.media3.common.MediaItem$SubtitleConfiguration: android.net.Uri uri>;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean isTrafficRestricted(android.net.Uri)>($r12);

        if $z1 == 0 goto label6;

        return 0;

     label6:
        i4 = i4 + 1;

        goto label5;

     label7:
        i3 = i3 + 1;

        goto label2;

     label8:
        return 1;
    }

    public static boolean isLocalFileUri(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r2 = "file";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean areEqual(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    public static boolean contains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, r2;
        java.lang.Object r1, r3;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static void removeRange(java.util.List, int, int)
    {
        java.util.List r0, $r1;
        int i0, i1, $i2;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 < 0 goto label1;

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 > $i2 goto label1;

        if i0 <= i1 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        if i0 == i1 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label3:
        return;
    }

    public static java.lang.Object castNonNull(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public static java.lang.Object[] castNonNullTypeArray(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        return r0;
    }

    public static java.lang.Object[] nullSafeArrayCopy(java.lang.Object[], int)
    {
        java.lang.Object[] r0, $r1;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 > $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r0, i0);

        return $r1;
    }

    public static java.lang.Object[] nullSafeArrayCopyOfRange(java.lang.Object[], int, int)
    {
        java.lang.Object[] r0, $r1;
        int i0, i1, $i2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if 0 > i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $i2 = lengthof r0;

        if i1 > $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public static java.lang.Object[] nullSafeArrayAppend(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, r2, $r3;
        java.lang.Object r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        $i0 = lengthof r0;

        $i1 = $i0 + 1;

        r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r0, $i1);

        $i2 = lengthof r0;

        r2[$i2] = r1;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object[] castNonNullTypeArray(java.lang.Object[])>(r2);

        return $r3;
    }

    public static java.lang.Object[] nullSafeArrayConcatenation(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i2 = $i1 + $i0;

        r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r0, $i2);

        $i4 = lengthof r0;

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, $i4, $i3);

        return r2;
    }

    public static void nullSafeListToArray(java.util.List, java.lang.Object[])
    {
        java.util.List r0;
        java.lang.Object[] r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Object[];

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = lengthof r1;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return;
    }

    public static android.os.Handler createHandlerForCurrentLooper()
    {
        android.os.Handler $r0;

        $r0 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentLooper(android.os.Handler$Callback)>(null);

        return $r0;
    }

    public static android.os.Handler createHandlerForCurrentLooper(android.os.Handler$Callback)
    {
        android.os.Handler$Callback r0;
        android.os.Looper $r1, $r3;
        java.lang.Object $r2;
        android.os.Handler $r4;

        r0 := @parameter0: android.os.Handler$Callback;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = (android.os.Looper) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandler(android.os.Looper,android.os.Handler$Callback)>($r3, r0);

        return $r4;
    }

    public static android.os.Handler createHandlerForCurrentOrMainLooper()
    {
        android.os.Handler $r0;

        $r0 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentOrMainLooper(android.os.Handler$Callback)>(null);

        return $r0;
    }

    public static android.os.Handler createHandlerForCurrentOrMainLooper(android.os.Handler$Callback)
    {
        android.os.Handler$Callback r0;
        android.os.Looper $r1;
        android.os.Handler $r2;

        r0 := @parameter0: android.os.Handler$Callback;

        $r1 = staticinvoke <androidx.media3.common.util.Util: android.os.Looper getCurrentOrMainLooper()>();

        $r2 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandler(android.os.Looper,android.os.Handler$Callback)>($r1, r0);

        return $r2;
    }

    public static android.os.Handler createHandler(android.os.Looper, android.os.Handler$Callback)
    {
        android.os.Looper r0;
        android.os.Handler$Callback r1;
        android.os.Handler $r2;

        r0 := @parameter0: android.os.Looper;

        r1 := @parameter1: android.os.Handler$Callback;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>(r0, r1);

        return $r2;
    }

    public static boolean postOrRun(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;
        android.os.Looper r2, $r4, $r5;
        java.lang.Thread $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        r2 = virtualinvoke r0.<android.os.Handler: android.os.Looper getLooper()>();

        $r3 = virtualinvoke r2.<android.os.Looper: java.lang.Thread getThread()>();

        $z0 = virtualinvoke $r3.<java.lang.Thread: boolean isAlive()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<android.os.Handler: android.os.Looper getLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r4 != $r5 goto label2;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

        return 1;

     label2:
        $z1 = virtualinvoke r0.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        return $z1;
    }

    public static com.google.common.util.concurrent.ListenableFuture postOrRunWithCompletion(android.os.Handler, java.lang.Runnable, java.lang.Object)
    {
        android.os.Handler r0;
        java.lang.Runnable r1, $r4;
        java.lang.Object r2;
        com.google.common.util.concurrent.SettableFuture r3;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        r2 := @parameter2: java.lang.Object;

        r3 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>();

        $r4 = dynamicinvoke "run" <java.lang.Runnable (com.google.common.util.concurrent.SettableFuture,java.lang.Runnable,java.lang.Object)>(r3, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.common.util.Util: void lambda$postOrRunWithCompletion$0(com.google.common.util.concurrent.SettableFuture,java.lang.Runnable,java.lang.Object)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>(r0, $r4);

        return r3;
    }

    public static com.google.common.util.concurrent.ListenableFuture transformFutureAsync(com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.AsyncFunction)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        com.google.common.util.concurrent.AsyncFunction r1;
        com.google.common.util.concurrent.SettableFuture r2;
        java.lang.Runnable $r3, $r5;
        java.util.concurrent.Executor $r4, $r6;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: com.google.common.util.concurrent.AsyncFunction;

        r2 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>();

        $r3 = dynamicinvoke "run" <java.lang.Runnable (com.google.common.util.concurrent.SettableFuture,com.google.common.util.concurrent.ListenableFuture)>(r2, r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.common.util.Util: void lambda$transformFutureAsync$1(com.google.common.util.concurrent.SettableFuture,com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__());

        $r4 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        virtualinvoke r2.<com.google.common.util.concurrent.SettableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r3, $r4);

        $r5 = dynamicinvoke "run" <java.lang.Runnable (com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.SettableFuture,com.google.common.util.concurrent.AsyncFunction)>(r0, r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.common.util.Util: void lambda$transformFutureAsync$2(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.SettableFuture,com.google.common.util.concurrent.AsyncFunction)>, methodtype: void __METHODTYPE__());

        $r6 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r5, $r6);

        return r2;
    }

    public static android.os.Looper getCurrentOrMainLooper()
    {
        android.os.Looper r0, $r1;

        r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r0 == null goto label1;

        $r1 = r0;

        goto label2;

     label1:
        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

     label2:
        return $r1;
    }

    public static java.util.concurrent.ExecutorService newSingleThreadExecutor(java.lang.String)
    {
        java.lang.String r0;
        java.util.concurrent.ThreadFactory $r1;
        java.util.concurrent.ExecutorService $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = dynamicinvoke "newThread" <java.util.concurrent.ThreadFactory (java.lang.String)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Thread __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.common.util.Util: java.lang.Thread lambda$newSingleThreadExecutor$3(java.lang.String,java.lang.Runnable)>, methodtype: java.lang.Thread __METHODTYPE__(java.lang.Runnable));

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r1);

        return $r2;
    }

    public static void closeQuietly(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.lang.Throwable r1, $r2;

        r0 := @parameter0: java.io.Closeable;

     label1:
        if r0 == null goto label2;

        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static boolean readBoolean(android.os.Parcel)
    {
        android.os.Parcel r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void writeBoolean(android.os.Parcel, boolean)
    {
        android.os.Parcel r0;
        boolean z0;
        byte $b0;

        r0 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($b0);

        return;
    }

    public static java.lang.String getLocaleLanguageTag(java.util.Locale)
    {
        java.util.Locale r0;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.Locale;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r1 = staticinvoke <androidx.media3.common.util.Util: java.lang.String getLocaleLanguageTagV21(java.util.Locale)>(r0);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

     label2:
        return $r1;
    }

    public static java.lang.String normalizeLanguageCode(java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r5, $r6, $r9, r12, r13, r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.HashMap $r2, $r11, $r16;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r10;
        int $i0;
        java.lang.String[] $r14;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r12 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(95, 45);

        $z0 = virtualinvoke r12.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z4 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("und");

        if $z4 == 0 goto label3;

     label2:
        r12 = r0;

     label3:
        r13 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r12);

        $r14 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] splitAtFirst(java.lang.String,java.lang.String)>(r13, "-");

        r15 = $r14[0];

        $r16 = <androidx.media3.common.util.Util: java.util.HashMap languageTagReplacementMap>;

        if $r16 != null goto label4;

        $r11 = staticinvoke <androidx.media3.common.util.Util: java.util.HashMap createIsoLanguageReplacementMap()>();

        <androidx.media3.common.util.Util: java.util.HashMap languageTagReplacementMap> = $r11;

     label4:
        $r2 = <androidx.media3.common.util.Util: java.util.HashMap languageTagReplacementMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r15);

        r1 = (java.lang.String) $r3;

        if r1 == null goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $i0 = virtualinvoke r15.<java.lang.String: int length()>();

        $r9 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r15 = r1;

     label5:
        $r4 = "no";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z1 != 0 goto label6;

        $r5 = "i";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z2 != 0 goto label6;

        $r6 = "zh";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z3 == 0 goto label7;

     label6:
        r13 = staticinvoke <androidx.media3.common.util.Util: java.lang.String maybeReplaceLegacyLanguageTags(java.lang.String)>(r13);

     label7:
        return r13;
    }

    public static java.lang.String fromUtf8Bytes(byte[])
    {
        byte[] r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        r0 := @parameter0: byte[];

        $r1 = new java.lang.String;

        $r2 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r0, $r2);

        return $r1;
    }

    public static java.lang.String fromUtf8Bytes(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        $r2 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r0, i0, i1, $r2);

        return $r1;
    }

    public static byte[] getUtf8Bytes(java.lang.String)
    {
        java.lang.String r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        return $r2;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(r1, -1);

        return $r2;
    }

    public static java.lang.String[] splitAtFirst(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(r1, 2);

        return $r2;
    }

    public static boolean isLinebreak(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 10 goto label1;

        if i0 != 13 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static transient java.lang.String formatInvariant(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        java.util.Locale $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, r0, r1);

        return $r3;
    }

    public static int ceilDivide(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + i1;

        $i3 = $i2 - 1;

        $i4 = $i3 / i1;

        return $i4;
    }

    public static long ceilDivide(long, long)
    {
        long l0, l1, $l2, $l3, $l4;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = l0 + l1;

        $l3 = $l2 - 1L;

        $l4 = $l3 / l1;

        return $l4;
    }

    public static int constrainValue(int, int, int)
    {
        int i0, i1, i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i3);

        return $i4;
    }

    public static long constrainValue(long, long, long)
    {
        long l0, l1, l2, $l3, $l4;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>(l0, l2);

        $l4 = staticinvoke <java.lang.Math: long max(long,long)>(l1, $l3);

        return $l4;
    }

    public static float constrainValue(float, float, float)
    {
        float f0, f1, f2, $f3, $f4;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f2);

        $f4 = staticinvoke <java.lang.Math: float max(float,float)>(f1, $f3);

        return $f4;
    }

    public static long addWithOverflowDefault(long, long, long)
    {
        long l0, l1, l2, l3, $l4, $l5, $l6;
        byte $b7;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 = l0 + l1;

        $l5 = l0 ^ l3;

        $l4 = l1 ^ l3;

        $l6 = $l5 & $l4;

        $b7 = $l6 cmp 0L;

        if $b7 >= 0 goto label1;

        return l2;

     label1:
        return l3;
    }

    public static long subtractWithOverflowDefault(long, long, long)
    {
        long l0, l1, l2, l3, $l4, $l5, $l6;
        byte $b7;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 = l0 - l1;

        $l5 = l0 ^ l1;

        $l4 = l0 ^ l3;

        $l6 = $l5 & $l4;

        $b7 = $l6 cmp 0L;

        if $b7 >= 0 goto label1;

        return l2;

     label1:
        return l3;
    }

    public static int linearSearch(int[], int)
    {
        int[] r0;
        int i0, $i1, $i2, i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label3;

        $i2 = r0[i3];

        if $i2 != i0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static int linearSearch(long[], long)
    {
        long[] r0;
        long l0, $l2;
        int $i1, i4;
        byte $b3;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        i4 = 0;

     label1:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label3;

        $l2 = r0[i4];

        $b3 = $l2 cmp l0;

        if $b3 != 0 goto label2;

        return i4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static int binarySearchFloor(int[], int, boolean, boolean)
    {
        int[] r0;
        int i0, $i1, $i2, i3, $i4;
        boolean z0, z1;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i3 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>(r0, i0);

        if i3 >= 0 goto label1;

        $i2 = i3 + 2;

        i3 = neg $i2;

        goto label3;

     label1:
        i3 = i3 + -1;

        if i3 < 0 goto label2;

        $i1 = r0[i3];

        if $i1 != i0 goto label2;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        i3 = i3 + 1;

     label3:
        if z1 == 0 goto label4;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, i3);

        goto label5;

     label4:
        $i4 = i3;

     label5:
        return $i4;
    }

    public static int binarySearchFloor(long[], long, boolean, boolean)
    {
        long[] r0;
        long l0, $l1;
        boolean z0, z1;
        byte $b2;
        int $i3, i4, $i5;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i4 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>(r0, l0);

        if i4 >= 0 goto label1;

        $i3 = i4 + 2;

        i4 = neg $i3;

        goto label3;

     label1:
        i4 = i4 + -1;

        if i4 < 0 goto label2;

        $l1 = r0[i4];

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label2;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        i4 = i4 + 1;

     label3:
        if z1 == 0 goto label4;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, i4);

        goto label5;

     label4:
        $i5 = i4;

     label5:
        return $i5;
    }

    public static int binarySearchFloor(java.util.List, java.lang.Comparable, boolean, boolean)
    {
        java.util.List r0;
        java.lang.Comparable r1, $r3;
        boolean z0, z1;
        java.lang.Object $r2;
        int $i0, $i1, i2, $i3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Comparable;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i2 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>(r0, r1);

        if i2 >= 0 goto label1;

        $i1 = i2 + 2;

        i2 = neg $i1;

        goto label3;

     label1:
        i2 = i2 + -1;

        if i2 < 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        if $i0 != 0 goto label2;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        i2 = i2 + 1;

     label3:
        if z1 == 0 goto label4;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, i2);

        goto label5;

     label4:
        $i3 = i2;

     label5:
        return $i3;
    }

    public static int binarySearchFloor(androidx.media3.common.util.LongArray, long, boolean, boolean)
    {
        androidx.media3.common.util.LongArray r0;
        long l0, $l6, $l9;
        boolean z0, z1;
        int i1, $i2, $i3, $i4, $i5, $i8, i11, i12;
        byte $b7, $b10;

        r0 := @parameter0: androidx.media3.common.util.LongArray;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i11 = 0;

        $i2 = virtualinvoke r0.<androidx.media3.common.util.LongArray: int size()>();

        i12 = $i2 - 1;

     label1:
        if i11 > i12 goto label4;

        $i8 = i11 + i12;

        i1 = $i8 >>> 1;

        $l9 = virtualinvoke r0.<androidx.media3.common.util.LongArray: long get(int)>(i1);

        $b10 = $l9 cmp l0;

        if $b10 >= 0 goto label2;

        i11 = i1 + 1;

        goto label3;

     label2:
        i12 = i1 - 1;

     label3:
        goto label1;

     label4:
        if z0 == 0 goto label5;

        $i3 = i12 + 1;

        $i4 = virtualinvoke r0.<androidx.media3.common.util.LongArray: int size()>();

        if $i3 >= $i4 goto label5;

        $i5 = i12 + 1;

        $l6 = virtualinvoke r0.<androidx.media3.common.util.LongArray: long get(int)>($i5);

        $b7 = $l6 cmp l0;

        if $b7 != 0 goto label5;

        i12 = i12 + 1;

        goto label6;

     label5:
        if z1 == 0 goto label6;

        if i12 != -1 goto label6;

        i12 = 0;

     label6:
        return i12;
    }

    public static int binarySearchCeil(int[], int, boolean, boolean)
    {
        int[] r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i6;
        boolean z0, z1;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i5 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>(r0, i0);

        if i5 >= 0 goto label1;

        i5 = i5 ^ -1;

        goto label3;

     label1:
        i5 = i5 + 1;

        $i1 = lengthof r0;

        if i5 >= $i1 goto label2;

        $i4 = r0[i5];

        if $i4 != i0 goto label2;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        i5 = i5 + -1;

     label3:
        if z1 == 0 goto label4;

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i5);

        goto label5;

     label4:
        $i6 = i5;

     label5:
        return $i6;
    }

    public static int binarySearchCeil(long[], long, boolean, boolean)
    {
        long[] r0;
        long l0, $l4;
        boolean z0, z1;
        int $i1, $i2, $i3, i6, $i7;
        byte $b5;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i6 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>(r0, l0);

        if i6 >= 0 goto label1;

        i6 = i6 ^ -1;

        goto label3;

     label1:
        i6 = i6 + 1;

        $i1 = lengthof r0;

        if i6 >= $i1 goto label2;

        $l4 = r0[i6];

        $b5 = $l4 cmp l0;

        if $b5 != 0 goto label2;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        i6 = i6 + -1;

     label3:
        if z1 == 0 goto label4;

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i6);

        goto label5;

     label4:
        $i7 = i6;

     label5:
        return $i7;
    }

    public static int binarySearchCeil(java.util.List, java.lang.Comparable, boolean, boolean)
    {
        java.util.List r0;
        java.lang.Comparable r1, $r3;
        boolean z0, z1;
        int i0, $i1, $i2, $i3, i4, $i5;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Comparable;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i4 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>(r0, r1);

        if i4 >= 0 goto label1;

        i4 = i4 ^ -1;

        goto label4;

     label1:
        i0 = interfaceinvoke r0.<java.util.List: int size()>();

     label2:
        i4 = i4 + 1;

        if i4 >= i0 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        $r3 = (java.lang.Comparable) $r2;

        $i3 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        if $i3 != 0 goto label3;

        goto label2;

     label3:
        if z0 == 0 goto label4;

        i4 = i4 + -1;

     label4:
        if z1 == 0 goto label5;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i2, i4);

        goto label6;

     label5:
        $i5 = i4;

     label6:
        return $i5;
    }

    public static int compareLong(long, long)
    {
        long l0, l1;
        byte $b2, $b3, $b4;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label1;

        $b4 = -1;

        goto label3;

     label1:
        $b3 = l0 cmp l1;

        if $b3 != 0 goto label2;

        $b4 = 0;

        goto label3;

     label2:
        $b4 = 1;

     label3:
        return $b4;
    }

    public static long minValue(android.util.SparseLongArray)
    {
        android.util.SparseLongArray r0;
        int $i0, $i1, i4;
        long $l2, l3;
        java.util.NoSuchElementException $r1;

        r0 := @parameter0: android.util.SparseLongArray;

        $i0 = virtualinvoke r0.<android.util.SparseLongArray: int size()>();

        if $i0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        l3 = 9223372036854775807L;

        i4 = 0;

     label2:
        $i1 = virtualinvoke r0.<android.util.SparseLongArray: int size()>();

        if i4 >= $i1 goto label3;

        $l2 = virtualinvoke r0.<android.util.SparseLongArray: long valueAt(int)>(i4);

        l3 = staticinvoke <java.lang.Math: long min(long,long)>(l3, $l2);

        i4 = i4 + 1;

        goto label2;

     label3:
        return l3;
    }

    public static long maxValue(android.util.SparseLongArray)
    {
        android.util.SparseLongArray r0;
        int $i0, $i1, i4;
        long $l2, l3;
        java.util.NoSuchElementException $r1;

        r0 := @parameter0: android.util.SparseLongArray;

        $i0 = virtualinvoke r0.<android.util.SparseLongArray: int size()>();

        if $i0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        l3 = -9223372036854775808L;

        i4 = 0;

     label2:
        $i1 = virtualinvoke r0.<android.util.SparseLongArray: int size()>();

        if i4 >= $i1 goto label3;

        $l2 = virtualinvoke r0.<android.util.SparseLongArray: long valueAt(int)>(i4);

        l3 = staticinvoke <java.lang.Math: long max(long,long)>(l3, $l2);

        i4 = i4 + 1;

        goto label2;

     label3:
        return l3;
    }

    public static long usToMs(long)
    {
        long l0, $l3;
        byte $b1, $b2;

        l0 := @parameter0: long;

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 == 0 goto label1;

        $b2 = l0 cmp -9223372036854775808L;

        if $b2 != 0 goto label2;

     label1:
        $l3 = l0;

        goto label3;

     label2:
        $l3 = l0 / 1000L;

     label3:
        return $l3;
    }

    public static long msToUs(long)
    {
        long l0, $l3;
        byte $b1, $b2;

        l0 := @parameter0: long;

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 == 0 goto label1;

        $b2 = l0 cmp -9223372036854775808L;

        if $b2 != 0 goto label2;

     label1:
        $l3 = l0;

        goto label3;

     label2:
        $l3 = l0 * 1000L;

     label3:
        return $l3;
    }

    public static long parseXsDuration(java.lang.String)
    {
        java.lang.String r0, r2, r3, r4, r5, r6, r7, $r9;
        java.util.regex.Matcher r1;
        boolean z0, $z1, $z2, $z3;
        long l0, $l1, $l2;
        java.util.regex.Pattern $r8;
        double $d0, $d1, $d2, $d3, $d5, $d7, $d9, $d11, $d13, $d14, d15, $d16, d17, $d18, d19, $d20, d21, $d22, d23, $d24, d25;

        r0 := @parameter0: java.lang.String;

        $r8 = <androidx.media3.common.util.Util: java.util.regex.Pattern XS_DURATION_PATTERN>;

        r1 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z1 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label17;

        $r9 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z2 != 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z0 = $z3;

        r2 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        if r2 == null goto label03;

        $d13 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r2);

        $d14 = $d13 * 3.1556908E7;

        goto label04;

     label03:
        $d14 = 0.0;

     label04:
        d15 = $d14;

        r3 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        if r3 == null goto label05;

        $d11 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

        $d16 = $d11 * 2629739.0;

        goto label06;

     label05:
        $d16 = 0.0;

     label06:
        d17 = d15 + $d16;

        r4 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(7);

        if r4 == null goto label07;

        $d9 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r4);

        $d18 = $d9 * 86400.0;

        goto label08;

     label07:
        $d18 = 0.0;

     label08:
        d19 = d17 + $d18;

        r5 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(10);

        if r5 == null goto label09;

        $d7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r5);

        $d20 = $d7 * 3600.0;

        goto label10;

     label09:
        $d20 = 0.0;

     label10:
        d21 = d19 + $d20;

        r6 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(12);

        if r6 == null goto label11;

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r6);

        $d22 = $d5 * 60.0;

        goto label12;

     label11:
        $d22 = 0.0;

     label12:
        d23 = d21 + $d22;

        r7 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(14);

        if r7 == null goto label13;

        $d24 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r7);

        goto label14;

     label13:
        $d24 = 0.0;

     label14:
        d25 = d23 + $d24;

        $d3 = d25 * 1000.0;

        l0 = (long) $d3;

        if z0 == 0 goto label15;

        $l2 = neg l0;

        goto label16;

     label15:
        $l2 = l0;

     label16:
        return $l2;

     label17:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

        $d1 = $d0 * 3600.0;

        $d2 = $d1 * 1000.0;

        $l1 = (long) $d2;

        return $l1;
    }

    public static long parseXsDateTime(java.lang.String) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, $r4, $r5, $r6, $r7, $r8, $r9, $r13, $r15, $r20, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        java.util.regex.Matcher r1;
        java.util.GregorianCalendar r2, r33;
        java.util.regex.Pattern $r3;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        long $l3, $l4, l14;
        java.lang.StringBuilder $r12, $r14, $r18, $r19, r32, r34;
        java.math.BigDecimal $r16, r31, r35;
        androidx.media3.common.ParserException $r21;
        java.util.TimeZone $r23;
        java.lang.Throwable r36;

        r0 := @parameter0: java.lang.String;

        $r3 = <androidx.media3.common.util.Util: java.util.regex.Pattern XS_DATE_TIME_PATTERN>;

        r1 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label1;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid date/time format: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>($r20, null);

        r36 = (java.lang.Throwable) $r21;

        throw r36;

     label1:
        $r4 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(9);

        if $r4 != null goto label2;

        i6 = 0;

        goto label4;

     label2:
        $r5 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(9);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Z");

        if $z1 == 0 goto label3;

        i6 = 0;

        goto label4;

     label3:
        $r6 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(12);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $i1 = $i0 * 60;

        $r7 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(13);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        i6 = $i1 + $i2;

        $r8 = "-";

        $r9 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(11);

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label4;

        i6 = i6 * -1;

     label4:
        r33 = new java.util.GregorianCalendar;

        $r23 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        specialinvoke r33.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r23);

        r2 = r33;

        virtualinvoke r2.<java.util.Calendar: void clear()>();

        $r24 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        $r25 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        $i9 = $i8 - 1;

        $r26 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        $r27 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        $r28 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

        $r29 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r29);

        virtualinvoke r2.<java.util.Calendar: void set(int,int,int,int,int,int)>($i7, $i9, $i10, $i11, $i12, $i13);

        $r30 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(8);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r30);

        if $z3 != 0 goto label5;

        r35 = new java.math.BigDecimal;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.");

        $r13 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(8);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<java.math.BigDecimal: void <init>(java.lang.String)>($r15);

        r31 = r35;

        $r16 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal movePointRight(int)>(3);

        $i5 = virtualinvoke $r16.<java.math.BigDecimal: int intValue()>();

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, $i5);

     label5:
        l14 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        if i6 == 0 goto label6;

        $l3 = (long) i6;

        $l4 = $l3 * 60000L;

        l14 = l14 - $l4;

     label6:
        return l14;
    }

    public static long scaleLargeTimestamp(long, long, long)
    {
        long l0, l1, l2, $l5, $l6, $l8, $l9, $l11, l12, l13;
        byte $b3, $b4, $b7, $b10;
        double $d0, $d1, $d2, $d3, d4;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $b3 = l2 cmp l1;

        if $b3 < 0 goto label1;

        $l9 = l2 % l1;

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label1;

        l12 = l2 / l1;

        $l11 = l0 / l12;

        return $l11;

     label1:
        $b4 = l2 cmp l1;

        if $b4 >= 0 goto label2;

        $l6 = l1 % l2;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label2;

        l13 = l1 / l2;

        $l8 = l0 * l13;

        return $l8;

     label2:
        $d1 = (double) l1;

        $d0 = (double) l2;

        d4 = $d1 / $d0;

        $d2 = (double) l0;

        $d3 = $d2 * d4;

        $l5 = (long) $d3;

        return $l5;
    }

    public static long[] scaleLargeTimestamps(java.util.List, long, long)
    {
        java.util.List r0;
        long l0, l1, $l5, $l6, $l7, $l10, $l11, $l12, $l15, $l16, l17, l19;
        long[] r1;
        int $i2, $i9, $i14, i18, i20, i21, $i22;
        byte $b3, $b4, $b8, $b13;
        double $d0, $d1, $d2, $d3, d4;
        java.lang.Object $r2, $r4, $r6;
        java.lang.Long $r3, $r5, $r7;

        r0 := @parameter0: java.util.List;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (long)[$i2];

        $b3 = l1 cmp l0;

        if $b3 < 0 goto label3;

        $l12 = l1 % l0;

        $b13 = $l12 cmp 0L;

        if $b13 != 0 goto label3;

        l17 = l1 / l0;

        i18 = 0;

     label1:
        $i14 = lengthof r1;

        if i18 >= $i14 goto label2;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i18);

        $r7 = (java.lang.Long) $r6;

        $l15 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $l16 = $l15 / l17;

        r1[i18] = $l16;

        i18 = i18 + 1;

        goto label1;

     label2:
        goto label8;

     label3:
        $b4 = l1 cmp l0;

        if $b4 >= 0 goto label6;

        $l7 = l0 % l1;

        $b8 = $l7 cmp 0L;

        if $b8 != 0 goto label6;

        l19 = l0 / l1;

        i20 = 0;

     label4:
        $i9 = lengthof r1;

        if i20 >= $i9 goto label5;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i20);

        $r5 = (java.lang.Long) $r4;

        $l10 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $l11 = $l10 * l19;

        r1[i20] = $l11;

        i20 = i20 + 1;

        goto label4;

     label5:
        goto label8;

     label6:
        $d1 = (double) l0;

        $d0 = (double) l1;

        d4 = $d1 / $d0;

        i21 = 0;

     label7:
        $i22 = lengthof r1;

        if i21 >= $i22 goto label8;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i21);

        $r3 = (java.lang.Long) $r2;

        $l5 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $d2 = (double) $l5;

        $d3 = $d2 * d4;

        $l6 = (long) $d3;

        r1[i21] = $l6;

        i21 = i21 + 1;

        goto label7;

     label8:
        return r1;
    }

    public static void scaleLargeTimestampsInPlace(long[], long, long)
    {
        long[] r0;
        long l0, l1, $l4, $l5, $l6, $l9, $l10, $l11, $l14, $l15, l16, l18;
        byte $b2, $b3, $b7, $b12;
        double $d0, $d1, $d2, $d3, d4;
        int $i8, $i13, i17, i19, i20, $i21;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $b2 = l1 cmp l0;

        if $b2 < 0 goto label3;

        $l11 = l1 % l0;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label3;

        l16 = l1 / l0;

        i17 = 0;

     label1:
        $i13 = lengthof r0;

        if i17 >= $i13 goto label2;

        $l14 = r0[i17];

        $l15 = $l14 / l16;

        r0[i17] = $l15;

        i17 = i17 + 1;

        goto label1;

     label2:
        goto label8;

     label3:
        $b3 = l1 cmp l0;

        if $b3 >= 0 goto label6;

        $l6 = l0 % l1;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label6;

        l18 = l0 / l1;

        i19 = 0;

     label4:
        $i8 = lengthof r0;

        if i19 >= $i8 goto label5;

        $l9 = r0[i19];

        $l10 = $l9 * l18;

        r0[i19] = $l10;

        i19 = i19 + 1;

        goto label4;

     label5:
        goto label8;

     label6:
        $d1 = (double) l0;

        $d0 = (double) l1;

        d4 = $d1 / $d0;

        i20 = 0;

     label7:
        $i21 = lengthof r0;

        if i20 >= $i21 goto label8;

        $l4 = r0[i20];

        $d2 = (double) $l4;

        $d3 = $d2 * d4;

        $l5 = (long) $d3;

        r0[i20] = $l5;

        i20 = i20 + 1;

        goto label7;

     label8:
        return;
    }

    public static long getMediaDurationForPlayoutDuration(long, float)
    {
        long l0, $l2;
        float f0;
        byte $b1;
        double $d0, $d1, $d2;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        $b1 = f0 cmpl 1.0F;

        if $b1 != 0 goto label1;

        return l0;

     label1:
        $d1 = (double) l0;

        $d0 = (double) f0;

        $d2 = $d1 * $d0;

        $l2 = staticinvoke <java.lang.Math: long round(double)>($d2);

        return $l2;
    }

    public static long getPlayoutDurationForMediaDuration(long, float)
    {
        long l0, $l2;
        float f0;
        byte $b1;
        double $d0, $d1, $d2;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        $b1 = f0 cmpl 1.0F;

        if $b1 != 0 goto label1;

        return l0;

     label1:
        $d1 = (double) l0;

        $d0 = (double) f0;

        $d2 = $d1 / $d0;

        $l2 = staticinvoke <java.lang.Math: long round(double)>($d2);

        return $l2;
    }

    public static int getIntegerCodeForString(java.lang.String)
    {
        java.lang.String r0;
        int i0, i2, i3, i4;
        char $c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 > 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        i2 = 0;

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        i4 = i2 << 8;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        i2 = i4 | $c1;

        i3 = i3 + 1;

        goto label3;

     label4:
        return i2;
    }

    public static long toUnsignedLong(int)
    {
        int i0;
        long $l1, $l2;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $l2 = $l1 & 4294967295L;

        return $l2;
    }

    public static long toLong(int, int)
    {
        int i0, i1;
        long $l2, $l3, $l4, $l5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = staticinvoke <androidx.media3.common.util.Util: long toUnsignedLong(int)>(i0);

        $l3 = $l2 << 32;

        $l4 = staticinvoke <androidx.media3.common.util.Util: long toUnsignedLong(int)>(i1);

        $l5 = $l3 | $l4;

        return $l5;
    }

    public static java.lang.CharSequence truncateAscii(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0, $r1;
        int i0, $i1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if $i1 > i0 goto label1;

        $r1 = r0;

        goto label2;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, i0);

     label2:
        return $r1;
    }

    public static byte[] getBytesFromHexString(java.lang.String)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, i12;
        char $c4, $c8;
        byte $b11;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 / 2;

        r1 = newarray (byte)[$i2];

        i12 = 0;

     label1:
        $i3 = lengthof r1;

        if i12 >= $i3 goto label2;

        i0 = i12 * 2;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i5 = staticinvoke <java.lang.Character: int digit(char,int)>($c4, 16);

        $i7 = $i5 << 4;

        $i6 = i0 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i9 = staticinvoke <java.lang.Character: int digit(char,int)>($c8, 16);

        $i10 = $i7 + $i9;

        $b11 = (byte) $i10;

        r1[i12] = $b11;

        i12 = i12 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.String toHexString(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder r1, $r2, $r4;
        int $i0, $i1, $i2, i10;
        java.lang.String $r3;
        byte $b3, $b4, $b5, $b7, $b8;
        char $c6, $c9;

        r0 := @parameter0: byte[];

        $r2 = new java.lang.StringBuilder;

        $i0 = lengthof r0;

        $i1 = $i0 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        r1 = $r2;

        i10 = 0;

     label1:
        $i2 = lengthof r0;

        if i10 >= $i2 goto label2;

        $b3 = r0[i10];

        $b4 = $b3 >> 4;

        $b5 = $b4 & 15;

        $c6 = staticinvoke <java.lang.Character: char forDigit(int,int)>($b5, 16);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $b7 = r0[i10];

        $b8 = $b7 & 15;

        $c9 = staticinvoke <java.lang.Character: char forDigit(int,int)>($b8, 16);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        i10 = i10 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String getCommaDelimitedSimpleClassNames(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.StringBuilder r1, $r2;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3, $r6;
        java.lang.Object $r4;
        java.lang.Class $r5;

        r0 := @parameter0: java.lang.Object[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label3;

        $r4 = r0[i3];

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        if i3 >= $i2 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String getUserAgent(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r9, $r13, r15, r16;
        android.content.pm.PackageInfo r2;
        android.content.pm.PackageManager $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12;
        java.lang.Throwable $r14, r17;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

     label1:
        r15 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r15, 0);

        r16 = r2.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        r17 = $r14;

        r16 = "?";

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Linux;Android ");

        $r9 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AndroidXMedia3/1.0.0-rc02");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static int getCodecCountOfType(java.lang.String, int)
    {
        java.lang.String r0, r3;
        int i0, i1, $i2, i3, i4;
        java.lang.String[] r1, r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] splitCodecs(java.lang.String)>(r0);

        i3 = 0;

        r2 = r1;

        i1 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        r3 = r2[i4];

        $i2 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackTypeOfCodec(java.lang.String)>(r3);

        if i0 != $i2 goto label2;

        i3 = i3 + 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return i3;
    }

    public static java.lang.String getCodecsOfType(java.lang.String, int)
    {
        java.lang.String r0, r4, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String[] r1, r3;
        java.lang.StringBuilder r2, $r5;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] splitCodecs(java.lang.String)>(r0);

        $i2 = lengthof r1;

        if $i2 != 0 goto label1;

        return null;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        r3 = r1;

        i1 = lengthof r3;

        i6 = 0;

     label2:
        if i6 >= i1 goto label5;

        r4 = r3[i6];

        $i4 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackTypeOfCodec(java.lang.String)>(r4);

        if i0 != $i4 goto label4;

        $i5 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i5 <= 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        $i3 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label6;

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label7;

     label6:
        $r8 = null;

     label7:
        return $r8;
    }

    public static java.lang.String[] splitCodecs(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;
        java.lang.String[] $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r3 = newarray (java.lang.String)[0];

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>($r1, "(\\s*,\\s*)");

        return $r2;
    }

    public static androidx.media3.common.Format getPcmFormat(int, int, int)
    {
        int i0, i1, i2;
        androidx.media3.common.Format$Builder $r0, $r1, $r2, $r3, $r4;
        androidx.media3.common.Format $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new androidx.media3.common.Format$Builder;

        specialinvoke $r0.<androidx.media3.common.Format$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("audio/raw");

        $r2 = virtualinvoke $r1.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>(i1);

        $r3 = virtualinvoke $r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleRate(int)>(i2);

        $r4 = virtualinvoke $r3.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPcmEncoding(int)>(i0);

        $r5 = virtualinvoke $r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        return $r5;
    }

    public static int getPcmEncoding(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 8: goto label1;
            case 16: goto label2;
            case 24: goto label3;
            case 32: goto label4;
            default: goto label5;
        };

     label1:
        return 3;

     label2:
        return 2;

     label3:
        return 536870912;

     label4:
        return 805306368;

     label5:
        return 0;
    }

    public static boolean isEncodingLinearPcm(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 3 goto label1;

        if i0 == 2 goto label1;

        if i0 == 268435456 goto label1;

        if i0 == 536870912 goto label1;

        if i0 == 805306368 goto label1;

        if i0 != 4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isEncodingHighResolutionPcm(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 536870912 goto label1;

        if i0 == 805306368 goto label1;

        if i0 != 4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static int getAudioTrackChannelConfig(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label10;
            case 10: goto label10;
            case 11: goto label10;
            case 12: goto label09;
            default: goto label10;
        };

     label01:
        return 4;

     label02:
        return 12;

     label03:
        return 28;

     label04:
        return 204;

     label05:
        return 220;

     label06:
        return 252;

     label07:
        return 1276;

     label08:
        return 6396;

     label09:
        return 743676;

     label10:
        return 0;
    }

    public static int getPcmFrameSize(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        lookupswitch(i0)
        {
            case -1: goto label5;
            case 0: goto label5;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label4;
            case 268435456: goto label2;
            case 536870912: goto label3;
            case 805306368: goto label4;
            default: goto label5;
        };

     label1:
        return i1;

     label2:
        $i4 = i1 * 2;

        return $i4;

     label3:
        $i2 = i1 * 3;

        return $i2;

     label4:
        $i3 = i1 * 4;

        return $i3;

     label5:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;
    }

    public static int getAudioUsageForStreamType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label7;
            case 4: goto label1;
            case 5: goto label3;
            case 6: goto label7;
            case 7: goto label7;
            case 8: goto label2;
            default: goto label7;
        };

     label1:
        return 4;

     label2:
        return 3;

     label3:
        return 5;

     label4:
        return 6;

     label5:
        return 13;

     label6:
        return 2;

     label7:
        return 1;
    }

    public static int getAudioContentTypeForStreamType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label3;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label1;
            default: goto label3;
        };

     label1:
        return 4;

     label2:
        return 1;

     label3:
        return 2;
    }

    public static int getStreamTypeForAudioUsage(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label8;
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label7;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label7;
            case 9: goto label7;
            case 10: goto label7;
            case 11: goto label8;
            case 12: goto label1;
            case 13: goto label2;
            case 14: goto label1;
            case 15: goto label8;
            case 16: goto label8;
            default: goto label8;
        };

     label1:
        return 3;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        return 8;

     label5:
        return 4;

     label6:
        return 2;

     label7:
        return 5;

     label8:
        return 3;
    }

    public static int generateAudioSessionIdV21(android.content.Context)
    {
        android.content.Context r0;
        android.media.AudioManager r1;
        java.lang.Object $r2;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        r1 = (android.media.AudioManager) $r2;

        if r1 != null goto label1;

        $i0 = -1;

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<android.media.AudioManager: int generateAudioSessionId()>();

     label2:
        return $i0;
    }

    public static java.util.UUID getDrmUuid(java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.Throwable r2, $r7;
        int $i0;
        boolean $z0, $z1, $z2;
        java.util.UUID $r3, $r4, $r5, $r6;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r0);

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1860423953: goto label02;
            case -1400551171: goto label01;
            case 790309106: goto label03;
            default: goto label04;
        };

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("widevine");

        if $z1 == 0 goto label04;

        b1 = 0;

        goto label04;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("playready");

        if $z2 == 0 goto label04;

        b1 = 1;

        goto label04;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("clearkey");

        if $z0 == 0 goto label04;

        b1 = 2;

     label04:
        tableswitch(b1)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label07;
            default: goto label08;
        };

     label05:
        $r5 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        return $r5;

     label06:
        $r4 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        return $r4;

     label07:
        $r3 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        return $r3;

     label08:
        $r6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(r0);

     label09:
        return $r6;

     label10:
        $r7 := @caughtexception;

        r2 = $r7;

        return null;

        catch java.lang.RuntimeException from label08 to label09 with label10;
    }

    public static int getErrorCodeForMediaDrmErrorCode(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label3;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label3;
            case 8: goto label4;
            case 9: goto label5;
            case 10: goto label2;
            case 11: goto label5;
            case 12: goto label5;
            case 13: goto label5;
            case 14: goto label5;
            case 15: goto label4;
            case 16: goto label3;
            case 17: goto label2;
            case 18: goto label3;
            case 19: goto label2;
            case 20: goto label2;
            case 21: goto label2;
            case 22: goto label2;
            case 23: goto label5;
            case 24: goto label1;
            case 25: goto label1;
            case 26: goto label1;
            case 27: goto label1;
            case 28: goto label1;
            default: goto label5;
        };

     label1:
        return 6002;

     label2:
        return 6004;

     label3:
        return 6005;

     label4:
        return 6003;

     label5:
        return 6006;
    }

    public static int inferContentType(android.net.Uri, java.lang.String)
    {
        android.net.Uri r0;
        java.lang.String r1;
        boolean $z0;
        int $i0;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <androidx.media3.common.util.Util: int inferContentType(android.net.Uri)>(r0);

        goto label2;

     label1:
        $i0 = staticinvoke <androidx.media3.common.util.Util: int inferContentTypeForExtension(java.lang.String)>(r1);

     label2:
        return $i0;
    }

    public static int inferContentType(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String r1, r2, r3, $r5, $r8;
        int i0, $i1, i2;
        java.util.regex.Pattern $r4;
        java.lang.Object $r6;
        java.lang.CharSequence $r7;
        boolean $z0, $z1, $z2, $z3;
        java.util.regex.Matcher r9;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        if r1 == null goto label1;

        $z3 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("rtsp", r1);

        if $z3 == 0 goto label1;

        return 3;

     label1:
        r2 = virtualinvoke r0.<android.net.Uri: java.lang.String getLastPathSegment()>();

        if r2 != null goto label2;

        return 4;

     label2:
        i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 < 0 goto label3;

        $i1 = i0 + 1;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        i2 = staticinvoke <androidx.media3.common.util.Util: int inferContentTypeForExtension(java.lang.String)>($r8);

        if i2 == 4 goto label3;

        return i2;

     label3:
        $r4 = <androidx.media3.common.util.Util: java.util.regex.Pattern ISM_PATH_PATTERN>;

        $r5 = virtualinvoke r0.<android.net.Uri: java.lang.String getPath()>();

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (java.lang.CharSequence) $r6;

        r9 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r7);

        $z0 = virtualinvoke r9.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label6;

        r3 = virtualinvoke r9.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        if r3 == null goto label5;

        $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("format=mpd-time-csf");

        if $z1 == 0 goto label4;

        return 0;

     label4:
        $z2 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("format=m3u8-aapl");

        if $z2 == 0 goto label5;

        return 2;

     label5:
        return 1;

     label6:
        return 4;
    }

    public static int inferContentType(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;
        android.net.Uri $r5;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:///");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        $i0 = staticinvoke <androidx.media3.common.util.Util: int inferContentType(android.net.Uri)>($r5);

        return $i0;
    }

    public static int inferContentTypeForExtension(java.lang.String)
    {
        java.lang.String r0, r1, r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        byte b1;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r1);

        r0 = r2;

        b1 = -1;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 104579: goto label3;
            case 108321: goto label1;
            case 3242057: goto label4;
            case 3299913: goto label2;
            default: goto label5;
        };

     label1:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("mpd");

        if $z2 == 0 goto label5;

        b1 = 0;

        goto label5;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("m3u8");

        if $z0 == 0 goto label5;

        b1 = 1;

        goto label5;

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ism");

        if $z3 == 0 goto label5;

        b1 = 2;

        goto label5;

     label4:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("isml");

        if $z1 == 0 goto label5;

        b1 = 3;

     label5:
        tableswitch(b1)
        {
            case 0: goto label6;
            case 1: goto label7;
            case 2: goto label8;
            case 3: goto label8;
            default: goto label9;
        };

     label6:
        return 0;

     label7:
        return 2;

     label8:
        return 1;

     label9:
        return 4;
    }

    public static int inferContentTypeForUriAndMimeType(android.net.Uri, java.lang.String)
    {
        android.net.Uri r0;
        java.lang.String r1, r2;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        byte b2;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label01;

        $i1 = staticinvoke <androidx.media3.common.util.Util: int inferContentType(android.net.Uri)>(r0);

        return $i1;

     label01:
        r2 = r1;

        b2 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -979127466: goto label03;
            case -156749520: goto label04;
            case 64194685: goto label02;
            case 1154777587: goto label05;
            default: goto label06;
        };

     label02:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("application/dash+xml");

        if $z1 == 0 goto label06;

        b2 = 0;

        goto label06;

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("application/x-mpegURL");

        if $z3 == 0 goto label06;

        b2 = 1;

        goto label06;

     label04:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("application/vnd.ms-sstr+xml");

        if $z2 == 0 goto label06;

        b2 = 2;

        goto label06;

     label05:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("application/x-rtsp");

        if $z0 == 0 goto label06;

        b2 = 3;

     label06:
        tableswitch(b2)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            default: goto label11;
        };

     label07:
        return 0;

     label08:
        return 2;

     label09:
        return 1;

     label10:
        return 3;

     label11:
        return 4;
    }

    public static java.lang.String getAdaptiveMimeTypeForContentType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label4;
        };

     label1:
        return "application/dash+xml";

     label2:
        return "application/x-mpegURL";

     label3:
        return "application/vnd.ms-sstr+xml";

     label4:
        return null;
    }

    public static android.net.Uri fixSmoothStreamingIsmManifestUri(android.net.Uri)
    {
        android.net.Uri r0, $r5;
        java.lang.String r1, $r4;
        java.util.regex.Matcher r2;
        java.util.regex.Pattern $r3;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getPath()>();

        if r1 != null goto label1;

        return r0;

     label1:
        $r3 = <androidx.media3.common.util.Util: java.util.regex.Pattern ISM_PATH_PATTERN>;

        r2 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        if $r4 != null goto label2;

        $r5 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r0, "Manifest");

        return $r5;

     label2:
        return r0;
    }

    public static java.lang.String getStringForTime(java.lang.StringBuilder, java.util.Formatter, long)
    {
        java.lang.StringBuilder r0;
        java.util.Formatter r1, $r6, $r11;
        java.lang.String r2, $r12, $r13;
        long l0, l1, l2, l3, $l6, $l7, l9, l10;
        byte $b4, $b5, $b8;
        java.lang.Object[] $r3, $r7;
        java.lang.Long $r4, $r5, $r8, $r9, $r10;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.util.Formatter;

        l9 := @parameter2: long;

        $b4 = l9 cmp -9223372036854775807L;

        if $b4 != 0 goto label1;

        l9 = 0L;

     label1:
        $b5 = l9 cmp 0L;

        if $b5 >= 0 goto label2;

        $r12 = "-";

        goto label3;

     label2:
        $r12 = "";

     label3:
        r2 = $r12;

        l10 = staticinvoke <java.lang.Math: long abs(long)>(l9);

        $l6 = l10 + 500L;

        l0 = $l6 / 1000L;

        l1 = l0 % 60L;

        $l7 = l0 / 60L;

        l2 = $l7 % 60L;

        l3 = l0 / 3600L;

        virtualinvoke r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $b8 = l3 cmp 0L;

        if $b8 <= 0 goto label4;

        $r7 = newarray (java.lang.Object)[4];

        $r7[0] = r2;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r7[1] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r7[2] = $r9;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r7[3] = $r10;

        $r11 = virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s%d:%02d:%02d", $r7);

        $r13 = virtualinvoke $r11.<java.util.Formatter: java.lang.String toString()>();

        goto label5;

     label4:
        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r2;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r3[2] = $r5;

        $r6 = virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s%02d:%02d", $r3);

        $r13 = virtualinvoke $r6.<java.util.Formatter: java.lang.String toString()>();

     label5:
        return $r13;
    }

    public static java.lang.String escapeFileName(java.lang.String)
    {
        java.lang.String r0, $r3, $r7;
        int i0, $i2, $i3, $i4, i6, i7, i8;
        java.lang.StringBuilder r1, $r2, $r6;
        char c1, $c5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i6 = 0;

        i7 = 0;

     label1:
        if i7 >= i0 goto label3;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean shouldEscapeCharacter(char)>($c5);

        if $z1 == 0 goto label2;

        i6 = i6 + 1;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        if i6 != 0 goto label4;

        return r0;

     label4:
        i8 = 0;

        $r2 = new java.lang.StringBuilder;

        $i2 = i6 * 2;

        $i3 = i0 + $i2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i3);

        r1 = $r2;

     label5:
        if i6 <= 0 goto label8;

        $i4 = i8;

        i8 = i8 + 1;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean shouldEscapeCharacter(char)>(c1);

        if $z0 == 0 goto label6;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i6 = i6 + -1;

        goto label7;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label7:
        goto label5;

     label8:
        if i8 >= i0 goto label9;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, i8, i0);

     label9:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static boolean shouldEscapeCharacter(char)
    {
        char c0;

        c0 := @parameter0: char;

        lookupswitch(c0)
        {
            case 34: goto label1;
            case 37: goto label1;
            case 42: goto label1;
            case 47: goto label1;
            case 58: goto label1;
            case 60: goto label1;
            case 62: goto label1;
            case 63: goto label1;
            case 92: goto label1;
            case 124: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public static java.lang.String unescapeFileName(java.lang.String)
    {
        java.lang.String r0, $r5, $r7, $r9;
        int i0, $i2, $i3, $i4, $i5, i7, i8, i9, i10;
        java.lang.StringBuilder r1, $r3, $r10;
        java.util.regex.Matcher r2;
        char c1, $c6;
        java.util.regex.Pattern $r4;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i7 = 0;

        i8 = 0;

     label1:
        if i8 >= i0 goto label3;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        if $c6 != 37 goto label2;

        i7 = i7 + 1;

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        if i7 != 0 goto label4;

        return r0;

     label4:
        $i2 = i7 * 2;

        i9 = i0 - $i2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(i9);

        r1 = $r3;

        $r4 = <androidx.media3.common.util.Util: java.util.regex.Pattern ESCAPED_CHARACTER_PATTERN>;

        r2 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        i10 = 0;

     label5:
        if i7 <= 0 goto label6;

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label6;

        $r7 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = (java.lang.String) $r8;

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r9, 16);

        c1 = (char) $i4;

        $i5 = virtualinvoke r2.<java.util.regex.Matcher: int start()>();

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, i10, $i5);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        i10 = virtualinvoke r2.<java.util.regex.Matcher: int end()>();

        i7 = i7 + -1;

        goto label5;

     label6:
        if i10 >= i0 goto label7;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, i10, i0);

     label7:
        $i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i3 == i9 goto label8;

        return null;

     label8:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static android.net.Uri getDataUriForString(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r7, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r8;
        byte[] $r6;
        android.net.Uri $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";base64,");

        $r6 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        $r7 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r6, 2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r9);

        return $r10;
    }

    public static void sneakyThrow(java.lang.Throwable)
    {
        java.lang.Throwable r0;

        r0 := @parameter0: java.lang.Throwable;

        staticinvoke <androidx.media3.common.util.Util: void sneakyThrowInternal(java.lang.Throwable)>(r0);

        return;
    }

    private static void sneakyThrowInternal(java.lang.Throwable) throws java.lang.Throwable
    {
        java.lang.Throwable r0;

        r0 := @parameter0: java.lang.Throwable;

        throw r0;
    }

    public static void recursiveDelete(java.io.File)
    {
        java.io.File r0, r3;
        java.io.File[] r1, r2;
        int i0, i1;

        r0 := @parameter0: java.io.File;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label2;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        staticinvoke <androidx.media3.common.util.Util: void recursiveDelete(java.io.File)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<java.io.File: boolean delete()>();

        return;
    }

    public static java.io.File createTempDirectory(android.content.Context, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String r1;
        java.io.File r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <androidx.media3.common.util.Util: java.io.File createTempFile(android.content.Context,java.lang.String)>(r0, r1);

        virtualinvoke r2.<java.io.File: boolean delete()>();

        virtualinvoke r2.<java.io.File: boolean mkdir()>();

        return r2;
    }

    public static java.io.File createTempFile(android.content.Context, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String r1;
        java.io.File $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.Context: java.io.File getCacheDir()>();

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (java.io.File) $r3;

        $r5 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>(r1, null, $r4);

        return $r5;
    }

    public static int crc32(byte[], int, int, int)
    {
        byte[] r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, i9, i10;
        byte $b2;
        short $s3;
        int[] $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i9 := @parameter3: int;

        i10 = i0;

     label1:
        if i10 >= i1 goto label2;

        $i8 = i9 << 8;

        $r1 = <androidx.media3.common.util.Util: int[] CRC32_BYTES_MSBF>;

        $i4 = i9 >>> 24;

        $b2 = r0[i10];

        $s3 = $b2 & 255;

        $i5 = $i4 ^ $s3;

        $i6 = $i5 & 255;

        $i7 = $r1[$i6];

        i9 = $i8 ^ $i7;

        i10 = i10 + 1;

        goto label1;

     label2:
        return i9;
    }

    public static int crc8(byte[], int, int, int)
    {
        byte[] r0;
        int i0, i1, $i4, i5, i6;
        byte $b2;
        short $s3;
        int[] $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i5 := @parameter3: int;

        i6 = i0;

     label1:
        if i6 >= i1 goto label2;

        $r1 = <androidx.media3.common.util.Util: int[] CRC8_BYTES_MSBF>;

        $b2 = r0[i6];

        $s3 = $b2 & 255;

        $i4 = i5 ^ $s3;

        i5 = $r1[$i4];

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;
    }

    public static byte[] gzip(byte[])
    {
        byte[] r0, $r6;
        java.io.ByteArrayOutputStream r1, r13;
        java.lang.Throwable r2, r3, $r7, $r8, $r10, r12, r16;
        java.util.zip.GZIPOutputStream r11, r14;
        java.lang.IllegalStateException r15;

        r0 := @parameter0: byte[];

        r13 = new java.io.ByteArrayOutputStream;

        specialinvoke r13.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = r13;

     label01:
        r14 = new java.util.zip.GZIPOutputStream;

        specialinvoke r14.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r1);

        r11 = r14;

     label02:
        virtualinvoke r11.<java.util.zip.GZIPOutputStream: void write(byte[])>(r0);

     label03:
        virtualinvoke r11.<java.util.zip.GZIPOutputStream: void close()>();

        goto label09;

     label04:
        $r7 := @caughtexception;

        r2 = $r7;

     label05:
        virtualinvoke r11.<java.util.zip.GZIPOutputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r10 := @caughtexception;

        r3 = $r10;

        virtualinvoke r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r3);

     label08:
        throw r2;

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        r12 = $r8;

        r15 = new java.lang.IllegalStateException;

        specialinvoke r15.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r12);

        r16 = (java.lang.Throwable) r15;

        throw r16;

     label11:
        $r6 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r6;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.io.IOException from label01 to label09 with label10;
    }

    public static int getBigEndianInt(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, $i2;
        java.nio.ByteOrder $r1, $r2;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt(int)>(i0);

        $r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r1 != $r2 goto label1;

        $i2 = i1;

        goto label2;

     label1:
        $i2 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(i1);

     label2:
        return $i2;
    }

    public static java.lang.String getCountryCode(android.content.Context)
    {
        android.content.Context r0;
        android.telephony.TelephonyManager r1;
        java.lang.String r2, $r4, $r6, $r7;
        java.lang.Object $r3;
        boolean $z0;
        java.util.Locale $r5;

        r0 := @parameter0: android.content.Context;

        if r0 == null goto label1;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r3;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <com.google.common.base.Ascii: java.lang.String toUpperCase(java.lang.String)>(r2);

        return $r4;

     label1:
        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = virtualinvoke $r5.<java.util.Locale: java.lang.String getCountry()>();

        $r7 = staticinvoke <com.google.common.base.Ascii: java.lang.String toUpperCase(java.lang.String)>($r6);

        return $r7;
    }

    public static java.lang.String[] getSystemLanguageCodes()
    {
        java.lang.String[] r0;
        int $i0, i1;
        java.lang.String $r1, $r2;

        r0 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] getSystemLocales()>();

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r1 = r0[i1];

        $r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.String normalizeLanguageCode(java.lang.String)>($r1);

        r0[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public static java.util.Locale getDefaultDisplayLocale()
    {
        int $i0;
        java.util.Locale$Category $r0;
        java.util.Locale $r1;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r0 = <java.util.Locale$Category: java.util.Locale$Category DISPLAY>;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault(java.util.Locale$Category)>($r0);

        goto label2;

     label1:
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        return $r1;
    }

    public static boolean inflate(androidx.media3.common.util.ParsableByteArray, androidx.media3.common.util.ParsableByteArray, java.util.zip.Inflater)
    {
        androidx.media3.common.util.ParsableByteArray r0, r1;
        java.lang.Throwable r2, $r5, $r6, r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13;
        byte[] $r3, $r8;
        boolean $z0, $z1, $z2, z3, z4, z5;
        java.util.zip.Inflater $r4, r7;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        r1 := @parameter1: androidx.media3.common.util.ParsableByteArray;

        r7 := @parameter2: java.util.zip.Inflater;

        $i0 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if $i0 > 0 goto label01;

        return 0;

     label01:
        $i1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int capacity()>();

        $i2 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if $i1 >= $i2 goto label02;

        $i8 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        $i9 = 2 * $i8;

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void ensureCapacity(int)>($i9);

     label02:
        if r7 != null goto label03;

        $r4 = new java.util.zip.Inflater;

        specialinvoke $r4.<java.util.zip.Inflater: void <init>()>();

        r7 = $r4;

     label03:
        $r3 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $i3 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        $i4 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        virtualinvoke r7.<java.util.zip.Inflater: void setInput(byte[],int,int)>($r3, $i3, $i4);

     label04:
        i10 = 0;

     label05:
        $r8 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $i11 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int capacity()>();

        $i12 = $i11 - i10;

        $i13 = virtualinvoke r7.<java.util.zip.Inflater: int inflate(byte[],int,int)>($r8, i10, $i12);

        i10 = i10 + $i13;

        $z2 = virtualinvoke r7.<java.util.zip.Inflater: boolean finished()>();

        if $z2 == 0 goto label07;

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void setLimit(int)>(i10);

        z3 = 1;

     label06:
        virtualinvoke r7.<java.util.zip.Inflater: void reset()>();

        return z3;

     label07:
        $z0 = virtualinvoke r7.<java.util.zip.Inflater: boolean needsDictionary()>();

        if $z0 != 0 goto label08;

        $z1 = virtualinvoke r7.<java.util.zip.Inflater: boolean needsInput()>();

        if $z1 == 0 goto label10;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r7.<java.util.zip.Inflater: void reset()>();

        return z4;

     label10:
        $i5 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int capacity()>();

        if i10 != $i5 goto label05;

        $i6 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int capacity()>();

        $i7 = $i6 * 2;

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void ensureCapacity(int)>($i7);

        goto label05;

     label11:
        $r6 := @caughtexception;

        r9 = $r6;

        z5 = 0;

     label12:
        virtualinvoke r7.<java.util.zip.Inflater: void reset()>();

        return z5;

     label13:
        $r5 := @caughtexception;

        r2 = $r5;

     label14:
        virtualinvoke r7.<java.util.zip.Inflater: void reset()>();

        throw r2;

        catch java.util.zip.DataFormatException from label04 to label06 with label11;
        catch java.util.zip.DataFormatException from label07 to label09 with label11;
        catch java.util.zip.DataFormatException from label10 to label11 with label11;
        catch java.lang.Throwable from label04 to label06 with label13;
        catch java.lang.Throwable from label07 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static boolean isTv(android.content.Context)
    {
        android.content.Context r0, $r2;
        android.app.UiModeManager r1;
        java.lang.Object $r3;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("uimode");

        r1 = (android.app.UiModeManager) $r3;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.app.UiModeManager: int getCurrentModeType()>();

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isAutomotive(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        android.content.pm.PackageManager $r1;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r1.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.type.automotive");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static android.graphics.Point getCurrentDisplayModeSize(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        android.graphics.Point $r1;
        java.lang.Object $r2, $r4, $r5;
        android.view.WindowManager $r3, r8;
        android.view.Display r6;
        android.hardware.display.DisplayManager r7;

        r0 := @parameter0: android.content.Context;

        r6 = null;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 17 goto label1;

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        r7 = (android.hardware.display.DisplayManager) $r5;

        if r7 == null goto label1;

        r6 = virtualinvoke r7.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

     label1:
        if r6 != null goto label2;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r8 = (android.view.WindowManager) $r4;

        r6 = interfaceinvoke r8.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

     label2:
        $r1 = staticinvoke <androidx.media3.common.util.Util: android.graphics.Point getCurrentDisplayModeSize(android.content.Context,android.view.Display)>(r0, r6);

        return $r1;
    }

    public static android.graphics.Point getCurrentDisplayModeSize(android.content.Context, android.view.Display)
    {
        android.content.Context r0;
        android.view.Display r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r2, $r5, $r9, $r10, $r11, $r14, r15, $r18, $r19;
        android.content.pm.PackageManager $r3;
        android.graphics.Point $r4, $r12, $r20, r21;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.Throwable $r13, r17;
        java.lang.String[] r16;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.Display;

        $i2 = virtualinvoke r1.<android.view.Display: int getDisplayId()>();

        if $i2 != 0 goto label09;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean isTv(android.content.Context)>(r0);

        if $z0 == 0 goto label09;

        $i4 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i4 >= 28 goto label01;

        $r14 = staticinvoke <androidx.media3.common.util.Util: java.lang.String getSystemProperty(java.lang.String)>("sys.display-size");

        goto label02;

     label01:
        $r14 = staticinvoke <androidx.media3.common.util.Util: java.lang.String getSystemProperty(java.lang.String)>("vendor.display-size");

     label02:
        r15 = $r14;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z1 != 0 goto label08;

     label03:
        $r5 = virtualinvoke r15.<java.lang.String: java.lang.String trim()>();

        r16 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>($r5, "x");

        $i5 = lengthof r16;

        if $i5 != 2 goto label05;

        $r10 = r16[0];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r11 = r16[1];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        if i0 <= 0 goto label05;

        if i1 <= 0 goto label05;

        $r12 = new android.graphics.Point;

        specialinvoke $r12.<android.graphics.Point: void <init>(int,int)>(i0, i1);

     label04:
        return $r12;

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        r17 = $r13;

     label07:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid display size: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("Util", $r9);

     label08:
        $r18 = "Sony";

        $r19 = <androidx.media3.common.util.Util: java.lang.String MANUFACTURER>;

        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z4 == 0 goto label09;

        $r2 = <androidx.media3.common.util.Util: java.lang.String MODEL>;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("BRAVIA");

        if $z2 == 0 goto label09;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z3 = virtualinvoke $r3.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("com.sony.dtv.hardware.panel.qfhd");

        if $z3 == 0 goto label09;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>(int,int)>(3840, 2160);

        return $r4;

     label09:
        $r20 = new android.graphics.Point;

        specialinvoke $r20.<android.graphics.Point: void <init>()>();

        r21 = $r20;

        $i6 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i6 < 23 goto label10;

        staticinvoke <androidx.media3.common.util.Util: void getDisplaySizeV23(android.view.Display,android.graphics.Point)>(r1, r21);

        goto label12;

     label10:
        $i3 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i3 < 17 goto label11;

        staticinvoke <androidx.media3.common.util.Util: void getDisplaySizeV17(android.view.Display,android.graphics.Point)>(r1, r21);

        goto label12;

     label11:
        staticinvoke <androidx.media3.common.util.Util: void getDisplaySizeV16(android.view.Display,android.graphics.Point)>(r1, r21);

     label12:
        return r21;

        catch java.lang.NumberFormatException from label03 to label04 with label06;
    }

    public static java.lang.String getTrackTypeString(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -2: goto label08;
            case -1: goto label09;
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            default: goto label10;
        };

     label01:
        return "default";

     label02:
        return "audio";

     label03:
        return "video";

     label04:
        return "text";

     label05:
        return "image";

     label06:
        return "metadata";

     label07:
        return "camera motion";

     label08:
        return "none";

     label09:
        return "unknown";

     label10:
        if i0 < 10000 goto label11;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("custom (");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        $r4 = "?";

     label12:
        return $r4;
    }

    public static long getNowUnixTimeMs(long)
    {
        long l0, $l2, $l3;
        byte $b1;

        l0 := @parameter0: long;

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 != 0 goto label1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        goto label2;

     label1:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = $l2 + l0;

     label2:
        return $l3;
    }

    public static void moveItems(java.util.List, int, int, int)
    {
        java.util.List r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        java.util.ArrayDeque r1, $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();

        r1 = $r2;

        i3 = i1 - i0;

        i7 = i3 - 1;

     label1:
        if i7 < 0 goto label2;

        $i6 = i0 + i7;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>($i6);

        virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r3);

        i7 = i7 + -1;

        goto label1;

     label2:
        $i4 = interfaceinvoke r0.<java.util.List: int size()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4);

        interfaceinvoke r0.<java.util.List: boolean addAll(int,java.util.Collection)>($i5, r1);

        return;
    }

    public static boolean tableExists(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        long l0;
        java.lang.String[] $r2;
        byte $b1;
        boolean $z0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r1;

        l0 = staticinvoke <android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>(r0, "sqlite_master", "tbl_name = ?", $r2);

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int getErrorCodeFromPlatformDiagnosticsInfo(java.lang.String)
    {
        java.lang.String r0, r2, $r3, $r4, $r7;
        java.lang.String[] r1;
        int i0, $i1, $i2, i3, $i4;
        boolean z0, $z1, $z2;
        java.lang.Throwable $r5, r8;
        java.lang.Object $r6;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        r1 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, "_");

        i0 = lengthof r1;

        if i0 >= 2 goto label2;

        return 0;

     label2:
        $i1 = i0 - 1;

        r2 = r1[$i1];

        if i0 < 3 goto label3;

        $r4 = "neg";

        $i2 = i0 - 2;

        $r3 = r1[$i2];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

     label5:
        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (java.lang.String) $r6;

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        if z0 == 0 goto label6;

        $i4 = neg i3;

        goto label7;

     label6:
        $i4 = i3;

     label7:
        return $i4;

     label8:
        $r5 := @caughtexception;

        r8 = $r5;

        return 0;

        catch java.lang.NumberFormatException from label5 to label7 with label8;
    }

    public static java.lang.String getFormatSupportString(int)
    {
        int i0;
        java.lang.IllegalStateException r1;
        java.lang.Throwable r2;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label1;
            default: goto label6;
        };

     label1:
        return "YES";

     label2:
        return "NO_EXCEEDS_CAPABILITIES";

     label3:
        return "NO_UNSUPPORTED_DRM";

     label4:
        return "NO_UNSUPPORTED_TYPE";

     label5:
        return "NO";

     label6:
        r1 = new java.lang.IllegalStateException;

        specialinvoke r1.<java.lang.IllegalStateException: void <init>()>();

        r2 = (java.lang.Throwable) r1;

        throw r2;
    }

    public static androidx.media3.common.Player$Commands getAvailableCommands(androidx.media3.common.Player, androidx.media3.common.Player$Commands)
    {
        androidx.media3.common.Player r0;
        androidx.media3.common.Player$Commands r1, $r14;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        androidx.media3.common.Timeline $r2;
        androidx.media3.common.Player$Commands$Builder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @parameter0: androidx.media3.common.Player;

        r1 := @parameter1: androidx.media3.common.Player$Commands;

        z0 = interfaceinvoke r0.<androidx.media3.common.Player: boolean isPlayingAd()>();

        z1 = interfaceinvoke r0.<androidx.media3.common.Player: boolean isCurrentMediaItemSeekable()>();

        z2 = interfaceinvoke r0.<androidx.media3.common.Player: boolean hasPreviousMediaItem()>();

        z3 = interfaceinvoke r0.<androidx.media3.common.Player: boolean hasNextMediaItem()>();

        z4 = interfaceinvoke r0.<androidx.media3.common.Player: boolean isCurrentMediaItemLive()>();

        z5 = interfaceinvoke r0.<androidx.media3.common.Player: boolean isCurrentMediaItemDynamic()>();

        $r2 = interfaceinvoke r0.<androidx.media3.common.Player: androidx.media3.common.Timeline getCurrentTimeline()>();

        z6 = virtualinvoke $r2.<androidx.media3.common.Timeline: boolean isEmpty()>();

        $r3 = new androidx.media3.common.Player$Commands$Builder;

        specialinvoke $r3.<androidx.media3.common.Player$Commands$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addAll(androidx.media3.common.Player$Commands)>(r1);

        if z0 != 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        $r6 = virtualinvoke $r4.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(4, $z7);

        if z1 == 0 goto label03;

        if z0 != 0 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        $r7 = virtualinvoke $r6.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(5, $z8);

        if z2 == 0 goto label05;

        if z0 != 0 goto label05;

        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        $r8 = virtualinvoke $r7.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(6, $z9);

        if z6 != 0 goto label08;

        if z2 != 0 goto label07;

        if z4 == 0 goto label07;

        if z1 == 0 goto label08;

     label07:
        if z0 != 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        $r9 = virtualinvoke $r8.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(7, $z10);

        if z3 == 0 goto label10;

        if z0 != 0 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        $r10 = virtualinvoke $r9.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(8, $z11);

        if z6 != 0 goto label13;

        if z3 != 0 goto label12;

        if z4 == 0 goto label13;

        if z5 == 0 goto label13;

     label12:
        if z0 != 0 goto label13;

        $z12 = 1;

        goto label14;

     label13:
        $z12 = 0;

     label14:
        $r5 = virtualinvoke $r10.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(9, $z12);

        if z0 != 0 goto label15;

        $z13 = 1;

        goto label16;

     label15:
        $z13 = 0;

     label16:
        $r11 = virtualinvoke $r5.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(10, $z13);

        if z1 == 0 goto label17;

        if z0 != 0 goto label17;

        $z14 = 1;

        goto label18;

     label17:
        $z14 = 0;

     label18:
        $r12 = virtualinvoke $r11.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(11, $z14);

        if z1 == 0 goto label19;

        if z0 != 0 goto label19;

        $z15 = 1;

        goto label20;

     label19:
        $z15 = 0;

     label20:
        $r13 = virtualinvoke $r12.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addIf(int,boolean)>(12, $z15);

        $r14 = virtualinvoke $r13.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands build()>();

        return $r14;
    }

    public static transient long sum(long[])
    {
        long[] r0, r1;
        int i0, i3;
        long l1, l2;

        r0 := @parameter0: long[];

        l2 = 0L;

        r1 = r0;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        l1 = r1[i3];

        l2 = l2 + l1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return l2;
    }

    public static android.graphics.drawable.Drawable getDrawable(android.content.Context, android.content.res.Resources, int)
    {
        android.content.Context r0;
        android.content.res.Resources r1;
        int i0, $i1;
        android.graphics.drawable.Drawable $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 21 goto label1;

        $r2 = staticinvoke <androidx.media3.common.util.Util$Api21: android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.Resources,int)>(r0, r1, i0);

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

     label2:
        return $r2;
    }

    public static java.lang.String intToStringMaxRadix(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 36);

        return $r0;
    }

    private static java.lang.String getSystemProperty(java.lang.String)
    {
        java.lang.String r0, $r5, $r10;
        java.lang.reflect.Method r1;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r6, r12;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.Class r11;

        r0 := @parameter0: java.lang.String;

     label1:
        r11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.SystemProperties");

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/String;";

        r1 = virtualinvoke r11.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("get", $r2);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r11, $r3);

        $r5 = (java.lang.String) $r4;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r12 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read system property ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Util", $r10, r12);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void getDisplaySizeV23(android.view.Display, android.graphics.Point)
    {
        android.view.Display r0;
        android.graphics.Point r1;
        android.view.Display$Mode r2;
        int $i0, $i1;

        r0 := @parameter0: android.view.Display;

        r1 := @parameter1: android.graphics.Point;

        r2 = virtualinvoke r0.<android.view.Display: android.view.Display$Mode getMode()>();

        $i0 = virtualinvoke r2.<android.view.Display$Mode: int getPhysicalWidth()>();

        r1.<android.graphics.Point: int x> = $i0;

        $i1 = virtualinvoke r2.<android.view.Display$Mode: int getPhysicalHeight()>();

        r1.<android.graphics.Point: int y> = $i1;

        return;
    }

    private static void getDisplaySizeV17(android.view.Display, android.graphics.Point)
    {
        android.view.Display r0;
        android.graphics.Point r1;

        r0 := @parameter0: android.view.Display;

        r1 := @parameter1: android.graphics.Point;

        virtualinvoke r0.<android.view.Display: void getRealSize(android.graphics.Point)>(r1);

        return;
    }

    private static void getDisplaySizeV16(android.view.Display, android.graphics.Point)
    {
        android.view.Display r0;
        android.graphics.Point r1;

        r0 := @parameter0: android.view.Display;

        r1 := @parameter1: android.graphics.Point;

        virtualinvoke r0.<android.view.Display: void getSize(android.graphics.Point)>(r1);

        return;
    }

    private static java.lang.String[] getSystemLocales()
    {
        android.content.res.Configuration r0;
        android.content.res.Resources $r1;
        int $i0;
        java.util.Locale $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;

        $r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r0 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] getSystemLocalesV24(android.content.res.Configuration)>(r0);

        goto label2;

     label1:
        $r4 = newarray (java.lang.String)[1];

        $r2 = r0.<android.content.res.Configuration: java.util.Locale locale>;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.String getLocaleLanguageTag(java.util.Locale)>($r2);

        $r4[0] = $r3;

     label2:
        return $r4;
    }

    private static java.lang.String[] getSystemLocalesV24(android.content.res.Configuration)
    {
        android.content.res.Configuration r0;
        android.os.LocaleList $r1;
        java.lang.String $r2;
        java.lang.String[] $r3;

        r0 := @parameter0: android.content.res.Configuration;

        $r1 = virtualinvoke r0.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $r2 = virtualinvoke $r1.<android.os.LocaleList: java.lang.String toLanguageTags()>();

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>($r2, ",");

        return $r3;
    }

    private static java.lang.String getLocaleLanguageTagV21(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.Locale;

        $r1 = virtualinvoke r0.<java.util.Locale: java.lang.String toLanguageTag()>();

        return $r1;
    }

    private static java.util.HashMap createIsoLanguageReplacementMap()
    {
        java.lang.String[] r0, $r4, $r5, $r6, $r7, r14;
        java.util.HashMap r1, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.String r2, $r8, $r9, r15;
        java.util.Locale $r11;
        boolean $z0;
        java.lang.Throwable $r13, r16;

        r0 = staticinvoke <java.util.Locale: java.lang.String[] getISOLanguages()>();

        $r3 = new java.util.HashMap;

        $i2 = lengthof r0;

        $r4 = <androidx.media3.common.util.Util: java.lang.String[] additionalIsoLanguageReplacements>;

        $i1 = lengthof $r4;

        $i3 = $i2 + $i1;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>($i3);

        r1 = $r3;

        r14 = r0;

        i0 = lengthof r14;

        i6 = 0;

     label1:
        if i6 >= i0 goto label6;

        r2 = r14[i6];

     label2:
        $r11 = new java.util.Locale;

        specialinvoke $r11.<java.util.Locale: void <init>(java.lang.String)>(r2);

        r15 = virtualinvoke $r11.<java.util.Locale: java.lang.String getISO3Language()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z0 != 0 goto label3;

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r2);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r16 = $r13;

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        i7 = 0;

     label7:
        $r5 = <androidx.media3.common.util.Util: java.lang.String[] additionalIsoLanguageReplacements>;

        $i4 = lengthof $r5;

        if i7 >= $i4 goto label8;

        $r6 = <androidx.media3.common.util.Util: java.lang.String[] additionalIsoLanguageReplacements>;

        $r9 = $r6[i7];

        $r7 = <androidx.media3.common.util.Util: java.lang.String[] additionalIsoLanguageReplacements>;

        $i5 = i7 + 1;

        $r8 = $r7[$i5];

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

        i7 = i7 + 2;

        goto label7;

     label8:
        return r1;

        catch java.util.MissingResourceException from label2 to label3 with label4;
    }

    private static boolean requestExternalStoragePermission(android.app.Activity)
    {
        android.app.Activity r0;
        int $i0;
        java.lang.String[] $r1;

        r0 := @parameter0: android.app.Activity;

        $i0 = virtualinvoke r0.<android.app.Activity: int checkSelfPermission(java.lang.String)>("android.permission.READ_EXTERNAL_STORAGE");

        if $i0 == 0 goto label1;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "android.permission.READ_EXTERNAL_STORAGE";

        virtualinvoke r0.<android.app.Activity: void requestPermissions(java.lang.String[],int)>($r1, 0);

        return 1;

     label1:
        return 0;
    }

    private static boolean isTrafficRestricted(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1, $r2, $r4, $r6;
        boolean $z0, $z1, $z2;
        android.security.NetworkSecurityPolicy $r3;
        java.lang.Object $r5;

        r0 := @parameter0: android.net.Uri;

        $r1 = "http";

        $r2 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()>();

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getHost()>();

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke $r3.<android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted(java.lang.String)>($r6);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static java.lang.String maybeReplaceLegacyLanguageTags(java.lang.String)
    {
        java.lang.String r0, $r3, $r6, $r9, $r10, $r12;
        java.lang.String[] $r1, $r2, $r5, $r8;
        int $i0, $i1, $i2, i3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r7, $r11;

        r0 := @parameter0: java.lang.String;

        i3 = 0;

     label1:
        $r1 = <androidx.media3.common.util.Util: java.lang.String[] isoLegacyTagReplacements>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label3;

        $r2 = <androidx.media3.common.util.Util: java.lang.String[] isoLegacyTagReplacements>;

        $r3 = $r2[i3];

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = <androidx.media3.common.util.Util: java.lang.String[] isoLegacyTagReplacements>;

        $i1 = i3 + 1;

        $r6 = $r5[$i1];

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = <androidx.media3.common.util.Util: java.lang.String[] isoLegacyTagReplacements>;

        $r9 = $r8[i3];

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label2:
        i3 = i3 + 2;

        goto label1;

     label3:
        return r0;
    }

    private static java.lang.Thread lambda$newSingleThreadExecutor$3(java.lang.String, java.lang.Runnable)
    {
        java.lang.String r0;
        java.lang.Runnable r1;
        java.lang.Thread $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Runnable;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r1, r0);

        return $r2;
    }

    private static void lambda$transformFutureAsync$2(com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.SettableFuture, com.google.common.util.concurrent.AsyncFunction)
    {
        com.google.common.util.concurrent.ListenableFuture r0, $r5;
        com.google.common.util.concurrent.SettableFuture r1;
        com.google.common.util.concurrent.AsyncFunction r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r6, $r8, $r9, $r10, r11, r12, $r13, r14, r15;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: com.google.common.util.concurrent.SettableFuture;

        r2 := @parameter2: com.google.common.util.concurrent.AsyncFunction;

     label01:
        r3 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>(r0);

     label02:
        goto label08;

     label03:
        $r9 := @caughtexception;

        r11 = $r9;

        virtualinvoke r1.<com.google.common.util.concurrent.SettableFuture: boolean cancel(boolean)>(0);

        return;

     label04:
        $r6 := @caughtexception;

        r12 = $r6;

        r4 = virtualinvoke r12.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        if r4 != null goto label05;

        $r13 = r12;

        goto label06;

     label05:
        $r13 = r4;

     label06:
        virtualinvoke r1.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>($r13);

        return;

     label07:
        $r10 := @caughtexception;

        r14 = $r10;

        virtualinvoke r1.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>(r14);

        return;

     label08:
        $r5 = interfaceinvoke r2.<com.google.common.util.concurrent.AsyncFunction: com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object)>(r3);

        virtualinvoke r1.<com.google.common.util.concurrent.SettableFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)>($r5);

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        r15 = $r8;

        virtualinvoke r1.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>(r15);

     label11:
        return;

        catch java.util.concurrent.CancellationException from label01 to label02 with label03;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label04;
        catch java.lang.RuntimeException from label01 to label02 with label07;
        catch java.lang.Error from label01 to label02 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private static void lambda$transformFutureAsync$1(com.google.common.util.concurrent.SettableFuture, com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.SettableFuture r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        boolean $z0;

        r0 := @parameter0: com.google.common.util.concurrent.SettableFuture;

        r1 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        $z0 = virtualinvoke r0.<com.google.common.util.concurrent.SettableFuture: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(0);

     label1:
        return;
    }

    private static void lambda$postOrRunWithCompletion$0(com.google.common.util.concurrent.SettableFuture, java.lang.Runnable, java.lang.Object)
    {
        com.google.common.util.concurrent.SettableFuture r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;
        boolean $z0;

        r0 := @parameter0: com.google.common.util.concurrent.SettableFuture;

        r1 := @parameter1: java.lang.Runnable;

        r2 := @parameter2: java.lang.Object;

     label1:
        $z0 = virtualinvoke r0.<com.google.common.util.concurrent.SettableFuture: boolean isCancelled()>();

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        interfaceinvoke r1.<java.lang.Runnable: void run()>();

        virtualinvoke r0.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>(r2);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        r3 = $r4;

        virtualinvoke r0.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>(r3);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        int $i0, $i1;
        java.lang.String $r0, $r1, $r2, $r4, $r7, $r10, $r14;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r13;
        byte[] $r15;
        java.util.regex.Pattern $r16, $r17, $r18, $r19;
        java.lang.String[] $r20, $r21;
        int[] $r22, $r23;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        <androidx.media3.common.util.Util: int SDK_INT> = $i0;

        $r0 = <android.os.Build: java.lang.String DEVICE>;

        <androidx.media3.common.util.Util: java.lang.String DEVICE> = $r0;

        $r1 = <android.os.Build: java.lang.String MANUFACTURER>;

        <androidx.media3.common.util.Util: java.lang.String MANUFACTURER> = $r1;

        $r2 = <android.os.Build: java.lang.String MODEL>;

        <androidx.media3.common.util.Util: java.lang.String MODEL> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <androidx.media3.common.util.Util: java.lang.String DEVICE>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = <androidx.media3.common.util.Util: java.lang.String MODEL>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = <androidx.media3.common.util.Util: java.lang.String MANUFACTURER>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        <androidx.media3.common.util.Util: java.lang.String DEVICE_DEBUG_INFO> = $r14;

        $r15 = newarray (byte)[0];

        <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY> = $r15;

        $r16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d\\d\\d\\d)\\-(\\d\\d)\\-(\\d\\d)[Tt](\\d\\d):(\\d\\d):(\\d\\d)([\\.,](\\d+))?([Zz]|((\\+|\\-)(\\d?\\d):?(\\d\\d)))?");

        <androidx.media3.common.util.Util: java.util.regex.Pattern XS_DATE_TIME_PATTERN> = $r16;

        $r17 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(-)?P(([0-9]*)Y)?(([0-9]*)M)?(([0-9]*)D)?(T(([0-9]*)H)?(([0-9]*)M)?(([0-9.]*)S)?)?$");

        <androidx.media3.common.util.Util: java.util.regex.Pattern XS_DURATION_PATTERN> = $r17;

        $r18 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("%([A-Fa-f0-9]{2})");

        <androidx.media3.common.util.Util: java.util.regex.Pattern ESCAPED_CHARACTER_PATTERN> = $r18;

        $r19 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(?:.*\\.)?isml?(?:/(manifest(.*))?)?", 2);

        <androidx.media3.common.util.Util: java.util.regex.Pattern ISM_PATH_PATTERN> = $r19;

        $r20 = newarray (java.lang.String)[88];

        $r20[0] = "alb";

        $r20[1] = "sq";

        $r20[2] = "arm";

        $r20[3] = "hy";

        $r20[4] = "baq";

        $r20[5] = "eu";

        $r20[6] = "bur";

        $r20[7] = "my";

        $r20[8] = "tib";

        $r20[9] = "bo";

        $r20[10] = "chi";

        $r20[11] = "zh";

        $r20[12] = "cze";

        $r20[13] = "cs";

        $r20[14] = "dut";

        $r20[15] = "nl";

        $r20[16] = "ger";

        $r20[17] = "de";

        $r20[18] = "gre";

        $r20[19] = "el";

        $r20[20] = "fre";

        $r20[21] = "fr";

        $r20[22] = "geo";

        $r20[23] = "ka";

        $r20[24] = "ice";

        $r20[25] = "is";

        $r20[26] = "mac";

        $r20[27] = "mk";

        $r20[28] = "mao";

        $r20[29] = "mi";

        $r20[30] = "may";

        $r20[31] = "ms";

        $r20[32] = "per";

        $r20[33] = "fa";

        $r20[34] = "rum";

        $r20[35] = "ro";

        $r20[36] = "scc";

        $r20[37] = "hbs-srp";

        $r20[38] = "slo";

        $r20[39] = "sk";

        $r20[40] = "wel";

        $r20[41] = "cy";

        $r20[42] = "id";

        $r20[43] = "ms-ind";

        $r20[44] = "iw";

        $r20[45] = "he";

        $r20[46] = "heb";

        $r20[47] = "he";

        $r20[48] = "ji";

        $r20[49] = "yi";

        $r20[50] = "arb";

        $r20[51] = "ar-arb";

        $r20[52] = "in";

        $r20[53] = "ms-ind";

        $r20[54] = "ind";

        $r20[55] = "ms-ind";

        $r20[56] = "nb";

        $r20[57] = "no-nob";

        $r20[58] = "nob";

        $r20[59] = "no-nob";

        $r20[60] = "nn";

        $r20[61] = "no-nno";

        $r20[62] = "nno";

        $r20[63] = "no-nno";

        $r20[64] = "tw";

        $r20[65] = "ak-twi";

        $r20[66] = "twi";

        $r20[67] = "ak-twi";

        $r20[68] = "bs";

        $r20[69] = "hbs-bos";

        $r20[70] = "bos";

        $r20[71] = "hbs-bos";

        $r20[72] = "hr";

        $r20[73] = "hbs-hrv";

        $r20[74] = "hrv";

        $r20[75] = "hbs-hrv";

        $r20[76] = "sr";

        $r20[77] = "hbs-srp";

        $r20[78] = "srp";

        $r20[79] = "hbs-srp";

        $r20[80] = "cmn";

        $r20[81] = "zh-cmn";

        $r20[82] = "hak";

        $r20[83] = "zh-hak";

        $r20[84] = "nan";

        $r20[85] = "zh-nan";

        $r20[86] = "hsn";

        $r20[87] = "zh-hsn";

        <androidx.media3.common.util.Util: java.lang.String[] additionalIsoLanguageReplacements> = $r20;

        $r21 = newarray (java.lang.String)[18];

        $r21[0] = "i-lux";

        $r21[1] = "lb";

        $r21[2] = "i-hak";

        $r21[3] = "zh-hak";

        $r21[4] = "i-navajo";

        $r21[5] = "nv";

        $r21[6] = "no-bok";

        $r21[7] = "no-nob";

        $r21[8] = "no-nyn";

        $r21[9] = "no-nno";

        $r21[10] = "zh-guoyu";

        $r21[11] = "zh-cmn";

        $r21[12] = "zh-hakka";

        $r21[13] = "zh-hak";

        $r21[14] = "zh-min-nan";

        $r21[15] = "zh-nan";

        $r21[16] = "zh-xiang";

        $r21[17] = "zh-hsn";

        <androidx.media3.common.util.Util: java.lang.String[] isoLegacyTagReplacements> = $r21;

        $r22 = newarray (int)[256];

        $r22[0] = 0;

        $r22[1] = 79764919;

        $r22[2] = 159529838;

        $r22[3] = 222504665;

        $r22[4] = 319059676;

        $r22[5] = 398814059;

        $r22[6] = 445009330;

        $r22[7] = 507990021;

        $r22[8] = 638119352;

        $r22[9] = 583659535;

        $r22[10] = 797628118;

        $r22[11] = 726387553;

        $r22[12] = 890018660;

        $r22[13] = 835552979;

        $r22[14] = 1015980042;

        $r22[15] = 944750013;

        $r22[16] = 1276238704;

        $r22[17] = 1221641927;

        $r22[18] = 1167319070;

        $r22[19] = 1095957929;

        $r22[20] = 1595256236;

        $r22[21] = 1540665371;

        $r22[22] = 1452775106;

        $r22[23] = 1381403509;

        $r22[24] = 1780037320;

        $r22[25] = 1859660671;

        $r22[26] = 1671105958;

        $r22[27] = 1733955601;

        $r22[28] = 2031960084;

        $r22[29] = 2111593891;

        $r22[30] = 1889500026;

        $r22[31] = 1952343757;

        $r22[32] = -1742489888;

        $r22[33] = -1662866601;

        $r22[34] = -1851683442;

        $r22[35] = -1788833735;

        $r22[36] = -1960329156;

        $r22[37] = -1880695413;

        $r22[38] = -2103051438;

        $r22[39] = -2040207643;

        $r22[40] = -1104454824;

        $r22[41] = -1159051537;

        $r22[42] = -1213636554;

        $r22[43] = -1284997759;

        $r22[44] = -1389417084;

        $r22[45] = -1444007885;

        $r22[46] = -1532160278;

        $r22[47] = -1603531939;

        $r22[48] = -734892656;

        $r22[49] = -789352409;

        $r22[50] = -575645954;

        $r22[51] = -646886583;

        $r22[52] = -952755380;

        $r22[53] = -1007220997;

        $r22[54] = -827056094;

        $r22[55] = -898286187;

        $r22[56] = -231047128;

        $r22[57] = -151282273;

        $r22[58] = -71779514;

        $r22[59] = -8804623;

        $r22[60] = -515967244;

        $r22[61] = -436212925;

        $r22[62] = -390279782;

        $r22[63] = -327299027;

        $r22[64] = 881225847;

        $r22[65] = 809987520;

        $r22[66] = 1023691545;

        $r22[67] = 969234094;

        $r22[68] = 662832811;

        $r22[69] = 591600412;

        $r22[70] = 771767749;

        $r22[71] = 717299826;

        $r22[72] = 311336399;

        $r22[73] = 374308984;

        $r22[74] = 453813921;

        $r22[75] = 533576470;

        $r22[76] = 25881363;

        $r22[77] = 88864420;

        $r22[78] = 134795389;

        $r22[79] = 214552010;

        $r22[80] = 2023205639;

        $r22[81] = 2086057648;

        $r22[82] = 1897238633;

        $r22[83] = 1976864222;

        $r22[84] = 1804852699;

        $r22[85] = 1867694188;

        $r22[86] = 1645340341;

        $r22[87] = 1724971778;

        $r22[88] = 1587496639;

        $r22[89] = 1516133128;

        $r22[90] = 1461550545;

        $r22[91] = 1406951526;

        $r22[92] = 1302016099;

        $r22[93] = 1230646740;

        $r22[94] = 1142491917;

        $r22[95] = 1087903418;

        $r22[96] = -1398421865;

        $r22[97] = -1469785312;

        $r22[98] = -1524105735;

        $r22[99] = -1578704818;

        $r22[100] = -1079922613;

        $r22[101] = -1151291908;

        $r22[102] = -1239184603;

        $r22[103] = -1293773166;

        $r22[104] = -1968362705;

        $r22[105] = -1905510760;

        $r22[106] = -2094067647;

        $r22[107] = -2014441994;

        $r22[108] = -1716953613;

        $r22[109] = -1654112188;

        $r22[110] = -1876203875;

        $r22[111] = -1796572374;

        $r22[112] = -525066777;

        $r22[113] = -462094256;

        $r22[114] = -382327159;

        $r22[115] = -302564546;

        $r22[116] = -206542021;

        $r22[117] = -143559028;

        $r22[118] = -97365931;

        $r22[119] = -17609246;

        $r22[120] = -960696225;

        $r22[121] = -1031934488;

        $r22[122] = -817968335;

        $r22[123] = -872425850;

        $r22[124] = -709327229;

        $r22[125] = -780559564;

        $r22[126] = -600130067;

        $r22[127] = -654598054;

        $r22[128] = 1762451694;

        $r22[129] = 1842216281;

        $r22[130] = 1619975040;

        $r22[131] = 1682949687;

        $r22[132] = 2047383090;

        $r22[133] = 2127137669;

        $r22[134] = 1938468188;

        $r22[135] = 2001449195;

        $r22[136] = 1325665622;

        $r22[137] = 1271206113;

        $r22[138] = 1183200824;

        $r22[139] = 1111960463;

        $r22[140] = 1543535498;

        $r22[141] = 1489069629;

        $r22[142] = 1434599652;

        $r22[143] = 1363369299;

        $r22[144] = 622672798;

        $r22[145] = 568075817;

        $r22[146] = 748617968;

        $r22[147] = 677256519;

        $r22[148] = 907627842;

        $r22[149] = 853037301;

        $r22[150] = 1067152940;

        $r22[151] = 995781531;

        $r22[152] = 51762726;

        $r22[153] = 131386257;

        $r22[154] = 177728840;

        $r22[155] = 240578815;

        $r22[156] = 269590778;

        $r22[157] = 349224269;

        $r22[158] = 429104020;

        $r22[159] = 491947555;

        $r22[160] = -248556018;

        $r22[161] = -168932423;

        $r22[162] = -122852000;

        $r22[163] = -60002089;

        $r22[164] = -500490030;

        $r22[165] = -420856475;

        $r22[166] = -341238852;

        $r22[167] = -278395381;

        $r22[168] = -685261898;

        $r22[169] = -739858943;

        $r22[170] = -559578920;

        $r22[171] = -630940305;

        $r22[172] = -1004286614;

        $r22[173] = -1058877219;

        $r22[174] = -845023740;

        $r22[175] = -916395085;

        $r22[176] = -1119974018;

        $r22[177] = -1174433591;

        $r22[178] = -1262701040;

        $r22[179] = -1333941337;

        $r22[180] = -1371866206;

        $r22[181] = -1426332139;

        $r22[182] = -1481064244;

        $r22[183] = -1552294533;

        $r22[184] = -1690935098;

        $r22[185] = -1611170447;

        $r22[186] = -1833673816;

        $r22[187] = -1770699233;

        $r22[188] = -2009983462;

        $r22[189] = -1930228819;

        $r22[190] = -2119160460;

        $r22[191] = -2056179517;

        $r22[192] = 1569362073;

        $r22[193] = 1498123566;

        $r22[194] = 1409854455;

        $r22[195] = 1355396672;

        $r22[196] = 1317987909;

        $r22[197] = 1246755826;

        $r22[198] = 1192025387;

        $r22[199] = 1137557660;

        $r22[200] = 2072149281;

        $r22[201] = 2135122070;

        $r22[202] = 1912620623;

        $r22[203] = 1992383480;

        $r22[204] = 1753615357;

        $r22[205] = 1816598090;

        $r22[206] = 1627664531;

        $r22[207] = 1707420964;

        $r22[208] = 295390185;

        $r22[209] = 358241886;

        $r22[210] = 404320391;

        $r22[211] = 483945776;

        $r22[212] = 43990325;

        $r22[213] = 106832002;

        $r22[214] = 186451547;

        $r22[215] = 266083308;

        $r22[216] = 932423249;

        $r22[217] = 861060070;

        $r22[218] = 1041341759;

        $r22[219] = 986742920;

        $r22[220] = 613929101;

        $r22[221] = 542559546;

        $r22[222] = 756411363;

        $r22[223] = 701822548;

        $r22[224] = -978770311;

        $r22[225] = -1050133554;

        $r22[226] = -869589737;

        $r22[227] = -924188512;

        $r22[228] = -693284699;

        $r22[229] = -764654318;

        $r22[230] = -550540341;

        $r22[231] = -605129092;

        $r22[232] = -475935807;

        $r22[233] = -413084042;

        $r22[234] = -366743377;

        $r22[235] = -287118056;

        $r22[236] = -257573603;

        $r22[237] = -194731862;

        $r22[238] = -114850189;

        $r22[239] = -35218492;

        $r22[240] = -1984365303;

        $r22[241] = -1921392450;

        $r22[242] = -2143631769;

        $r22[243] = -2063868976;

        $r22[244] = -1698919467;

        $r22[245] = -1635936670;

        $r22[246] = -1824608069;

        $r22[247] = -1744851700;

        $r22[248] = -1347415887;

        $r22[249] = -1418654458;

        $r22[250] = -1506661409;

        $r22[251] = -1561119128;

        $r22[252] = -1129027987;

        $r22[253] = -1200260134;

        $r22[254] = -1254728445;

        $r22[255] = -1309196108;

        <androidx.media3.common.util.Util: int[] CRC32_BYTES_MSBF> = $r22;

        $r23 = newarray (int)[256];

        $r23[0] = 0;

        $r23[1] = 7;

        $r23[2] = 14;

        $r23[3] = 9;

        $r23[4] = 28;

        $r23[5] = 27;

        $r23[6] = 18;

        $r23[7] = 21;

        $r23[8] = 56;

        $r23[9] = 63;

        $r23[10] = 54;

        $r23[11] = 49;

        $r23[12] = 36;

        $r23[13] = 35;

        $r23[14] = 42;

        $r23[15] = 45;

        $r23[16] = 112;

        $r23[17] = 119;

        $r23[18] = 126;

        $r23[19] = 121;

        $r23[20] = 108;

        $r23[21] = 107;

        $r23[22] = 98;

        $r23[23] = 101;

        $r23[24] = 72;

        $r23[25] = 79;

        $r23[26] = 70;

        $r23[27] = 65;

        $r23[28] = 84;

        $r23[29] = 83;

        $r23[30] = 90;

        $r23[31] = 93;

        $r23[32] = 224;

        $r23[33] = 231;

        $r23[34] = 238;

        $r23[35] = 233;

        $r23[36] = 252;

        $r23[37] = 251;

        $r23[38] = 242;

        $r23[39] = 245;

        $r23[40] = 216;

        $r23[41] = 223;

        $r23[42] = 214;

        $r23[43] = 209;

        $r23[44] = 196;

        $r23[45] = 195;

        $r23[46] = 202;

        $r23[47] = 205;

        $r23[48] = 144;

        $r23[49] = 151;

        $r23[50] = 158;

        $r23[51] = 153;

        $r23[52] = 140;

        $r23[53] = 139;

        $r23[54] = 130;

        $r23[55] = 133;

        $r23[56] = 168;

        $r23[57] = 175;

        $r23[58] = 166;

        $r23[59] = 161;

        $r23[60] = 180;

        $r23[61] = 179;

        $r23[62] = 186;

        $r23[63] = 189;

        $r23[64] = 199;

        $r23[65] = 192;

        $r23[66] = 201;

        $r23[67] = 206;

        $r23[68] = 219;

        $r23[69] = 220;

        $r23[70] = 213;

        $r23[71] = 210;

        $r23[72] = 255;

        $r23[73] = 248;

        $r23[74] = 241;

        $r23[75] = 246;

        $r23[76] = 227;

        $r23[77] = 228;

        $r23[78] = 237;

        $r23[79] = 234;

        $r23[80] = 183;

        $r23[81] = 176;

        $r23[82] = 185;

        $r23[83] = 190;

        $r23[84] = 171;

        $r23[85] = 172;

        $r23[86] = 165;

        $r23[87] = 162;

        $r23[88] = 143;

        $r23[89] = 136;

        $r23[90] = 129;

        $r23[91] = 134;

        $r23[92] = 147;

        $r23[93] = 148;

        $r23[94] = 157;

        $r23[95] = 154;

        $r23[96] = 39;

        $r23[97] = 32;

        $r23[98] = 41;

        $r23[99] = 46;

        $r23[100] = 59;

        $r23[101] = 60;

        $r23[102] = 53;

        $r23[103] = 50;

        $r23[104] = 31;

        $r23[105] = 24;

        $r23[106] = 17;

        $r23[107] = 22;

        $r23[108] = 3;

        $r23[109] = 4;

        $r23[110] = 13;

        $r23[111] = 10;

        $r23[112] = 87;

        $r23[113] = 80;

        $r23[114] = 89;

        $r23[115] = 94;

        $r23[116] = 75;

        $r23[117] = 76;

        $r23[118] = 69;

        $r23[119] = 66;

        $r23[120] = 111;

        $r23[121] = 104;

        $r23[122] = 97;

        $r23[123] = 102;

        $r23[124] = 115;

        $r23[125] = 116;

        $r23[126] = 125;

        $r23[127] = 122;

        $r23[128] = 137;

        $r23[129] = 142;

        $r23[130] = 135;

        $r23[131] = 128;

        $r23[132] = 149;

        $r23[133] = 146;

        $r23[134] = 155;

        $r23[135] = 156;

        $r23[136] = 177;

        $r23[137] = 182;

        $r23[138] = 191;

        $r23[139] = 184;

        $r23[140] = 173;

        $r23[141] = 170;

        $r23[142] = 163;

        $r23[143] = 164;

        $r23[144] = 249;

        $r23[145] = 254;

        $r23[146] = 247;

        $r23[147] = 240;

        $r23[148] = 229;

        $r23[149] = 226;

        $r23[150] = 235;

        $r23[151] = 236;

        $r23[152] = 193;

        $r23[153] = 198;

        $r23[154] = 207;

        $r23[155] = 200;

        $r23[156] = 221;

        $r23[157] = 218;

        $r23[158] = 211;

        $r23[159] = 212;

        $r23[160] = 105;

        $r23[161] = 110;

        $r23[162] = 103;

        $r23[163] = 96;

        $r23[164] = 117;

        $r23[165] = 114;

        $r23[166] = 123;

        $r23[167] = 124;

        $r23[168] = 81;

        $r23[169] = 86;

        $r23[170] = 95;

        $r23[171] = 88;

        $r23[172] = 77;

        $r23[173] = 74;

        $r23[174] = 67;

        $r23[175] = 68;

        $r23[176] = 25;

        $r23[177] = 30;

        $r23[178] = 23;

        $r23[179] = 16;

        $r23[180] = 5;

        $r23[181] = 2;

        $r23[182] = 11;

        $r23[183] = 12;

        $r23[184] = 33;

        $r23[185] = 38;

        $r23[186] = 47;

        $r23[187] = 40;

        $r23[188] = 61;

        $r23[189] = 58;

        $r23[190] = 51;

        $r23[191] = 52;

        $r23[192] = 78;

        $r23[193] = 73;

        $r23[194] = 64;

        $r23[195] = 71;

        $r23[196] = 82;

        $r23[197] = 85;

        $r23[198] = 92;

        $r23[199] = 91;

        $r23[200] = 118;

        $r23[201] = 113;

        $r23[202] = 120;

        $r23[203] = 127;

        $r23[204] = 106;

        $r23[205] = 109;

        $r23[206] = 100;

        $r23[207] = 99;

        $r23[208] = 62;

        $r23[209] = 57;

        $r23[210] = 48;

        $r23[211] = 55;

        $r23[212] = 34;

        $r23[213] = 37;

        $r23[214] = 44;

        $r23[215] = 43;

        $r23[216] = 6;

        $r23[217] = 1;

        $r23[218] = 8;

        $r23[219] = 15;

        $r23[220] = 26;

        $r23[221] = 29;

        $r23[222] = 20;

        $r23[223] = 19;

        $r23[224] = 174;

        $r23[225] = 169;

        $r23[226] = 160;

        $r23[227] = 167;

        $r23[228] = 178;

        $r23[229] = 181;

        $r23[230] = 188;

        $r23[231] = 187;

        $r23[232] = 150;

        $r23[233] = 145;

        $r23[234] = 152;

        $r23[235] = 159;

        $r23[236] = 138;

        $r23[237] = 141;

        $r23[238] = 132;

        $r23[239] = 131;

        $r23[240] = 222;

        $r23[241] = 217;

        $r23[242] = 208;

        $r23[243] = 215;

        $r23[244] = 194;

        $r23[245] = 197;

        $r23[246] = 204;

        $r23[247] = 203;

        $r23[248] = 230;

        $r23[249] = 225;

        $r23[250] = 232;

        $r23[251] = 239;

        $r23[252] = 250;

        $r23[253] = 253;

        $r23[254] = 244;

        $r23[255] = 243;

        <androidx.media3.common.util.Util: int[] CRC8_BYTES_MSBF> = $r23;

        return;
    }

androidx.media3.common.util.Util$Api21
    private void <init>()
    {
        androidx.media3.common.util.Util$Api21 r0;

        r0 := @this: androidx.media3.common.util.Util$Api21;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.drawable.Drawable getDrawable(android.content.Context, android.content.res.Resources, int)
    {
        android.content.Context r0;
        android.content.res.Resources r1;
        int i0;
        android.content.res.Resources$Theme $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i0, $r2);

        return $r3;
    }

