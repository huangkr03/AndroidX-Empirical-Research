androidx.compose.ui.platform.AndroidClipboardManager_androidKt
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: java.lang.String PLAIN_TEXT_LABEL>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte UNIT_TYPE_UNSPECIFIED>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte UNIT_TYPE_SP>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte UNIT_TYPE_EM>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_STYLE_NORMAL>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_STYLE_ITALIC>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_SYNTHESIS_NONE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_SYNTHESIS_ALL>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_SYNTHESIS_WEIGHT>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_SYNTHESIS_STYLE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte COLOR_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_SIZE_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_WEIGHT_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_STYLE_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_SYNTHESIS_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte FONT_FEATURE_SETTINGS_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte LETTER_SPACING_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte BASELINE_SHIFT_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte TEXT_GEOMETRIC_TRANSFORM_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte BACKGROUND_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte TEXT_DECORATION_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: byte SHADOW_ID>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int BYTE_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int INT_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int FLOAT_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int LONG_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int COLOR_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int TEXT_UNIT_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int FONT_WEIGHT_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int FONT_STYLE_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int FONT_SYNTHESIS_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int BASELINE_SHIFT_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int TEXT_GEOMETRIC_TRANSFORM_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int TEXT_DECORATION_SIZE>
<androidx.compose.ui.platform.AndroidClipboardManager_androidKt: int SHADOW_SIZE>
    public static final androidx.compose.ui.text.AnnotatedString convertToAnnotatedString(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        android.text.Annotation[] r1;
        java.util.List r2;
        int i0, i1, i2, $i3, i4;
        android.text.Annotation r3;
        androidx.compose.ui.platform.DecodeHelper r4, $r14;
        androidx.compose.ui.text.SpanStyle r5;
        boolean $z0, $z1;
        android.text.Spanned $r6, $r12, $r13;
        java.lang.Object[] $r7;
        java.util.ArrayList $r8;
        androidx.compose.ui.text.AnnotatedString $r9, $r17;
        java.lang.String $r10, $r11, $r15, $r18;
        androidx.compose.ui.text.AnnotatedString$Range $r16;

        $r0 := @parameter0: java.lang.CharSequence;

        if $r0 != null goto label1;

        return null;

     label1:
        $z0 = $r0 instanceof android.text.Spanned;

        if $z0 != 0 goto label2;

        $r17 = new androidx.compose.ui.text.AnnotatedString;

        $r18 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<androidx.compose.ui.text.AnnotatedString: void <init>(java.lang.String,java.util.List,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r18, null, null, 6, null);

        return $r17;

     label2:
        $r6 = (android.text.Spanned) $r0;

        $i3 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $r7 = interfaceinvoke $r6.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i3, class "Landroid/text/Annotation;");

        r1 = (android.text.Annotation[]) $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r8;

        i4 = 0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "annotations");

        i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>(r1);

        if i4 > i0 goto label6;

     label3:
        r3 = r1[i4];

        $r11 = virtualinvoke r3.<android.text.Annotation: java.lang.String getKey()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, "androidx.compose.text.SpanStyle");

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r12 = (android.text.Spanned) $r0;

        i1 = interfaceinvoke $r12.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r3);

        $r13 = (android.text.Spanned) $r0;

        i2 = interfaceinvoke $r13.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r3);

        $r14 = new androidx.compose.ui.platform.DecodeHelper;

        $r15 = virtualinvoke r3.<android.text.Annotation: java.lang.String getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "span.value");

        specialinvoke $r14.<androidx.compose.ui.platform.DecodeHelper: void <init>(java.lang.String)>($r15);

        r4 = $r14;

        r5 = virtualinvoke r4.<androidx.compose.ui.platform.DecodeHelper: androidx.compose.ui.text.SpanStyle decodeSpanStyle()>();

        $r16 = new androidx.compose.ui.text.AnnotatedString$Range;

        specialinvoke $r16.<androidx.compose.ui.text.AnnotatedString$Range: void <init>(java.lang.Object,int,int)>(r5, i1, i2);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r16);

     label5:
        if i4 == i0 goto label6;

        i4 = i4 + 1;

        goto label3;

     label6:
        $r9 = new androidx.compose.ui.text.AnnotatedString;

        $r10 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<androidx.compose.ui.text.AnnotatedString: void <init>(java.lang.String,java.util.List,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r10, r2, null, 4, null);

        return $r9;
    }

    public static final java.lang.CharSequence convertToCharSequence(androidx.compose.ui.text.AnnotatedString)
    {
        androidx.compose.ui.text.AnnotatedString $r0;
        android.text.SpannableString r1, $r10;
        androidx.compose.ui.platform.EncodeHelper r2, r7, $r13;
        java.util.List $r3, $r9;
        int i0, i1, i2, i3;
        java.lang.Object r4, $r15;
        androidx.compose.ui.text.AnnotatedString$Range r5;
        androidx.compose.ui.text.SpanStyle r6;
        boolean $z3;
        java.lang.String $r11, $r17, $r18;
        java.lang.CharSequence $r12, $r14, $r19;
        android.text.Annotation $r16;

        $r0 := @parameter0: androidx.compose.ui.text.AnnotatedString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r9 = virtualinvoke $r0.<androidx.compose.ui.text.AnnotatedString: java.util.List getSpanStyles()>();

        $z3 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $r18 = virtualinvoke $r0.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        $r19 = (java.lang.CharSequence) $r18;

        return $r19;

     label1:
        $r10 = new android.text.SpannableString;

        $r11 = virtualinvoke $r0.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        $r12 = (java.lang.CharSequence) $r11;

        specialinvoke $r10.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r12);

        r1 = $r10;

        $r13 = new androidx.compose.ui.platform.EncodeHelper;

        specialinvoke $r13.<androidx.compose.ui.platform.EncodeHelper: void <init>()>();

        r2 = $r13;

        $r3 = virtualinvoke $r0.<androidx.compose.ui.text.AnnotatedString: java.util.List getSpanStyles()>();

        i3 = 0;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label2:
        if i3 >= i0 goto label3;

        r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = (androidx.compose.ui.text.AnnotatedString$Range) r4;

        $r15 = virtualinvoke r5.<androidx.compose.ui.text.AnnotatedString$Range: java.lang.Object component1()>();

        r6 = (androidx.compose.ui.text.SpanStyle) $r15;

        i1 = virtualinvoke r5.<androidx.compose.ui.text.AnnotatedString$Range: int component2()>();

        i2 = virtualinvoke r5.<androidx.compose.ui.text.AnnotatedString$Range: int component3()>();

        r7 = r2;

        virtualinvoke r7.<androidx.compose.ui.platform.EncodeHelper: void reset()>();

        virtualinvoke r7.<androidx.compose.ui.platform.EncodeHelper: void encode(androidx.compose.ui.text.SpanStyle)>(r6);

        $r16 = new android.text.Annotation;

        $r17 = virtualinvoke r2.<androidx.compose.ui.platform.EncodeHelper: java.lang.String encodedString()>();

        specialinvoke $r16.<android.text.Annotation: void <init>(java.lang.String,java.lang.String)>("androidx.compose.text.SpanStyle", $r17);

        virtualinvoke r1.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r16, i1, i2, 33);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r14 = (java.lang.CharSequence) r1;

        return $r14;
    }

