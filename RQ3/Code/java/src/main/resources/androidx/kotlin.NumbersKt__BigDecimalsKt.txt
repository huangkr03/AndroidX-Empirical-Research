kotlin.NumbersKt__BigDecimalsKt
    public void <init>()
    {
        kotlin.NumbersKt__BigDecimalsKt $r0;

        $r0 := @this: kotlin.NumbersKt__BigDecimalsKt;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final java.math.BigDecimal dec(java.math.BigDecimal)
    {
        java.math.BigDecimal $r0, $r1;

        $r0 := @parameter0: java.math.BigDecimal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <java.math.BigDecimal: java.math.BigDecimal ONE>;

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.subtract(BigDecimal.ONE)");

        return $r0;
    }

    private static final java.math.BigDecimal div(java.math.BigDecimal, java.math.BigDecimal)
    {
        java.math.BigDecimal $r0, $r1;
        java.math.RoundingMode $r2;

        $r0 := @parameter0: java.math.BigDecimal;

        $r1 := @parameter1: java.math.BigDecimal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.RoundingMode)>($r1, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.divide(other, RoundingMode.HALF_EVEN)");

        return $r0;
    }

    private static final java.math.BigDecimal inc(java.math.BigDecimal)
    {
        java.math.BigDecimal $r0, $r1;

        $r0 := @parameter0: java.math.BigDecimal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <java.math.BigDecimal: java.math.BigDecimal ONE>;

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.add(BigDecimal.ONE)");

        return $r0;
    }

    private static final java.math.BigDecimal minus(java.math.BigDecimal, java.math.BigDecimal)
    {
        java.math.BigDecimal $r0, $r1;

        $r0 := @parameter0: java.math.BigDecimal;

        $r1 := @parameter1: java.math.BigDecimal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.subtract(other)");

        return $r0;
    }

    private static final java.math.BigDecimal plus(java.math.BigDecimal, java.math.BigDecimal)
    {
        java.math.BigDecimal $r0, $r1;

        $r0 := @parameter0: java.math.BigDecimal;

        $r1 := @parameter1: java.math.BigDecimal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.add(other)");

        return $r0;
    }

    private static final java.math.BigDecimal rem(java.math.BigDecimal, java.math.BigDecimal)
    {
        java.math.BigDecimal $r0, $r1;

        $r0 := @parameter0: java.math.BigDecimal;

        $r1 := @parameter1: java.math.BigDecimal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal remainder(java.math.BigDecimal)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.remainder(other)");

        return $r0;
    }

    private static final java.math.BigDecimal times(java.math.BigDecimal, java.math.BigDecimal)
    {
        java.math.BigDecimal $r0, $r1;

        $r0 := @parameter0: java.math.BigDecimal;

        $r1 := @parameter1: java.math.BigDecimal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.multiply(other)");

        return $r0;
    }

    private static final java.math.BigDecimal toBigDecimal(double)
    {
        java.math.BigDecimal $r0;
        java.lang.String $r1;
        double $d0;

        $d0 := @parameter0: double;

        $r0 = new java.math.BigDecimal;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        specialinvoke $r0.<java.math.BigDecimal: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    private static final java.math.BigDecimal toBigDecimal(double, java.math.MathContext)
    {
        java.math.MathContext $r0;
        java.lang.String $r1;
        double $d0;
        java.math.BigDecimal $r2;

        $d0 := @parameter0: double;

        $r0 := @parameter1: java.math.MathContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "mathContext");

        $r2 = new java.math.BigDecimal;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String,java.math.MathContext)>($r1, $r0);

        return $r2;
    }

    private static final java.math.BigDecimal toBigDecimal(float)
    {
        java.math.BigDecimal $r0;
        java.lang.String $r1;
        float $f0;

        $f0 := @parameter0: float;

        $r0 = new java.math.BigDecimal;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        specialinvoke $r0.<java.math.BigDecimal: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    private static final java.math.BigDecimal toBigDecimal(float, java.math.MathContext)
    {
        java.math.MathContext $r0;
        java.lang.String $r1;
        float $f0;
        java.math.BigDecimal $r2;

        $f0 := @parameter0: float;

        $r0 := @parameter1: java.math.MathContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "mathContext");

        $r2 = new java.math.BigDecimal;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String,java.math.MathContext)>($r1, $r0);

        return $r2;
    }

    private static final java.math.BigDecimal toBigDecimal(int)
    {
        java.math.BigDecimal $r0;
        int $i0;
        long $l1;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        $r0 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "valueOf(this.toLong())");

        return $r0;
    }

    private static final java.math.BigDecimal toBigDecimal(int, java.math.MathContext)
    {
        int $i0;
        java.math.MathContext $r0;
        java.math.BigDecimal $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.math.MathContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "mathContext");

        $r1 = new java.math.BigDecimal;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(int,java.math.MathContext)>($i0, $r0);

        return $r1;
    }

    private static final java.math.BigDecimal toBigDecimal(long)
    {
        java.math.BigDecimal $r0;
        long $l0;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "valueOf(this)");

        return $r0;
    }

    private static final java.math.BigDecimal toBigDecimal(long, java.math.MathContext)
    {
        long $l0;
        java.math.MathContext $r0;
        java.math.BigDecimal $r1;

        $l0 := @parameter0: long;

        $r0 := @parameter1: java.math.MathContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "mathContext");

        $r1 = new java.math.BigDecimal;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(long,java.math.MathContext)>($l0, $r0);

        return $r1;
    }

    private static final java.math.BigDecimal unaryMinus(java.math.BigDecimal)
    {
        java.math.BigDecimal $r0;

        $r0 := @parameter0: java.math.BigDecimal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.negate()");

        return $r0;
    }

