androidx.room.compiler.codegen.kotlin.KotlinFunSpecKt
    public static final com.squareup.kotlinpoet.KModifier toKotlinVisibilityModifier(androidx.room.compiler.codegen.VisibilityModifier)
    {
        androidx.room.compiler.codegen.VisibilityModifier $r0;
        int[] $r1;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r2;
        com.squareup.kotlinpoet.KModifier $r3;

        $r0 := @parameter0: androidx.room.compiler.codegen.VisibilityModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.room.compiler.codegen.kotlin.KotlinFunSpecKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r0.<androidx.room.compiler.codegen.VisibilityModifier: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r3 = <com.squareup.kotlinpoet.KModifier: com.squareup.kotlinpoet.KModifier PUBLIC>;

        goto label5;

     label2:
        $r3 = <com.squareup.kotlinpoet.KModifier: com.squareup.kotlinpoet.KModifier PROTECTED>;

        goto label5;

     label3:
        $r3 = <com.squareup.kotlinpoet.KModifier: com.squareup.kotlinpoet.KModifier PRIVATE>;

        goto label5;

     label4:
        $r2 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r2.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r2;

     label5:
        return $r3;
    }

