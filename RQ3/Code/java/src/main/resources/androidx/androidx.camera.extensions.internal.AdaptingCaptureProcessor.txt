androidx.camera.extensions.internal.AdaptingCaptureProcessor
<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.impl.CaptureProcessorImpl mImpl>
<androidx.camera.extensions.internal.AdaptingCaptureProcessor: android.view.Surface mSurface>
<androidx.camera.extensions.internal.AdaptingCaptureProcessor: int mImageFormat>
<androidx.camera.extensions.internal.AdaptingCaptureProcessor: android.util.Size mResolution>
<androidx.camera.extensions.internal.AdaptingCaptureProcessor: java.lang.Object mLock>
<androidx.camera.extensions.internal.AdaptingCaptureProcessor: boolean mActive>
<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>
    public void <init>(androidx.camera.extensions.impl.CaptureProcessorImpl)
    {
        androidx.camera.extensions.internal.AdaptingCaptureProcessor r0;
        androidx.camera.extensions.impl.CaptureProcessorImpl r1;
        java.lang.Object $r2;
        androidx.camera.extensions.internal.BlockingCloseAccessCounter $r3;

        r0 := @this: androidx.camera.extensions.internal.AdaptingCaptureProcessor;

        r1 := @parameter0: androidx.camera.extensions.impl.CaptureProcessorImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: java.lang.Object mLock> = $r2;

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: boolean mActive> = 0;

        $r3 = new androidx.camera.extensions.internal.BlockingCloseAccessCounter;

        specialinvoke $r3.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter> = $r3;

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.impl.CaptureProcessorImpl mImpl> = r1;

        return;
    }

    public void onInit()
    {
        androidx.camera.extensions.internal.AdaptingCaptureProcessor r0;
        androidx.camera.extensions.internal.BlockingCloseAccessCounter $r1, $r7, $r10;
        boolean $z0;
        int $i0, $i1;
        android.view.Surface $r2;
        androidx.camera.extensions.impl.CaptureProcessorImpl $r3, $r4, $r6;
        android.util.Size $r5;
        java.lang.Object $r8, r12;
        java.lang.Throwable $r9, r11;

        r0 := @this: androidx.camera.extensions.internal.AdaptingCaptureProcessor;

        $r1 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        $z0 = virtualinvoke $r1.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: boolean tryIncrement()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.impl.CaptureProcessorImpl mImpl>;

        $r2 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: android.view.Surface mSurface>;

        $i0 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: int mImageFormat>;

        interfaceinvoke $r3.<androidx.camera.extensions.impl.CaptureProcessorImpl: void onOutputSurface(android.view.Surface,int)>($r2, $i0);

        $r4 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.impl.CaptureProcessorImpl mImpl>;

        $i1 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: int mImageFormat>;

        interfaceinvoke $r4.<androidx.camera.extensions.impl.CaptureProcessorImpl: void onImageFormatUpdate(int)>($i1);

        $r6 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.impl.CaptureProcessorImpl mImpl>;

        $r5 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: android.util.Size mResolution>;

        interfaceinvoke $r6.<androidx.camera.extensions.impl.CaptureProcessorImpl: void onResolutionUpdate(android.util.Size)>($r5);

     label2:
        $r7 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r7.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void decrement()>();

        goto label4;

     label3:
        $r9 := @caughtexception;

        r11 = $r9;

        $r10 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r10.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void decrement()>();

        throw r11;

     label4:
        $r8 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: java.lang.Object mLock>;

        r12 = $r8;

        entermonitor $r8;

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: boolean mActive> = 1;

        exitmonitor r12;

        goto label5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onDeInit()
    {
        androidx.camera.extensions.internal.AdaptingCaptureProcessor r0;
        java.lang.Object r1, $r2;

        r0 := @this: androidx.camera.extensions.internal.AdaptingCaptureProcessor;

        $r2 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: boolean mActive> = 0;

        exitmonitor r1;

        goto label1;

     label1:
        return;
    }

    public void close()
    {
        androidx.camera.extensions.internal.AdaptingCaptureProcessor r0;
        androidx.camera.extensions.internal.BlockingCloseAccessCounter $r1;

        r0 := @this: androidx.camera.extensions.internal.AdaptingCaptureProcessor;

        $r1 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r1.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void destroyAndWaitForZeroAccess()>();

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: android.view.Surface mSurface> = null;

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: android.util.Size mResolution> = null;

        return;
    }

    public void onOutputSurface(android.view.Surface, int)
    {
        androidx.camera.extensions.internal.AdaptingCaptureProcessor r0;
        android.view.Surface r1;
        int i0;

        r0 := @this: androidx.camera.extensions.internal.AdaptingCaptureProcessor;

        r1 := @parameter0: android.view.Surface;

        i0 := @parameter1: int;

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: android.view.Surface mSurface> = r1;

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: int mImageFormat> = i0;

        return;
    }

    public void onResolutionUpdate(android.util.Size)
    {
        androidx.camera.extensions.internal.AdaptingCaptureProcessor r0;
        android.util.Size r1;

        r0 := @this: androidx.camera.extensions.internal.AdaptingCaptureProcessor;

        r1 := @parameter0: android.util.Size;

        r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: android.util.Size mResolution> = r1;

        return;
    }

    public void process(androidx.camera.core.impl.ImageProxyBundle)
    {
        androidx.camera.extensions.internal.AdaptingCaptureProcessor r0;
        androidx.camera.core.impl.ImageProxyBundle r1;
        java.lang.Object r2, $r16, $r21, $r23;
        java.util.List r3;
        java.util.HashMap r4, $r17;
        java.util.Iterator r5;
        java.lang.Integer r6;
        com.google.common.util.concurrent.ListenableFuture r7;
        android.media.Image r8, $r25;
        androidx.camera.core.ImageInfo r9;
        androidx.camera.core.impl.CameraCaptureResult r10;
        android.hardware.camera2.CaptureResult r11;
        android.hardware.camera2.TotalCaptureResult r12;
        android.util.Pair r13, $r24;
        java.lang.Throwable r14, r15, $r27, $r29, $r30, r32;
        boolean $z0, $z1, $z2;
        androidx.camera.extensions.internal.BlockingCloseAccessCounter $r18, $r20, $r28;
        androidx.camera.extensions.impl.CaptureProcessorImpl $r19;
        int $i0;
        java.util.concurrent.TimeUnit $r22;
        androidx.camera.core.ImageProxy r31;

        r0 := @this: androidx.camera.extensions.internal.AdaptingCaptureProcessor;

        r1 := @parameter0: androidx.camera.core.impl.ImageProxyBundle;

        $r16 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: java.lang.Object mLock>;

        r2 = $r16;

        entermonitor $r16;

     label01:
        $z0 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: boolean mActive>;

        if $z0 != 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        r3 = interfaceinvoke r1.<androidx.camera.core.impl.ImageProxyBundle: java.util.List getCaptureIds()>();

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        r4 = $r17;

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label22;

        $r21 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Integer) $r21;

        $i0 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        r7 = interfaceinvoke r1.<androidx.camera.core.impl.ImageProxyBundle: com.google.common.util.concurrent.ListenableFuture getImageProxy(int)>($i0);

     label05:
        $r22 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r23 = interfaceinvoke r7.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(5L, $r22);

        r31 = (androidx.camera.core.ImageProxy) $r23;

        r8 = interfaceinvoke r31.<androidx.camera.core.ImageProxy: android.media.Image getImage()>();

        if r8 != null goto label08;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        r9 = interfaceinvoke r31.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()>();

        r10 = staticinvoke <androidx.camera.core.impl.CameraCaptureResults: androidx.camera.core.impl.CameraCaptureResult retrieveCameraCaptureResult(androidx.camera.core.ImageInfo)>(r9);

        if r10 != null goto label11;

     label09:
        exitmonitor r2;

     label10:
        return;

     label11:
        r11 = staticinvoke <androidx.camera.camera2.impl.Camera2CameraCaptureResultConverter: android.hardware.camera2.CaptureResult getCaptureResult(androidx.camera.core.impl.CameraCaptureResult)>(r10);

        if r11 != null goto label14;

     label12:
        exitmonitor r2;

     label13:
        return;

     label14:
        r12 = (android.hardware.camera2.TotalCaptureResult) r11;

        if r12 != null goto label17;

     label15:
        exitmonitor r2;

     label16:
        return;

     label17:
        $r24 = new android.util.Pair;

        $r25 = interfaceinvoke r31.<androidx.camera.core.ImageProxy: android.media.Image getImage()>();

        specialinvoke $r24.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r25, r12);

        r13 = $r24;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r13);

     label18:
        goto label21;

     label19:
        $r30 := @caughtexception;

        r32 = $r30;

        exitmonitor r2;

     label20:
        return;

     label21:
        goto label04;

     label22:
        $r18 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        $z2 = virtualinvoke $r18.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: boolean tryIncrement()>();

        if $z2 != 0 goto label24;

        exitmonitor r2;

     label23:
        return;

     label24:
        $r19 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.impl.CaptureProcessorImpl mImpl>;

        interfaceinvoke $r19.<androidx.camera.extensions.impl.CaptureProcessorImpl: void process(java.util.Map)>(r4);

     label25:
        $r20 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r20.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void decrement()>();

        goto label28;

     label26:
        $r27 := @caughtexception;

        r14 = $r27;

     label27:
        $r28 = r0.<androidx.camera.extensions.internal.AdaptingCaptureProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r28.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void decrement()>();

        throw r14;

     label28:
        exitmonitor r2;

     label29:
        goto label32;

     label30:
        $r29 := @caughtexception;

        r15 = $r29;

        exitmonitor r2;

     label31:
        throw r15;

     label32:
        return;

        catch java.util.concurrent.TimeoutException from label05 to label06 with label19;
        catch java.util.concurrent.ExecutionException from label05 to label06 with label19;
        catch java.lang.InterruptedException from label05 to label06 with label19;
        catch java.util.concurrent.TimeoutException from label08 to label09 with label19;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label19;
        catch java.lang.InterruptedException from label08 to label09 with label19;
        catch java.util.concurrent.TimeoutException from label11 to label12 with label19;
        catch java.util.concurrent.ExecutionException from label11 to label12 with label19;
        catch java.lang.InterruptedException from label11 to label12 with label19;
        catch java.util.concurrent.TimeoutException from label14 to label15 with label19;
        catch java.util.concurrent.ExecutionException from label14 to label15 with label19;
        catch java.lang.InterruptedException from label14 to label15 with label19;
        catch java.util.concurrent.TimeoutException from label17 to label18 with label19;
        catch java.util.concurrent.ExecutionException from label17 to label18 with label19;
        catch java.lang.InterruptedException from label17 to label18 with label19;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label03 to label07 with label30;
        catch java.lang.Throwable from label08 to label10 with label30;
        catch java.lang.Throwable from label11 to label13 with label30;
        catch java.lang.Throwable from label14 to label16 with label30;
        catch java.lang.Throwable from label17 to label20 with label30;
        catch java.lang.Throwable from label21 to label23 with label30;
        catch java.lang.Throwable from label24 to label29 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

