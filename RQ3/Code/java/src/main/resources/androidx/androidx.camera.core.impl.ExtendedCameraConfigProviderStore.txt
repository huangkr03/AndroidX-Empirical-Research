androidx.camera.core.impl.ExtendedCameraConfigProviderStore
<androidx.camera.core.impl.ExtendedCameraConfigProviderStore: java.lang.Object LOCK>
<androidx.camera.core.impl.ExtendedCameraConfigProviderStore: java.util.Map CAMERA_CONFIG_PROVIDERS>
    private void <init>()
    {
        androidx.camera.core.impl.ExtendedCameraConfigProviderStore r0;

        r0 := @this: androidx.camera.core.impl.ExtendedCameraConfigProviderStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addConfig(java.lang.Object, androidx.camera.core.impl.CameraConfigProvider)
    {
        java.lang.Object r0, r2, $r4;
        androidx.camera.core.impl.CameraConfigProvider r1;
        java.lang.Throwable r3, $r7;
        java.util.Map $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.camera.core.impl.CameraConfigProvider;

        $r4 = <androidx.camera.core.impl.ExtendedCameraConfigProviderStore: java.lang.Object LOCK>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <androidx.camera.core.impl.ExtendedCameraConfigProviderStore: java.util.Map CAMERA_CONFIG_PROVIDERS>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static androidx.camera.core.impl.CameraConfigProvider getConfigProvider(java.lang.Object)
    {
        java.lang.Object r0, r2, $r4, $r6;
        androidx.camera.core.impl.CameraConfigProvider r1, $r7;
        java.lang.Throwable r3, $r8;
        java.util.Map $r5;

        r0 := @parameter0: java.lang.Object;

        $r4 = <androidx.camera.core.impl.ExtendedCameraConfigProviderStore: java.lang.Object LOCK>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <androidx.camera.core.impl.ExtendedCameraConfigProviderStore: java.util.Map CAMERA_CONFIG_PROVIDERS>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (androidx.camera.core.impl.CameraConfigProvider) $r6;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if r1 != null goto label6;

        $r7 = <androidx.camera.core.impl.CameraConfigProvider: androidx.camera.core.impl.CameraConfigProvider EMPTY>;

        return $r7;

     label6:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.HashMap $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.camera.core.impl.ExtendedCameraConfigProviderStore: java.lang.Object LOCK> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <androidx.camera.core.impl.ExtendedCameraConfigProviderStore: java.util.Map CAMERA_CONFIG_PROVIDERS> = $r1;

        return;
    }

