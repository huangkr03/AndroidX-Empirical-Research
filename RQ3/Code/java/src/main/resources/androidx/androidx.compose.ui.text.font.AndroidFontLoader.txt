androidx.compose.ui.text.font.AndroidFontLoader
<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context>
<androidx.compose.ui.text.font.AndroidFontLoader: java.lang.Object cacheKey>
    public void <init>(android.content.Context)
    {
        androidx.compose.ui.text.font.AndroidFontLoader r0;
        android.content.Context r1, $r2;

        r0 := @this: androidx.compose.ui.text.font.AndroidFontLoader;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context> = $r2;

        return;
    }

    public android.graphics.Typeface loadBlocking(androidx.compose.ui.text.font.Font)
    {
        androidx.compose.ui.text.font.AndroidFontLoader r0, r31, $r32;
        androidx.compose.ui.text.font.Font r1, r2;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;
        java.lang.UnsupportedOperationException $r12;
        kotlin.Result$Companion $r13, $r27;
        android.content.Context $r14, $r19, $r20, $r24;
        androidx.compose.ui.text.font.ResourceFont $r15, $r17, $r21;
        android.graphics.Typeface $r16, $r29, $r30;
        androidx.compose.ui.text.font.FontVariation$Settings $r18;
        androidx.compose.ui.text.font.AndroidFont $r22, $r25;
        androidx.compose.ui.text.font.AndroidFont$TypefaceLoader $r23;
        java.lang.Throwable $r26;
        java.lang.Object $r28, $r33, r34, $r35;

        r0 := @this: androidx.compose.ui.text.font.AndroidFontLoader;

        r1 := @parameter0: androidx.compose.ui.text.font.Font;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "font");

        r2 = r1;

        $z0 = r2 instanceof androidx.compose.ui.text.font.AndroidFont;

        if $z0 == 0 goto label01;

        $r22 = (androidx.compose.ui.text.font.AndroidFont) r1;

        $r23 = virtualinvoke $r22.<androidx.compose.ui.text.font.AndroidFont: androidx.compose.ui.text.font.AndroidFont$TypefaceLoader getTypefaceLoader()>();

        $r24 = r0.<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "context");

        $r25 = (androidx.compose.ui.text.font.AndroidFont) r1;

        $r29 = interfaceinvoke $r23.<androidx.compose.ui.text.font.AndroidFont$TypefaceLoader: android.graphics.Typeface loadBlocking(android.content.Context,androidx.compose.ui.text.font.AndroidFont)>($r24, $r25);

        goto label13;

     label01:
        $z1 = r2 instanceof androidx.compose.ui.text.font.ResourceFont;

        if $z1 == 0 goto label12;

        i0 = interfaceinvoke r1.<androidx.compose.ui.text.font.Font: int getLoadingStrategy-PKNRLFQ()>();

        $r3 = <androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion>;

        $i1 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: int getBlocking-PKNRLFQ()>();

        $z2 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i0, $i1);

        if $z2 == 0 goto label02;

        $r21 = (androidx.compose.ui.text.font.ResourceFont) r1;

        $r20 = r0.<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "context");

        $r30 = staticinvoke <androidx.compose.ui.text.font.AndroidFontLoader_androidKt: android.graphics.Typeface access$load(androidx.compose.ui.text.font.ResourceFont,android.content.Context)>($r21, $r20);

        goto label11;

     label02:
        $r4 = <androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion>;

        $i2 = virtualinvoke $r4.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: int getOptionalLocal-PKNRLFQ()>();

        $z3 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i0, $i2);

        if $z3 == 0 goto label09;

        r31 = r0;

     label03:
        $r13 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r32 = (androidx.compose.ui.text.font.AndroidFontLoader) r31;

        $r15 = (androidx.compose.ui.text.font.ResourceFont) r1;

        $r14 = $r32.<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "context");

        $r16 = staticinvoke <androidx.compose.ui.text.font.AndroidFontLoader_androidKt: android.graphics.Typeface access$load(androidx.compose.ui.text.font.ResourceFont,android.content.Context)>($r15, $r14);

        $r33 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r16);

     label04:
        goto label06;

     label05:
        $r26 := @caughtexception;

        $r27 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r28 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r26);

        $r33 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r28);

     label06:
        r34 = $r33;

        $z5 = staticinvoke <kotlin.Result: boolean isFailure-impl(java.lang.Object)>(r34);

        if $z5 == 0 goto label07;

        $r35 = null;

        goto label08;

     label07:
        $r35 = r34;

     label08:
        $r30 = (android.graphics.Typeface) $r35;

        goto label11;

     label09:
        $r5 = <androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion>;

        $i3 = virtualinvoke $r5.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: int getAsync-PKNRLFQ()>();

        $z4 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i0, $i3);

        if $z4 == 0 goto label10;

        $r12 = new java.lang.UnsupportedOperationException;

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unsupported Async font load path");

        throw $r12;

     label10:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown loading type ");

        $i4 = interfaceinvoke r1.<androidx.compose.ui.text.font.Font: int getLoadingStrategy-PKNRLFQ()>();

        $r9 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: java.lang.String toString-impl(int)>($i4);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label11:
        $r17 = (androidx.compose.ui.text.font.ResourceFont) r1;

        $r18 = virtualinvoke $r17.<androidx.compose.ui.text.font.ResourceFont: androidx.compose.ui.text.font.FontVariation$Settings getVariationSettings()>();

        $r19 = r0.<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "context");

        $r29 = staticinvoke <androidx.compose.ui.text.font.PlatformTypefacesKt: android.graphics.Typeface setFontVariationSettings(android.graphics.Typeface,androidx.compose.ui.text.font.FontVariation$Settings,android.content.Context)>($r30, $r18, $r19);

        goto label13;

     label12:
        $r29 = null;

     label13:
        return $r29;

        catch java.lang.Throwable from label03 to label04 with label05;
    }

    public java.lang.Object awaitLoad(androidx.compose.ui.text.font.Font, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r33, r34;
        androidx.compose.ui.text.font.Font r1, r25;
        android.content.Context r2, $r11, $r18;
        java.lang.Object $r3, r4, $r6, $r7, $r27, $r28;
        boolean $z0, $z1, $z2;
        androidx.compose.ui.text.font.ResourceFont $r8, $r19;
        android.graphics.Typeface $r9, $r12;
        androidx.compose.ui.text.font.FontVariation$Settings $r10;
        java.lang.StringBuilder $r15, $r16, r30;
        java.lang.String $r17;
        androidx.compose.ui.text.font.AndroidFont $r20, $r22;
        androidx.compose.ui.text.font.AndroidFont$TypefaceLoader $r21;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.ui.text.font.AndroidFontLoader r24;
        androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1 $r26, r29;
        java.lang.IllegalArgumentException r31;
        java.lang.IllegalStateException r32;

        r24 := @this: androidx.compose.ui.text.font.AndroidFontLoader;

        r25 := @parameter0: androidx.compose.ui.text.font.Font;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1;

        if $z0 == 0 goto label01;

        $r26 = (androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1) r0;

        $i0 = $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label>;

        $i3 = $i2 - -2147483648;

        $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label> = $i3;

        goto label02;

     label01:
        r29 = new androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1;

        specialinvoke r29.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: void <init>(androidx.compose.ui.text.font.AndroidFontLoader,kotlin.coroutines.Continuation)>(r24, r0);

        $r26 = r29;

     label02:
        $r3 = $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object result>;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label07;
            default: goto label11;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r1 = r25;

        $z1 = r1 instanceof androidx.compose.ui.text.font.AndroidFont;

        if $z1 == 0 goto label06;

        $r20 = (androidx.compose.ui.text.font.AndroidFont) r25;

        $r21 = virtualinvoke $r20.<androidx.compose.ui.text.font.AndroidFont: androidx.compose.ui.text.font.AndroidFont$TypefaceLoader getTypefaceLoader()>();

        r2 = r24.<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "context");

        $r22 = (androidx.compose.ui.text.font.AndroidFont) r25;

        $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label> = 1;

        r33 = (kotlin.coroutines.Continuation) $r26;

        $r27 = interfaceinvoke $r21.<androidx.compose.ui.text.font.AndroidFont$TypefaceLoader: java.lang.Object awaitLoad(android.content.Context,androidx.compose.ui.text.font.AndroidFont,kotlin.coroutines.Continuation)>(r2, $r22, r33);

        if $r27 != r4 goto label05;

        return r4;

     label04:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r27 = $r3;

     label05:
        return $r27;

     label06:
        $z2 = r1 instanceof androidx.compose.ui.text.font.ResourceFont;

        if $z2 == 0 goto label09;

        $r19 = (androidx.compose.ui.text.font.ResourceFont) r25;

        $r18 = r24.<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "context");

        $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object L$0> = r24;

        $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object L$1> = r25;

        $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label> = 2;

        r34 = (kotlin.coroutines.Continuation) $r26;

        $r28 = staticinvoke <androidx.compose.ui.text.font.AndroidFontLoader_androidKt: java.lang.Object access$loadAsync(androidx.compose.ui.text.font.ResourceFont,android.content.Context,kotlin.coroutines.Continuation)>($r19, $r18, r34);

        if $r28 != r4 goto label08;

        return r4;

     label07:
        $r6 = $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object L$1>;

        r25 = (androidx.compose.ui.text.font.Font) $r6;

        $r7 = $r26.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object L$0>;

        r24 = (androidx.compose.ui.text.font.AndroidFontLoader) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r28 = $r3;

     label08:
        $r9 = (android.graphics.Typeface) $r28;

        $r8 = (androidx.compose.ui.text.font.ResourceFont) r25;

        $r10 = virtualinvoke $r8.<androidx.compose.ui.text.font.ResourceFont: androidx.compose.ui.text.font.FontVariation$Settings getVariationSettings()>();

        $r11 = r24.<androidx.compose.ui.text.font.AndroidFontLoader: android.content.Context context>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "context");

        $r12 = staticinvoke <androidx.compose.ui.text.font.PlatformTypefacesKt: android.graphics.Typeface setFontVariationSettings(android.graphics.Typeface,androidx.compose.ui.text.font.FontVariation$Settings,android.content.Context)>($r9, $r10, $r11);

        goto label10;

     label09:
        r31 = new java.lang.IllegalArgumentException;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown font type: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw r31;

     label10:
        return $r12;

     label11:
        r32 = new java.lang.IllegalStateException;

        specialinvoke r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r32;
    }

    public java.lang.Object getCacheKey()
    {
        androidx.compose.ui.text.font.AndroidFontLoader r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.ui.text.font.AndroidFontLoader;

        $r1 = r0.<androidx.compose.ui.text.font.AndroidFontLoader: java.lang.Object cacheKey>;

        return $r1;
    }

    public volatile java.lang.Object loadBlocking(androidx.compose.ui.text.font.Font)
    {
        androidx.compose.ui.text.font.AndroidFontLoader r0;
        androidx.compose.ui.text.font.Font r1;
        android.graphics.Typeface $r2;

        r0 := @this: androidx.compose.ui.text.font.AndroidFontLoader;

        r1 := @parameter0: androidx.compose.ui.text.font.Font;

        $r2 = virtualinvoke r0.<androidx.compose.ui.text.font.AndroidFontLoader: android.graphics.Typeface loadBlocking(androidx.compose.ui.text.font.Font)>(r1);

        return $r2;
    }

androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1
<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object L$0>
<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object L$1>
<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object result>
<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: androidx.compose.ui.text.font.AndroidFontLoader this$0>
<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label>
    void <init>(androidx.compose.ui.text.font.AndroidFontLoader, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1 r0;
        androidx.compose.ui.text.font.AndroidFontLoader r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1;

        r1 := @parameter0: androidx.compose.ui.text.font.AndroidFontLoader;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: androidx.compose.ui.text.font.AndroidFontLoader this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.ui.text.font.AndroidFontLoader $r3;

        r0 := @this: androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: int label> = $i1;

        $r3 = r0.<androidx.compose.ui.text.font.AndroidFontLoader$awaitLoad$1: androidx.compose.ui.text.font.AndroidFontLoader this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.font.AndroidFontLoader: java.lang.Object awaitLoad(androidx.compose.ui.text.font.Font,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

