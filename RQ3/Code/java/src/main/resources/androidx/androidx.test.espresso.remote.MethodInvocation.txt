androidx.test.espresso.remote.MethodInvocation
<androidx.test.espresso.remote.MethodInvocation: java.lang.String TAG>
<androidx.test.espresso.remote.MethodInvocation: androidx.test.espresso.core.internal.deps.guava.cache.Cache methodCache>
<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>
<androidx.test.espresso.remote.MethodInvocation: java.lang.Object instance>
<androidx.test.espresso.remote.MethodInvocation: java.lang.String methodName>
<androidx.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes>
    public transient java.lang.Object invokeDeclaredMethod(java.lang.Object[])
    {
        androidx.test.espresso.remote.MethodInvocation r0;
        java.util.Locale r1;
        java.lang.Object[] r2, r17;
        java.lang.Class[] $r3, $r9;
        java.lang.String $r4, $r8, $r12, $r16;
        java.lang.Class $r5, $r11, $r13;
        java.lang.reflect.Method $r6;
        java.lang.Throwable $r7, r20, r24;
        java.util.List $r10, $r15;
        java.lang.reflect.Method[] $r14;
        androidx.test.espresso.remote.MethodInvocation$MethodKey r18, r22;
        java.lang.Object r19;
        androidx.test.espresso.remote.RemoteProtocolException r21, r23;

        r0 := @this: androidx.test.espresso.remote.MethodInvocation;

        r17 := @parameter0: java.lang.Object[];

     label1:
        r22 = new androidx.test.espresso.remote.MethodInvocation$MethodKey;

        r18 = r22;

        $r5 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r4 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        $r3 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes>;

        specialinvoke r22.<androidx.test.espresso.remote.MethodInvocation$MethodKey: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>($r5, $r4, $r3);

        $r6 = staticinvoke <androidx.test.espresso.remote.MethodInvocation: java.lang.reflect.Method getDeclaredMethod(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r18);

        r19 = specialinvoke r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Object invokeMethodExplosively(java.lang.reflect.Method,java.lang.Object[])>($r6, r17);

        goto label3;

     label2:
        $r7 := @caughtexception;

        r20 = $r7;

        r23 = new androidx.test.espresso.remote.RemoteProtocolException;

        r21 = r23;

        r1 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = newarray (java.lang.Object)[4];

        $r8 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        r2[0] = $r8;

        $r9 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes>;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        r2[1] = $r10;

        $r11 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        r2[2] = $r12;

        $r13 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14);

        r2[3] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, "No method: %s(%s) found for clazz: %s Available methods: %s", r2);

        specialinvoke r23.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r16, r20);

        r24 = (java.lang.Throwable) r21;

        throw r24;

     label3:
        return r19;

        catch java.lang.NoSuchMethodException from label1 to label2 with label2;
    }

    public transient java.lang.Object invokeMethod(java.lang.Object[])
    {
        androidx.test.espresso.remote.MethodInvocation r0;
        java.util.Locale r1;
        java.lang.Object[] r2, r15;
        java.lang.Class[] $r3;
        java.lang.String $r4, $r8, $r10, $r14;
        java.lang.Class $r5, $r9, $r11;
        java.lang.reflect.Method $r6;
        java.lang.Throwable $r7, r18, r22;
        java.lang.reflect.Method[] $r12;
        java.util.List $r13;
        androidx.test.espresso.remote.MethodInvocation$MethodKey r16, r20;
        java.lang.Object r17;
        androidx.test.espresso.remote.RemoteProtocolException r19, r21;

        r0 := @this: androidx.test.espresso.remote.MethodInvocation;

        r15 := @parameter0: java.lang.Object[];

     label1:
        r20 = new androidx.test.espresso.remote.MethodInvocation$MethodKey;

        r16 = r20;

        $r5 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r4 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        $r3 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes>;

        specialinvoke r20.<androidx.test.espresso.remote.MethodInvocation$MethodKey: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>($r5, $r4, $r3);

        $r6 = staticinvoke <androidx.test.espresso.remote.MethodInvocation: java.lang.reflect.Method getMethod(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r16);

        r17 = specialinvoke r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Object invokeMethodExplosively(java.lang.reflect.Method,java.lang.Object[])>($r6, r15);

        goto label3;

     label2:
        $r7 := @caughtexception;

        r18 = $r7;

        r21 = new androidx.test.espresso.remote.RemoteProtocolException;

        r19 = r21;

        r1 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = newarray (java.lang.Object)[3];

        $r8 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        r2[0] = $r8;

        $r9 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        r2[1] = $r10;

        $r11 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        r2[2] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, "No method: %s found for clazz: %s. Available methods: %s", r2);

        specialinvoke r21.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r14, r18);

        r22 = (java.lang.Throwable) r19;

        throw r22;

     label3:
        return r17;

        catch java.lang.NoSuchMethodException from label1 to label2 with label2;
    }

    private transient java.lang.Object invokeMethodExplosively(java.lang.reflect.Method, java.lang.Object[])
    {
        androidx.test.espresso.remote.MethodInvocation r0;
        java.lang.Object[] r1, r26, r31, r36, r41, r43;
        java.lang.Object $r2, r25;
        java.lang.Class $r3, $r8, $r13, $r21;
        java.lang.String $r4, $r5, $r6, $r9, $r10, $r11, $r14, $r15, $r17, $r18, $r20, $r22, $r23, r30, r35, r40;
        java.lang.Throwable $r7, $r12, $r16, $r19, r27, r32, r37, r42, r47, r48, r49;
        java.lang.reflect.Method r24;
        androidx.test.espresso.remote.RemoteProtocolException r28, r33, r38, r44, r45, r46;
        java.util.Locale r29, r34, r39;

        r0 := @this: androidx.test.espresso.remote.MethodInvocation;

        r24 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.Object[];

     label01:
        virtualinvoke r24.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r2 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Object instance>;

        r25 = virtualinvoke r24.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, r1);

     label02:
        r26 = newarray (java.lang.Object)[3];

        $r3 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        r26[0] = $r4;

        $r5 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        r26[1] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        r26[2] = $r6;

        staticinvoke <androidx.test.internal.util.LogUtil: void logDebug(java.lang.String,java.lang.String,java.lang.Object[])>("MethodInvocation", "%s.invokeMethodExplosively(%s,%s)", r26);

        return r25;

     label03:
        $r19 := @caughtexception;

        r27 = $r19;

     label04:
        r44 = new androidx.test.espresso.remote.RemoteProtocolException;

        r28 = r44;

        r29 = <java.util.Locale: java.util.Locale ROOT>;

        r30 = "Cannot invoke method %s with args [%s] on builder %s";

        r31 = newarray (java.lang.Object)[3];

        r31[0] = r24;

     label05:
        $r20 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        r31[1] = $r20;

     label06:
        $r21 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        r31[2] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r29, r30, r31);

        specialinvoke r44.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r23, r27);

        r47 = (java.lang.Throwable) r28;

        throw r47;

     label07:
        $r12 := @caughtexception;

        r32 = $r12;

     label08:
        r45 = new androidx.test.espresso.remote.RemoteProtocolException;

        r33 = r45;

        r34 = <java.util.Locale: java.util.Locale ROOT>;

        r35 = "Cannot create instance of %s";

        r36 = newarray (java.lang.Object)[1];

     label09:
        $r13 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        r36[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r34, r35, r36);

        specialinvoke r45.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r15, r32);

        r48 = (java.lang.Throwable) r33;

        throw r48;

     label10:
        $r16 := @caughtexception;

        r37 = $r16;

     label11:
        r46 = new androidx.test.espresso.remote.RemoteProtocolException;

        r38 = r46;

        r39 = <java.util.Locale: java.util.Locale ROOT>;

        r40 = "Method not accessible: %s";

        r41 = newarray (java.lang.Object)[1];

        goto label14;

     label12:
        $r7 := @caughtexception;

        r42 = $r7;

        r43 = newarray (java.lang.Object)[3];

        $r8 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        r43[0] = $r9;

        $r10 = r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        r43[1] = $r10;

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        r43[2] = $r11;

        staticinvoke <androidx.test.internal.util.LogUtil: void logDebug(java.lang.String,java.lang.String,java.lang.Object[])>("MethodInvocation", "%s.invokeMethodExplosively(%s,%s)", r43);

        throw r42;

     label13:
        $r17 = virtualinvoke r24.<java.lang.reflect.Method: java.lang.String getName()>();

        r41[0] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r39, r40, r41);

        specialinvoke r46.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r37);

        r49 = (java.lang.Throwable) r38;

        throw r49;

     label14:
        goto label13;

        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label01 to label02 with label07;
        catch java.lang.SecurityException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private static java.lang.reflect.Method getDeclaredMethod(androidx.test.espresso.remote.MethodInvocation$MethodKey) throws java.lang.NoSuchMethodException
    {
        androidx.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.reflect.Method $r1;

        r0 := @parameter0: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = staticinvoke <androidx.test.espresso.remote.MethodInvocation: java.lang.reflect.Method getMethodInternal(androidx.test.espresso.remote.MethodInvocation$MethodKey,boolean)>(r0, 1);

        return $r1;
    }

    private static java.lang.reflect.Method getMethod(androidx.test.espresso.remote.MethodInvocation$MethodKey) throws java.lang.NoSuchMethodException
    {
        androidx.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.reflect.Method $r1;

        r0 := @parameter0: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = staticinvoke <androidx.test.espresso.remote.MethodInvocation: java.lang.reflect.Method getMethodInternal(androidx.test.espresso.remote.MethodInvocation$MethodKey,boolean)>(r0, 0);

        return $r1;
    }

    private static java.lang.reflect.Method getMethodInternal(androidx.test.espresso.remote.MethodInvocation$MethodKey, boolean) throws java.lang.NoSuchMethodException
    {
        androidx.test.espresso.core.internal.deps.guava.cache.Cache $r0, $r15;
        java.lang.Object $r1;
        java.lang.Class $r2, $r7, $r12, $r16;
        java.lang.String $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r17;
        java.lang.Class[] $r5, $r10, $r14, $r18;
        androidx.test.espresso.remote.MethodInvocation$MethodKey r19;
        boolean z0;
        java.lang.reflect.Method r20, r22, r23;
        java.lang.Object[] r21, r24;

        r19 := @parameter0: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        z0 := @parameter1: boolean;

        $r0 = <androidx.test.espresso.remote.MethodInvocation: androidx.test.espresso.core.internal.deps.guava.cache.Cache methodCache>;

        $r1 = interfaceinvoke $r0.<androidx.test.espresso.core.internal.deps.guava.cache.Cache: java.lang.Object getIfPresent(java.lang.Object)>(r19);

        r20 = (java.lang.reflect.Method) $r1;

        if r20 != null goto label4;

        r21 = newarray (java.lang.Object)[3];

        $r7 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class '-$$Nest$fgettype'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        r21[0] = $r8;

        $r9 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String '-$$Nest$fgetmethodName'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        r21[1] = $r9;

        $r10 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] '-$$Nest$fgetparameterTypes'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r10);

        r21[2] = $r11;

        staticinvoke <androidx.test.internal.util.LogUtil: void logDebug(java.lang.String,java.lang.String,java.lang.Object[])>("MethodInvocation", "Cache miss for method: %s#%s(%s). Loading into cache.", r21);

        if z0 == 0 goto label3;

        $r16 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class '-$$Nest$fgettype'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        $r17 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String '-$$Nest$fgetmethodName'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        $r18 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] '-$$Nest$fgetparameterTypes'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        r22 = virtualinvoke $r16.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r17, $r18);

     label1:
        $r15 = <androidx.test.espresso.remote.MethodInvocation: androidx.test.espresso.core.internal.deps.guava.cache.Cache methodCache>;

        interfaceinvoke $r15.<androidx.test.espresso.core.internal.deps.guava.cache.Cache: void put(java.lang.Object,java.lang.Object)>(r19, r22);

        r23 = r22;

     label2:
        return r23;

     label3:
        $r12 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class '-$$Nest$fgettype'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        $r13 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String '-$$Nest$fgetmethodName'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        $r14 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] '-$$Nest$fgetparameterTypes'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        r22 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r13, $r14);

        goto label1;

     label4:
        r24 = newarray (java.lang.Object)[3];

        $r2 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class '-$$Nest$fgettype'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        r24[0] = $r3;

        $r4 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String '-$$Nest$fgetmethodName'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        r24[1] = $r4;

        $r5 = staticinvoke <androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] '-$$Nest$fgetparameterTypes'(androidx.test.espresso.remote.MethodInvocation$MethodKey)>(r19);

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r5);

        r24[2] = $r6;

        staticinvoke <androidx.test.internal.util.LogUtil: void logDebug(java.lang.String,java.lang.String,java.lang.Object[])>("MethodInvocation", "Cache hit for method: %s#%s(%s).", r24);

        r23 = r20;

        goto label2;
    }

    static void <clinit>()
    {
        androidx.test.espresso.core.internal.deps.guava.cache.CacheBuilder $r0, $r1;
        androidx.test.espresso.core.internal.deps.guava.cache.Cache $r2;

        $r0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.cache.CacheBuilder: androidx.test.espresso.core.internal.deps.guava.cache.CacheBuilder newBuilder()>();

        $r1 = virtualinvoke $r0.<androidx.test.espresso.core.internal.deps.guava.cache.CacheBuilder: androidx.test.espresso.core.internal.deps.guava.cache.CacheBuilder maximumSize(long)>(256L);

        $r2 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.cache.CacheBuilder: androidx.test.espresso.core.internal.deps.guava.cache.Cache build()>();

        <androidx.test.espresso.remote.MethodInvocation: androidx.test.espresso.core.internal.deps.guava.cache.Cache methodCache> = $r2;

        return;
    }

    public transient void <init>(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Class[])
    {
        androidx.test.espresso.remote.MethodInvocation r0;
        java.lang.Object r1, $r4;
        java.lang.String r2;
        java.lang.Class[] r3;
        java.lang.Class $r5, r6;
        boolean $z0, z1;

        r0 := @this: androidx.test.espresso.remote.MethodInvocation;

        r6 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r6, "clazz cannot be null!");

        $r5 = (java.lang.Class) $r4;

        r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class clazz> = $r5;

        r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Object instance> = r1;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        z1 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, "methodName cannot be null or empty");

        r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.String methodName> = r2;

        r0.<androidx.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes> = r3;

        return;

     label2:
        z1 = 0;

        goto label1;
    }

    public static void invalidateCache()
    {
        androidx.test.espresso.core.internal.deps.guava.cache.Cache $r0;

        $r0 = <androidx.test.espresso.remote.MethodInvocation: androidx.test.espresso.core.internal.deps.guava.cache.Cache methodCache>;

        interfaceinvoke $r0.<androidx.test.espresso.core.internal.deps.guava.cache.Cache: void invalidateAll()>();

        return;
    }

androidx.test.espresso.remote.MethodInvocation$MethodKey
<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>
<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>
<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>
    public int hashCode()
    {
        androidx.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.Class $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2;
        java.lang.Class[] $r3;

        r0 := @this: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i0 * 31;

        $r2 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>;

        $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i3 = $i1 + $i2;

        $i4 = $i3 * 31;

        $r3 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>;

        $i5 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r3);

        $i6 = $i4 + $i5;

        return $i6;
    }

    static volatile java.lang.Class '-$$Nest$fgettype'(androidx.test.espresso.remote.MethodInvocation$MethodKey)
    {
        androidx.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.Class $r1;

        r0 := @parameter0: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetmethodName'(androidx.test.espresso.remote.MethodInvocation$MethodKey)
    {
        androidx.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>;

        return $r1;
    }

    public void <init>(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        androidx.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.Class r1;
        java.lang.String r2;
        java.lang.Class[] r3;

        r0 := @this: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type> = r1;

        r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName> = r2;

        r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes> = r3;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.test.espresso.remote.MethodInvocation$MethodKey r0, r10;
        java.lang.Class $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        java.lang.String $r5, $r6;
        java.lang.Class[] $r7, $r8;
        java.lang.Object r9;

        r0 := @this: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        r9 := @parameter0: java.lang.Object;

        if r0 != r9 goto label1;

        return 1;

     label1:
        if r9 == null goto label2;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label3;

     label2:
        return 0;

     label3:
        r10 = (androidx.test.espresso.remote.MethodInvocation$MethodKey) r9;

        $r4 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>;

        $r3 = r10.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r6 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>;

        $r5 = r10.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>;

        $r7 = r10.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, $r7);

        return $z2;
    }

    static volatile java.lang.Class[] '-$$Nest$fgetparameterTypes'(androidx.test.espresso.remote.MethodInvocation$MethodKey)
    {
        androidx.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.Class[] $r1;

        r0 := @parameter0: androidx.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = r0.<androidx.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>;

        return $r1;
    }

