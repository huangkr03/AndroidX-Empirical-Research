androidx.media3.test.utils.MediaPeriodAsserts
    private void <init>()
    {
        androidx.media3.test.utils.MediaPeriodAsserts r0;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void assertTrackGroups(androidx.media3.exoplayer.source.MediaPeriod, androidx.media3.exoplayer.source.TrackGroupArray)
    {
        androidx.media3.exoplayer.source.MediaPeriod r0;
        androidx.media3.exoplayer.source.TrackGroupArray r1, r2;
        com.google.common.truth.Subject $r3;

        r0 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        r1 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        r2 = staticinvoke <androidx.media3.test.utils.MediaPeriodAsserts: androidx.media3.exoplayer.source.TrackGroupArray prepareAndGetTrackGroups(androidx.media3.exoplayer.source.MediaPeriod)>(r0);

        $r3 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.Subject assertThat(java.lang.Object)>(r2);

        virtualinvoke $r3.<com.google.common.truth.Subject: void isEqualTo(java.lang.Object)>(r1);

        return;
    }

    public static void assertGetStreamKeysAndManifestFilterIntegration(androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory, androidx.media3.exoplayer.offline.FilterableManifest)
    {
        androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory r0;
        androidx.media3.exoplayer.offline.FilterableManifest r1;

        r0 := @parameter0: androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory;

        r1 := @parameter1: androidx.media3.exoplayer.offline.FilterableManifest;

        staticinvoke <androidx.media3.test.utils.MediaPeriodAsserts: void assertGetStreamKeysAndManifestFilterIntegration(androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory,androidx.media3.exoplayer.offline.FilterableManifest,int,java.lang.String)>(r0, r1, 0, null);

        return;
    }

    public static void assertGetStreamKeysAndManifestFilterIntegration(androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory, androidx.media3.exoplayer.offline.FilterableManifest, int, java.lang.String)
    {
        androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory r0;
        androidx.media3.exoplayer.offline.FilterableManifest r1, r50;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, $i21;
        java.lang.String r2, $r17;
        androidx.media3.exoplayer.source.MediaPeriod r3, r6;
        androidx.media3.exoplayer.source.TrackGroupArray r4, r7;
        java.util.ArrayList r5, $r11, $r18, r46;
        java.util.Iterator r8, r47;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r9;
        androidx.media3.common.Format[] r10;
        java.lang.Object $r12, $r13, $r14;
        boolean $z0, $z1, $z9, $z10;
        androidx.media3.common.Format $r15, $r16;
        androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection $r19, $r23, $r26, $r30, $r32, $r36, $r38, $r41;
        androidx.media3.common.TrackGroup $r20, $r24, $r27, r44;
        int[] $r21, $r25, $r28, $r33, $r37, $r39, $r42, r45;
        java.lang.Object[] $r22, $r35;
        java.util.List $r29, $r31, $r34, $r40, $r43, r48, r49;

        r0 := @parameter0: androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory;

        r1 := @parameter1: androidx.media3.exoplayer.offline.FilterableManifest;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 = interfaceinvoke r0.<androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory: androidx.media3.exoplayer.source.MediaPeriod createMediaPeriod(androidx.media3.exoplayer.offline.FilterableManifest,int)>(r1, i0);

        r4 = staticinvoke <androidx.media3.test.utils.MediaPeriodAsserts: androidx.media3.exoplayer.source.TrackGroupArray prepareAndGetTrackGroups(androidx.media3.exoplayer.source.MediaPeriod)>(r3);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r5 = $r11;

        i14 = 0;

     label01:
        $i1 = r4.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if i14 >= $i1 goto label08;

        r44 = virtualinvoke r4.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i14);

        i15 = 0;

     label02:
        $i9 = r44.<androidx.media3.common.TrackGroup: int length>;

        if i15 >= $i9 goto label03;

        $r41 = new androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        $r42 = newarray (int)[1];

        $r42[0] = i15;

        specialinvoke $r41.<androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>(r44, $r42);

        $r43 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r41);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r43);

        i15 = i15 + 1;

        goto label02;

     label03:
        $i10 = r44.<androidx.media3.common.TrackGroup: int length>;

        if $i10 <= 1 goto label04;

        $r32 = new androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        $r33 = newarray (int)[2];

        $r33[0] = 0;

        $r33[1] = 1;

        specialinvoke $r32.<androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>(r44, $r33);

        $r34 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r32);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = newarray (androidx.media3.exoplayer.trackselection.ExoTrackSelection)[2];

        $r36 = new androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        $r37 = newarray (int)[1];

        $r37[0] = 0;

        specialinvoke $r36.<androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>(r44, $r37);

        $r35[0] = $r36;

        $r38 = new androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        $r39 = newarray (int)[1];

        $r39[0] = 1;

        specialinvoke $r38.<androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>(r44, $r39);

        $r35[1] = $r38;

        $r40 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r35);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r40);

     label04:
        $i11 = r44.<androidx.media3.common.TrackGroup: int length>;

        if $i11 <= 2 goto label07;

        $i12 = r44.<androidx.media3.common.TrackGroup: int length>;

        r45 = newarray (int)[$i12];

        i16 = 0;

     label05:
        $i13 = r44.<androidx.media3.common.TrackGroup: int length>;

        if i16 >= $i13 goto label06;

        r45[i16] = i16;

        i16 = i16 + 1;

        goto label05;

     label06:
        $r30 = new androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        specialinvoke $r30.<androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>(r44, r45);

        $r31 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r30);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r31);

     label07:
        i14 = i14 + 1;

        goto label01;

     label08:
        $i2 = r4.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if $i2 <= 1 goto label12;

        i17 = 0;

     label09:
        $i6 = r4.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        $i7 = $i6 - 1;

        if i17 >= $i7 goto label12;

        i18 = i17 + 1;

     label10:
        $i8 = r4.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if i18 >= $i8 goto label11;

        $r22 = newarray (androidx.media3.exoplayer.trackselection.ExoTrackSelection)[2];

        $r23 = new androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        $r24 = virtualinvoke r4.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i17);

        $r25 = newarray (int)[1];

        $r25[0] = 0;

        specialinvoke $r23.<androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>($r24, $r25);

        $r22[0] = $r23;

        $r26 = new androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        $r27 = virtualinvoke r4.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i18);

        $r28 = newarray (int)[1];

        $r28[0] = 0;

        specialinvoke $r26.<androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>($r27, $r28);

        $r22[1] = $r26;

        $r29 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r22);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r29);

        i18 = i18 + 1;

        goto label10;

     label11:
        i17 = i17 + 1;

        goto label09;

     label12:
        $i3 = r4.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if $i3 <= 2 goto label15;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r46 = $r18;

        i19 = 0;

     label13:
        $i5 = r4.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if i19 >= $i5 goto label14;

        $r19 = new androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        $r20 = virtualinvoke r4.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i19);

        $r21 = newarray (int)[1];

        $r21[0] = 0;

        specialinvoke $r19.<androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>($r20, $r21);

        interfaceinvoke r46.<java.util.List: boolean add(java.lang.Object)>($r19);

        i19 = i19 + 1;

        goto label13;

     label14:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r46);

     label15:
        r47 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z9 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label23;

        $r12 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (java.util.List) $r12;

        r49 = interfaceinvoke r3.<androidx.media3.exoplayer.source.MediaPeriod: java.util.List getStreamKeys(java.util.List)>(r48);

        $z0 = interfaceinvoke r49.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label17;

        goto label16;

     label17:
        $r13 = interfaceinvoke r1.<androidx.media3.exoplayer.offline.FilterableManifest: java.lang.Object copy(java.util.List)>(r49);

        r50 = (androidx.media3.exoplayer.offline.FilterableManifest) $r13;

        r6 = interfaceinvoke r0.<androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory: androidx.media3.exoplayer.source.MediaPeriod createMediaPeriod(androidx.media3.exoplayer.offline.FilterableManifest,int)>(r50, 0);

        r7 = staticinvoke <androidx.media3.test.utils.MediaPeriodAsserts: androidx.media3.exoplayer.source.TrackGroupArray prepareAndGetTrackGroups(androidx.media3.exoplayer.source.MediaPeriod)>(r6);

        r8 = interfaceinvoke r48.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z10 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label22;

        $r14 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection) $r14;

        if r2 == null goto label19;

        $r16 = interfaceinvoke r9.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.Format getFormat(int)>(0);

        $r17 = $r16.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label19;

        goto label18;

     label19:
        $i4 = interfaceinvoke r9.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        r10 = newarray (androidx.media3.common.Format)[$i4];

        i20 = 0;

     label20:
        $i21 = interfaceinvoke r9.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        if i20 >= $i21 goto label21;

        $r15 = interfaceinvoke r9.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.Format getFormat(int)>(i20);

        r10[i20] = $r15;

        i20 = i20 + 1;

        goto label20;

     label21:
        staticinvoke <androidx.media3.test.utils.MediaPeriodAsserts: void assertOneTrackGroupContainsFormats(androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.common.Format[])>(r7, r10);

        goto label18;

     label22:
        goto label16;

     label23:
        return;
    }

    private static void assertOneTrackGroupContainsFormats(androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.common.Format[])
    {
        androidx.media3.exoplayer.source.TrackGroupArray r0;
        androidx.media3.common.Format[] r1;
        int $i0, i1;
        java.lang.Boolean $r2;
        com.google.common.truth.BooleanSubject $r3;
        androidx.media3.common.TrackGroup $r4;
        boolean $z0, z1;

        r0 := @parameter0: androidx.media3.exoplayer.source.TrackGroupArray;

        r1 := @parameter1: androidx.media3.common.Format[];

        z1 = 0;

        i1 = 0;

     label1:
        $i0 = r0.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if i1 >= $i0 goto label3;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i1);

        $z0 = staticinvoke <androidx.media3.test.utils.MediaPeriodAsserts: boolean containsFormats(androidx.media3.common.TrackGroup,androidx.media3.common.Format[])>($r4, r1);

        if $z0 == 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r3 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r2);

        virtualinvoke $r3.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    private static boolean containsFormats(androidx.media3.common.TrackGroup, androidx.media3.common.Format[])
    {
        androidx.media3.common.TrackGroup r0;
        androidx.media3.common.Format[] r1, r6;
        java.util.HashSet r2, $r4;
        int i0, $i1, i2, i3;
        androidx.media3.common.Format r3, $r5;
        boolean $z0;

        r0 := @parameter0: androidx.media3.common.TrackGroup;

        r1 := @parameter1: androidx.media3.common.Format[];

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = $r4;

        i2 = 0;

     label1:
        $i1 = r0.<androidx.media3.common.TrackGroup: int length>;

        if i2 >= $i1 goto label2;

        $r5 = virtualinvoke r0.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i2);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        r6 = r1;

        i0 = lengthof r6;

        i3 = 0;

     label3:
        if i3 >= i0 goto label5;

        r3 = r6[i3];

        $z0 = virtualinvoke r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r3);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return 1;
    }

    private static androidx.media3.exoplayer.source.TrackGroupArray prepareAndGetTrackGroups(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.MediaPeriod r0;
        java.util.concurrent.atomic.AtomicReference r1, $r5;
        androidx.media3.test.utils.DummyMainThread r2, $r6;
        androidx.media3.common.util.ConditionVariable r3, $r7;
        java.lang.Throwable r4, $r11;
        java.lang.Runnable $r8;
        java.lang.Object $r9;
        androidx.media3.exoplayer.source.TrackGroupArray $r10;

        r0 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r5 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r1 = $r5;

        $r6 = new androidx.media3.test.utils.DummyMainThread;

        specialinvoke $r6.<androidx.media3.test.utils.DummyMainThread: void <init>()>();

        r2 = $r6;

        $r7 = new androidx.media3.common.util.ConditionVariable;

        specialinvoke $r7.<androidx.media3.common.util.ConditionVariable: void <init>()>();

        r3 = $r7;

        $r8 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.source.MediaPeriod,java.util.concurrent.atomic.AtomicReference,androidx.media3.common.util.ConditionVariable)>(r0, r1, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.test.utils.MediaPeriodAsserts: void lambda$prepareAndGetTrackGroups$0(androidx.media3.exoplayer.source.MediaPeriod,java.util.concurrent.atomic.AtomicReference,androidx.media3.common.util.ConditionVariable)>, methodtype: void __METHODTYPE__());

        virtualinvoke r2.<androidx.media3.test.utils.DummyMainThread: void runOnMainThread(java.lang.Runnable)>($r8);

     label1:
        virtualinvoke r3.<androidx.media3.common.util.ConditionVariable: void block()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

     label4:
        virtualinvoke r2.<androidx.media3.test.utils.DummyMainThread: void release()>();

        $r9 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r10 = (androidx.media3.exoplayer.source.TrackGroupArray) $r9;

        return $r10;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private static void lambda$prepareAndGetTrackGroups$0(androidx.media3.exoplayer.source.MediaPeriod, java.util.concurrent.atomic.AtomicReference, androidx.media3.common.util.ConditionVariable)
    {
        androidx.media3.exoplayer.source.MediaPeriod r0;
        java.util.concurrent.atomic.AtomicReference r1;
        androidx.media3.common.util.ConditionVariable r2;
        androidx.media3.test.utils.MediaPeriodAsserts$1 $r3;

        r0 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        r1 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        r2 := @parameter2: androidx.media3.common.util.ConditionVariable;

        $r3 = new androidx.media3.test.utils.MediaPeriodAsserts$1;

        specialinvoke $r3.<androidx.media3.test.utils.MediaPeriodAsserts$1: void <init>(java.util.concurrent.atomic.AtomicReference,androidx.media3.common.util.ConditionVariable)>(r1, r2);

        interfaceinvoke r0.<androidx.media3.exoplayer.source.MediaPeriod: void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long)>($r3, 0L);

        return;
    }

androidx.media3.test.utils.MediaPeriodAsserts$1
<androidx.media3.test.utils.MediaPeriodAsserts$1: java.util.concurrent.atomic.AtomicReference val$trackGroupArray>
<androidx.media3.test.utils.MediaPeriodAsserts$1: androidx.media3.common.util.ConditionVariable val$preparedCondition>
    void <init>(java.util.concurrent.atomic.AtomicReference, androidx.media3.common.util.ConditionVariable)
    {
        androidx.media3.test.utils.MediaPeriodAsserts$1 r0;
        java.util.concurrent.atomic.AtomicReference r1;
        androidx.media3.common.util.ConditionVariable r2;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$1;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        r2 := @parameter1: androidx.media3.common.util.ConditionVariable;

        r0.<androidx.media3.test.utils.MediaPeriodAsserts$1: java.util.concurrent.atomic.AtomicReference val$trackGroupArray> = r1;

        r0.<androidx.media3.test.utils.MediaPeriodAsserts$1: androidx.media3.common.util.ConditionVariable val$preparedCondition> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPrepared(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.test.utils.MediaPeriodAsserts$1 r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        androidx.media3.exoplayer.source.TrackGroupArray $r3;
        androidx.media3.common.util.ConditionVariable $r4;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$1;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = r0.<androidx.media3.test.utils.MediaPeriodAsserts$1: java.util.concurrent.atomic.AtomicReference val$trackGroupArray>;

        $r3 = interfaceinvoke r1.<androidx.media3.exoplayer.source.MediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()>();

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r3);

        $r4 = r0.<androidx.media3.test.utils.MediaPeriodAsserts$1: androidx.media3.common.util.ConditionVariable val$preparedCondition>;

        virtualinvoke $r4.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

    public void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.test.utils.MediaPeriodAsserts$1 r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$1;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        return;
    }

    public volatile void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader)
    {
        androidx.media3.test.utils.MediaPeriodAsserts$1 r0;
        androidx.media3.exoplayer.source.SequenceableLoader r1;
        androidx.media3.exoplayer.source.MediaPeriod $r2;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$1;

        r1 := @parameter0: androidx.media3.exoplayer.source.SequenceableLoader;

        $r2 = (androidx.media3.exoplayer.source.MediaPeriod) r1;

        virtualinvoke r0.<androidx.media3.test.utils.MediaPeriodAsserts$1: void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod)>($r2);

        return;
    }

androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory
<androidx.media3.test.utils.MediaPeriodAsserts$FilterableManifestMediaPeriodFactory: androidx.media3.exoplayer.source.MediaPeriod createMediaPeriod(androidx.media3.exoplayer.offline.FilterableManifest,int)>
androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection
    public transient void <init>(androidx.media3.common.TrackGroup, int[])
    {
        androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection r0;
        androidx.media3.common.TrackGroup r1;
        int[] r2;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        r1 := @parameter0: androidx.media3.common.TrackGroup;

        r2 := @parameter1: int[];

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.BaseTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>(r1, r2);

        return;
    }

    public int getSelectedIndex()
    {
        androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection r0;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        return 0;
    }

    public int getSelectionReason()
    {
        androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection r0;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        return 0;
    }

    public java.lang.Object getSelectionData()
    {
        androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection r0;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        return null;
    }

    public void updateSelectedTrack(long, long, long, java.util.List, androidx.media3.exoplayer.source.chunk.MediaChunkIterator[])
    {
        androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection r0;
        long l0, l1, l2;
        java.util.List r1;
        androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] r2;

        r0 := @this: androidx.media3.test.utils.MediaPeriodAsserts$TestTrackSelection;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 := @parameter3: java.util.List;

        r2 := @parameter4: androidx.media3.exoplayer.source.chunk.MediaChunkIterator[];

        return;
    }

