androidx.media3.exoplayer.source.SilenceMediaSource
<androidx.media3.exoplayer.source.SilenceMediaSource: java.lang.String MEDIA_ID>
<androidx.media3.exoplayer.source.SilenceMediaSource: int SAMPLE_RATE_HZ>
<androidx.media3.exoplayer.source.SilenceMediaSource: int PCM_ENCODING>
<androidx.media3.exoplayer.source.SilenceMediaSource: int CHANNEL_COUNT>
<androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.Format FORMAT>
<androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem MEDIA_ITEM>
<androidx.media3.exoplayer.source.SilenceMediaSource: byte[] SILENCE_SAMPLE>
<androidx.media3.exoplayer.source.SilenceMediaSource: long durationUs>
<androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem mediaItem>
    public void <init>(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;
        long l0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        l0 := @parameter0: long;

        $r1 = <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem MEDIA_ITEM>;

        specialinvoke r0.<androidx.media3.exoplayer.source.SilenceMediaSource: void <init>(long,androidx.media3.common.MediaItem)>(l0, $r1);

        return;
    }

    private void <init>(long, androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;
        long l0;
        androidx.media3.common.MediaItem r1;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        specialinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void <init>()>();

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource: long durationUs> = l0;

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem mediaItem> = r1;

        return;
    }

    protected void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.exoplayer.source.SinglePeriodTimeline $r2;
        androidx.media3.common.MediaItem $r3;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        $r2 = new androidx.media3.exoplayer.source.SinglePeriodTimeline;

        $l0 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource: long durationUs>;

        $r3 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem mediaItem>;

        specialinvoke $r2.<androidx.media3.exoplayer.source.SinglePeriodTimeline: void <init>(long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem)>($l0, 1, 0, 0, null, $r3);

        virtualinvoke r0.<androidx.media3.exoplayer.source.SilenceMediaSource: void refreshSourceInfo(androidx.media3.common.Timeline)>($r2);

        return;
    }

    public void maybeThrowSourceInfoRefreshError()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0, $l1;
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod $r3;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        $r3 = new androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        $l1 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource: long durationUs>;

        specialinvoke $r3.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: void <init>(long)>($l1);

        return $r3;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        return;
    }

    public androidx.media3.common.MediaItem getMediaItem()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem mediaItem>;

        return $r1;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        return;
    }

    private static long getAudioByteCount(long)
    {
        long l0, l1, $l2, $l4, $l5;
        int $i3;

        l0 := @parameter0: long;

        $l2 = l0 * 44100L;

        l1 = $l2 / 1000000L;

        $i3 = staticinvoke <androidx.media3.common.util.Util: int getPcmFrameSize(int,int)>(2, 2);

        $l4 = (long) $i3;

        $l5 = $l4 * l1;

        return $l5;
    }

    private static long getAudioPositionUs(long)
    {
        long l0, l1, $l3, $l4, $l5;
        int $i2;

        l0 := @parameter0: long;

        $i2 = staticinvoke <androidx.media3.common.util.Util: int getPcmFrameSize(int,int)>(2, 2);

        $l3 = (long) $i2;

        l1 = l0 / $l3;

        $l4 = l1 * 1000000L;

        $l5 = $l4 / 44100L;

        return $l5;
    }

    static androidx.media3.common.MediaItem access$000()
    {
        androidx.media3.common.MediaItem $r0;

        $r0 = <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem MEDIA_ITEM>;

        return $r0;
    }

    void <init>(long, androidx.media3.common.MediaItem, androidx.media3.exoplayer.source.SilenceMediaSource$1)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource r0;
        long l0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.source.SilenceMediaSource$1 r2;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        r2 := @parameter2: androidx.media3.exoplayer.source.SilenceMediaSource$1;

        specialinvoke r0.<androidx.media3.exoplayer.source.SilenceMediaSource: void <init>(long,androidx.media3.common.MediaItem)>(l0, r1);

        return;
    }

    static androidx.media3.common.Format access$200()
    {
        androidx.media3.common.Format $r0;

        $r0 = <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.Format FORMAT>;

        return $r0;
    }

    static long access$300(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: long getAudioByteCount(long)>(l0);

        return $l1;
    }

    static long access$400(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: long getAudioPositionUs(long)>(l0);

        return $l1;
    }

    static byte[] access$500()
    {
        byte[] $r0;

        $r0 = <androidx.media3.exoplayer.source.SilenceMediaSource: byte[] SILENCE_SAMPLE>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.media3.common.Format$Builder $r0, $r1, $r2, $r3, $r4;
        androidx.media3.common.Format $r5, $r10;
        androidx.media3.common.MediaItem$Builder $r6, $r7, $r9, $r12;
        android.net.Uri $r8;
        java.lang.String $r11;
        androidx.media3.common.MediaItem $r13;
        int $i0, $i1;
        byte[] $r14;

        $r0 = new androidx.media3.common.Format$Builder;

        specialinvoke $r0.<androidx.media3.common.Format$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("audio/raw");

        $r2 = virtualinvoke $r1.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>(2);

        $r3 = virtualinvoke $r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleRate(int)>(44100);

        $r4 = virtualinvoke $r3.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPcmEncoding(int)>(2);

        $r5 = virtualinvoke $r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.Format FORMAT> = $r5;

        $r6 = new androidx.media3.common.MediaItem$Builder;

        specialinvoke $r6.<androidx.media3.common.MediaItem$Builder: void <init>()>();

        $r7 = virtualinvoke $r6.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setMediaId(java.lang.String)>("SilenceMediaSource");

        $r8 = <android.net.Uri: android.net.Uri EMPTY>;

        $r9 = virtualinvoke $r7.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setUri(android.net.Uri)>($r8);

        $r10 = <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.Format FORMAT>;

        $r11 = $r10.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r12 = virtualinvoke $r9.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setMimeType(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem MEDIA_ITEM> = $r13;

        $i0 = staticinvoke <androidx.media3.common.util.Util: int getPcmFrameSize(int,int)>(2, 2);

        $i1 = $i0 * 1024;

        $r14 = newarray (byte)[$i1];

        <androidx.media3.exoplayer.source.SilenceMediaSource: byte[] SILENCE_SAMPLE> = $r14;

        return;
    }

androidx.media3.exoplayer.source.SilenceMediaSource$1
androidx.media3.exoplayer.source.SilenceMediaSource$Factory
<androidx.media3.exoplayer.source.SilenceMediaSource$Factory: long durationUs>
<androidx.media3.exoplayer.source.SilenceMediaSource$Factory: java.lang.Object tag>
    public void <init>()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$Factory r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.media3.exoplayer.source.SilenceMediaSource$Factory setDurationUs(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$Factory r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$Factory;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource$Factory: long durationUs> = l0;

        return r0;
    }

    public androidx.media3.exoplayer.source.SilenceMediaSource$Factory setTag(java.lang.Object)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$Factory r0;
        java.lang.Object r1;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$Factory;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource$Factory: java.lang.Object tag> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.source.SilenceMediaSource createMediaSource()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$Factory r0;
        long $l0, $l2;
        byte $b1;
        androidx.media3.exoplayer.source.SilenceMediaSource $r1;
        androidx.media3.common.MediaItem $r2, $r6;
        androidx.media3.common.MediaItem$Builder $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$Factory;

        $l0 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$Factory: long durationUs>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r1 = new androidx.media3.exoplayer.source.SilenceMediaSource;

        $l2 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$Factory: long durationUs>;

        $r2 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.MediaItem access$000()>();

        $r3 = virtualinvoke $r2.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$Builder buildUpon()>();

        $r4 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$Factory: java.lang.Object tag>;

        $r5 = virtualinvoke $r3.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setTag(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        specialinvoke $r1.<androidx.media3.exoplayer.source.SilenceMediaSource: void <init>(long,androidx.media3.common.MediaItem,androidx.media3.exoplayer.source.SilenceMediaSource$1)>($l2, $r6, null);

        return $r1;
    }

androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod
<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray TRACKS>
<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: long durationUs>
<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: java.util.ArrayList sampleStreams>
    public void <init>(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        long l0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: long durationUs> = l0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: java.util.ArrayList sampleStreams> = $r1;

        return;
    }

    public void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback, long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod$Callback r1;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod$Callback;

        l0 := @parameter1: long;

        interfaceinvoke r1.<androidx.media3.exoplayer.source.MediaPeriod$Callback: void onPrepared(androidx.media3.exoplayer.source.MediaPeriod)>(r0);

        return;
    }

    public void maybeThrowPrepareError()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        return;
    }

    public androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        androidx.media3.exoplayer.source.TrackGroupArray $r1;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        $r1 = <androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray TRACKS>;

        return $r1;
    }

    public long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[], boolean[], androidx.media3.exoplayer.source.SampleStream[], boolean[], long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r1;
        boolean[] r2, r4;
        androidx.media3.exoplayer.source.SampleStream[] r3;
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream r5, $r8;
        int $i0, i4;
        androidx.media3.exoplayer.source.SampleStream $r6, $r11, $r13;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r7, $r10;
        long $l1, l2, l3;
        java.util.ArrayList $r9, $r12;
        boolean $z2;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection[];

        r2 := @parameter1: boolean[];

        r3 := @parameter2: androidx.media3.exoplayer.source.SampleStream[];

        r4 := @parameter3: boolean[];

        l2 := @parameter4: long;

        l3 = specialinvoke r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: long constrainSeekPosition(long)>(l2);

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label5;

        $r6 = r3[i4];

        if $r6 == null goto label3;

        $r10 = r1[i4];

        if $r10 == null goto label2;

        $z2 = r2[i4];

        if $z2 != 0 goto label3;

     label2:
        $r12 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: java.util.ArrayList sampleStreams>;

        $r11 = r3[i4];

        virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>($r11);

        r3[i4] = null;

     label3:
        $r13 = r3[i4];

        if $r13 != null goto label4;

        $r7 = r1[i4];

        if $r7 == null goto label4;

        $r8 = new androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream;

        $l1 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: long durationUs>;

        specialinvoke $r8.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: void <init>(long)>($l1);

        r5 = $r8;

        virtualinvoke r5.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: void seekTo(long)>(l3);

        $r9 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: java.util.ArrayList sampleStreams>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        r3[i4] = r5;

        r4[i4] = 1;

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        return l3;
    }

    public void discardBuffer(long, boolean)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        long l0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        return;
    }

    public long readDiscontinuity()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        return -9223372036854775807L;
    }

    public long seekToUs(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i3;
        java.lang.Object $r3;
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream $r4;
        long l1, l2;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        l1 := @parameter0: long;

        l2 = specialinvoke r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: long constrainSeekPosition(long)>(l1);

        i3 = 0;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: java.util.ArrayList sampleStreams>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label2;

        $r2 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: java.util.ArrayList sampleStreams>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream) $r3;

        virtualinvoke $r4.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: void seekTo(long)>(l2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return l2;
    }

    public long getAdjustedSeekPositionUs(long, androidx.media3.exoplayer.SeekParameters)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        long l0, $l1;
        androidx.media3.exoplayer.SeekParameters r1;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.SeekParameters;

        $l1 = specialinvoke r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: long constrainSeekPosition(long)>(l0);

        return $l1;
    }

    public long getBufferedPositionUs()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        return -9223372036854775808L;
    }

    public long getNextLoadPositionUs()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        return -9223372036854775808L;
    }

    public boolean continueLoading(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        l0 := @parameter0: long;

        return 0;
    }

    public boolean isLoading()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        return 0;
    }

    public void reevaluateBuffer(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        l0 := @parameter0: long;

        return;
    }

    private long constrainSeekPosition(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod r0;
        long l0, $l1, $l2;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod;

        l0 := @parameter0: long;

        $l1 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: long durationUs>;

        $l2 = staticinvoke <androidx.media3.common.util.Util: long constrainValue(long,long,long)>(l0, 0L, $l1);

        return $l2;
    }

    static void <clinit>()
    {
        androidx.media3.exoplayer.source.TrackGroupArray $r0;
        androidx.media3.common.TrackGroup[] $r1;
        androidx.media3.common.TrackGroup $r2;
        androidx.media3.common.Format[] $r3;
        androidx.media3.common.Format $r4;

        $r0 = new androidx.media3.exoplayer.source.TrackGroupArray;

        $r1 = newarray (androidx.media3.common.TrackGroup)[1];

        $r2 = new androidx.media3.common.TrackGroup;

        $r3 = newarray (androidx.media3.common.Format)[1];

        $r4 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.Format access$200()>();

        $r3[0] = $r4;

        specialinvoke $r2.<androidx.media3.common.TrackGroup: void <init>(androidx.media3.common.Format[])>($r3);

        $r1[0] = $r2;

        specialinvoke $r0.<androidx.media3.exoplayer.source.TrackGroupArray: void <init>(androidx.media3.common.TrackGroup[])>($r1);

        <androidx.media3.exoplayer.source.SilenceMediaSource$SilenceMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray TRACKS> = $r0;

        return;
    }

androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream
<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long durationBytes>
<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: boolean sentFormat>
<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long positionBytes>
    public void <init>(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream r0;
        long l0, $l1;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l1 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: long access$300(long)>(l0);

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long durationBytes> = $l1;

        virtualinvoke r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: void seekTo(long)>(0L);

        return;
    }

    public void seekTo(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream r0;
        long l0, $l1, $l2, $l3;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream;

        l0 := @parameter0: long;

        $l1 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: long access$300(long)>(l0);

        $l2 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long durationBytes>;

        $l3 = staticinvoke <androidx.media3.common.util.Util: long constrainValue(long,long,long)>($l1, 0L, $l2);

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long positionBytes> = $l3;

        return;
    }

    public boolean isReady()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream;

        return 1;
    }

    public void maybeThrowError()
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream r0;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream;

        return;
    }

    public int readData(androidx.media3.exoplayer.FormatHolder, androidx.media3.decoder.DecoderInputBuffer, int)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream r0;
        androidx.media3.exoplayer.FormatHolder r1;
        androidx.media3.decoder.DecoderInputBuffer r2;
        int i0, i2, $i3, $i9, $i12, $i13;
        long l1, $l4, $l5, $l7, $l8, $l10, $l11, $l14, $l15, $l16;
        boolean $z0;
        androidx.media3.common.Format $r3;
        byte $b6;
        byte[] $r4, $r6;
        java.nio.ByteBuffer $r5;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream;

        r1 := @parameter0: androidx.media3.exoplayer.FormatHolder;

        r2 := @parameter1: androidx.media3.decoder.DecoderInputBuffer;

        i0 := @parameter2: int;

        $z0 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: boolean sentFormat>;

        if $z0 == 0 goto label1;

        $i3 = i0 & 2;

        if $i3 == 0 goto label2;

     label1:
        $r3 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: androidx.media3.common.Format access$200()>();

        r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format> = $r3;

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: boolean sentFormat> = 1;

        return -5;

     label2:
        $l5 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long durationBytes>;

        $l4 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long positionBytes>;

        l1 = $l5 - $l4;

        $b6 = l1 cmp 0L;

        if $b6 != 0 goto label3;

        virtualinvoke r2.<androidx.media3.decoder.DecoderInputBuffer: void addFlag(int)>(4);

        return -4;

     label3:
        $l7 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long positionBytes>;

        $l8 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: long access$400(long)>($l7);

        r2.<androidx.media3.decoder.DecoderInputBuffer: long timeUs> = $l8;

        virtualinvoke r2.<androidx.media3.decoder.DecoderInputBuffer: void addFlag(int)>(1);

        $r4 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: byte[] access$500()>();

        $i9 = lengthof $r4;

        $l10 = (long) $i9;

        $l11 = staticinvoke <java.lang.Math: long min(long,long)>($l10, l1);

        i2 = (int) $l11;

        $i12 = i0 & 4;

        if $i12 != 0 goto label4;

        virtualinvoke r2.<androidx.media3.decoder.DecoderInputBuffer: void ensureSpaceForWrite(int)>(i2);

        $r5 = r2.<androidx.media3.decoder.DecoderInputBuffer: java.nio.ByteBuffer data>;

        $r6 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: byte[] access$500()>();

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r6, 0, i2);

     label4:
        $i13 = i0 & 1;

        if $i13 != 0 goto label5;

        $l15 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long positionBytes>;

        $l14 = (long) i2;

        $l16 = $l15 + $l14;

        r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long positionBytes> = $l16;

     label5:
        return -4;
    }

    public int skipData(long)
    {
        androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream r0;
        long l0, l1, $l2, $l3, $l5, $l6;
        byte[] $r1;
        int $i4, $i7;

        r0 := @this: androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream;

        l0 := @parameter0: long;

        l1 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long positionBytes>;

        virtualinvoke r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: void seekTo(long)>(l0);

        $l2 = r0.<androidx.media3.exoplayer.source.SilenceMediaSource$SilenceSampleStream: long positionBytes>;

        $l3 = $l2 - l1;

        $r1 = staticinvoke <androidx.media3.exoplayer.source.SilenceMediaSource: byte[] access$500()>();

        $i4 = lengthof $r1;

        $l5 = (long) $i4;

        $l6 = $l3 / $l5;

        $i7 = (int) $l6;

        return $i7;
    }

