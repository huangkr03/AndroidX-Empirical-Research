androidx.camera.video.MediaStoreOutputOptions
<androidx.camera.video.MediaStoreOutputOptions: android.content.ContentValues EMPTY_CONTENT_VALUES>
<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal>
    void <init>(androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal)
    {
        androidx.camera.video.MediaStoreOutputOptions r0;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal r1;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions;

        r1 := @parameter0: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal;

        specialinvoke r0.<androidx.camera.video.OutputOptions: void <init>(androidx.camera.video.OutputOptions$OutputOptionsInternal)>(r1);

        r0.<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal> = r1;

        return;
    }

    public android.content.ContentResolver getContentResolver()
    {
        androidx.camera.video.MediaStoreOutputOptions r0;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal $r1;
        android.content.ContentResolver $r2;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions;

        $r1 = r0.<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal>;

        $r2 = virtualinvoke $r1.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal: android.content.ContentResolver getContentResolver()>();

        return $r2;
    }

    public android.net.Uri getCollectionUri()
    {
        androidx.camera.video.MediaStoreOutputOptions r0;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal $r1;
        android.net.Uri $r2;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions;

        $r1 = r0.<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal>;

        $r2 = virtualinvoke $r1.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal: android.net.Uri getCollectionUri()>();

        return $r2;
    }

    public android.content.ContentValues getContentValues()
    {
        androidx.camera.video.MediaStoreOutputOptions r0;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal $r1;
        android.content.ContentValues $r2;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions;

        $r1 = r0.<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal>;

        $r2 = virtualinvoke $r1.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal: android.content.ContentValues getContentValues()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.camera.video.MediaStoreOutputOptions r0;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal $r1;
        java.lang.String $r2, $r3;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions;

        $r1 = r0.<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("MediaStoreOutputOptionsInternal", "MediaStoreOutputOptions");

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.camera.video.MediaStoreOutputOptions r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal $r3, $r4;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.camera.video.MediaStoreOutputOptions;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal>;

        $r2 = (androidx.camera.video.MediaStoreOutputOptions) r1;

        $r3 = $r2.<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        androidx.camera.video.MediaStoreOutputOptions r0;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal $r1;
        int $i0;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions;

        $r1 = r0.<androidx.camera.video.MediaStoreOutputOptions: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal mMediaStoreOutputOptionsInternal>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static void <clinit>()
    {
        android.content.ContentValues $r0;

        $r0 = new android.content.ContentValues;

        specialinvoke $r0.<android.content.ContentValues: void <init>()>();

        <androidx.camera.video.MediaStoreOutputOptions: android.content.ContentValues EMPTY_CONTENT_VALUES> = $r0;

        return;
    }

androidx.camera.video.MediaStoreOutputOptions$Builder
<androidx.camera.video.MediaStoreOutputOptions$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder mInternalBuilder>
    public void <init>(android.content.ContentResolver, android.net.Uri)
    {
        androidx.camera.video.MediaStoreOutputOptions$Builder r0;
        android.content.ContentResolver r1;
        android.net.Uri r2;
        androidx.camera.video.AutoValue_MediaStoreOutputOptions_MediaStoreOutputOptionsInternal$Builder $r3;
        androidx.camera.video.OutputOptions$OutputOptionsInternal$Builder $r6;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder $r7, $r8, $r9, $r10;
        android.content.ContentValues $r11;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$Builder;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.net.Uri;

        $r3 = new androidx.camera.video.AutoValue_MediaStoreOutputOptions_MediaStoreOutputOptionsInternal$Builder;

        specialinvoke $r3.<androidx.camera.video.AutoValue_MediaStoreOutputOptions_MediaStoreOutputOptionsInternal$Builder: void <init>()>();

        specialinvoke r0.<androidx.camera.video.OutputOptions$Builder: void <init>(androidx.camera.video.OutputOptions$OutputOptionsInternal$Builder)>($r3);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Content resolver can\'t be null.");

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Collection Uri can\'t be null.");

        $r6 = r0.<androidx.camera.video.MediaStoreOutputOptions$Builder: androidx.camera.video.OutputOptions$OutputOptionsInternal$Builder mRootInternalBuilder>;

        $r7 = (androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder) $r6;

        r0.<androidx.camera.video.MediaStoreOutputOptions$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder mInternalBuilder> = $r7;

        $r8 = r0.<androidx.camera.video.MediaStoreOutputOptions$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder mInternalBuilder>;

        $r9 = virtualinvoke $r8.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder setContentResolver(android.content.ContentResolver)>(r1);

        $r10 = virtualinvoke $r9.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder setCollectionUri(android.net.Uri)>(r2);

        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r10.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder setContentValues(android.content.ContentValues)>($r11);

        return;
    }

    public androidx.camera.video.MediaStoreOutputOptions$Builder setContentValues(android.content.ContentValues)
    {
        androidx.camera.video.MediaStoreOutputOptions$Builder r0;
        android.content.ContentValues r1;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder $r3;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$Builder;

        r1 := @parameter0: android.content.ContentValues;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Content values can\'t be null.");

        $r3 = r0.<androidx.camera.video.MediaStoreOutputOptions$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder mInternalBuilder>;

        virtualinvoke $r3.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder setContentValues(android.content.ContentValues)>(r1);

        return r0;
    }

    public androidx.camera.video.MediaStoreOutputOptions$Builder setFileSizeLimit(long)
    {
        androidx.camera.video.MediaStoreOutputOptions$Builder r0, $r2;
        long l0;
        java.lang.Object $r1;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$Builder;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<androidx.camera.video.OutputOptions$Builder: java.lang.Object setFileSizeLimit(long)>(l0);

        $r2 = (androidx.camera.video.MediaStoreOutputOptions$Builder) $r1;

        return $r2;
    }

    public androidx.camera.video.MediaStoreOutputOptions build()
    {
        androidx.camera.video.MediaStoreOutputOptions$Builder r0;
        androidx.camera.video.MediaStoreOutputOptions $r1;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder $r2;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal $r3;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$Builder;

        $r1 = new androidx.camera.video.MediaStoreOutputOptions;

        $r2 = r0.<androidx.camera.video.MediaStoreOutputOptions$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder mInternalBuilder>;

        $r3 = virtualinvoke $r2.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal build()>();

        specialinvoke $r1.<androidx.camera.video.MediaStoreOutputOptions: void <init>(androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal)>($r3);

        return $r1;
    }

    public volatile androidx.camera.video.OutputOptions build()
    {
        androidx.camera.video.MediaStoreOutputOptions$Builder r0;
        androidx.camera.video.MediaStoreOutputOptions $r1;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$Builder;

        $r1 = virtualinvoke r0.<androidx.camera.video.MediaStoreOutputOptions$Builder: androidx.camera.video.MediaStoreOutputOptions build()>();

        return $r1;
    }

    public volatile java.lang.Object setLocation(android.location.Location)
    {
        androidx.camera.video.MediaStoreOutputOptions$Builder r0;
        android.location.Location r1;
        java.lang.Object $r2;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$Builder;

        r1 := @parameter0: android.location.Location;

        $r2 = specialinvoke r0.<androidx.camera.video.OutputOptions$Builder: java.lang.Object setLocation(android.location.Location)>(r1);

        return $r2;
    }

    public volatile java.lang.Object setFileSizeLimit(long)
    {
        androidx.camera.video.MediaStoreOutputOptions$Builder r0, $r1;
        long l0;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$Builder;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<androidx.camera.video.MediaStoreOutputOptions$Builder: androidx.camera.video.MediaStoreOutputOptions$Builder setFileSizeLimit(long)>(l0);

        return $r1;
    }

androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder
    void <init>()
    {
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder r0;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder;

        specialinvoke r0.<androidx.camera.video.OutputOptions$OutputOptionsInternal$Builder: void <init>()>();

        return;
    }

<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder setContentResolver(android.content.ContentResolver)>
<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder setCollectionUri(android.net.Uri)>
<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder setContentValues(android.content.ContentValues)>
<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal build()>
    volatile androidx.camera.video.OutputOptions$OutputOptionsInternal build()
    {
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder r0;
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal $r1;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder;

        $r1 = virtualinvoke r0.<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal$Builder: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal build()>();

        return $r1;
    }

androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal
    void <init>()
    {
        androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal r0;

        r0 := @this: androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal;

        specialinvoke r0.<androidx.camera.video.OutputOptions$OutputOptionsInternal: void <init>()>();

        return;
    }

<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal: android.content.ContentResolver getContentResolver()>
<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal: android.net.Uri getCollectionUri()>
<androidx.camera.video.MediaStoreOutputOptions$MediaStoreOutputOptionsInternal: android.content.ContentValues getContentValues()>
