androidx.appsearch.localstorage.GlobalSearchSessionImpl
<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>
<androidx.appsearch.localstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>
<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.app.Features mFeatures>
<androidx.appsearch.localstorage.GlobalSearchSessionImpl: android.content.Context mContext>
<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>
<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.visibilitystore.CallerAccess mSelfCallerAccess>
<androidx.appsearch.localstorage.GlobalSearchSessionImpl: boolean mIsClosed>
    void <init>(androidx.appsearch.localstorage.AppSearchImpl, java.util.concurrent.Executor, androidx.appsearch.app.Features, android.content.Context, androidx.appsearch.localstorage.AppSearchLogger)
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        androidx.appsearch.localstorage.AppSearchImpl r1, $r7;
        java.util.concurrent.Executor r2, $r9;
        androidx.appsearch.app.Features r3, $r11;
        android.content.Context r4, $r13, $r15;
        androidx.appsearch.localstorage.AppSearchLogger r5;
        java.lang.Object $r6, $r8, $r10, $r12;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess $r14;
        java.lang.String $r16;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.localstorage.AppSearchImpl;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.appsearch.app.Features;

        r4 := @parameter3: android.content.Context;

        r5 := @parameter4: androidx.appsearch.localstorage.AppSearchLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: boolean mIsClosed> = 0;

        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (androidx.appsearch.localstorage.AppSearchImpl) $r6;

        r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl> = $r7;

        $r8 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.util.concurrent.Executor) $r8;

        r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor> = $r9;

        $r10 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r11 = (androidx.appsearch.app.Features) $r10;

        r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.app.Features mFeatures> = $r11;

        $r12 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r13 = (android.content.Context) $r12;

        r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: android.content.Context mContext> = $r13;

        r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger> = r5;

        $r14 = new androidx.appsearch.localstorage.visibilitystore.CallerAccess;

        $r15 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.String getPackageName()>();

        specialinvoke $r14.<androidx.appsearch.localstorage.visibilitystore.CallerAccess: void <init>(java.lang.String)>($r16);

        r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.visibilitystore.CallerAccess mSelfCallerAccess> = $r14;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture getByDocumentIdAsync(java.lang.String, java.lang.String, androidx.appsearch.app.GetByDocumentIdRequest)
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, r2;
        androidx.appsearch.app.GetByDocumentIdRequest r3;
        boolean $z0, $z1;
        java.util.concurrent.Executor $r7;
        java.util.concurrent.Callable $r8;
        com.google.common.util.concurrent.ListenableFuture $r9;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.appsearch.app.GetByDocumentIdRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $z0 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r7 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r8 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.GlobalSearchSessionImpl,androidx.appsearch.app.GetByDocumentIdRequest,java.lang.String,java.lang.String)>(r0, r3, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.app.AppSearchBatchResult lambda$getByDocumentIdAsync$0(androidx.appsearch.app.GetByDocumentIdRequest,java.lang.String,java.lang.String)>, methodtype: androidx.appsearch.app.AppSearchBatchResult __METHODTYPE__());

        $r9 = staticinvoke <androidx.appsearch.localstorage.util.FutureUtil: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r7, $r8);

        return $r9;
    }

    public androidx.appsearch.app.SearchResults search(java.lang.String, androidx.appsearch.app.SearchSpec)
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, $r9;
        androidx.appsearch.app.SearchSpec r2;
        boolean $z0, $z1;
        androidx.appsearch.localstorage.SearchResultsImpl $r5;
        android.content.Context $r6;
        androidx.appsearch.localstorage.AppSearchImpl $r7;
        java.util.concurrent.Executor $r8;
        androidx.appsearch.localstorage.AppSearchLogger $r10;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "GlobalSearchSession has already been closed");

        $r5 = new androidx.appsearch.localstorage.SearchResultsImpl;

        $r7 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r8 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r6 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: android.content.Context mContext>;

        $r9 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        $r10 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        specialinvoke $r5.<androidx.appsearch.localstorage.SearchResultsImpl: void <init>(androidx.appsearch.localstorage.AppSearchImpl,java.util.concurrent.Executor,java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.app.SearchSpec,androidx.appsearch.localstorage.AppSearchLogger)>($r7, $r8, $r9, null, r1, r2, $r10);

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture reportSystemUsageAsync(androidx.appsearch.app.ReportSystemUsageRequest)
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        androidx.appsearch.app.ReportSystemUsageRequest r1;
        boolean $z0, $z1;
        java.util.concurrent.Executor $r3;
        java.util.concurrent.Callable $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.ReportSystemUsageRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "GlobalSearchSession has already been closed");

        $r3 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r4 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.GlobalSearchSessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.GlobalSearchSessionImpl: java.lang.Void lambda$reportSystemUsageAsync$1()>, methodtype: java.lang.Void __METHODTYPE__());

        $r5 = staticinvoke <androidx.appsearch.localstorage.util.FutureUtil: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r3, $r4);

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture getSchemaAsync(java.lang.String, java.lang.String)
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;
        java.util.concurrent.Executor $r5;
        java.util.concurrent.Callable $r6;
        com.google.common.util.concurrent.ListenableFuture $r7;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "GlobalSearchSession has already been closed");

        $r5 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r6 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.GlobalSearchSessionImpl,java.lang.String,java.lang.String)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.app.GetSchemaResponse lambda$getSchemaAsync$2(java.lang.String,java.lang.String)>, methodtype: androidx.appsearch.app.GetSchemaResponse __METHODTYPE__());

        $r7 = staticinvoke <androidx.appsearch.localstorage.util.FutureUtil: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r5, $r6);

        return $r7;
    }

    public androidx.appsearch.app.Features getFeatures()
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        androidx.appsearch.app.Features $r1;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        $r1 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.app.Features mFeatures>;

        return $r1;
    }

    public void registerObserverCallback(java.lang.String, androidx.appsearch.observer.ObserverSpec, java.util.concurrent.Executor, androidx.appsearch.observer.ObserverCallback)
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, $r10;
        androidx.appsearch.observer.ObserverSpec r2;
        java.util.concurrent.Executor r3;
        androidx.appsearch.observer.ObserverCallback r4;
        android.content.Context $r9;
        boolean $z0;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess $r11;
        androidx.appsearch.localstorage.AppSearchImpl $r12;
        java.lang.UnsupportedOperationException $r13;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.observer.ObserverSpec;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.appsearch.observer.ObserverCallback;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r9 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label1;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Local storage implementation does not support receiving change notifications from other packages.");

        throw $r13;

     label1:
        $r12 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r11 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.visibilitystore.CallerAccess mSelfCallerAccess>;

        virtualinvoke $r12.<androidx.appsearch.localstorage.AppSearchImpl: void registerObserverCallback(androidx.appsearch.localstorage.visibilitystore.CallerAccess,java.lang.String,androidx.appsearch.observer.ObserverSpec,java.util.concurrent.Executor,androidx.appsearch.observer.ObserverCallback)>($r11, r1, r2, r3, r4);

        return;
    }

    public void unregisterObserverCallback(java.lang.String, androidx.appsearch.observer.ObserverCallback)
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, $r6;
        androidx.appsearch.observer.ObserverCallback r2;
        android.content.Context $r5;
        boolean $z0;
        androidx.appsearch.localstorage.AppSearchImpl $r7;
        java.lang.UnsupportedOperationException $r8;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.observer.ObserverCallback;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Local storage implementation does not support receiving change notifications from other packages.");

        throw $r8;

     label1:
        $r7 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        virtualinvoke $r7.<androidx.appsearch.localstorage.AppSearchImpl: void unregisterObserverCallback(java.lang.String,androidx.appsearch.observer.ObserverCallback)>(r1, r2);

        return;
    }

    public void close()
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: boolean mIsClosed> = 1;

        return;
    }

    private androidx.appsearch.app.GetSchemaResponse lambda$getSchemaAsync$2(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, r2;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess $r3;
        androidx.appsearch.localstorage.AppSearchImpl $r4;
        androidx.appsearch.app.GetSchemaResponse $r5;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r3 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.visibilitystore.CallerAccess mSelfCallerAccess>;

        $r5 = virtualinvoke $r4.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.GetSchemaResponse getSchema(java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.CallerAccess)>(r1, r2, $r3);

        return $r5;
    }

    private java.lang.Void lambda$reportSystemUsageAsync$1() throws java.lang.Exception
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        androidx.appsearch.exceptions.AppSearchException $r1;
        java.lang.StringBuilder $r2, $r5, $r6;
        android.content.Context $r3;
        java.lang.String $r4, $r7;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        $r1 = new androidx.appsearch.exceptions.AppSearchException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have access to report system usage");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(8, $r7);

        throw $r1;
    }

    private androidx.appsearch.app.AppSearchBatchResult lambda$getByDocumentIdAsync$0(androidx.appsearch.app.GetByDocumentIdRequest, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.GlobalSearchSessionImpl r0;
        androidx.appsearch.app.GetByDocumentIdRequest r1;
        java.lang.String r2, r3, r8, $r12, $r17;
        androidx.appsearch.app.AppSearchBatchResult$Builder r4, $r9;
        java.util.Map r5;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess r6, $r10;
        java.util.Iterator r7;
        android.content.Context $r11;
        java.util.Set $r13;
        boolean $z0;
        androidx.appsearch.app.AppSearchBatchResult $r14;
        java.lang.Object $r15;
        androidx.appsearch.localstorage.AppSearchImpl $r16;
        java.lang.Throwable $r19, r23;
        androidx.appsearch.app.AppSearchResult $r20;
        androidx.appsearch.app.GenericDocument r22;

        r0 := @this: androidx.appsearch.localstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.GetByDocumentIdRequest;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r9 = new androidx.appsearch.app.AppSearchBatchResult$Builder;

        specialinvoke $r9.<androidx.appsearch.app.AppSearchBatchResult$Builder: void <init>()>();

        r4 = $r9;

        r5 = virtualinvoke r1.<androidx.appsearch.app.GetByDocumentIdRequest: java.util.Map getProjectionsInternal()>();

        $r10 = new androidx.appsearch.localstorage.visibilitystore.CallerAccess;

        $r11 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getPackageName()>();

        specialinvoke $r10.<androidx.appsearch.localstorage.visibilitystore.CallerAccess: void <init>(java.lang.String)>($r12);

        r6 = $r10;

        $r13 = virtualinvoke r1.<androidx.appsearch.app.GetByDocumentIdRequest: java.util.Set getIds()>();

        r7 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r15;

     label2:
        $r16 = r0.<androidx.appsearch.localstorage.GlobalSearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r17 = virtualinvoke r1.<androidx.appsearch.app.GetByDocumentIdRequest: java.lang.String getNamespace()>();

        r22 = virtualinvoke $r16.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.GenericDocument globalGetDocument(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,androidx.appsearch.localstorage.visibilitystore.CallerAccess)>(r2, r3, $r17, r8, r5, r6);

        virtualinvoke r4.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult$Builder setSuccess(java.lang.Object,java.lang.Object)>(r8, r22);

     label3:
        goto label5;

     label4:
        $r19 := @caughtexception;

        r23 = $r19;

        $r20 = staticinvoke <androidx.appsearch.app.AppSearchResult: androidx.appsearch.app.AppSearchResult throwableToFailedResult(java.lang.Throwable)>(r23);

        virtualinvoke r4.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult$Builder setResult(java.lang.Object,androidx.appsearch.app.AppSearchResult)>(r8, $r20);

     label5:
        goto label1;

     label6:
        $r14 = virtualinvoke r4.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult build()>();

        return $r14;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

