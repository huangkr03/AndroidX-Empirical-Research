android.databinding.tool.Context
<android.databinding.tool.Context: android.databinding.tool.reflection.'annotation'.AnnotationLogger logger>
<android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer>
<android.databinding.tool.Context: android.databinding.tool.store.SetterStore setterStore>
<android.databinding.tool.Context: android.databinding.tool.util.GenerationalClassUtil generationalClassUtil>
<android.databinding.tool.Context: android.databinding.tool.reflection.TypeUtil typeUtil>
<android.databinding.tool.Context: android.databinding.tool.reflection.SdkUtil sdkUtil>
<android.databinding.tool.Context: android.databinding.tool.LibTypes libTypes>
<android.databinding.tool.Context: android.databinding.tool.Context INSTANCE>
    public static final void init(javax.'annotation'.processing.ProcessingEnvironment, android.databinding.tool.DataBindingCompilerArgs)
    {
        javax.'annotation'.processing.ProcessingEnvironment r0;
        android.databinding.tool.DataBindingCompilerArgs r1;
        boolean z0;
        android.databinding.tool.reflection.'annotation'.AnnotationLogger $r2;
        android.databinding.tool.util.L$Client $r3;
        android.databinding.tool.Context $r4;
        android.databinding.tool.LibTypes $r5, $r8;
        android.databinding.tool.util.GenerationalClassUtil $r6, $r12;
        android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer $r7;
        android.databinding.tool.reflection.ModelAnalyzer $r9, $r10, $r13;
        android.databinding.tool.reflection.TypeUtil $r11;
        android.databinding.tool.store.SetterStore $r14;
        java.io.File $r15;
        java.lang.String $r16;
        int $i0;
        android.databinding.tool.reflection.SdkUtil $r17;

        r0 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        r1 := @parameter1: android.databinding.tool.DataBindingCompilerArgs;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r0, "processingEnvironment");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "args");

        $r2 = <android.databinding.tool.Context: android.databinding.tool.reflection.'annotation'.AnnotationLogger logger>;

        $r3 = (android.databinding.tool.util.L$Client) $r2;

        staticinvoke <android.databinding.tool.util.L: void setClient(android.databinding.tool.util.L$Client)>($r3);

        $r4 = <android.databinding.tool.Context: android.databinding.tool.Context INSTANCE>;

        z0 = specialinvoke $r4.<android.databinding.tool.Context: boolean discoverAndroidX(javax.'annotation'.processing.ProcessingEnvironment)>(r0);

        $r5 = new android.databinding.tool.LibTypes;

        specialinvoke $r5.<android.databinding.tool.LibTypes: void <init>(boolean)>(z0);

        <android.databinding.tool.Context: android.databinding.tool.LibTypes libTypes> = $r5;

        $r6 = staticinvoke <android.databinding.tool.util.GenerationalClassUtil: android.databinding.tool.util.GenerationalClassUtil create(android.databinding.tool.DataBindingCompilerArgs)>(r1);

        <android.databinding.tool.Context: android.databinding.tool.util.GenerationalClassUtil generationalClassUtil> = $r6;

        $r7 = new android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer;

        $r8 = <android.databinding.tool.Context: android.databinding.tool.LibTypes libTypes>;

        specialinvoke $r7.<android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer: void <init>(javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.LibTypes)>(r0, $r8);

        $r9 = (android.databinding.tool.reflection.ModelAnalyzer) $r7;

        <android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer> = $r9;

        $r10 = <android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer>;

        if $r10 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwNpe()>();

     label1:
        $r11 = virtualinvoke $r10.<android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.TypeUtil createTypeUtil()>();

        <android.databinding.tool.Context: android.databinding.tool.reflection.TypeUtil typeUtil> = $r11;

        $r13 = <android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer>;

        $r12 = <android.databinding.tool.Context: android.databinding.tool.util.GenerationalClassUtil generationalClassUtil>;

        $r14 = staticinvoke <android.databinding.tool.store.SetterStore: android.databinding.tool.store.SetterStore create(android.databinding.tool.reflection.ModelAnalyzer,android.databinding.tool.util.GenerationalClassUtil)>($r13, $r12);

        <android.databinding.tool.Context: android.databinding.tool.store.SetterStore setterStore> = $r14;

        $r15 = new java.io.File;

        $r16 = virtualinvoke r1.<android.databinding.tool.DataBindingCompilerArgs: java.lang.String getSdkDir()>();

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r16);

        $i0 = virtualinvoke r1.<android.databinding.tool.DataBindingCompilerArgs: int getMinApi()>();

        $r17 = staticinvoke <android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil create(java.io.File,int)>($r15, $i0);

        <android.databinding.tool.Context: android.databinding.tool.reflection.SdkUtil sdkUtil> = $r17;

        return;
    }

    private final boolean discoverAndroidX(javax.'annotation'.processing.ProcessingEnvironment)
    {
        android.databinding.tool.Context r0;
        javax.'annotation'.processing.ProcessingEnvironment r1;
        boolean z0, z1, $z2, $z3;
        javax.lang.model.util.Elements $r2, $r5;
        java.lang.CharSequence $r3, $r6;
        javax.lang.model.element.TypeElement $r4, $r7;
        java.lang.Object[] $r8;

        r0 := @this: android.databinding.tool.Context;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        $r2 = interfaceinvoke r1.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r3 = (java.lang.CharSequence) "android.databinding.Observable";

        $r4 = interfaceinvoke $r2.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r3);

        if $r4 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r5 = interfaceinvoke r1.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r6 = (java.lang.CharSequence) "androidx.databinding.Observable";

        $r7 = interfaceinvoke $r5.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r6);

        if $r7 == null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z1 = $z3;

        if z1 == 0 goto label5;

        if z0 == 0 goto label5;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("AndroidX Error: Both old and new data binding packages are available in dependencies. Make sure you\'ve setup jettifier  for any data binding dependencies and also set android.useAndroidx in your gradle.properties file.", $r8);

     label5:
        return z1;
    }

    public static final void initForTests(android.databinding.tool.reflection.ModelAnalyzer, android.databinding.tool.reflection.SdkUtil)
    {
        android.databinding.tool.reflection.ModelAnalyzer r0, $r2;
        android.databinding.tool.reflection.SdkUtil r1;
        android.databinding.tool.reflection.TypeUtil $r3;

        r0 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        r1 := @parameter1: android.databinding.tool.reflection.SdkUtil;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r0, "modelAnayzer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "sdkUtil");

        <android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer> = r0;

        <android.databinding.tool.Context: android.databinding.tool.reflection.SdkUtil sdkUtil> = r1;

        $r2 = <android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer>;

        if $r2 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwNpe()>();

     label1:
        $r3 = virtualinvoke $r2.<android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.TypeUtil createTypeUtil()>();

        <android.databinding.tool.Context: android.databinding.tool.reflection.TypeUtil typeUtil> = $r3;

        return;
    }

    public static void modelAnalyzer$annotations()
    {
        return;
    }

    public static final android.databinding.tool.reflection.ModelAnalyzer getModelAnalyzer()
    {
        android.databinding.tool.reflection.ModelAnalyzer $r0;

        $r0 = <android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer>;

        return $r0;
    }

    private static final void setModelAnalyzer(android.databinding.tool.reflection.ModelAnalyzer)
    {
        android.databinding.tool.reflection.ModelAnalyzer r0;

        r0 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        <android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer> = r0;

        return;
    }

    public static void setterStore$annotations()
    {
        return;
    }

    public static final android.databinding.tool.store.SetterStore getSetterStore()
    {
        android.databinding.tool.store.SetterStore $r0;

        $r0 = <android.databinding.tool.Context: android.databinding.tool.store.SetterStore setterStore>;

        return $r0;
    }

    private static final void setSetterStore(android.databinding.tool.store.SetterStore)
    {
        android.databinding.tool.store.SetterStore r0;

        r0 := @parameter0: android.databinding.tool.store.SetterStore;

        <android.databinding.tool.Context: android.databinding.tool.store.SetterStore setterStore> = r0;

        return;
    }

    public static void generationalClassUtil$annotations()
    {
        return;
    }

    public static final android.databinding.tool.util.GenerationalClassUtil getGenerationalClassUtil()
    {
        android.databinding.tool.util.GenerationalClassUtil $r0;

        $r0 = <android.databinding.tool.Context: android.databinding.tool.util.GenerationalClassUtil generationalClassUtil>;

        return $r0;
    }

    private static final void setGenerationalClassUtil(android.databinding.tool.util.GenerationalClassUtil)
    {
        android.databinding.tool.util.GenerationalClassUtil r0;

        r0 := @parameter0: android.databinding.tool.util.GenerationalClassUtil;

        <android.databinding.tool.Context: android.databinding.tool.util.GenerationalClassUtil generationalClassUtil> = r0;

        return;
    }

    public static void typeUtil$annotations()
    {
        return;
    }

    public static final android.databinding.tool.reflection.TypeUtil getTypeUtil()
    {
        android.databinding.tool.reflection.TypeUtil $r0;

        $r0 = <android.databinding.tool.Context: android.databinding.tool.reflection.TypeUtil typeUtil>;

        return $r0;
    }

    private static final void setTypeUtil(android.databinding.tool.reflection.TypeUtil)
    {
        android.databinding.tool.reflection.TypeUtil r0;

        r0 := @parameter0: android.databinding.tool.reflection.TypeUtil;

        <android.databinding.tool.Context: android.databinding.tool.reflection.TypeUtil typeUtil> = r0;

        return;
    }

    public static void sdkUtil$annotations()
    {
        return;
    }

    public static final android.databinding.tool.reflection.SdkUtil getSdkUtil()
    {
        android.databinding.tool.reflection.SdkUtil $r0;

        $r0 = <android.databinding.tool.Context: android.databinding.tool.reflection.SdkUtil sdkUtil>;

        return $r0;
    }

    private static final void setSdkUtil(android.databinding.tool.reflection.SdkUtil)
    {
        android.databinding.tool.reflection.SdkUtil r0;

        r0 := @parameter0: android.databinding.tool.reflection.SdkUtil;

        <android.databinding.tool.Context: android.databinding.tool.reflection.SdkUtil sdkUtil> = r0;

        return;
    }

    public static void libTypes$annotations()
    {
        return;
    }

    public static final android.databinding.tool.LibTypes getLibTypes()
    {
        android.databinding.tool.LibTypes $r0;

        $r0 = <android.databinding.tool.Context: android.databinding.tool.LibTypes libTypes>;

        return $r0;
    }

    private static final void setLibTypes(android.databinding.tool.LibTypes)
    {
        android.databinding.tool.LibTypes r0;

        r0 := @parameter0: android.databinding.tool.LibTypes;

        <android.databinding.tool.Context: android.databinding.tool.LibTypes libTypes> = r0;

        return;
    }

    public static final void fullClear(javax.'annotation'.processing.ProcessingEnvironment)
    {
        javax.'annotation'.processing.ProcessingEnvironment r0;
        android.databinding.tool.reflection.'annotation'.AnnotationLogger $r1;
        android.databinding.tool.reflection.ModelAnalyzer $r2;
        android.databinding.tool.store.SetterStore $r3;
        android.databinding.tool.util.GenerationalClassUtil $r4;
        android.databinding.tool.reflection.TypeUtil $r5;
        android.databinding.tool.reflection.SdkUtil $r6;
        android.databinding.tool.LibTypes $r7;

        r0 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r0, "processingEnvironment");

        $r1 = <android.databinding.tool.Context: android.databinding.tool.reflection.'annotation'.AnnotationLogger logger>;

        virtualinvoke $r1.<android.databinding.tool.reflection.'annotation'.AnnotationLogger: void flushMessages(javax.'annotation'.processing.ProcessingEnvironment)>(r0);

        $r2 = (android.databinding.tool.reflection.ModelAnalyzer) null;

        <android.databinding.tool.Context: android.databinding.tool.reflection.ModelAnalyzer modelAnalyzer> = $r2;

        $r3 = (android.databinding.tool.store.SetterStore) null;

        <android.databinding.tool.Context: android.databinding.tool.store.SetterStore setterStore> = $r3;

        $r4 = (android.databinding.tool.util.GenerationalClassUtil) null;

        <android.databinding.tool.Context: android.databinding.tool.util.GenerationalClassUtil generationalClassUtil> = $r4;

        $r5 = (android.databinding.tool.reflection.TypeUtil) null;

        <android.databinding.tool.Context: android.databinding.tool.reflection.TypeUtil typeUtil> = $r5;

        $r6 = (android.databinding.tool.reflection.SdkUtil) null;

        <android.databinding.tool.Context: android.databinding.tool.reflection.SdkUtil sdkUtil> = $r6;

        $r7 = (android.databinding.tool.LibTypes) null;

        <android.databinding.tool.Context: android.databinding.tool.LibTypes libTypes> = $r7;

        staticinvoke <android.databinding.tool.util.L: void setClient(android.databinding.tool.util.L$Client)>(null);

        staticinvoke <android.databinding.tool.ext.ExtKt: void cleanLazyProps()>();

        return;
    }

    private void <init>()
    {
        android.databinding.tool.Context r0;

        r0 := @this: android.databinding.tool.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        android.databinding.tool.Context r0, $r1;
        android.databinding.tool.reflection.'annotation'.AnnotationLogger $r2;

        $r1 = new android.databinding.tool.Context;

        specialinvoke $r1.<android.databinding.tool.Context: void <init>()>();

        r0 = $r1;

        <android.databinding.tool.Context: android.databinding.tool.Context INSTANCE> = r0;

        $r2 = new android.databinding.tool.reflection.'annotation'.AnnotationLogger;

        specialinvoke $r2.<android.databinding.tool.reflection.'annotation'.AnnotationLogger: void <init>()>();

        <android.databinding.tool.Context: android.databinding.tool.reflection.'annotation'.AnnotationLogger logger> = $r2;

        return;
    }

