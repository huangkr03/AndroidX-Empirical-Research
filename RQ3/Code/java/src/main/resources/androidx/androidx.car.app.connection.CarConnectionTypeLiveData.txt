androidx.car.app.connection.CarConnectionTypeLiveData
<androidx.car.app.connection.CarConnectionTypeLiveData: java.lang.String CAR_CONNECTION_AUTHORITY>
<androidx.car.app.connection.CarConnectionTypeLiveData: int QUERY_TOKEN>
<androidx.car.app.connection.CarConnectionTypeLiveData: android.net.Uri PROJECTION_HOST_URI>
<androidx.car.app.connection.CarConnectionTypeLiveData: android.content.Context mContext>
<androidx.car.app.connection.CarConnectionTypeLiveData: android.content.AsyncQueryHandler mQueryHandler>
<androidx.car.app.connection.CarConnectionTypeLiveData: androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver mBroadcastReceiver>
    void <init>(android.content.Context)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData r0;
        android.content.Context r1;
        androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler $r2;
        android.content.ContentResolver $r3;
        androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver $r4;

        r0 := @this: androidx.car.app.connection.CarConnectionTypeLiveData;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.lifecycle.LiveData: void <init>()>();

        r0.<androidx.car.app.connection.CarConnectionTypeLiveData: android.content.Context mContext> = r1;

        $r2 = new androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke $r2.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler: void <init>(androidx.car.app.connection.CarConnectionTypeLiveData,android.content.ContentResolver)>(r0, $r3);

        r0.<androidx.car.app.connection.CarConnectionTypeLiveData: android.content.AsyncQueryHandler mQueryHandler> = $r2;

        $r4 = new androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver;

        specialinvoke $r4.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver: void <init>(androidx.car.app.connection.CarConnectionTypeLiveData)>(r0);

        r0.<androidx.car.app.connection.CarConnectionTypeLiveData: androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver mBroadcastReceiver> = $r4;

        return;
    }

    public void onActive()
    {
        androidx.car.app.connection.CarConnectionTypeLiveData r0;
        android.content.IntentFilter $r1;
        android.content.Context $r2;
        androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver $r3;

        r0 := @this: androidx.car.app.connection.CarConnectionTypeLiveData;

        $r2 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData: android.content.Context mContext>;

        $r3 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData: androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver mBroadcastReceiver>;

        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>(java.lang.String)>("androidx.car.app.connection.action.CAR_CONNECTION_UPDATED");

        virtualinvoke $r2.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r1);

        virtualinvoke r0.<androidx.car.app.connection.CarConnectionTypeLiveData: void queryForState()>();

        return;
    }

    public void onInactive()
    {
        androidx.car.app.connection.CarConnectionTypeLiveData r0;
        androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver $r1;
        android.content.Context $r2;
        android.content.AsyncQueryHandler $r3;

        r0 := @this: androidx.car.app.connection.CarConnectionTypeLiveData;

        $r2 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData: android.content.Context mContext>;

        $r1 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData: androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        $r3 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData: android.content.AsyncQueryHandler mQueryHandler>;

        virtualinvoke $r3.<android.content.AsyncQueryHandler: void cancelOperation(int)>(42);

        return;
    }

    void queryForState()
    {
        androidx.car.app.connection.CarConnectionTypeLiveData r0;
        java.lang.String[] $r1;
        android.net.Uri $r2;
        android.content.AsyncQueryHandler $r3;

        r0 := @this: androidx.car.app.connection.CarConnectionTypeLiveData;

        $r3 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData: android.content.AsyncQueryHandler mQueryHandler>;

        $r2 = <androidx.car.app.connection.CarConnectionTypeLiveData: android.net.Uri PROJECTION_HOST_URI>;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "CarConnectionState";

        virtualinvoke $r3.<android.content.AsyncQueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(42, null, $r2, $r1, null, null, null);

        return;
    }

    static void access$000(androidx.car.app.connection.CarConnectionTypeLiveData, java.lang.Object)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData r0;
        java.lang.Object r1;

        r0 := @parameter0: androidx.car.app.connection.CarConnectionTypeLiveData;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<androidx.car.app.connection.CarConnectionTypeLiveData: void postValue(java.lang.Object)>(r1);

        return;
    }

    static void access$100(androidx.car.app.connection.CarConnectionTypeLiveData, java.lang.Object)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData r0;
        java.lang.Object r1;

        r0 := @parameter0: androidx.car.app.connection.CarConnectionTypeLiveData;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<androidx.car.app.connection.CarConnectionTypeLiveData: void postValue(java.lang.Object)>(r1);

        return;
    }

    static void access$200(androidx.car.app.connection.CarConnectionTypeLiveData, java.lang.Object)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData r0;
        java.lang.Object r1;

        r0 := @parameter0: androidx.car.app.connection.CarConnectionTypeLiveData;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<androidx.car.app.connection.CarConnectionTypeLiveData: void postValue(java.lang.Object)>(r1);

        return;
    }

    static void access$300(androidx.car.app.connection.CarConnectionTypeLiveData, java.lang.Object)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData r0;
        java.lang.Object r1;

        r0 := @parameter0: androidx.car.app.connection.CarConnectionTypeLiveData;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<androidx.car.app.connection.CarConnectionTypeLiveData: void postValue(java.lang.Object)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.net.Uri$Builder $r0, $r1, $r2;
        android.net.Uri $r3;

        $r0 = new android.net.Uri$Builder;

        specialinvoke $r0.<android.net.Uri$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("androidx.car.app.connection");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        <androidx.car.app.connection.CarConnectionTypeLiveData: android.net.Uri PROJECTION_HOST_URI> = $r3;

        return;
    }

androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver
<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver: androidx.car.app.connection.CarConnectionTypeLiveData this$0>
    void <init>(androidx.car.app.connection.CarConnectionTypeLiveData)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver r0;
        androidx.car.app.connection.CarConnectionTypeLiveData r1;

        r0 := @this: androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver;

        r1 := @parameter0: androidx.car.app.connection.CarConnectionTypeLiveData;

        r0.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver: androidx.car.app.connection.CarConnectionTypeLiveData this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.car.app.connection.CarConnectionTypeLiveData $r3;

        r0 := @this: androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionBroadcastReceiver: androidx.car.app.connection.CarConnectionTypeLiveData this$0>;

        virtualinvoke $r3.<androidx.car.app.connection.CarConnectionTypeLiveData: void queryForState()>();

        return;
    }

androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler
<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler: androidx.car.app.connection.CarConnectionTypeLiveData this$0>
    void <init>(androidx.car.app.connection.CarConnectionTypeLiveData, android.content.ContentResolver)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler r0;
        androidx.car.app.connection.CarConnectionTypeLiveData r1;
        android.content.ContentResolver r2;

        r0 := @this: androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler;

        r1 := @parameter0: androidx.car.app.connection.CarConnectionTypeLiveData;

        r2 := @parameter1: android.content.ContentResolver;

        r0.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler: androidx.car.app.connection.CarConnectionTypeLiveData this$0> = r1;

        specialinvoke r0.<android.content.AsyncQueryHandler: void <init>(android.content.ContentResolver)>(r2);

        return;
    }

    protected void onQueryComplete(int, java.lang.Object, android.database.Cursor)
    {
        androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler r0;
        int i0, i1, $i2;
        java.lang.Object r1;
        android.database.Cursor r2;
        boolean $z0;
        androidx.car.app.connection.CarConnectionTypeLiveData $r3, $r5, $r7, $r9;
        java.lang.Integer $r4, $r6, $r8, $r10;

        r0 := @this: androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: android.database.Cursor;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CarApp.Conn", "Null response from content provider when checking connection to the car, treating as disconnected");

        $r9 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler: androidx.car.app.connection.CarConnectionTypeLiveData this$0>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.car.app.connection.CarConnectionTypeLiveData: void access$000(androidx.car.app.connection.CarConnectionTypeLiveData,java.lang.Object)>($r9, $r10);

        return;

     label1:
        i1 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("CarConnectionState");

        if i1 >= 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Conn", "Connection to car response is missing the connection type, treating as disconnected");

        $r7 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler: androidx.car.app.connection.CarConnectionTypeLiveData this$0>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.car.app.connection.CarConnectionTypeLiveData: void access$100(androidx.car.app.connection.CarConnectionTypeLiveData,java.lang.Object)>($r7, $r8);

        return;

     label2:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarApp.Conn", "Connection to car response is empty, treating as disconnected");

        $r5 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler: androidx.car.app.connection.CarConnectionTypeLiveData this$0>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <androidx.car.app.connection.CarConnectionTypeLiveData: void access$200(androidx.car.app.connection.CarConnectionTypeLiveData,java.lang.Object)>($r5, $r6);

        return;

     label3:
        $r3 = r0.<androidx.car.app.connection.CarConnectionTypeLiveData$CarConnectionQueryHandler: androidx.car.app.connection.CarConnectionTypeLiveData this$0>;

        $i2 = interfaceinvoke r2.<android.database.Cursor: int getInt(int)>(i1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        staticinvoke <androidx.car.app.connection.CarConnectionTypeLiveData: void access$300(androidx.car.app.connection.CarConnectionTypeLiveData,java.lang.Object)>($r3, $r4);

        return;
    }

