androidx.health.services.client.impl.MeasureCallbackStub
<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.impl.MeasureCallbackStub$Companion Companion>
<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.MeasureCallback callback>
<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.impl.ipc.internal.ListenerKey listenerKey>
<androidx.health.services.client.impl.MeasureCallbackStub: java.util.concurrent.Executor executor>
<androidx.health.services.client.impl.MeasureCallbackStub: java.lang.String TAG>
    private void <init>(androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey, androidx.health.services.client.MeasureCallback)
    {
        androidx.health.services.client.impl.MeasureCallbackStub r0;
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r1;
        androidx.health.services.client.MeasureCallback r2;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub;

        r1 := @parameter0: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        r2 := @parameter1: androidx.health.services.client.MeasureCallback;

        specialinvoke r0.<androidx.health.services.client.impl.IMeasureCallback$Stub: void <init>()>();

        r0.<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.MeasureCallback callback> = r2;

        $r3 = new androidx.health.services.client.impl.ipc.internal.ListenerKey;

        specialinvoke $r3.<androidx.health.services.client.impl.ipc.internal.ListenerKey: void <init>(java.lang.Object)>(r1);

        r0.<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.impl.ipc.internal.ListenerKey listenerKey> = $r3;

        $r4 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "directExecutor()");

        r0.<androidx.health.services.client.impl.MeasureCallbackStub: java.util.concurrent.Executor executor> = $r4;

        return;
    }

    public final androidx.health.services.client.impl.ipc.internal.ListenerKey getListenerKey()
    {
        androidx.health.services.client.impl.MeasureCallbackStub r0;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r1;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub;

        $r1 = r0.<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.impl.ipc.internal.ListenerKey listenerKey>;

        return $r1;
    }

    public final java.util.concurrent.Executor getExecutor()
    {
        androidx.health.services.client.impl.MeasureCallbackStub r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub;

        $r1 = r0.<androidx.health.services.client.impl.MeasureCallbackStub: java.util.concurrent.Executor executor>;

        return $r1;
    }

    public void onMeasureCallbackEvent(androidx.health.services.client.impl.event.MeasureCallbackEvent)
    {
        androidx.health.services.client.impl.MeasureCallbackStub r0;
        androidx.health.services.client.impl.event.MeasureCallbackEvent r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub;

        r1 := @parameter0: androidx.health.services.client.impl.event.MeasureCallbackEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        $r2 = r0.<androidx.health.services.client.impl.MeasureCallbackStub: java.util.concurrent.Executor executor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.health.services.client.impl.MeasureCallbackStub,androidx.health.services.client.impl.event.MeasureCallbackEvent)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.MeasureCallbackStub: void onMeasureCallbackEvent$lambda$0(androidx.health.services.client.impl.MeasureCallbackStub,androidx.health.services.client.impl.event.MeasureCallbackEvent)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    private final void triggerListener(androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent)
    {
        androidx.health.services.client.impl.MeasureCallbackStub r0;
        androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent r1;
        androidx.health.services.client.impl.response.DataPointsResponse r2, $r14;
        androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase $r3, $r21;
        int[] $r4;
        int $i0, $i2;
        androidx.health.services.client.MeasureCallback $r5, $r17;
        androidx.health.services.client.data.DataType$Companion $r6;
        androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse $r7, $r11;
        androidx.health.services.client.proto.DataProto$DataType $r8;
        androidx.health.services.client.data.DeltaDataType $r9;
        androidx.health.services.client.data.Availability$Companion $r10;
        androidx.health.services.client.proto.DataProto$Availability $r12;
        androidx.health.services.client.data.Availability $r13;
        androidx.health.services.client.proto.ResponsesProto$DataPointsResponse $r15;
        androidx.health.services.client.data.DataPointContainer $r16;
        java.util.List $r18;
        java.lang.StringBuilder $r19, $r20, $r22;
        java.lang.String $r23;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub;

        r1 := @parameter0: androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent;

        $r3 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent: androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase getEventCase()>();

        if $r3 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $r4 = <androidx.health.services.client.impl.MeasureCallbackStub$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r3.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase: int ordinal()>();

        $i2 = $r4[$i0];

     label2:
        tableswitch($i2)
        {
            case -1: goto label5;
            case 0: goto label6;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $r14 = new androidx.health.services.client.impl.response.DataPointsResponse;

        $r15 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent: androidx.health.services.client.proto.ResponsesProto$DataPointsResponse getDataPointResponse()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "proto.dataPointResponse");

        specialinvoke $r14.<androidx.health.services.client.impl.response.DataPointsResponse: void <init>(androidx.health.services.client.proto.ResponsesProto$DataPointsResponse)>($r15);

        r2 = $r14;

        $r17 = r0.<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.MeasureCallback callback>;

        $r16 = new androidx.health.services.client.data.DataPointContainer;

        $r18 = virtualinvoke r2.<androidx.health.services.client.impl.response.DataPointsResponse: java.util.List getDataPoints()>();

        specialinvoke $r16.<androidx.health.services.client.data.DataPointContainer: void <init>(java.util.List)>($r18);

        interfaceinvoke $r17.<androidx.health.services.client.MeasureCallback: void onDataReceived(androidx.health.services.client.data.DataPointContainer)>($r16);

        goto label6;

     label4:
        $r5 = r0.<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.MeasureCallback callback>;

        $r6 = <androidx.health.services.client.data.DataType: androidx.health.services.client.data.DataType$Companion Companion>;

        $r7 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent: androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse getAvailabilityResponse()>();

        $r8 = virtualinvoke $r7.<androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse: androidx.health.services.client.proto.DataProto$DataType getDataType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "proto.availabilityResponse.dataType");

        $r9 = virtualinvoke $r6.<androidx.health.services.client.data.DataType$Companion: androidx.health.services.client.data.DeltaDataType deltaFromProto$health_services_client_release(androidx.health.services.client.proto.DataProto$DataType)>($r8);

        $r10 = <androidx.health.services.client.data.Availability: androidx.health.services.client.data.Availability$Companion Companion>;

        $r11 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent: androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse getAvailabilityResponse()>();

        $r12 = virtualinvoke $r11.<androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse: androidx.health.services.client.proto.DataProto$Availability getAvailability()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "proto.availabilityResponse.availability");

        $r13 = virtualinvoke $r10.<androidx.health.services.client.data.Availability$Companion: androidx.health.services.client.data.Availability fromProto(androidx.health.services.client.proto.DataProto$Availability)>($r12);

        interfaceinvoke $r5.<androidx.health.services.client.MeasureCallback: void onAvailabilityChanged(androidx.health.services.client.data.DeltaDataType,androidx.health.services.client.data.Availability)>($r9, $r13);

        goto label6;

     label5:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received unknown event ");

        $r21 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent: androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase getEventCase()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MeasureCallbackStub", $r23);

     label6:
        return;
    }

    private static final void onMeasureCallbackEvent$lambda$0(androidx.health.services.client.impl.MeasureCallbackStub, androidx.health.services.client.impl.event.MeasureCallbackEvent)
    {
        androidx.health.services.client.impl.MeasureCallbackStub r0;
        androidx.health.services.client.impl.event.MeasureCallbackEvent $r1;
        androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent $r2;

        r0 := @parameter0: androidx.health.services.client.impl.MeasureCallbackStub;

        $r1 := @parameter1: androidx.health.services.client.impl.event.MeasureCallbackEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$event");

        $r2 = virtualinvoke $r1.<androidx.health.services.client.impl.event.MeasureCallbackEvent: androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent getProto()>();

        specialinvoke r0.<androidx.health.services.client.impl.MeasureCallbackStub: void triggerListener(androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent)>($r2);

        return;
    }

    public void <init>(androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey, androidx.health.services.client.MeasureCallback, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.services.client.impl.MeasureCallbackStub r0;
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r1;
        androidx.health.services.client.MeasureCallback r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub;

        r1 := @parameter0: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        r2 := @parameter1: androidx.health.services.client.MeasureCallback;

        $r3 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.services.client.impl.MeasureCallbackStub: void <init>(androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey,androidx.health.services.client.MeasureCallback)>(r1, r2);

        return;
    }

    public static final void access$setExecutor$p(androidx.health.services.client.impl.MeasureCallbackStub, java.util.concurrent.Executor)
    {
        androidx.health.services.client.impl.MeasureCallbackStub $r0;
        java.util.concurrent.Executor r1;

        $r0 := @parameter0: androidx.health.services.client.impl.MeasureCallbackStub;

        r1 := @parameter1: java.util.concurrent.Executor;

        $r0.<androidx.health.services.client.impl.MeasureCallbackStub: java.util.concurrent.Executor executor> = r1;

        return;
    }

    static void <clinit>()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$Companion $r0;

        $r0 = new androidx.health.services.client.impl.MeasureCallbackStub$Companion;

        specialinvoke $r0.<androidx.health.services.client.impl.MeasureCallbackStub$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.impl.MeasureCallbackStub$Companion Companion> = $r0;

        return;
    }

androidx.health.services.client.impl.MeasureCallbackStub$Companion
    private void <init>()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$Companion r0;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.services.client.impl.MeasureCallbackStub$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.services.client.impl.MeasureCallbackStub$Companion: void <init>()>();

        return;
    }

androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion
    private void <init>()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion r0;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion: void <init>()>();

        return;
    }

androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache
<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion Companion>
<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: java.util.Map listeners>
<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache INSTANCE>
    private void <init>()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache r0;
        java.util.HashMap $r1;
        java.util.Map $r2;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: java.util.Map listeners> = $r2;

        return;
    }

    public final synchronized androidx.health.services.client.impl.MeasureCallbackStub getOrCreate(androidx.health.services.client.data.DataType, java.util.concurrent.Executor, androidx.health.services.client.MeasureCallback)
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache r0;
        androidx.health.services.client.data.DataType r1;
        java.util.concurrent.Executor r2;
        androidx.health.services.client.MeasureCallback r3;
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r4, $r5;
        java.util.Map $r6, $r9;
        java.lang.Object $r7;
        androidx.health.services.client.impl.MeasureCallbackStub $r8, r11;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache;

        r1 := @parameter0: androidx.health.services.client.data.DataType;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.health.services.client.MeasureCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "measureCallback");

        $r5 = new androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        specialinvoke $r5.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: void <init>(androidx.health.services.client.data.DataType,androidx.health.services.client.MeasureCallback)>(r1, r3);

        r4 = $r5;

        $r6 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: java.util.Map listeners>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r11 = (androidx.health.services.client.impl.MeasureCallbackStub) $r7;

        if r11 != null goto label1;

        $r8 = new androidx.health.services.client.impl.MeasureCallbackStub;

        specialinvoke $r8.<androidx.health.services.client.impl.MeasureCallbackStub: void <init>(androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey,androidx.health.services.client.MeasureCallback,kotlin.jvm.internal.DefaultConstructorMarker)>(r4, r3, null);

        r11 = $r8;

        $r9 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: java.util.Map listeners>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r11);

     label1:
        staticinvoke <androidx.health.services.client.impl.MeasureCallbackStub: void access$setExecutor$p(androidx.health.services.client.impl.MeasureCallbackStub,java.util.concurrent.Executor)>(r11, r2);

        return r11;
    }

    public final synchronized androidx.health.services.client.impl.MeasureCallbackStub remove(androidx.health.services.client.data.DataType, androidx.health.services.client.MeasureCallback)
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache r0;
        androidx.health.services.client.data.DataType r1;
        androidx.health.services.client.MeasureCallback r2;
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r3, $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        androidx.health.services.client.impl.MeasureCallbackStub $r7;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache;

        r1 := @parameter0: androidx.health.services.client.data.DataType;

        r2 := @parameter1: androidx.health.services.client.MeasureCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measureCallback");

        $r4 = new androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        specialinvoke $r4.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: void <init>(androidx.health.services.client.data.DataType,androidx.health.services.client.MeasureCallback)>(r1, r2);

        r3 = $r4;

        $r5 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: java.util.Map listeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        $r7 = (androidx.health.services.client.impl.MeasureCallbackStub) $r6;

        return $r7;
    }

    static void <clinit>()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion $r0;
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache $r1;

        $r0 = new androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion;

        specialinvoke $r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache$Companion Companion> = $r0;

        $r1 = new androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache;

        specialinvoke $r1.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: void <init>()>();

        <androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache INSTANCE> = $r1;

        return;
    }

androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey
<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.data.DataType dataType>
<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.MeasureCallback measureCallback>
    public void <init>(androidx.health.services.client.data.DataType, androidx.health.services.client.MeasureCallback)
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r0;
        androidx.health.services.client.data.DataType r1;
        androidx.health.services.client.MeasureCallback r2;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        r1 := @parameter0: androidx.health.services.client.data.DataType;

        r2 := @parameter1: androidx.health.services.client.MeasureCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measureCallback");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.data.DataType dataType> = r1;

        r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.MeasureCallback measureCallback> = r2;

        return;
    }

    private final androidx.health.services.client.data.DataType component1()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r0;
        androidx.health.services.client.data.DataType $r1;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        $r1 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.data.DataType dataType>;

        return $r1;
    }

    private final androidx.health.services.client.MeasureCallback component2()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r0;
        androidx.health.services.client.MeasureCallback $r1;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        $r1 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.MeasureCallback measureCallback>;

        return $r1;
    }

    public final androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey copy(androidx.health.services.client.data.DataType, androidx.health.services.client.MeasureCallback)
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r0, $r3;
        androidx.health.services.client.data.DataType r1;
        androidx.health.services.client.MeasureCallback r2;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        r1 := @parameter0: androidx.health.services.client.data.DataType;

        r2 := @parameter1: androidx.health.services.client.MeasureCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measureCallback");

        $r3 = new androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        specialinvoke $r3.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: void <init>(androidx.health.services.client.data.DataType,androidx.health.services.client.MeasureCallback)>(r1, r2);

        return $r3;
    }

    public static androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey copy$default(androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey, androidx.health.services.client.data.DataType, androidx.health.services.client.MeasureCallback, int, java.lang.Object)
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        androidx.health.services.client.data.DataType r3;
        androidx.health.services.client.MeasureCallback r4;

        r0 := @parameter0: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        r3 := @parameter1: androidx.health.services.client.data.DataType;

        r4 := @parameter2: androidx.health.services.client.MeasureCallback;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.data.DataType dataType>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.MeasureCallback measureCallback>;

     label2:
        $r2 = virtualinvoke r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey copy(androidx.health.services.client.data.DataType,androidx.health.services.client.MeasureCallback)>(r3, r4);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        androidx.health.services.client.data.DataType $r3;
        androidx.health.services.client.MeasureCallback $r6;
        java.lang.String $r9;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MeasureCallbackKey(dataType=");

        $r3 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.data.DataType dataType>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", measureCallback=");

        $r6 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.MeasureCallback measureCallback>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public int hashCode()
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r0;
        androidx.health.services.client.data.DataType $r1;
        androidx.health.services.client.MeasureCallback $r2;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        $r1 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.data.DataType dataType>;

        i2 = virtualinvoke $r1.<androidx.health.services.client.data.DataType: int hashCode()>();

        $i0 = i2 * 31;

        $r2 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.MeasureCallback measureCallback>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i3 = $i0 + $i1;

        return i3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        androidx.health.services.client.data.DataType $r3, $r4;
        androidx.health.services.client.MeasureCallback $r5, $r6;

        r0 := @this: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey) r1;

        $r4 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.data.DataType dataType>;

        $r3 = r2.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.data.DataType dataType>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.MeasureCallback measureCallback>;

        $r5 = r2.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackKey: androidx.health.services.client.MeasureCallback measureCallback>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

androidx.health.services.client.impl.MeasureCallbackStub$WhenMappings
<androidx.health.services.client.impl.MeasureCallbackStub$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase $r2, $r3, $r4;
        java.lang.Throwable $r5, $r6, $r7, r8, r9, r10;

        $r1 = staticinvoke <androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase: androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label01:
        $r2 = <androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase: androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase DATA_POINT_RESPONSE>;

        $i1 = virtualinvoke $r2.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase: int ordinal()>();

        r0[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r5 := @caughtexception;

        r8 = $r5;

     label04:
        $r3 = <androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase: androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase AVAILABILITY_RESPONSE>;

        $i2 = virtualinvoke $r3.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase: int ordinal()>();

        r0[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r7 := @caughtexception;

        r9 = $r7;

     label07:
        $r4 = <androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase: androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase EVENT_NOT_SET>;

        $i3 = virtualinvoke $r4.<androidx.health.services.client.proto.EventsProto$MeasureCallbackEvent$EventCase: int ordinal()>();

        r0[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        r10 = $r6;

     label10:
        <androidx.health.services.client.impl.MeasureCallbackStub$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }

