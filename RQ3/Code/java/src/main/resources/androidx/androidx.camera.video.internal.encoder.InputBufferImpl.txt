androidx.camera.video.internal.encoder.InputBufferImpl
<androidx.camera.video.internal.encoder.InputBufferImpl: android.media.MediaCodec mMediaCodec>
<androidx.camera.video.internal.encoder.InputBufferImpl: int mBufferIndex>
<androidx.camera.video.internal.encoder.InputBufferImpl: java.nio.ByteBuffer mByteBuffer>
<androidx.camera.video.internal.encoder.InputBufferImpl: com.google.common.util.concurrent.ListenableFuture mTerminationFuture>
<androidx.camera.video.internal.encoder.InputBufferImpl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter>
<androidx.camera.video.internal.encoder.InputBufferImpl: java.util.concurrent.atomic.AtomicBoolean mTerminated>
<androidx.camera.video.internal.encoder.InputBufferImpl: long mPresentationTimeUs>
<androidx.camera.video.internal.encoder.InputBufferImpl: boolean mIsEndOfStream>
    void <init>(android.media.MediaCodec, int) throws android.media.MediaCodec$CodecException
    {
        androidx.camera.video.internal.encoder.InputBufferImpl r0;
        android.media.MediaCodec r1, $r5;
        int i0, $i1;
        java.util.concurrent.atomic.AtomicReference r2, $r7;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        java.lang.Object $r4, $r10, $r12;
        java.nio.ByteBuffer $r6;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r8;
        com.google.common.util.concurrent.ListenableFuture $r9;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r11, $r13;

        r0 := @this: androidx.camera.video.internal.encoder.InputBufferImpl;

        r1 := @parameter0: android.media.MediaCodec;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: java.util.concurrent.atomic.AtomicBoolean mTerminated> = $r3;

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: long mPresentationTimeUs> = 0L;

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: boolean mIsEndOfStream> = 0;

        $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (android.media.MediaCodec) $r4;

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: android.media.MediaCodec mMediaCodec> = $r5;

        $i1 = staticinvoke <androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: int mBufferIndex> = $i1;

        $r6 = virtualinvoke r1.<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)>(i0);

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: java.nio.ByteBuffer mByteBuffer> = $r6;

        $r7 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r2 = $r7;

        $r8 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (java.util.concurrent.atomic.AtomicReference)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.video.internal.encoder.InputBufferImpl: java.lang.Object lambda$new$0(java.util.concurrent.atomic.AtomicReference,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r9 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r8);

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: com.google.common.util.concurrent.ListenableFuture mTerminationFuture> = $r9;

        $r10 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r11 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r10;

        $r12 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        $r13 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r12;

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter> = $r13;

        return;
    }

    public java.nio.ByteBuffer getByteBuffer()
    {
        androidx.camera.video.internal.encoder.InputBufferImpl r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: androidx.camera.video.internal.encoder.InputBufferImpl;

        specialinvoke r0.<androidx.camera.video.internal.encoder.InputBufferImpl: void throwIfTerminated()>();

        $r1 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: java.nio.ByteBuffer mByteBuffer>;

        return $r1;
    }

    public void setPresentationTimeUs(long)
    {
        androidx.camera.video.internal.encoder.InputBufferImpl r0;
        long l0;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.camera.video.internal.encoder.InputBufferImpl;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.camera.video.internal.encoder.InputBufferImpl: void throwIfTerminated()>();

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z0);

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: long mPresentationTimeUs> = l0;

        return;
    }

    public void setEndOfStream(boolean)
    {
        androidx.camera.video.internal.encoder.InputBufferImpl r0;
        boolean z0;

        r0 := @this: androidx.camera.video.internal.encoder.InputBufferImpl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.camera.video.internal.encoder.InputBufferImpl: void throwIfTerminated()>();

        r0.<androidx.camera.video.internal.encoder.InputBufferImpl: boolean mIsEndOfStream> = z0;

        return;
    }

    public boolean submit()
    {
        androidx.camera.video.internal.encoder.InputBufferImpl r0;
        java.lang.Throwable r1, $r7;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0, $z1;
        java.nio.ByteBuffer $r3, $r5;
        android.media.MediaCodec $r4;
        int $i0, $i1, $i2;
        long $l3;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r6, $r8;
        byte $b4;

        r0 := @this: androidx.camera.video.internal.encoder.InputBufferImpl;

        $r2 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: java.util.concurrent.atomic.AtomicBoolean mTerminated>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: android.media.MediaCodec mMediaCodec>;

        $i0 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: int mBufferIndex>;

        $r3 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: java.nio.ByteBuffer mByteBuffer>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $r5 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: java.nio.ByteBuffer mByteBuffer>;

        $i2 = virtualinvoke $r5.<java.nio.ByteBuffer: int limit()>();

        $l3 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: long mPresentationTimeUs>;

        $z1 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: boolean mIsEndOfStream>;

        if $z1 == 0 goto label2;

        $b4 = 4;

        goto label3;

     label2:
        $b4 = 0;

     label3:
        virtualinvoke $r4.<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>($i0, $i1, $i2, $l3, $b4);

        $r6 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter>;

        virtualinvoke $r6.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(null);

     label4:
        return 1;

     label5:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter>;

        virtualinvoke $r8.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>(r1);

        return 0;

        catch java.lang.IllegalStateException from label1 to label4 with label5;
    }

    public boolean cancel()
    {
        androidx.camera.video.internal.encoder.InputBufferImpl r0;
        java.lang.Throwable r1, $r5;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        int $i0;
        android.media.MediaCodec $r3;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r4, $r6;

        r0 := @this: androidx.camera.video.internal.encoder.InputBufferImpl;

        $r2 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: java.util.concurrent.atomic.AtomicBoolean mTerminated>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: android.media.MediaCodec mMediaCodec>;

        $i0 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: int mBufferIndex>;

        virtualinvoke $r3.<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>($i0, 0, 0, 0L, 0);

        $r4 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter>;

        virtualinvoke $r4.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(null);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter>;

        virtualinvoke $r6.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>(r1);

     label4:
        return 1;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public com.google.common.util.concurrent.ListenableFuture getTerminationFuture()
    {
        androidx.camera.video.internal.encoder.InputBufferImpl r0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r2;

        r0 := @this: androidx.camera.video.internal.encoder.InputBufferImpl;

        $r1 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: com.google.common.util.concurrent.ListenableFuture mTerminationFuture>;

        $r2 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)>($r1);

        return $r2;
    }

    private void throwIfTerminated()
    {
        androidx.camera.video.internal.encoder.InputBufferImpl r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: androidx.camera.video.internal.encoder.InputBufferImpl;

        $r1 = r0.<androidx.camera.video.internal.encoder.InputBufferImpl: java.util.concurrent.atomic.AtomicBoolean mTerminated>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The buffer is submitted or canceled.");

        throw $r2;

     label1:
        return;
    }

    private static java.lang.Object lambda$new$0(java.util.concurrent.atomic.AtomicReference, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        java.util.concurrent.atomic.AtomicReference r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        r1 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r1);

        return "Terminate InputBuffer";
    }

