androidx.ui.core.Placeable
<androidx.ui.core.Placeable: int width>
<androidx.ui.core.Placeable: int height>
<androidx.ui.core.Placeable: androidx.ui.unit.IntSize measuredSize>
<androidx.ui.core.Placeable: androidx.ui.core.Constraints measurementConstraints>
    public void <init>()
    {
        androidx.ui.core.Placeable r0;
        androidx.ui.unit.IntSize $r1;
        androidx.ui.core.Constraints $r2;

        r0 := @this: androidx.ui.core.Placeable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>(0, 0);

        r0.<androidx.ui.core.Placeable: androidx.ui.unit.IntSize measuredSize> = $r1;

        $r2 = staticinvoke <androidx.ui.core.ConstraintsKt: androidx.ui.core.Constraints Constraints$default(int,int,int,int,int,java.lang.Object)>(0, 0, 0, 0, 15, null);

        r0.<androidx.ui.core.Placeable: androidx.ui.core.Constraints measurementConstraints> = $r2;

        return;
    }

    public final int getWidth()
    {
        androidx.ui.core.Placeable r0;
        int $i0;

        r0 := @this: androidx.ui.core.Placeable;

        $i0 = r0.<androidx.ui.core.Placeable: int width>;

        return $i0;
    }

    public final int getHeight()
    {
        androidx.ui.core.Placeable r0;
        int $i0;

        r0 := @this: androidx.ui.core.Placeable;

        $i0 = r0.<androidx.ui.core.Placeable: int height>;

        return $i0;
    }

<androidx.ui.core.Placeable: int get(androidx.ui.core.AlignmentLine)>
    protected final androidx.ui.unit.IntSize getMeasuredSize()
    {
        androidx.ui.core.Placeable r0;
        androidx.ui.unit.IntSize $r1;

        r0 := @this: androidx.ui.core.Placeable;

        $r1 = r0.<androidx.ui.core.Placeable: androidx.ui.unit.IntSize measuredSize>;

        return $r1;
    }

    protected final void setMeasuredSize(androidx.ui.unit.IntSize)
    {
        androidx.ui.core.Placeable r0;
        androidx.ui.unit.IntSize r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.ui.core.Constraints $r2, $r3, $r4, $r5;

        r0 := @this: androidx.ui.core.Placeable;

        r1 := @parameter0: androidx.ui.unit.IntSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r0.<androidx.ui.core.Placeable: androidx.ui.unit.IntSize measuredSize> = r1;

        $i0 = virtualinvoke r1.<androidx.ui.unit.IntSize: int getWidth()>();

        $r2 = virtualinvoke r0.<androidx.ui.core.Placeable: androidx.ui.core.Constraints getMeasurementConstraints()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.Constraints: int getMinWidth()>();

        $r3 = virtualinvoke r0.<androidx.ui.core.Placeable: androidx.ui.core.Constraints getMeasurementConstraints()>();

        $i2 = virtualinvoke $r3.<androidx.ui.core.Constraints: int getMaxWidth()>();

        $i3 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i0, $i1, $i2);

        r0.<androidx.ui.core.Placeable: int width> = $i3;

        $i4 = virtualinvoke r1.<androidx.ui.unit.IntSize: int getHeight()>();

        $r4 = virtualinvoke r0.<androidx.ui.core.Placeable: androidx.ui.core.Constraints getMeasurementConstraints()>();

        $i5 = virtualinvoke $r4.<androidx.ui.core.Constraints: int getMinHeight()>();

        $r5 = virtualinvoke r0.<androidx.ui.core.Placeable: androidx.ui.core.Constraints getMeasurementConstraints()>();

        $i6 = virtualinvoke $r5.<androidx.ui.core.Constraints: int getMaxHeight()>();

        $i7 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i4, $i5, $i6);

        r0.<androidx.ui.core.Placeable: int height> = $i7;

        return;
    }

    public final int getMeasuredWidth$ui_core_release()
    {
        androidx.ui.core.Placeable r0;
        androidx.ui.unit.IntSize $r1;
        int $i0;

        r0 := @this: androidx.ui.core.Placeable;

        $r1 = virtualinvoke r0.<androidx.ui.core.Placeable: androidx.ui.unit.IntSize getMeasuredSize()>();

        $i0 = virtualinvoke $r1.<androidx.ui.unit.IntSize: int getWidth()>();

        return $i0;
    }

    public final int getMeasuredHeight$ui_core_release()
    {
        androidx.ui.core.Placeable r0;
        androidx.ui.unit.IntSize $r1;
        int $i0;

        r0 := @this: androidx.ui.core.Placeable;

        $r1 = virtualinvoke r0.<androidx.ui.core.Placeable: androidx.ui.unit.IntSize getMeasuredSize()>();

        $i0 = virtualinvoke $r1.<androidx.ui.unit.IntSize: int getHeight()>();

        return $i0;
    }

<androidx.ui.core.Placeable: void place(androidx.ui.unit.IntOffset)>
    protected final androidx.ui.core.Constraints getMeasurementConstraints()
    {
        androidx.ui.core.Placeable r0;
        androidx.ui.core.Constraints $r1;

        r0 := @this: androidx.ui.core.Placeable;

        $r1 = r0.<androidx.ui.core.Placeable: androidx.ui.core.Constraints measurementConstraints>;

        return $r1;
    }

    protected final void setMeasurementConstraints(androidx.ui.core.Constraints)
    {
        androidx.ui.core.Placeable r0;
        androidx.ui.core.Constraints r1;

        r0 := @this: androidx.ui.core.Placeable;

        r1 := @parameter0: androidx.ui.core.Constraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.Placeable: androidx.ui.core.Constraints measurementConstraints> = r1;

        return;
    }

    protected final androidx.ui.unit.IntOffset getApparentToRealOffset()
    {
        androidx.ui.core.Placeable r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9;
        long l2, l3, $l10, $l11, $l12, $l13;
        androidx.ui.unit.IntSize $r1, $r2;
        androidx.ui.unit.IntOffset $r3;

        r0 := @this: androidx.ui.core.Placeable;

        $i4 = virtualinvoke r0.<androidx.ui.core.Placeable: int getWidth()>();

        $r1 = virtualinvoke r0.<androidx.ui.core.Placeable: androidx.ui.unit.IntSize getMeasuredSize()>();

        $i5 = virtualinvoke $r1.<androidx.ui.unit.IntSize: int getWidth()>();

        $i6 = $i4 - $i5;

        i0 = $i6 / 2;

        $i7 = virtualinvoke r0.<androidx.ui.core.Placeable: int getHeight()>();

        $r2 = virtualinvoke r0.<androidx.ui.core.Placeable: androidx.ui.unit.IntSize getMeasuredSize()>();

        $i8 = virtualinvoke $r2.<androidx.ui.unit.IntSize: int getHeight()>();

        $i9 = $i7 - $i8;

        i1 = $i9 / 2;

        $l10 = (long) i0;

        $l13 = $l10 << 32;

        $l11 = (long) i1;

        $l12 = $l11 & 4294967295L;

        l2 = $l13 | $l12;

        l3 = l2;

        $r3 = new androidx.ui.unit.IntOffset;

        specialinvoke $r3.<androidx.ui.unit.IntOffset: void <init>(long)>(l3);

        return $r3;
    }

androidx.ui.core.Placeable$PlacementScope
    public void <init>()
    {
        androidx.ui.core.Placeable$PlacementScope r0;

        r0 := @this: androidx.ui.core.Placeable$PlacementScope;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.ui.core.Placeable$PlacementScope: int getParentWidth()>
<androidx.ui.core.Placeable$PlacementScope: androidx.ui.core.LayoutDirection getParentLayoutDirection()>
    public final void place(androidx.ui.core.Placeable, androidx.ui.unit.IntOffset)
    {
        androidx.ui.core.Placeable$PlacementScope r0;
        androidx.ui.core.Placeable $r1;
        androidx.ui.unit.IntOffset r2;

        r0 := @this: androidx.ui.core.Placeable$PlacementScope;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        r2 := @parameter1: androidx.ui.unit.IntOffset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "position");

        specialinvoke r0.<androidx.ui.core.Placeable$PlacementScope: void placeAutoMirrored(androidx.ui.core.Placeable,androidx.ui.unit.IntOffset)>($r1, r2);

        return;
    }

    public final void place(androidx.ui.core.Placeable, androidx.ui.geometry.Offset)
    {
        androidx.ui.core.Placeable$PlacementScope r0, r4;
        androidx.ui.core.Placeable $r1, r5;
        androidx.ui.geometry.Offset r2;
        int i0, i1;
        long l2, l3, $l4, $l5, $l6, $l7;
        androidx.ui.unit.IntOffset r6, $r7;
        float $f0, $f1;

        r0 := @this: androidx.ui.core.Placeable$PlacementScope;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "position");

        r5 = $r1;

        r4 = r0;

        $f0 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        i0 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f0);

        $f1 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        $l4 = (long) i0;

        $l7 = $l4 << 32;

        $l5 = (long) i1;

        $l6 = $l5 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r7 = new androidx.ui.unit.IntOffset;

        specialinvoke $r7.<androidx.ui.unit.IntOffset: void <init>(long)>(l3);

        r6 = $r7;

        specialinvoke r4.<androidx.ui.core.Placeable$PlacementScope: void placeAutoMirrored(androidx.ui.core.Placeable,androidx.ui.unit.IntOffset)>(r5, r6);

        return;
    }

    public final void place(androidx.ui.core.Placeable, int, int)
    {
        androidx.ui.core.Placeable$PlacementScope r0, r2;
        androidx.ui.core.Placeable $r1, r3;
        int i0, i1;
        long l2, l3, $l4, $l5, $l6, $l7;
        androidx.ui.unit.IntOffset r4, $r5;

        r0 := @this: androidx.ui.core.Placeable$PlacementScope;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r3 = $r1;

        r2 = r0;

        $l4 = (long) i0;

        $l7 = $l4 << 32;

        $l5 = (long) i1;

        $l6 = $l5 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r5 = new androidx.ui.unit.IntOffset;

        specialinvoke $r5.<androidx.ui.unit.IntOffset: void <init>(long)>(l3);

        r4 = $r5;

        specialinvoke r2.<androidx.ui.core.Placeable$PlacementScope: void placeAutoMirrored(androidx.ui.core.Placeable,androidx.ui.unit.IntOffset)>(r3, r4);

        return;
    }

    public final void placeAbsolute(androidx.ui.core.Placeable, androidx.ui.geometry.Offset)
    {
        androidx.ui.core.Placeable$PlacementScope r0, r4;
        androidx.ui.core.Placeable $r1, r5;
        androidx.ui.geometry.Offset r2;
        int i0, i1;
        long l2, l3, $l4, $l5, $l6, $l7;
        androidx.ui.unit.IntOffset r6, $r7;
        float $f0, $f1;

        r0 := @this: androidx.ui.core.Placeable$PlacementScope;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "position");

        r5 = $r1;

        r4 = r0;

        $f0 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        i0 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f0);

        $f1 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        $l4 = (long) i0;

        $l7 = $l4 << 32;

        $l5 = (long) i1;

        $l6 = $l5 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r7 = new androidx.ui.unit.IntOffset;

        specialinvoke $r7.<androidx.ui.unit.IntOffset: void <init>(long)>(l3);

        r6 = $r7;

        virtualinvoke r4.<androidx.ui.core.Placeable$PlacementScope: void placeAbsolute(androidx.ui.core.Placeable,androidx.ui.unit.IntOffset)>(r5, r6);

        return;
    }

    public final void placeAbsolute(androidx.ui.core.Placeable, int, int)
    {
        androidx.ui.core.Placeable$PlacementScope r0, r2;
        androidx.ui.core.Placeable $r1, r3;
        int i0, i1;
        long l2, l3, $l4, $l5, $l6, $l7;
        androidx.ui.unit.IntOffset r4, $r5;

        r0 := @this: androidx.ui.core.Placeable$PlacementScope;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r3 = $r1;

        r2 = r0;

        $l4 = (long) i0;

        $l7 = $l4 << 32;

        $l5 = (long) i1;

        $l6 = $l5 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r5 = new androidx.ui.unit.IntOffset;

        specialinvoke $r5.<androidx.ui.unit.IntOffset: void <init>(long)>(l3);

        r4 = $r5;

        virtualinvoke r2.<androidx.ui.core.Placeable$PlacementScope: void placeAbsolute(androidx.ui.core.Placeable,androidx.ui.unit.IntOffset)>(r3, r4);

        return;
    }

    public final void placeAbsolute(androidx.ui.core.Placeable, androidx.ui.unit.IntOffset)
    {
        androidx.ui.core.Placeable$PlacementScope r0;
        androidx.ui.core.Placeable $r1, r5;
        androidx.ui.unit.IntOffset r2, r3, r4, r6, $r7;
        int i0, i1, $i4, $i5, $i6, $i7;
        long l2, l3, $l8, $l9, $l10, $l11;

        r0 := @this: androidx.ui.core.Placeable$PlacementScope;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        r2 := @parameter1: androidx.ui.unit.IntOffset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "position");

        r3 = r2;

        r4 = virtualinvoke $r1.<androidx.ui.core.Placeable: androidx.ui.unit.IntOffset getApparentToRealOffset()>();

        r5 = $r1;

        $i4 = virtualinvoke r3.<androidx.ui.unit.IntOffset: int getX()>();

        $i5 = virtualinvoke r4.<androidx.ui.unit.IntOffset: int getX()>();

        i0 = $i4 + $i5;

        $i6 = virtualinvoke r3.<androidx.ui.unit.IntOffset: int getY()>();

        $i7 = virtualinvoke r4.<androidx.ui.unit.IntOffset: int getY()>();

        i1 = $i6 + $i7;

        $l8 = (long) i0;

        $l11 = $l8 << 32;

        $l9 = (long) i1;

        $l10 = $l9 & 4294967295L;

        l2 = $l11 | $l10;

        l3 = l2;

        $r7 = new androidx.ui.unit.IntOffset;

        specialinvoke $r7.<androidx.ui.unit.IntOffset: void <init>(long)>(l3);

        r6 = $r7;

        virtualinvoke r5.<androidx.ui.core.Placeable: void place(androidx.ui.unit.IntOffset)>(r6);

        return;
    }

    private final void placeAutoMirrored(androidx.ui.core.Placeable, androidx.ui.unit.IntOffset)
    {
        androidx.ui.core.Placeable$PlacementScope r0, r3;
        androidx.ui.core.Placeable $r1, r4;
        androidx.ui.unit.IntOffset r2, r5, $r9;
        int i0, i1, $i4, $i5, $i6, $i7, $i8;
        long l2, l3, $l9, $l10, $l11, $l12;
        androidx.ui.core.LayoutDirection $r6, $r7;
        boolean $z2;
        androidx.ui.unit.IntSize $r8;

        r0 := @this: androidx.ui.core.Placeable$PlacementScope;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        r2 := @parameter1: androidx.ui.unit.IntOffset;

        $r6 = virtualinvoke r0.<androidx.ui.core.Placeable$PlacementScope: androidx.ui.core.LayoutDirection getParentLayoutDirection()>();

        $r7 = <androidx.ui.core.LayoutDirection: androidx.ui.core.LayoutDirection Ltr>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z2 != 0 goto label1;

        $i4 = virtualinvoke r0.<androidx.ui.core.Placeable$PlacementScope: int getParentWidth()>();

        if $i4 != 0 goto label2;

     label1:
        virtualinvoke r0.<androidx.ui.core.Placeable$PlacementScope: void placeAbsolute(androidx.ui.core.Placeable,androidx.ui.unit.IntOffset)>($r1, r2);

        goto label3;

     label2:
        $i5 = virtualinvoke r0.<androidx.ui.core.Placeable$PlacementScope: int getParentWidth()>();

        $r8 = virtualinvoke $r1.<androidx.ui.core.Placeable: androidx.ui.unit.IntSize getMeasuredSize()>();

        $i6 = virtualinvoke $r8.<androidx.ui.unit.IntSize: int getWidth()>();

        $i7 = $i5 - $i6;

        $i8 = virtualinvoke r2.<androidx.ui.unit.IntOffset: int getX()>();

        i0 = $i7 - $i8;

        i1 = virtualinvoke r2.<androidx.ui.unit.IntOffset: int getY()>();

        r4 = $r1;

        r3 = r0;

        $l9 = (long) i0;

        $l12 = $l9 << 32;

        $l10 = (long) i1;

        $l11 = $l10 & 4294967295L;

        l2 = $l12 | $l11;

        l3 = l2;

        $r9 = new androidx.ui.unit.IntOffset;

        specialinvoke $r9.<androidx.ui.unit.IntOffset: void <init>(long)>(l3);

        r5 = $r9;

        virtualinvoke r3.<androidx.ui.core.Placeable$PlacementScope: void placeAbsolute(androidx.ui.core.Placeable,androidx.ui.unit.IntOffset)>(r4, r5);

     label3:
        return;
    }

