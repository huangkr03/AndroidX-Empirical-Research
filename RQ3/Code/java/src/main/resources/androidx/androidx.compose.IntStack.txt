androidx.compose.IntStack
<androidx.compose.IntStack: int[] slots>
<androidx.compose.IntStack: int tos>
    public void <init>()
    {
        androidx.compose.IntStack r0;
        int[] $r1;

        r0 := @this: androidx.compose.IntStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[10];

        r0.<androidx.compose.IntStack: int[] slots> = $r1;

        return;
    }

    public final int getSize()
    {
        androidx.compose.IntStack r0;
        int $i0;

        r0 := @this: androidx.compose.IntStack;

        $i0 = r0.<androidx.compose.IntStack: int tos>;

        return $i0;
    }

    public final void push(int)
    {
        androidx.compose.IntStack r0, r1, r8;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        boolean z0;
        int[] r2, $r3, $r4, $r5, $r6, r7;

        r0 := @this: androidx.compose.IntStack;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.compose.IntStack: int tos>;

        $r3 = r0.<androidx.compose.IntStack: int[] slots>;

        $i1 = lengthof $r3;

        if $i2 < $i1 goto label1;

        r7 = r0.<androidx.compose.IntStack: int[] slots>;

        $r5 = r0.<androidx.compose.IntStack: int[] slots>;

        $i4 = lengthof $r5;

        i5 = $i4 * 2;

        r1 = r0;

        z0 = 0;

        $r6 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r7, i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r6, "java.util.Arrays.copyOf(this, newSize)");

        r2 = $r6;

        r1.<androidx.compose.IntStack: int[] slots> = r2;

     label1:
        $r4 = r0.<androidx.compose.IntStack: int[] slots>;

        r8 = r0;

        i6 = r8.<androidx.compose.IntStack: int tos>;

        $i3 = i6 + 1;

        r8.<androidx.compose.IntStack: int tos> = $i3;

        $r4[i6] = i0;

        return;
    }

    public final int pop()
    {
        androidx.compose.IntStack r0, r1;
        int $i0, $i1, $i2, $i3;
        int[] $r2;

        r0 := @this: androidx.compose.IntStack;

        $r2 = r0.<androidx.compose.IntStack: int[] slots>;

        r1 = r0;

        $i0 = r1.<androidx.compose.IntStack: int tos>;

        $i1 = $i0 + -1;

        r1.<androidx.compose.IntStack: int tos> = $i1;

        $i2 = r1.<androidx.compose.IntStack: int tos>;

        $i3 = $r2[$i2];

        return $i3;
    }

    public final int peekOr(int)
    {
        androidx.compose.IntStack r0;
        int i0, $i1, $i2;

        r0 := @this: androidx.compose.IntStack;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.compose.IntStack: int tos>;

        if $i1 <= 0 goto label1;

        $i2 = virtualinvoke r0.<androidx.compose.IntStack: int peek()>();

        goto label2;

     label1:
        $i2 = i0;

     label2:
        return $i2;
    }

    public final int peek()
    {
        androidx.compose.IntStack r0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: androidx.compose.IntStack;

        $r1 = r0.<androidx.compose.IntStack: int[] slots>;

        $i0 = r0.<androidx.compose.IntStack: int tos>;

        $i1 = $i0 - 1;

        $i2 = $r1[$i1];

        return $i2;
    }

    public final int peek(int)
    {
        androidx.compose.IntStack r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.compose.IntStack;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.IntStack: int[] slots>;

        $i1 = $r1[i0];

        return $i1;
    }

    public final boolean isEmpty()
    {
        androidx.compose.IntStack r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.IntStack;

        $i0 = r0.<androidx.compose.IntStack: int tos>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isNotEmpty()
    {
        androidx.compose.IntStack r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.IntStack;

        $i0 = r0.<androidx.compose.IntStack: int tos>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void clear()
    {
        androidx.compose.IntStack r0;

        r0 := @this: androidx.compose.IntStack;

        r0.<androidx.compose.IntStack: int tos> = 0;

        return;
    }

