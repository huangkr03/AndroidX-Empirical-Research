androidx.health.connect.client.time.TimeRangeFilter
<androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion>
<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant startTime>
<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant endTime>
<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localStartTime>
<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localEndTime>
    public void <init>(java.time.Instant, java.time.Instant, java.time.LocalDateTime, java.time.LocalDateTime)
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;
        java.time.Instant r1, r2;
        java.time.LocalDateTime r3, r4;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        r1 := @parameter0: java.time.Instant;

        r2 := @parameter1: java.time.Instant;

        r3 := @parameter2: java.time.LocalDateTime;

        r4 := @parameter3: java.time.LocalDateTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant startTime> = r1;

        r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant endTime> = r2;

        r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localStartTime> = r3;

        r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localEndTime> = r4;

        return;
    }

    public void <init>(java.time.Instant, java.time.Instant, java.time.LocalDateTime, java.time.LocalDateTime, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.time.Instant r2, r3;
        java.time.LocalDateTime r4, r5;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        r2 := @parameter0: java.time.Instant;

        r3 := @parameter1: java.time.Instant;

        r4 := @parameter2: java.time.LocalDateTime;

        r5 := @parameter3: java.time.LocalDateTime;

        i0 := @parameter4: int;

        r1 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = null;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = null;

     label4:
        specialinvoke r0.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime)>(r2, r3, r4, r5);

        return;
    }

    public final java.time.Instant getStartTime$health_connect_client_release()
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        $r1 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant startTime>;

        return $r1;
    }

    public final java.time.Instant getEndTime$health_connect_client_release()
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        $r1 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant endTime>;

        return $r1;
    }

    public final java.time.LocalDateTime getLocalStartTime$health_connect_client_release()
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;
        java.time.LocalDateTime $r1;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        $r1 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localStartTime>;

        return $r1;
    }

    public final java.time.LocalDateTime getLocalEndTime$health_connect_client_release()
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;
        java.time.LocalDateTime $r1;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        $r1 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localEndTime>;

        return $r1;
    }

    public final boolean isOpenEnded$health_connect_client_release()
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;
        java.time.LocalDateTime $r1, $r4;
        java.time.Instant $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        $r1 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localStartTime>;

        if $r1 == null goto label1;

        $r4 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localEndTime>;

        if $r4 != null goto label3;

     label1:
        $r2 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant startTime>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant endTime>;

        if $r3 != null goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.time.TimeRangeFilter r0, $r2, $r5, $r8, $r11;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.time.Instant $r3, $r4, $r6, $r7;
        java.time.LocalDateTime $r9, $r10, $r12, $r13;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.connect.client.time.TimeRangeFilter;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant startTime>;

        $r2 = (androidx.health.connect.client.time.TimeRangeFilter) r1;

        $r3 = $r2.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant startTime>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant endTime>;

        $r5 = (androidx.health.connect.client.time.TimeRangeFilter) r1;

        $r6 = $r5.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant endTime>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r10 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localStartTime>;

        $r8 = (androidx.health.connect.client.time.TimeRangeFilter) r1;

        $r9 = $r8.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localStartTime>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r13 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localEndTime>;

        $r11 = (androidx.health.connect.client.time.TimeRangeFilter) r1;

        $r12 = $r11.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localEndTime>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;
        java.time.Instant $r1, $r2;
        int $i0, $i1, $i2, $i3, $i5, i6, $i7, i8, $i9, i10, $i11, i12;
        java.time.LocalDateTime $r3, $r4;
        byte b4;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        b4 = 0;

        $i0 = 31 * b4;

        $r1 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant startTime>;

        if $r1 == null goto label1;

        $i5 = virtualinvoke $r1.<java.time.Instant: int hashCode()>();

        goto label2;

     label1:
        $i5 = 0;

     label2:
        i6 = $i0 + $i5;

        $i1 = 31 * i6;

        $r2 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.Instant endTime>;

        if $r2 == null goto label3;

        $i7 = virtualinvoke $r2.<java.time.Instant: int hashCode()>();

        goto label4;

     label3:
        $i7 = 0;

     label4:
        i8 = $i1 + $i7;

        $i2 = 31 * i8;

        $r3 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localStartTime>;

        if $r3 == null goto label5;

        $i9 = virtualinvoke $r3.<java.time.LocalDateTime: int hashCode()>();

        goto label6;

     label5:
        $i9 = 0;

     label6:
        i10 = $i2 + $i9;

        $i3 = 31 * i10;

        $r4 = r0.<androidx.health.connect.client.time.TimeRangeFilter: java.time.LocalDateTime localEndTime>;

        if $r4 == null goto label7;

        $i11 = virtualinvoke $r4.<java.time.LocalDateTime: int hashCode()>();

        goto label8;

     label7:
        $i11 = 0;

     label8:
        i12 = $i3 + $i11;

        return i12;
    }

    public void <init>()
    {
        androidx.health.connect.client.time.TimeRangeFilter r0;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter;

        specialinvoke r0.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, 15, null);

        return;
    }

    public static final androidx.health.connect.client.time.TimeRangeFilter between(java.time.Instant, java.time.Instant)
    {
        java.time.Instant r0, r1;
        androidx.health.connect.client.time.TimeRangeFilter$Companion $r2;
        androidx.health.connect.client.time.TimeRangeFilter $r3;

        r0 := @parameter0: java.time.Instant;

        r1 := @parameter1: java.time.Instant;

        $r2 = <androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.health.connect.client.time.TimeRangeFilter$Companion: androidx.health.connect.client.time.TimeRangeFilter between(java.time.Instant,java.time.Instant)>(r0, r1);

        return $r3;
    }

    public static final androidx.health.connect.client.time.TimeRangeFilter between(java.time.LocalDateTime, java.time.LocalDateTime)
    {
        java.time.LocalDateTime r0, r1;
        androidx.health.connect.client.time.TimeRangeFilter$Companion $r2;
        androidx.health.connect.client.time.TimeRangeFilter $r3;

        r0 := @parameter0: java.time.LocalDateTime;

        r1 := @parameter1: java.time.LocalDateTime;

        $r2 = <androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.health.connect.client.time.TimeRangeFilter$Companion: androidx.health.connect.client.time.TimeRangeFilter between(java.time.LocalDateTime,java.time.LocalDateTime)>(r0, r1);

        return $r3;
    }

    public static final androidx.health.connect.client.time.TimeRangeFilter before(java.time.Instant)
    {
        java.time.Instant r0;
        androidx.health.connect.client.time.TimeRangeFilter$Companion $r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;

        r0 := @parameter0: java.time.Instant;

        $r1 = <androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.health.connect.client.time.TimeRangeFilter$Companion: androidx.health.connect.client.time.TimeRangeFilter before(java.time.Instant)>(r0);

        return $r2;
    }

    public static final androidx.health.connect.client.time.TimeRangeFilter before(java.time.LocalDateTime)
    {
        java.time.LocalDateTime r0;
        androidx.health.connect.client.time.TimeRangeFilter$Companion $r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;

        r0 := @parameter0: java.time.LocalDateTime;

        $r1 = <androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.health.connect.client.time.TimeRangeFilter$Companion: androidx.health.connect.client.time.TimeRangeFilter before(java.time.LocalDateTime)>(r0);

        return $r2;
    }

    public static final androidx.health.connect.client.time.TimeRangeFilter after(java.time.Instant)
    {
        java.time.Instant r0;
        androidx.health.connect.client.time.TimeRangeFilter$Companion $r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;

        r0 := @parameter0: java.time.Instant;

        $r1 = <androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.health.connect.client.time.TimeRangeFilter$Companion: androidx.health.connect.client.time.TimeRangeFilter after(java.time.Instant)>(r0);

        return $r2;
    }

    public static final androidx.health.connect.client.time.TimeRangeFilter after(java.time.LocalDateTime)
    {
        java.time.LocalDateTime r0;
        androidx.health.connect.client.time.TimeRangeFilter$Companion $r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;

        r0 := @parameter0: java.time.LocalDateTime;

        $r1 = <androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.health.connect.client.time.TimeRangeFilter$Companion: androidx.health.connect.client.time.TimeRangeFilter after(java.time.LocalDateTime)>(r0);

        return $r2;
    }

    public static final androidx.health.connect.client.time.TimeRangeFilter none$health_connect_client_release()
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion $r0;
        androidx.health.connect.client.time.TimeRangeFilter $r1;

        $r0 = <androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.time.TimeRangeFilter$Companion: androidx.health.connect.client.time.TimeRangeFilter none$health_connect_client_release()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion $r0;

        $r0 = new androidx.health.connect.client.time.TimeRangeFilter$Companion;

        specialinvoke $r0.<androidx.health.connect.client.time.TimeRangeFilter$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.connect.client.time.TimeRangeFilter: androidx.health.connect.client.time.TimeRangeFilter$Companion Companion> = $r0;

        return;
    }

androidx.health.connect.client.time.TimeRangeFilter$Companion
    private void <init>()
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.health.connect.client.time.TimeRangeFilter between(java.time.Instant, java.time.Instant)
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;
        java.time.Instant r1, r2;
        boolean $z0;
        androidx.health.connect.client.time.TimeRangeFilter $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, $r6;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        r1 := @parameter0: java.time.Instant;

        r2 := @parameter1: java.time.Instant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "startTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "endTime");

        $z0 = virtualinvoke r1.<java.time.Instant: boolean isBefore(java.time.Instant)>(r2);

        if $z0 != 0 goto label1;

        $r6 = "end time needs be after start time";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r3 = new androidx.health.connect.client.time.TimeRangeFilter;

        specialinvoke $r3.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, null, null, 12, null);

        return $r3;
    }

    public final androidx.health.connect.client.time.TimeRangeFilter between(java.time.LocalDateTime, java.time.LocalDateTime)
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;
        java.time.LocalDateTime r1, r2;
        java.time.chrono.ChronoLocalDateTime $r3;
        boolean $z0;
        androidx.health.connect.client.time.TimeRangeFilter $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6, $r7;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        r1 := @parameter0: java.time.LocalDateTime;

        r2 := @parameter1: java.time.LocalDateTime;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "startTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "endTime");

        $r3 = (java.time.chrono.ChronoLocalDateTime) r2;

        $z0 = virtualinvoke r1.<java.time.LocalDateTime: boolean isBefore(java.time.chrono.ChronoLocalDateTime)>($r3);

        if $z0 != 0 goto label1;

        $r7 = "end time needs be after start time";

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        $r4 = new androidx.health.connect.client.time.TimeRangeFilter;

        specialinvoke $r4.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime)>(null, null, r1, r2);

        return $r4;
    }

    public final androidx.health.connect.client.time.TimeRangeFilter before(java.time.Instant)
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;
        java.time.Instant r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        r1 := @parameter0: java.time.Instant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "endTime");

        $r2 = new androidx.health.connect.client.time.TimeRangeFilter;

        specialinvoke $r2.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, r1, null, null, 12, null);

        return $r2;
    }

    public final androidx.health.connect.client.time.TimeRangeFilter before(java.time.LocalDateTime)
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;
        java.time.LocalDateTime r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        r1 := @parameter0: java.time.LocalDateTime;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "endTime");

        $r2 = new androidx.health.connect.client.time.TimeRangeFilter;

        specialinvoke $r2.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime)>(null, null, null, r1);

        return $r2;
    }

    public final androidx.health.connect.client.time.TimeRangeFilter after(java.time.Instant)
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;
        java.time.Instant r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        r1 := @parameter0: java.time.Instant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "startTime");

        $r2 = new androidx.health.connect.client.time.TimeRangeFilter;

        specialinvoke $r2.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, null, null, 14, null);

        return $r2;
    }

    public final androidx.health.connect.client.time.TimeRangeFilter after(java.time.LocalDateTime)
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;
        java.time.LocalDateTime r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        r1 := @parameter0: java.time.LocalDateTime;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "startTime");

        $r2 = new androidx.health.connect.client.time.TimeRangeFilter;

        specialinvoke $r2.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, r1, null, 8, null);

        return $r2;
    }

    public final androidx.health.connect.client.time.TimeRangeFilter none$health_connect_client_release()
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;
        androidx.health.connect.client.time.TimeRangeFilter $r1;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        $r1 = new androidx.health.connect.client.time.TimeRangeFilter;

        specialinvoke $r1.<androidx.health.connect.client.time.TimeRangeFilter: void <init>(java.time.Instant,java.time.Instant,java.time.LocalDateTime,java.time.LocalDateTime,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, 15, null);

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.time.TimeRangeFilter$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.connect.client.time.TimeRangeFilter$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.time.TimeRangeFilter$Companion: void <init>()>();

        return;
    }

