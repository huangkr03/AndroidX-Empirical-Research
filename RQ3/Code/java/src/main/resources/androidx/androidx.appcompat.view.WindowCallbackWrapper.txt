androidx.appcompat.view.WindowCallbackWrapper
<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>
    public void <init>(android.view.Window$Callback)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.Window$Callback r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.Window$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Window callback may not be null");

        throw $r2;

     label1:
        r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped> = r1;

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.KeyEvent r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z0;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.KeyEvent r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        return $z0;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z0;
    }

    public android.view.View onCreatePanelView(int)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        int i0;
        android.view.Window$Callback $r1;
        android.view.View $r2;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $r2 = interfaceinvoke $r1.<android.view.Window$Callback: android.view.View onCreatePanelView(int)>(i0);

        return $r2;
    }

    public boolean onCreatePanelMenu(int, android.view.Menu)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        int i0;
        android.view.Menu r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean onCreatePanelMenu(int,android.view.Menu)>(i0, r1);

        return $z0;
    }

    public boolean onPreparePanel(int, android.view.View, android.view.Menu)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        int i0;
        android.view.View r1;
        android.view.Menu r2;
        android.view.Window$Callback $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.Menu;

        $r3 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r3.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(i0, r1, r2);

        return $z0;
    }

    public boolean onMenuOpened(int, android.view.Menu)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        int i0;
        android.view.Menu r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>(i0, r1);

        return $z0;
    }

    public boolean onMenuItemSelected(int, android.view.MenuItem)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        int i0;
        android.view.MenuItem r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MenuItem;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r2.<android.view.Window$Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>(i0, r1);

        return $z0;
    }

    public void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.WindowManager$LayoutParams r1;
        android.view.Window$Callback $r2;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        interfaceinvoke $r2.<android.view.Window$Callback: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>(r1);

        return;
    }

    public void onContentChanged()
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.Window$Callback $r1;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        $r1 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        interfaceinvoke $r1.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        boolean z0;
        android.view.Window$Callback $r1;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        interfaceinvoke $r1.<android.view.Window$Callback: void onWindowFocusChanged(boolean)>(z0);

        return;
    }

    public void onAttachedToWindow()
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.Window$Callback $r1;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        $r1 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        interfaceinvoke $r1.<android.view.Window$Callback: void onAttachedToWindow()>();

        return;
    }

    public void onDetachedFromWindow()
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.Window$Callback $r1;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        $r1 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        interfaceinvoke $r1.<android.view.Window$Callback: void onDetachedFromWindow()>();

        return;
    }

    public void onPanelClosed(int, android.view.Menu)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        int i0;
        android.view.Menu r1;
        android.view.Window$Callback $r2;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        interfaceinvoke $r2.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(i0, r1);

        return;
    }

    public boolean onSearchRequested(android.view.SearchEvent)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.SearchEvent r1;
        android.view.Window$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.SearchEvent;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = staticinvoke <androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)>($r2, r1);

        return $z0;
    }

    public boolean onSearchRequested()
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.Window$Callback $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        $r1 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $z0 = interfaceinvoke $r1.<android.view.Window$Callback: boolean onSearchRequested()>();

        return $z0;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.ActionMode$Callback r1;
        android.view.Window$Callback $r2;
        android.view.ActionMode $r3;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $r3 = interfaceinvoke $r2.<android.view.Window$Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>(r1);

        return $r3;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback, int)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.ActionMode$Callback r1;
        int i0;
        android.view.Window$Callback $r2;
        android.view.ActionMode $r3;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.ActionMode$Callback;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        $r3 = staticinvoke <androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)>($r2, r1, i0);

        return $r3;
    }

    public void onActionModeStarted(android.view.ActionMode)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.ActionMode r1;
        android.view.Window$Callback $r2;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.ActionMode;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        interfaceinvoke $r2.<android.view.Window$Callback: void onActionModeStarted(android.view.ActionMode)>(r1);

        return;
    }

    public void onActionModeFinished(android.view.ActionMode)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.ActionMode r1;
        android.view.Window$Callback $r2;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: android.view.ActionMode;

        $r2 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        interfaceinvoke $r2.<android.view.Window$Callback: void onActionModeFinished(android.view.ActionMode)>(r1);

        return;
    }

    public void onProvideKeyboardShortcuts(java.util.List, android.view.Menu, int)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        java.util.List r1;
        android.view.Menu r2;
        int i0;
        android.view.Window$Callback $r3;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.view.Menu;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        staticinvoke <androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)>($r3, r1, r2, i0);

        return;
    }

    public void onPointerCaptureChanged(boolean)
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        boolean z0;
        android.view.Window$Callback $r1;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        staticinvoke <androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)>($r1, z0);

        return;
    }

    public final android.view.Window$Callback getWrapped()
    {
        androidx.appcompat.view.WindowCallbackWrapper r0;
        android.view.Window$Callback $r1;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper;

        $r1 = r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped>;

        return $r1;
    }

androidx.appcompat.view.WindowCallbackWrapper$Api23Impl
    private void <init>()
    {
        androidx.appcompat.view.WindowCallbackWrapper$Api23Impl r0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper$Api23Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean onSearchRequested(android.view.Window$Callback, android.view.SearchEvent)
    {
        android.view.Window$Callback r0;
        android.view.SearchEvent r1;
        boolean $z0;

        r0 := @parameter0: android.view.Window$Callback;

        r1 := @parameter1: android.view.SearchEvent;

        $z0 = interfaceinvoke r0.<android.view.Window$Callback: boolean onSearchRequested(android.view.SearchEvent)>(r1);

        return $z0;
    }

    static android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback, android.view.ActionMode$Callback, int)
    {
        android.view.Window$Callback r0;
        android.view.ActionMode$Callback r1;
        int i0;
        android.view.ActionMode $r2;

        r0 := @parameter0: android.view.Window$Callback;

        r1 := @parameter1: android.view.ActionMode$Callback;

        i0 := @parameter2: int;

        $r2 = interfaceinvoke r0.<android.view.Window$Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)>(r1, i0);

        return $r2;
    }

androidx.appcompat.view.WindowCallbackWrapper$Api24Impl
    private void <init>()
    {
        androidx.appcompat.view.WindowCallbackWrapper$Api24Impl r0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper$Api24Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void onProvideKeyboardShortcuts(android.view.Window$Callback, java.util.List, android.view.Menu, int)
    {
        android.view.Window$Callback r0;
        java.util.List r1;
        android.view.Menu r2;
        int i0;

        r0 := @parameter0: android.view.Window$Callback;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: android.view.Menu;

        i0 := @parameter3: int;

        interfaceinvoke r0.<android.view.Window$Callback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)>(r1, r2, i0);

        return;
    }

androidx.appcompat.view.WindowCallbackWrapper$Api26Impl
    private void <init>()
    {
        androidx.appcompat.view.WindowCallbackWrapper$Api26Impl r0;

        r0 := @this: androidx.appcompat.view.WindowCallbackWrapper$Api26Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void onPointerCaptureChanged(android.view.Window$Callback, boolean)
    {
        android.view.Window$Callback r0;
        boolean z0;

        r0 := @parameter0: android.view.Window$Callback;

        z0 := @parameter1: boolean;

        interfaceinvoke r0.<android.view.Window$Callback: void onPointerCaptureChanged(boolean)>(z0);

        return;
    }

