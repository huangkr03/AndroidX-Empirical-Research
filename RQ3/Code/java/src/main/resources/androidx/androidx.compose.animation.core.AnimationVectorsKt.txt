androidx.compose.animation.core.AnimationVectorsKt
    public static final androidx.compose.animation.core.AnimationVector1D AnimationVector(float)
    {
        float f0;
        androidx.compose.animation.core.AnimationVector1D $r0;

        f0 := @parameter0: float;

        $r0 = new androidx.compose.animation.core.AnimationVector1D;

        specialinvoke $r0.<androidx.compose.animation.core.AnimationVector1D: void <init>(float)>(f0);

        return $r0;
    }

    public static final androidx.compose.animation.core.AnimationVector2D AnimationVector(float, float)
    {
        float f0, f1;
        androidx.compose.animation.core.AnimationVector2D $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = new androidx.compose.animation.core.AnimationVector2D;

        specialinvoke $r0.<androidx.compose.animation.core.AnimationVector2D: void <init>(float,float)>(f0, f1);

        return $r0;
    }

    public static final androidx.compose.animation.core.AnimationVector3D AnimationVector(float, float, float)
    {
        float f0, f1, f2;
        androidx.compose.animation.core.AnimationVector3D $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r0 = new androidx.compose.animation.core.AnimationVector3D;

        specialinvoke $r0.<androidx.compose.animation.core.AnimationVector3D: void <init>(float,float,float)>(f0, f1, f2);

        return $r0;
    }

    public static final androidx.compose.animation.core.AnimationVector4D AnimationVector(float, float, float, float)
    {
        float f0, f1, f2, f3;
        androidx.compose.animation.core.AnimationVector4D $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r0 = new androidx.compose.animation.core.AnimationVector4D;

        specialinvoke $r0.<androidx.compose.animation.core.AnimationVector4D: void <init>(float,float,float,float)>(f0, f1, f2, f3);

        return $r0;
    }

    public static final androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.AnimationVector $r0, $r1;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationVector: androidx.compose.animation.core.AnimationVector newVector$animation_core_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type T of androidx.compose.animation.core.AnimationVectorsKt.newInstance");

        return $r1;
    }

    public static final androidx.compose.animation.core.AnimationVector copy(androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.AnimationVector $r0, r1;
        int i0, i1;
        float $f0;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>($r0);

        i1 = 0;

        i0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label1:
        if i1 >= i0 goto label2;

        $f0 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i1, $f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static final void copyFrom(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.AnimationVector $r0, r1;
        int i0, i1;
        float $f0;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        i1 = 0;

        i0 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label1:
        if i1 >= i0 goto label2;

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        virtualinvoke $r0.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i1, $f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

