androidx.navigation.testing.TestNavHostController
    public void <init>(android.content.Context)
    {
        androidx.navigation.testing.TestNavHostController r0;
        android.content.Context r1;
        androidx.navigation.testing.TestNavigatorProvider $r2;
        androidx.navigation.NavigatorProvider $r3;

        r0 := @this: androidx.navigation.testing.TestNavHostController;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.navigation.NavHostController: void <init>(android.content.Context)>(r1);

        $r2 = new androidx.navigation.testing.TestNavigatorProvider;

        specialinvoke $r2.<androidx.navigation.testing.TestNavigatorProvider: void <init>()>();

        $r3 = (androidx.navigation.NavigatorProvider) $r2;

        virtualinvoke r0.<androidx.navigation.testing.TestNavHostController: void setNavigatorProvider(androidx.navigation.NavigatorProvider)>($r3);

        return;
    }

    public final java.util.List getBackStack()
    {
        androidx.navigation.testing.TestNavHostController r0;
        kotlin.collections.ArrayDeque $r1;
        java.lang.Iterable $r2;
        java.util.List $r3;

        r0 := @this: androidx.navigation.testing.TestNavHostController;

        $r1 = virtualinvoke r0.<androidx.navigation.testing.TestNavHostController: kotlin.collections.ArrayDeque getBackQueue()>();

        $r2 = (java.lang.Iterable) $r1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r2);

        return $r3;
    }

    public final void setCurrentDestination(int, android.os.Bundle)
    {
        androidx.navigation.testing.TestNavHostController r0;
        int i0;
        android.os.Bundle r1;
        androidx.core.app.TaskStackBuilder r2;
        android.content.Intent r3;
        androidx.navigation.NavDeepLinkBuilder $r4, $r5, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r9;

        r0 := @this: androidx.navigation.testing.TestNavHostController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "args");

        $r4 = virtualinvoke r0.<androidx.navigation.testing.TestNavHostController: androidx.navigation.NavDeepLinkBuilder createDeepLink()>();

        $r5 = staticinvoke <androidx.navigation.NavDeepLinkBuilder: androidx.navigation.NavDeepLinkBuilder setDestination$default(androidx.navigation.NavDeepLinkBuilder,int,android.os.Bundle,int,java.lang.Object)>($r4, i0, null, 2, null);

        $r6 = virtualinvoke $r5.<androidx.navigation.NavDeepLinkBuilder: androidx.navigation.NavDeepLinkBuilder setArguments(android.os.Bundle)>(r1);

        r2 = virtualinvoke $r6.<androidx.navigation.NavDeepLinkBuilder: androidx.core.app.TaskStackBuilder createTaskStackBuilder()>();

        r3 = virtualinvoke r2.<androidx.core.app.TaskStackBuilder: android.content.Intent editIntentAt(int)>(0);

        $z0 = virtualinvoke r0.<androidx.navigation.testing.TestNavHostController: boolean handleDeepLink(android.content.Intent)>(r3);

        if $z0 != 0 goto label1;

        $r9 = "Destination does not exist on the NavGraph.";

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label1:
        return;
    }

    public static void setCurrentDestination$default(androidx.navigation.testing.TestNavHostController, int, android.os.Bundle, int, java.lang.Object)
    {
        androidx.navigation.testing.TestNavHostController r0;
        int i0, i1, $i2;
        java.lang.Object r1;
        android.os.Bundle $r2, r3;

        r0 := @parameter0: androidx.navigation.testing.TestNavHostController;

        i0 := @parameter1: int;

        r3 := @parameter2: android.os.Bundle;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r3 = $r2;

     label1:
        virtualinvoke r0.<androidx.navigation.testing.TestNavHostController: void setCurrentDestination(int,android.os.Bundle)>(i0, r3);

        return;
    }

    public final void setCurrentDestination(java.lang.String, android.os.Bundle)
    {
        androidx.navigation.testing.TestNavHostController r0;
        java.lang.String r1, $r9, $r10;
        android.os.Bundle r2;
        androidx.core.app.TaskStackBuilder r3;
        android.content.Intent r4;
        androidx.navigation.NavDeepLinkBuilder $r5, $r6, $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: androidx.navigation.testing.TestNavHostController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "destRoute");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "args");

        $r5 = virtualinvoke r0.<androidx.navigation.testing.TestNavHostController: androidx.navigation.NavDeepLinkBuilder createDeepLink()>();

        $r6 = staticinvoke <androidx.navigation.NavDeepLinkBuilder: androidx.navigation.NavDeepLinkBuilder setDestination$default(androidx.navigation.NavDeepLinkBuilder,java.lang.String,android.os.Bundle,int,java.lang.Object)>($r5, r1, null, 2, null);

        $r7 = virtualinvoke $r6.<androidx.navigation.NavDeepLinkBuilder: androidx.navigation.NavDeepLinkBuilder setArguments(android.os.Bundle)>(r2);

        r3 = virtualinvoke $r7.<androidx.navigation.NavDeepLinkBuilder: androidx.core.app.TaskStackBuilder createTaskStackBuilder()>();

        r4 = virtualinvoke r3.<androidx.core.app.TaskStackBuilder: android.content.Intent editIntentAt(int)>(0);

        $z0 = virtualinvoke r0.<androidx.navigation.testing.TestNavHostController: boolean handleDeepLink(android.content.Intent)>(r4);

        if $z0 != 0 goto label1;

        $r10 = "Destination does not exist on the NavGraph.";

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        return;
    }

    public static void setCurrentDestination$default(androidx.navigation.testing.TestNavHostController, java.lang.String, android.os.Bundle, int, java.lang.Object)
    {
        androidx.navigation.testing.TestNavHostController r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.Object r2;
        android.os.Bundle $r3, r4;

        r0 := @parameter0: androidx.navigation.testing.TestNavHostController;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: android.os.Bundle;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r4 = $r3;

     label1:
        virtualinvoke r0.<androidx.navigation.testing.TestNavHostController: void setCurrentDestination(java.lang.String,android.os.Bundle)>(r1, r4);

        return;
    }

    public final void setCurrentDestination(int)
    {
        androidx.navigation.testing.TestNavHostController r0;
        int i0;

        r0 := @this: androidx.navigation.testing.TestNavHostController;

        i0 := @parameter0: int;

        staticinvoke <androidx.navigation.testing.TestNavHostController: void setCurrentDestination$default(androidx.navigation.testing.TestNavHostController,int,android.os.Bundle,int,java.lang.Object)>(r0, i0, null, 2, null);

        return;
    }

    public final void setCurrentDestination(java.lang.String)
    {
        androidx.navigation.testing.TestNavHostController r0;
        java.lang.String r1;

        r0 := @this: androidx.navigation.testing.TestNavHostController;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "destRoute");

        staticinvoke <androidx.navigation.testing.TestNavHostController: void setCurrentDestination$default(androidx.navigation.testing.TestNavHostController,java.lang.String,android.os.Bundle,int,java.lang.Object)>(r0, r1, null, 2, null);

        return;
    }

