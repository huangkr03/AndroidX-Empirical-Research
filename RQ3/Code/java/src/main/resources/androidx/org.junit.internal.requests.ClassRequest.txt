org.junit.internal.requests.ClassRequest
<org.junit.internal.requests.ClassRequest: boolean canUseSuiteMethod>
<org.junit.internal.requests.ClassRequest: java.lang.Class fTestClass>
<org.junit.internal.requests.ClassRequest: org.junit.runner.Runner runner>
<org.junit.internal.requests.ClassRequest: java.lang.Object runnerLock>
    public void <init>(java.lang.Class, boolean)
    {
        org.junit.internal.requests.ClassRequest $r0;
        java.lang.Class $r1;
        boolean $z0;
        java.lang.Object $r2;

        $r0 := @this: org.junit.internal.requests.ClassRequest;

        $r1 := @parameter0: java.lang.Class;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<org.junit.runner.Request: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0.<org.junit.internal.requests.ClassRequest: java.lang.Object runnerLock> = $r2;

        $r0.<org.junit.internal.requests.ClassRequest: java.lang.Class fTestClass> = $r1;

        $r0.<org.junit.internal.requests.ClassRequest: boolean canUseSuiteMethod> = $z0;

        return;
    }

    public org.junit.runner.Runner getRunner()
    {
        org.junit.internal.requests.ClassRequest $r0;
        java.lang.Object $r1;
        org.junit.runner.Runner $r2;
        org.junit.internal.builders.AllDefaultPossibilitiesBuilder $r3;
        boolean $z0;
        java.lang.Class $r4;
        java.lang.Throwable $r5;

        $r0 := @this: org.junit.internal.requests.ClassRequest;

        $r2 = $r0.<org.junit.internal.requests.ClassRequest: org.junit.runner.Runner runner>;

        if $r2 != null goto label3;

        $r1 = $r0.<org.junit.internal.requests.ClassRequest: java.lang.Object runnerLock>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<org.junit.internal.requests.ClassRequest: org.junit.runner.Runner runner>;

        if $r2 != null goto label2;

        $r3 = new org.junit.internal.builders.AllDefaultPossibilitiesBuilder;

        $z0 = $r0.<org.junit.internal.requests.ClassRequest: boolean canUseSuiteMethod>;

        specialinvoke $r3.<org.junit.internal.builders.AllDefaultPossibilitiesBuilder: void <init>(boolean)>($z0);

        $r4 = $r0.<org.junit.internal.requests.ClassRequest: java.lang.Class fTestClass>;

        $r2 = virtualinvoke $r3.<org.junit.internal.builders.AllDefaultPossibilitiesBuilder: org.junit.runner.Runner safeRunnerForClass(java.lang.Class)>($r4);

        $r0.<org.junit.internal.requests.ClassRequest: org.junit.runner.Runner runner> = $r2;

     label2:
        exitmonitor $r1;

     label3:
        $r2 = $r0.<org.junit.internal.requests.ClassRequest: org.junit.runner.Runner runner>;

        return $r2;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

