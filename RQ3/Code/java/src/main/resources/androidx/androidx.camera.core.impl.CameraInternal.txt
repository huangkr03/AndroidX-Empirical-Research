androidx.camera.core.impl.CameraInternal
<androidx.camera.core.impl.CameraInternal: void open()>
<androidx.camera.core.impl.CameraInternal: void close()>
    public void setActiveResumingMode(boolean)
    {
        androidx.camera.core.impl.CameraInternal r0;
        boolean z0;

        r0 := @this: androidx.camera.core.impl.CameraInternal;

        z0 := @parameter0: boolean;

        return;
    }

<androidx.camera.core.impl.CameraInternal: com.google.common.util.concurrent.ListenableFuture release()>
<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.Observable getCameraState()>
<androidx.camera.core.impl.CameraInternal: void attachUseCases(java.util.Collection)>
<androidx.camera.core.impl.CameraInternal: void detachUseCases(java.util.Collection)>
<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraControlInternal getCameraControlInternal()>
<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraInfoInternal getCameraInfoInternal()>
    public androidx.camera.core.CameraControl getCameraControl()
    {
        androidx.camera.core.impl.CameraInternal r0;
        androidx.camera.core.impl.CameraControlInternal $r1;

        r0 := @this: androidx.camera.core.impl.CameraInternal;

        $r1 = interfaceinvoke r0.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraControlInternal getCameraControlInternal()>();

        return $r1;
    }

    public androidx.camera.core.CameraInfo getCameraInfo()
    {
        androidx.camera.core.impl.CameraInternal r0;
        androidx.camera.core.impl.CameraInfoInternal $r1;

        r0 := @this: androidx.camera.core.impl.CameraInternal;

        $r1 = interfaceinvoke r0.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.impl.CameraInfoInternal getCameraInfoInternal()>();

        return $r1;
    }

    public java.util.LinkedHashSet getCameraInternals()
    {
        androidx.camera.core.impl.CameraInternal r0;
        java.util.LinkedHashSet $r1;
        java.util.Set $r2;

        r0 := @this: androidx.camera.core.impl.CameraInternal;

        $r1 = new java.util.LinkedHashSet;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    public androidx.camera.core.impl.CameraConfig getExtendedConfig()
    {
        androidx.camera.core.impl.CameraInternal r0;
        androidx.camera.core.impl.CameraConfig $r1;

        r0 := @this: androidx.camera.core.impl.CameraInternal;

        $r1 = staticinvoke <androidx.camera.core.impl.CameraConfigs: androidx.camera.core.impl.CameraConfig emptyConfig()>();

        return $r1;
    }

    public void setExtendedConfig(androidx.camera.core.impl.CameraConfig)
    {
        androidx.camera.core.impl.CameraInternal r0;
        androidx.camera.core.impl.CameraConfig r1;

        r0 := @this: androidx.camera.core.impl.CameraInternal;

        r1 := @parameter0: androidx.camera.core.impl.CameraConfig;

        return;
    }

androidx.camera.core.impl.CameraInternal$State
<androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State PENDING_OPEN>
<androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State OPENING>
<androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State OPEN>
<androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State CLOSING>
<androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State CLOSED>
<androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State RELEASING>
<androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State RELEASED>
<androidx.camera.core.impl.CameraInternal$State: boolean mHoldsCameraSlot>
<androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State[] $VALUES>
    public static androidx.camera.core.impl.CameraInternal$State[] values()
    {
        androidx.camera.core.impl.CameraInternal$State[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.camera.core.impl.CameraInternal$State[]) $r1;

        return $r2;
    }

    public static androidx.camera.core.impl.CameraInternal$State valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.camera.core.impl.CameraInternal$State $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/camera/core/impl/CameraInternal$State;", r0);

        $r2 = (androidx.camera.core.impl.CameraInternal$State) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, boolean)
    {
        androidx.camera.core.impl.CameraInternal$State r0;
        java.lang.String r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.camera.core.impl.CameraInternal$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<androidx.camera.core.impl.CameraInternal$State: boolean mHoldsCameraSlot> = z0;

        return;
    }

    boolean holdsCameraSlot()
    {
        androidx.camera.core.impl.CameraInternal$State r0;
        boolean $z0;

        r0 := @this: androidx.camera.core.impl.CameraInternal$State;

        $z0 = r0.<androidx.camera.core.impl.CameraInternal$State: boolean mHoldsCameraSlot>;

        return $z0;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.CameraInternal$State $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        androidx.camera.core.impl.CameraInternal$State[] $r7;

        $r0 = new androidx.camera.core.impl.CameraInternal$State;

        specialinvoke $r0.<androidx.camera.core.impl.CameraInternal$State: void <init>(java.lang.String,int,boolean)>("PENDING_OPEN", 0, 0);

        <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State PENDING_OPEN> = $r0;

        $r1 = new androidx.camera.core.impl.CameraInternal$State;

        specialinvoke $r1.<androidx.camera.core.impl.CameraInternal$State: void <init>(java.lang.String,int,boolean)>("OPENING", 1, 1);

        <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State OPENING> = $r1;

        $r2 = new androidx.camera.core.impl.CameraInternal$State;

        specialinvoke $r2.<androidx.camera.core.impl.CameraInternal$State: void <init>(java.lang.String,int,boolean)>("OPEN", 2, 1);

        <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State OPEN> = $r2;

        $r3 = new androidx.camera.core.impl.CameraInternal$State;

        specialinvoke $r3.<androidx.camera.core.impl.CameraInternal$State: void <init>(java.lang.String,int,boolean)>("CLOSING", 3, 1);

        <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State CLOSING> = $r3;

        $r4 = new androidx.camera.core.impl.CameraInternal$State;

        specialinvoke $r4.<androidx.camera.core.impl.CameraInternal$State: void <init>(java.lang.String,int,boolean)>("CLOSED", 4, 0);

        <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State CLOSED> = $r4;

        $r5 = new androidx.camera.core.impl.CameraInternal$State;

        specialinvoke $r5.<androidx.camera.core.impl.CameraInternal$State: void <init>(java.lang.String,int,boolean)>("RELEASING", 5, 1);

        <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State RELEASING> = $r5;

        $r6 = new androidx.camera.core.impl.CameraInternal$State;

        specialinvoke $r6.<androidx.camera.core.impl.CameraInternal$State: void <init>(java.lang.String,int,boolean)>("RELEASED", 6, 0);

        <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State RELEASED> = $r6;

        $r7 = newarray (androidx.camera.core.impl.CameraInternal$State)[7];

        $r8 = <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State PENDING_OPEN>;

        $r7[0] = $r8;

        $r9 = <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State OPENING>;

        $r7[1] = $r9;

        $r10 = <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State OPEN>;

        $r7[2] = $r10;

        $r11 = <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State CLOSING>;

        $r7[3] = $r11;

        $r12 = <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State CLOSED>;

        $r7[4] = $r12;

        $r13 = <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State RELEASING>;

        $r7[5] = $r13;

        $r14 = <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State RELEASED>;

        $r7[6] = $r14;

        <androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State[] $VALUES> = $r7;

        return;
    }

