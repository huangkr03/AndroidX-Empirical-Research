android.databinding.tool.reflection.annotation.AnnotationMethod
<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.ExecutableType mMethod>
<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.DeclaredType mDeclaringType>
<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>
<android.databinding.tool.reflection.'annotation'.AnnotationMethod: int mApiLevel>
<android.databinding.tool.reflection.'annotation'.AnnotationMethod: android.databinding.tool.reflection.ModelClass mReceiverType>
    public void <init>(javax.lang.model.type.DeclaredType, javax.lang.model.element.ExecutableElement)
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.type.DeclaredType r1;
        javax.lang.model.element.ExecutableElement r2;
        javax.lang.model.util.Types r3;
        android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer $r4;
        javax.lang.model.type.TypeMirror $r5;
        javax.lang.model.type.ExecutableType $r6;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        r1 := @parameter0: javax.lang.model.type.DeclaredType;

        r2 := @parameter1: javax.lang.model.element.ExecutableElement;

        specialinvoke r0.<android.databinding.tool.reflection.ModelMethod: void <init>()>();

        r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: int mApiLevel> = -1;

        r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.DeclaredType mDeclaringType> = r1;

        r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement> = r2;

        $r4 = staticinvoke <android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer: android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer get()>();

        r3 = virtualinvoke $r4.<android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer: javax.lang.model.util.Types getTypeUtils()>();

        $r5 = interfaceinvoke r3.<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>(r1, r2);

        $r6 = (javax.lang.model.type.ExecutableType) $r5;

        r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.ExecutableType mMethod> = $r6;

        return;
    }

    public android.databinding.tool.reflection.ModelClass getReceiverType()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        android.databinding.tool.reflection.ModelClass $r1, $r3, $r4, $r7;
        javax.lang.model.type.DeclaredType $r2, $r6;
        android.databinding.tool.reflection.'annotation'.AnnotationClass $r5;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: android.databinding.tool.reflection.ModelClass mReceiverType>;

        if $r1 != null goto label1;

        $r2 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.DeclaredType mDeclaringType>;

        $r3 = specialinvoke r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: android.databinding.tool.reflection.ModelClass findReceiverType(javax.lang.model.type.DeclaredType)>($r2);

        r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: android.databinding.tool.reflection.ModelClass mReceiverType> = $r3;

        $r4 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: android.databinding.tool.reflection.ModelClass mReceiverType>;

        if $r4 != null goto label1;

        $r5 = new android.databinding.tool.reflection.'annotation'.AnnotationClass;

        $r6 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.DeclaredType mDeclaringType>;

        specialinvoke $r5.<android.databinding.tool.reflection.'annotation'.AnnotationClass: void <init>(javax.lang.model.type.TypeMirror)>($r6);

        r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: android.databinding.tool.reflection.ModelClass mReceiverType> = $r5;

     label1:
        $r7 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: android.databinding.tool.reflection.ModelClass mReceiverType>;

        return $r7;
    }

    public android.databinding.tool.reflection.ModelClass getDeclaringClass()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        android.databinding.tool.reflection.'annotation'.AnnotationClass $r1;
        javax.lang.model.type.DeclaredType $r2;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = new android.databinding.tool.reflection.'annotation'.AnnotationClass;

        $r2 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.DeclaredType mDeclaringType>;

        specialinvoke $r1.<android.databinding.tool.reflection.'annotation'.AnnotationClass: void <init>(javax.lang.model.type.TypeMirror)>($r2);

        return $r1;
    }

    private android.databinding.tool.reflection.ModelClass findReceiverType(javax.lang.model.type.DeclaredType)
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.type.DeclaredType r1, r5;
        java.util.List r2;
        java.util.Iterator r3;
        javax.lang.model.type.TypeMirror r4;
        android.databinding.tool.reflection.ModelClass r6;
        javax.lang.model.util.Types $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        javax.lang.model.type.TypeKind $r9, $r10;
        android.databinding.tool.reflection.'annotation'.AnnotationClass $r11;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        r1 := @parameter0: javax.lang.model.type.DeclaredType;

        $r7 = staticinvoke <android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.util.Types getTypeUtils()>();

        r2 = interfaceinvoke $r7.<javax.lang.model.util.Types: java.util.List directSupertypes(javax.lang.model.type.TypeMirror)>(r1);

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javax.lang.model.type.TypeMirror) $r8;

        $r9 = interfaceinvoke r4.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r10 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind DECLARED>;

        if $r9 != $r10 goto label3;

        r5 = (javax.lang.model.type.DeclaredType) r4;

        r6 = specialinvoke r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: android.databinding.tool.reflection.ModelClass findReceiverType(javax.lang.model.type.DeclaredType)>(r5);

        if r6 == null goto label2;

        return r6;

     label2:
        $z1 = specialinvoke r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: boolean hasExecutableMethod(javax.lang.model.type.DeclaredType)>(r5);

        if $z1 == 0 goto label3;

        $r11 = new android.databinding.tool.reflection.'annotation'.AnnotationClass;

        specialinvoke $r11.<android.databinding.tool.reflection.'annotation'.AnnotationClass: void <init>(javax.lang.model.type.TypeMirror)>(r5);

        return $r11;

     label3:
        goto label1;

     label4:
        return null;
    }

    private boolean hasExecutableMethod(javax.lang.model.type.DeclaredType)
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.type.DeclaredType r1;
        javax.lang.model.util.Elements r2;
        javax.lang.model.element.TypeElement r3, r4;
        java.util.Iterator r5;
        javax.lang.model.element.Element r6, $r9, $r10;
        javax.lang.model.element.ExecutableElement r7, $r8, $r15, $r16;
        java.util.List $r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r12;
        javax.lang.model.element.ElementKind $r13, $r14;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        r1 := @parameter0: javax.lang.model.type.DeclaredType;

        r2 = staticinvoke <android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.util.Elements getElementUtils()>();

        $r8 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $r9 = interfaceinvoke $r8.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Element getEnclosingElement()>();

        r3 = (javax.lang.model.element.TypeElement) $r9;

        $r10 = interfaceinvoke r1.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        r4 = (javax.lang.model.element.TypeElement) $r10;

        $r11 = interfaceinvoke r4.<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>();

        r5 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.lang.model.element.Element) $r12;

        $r13 = interfaceinvoke r6.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $r14 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind METHOD>;

        if $r13 != $r14 goto label3;

        r7 = (javax.lang.model.element.ExecutableElement) r6;

        $r15 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $z1 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z1 != 0 goto label2;

        $r16 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $z2 = interfaceinvoke r2.<javax.lang.model.util.Elements: boolean overrides(javax.lang.model.element.ExecutableElement,javax.lang.model.element.ExecutableElement,javax.lang.model.element.TypeElement)>($r16, r7, r3);

        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    public android.databinding.tool.reflection.ModelClass[] getParameterTypes()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        java.util.List r1;
        android.databinding.tool.reflection.ModelClass[] r2;
        javax.lang.model.type.ExecutableType $r3;
        int $i0, $i1, i2;
        android.databinding.tool.reflection.'annotation'.AnnotationClass $r4;
        java.lang.Object $r5;
        javax.lang.model.type.TypeMirror $r6;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r3 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.ExecutableType mMethod>;

        r1 = interfaceinvoke $r3.<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = newarray (android.databinding.tool.reflection.ModelClass)[$i0];

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r4 = new android.databinding.tool.reflection.'annotation'.AnnotationClass;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (javax.lang.model.type.TypeMirror) $r5;

        specialinvoke $r4.<android.databinding.tool.reflection.'annotation'.AnnotationClass: void <init>(javax.lang.model.type.TypeMirror)>($r6);

        r2[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.lang.String getName()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.element.ExecutableElement $r1;
        javax.lang.model.element.Name $r2;
        java.lang.String $r3;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public android.databinding.tool.reflection.ModelClass getReturnType(java.util.List)
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        java.util.List r1;
        javax.lang.model.type.TypeMirror r2;
        javax.lang.model.type.ExecutableType $r3;
        android.databinding.tool.reflection.'annotation'.AnnotationClass $r4;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.ExecutableType mMethod>;

        r2 = interfaceinvoke $r3.<javax.lang.model.type.ExecutableType: javax.lang.model.type.TypeMirror getReturnType()>();

        $r4 = new android.databinding.tool.reflection.'annotation'.AnnotationClass;

        specialinvoke $r4.<android.databinding.tool.reflection.'annotation'.AnnotationClass: void <init>(javax.lang.model.type.TypeMirror)>(r2);

        return $r4;
    }

    public boolean isVoid()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.type.ExecutableType $r1;
        javax.lang.model.type.TypeMirror $r2;
        javax.lang.model.type.TypeKind $r3, $r4;
        boolean $z0;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.ExecutableType mMethod>;

        $r2 = interfaceinvoke $r1.<javax.lang.model.type.ExecutableType: javax.lang.model.type.TypeMirror getReturnType()>();

        $r3 = interfaceinvoke $r2.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r4 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind VOID>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isPublic()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.element.ExecutableElement $r1;
        java.util.Set $r2;
        javax.lang.model.element.Modifier $r3;
        boolean $z0;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: java.util.Set getModifiers()>();

        $r3 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isProtected()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.element.ExecutableElement $r1;
        java.util.Set $r2;
        javax.lang.model.element.Modifier $r3;
        boolean $z0;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: java.util.Set getModifiers()>();

        $r3 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PROTECTED>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isStatic()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.element.ExecutableElement $r1;
        java.util.Set $r2;
        javax.lang.model.element.Modifier $r3;
        boolean $z0;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: java.util.Set getModifiers()>();

        $r3 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier STATIC>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isAbstract()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.element.ExecutableElement $r1;
        java.util.Set $r2;
        javax.lang.model.element.Modifier $r3;
        boolean $z0;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: java.util.Set getModifiers()>();

        $r3 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier ABSTRACT>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public android.databinding.tool.BindableCompat getBindableAnnotation()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.element.ExecutableElement $r1;
        android.databinding.tool.BindableCompat $r2;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $r2 = staticinvoke <android.databinding.tool.BindableCompat: android.databinding.tool.BindableCompat extractFrom(javax.lang.model.element.Element)>($r1);

        return $r2;
    }

    public int getMinApi()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        int $i0, $i1, $i2;
        android.databinding.tool.reflection.SdkUtil $r1;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $i0 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: int mApiLevel>;

        if $i0 != -1 goto label1;

        $r1 = staticinvoke <android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil get()>();

        $i2 = virtualinvoke $r1.<android.databinding.tool.reflection.SdkUtil: int getMinApi(android.databinding.tool.reflection.ModelMethod)>(r0);

        r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: int mApiLevel> = $i2;

     label1:
        $i1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: int mApiLevel>;

        return $i1;
    }

    public java.lang.String getJniDescription()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        android.databinding.tool.reflection.TypeUtil $r1;
        java.lang.String $r2;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = staticinvoke <android.databinding.tool.reflection.TypeUtil: android.databinding.tool.reflection.TypeUtil getInstance()>();

        $r2 = virtualinvoke $r1.<android.databinding.tool.reflection.TypeUtil: java.lang.String getDescription(android.databinding.tool.reflection.ModelMethod)>(r0);

        return $r2;
    }

    public boolean isVarArgs()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        javax.lang.model.element.ExecutableElement $r1;
        boolean $z0;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $z0 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: boolean isVarArgs()>();

        return $z0;
    }

    private static javax.lang.model.util.Types getTypeUtils()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer $r0;
        javax.'annotation'.processing.ProcessingEnvironment $r1;
        javax.lang.model.util.Types $r2;

        $r0 = staticinvoke <android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer: android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer get()>();

        $r1 = $r0.<android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer: javax.'annotation'.processing.ProcessingEnvironment mProcessingEnv>;

        $r2 = interfaceinvoke $r1.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Types getTypeUtils()>();

        return $r2;
    }

    private static javax.lang.model.util.Elements getElementUtils()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer $r0;
        javax.'annotation'.processing.ProcessingEnvironment $r1;
        javax.lang.model.util.Elements $r2;

        $r0 = staticinvoke <android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer: android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer get()>();

        $r1 = $r0.<android.databinding.tool.reflection.'annotation'.AnnotationAnalyzer: javax.'annotation'.processing.ProcessingEnvironment mProcessingEnv>;

        $r2 = interfaceinvoke $r1.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        android.databinding.tool.reflection.'annotation'.AnnotationMethod r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13;
        javax.lang.model.type.ExecutableType $r3;
        javax.lang.model.type.DeclaredType $r6;
        javax.lang.model.element.ExecutableElement $r9;
        int $i0;
        java.lang.String $r14;

        r0 := @this: android.databinding.tool.reflection.'annotation'.AnnotationMethod;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnnotationMethod{mMethod=");

        $r3 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.ExecutableType mMethod>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDeclaringType=");

        $r6 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.type.DeclaredType mDeclaringType>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mExecutableElement=");

        $r9 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: javax.lang.model.element.ExecutableElement mExecutableElement>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mApiLevel=");

        $i0 = r0.<android.databinding.tool.reflection.'annotation'.AnnotationMethod: int mApiLevel>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

