androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory
<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: int[] DEFAULT_EXTRACTOR_ORDER>
<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: int payloadReaderFactoryFlags>
<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: boolean exposeCea608WhenMissingDeclarations>
    public void <init>()
    {
        androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory r0;

        r0 := @this: androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory;

        specialinvoke r0.<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: void <init>(int,boolean)>(0, 1);

        return;
    }

    public void <init>(int, boolean)
    {
        androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: int payloadReaderFactoryFlags> = i0;

        r0.<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: boolean exposeCea608WhenMissingDeclarations> = z0;

        return;
    }

    public androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor createExtractor(android.net.Uri, androidx.media3.common.Format, java.util.List, androidx.media3.common.util.TimestampAdjuster, java.util.Map, androidx.media3.extractor.ExtractorInput, androidx.media3.exoplayer.analytics.PlayerId) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory r0;
        android.net.Uri r1;
        androidx.media3.common.Format r2;
        java.util.List r3;
        androidx.media3.common.util.TimestampAdjuster r4;
        java.util.Map r5;
        androidx.media3.extractor.ExtractorInput r6;
        androidx.media3.exoplayer.analytics.PlayerId r7;
        int i0, i1, i2, $i3, $i4, i5, i6, i7, i8, i9;
        java.util.ArrayList r8, $r10;
        java.lang.String $r9;
        int[] $r11, r20;
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor $r12, $r19;
        java.lang.Object $r13, $r15, $r18;
        androidx.media3.extractor.Extractor $r14, $r17, r21, r22;
        java.lang.Integer $r16;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: androidx.media3.common.Format;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: androidx.media3.common.util.TimestampAdjuster;

        r5 := @parameter4: java.util.Map;

        r6 := @parameter5: androidx.media3.extractor.ExtractorInput;

        r7 := @parameter6: androidx.media3.exoplayer.analytics.PlayerId;

        $r9 = r2.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        i0 = staticinvoke <androidx.media3.common.FileTypes: int inferFileTypeFromMimeType(java.lang.String)>($r9);

        i1 = staticinvoke <androidx.media3.common.FileTypes: int inferFileTypeFromResponseHeaders(java.util.Map)>(r5);

        i2 = staticinvoke <androidx.media3.common.FileTypes: int inferFileTypeFromUri(android.net.Uri)>(r1);

        $r10 = new java.util.ArrayList;

        $r11 = <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: int[] DEFAULT_EXTRACTOR_ORDER>;

        $i3 = lengthof $r11;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i3);

        r8 = $r10;

        staticinvoke <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: void addFileTypeIfValidAndNotPresent(int,java.util.List)>(i0, r8);

        staticinvoke <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: void addFileTypeIfValidAndNotPresent(int,java.util.List)>(i1, r8);

        staticinvoke <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: void addFileTypeIfValidAndNotPresent(int,java.util.List)>(i2, r8);

        r20 = <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: int[] DEFAULT_EXTRACTOR_ORDER>;

        i5 = lengthof r20;

        i6 = 0;

     label1:
        if i6 >= i5 goto label2;

        i7 = r20[i6];

        staticinvoke <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: void addFileTypeIfValidAndNotPresent(int,java.util.List)>(i7, r8);

        i6 = i6 + 1;

        goto label1;

     label2:
        r21 = null;

        interfaceinvoke r6.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        i8 = 0;

     label3:
        $i4 = interfaceinvoke r8.<java.util.List: int size()>();

        if i8 >= $i4 goto label7;

        $r15 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i8);

        $r16 = (java.lang.Integer) $r15;

        i9 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r17 = specialinvoke r0.<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: androidx.media3.extractor.Extractor createExtractorByFileType(int,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster)>(i9, r2, r3, r4);

        $r18 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r17);

        r22 = (androidx.media3.extractor.Extractor) $r18;

        $z0 = staticinvoke <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: boolean sniffQuietly(androidx.media3.extractor.Extractor,androidx.media3.extractor.ExtractorInput)>(r22, r6);

        if $z0 == 0 goto label4;

        $r19 = new androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        specialinvoke $r19.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: void <init>(androidx.media3.extractor.Extractor,androidx.media3.common.Format,androidx.media3.common.util.TimestampAdjuster)>(r22, r2, r4);

        return $r19;

     label4:
        if r21 != null goto label6;

        if i9 == i0 goto label5;

        if i9 == i1 goto label5;

        if i9 == i2 goto label5;

        if i9 != 11 goto label6;

     label5:
        r21 = r22;

     label6:
        i8 = i8 + 1;

        goto label3;

     label7:
        $r12 = new androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r21);

        $r14 = (androidx.media3.extractor.Extractor) $r13;

        specialinvoke $r12.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: void <init>(androidx.media3.extractor.Extractor,androidx.media3.common.Format,androidx.media3.common.util.TimestampAdjuster)>($r14, r2, r4);

        return $r12;
    }

    private static void addFileTypeIfValidAndNotPresent(int, java.util.List)
    {
        int i0, $i1;
        java.util.List r0;
        int[] $r1;
        java.lang.Integer $r2, $r3;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List;

        $r1 = <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: int[] DEFAULT_EXTRACTOR_ORDER>;

        $i1 = staticinvoke <com.google.common.primitives.Ints: int indexOf(int[],int)>($r1, i0);

        if $i1 == -1 goto label1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    private androidx.media3.extractor.Extractor createExtractorByFileType(int, androidx.media3.common.Format, java.util.List, androidx.media3.common.util.TimestampAdjuster)
    {
        androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory r0;
        int i0, $i1;
        androidx.media3.common.Format r1;
        java.util.List r2;
        androidx.media3.common.util.TimestampAdjuster r3;
        java.lang.String $r5;
        boolean $z0;
        androidx.media3.extractor.ts.TsExtractor $r6;
        androidx.media3.extractor.mp4.FragmentedMp4Extractor $r7;
        androidx.media3.exoplayer.hls.WebvttExtractor r12;
        androidx.media3.extractor.ts.AdtsExtractor r13;
        androidx.media3.extractor.ts.Ac3Extractor r14;
        androidx.media3.extractor.ts.Ac4Extractor r15;
        androidx.media3.extractor.mp3.Mp3Extractor r16;
        androidx.media3.extractor.Extractor r17, r18, r19, r20, r21, r22;

        r0 := @this: androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Format;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: androidx.media3.common.util.TimestampAdjuster;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label8;
            case 4: goto label8;
            case 5: goto label8;
            case 6: goto label8;
            case 7: goto label5;
            case 8: goto label6;
            case 9: goto label8;
            case 10: goto label8;
            case 11: goto label7;
            case 12: goto label8;
            case 13: goto label1;
            default: goto label8;
        };

     label1:
        r12 = new androidx.media3.exoplayer.hls.WebvttExtractor;

        $r5 = r1.<androidx.media3.common.Format: java.lang.String language>;

        specialinvoke r12.<androidx.media3.exoplayer.hls.WebvttExtractor: void <init>(java.lang.String,androidx.media3.common.util.TimestampAdjuster)>($r5, r3);

        return r12;

     label2:
        r13 = new androidx.media3.extractor.ts.AdtsExtractor;

        specialinvoke r13.<androidx.media3.extractor.ts.AdtsExtractor: void <init>()>();

        r17 = (androidx.media3.extractor.Extractor) r13;

        return r17;

     label3:
        r14 = new androidx.media3.extractor.ts.Ac3Extractor;

        specialinvoke r14.<androidx.media3.extractor.ts.Ac3Extractor: void <init>()>();

        r18 = (androidx.media3.extractor.Extractor) r14;

        return r18;

     label4:
        r15 = new androidx.media3.extractor.ts.Ac4Extractor;

        specialinvoke r15.<androidx.media3.extractor.ts.Ac4Extractor: void <init>()>();

        r19 = (androidx.media3.extractor.Extractor) r15;

        return r19;

     label5:
        r16 = new androidx.media3.extractor.mp3.Mp3Extractor;

        specialinvoke r16.<androidx.media3.extractor.mp3.Mp3Extractor: void <init>(int,long)>(0, 0L);

        r20 = (androidx.media3.extractor.Extractor) r16;

        return r20;

     label6:
        $r7 = staticinvoke <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: androidx.media3.extractor.mp4.FragmentedMp4Extractor createFragmentedMp4Extractor(androidx.media3.common.util.TimestampAdjuster,androidx.media3.common.Format,java.util.List)>(r3, r1, r2);

        r21 = (androidx.media3.extractor.Extractor) $r7;

        return r21;

     label7:
        $i1 = r0.<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: int payloadReaderFactoryFlags>;

        $z0 = r0.<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: boolean exposeCea608WhenMissingDeclarations>;

        $r6 = staticinvoke <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: androidx.media3.extractor.ts.TsExtractor createTsExtractor(int,boolean,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster)>($i1, $z0, r1, r2, r3);

        r22 = (androidx.media3.extractor.Extractor) $r6;

        return r22;

     label8:
        return null;
    }

    private static androidx.media3.extractor.ts.TsExtractor createTsExtractor(int, boolean, androidx.media3.common.Format, java.util.List, androidx.media3.common.util.TimestampAdjuster)
    {
        int i0, i1;
        boolean z0, $z1, $z2, $z3;
        androidx.media3.common.Format r0, $r5;
        androidx.media3.common.util.TimestampAdjuster r1;
        java.lang.String r2;
        androidx.media3.common.Format$Builder $r3, $r4;
        java.util.List r6;
        androidx.media3.extractor.ts.TsExtractor $r7;
        androidx.media3.extractor.ts.DefaultTsPayloadReaderFactory $r8;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: androidx.media3.common.Format;

        r6 := @parameter3: java.util.List;

        r1 := @parameter4: androidx.media3.common.util.TimestampAdjuster;

        i1 = 16 | i0;

        if r6 == null goto label1;

        i1 = i1 | 32;

        goto label3;

     label1:
        if z0 == 0 goto label2;

        $r3 = new androidx.media3.common.Format$Builder;

        specialinvoke $r3.<androidx.media3.common.Format$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("application/cea-608");

        $r5 = virtualinvoke $r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r5);

        goto label3;

     label2:
        r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label3:
        r2 = r0.<androidx.media3.common.Format: java.lang.String codecs>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z3 != 0 goto label5;

        $z1 = staticinvoke <androidx.media3.common.MimeTypes: boolean containsCodecsCorrespondingToMimeType(java.lang.String,java.lang.String)>(r2, "audio/mp4a-latm");

        if $z1 != 0 goto label4;

        i1 = i1 | 2;

     label4:
        $z2 = staticinvoke <androidx.media3.common.MimeTypes: boolean containsCodecsCorrespondingToMimeType(java.lang.String,java.lang.String)>(r2, "video/avc");

        if $z2 != 0 goto label5;

        i1 = i1 | 4;

     label5:
        $r7 = new androidx.media3.extractor.ts.TsExtractor;

        $r8 = new androidx.media3.extractor.ts.DefaultTsPayloadReaderFactory;

        specialinvoke $r8.<androidx.media3.extractor.ts.DefaultTsPayloadReaderFactory: void <init>(int,java.util.List)>(i1, r6);

        specialinvoke $r7.<androidx.media3.extractor.ts.TsExtractor: void <init>(int,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ts.TsPayloadReader$Factory)>(2, r1, $r8);

        return $r7;
    }

    private static androidx.media3.extractor.mp4.FragmentedMp4Extractor createFragmentedMp4Extractor(androidx.media3.common.util.TimestampAdjuster, androidx.media3.common.Format, java.util.List)
    {
        androidx.media3.common.util.TimestampAdjuster r0;
        androidx.media3.common.Format r1;
        java.util.List r2, $r5;
        boolean $z0;
        androidx.media3.extractor.mp4.FragmentedMp4Extractor $r3;
        byte $b0;

        r0 := @parameter0: androidx.media3.common.util.TimestampAdjuster;

        r1 := @parameter1: androidx.media3.common.Format;

        r2 := @parameter2: java.util.List;

        $r3 = new androidx.media3.extractor.mp4.FragmentedMp4Extractor;

        $z0 = staticinvoke <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: boolean isFmp4Variant(androidx.media3.common.Format)>(r1);

        if $z0 == 0 goto label1;

        $b0 = 4;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        if r2 == null goto label3;

        $r5 = r2;

        goto label4;

     label3:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label4:
        specialinvoke $r3.<androidx.media3.extractor.mp4.FragmentedMp4Extractor: void <init>(int,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.mp4.Track,java.util.List)>($b0, r0, null, $r5);

        return $r3;
    }

    private static boolean isFmp4Variant(androidx.media3.common.Format)
    {
        androidx.media3.common.Format r0;
        androidx.media3.common.Metadata r1;
        androidx.media3.common.Metadata$Entry r2;
        int $i0, i1;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.hls.HlsTrackMetadataEntry $r3;
        java.util.List $r4;

        r0 := @parameter0: androidx.media3.common.Format;

        r1 = r0.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        if r1 != null goto label1;

        return 0;

     label1:
        i1 = 0;

     label2:
        $i0 = virtualinvoke r1.<androidx.media3.common.Metadata: int length()>();

        if i1 >= $i0 goto label6;

        r2 = virtualinvoke r1.<androidx.media3.common.Metadata: androidx.media3.common.Metadata$Entry get(int)>(i1);

        $z0 = r2 instanceof androidx.media3.exoplayer.hls.HlsTrackMetadataEntry;

        if $z0 == 0 goto label5;

        $r3 = (androidx.media3.exoplayer.hls.HlsTrackMetadataEntry) r2;

        $r4 = $r3.<androidx.media3.exoplayer.hls.HlsTrackMetadataEntry: java.util.List variantInfos>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return 0;
    }

    private static boolean sniffQuietly(androidx.media3.extractor.Extractor, androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        java.lang.Throwable r2, r3, $r4, $r5;
        boolean z0;

        r0 := @parameter0: androidx.media3.extractor.Extractor;

        r1 := @parameter1: androidx.media3.extractor.ExtractorInput;

        z0 = 0;

     label1:
        z0 = interfaceinvoke r0.<androidx.media3.extractor.Extractor: boolean sniff(androidx.media3.extractor.ExtractorInput)>(r1);

     label2:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        goto label6;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        goto label6;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

     label5:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        throw r3;

     label6:
        return z0;

        catch java.io.EOFException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public volatile androidx.media3.exoplayer.hls.HlsMediaChunkExtractor createExtractor(android.net.Uri, androidx.media3.common.Format, java.util.List, androidx.media3.common.util.TimestampAdjuster, java.util.Map, androidx.media3.extractor.ExtractorInput, androidx.media3.exoplayer.analytics.PlayerId) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory r0;
        android.net.Uri r1;
        androidx.media3.common.Format r2;
        java.util.List r3;
        androidx.media3.common.util.TimestampAdjuster r4;
        java.util.Map r5;
        androidx.media3.extractor.ExtractorInput r6;
        androidx.media3.exoplayer.analytics.PlayerId r7;
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor $r8;

        r0 := @this: androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: androidx.media3.common.Format;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: androidx.media3.common.util.TimestampAdjuster;

        r5 := @parameter4: java.util.Map;

        r6 := @parameter5: androidx.media3.extractor.ExtractorInput;

        r7 := @parameter6: androidx.media3.exoplayer.analytics.PlayerId;

        $r8 = virtualinvoke r0.<androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor createExtractor(android.net.Uri,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster,java.util.Map,androidx.media3.extractor.ExtractorInput,androidx.media3.exoplayer.analytics.PlayerId)>(r1, r2, r3, r4, r5, r6, r7);

        return $r8;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[7];

        $r0[0] = 8;

        $r0[1] = 13;

        $r0[2] = 11;

        $r0[3] = 2;

        $r0[4] = 0;

        $r0[5] = 1;

        $r0[6] = 7;

        <androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory: int[] DEFAULT_EXTRACTOR_ORDER> = $r0;

        return;
    }

