androidx.camera.camera2.internal.compat.CameraManagerCompat
<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl>
<androidx.camera.camera2.internal.compat.CameraManagerCompat: java.util.Map mCameraCharacteristicsMap>
    private void <init>(androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompat r0;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl r1;
        android.util.ArrayMap $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompat;

        r1 := @parameter0: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>(int)>(4);

        r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: java.util.Map mCameraCharacteristicsMap> = $r2;

        r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl> = r1;

        return;
    }

    public static androidx.camera.camera2.internal.compat.CameraManagerCompat 'from'(android.content.Context)
    {
        android.content.Context r0;
        android.os.Handler $r1;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <androidx.camera.core.impl.utils.MainThreadAsyncHandler: android.os.Handler getInstance()>();

        $r2 = staticinvoke <androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat 'from'(android.content.Context,android.os.Handler)>(r0, $r1);

        return $r2;
    }

    public static androidx.camera.camera2.internal.compat.CameraManagerCompat 'from'(android.content.Context, android.os.Handler)
    {
        android.content.Context r0;
        android.os.Handler r1;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r2;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        $r2 = new androidx.camera.camera2.internal.compat.CameraManagerCompat;

        $r3 = staticinvoke <androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl 'from'(android.content.Context,android.os.Handler)>(r0, r1);

        specialinvoke $r2.<androidx.camera.camera2.internal.compat.CameraManagerCompat: void <init>(androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl)>($r3);

        return $r2;
    }

    public static androidx.camera.camera2.internal.compat.CameraManagerCompat 'from'(androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl r0;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r1;

        r0 := @parameter0: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl;

        $r1 = new androidx.camera.camera2.internal.compat.CameraManagerCompat;

        specialinvoke $r1.<androidx.camera.camera2.internal.compat.CameraManagerCompat: void <init>(androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl)>(r0);

        return $r1;
    }

    public java.lang.String[] getCameraIdList() throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompat r0;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl $r1;
        java.lang.String[] $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompat;

        $r1 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl: java.lang.String[] getCameraIdList()>();

        return $r2;
    }

    public void registerAvailabilityCallback(java.util.concurrent.Executor, android.hardware.camera2.CameraManager$AvailabilityCallback)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompat r0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.CameraManager$AvailabilityCallback r2;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl $r3;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompat;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.hardware.camera2.CameraManager$AvailabilityCallback;

        $r3 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl>;

        interfaceinvoke $r3.<androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl: void registerAvailabilityCallback(java.util.concurrent.Executor,android.hardware.camera2.CameraManager$AvailabilityCallback)>(r1, r2);

        return;
    }

    public void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompat r0;
        android.hardware.camera2.CameraManager$AvailabilityCallback r1;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompat;

        r1 := @parameter0: android.hardware.camera2.CameraManager$AvailabilityCallback;

        $r2 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl>;

        interfaceinvoke $r2.<androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl: void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback)>(r1);

        return;
    }

    public androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat getCameraCharacteristicsCompat(java.lang.String) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompat r0;
        java.lang.String r1, $r14;
        java.util.Map r2, $r5, $r6, $r10;
        java.lang.Throwable r3, r4, $r12, $r15, r18;
        java.lang.Object $r7;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl $r8;
        android.hardware.camera2.CameraCharacteristics $r9;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat r16;
        androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat r17;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompat;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: java.util.Map mCameraCharacteristicsMap>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: java.util.Map mCameraCharacteristicsMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r16 = (androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat) $r7;

        if r16 != null goto label5;

     label2:
        $r8 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl>;

        $r9 = interfaceinvoke $r8.<androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>(r1);

        r16 = staticinvoke <androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat toCameraCharacteristicsCompat(android.hardware.camera2.CameraCharacteristics)>($r9);

        $r10 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: java.util.Map mCameraCharacteristicsMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r16);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        r3 = $r12;

        r17 = new androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat;

        $r14 = virtualinvoke r3.<java.lang.AssertionError: java.lang.String getMessage()>();

        specialinvoke r17.<androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat: void <init>(int,java.lang.String,java.lang.Throwable)>(10002, $r14, r3);

        r18 = (java.lang.Throwable) r17;

        throw r18;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        return r16;

        catch java.lang.AssertionError from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void openCamera(java.lang.String, java.util.concurrent.Executor, android.hardware.camera2.CameraDevice$StateCallback) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompat r0;
        java.lang.String r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraDevice$StateCallback r3;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraDevice$StateCallback;

        $r4 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl>;

        interfaceinvoke $r4.<androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl: void openCamera(java.lang.String,java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback)>(r1, r2, r3);

        return;
    }

    public android.hardware.camera2.CameraManager unwrap()
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompat r0;
        androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl $r1;
        android.hardware.camera2.CameraManager $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompat;

        $r1 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.camera.camera2.internal.compat.CameraManagerCompat$CameraManagerCompatImpl: android.hardware.camera2.CameraManager getCameraManager()>();

        return $r2;
    }

