androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion Companion>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int MaxCapacity>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int Unset>
    public void <init>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int[] $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[16];

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans> = $r1;

        return;
    }

    public final void setSpan(int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int i0, i1, $i2, $i3, $i4;
        int[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r4 = "Negative spans are not supported";

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void ensureValidIndex(int)>(i0);

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor>;

        $i4 = i0 - $i2;

        $i3 = i1 + 1;

        $r1[$i4] = $i3;

        return;
    }

    public final int getSpan(int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int lowerBound()>();

        if i0 < $i1 goto label1;

        $i2 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int upperBound()>();

        if i0 < $i2 goto label2;

     label1:
        return -1;

     label2:
        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor>;

        $i4 = i0 - $i3;

        $i5 = $r1[$i4];

        $i6 = $i5 - 1;

        return $i6;
    }

    public final int upperBound()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        $i1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor>;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i0 = lengthof $r1;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public final int lowerBound()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor>;

        return $i0;
    }

    public final void reset()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int[] $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        staticinvoke <kotlin.collections.ArraysKt: void fill$default(int[],int,int,int,int,java.lang.Object)>($r1, 0, 0, 0, 6, null);

        return;
    }

    public final int findPreviousItemIndex(int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 = i0 - 1;

     label1:
        if -1 >= i3 goto label4;

        i2 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int getSpan(int)>(i3);

        if i2 == i1 goto label2;

        if i2 != -1 goto label3;

     label2:
        return i3;

     label3:
        i3 = i3 + -1;

        goto label1;

     label4:
        return -1;
    }

    public final int findNextItemIndex(int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int i0, i1, i2, i3, $i4, i5;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i5 = i0 + 1;

        i2 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int upperBound()>();

     label1:
        if i5 >= i2 goto label4;

        i3 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int getSpan(int)>(i5);

        if i3 == i1 goto label2;

        if i3 != -1 goto label3;

     label2:
        return i5;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        $i4 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int upperBound()>();

        return $i4;
    }

    public final void ensureValidIndex(int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        i0 := @parameter0: int;

        $i3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor>;

        i1 = i0 - $i3;

        if 0 > i1 goto label2;

        if i1 >= 131072 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        $i25 = i1 + 1;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void ensureCapacity$default(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans,int,int,int,java.lang.Object)>(r0, $i25, 0, 2, null);

        goto label9;

     label4:
        i2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor>;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i4 = lengthof $r1;

        $i5 = $i4 / 2;

        $i6 = i0 - $i5;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, 0);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor> = $i7;

        $i8 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int anchor>;

        i26 = $i8 - i2;

        if i26 < 0 goto label6;

        $r11 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i19 = lengthof $r11;

        if i26 >= $i19 goto label5;

        $r17 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $r16 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $r15 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i24 = lengthof $r15;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto(int[],int[],int,int,int)>($r17, $r16, 0, i26, $i24);

     label5:
        $r13 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $r12 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i20 = lengthof $r12;

        $i21 = $i20 - i26;

        $i22 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i21);

        $r14 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i23 = lengthof $r14;

        staticinvoke <kotlin.collections.ArraysKt: void fill(int[],int,int,int)>($r13, 0, $i22, $i23);

        goto label9;

     label6:
        i27 = neg i26;

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i9 = lengthof $r2;

        $i10 = $i9 + i27;

        if $i10 >= 131072 goto label7;

        $r10 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i16 = lengthof $r10;

        $i17 = $i16 + i27;

        $i18 = $i17 + 1;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void ensureCapacity(int,int)>($i18, i27);

        goto label9;

     label7:
        $r3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i11 = lengthof $r3;

        if i27 >= $i11 goto label8;

        $r8 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $r7 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $r6 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i14 = lengthof $r6;

        $i15 = $i14 - i27;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto(int[],int[],int,int,int)>($r8, $r7, i27, 0, $i15);

     label8:
        $r5 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i12 = lengthof $r4;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i12, i27);

        staticinvoke <kotlin.collections.ArraysKt: void fill(int[],int,int,int)>($r5, 0, 0, $i13);

     label9:
        return;
    }

    private final void ensureCapacity(int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int i0, i1, $i2, i3;
        int[] $r1, $r2, $r3, $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11, $r12;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 > 131072 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested span capacity ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is larger than max supported: 131072!");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label3:
        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $i2 = lengthof $r1;

        if $i2 >= i0 goto label6;

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        i3 = lengthof $r2;

     label4:
        if i3 >= i0 goto label5;

        i3 = i3 * 2;

        goto label4;

     label5:
        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans>;

        $r3 = newarray (int)[i3];

        $r5 = staticinvoke <kotlin.collections.ArraysKt: int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)>($r4, $r3, i1, 0, 0, 12, null);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int[] spans> = $r5;

     label6:
        return;
    }

    static void ensureCapacity$default(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans, int, int, int, java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans r0;
        int i0, i1, $i2, i3;
        java.lang.Object r1;

        r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        i3 = 0;

     label1:
        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void ensureCapacity(int,int)>(i0, i3);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion $r0;

        $r0 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion;

        specialinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion Companion> = $r0;

        return;
    }

androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion
    private void <init>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion r0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans$Companion: void <init>()>();

        return;
    }

