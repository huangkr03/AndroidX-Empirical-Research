com.google.common.flogger.parameter.SimpleParameter
<com.google.common.flogger.parameter.SimpleParameter: java.util.Map DEFAULT_PARAMETERS>
<com.google.common.flogger.parameter.SimpleParameter: com.google.common.flogger.backend.FormatChar formatChar>
<com.google.common.flogger.parameter.SimpleParameter: java.lang.String formatString>
    static void <clinit>()
    {
        int $i0, $i1;
        com.google.common.flogger.backend.FormatChar $r0;
        java.util.EnumMap $r1, r5;
        com.google.common.flogger.backend.FormatChar[] $r2;
        com.google.common.flogger.parameter.SimpleParameter[] $r3;
        java.util.Map $r4;

        r5 = new java.util.EnumMap;

        $r1 = r5;

        specialinvoke r5.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lcom/google/common/flogger/backend/FormatChar;");

        $r2 = staticinvoke <com.google.common.flogger.backend.FormatChar: com.google.common.flogger.backend.FormatChar[] values()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r0 = $r2[$i1];

        $r3 = staticinvoke <com.google.common.flogger.parameter.SimpleParameter: com.google.common.flogger.parameter.SimpleParameter[] createParameterArray(com.google.common.flogger.backend.FormatChar)>($r0);

        $r4 = (java.util.Map) $r1;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r4 = (java.util.Map) $r1;

        $r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r4);

        <com.google.common.flogger.parameter.SimpleParameter: java.util.Map DEFAULT_PARAMETERS> = $r4;

        return;
    }

    private void <init>(int, com.google.common.flogger.backend.FormatChar, com.google.common.flogger.backend.FormatOptions)
    {
        com.google.common.flogger.parameter.SimpleParameter $r0;
        com.google.common.flogger.backend.FormatChar $r1, $r4;
        com.google.common.flogger.backend.FormatOptions $r2;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.String $r5;

        $r0 := @this: com.google.common.flogger.parameter.SimpleParameter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.common.flogger.backend.FormatChar;

        $r2 := @parameter2: com.google.common.flogger.backend.FormatOptions;

        specialinvoke $r0.<com.google.common.flogger.parameter.Parameter: void <init>(com.google.common.flogger.backend.FormatOptions,int)>($r2, $i0);

        $r3 = staticinvoke <com.google.common.flogger.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r1, "format char");

        $r4 = (com.google.common.flogger.backend.FormatChar) $r3;

        $r0.<com.google.common.flogger.parameter.SimpleParameter: com.google.common.flogger.backend.FormatChar formatChar> = $r4;

        $z0 = virtualinvoke $r2.<com.google.common.flogger.backend.FormatOptions: boolean isDefault()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke $r1.<com.google.common.flogger.backend.FormatChar: java.lang.String getDefaultFormatString()>();

        goto label2;

     label1:
        $r5 = staticinvoke <com.google.common.flogger.parameter.SimpleParameter: java.lang.String buildFormatString(com.google.common.flogger.backend.FormatOptions,com.google.common.flogger.backend.FormatChar)>($r2, $r1);

     label2:
        $r0.<com.google.common.flogger.parameter.SimpleParameter: java.lang.String formatString> = $r5;

        return;
    }

    static java.lang.String buildFormatString(com.google.common.flogger.backend.FormatOptions, com.google.common.flogger.backend.FormatChar)
    {
        com.google.common.flogger.backend.FormatOptions $r0;
        com.google.common.flogger.backend.FormatChar $r1;
        char $c0, $c1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: com.google.common.flogger.backend.FormatOptions;

        $r1 := @parameter1: com.google.common.flogger.backend.FormatChar;

        $c0 = virtualinvoke $r1.<com.google.common.flogger.backend.FormatChar: char getChar()>();

        $c1 = $c0;

        $z0 = virtualinvoke $r0.<com.google.common.flogger.backend.FormatOptions: boolean shouldUpperCase()>();

        if $z0 == 0 goto label1;

        $c1 = $c0 & 65503;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("%");

        $r2 = virtualinvoke $r0.<com.google.common.flogger.backend.FormatOptions: java.lang.StringBuilder appendPrintfOptions(java.lang.StringBuilder)>($r2);

        $c0 = $c1;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static com.google.common.flogger.parameter.SimpleParameter[] createParameterArray(com.google.common.flogger.backend.FormatChar)
    {
        com.google.common.flogger.backend.FormatChar $r0;
        com.google.common.flogger.parameter.SimpleParameter[] $r1;
        com.google.common.flogger.parameter.SimpleParameter $r2;
        com.google.common.flogger.backend.FormatOptions $r3;
        int $i0;

        $r0 := @parameter0: com.google.common.flogger.backend.FormatChar;

        $r1 = newarray (com.google.common.flogger.parameter.SimpleParameter)[10];

        $i0 = 0;

     label1:
        if $i0 >= 10 goto label2;

        $r2 = new com.google.common.flogger.parameter.SimpleParameter;

        $r3 = staticinvoke <com.google.common.flogger.backend.FormatOptions: com.google.common.flogger.backend.FormatOptions getDefault()>();

        specialinvoke $r2.<com.google.common.flogger.parameter.SimpleParameter: void <init>(int,com.google.common.flogger.backend.FormatChar,com.google.common.flogger.backend.FormatOptions)>($i0, $r0, $r3);

        $r1[$i0] = $r2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static com.google.common.flogger.parameter.SimpleParameter of(int, com.google.common.flogger.backend.FormatChar, com.google.common.flogger.backend.FormatOptions)
    {
        int $i0;
        com.google.common.flogger.backend.FormatChar $r0;
        com.google.common.flogger.backend.FormatOptions $r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.google.common.flogger.parameter.SimpleParameter[] $r4;
        com.google.common.flogger.parameter.SimpleParameter $r5;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.common.flogger.backend.FormatChar;

        $r1 := @parameter2: com.google.common.flogger.backend.FormatOptions;

        if $i0 >= 10 goto label1;

        $z0 = virtualinvoke $r1.<com.google.common.flogger.backend.FormatOptions: boolean isDefault()>();

        if $z0 == 0 goto label1;

        $r2 = <com.google.common.flogger.parameter.SimpleParameter: java.util.Map DEFAULT_PARAMETERS>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = (com.google.common.flogger.parameter.SimpleParameter[]) $r3;

        $r5 = $r4[$i0];

        return $r5;

     label1:
        $r5 = new com.google.common.flogger.parameter.SimpleParameter;

        specialinvoke $r5.<com.google.common.flogger.parameter.SimpleParameter: void <init>(int,com.google.common.flogger.backend.FormatChar,com.google.common.flogger.backend.FormatOptions)>($i0, $r0, $r1);

        return $r5;
    }

    protected void accept(com.google.common.flogger.parameter.ParameterVisitor, java.lang.Object)
    {
        com.google.common.flogger.parameter.SimpleParameter $r0;
        com.google.common.flogger.parameter.ParameterVisitor $r1;
        java.lang.Object $r2;
        com.google.common.flogger.backend.FormatChar $r3;
        com.google.common.flogger.backend.FormatOptions $r4;

        $r0 := @this: com.google.common.flogger.parameter.SimpleParameter;

        $r1 := @parameter0: com.google.common.flogger.parameter.ParameterVisitor;

        $r2 := @parameter1: java.lang.Object;

        $r3 = $r0.<com.google.common.flogger.parameter.SimpleParameter: com.google.common.flogger.backend.FormatChar formatChar>;

        $r4 = virtualinvoke $r0.<com.google.common.flogger.parameter.SimpleParameter: com.google.common.flogger.backend.FormatOptions getFormatOptions()>();

        interfaceinvoke $r1.<com.google.common.flogger.parameter.ParameterVisitor: void visit(java.lang.Object,com.google.common.flogger.backend.FormatChar,com.google.common.flogger.backend.FormatOptions)>($r2, $r3, $r4);

        return;
    }

