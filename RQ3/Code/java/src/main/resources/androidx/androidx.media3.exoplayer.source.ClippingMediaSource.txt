androidx.media3.exoplayer.source.ClippingMediaSource
<androidx.media3.exoplayer.source.ClippingMediaSource: long startUs>
<androidx.media3.exoplayer.source.ClippingMediaSource: long endUs>
<androidx.media3.exoplayer.source.ClippingMediaSource: boolean enableInitialDiscontinuity>
<androidx.media3.exoplayer.source.ClippingMediaSource: boolean allowDynamicClippingUpdates>
<androidx.media3.exoplayer.source.ClippingMediaSource: boolean relativeToDefaultPosition>
<androidx.media3.exoplayer.source.ClippingMediaSource: java.util.ArrayList mediaPeriods>
<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.common.Timeline$Window window>
<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline clippingTimeline>
<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException clippingError>
<androidx.media3.exoplayer.source.ClippingMediaSource: long periodStartUs>
<androidx.media3.exoplayer.source.ClippingMediaSource: long periodEndUs>
    public void <init>(androidx.media3.exoplayer.source.MediaSource, long, long)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource r1;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<androidx.media3.exoplayer.source.ClippingMediaSource: void <init>(androidx.media3.exoplayer.source.MediaSource,long,long,boolean,boolean,boolean)>(r1, l0, l1, 1, 0, 0);

        return;
    }

    public void <init>(androidx.media3.exoplayer.source.MediaSource, long)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource r1;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource;

        l0 := @parameter1: long;

        specialinvoke r0.<androidx.media3.exoplayer.source.ClippingMediaSource: void <init>(androidx.media3.exoplayer.source.MediaSource,long,long,boolean,boolean,boolean)>(r1, 0L, l0, 1, 0, 1);

        return;
    }

    public void <init>(androidx.media3.exoplayer.source.MediaSource, long, long, boolean, boolean, boolean)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource r1, $r3;
        long l0, l1;
        boolean z0, z1, z2, $z3;
        java.lang.Object $r2;
        byte $b2;
        java.util.ArrayList $r4;
        androidx.media3.common.Timeline$Window $r5;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.media3.exoplayer.source.MediaSource) $r2;

        specialinvoke r0.<androidx.media3.exoplayer.source.WrappingMediaSource: void <init>(androidx.media3.exoplayer.source.MediaSource)>($r3);

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z3);

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long startUs> = l0;

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long endUs> = l1;

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: boolean enableInitialDiscontinuity> = z0;

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: boolean allowDynamicClippingUpdates> = z1;

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: boolean relativeToDefaultPosition> = z2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: java.util.ArrayList mediaPeriods> = $r4;

        $r5 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r5.<androidx.media3.common.Timeline$Window: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.common.Timeline$Window window> = $r5;

        return;
    }

    public void maybeThrowSourceInfoRefreshError() throws java.io.IOException
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;
        androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException $r1, $r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException clippingError>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException clippingError>;

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.source.WrappingMediaSource: void maybeThrowSourceInfoRefreshError()>();

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.source.ClippingMediaPeriod r3, $r4;
        androidx.media3.exoplayer.source.MediaSource $r5;
        androidx.media3.exoplayer.source.MediaPeriod $r6;
        boolean $z0;
        java.util.ArrayList $r7;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        $r4 = new androidx.media3.exoplayer.source.ClippingMediaPeriod;

        $r5 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r6 = interfaceinvoke $r5.<androidx.media3.exoplayer.source.MediaSource: androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long)>(r1, r2, l0);

        $z0 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: boolean enableInitialDiscontinuity>;

        $l2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long periodStartUs>;

        $l1 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long periodEndUs>;

        specialinvoke $r4.<androidx.media3.exoplayer.source.ClippingMediaPeriod: void <init>(androidx.media3.exoplayer.source.MediaPeriod,boolean,long,long)>($r6, $z0, $l2, $l1);

        r3 = $r4;

        $r7 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: java.util.ArrayList mediaPeriods>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        return r3;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;
        androidx.media3.exoplayer.source.MediaPeriod r1, $r4;
        java.util.ArrayList $r2, $r6;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.source.ClippingMediaPeriod $r3;
        androidx.media3.exoplayer.source.MediaSource $r5;
        androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline $r7, $r9;
        java.lang.Object $r8;
        androidx.media3.common.Timeline $r10;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: java.util.ArrayList mediaPeriods>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r5 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r3 = (androidx.media3.exoplayer.source.ClippingMediaPeriod) r1;

        $r4 = $r3.<androidx.media3.exoplayer.source.ClippingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.source.MediaSource: void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)>($r4);

        $r6 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: java.util.ArrayList mediaPeriods>;

        $z1 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: boolean allowDynamicClippingUpdates>;

        if $z2 != 0 goto label1;

        $r7 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline clippingTimeline>;

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = (androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline) $r8;

        $r10 = $r9.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: androidx.media3.common.Timeline timeline>;

        specialinvoke r0.<androidx.media3.exoplayer.source.ClippingMediaSource: void refreshClippedTimeline(androidx.media3.common.Timeline)>($r10);

     label1:
        return;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        specialinvoke r0.<androidx.media3.exoplayer.source.WrappingMediaSource: void releaseSourceInternal()>();

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException clippingError> = null;

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline clippingTimeline> = null;

        return;
    }

    protected void onChildSourceInfoRefreshed(androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;
        androidx.media3.common.Timeline r1;
        androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException $r2;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        r1 := @parameter0: androidx.media3.common.Timeline;

        $r2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException clippingError>;

        if $r2 == null goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.source.ClippingMediaSource: void refreshClippedTimeline(androidx.media3.common.Timeline)>(r1);

        return;
    }

    private void refreshClippedTimeline(androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource r0;
        androidx.media3.common.Timeline r1;
        long l0, $l1, $l2, $l4, $l5, $l6, $l7, $l9, l10, l11, l12, $l13, $l16;
        androidx.media3.common.Timeline$Window $r2, $r4, $r12;
        androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline $r5, $r7, $r14;
        byte $b3, $b8;
        java.util.ArrayList $r6, $r8, $r13;
        java.lang.Object $r9;
        androidx.media3.exoplayer.source.ClippingMediaPeriod $r10;
        boolean $z0, $z1, $z2;
        int i14, i15;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource;

        r1 := @parameter0: androidx.media3.common.Timeline;

        $r2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.common.Timeline$Window window>;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(0, $r2);

        $r4 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.common.Timeline$Window window>;

        l0 = virtualinvoke $r4.<androidx.media3.common.Timeline$Window: long getPositionInFirstPeriodUs()>();

        $r5 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline clippingTimeline>;

        if $r5 == null goto label01;

        $r13 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: java.util.ArrayList mediaPeriods>;

        $z0 = virtualinvoke $r13.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label01;

        $z1 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: boolean allowDynamicClippingUpdates>;

        if $z1 == 0 goto label07;

     label01:
        l10 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long startUs>;

        l11 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long endUs>;

        $z2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: boolean relativeToDefaultPosition>;

        if $z2 == 0 goto label02;

        $r12 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.common.Timeline$Window window>;

        l12 = virtualinvoke $r12.<androidx.media3.common.Timeline$Window: long getDefaultPositionUs()>();

        l10 = l10 + l12;

        l11 = l11 + l12;

     label02:
        $l1 = l0 + l10;

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long periodStartUs> = $l1;

        $l2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long endUs>;

        $b3 = $l2 cmp -9223372036854775808L;

        if $b3 != 0 goto label03;

        $l13 = -9223372036854775808L;

        goto label04;

     label03:
        $l13 = l0 + l11;

     label04:
        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long periodEndUs> = $l13;

        $r6 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: java.util.ArrayList mediaPeriods>;

        i14 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i15 = 0;

     label05:
        if i15 >= i14 goto label06;

        $r8 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: java.util.ArrayList mediaPeriods>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        $r10 = (androidx.media3.exoplayer.source.ClippingMediaPeriod) $r9;

        $l5 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long periodStartUs>;

        $l4 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long periodEndUs>;

        virtualinvoke $r10.<androidx.media3.exoplayer.source.ClippingMediaPeriod: void updateClipping(long,long)>($l5, $l4);

        i15 = i15 + 1;

        goto label05;

     label06:
        goto label10;

     label07:
        $l6 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long periodStartUs>;

        l10 = $l6 - l0;

        $l7 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long endUs>;

        $b8 = $l7 cmp -9223372036854775808L;

        if $b8 != 0 goto label08;

        $l16 = -9223372036854775808L;

        goto label09;

     label08:
        $l9 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: long periodEndUs>;

        $l16 = $l9 - l0;

     label09:
        l11 = $l16;

     label10:
        $r14 = new androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline;

        specialinvoke $r14.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: void <init>(androidx.media3.common.Timeline,long,long)>(r1, l10, l11);

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline clippingTimeline> = $r14;

        goto label11;

     label11:
        $r7 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline clippingTimeline>;

        virtualinvoke r0.<androidx.media3.exoplayer.source.ClippingMediaSource: void refreshSourceInfo(androidx.media3.common.Timeline)>($r7);

        return;
    }

androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline
<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long startUs>
<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long endUs>
<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long durationUs>
<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: boolean isDynamic>
    public void <init>(androidx.media3.common.Timeline, long, long) throws androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException
    {
        androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline r0;
        androidx.media3.common.Timeline r1;
        long l0, $l2, $l6, $l8, $l10, l14, l15, $l17, l18, $l19;
        androidx.media3.common.Timeline$Window r2, r10;
        int $i1;
        boolean $z0, $z1, $z2, $z3;
        byte $b3, $b4, $b5, $b7, $b9, $b11, $b12, $b13, $b16;
        androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException r9, r11, r12;
        java.lang.Throwable r13, r14, r15;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline;

        r1 := @parameter0: androidx.media3.common.Timeline;

        l14 := @parameter1: long;

        l0 := @parameter2: long;

        specialinvoke r0.<androidx.media3.exoplayer.source.ForwardingTimeline: void <init>(androidx.media3.common.Timeline)>(r1);

        $i1 = virtualinvoke r1.<androidx.media3.common.Timeline: int getPeriodCount()>();

        if $i1 == 1 goto label01;

        r9 = new androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException;

        specialinvoke r9.<androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: void <init>(int)>(0);

        r13 = (java.lang.Throwable) r9;

        throw r13;

     label01:
        r10 = new androidx.media3.common.Timeline$Window;

        specialinvoke r10.<androidx.media3.common.Timeline$Window: void <init>()>();

        r2 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(0, r10);

        l15 = staticinvoke <java.lang.Math: long max(long,long)>(0L, l14);

        $z0 = r2.<androidx.media3.common.Timeline$Window: boolean isPlaceholder>;

        if $z0 != 0 goto label02;

        $b13 = l15 cmp 0L;

        if $b13 == 0 goto label02;

        $z2 = r2.<androidx.media3.common.Timeline$Window: boolean isSeekable>;

        if $z2 != 0 goto label02;

        r11 = new androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException;

        specialinvoke r11.<androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: void <init>(int)>(1);

        r14 = (java.lang.Throwable) r11;

        throw r14;

     label02:
        $b16 = l0 cmp -9223372036854775808L;

        if $b16 != 0 goto label03;

        $l17 = r2.<androidx.media3.common.Timeline$Window: long durationUs>;

        goto label04;

     label03:
        $l17 = staticinvoke <java.lang.Math: long max(long,long)>(0L, l0);

     label04:
        l18 = $l17;

        $l2 = r2.<androidx.media3.common.Timeline$Window: long durationUs>;

        $b3 = $l2 cmp -9223372036854775807L;

        if $b3 == 0 goto label06;

        $l10 = r2.<androidx.media3.common.Timeline$Window: long durationUs>;

        $b11 = l18 cmp $l10;

        if $b11 <= 0 goto label05;

        l18 = r2.<androidx.media3.common.Timeline$Window: long durationUs>;

     label05:
        $b12 = l15 cmp l18;

        if $b12 <= 0 goto label06;

        r12 = new androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException;

        specialinvoke r12.<androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: void <init>(int)>(2);

        r15 = (java.lang.Throwable) r12;

        throw r15;

     label06:
        r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long startUs> = l15;

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long endUs> = l18;

        $b4 = l18 cmp -9223372036854775807L;

        if $b4 != 0 goto label07;

        $l19 = -9223372036854775807L;

        goto label08;

     label07:
        $l19 = l18 - l15;

     label08:
        r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long durationUs> = $l19;

        $z1 = r2.<androidx.media3.common.Timeline$Window: boolean isDynamic>;

        if $z1 == 0 goto label10;

        $b5 = l18 cmp -9223372036854775807L;

        if $b5 == 0 goto label09;

        $l6 = r2.<androidx.media3.common.Timeline$Window: long durationUs>;

        $b7 = $l6 cmp -9223372036854775807L;

        if $b7 == 0 goto label10;

        $l8 = r2.<androidx.media3.common.Timeline$Window: long durationUs>;

        $b9 = l18 cmp $l8;

        if $b9 != 0 goto label10;

     label09:
        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: boolean isDynamic> = $z3;

        return;
    }

    public androidx.media3.common.Timeline$Window getWindow(int, androidx.media3.common.Timeline$Window, long)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline r0;
        int i0;
        androidx.media3.common.Timeline$Window r1;
        long l1, l2, $l3, $l4, $l5, $l6, $l7, $l9, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27;
        androidx.media3.common.Timeline $r2;
        boolean $z0;
        byte $b8, $b10, $b19, $b28;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Window;

        l1 := @parameter2: long;

        $r2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: androidx.media3.common.Timeline timeline>;

        virtualinvoke $r2.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long)>(0, r1, 0L);

        $l4 = r1.<androidx.media3.common.Timeline$Window: long positionInFirstPeriodUs>;

        $l3 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long startUs>;

        $l5 = $l4 + $l3;

        r1.<androidx.media3.common.Timeline$Window: long positionInFirstPeriodUs> = $l5;

        $l6 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long durationUs>;

        r1.<androidx.media3.common.Timeline$Window: long durationUs> = $l6;

        $z0 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: boolean isDynamic>;

        r1.<androidx.media3.common.Timeline$Window: boolean isDynamic> = $z0;

        $l7 = r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs>;

        $b8 = $l7 cmp -9223372036854775807L;

        if $b8 == 0 goto label3;

        $l16 = r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs>;

        $l15 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long startUs>;

        $l17 = staticinvoke <java.lang.Math: long max(long,long)>($l16, $l15);

        r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs> = $l17;

        $l18 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long endUs>;

        $b19 = $l18 cmp -9223372036854775807L;

        if $b19 != 0 goto label1;

        $l25 = r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs>;

        goto label2;

     label1:
        $l21 = r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs>;

        $l20 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long endUs>;

        $l25 = staticinvoke <java.lang.Math: long min(long,long)>($l21, $l20);

     label2:
        r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs> = $l25;

        $l23 = r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs>;

        $l22 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long startUs>;

        $l24 = $l23 - $l22;

        r1.<androidx.media3.common.Timeline$Window: long defaultPositionUs> = $l24;

     label3:
        $l26 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long startUs>;

        l2 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l26);

        $l27 = r1.<androidx.media3.common.Timeline$Window: long presentationStartTimeMs>;

        $b28 = $l27 cmp -9223372036854775807L;

        if $b28 == 0 goto label4;

        $l13 = r1.<androidx.media3.common.Timeline$Window: long presentationStartTimeMs>;

        $l14 = $l13 + l2;

        r1.<androidx.media3.common.Timeline$Window: long presentationStartTimeMs> = $l14;

     label4:
        $l9 = r1.<androidx.media3.common.Timeline$Window: long windowStartTimeMs>;

        $b10 = $l9 cmp -9223372036854775807L;

        if $b10 == 0 goto label5;

        $l11 = r1.<androidx.media3.common.Timeline$Window: long windowStartTimeMs>;

        $l12 = $l11 + l2;

        r1.<androidx.media3.common.Timeline$Window: long windowStartTimeMs> = $l12;

     label5:
        return r1;
    }

    public androidx.media3.common.Timeline$Period getPeriod(int, androidx.media3.common.Timeline$Period, boolean)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline r0;
        int i0;
        androidx.media3.common.Timeline$Period r1, $r6;
        boolean z0;
        long l1, l2, $l3, $l4, $l5, $l7, $l8;
        androidx.media3.common.Timeline $r2;
        byte $b6;
        java.lang.Object $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Period;

        z0 := @parameter2: boolean;

        $r2 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: androidx.media3.common.Timeline timeline>;

        virtualinvoke $r2.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean)>(0, r1, z0);

        $l3 = virtualinvoke r1.<androidx.media3.common.Timeline$Period: long getPositionInWindowUs()>();

        $l4 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long startUs>;

        l1 = $l3 - $l4;

        $l5 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long durationUs>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 != 0 goto label1;

        $l8 = -9223372036854775807L;

        goto label2;

     label1:
        $l7 = r0.<androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline: long durationUs>;

        $l8 = $l7 - l1;

     label2:
        l2 = $l8;

        $r5 = r1.<androidx.media3.common.Timeline$Period: java.lang.Object id>;

        $r4 = r1.<androidx.media3.common.Timeline$Period: java.lang.Object uid>;

        $r6 = virtualinvoke r1.<androidx.media3.common.Timeline$Period: androidx.media3.common.Timeline$Period set(java.lang.Object,java.lang.Object,int,long,long)>($r5, $r4, 0, l2, l1);

        return $r6;
    }

androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException$Reason
androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException
<androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: int REASON_INVALID_PERIOD_COUNT>
<androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: int REASON_NOT_SEEKABLE_TO_START>
<androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: int REASON_START_EXCEEDS_END>
<androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: int reason>
    public void <init>(int)
    {
        androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal clipping: ");

        $r3 = staticinvoke <androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: java.lang.String getReasonDescription(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>($r5);

        r0.<androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException: int reason> = i0;

        return;
    }

    private static java.lang.String getReasonDescription(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return "invalid period count";

     label2:
        return "not seekable to start";

     label3:
        return "start exceeds end";

     label4:
        return "unknown";
    }

