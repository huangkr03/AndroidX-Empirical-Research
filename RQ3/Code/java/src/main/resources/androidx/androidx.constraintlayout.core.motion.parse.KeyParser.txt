androidx.constraintlayout.core.motion.parse.KeyParser
    public void <init>()
    {
        androidx.constraintlayout.core.motion.parse.KeyParser r0;

        r0 := @this: androidx.constraintlayout.core.motion.parse.KeyParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static androidx.constraintlayout.core.motion.utils.TypedBundle parse(java.lang.String, androidx.constraintlayout.core.motion.parse.KeyParser$Ids, androidx.constraintlayout.core.motion.parse.KeyParser$DataType)
    {
        java.lang.String r0, r6, $r10, $r16, $r18, $r25, $r32, $r37;
        androidx.constraintlayout.core.motion.parse.KeyParser$Ids r1;
        androidx.constraintlayout.core.motion.parse.KeyParser$DataType r2;
        androidx.constraintlayout.core.motion.utils.TypedBundle r3, $r8;
        androidx.constraintlayout.core.parser.CLObject r4;
        int i0, i1, $i2, $i3, $i4, i5;
        androidx.constraintlayout.core.parser.CLKey r5;
        androidx.constraintlayout.core.parser.CLElement r7, $r9;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r17, $r19, $r21, $r22, $r23, $r24, $r26, $r28, $r29, $r30, $r31, $r33, $r35, $r36;
        java.io.PrintStream $r12, $r20, $r27, $r34;
        float $f0, $f1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.constraintlayout.core.motion.parse.KeyParser$Ids;

        r2 := @parameter2: androidx.constraintlayout.core.motion.parse.KeyParser$DataType;

        $r8 = new androidx.constraintlayout.core.motion.utils.TypedBundle;

        specialinvoke $r8.<androidx.constraintlayout.core.motion.utils.TypedBundle: void <init>()>();

        r3 = $r8;

        r4 = staticinvoke <androidx.constraintlayout.core.parser.CLParser: androidx.constraintlayout.core.parser.CLObject parse(java.lang.String)>(r0);

        i0 = virtualinvoke r4.<androidx.constraintlayout.core.parser.CLObject: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label8;

        $r9 = virtualinvoke r4.<androidx.constraintlayout.core.parser.CLObject: androidx.constraintlayout.core.parser.CLElement get(int)>(i5);

        r5 = (androidx.constraintlayout.core.parser.CLKey) $r9;

        r6 = virtualinvoke r5.<androidx.constraintlayout.core.parser.CLKey: java.lang.String content()>();

        r7 = virtualinvoke r5.<androidx.constraintlayout.core.parser.CLKey: androidx.constraintlayout.core.parser.CLElement getValue()>();

        i1 = interfaceinvoke r1.<androidx.constraintlayout.core.motion.parse.KeyParser$Ids: int get(java.lang.String)>(r6);

        if i1 != -1 goto label2;

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown type ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);

        goto label7;

     label2:
        $i2 = interfaceinvoke r2.<androidx.constraintlayout.core.motion.parse.KeyParser$DataType: int get(int)>(i1);

        tableswitch($i2)
        {
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label7;
            case 4: goto label3;
            case 5: goto label7;
            case 6: goto label7;
            case 7: goto label7;
            case 8: goto label4;
            default: goto label7;
        };

     label3:
        $f0 = virtualinvoke r7.<androidx.constraintlayout.core.parser.CLElement: float getFloat()>();

        virtualinvoke r3.<androidx.constraintlayout.core.motion.utils.TypedBundle: void add(int,float)>(i1, $f0);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FLOAT_MASK > ");

        $f1 = virtualinvoke r7.<androidx.constraintlayout.core.parser.CLElement: float getFloat()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r25);

        goto label7;

     label4:
        $r10 = virtualinvoke r7.<androidx.constraintlayout.core.parser.CLElement: java.lang.String content()>();

        virtualinvoke r3.<androidx.constraintlayout.core.motion.utils.TypedBundle: void add(int,java.lang.String)>(i1, $r10);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" STRING_MASK > ");

        $r16 = virtualinvoke r7.<androidx.constraintlayout.core.parser.CLElement: java.lang.String content()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r18);

        goto label7;

     label5:
        $i3 = virtualinvoke r7.<androidx.constraintlayout.core.parser.CLElement: int getInt()>();

        virtualinvoke r3.<androidx.constraintlayout.core.motion.utils.TypedBundle: void add(int,int)>(i1, $i3);

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" INT_MASK > ");

        $i4 = virtualinvoke r7.<androidx.constraintlayout.core.parser.CLElement: int getInt()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r32);

        goto label7;

     label6:
        $z0 = virtualinvoke r4.<androidx.constraintlayout.core.parser.CLObject: boolean getBoolean(int)>(i5);

        virtualinvoke r3.<androidx.constraintlayout.core.motion.utils.TypedBundle: void add(int,boolean)>(i1, $z0);

     label7:
        i5 = i5 + 1;

        goto label1;

     label8:
        goto label9;

     label9:
        return r3;
    }

    public static androidx.constraintlayout.core.motion.utils.TypedBundle parseAttributes(java.lang.String)
    {
        java.lang.String r0;
        androidx.constraintlayout.core.motion.parse.KeyParser$Ids $r1;
        androidx.constraintlayout.core.motion.parse.KeyParser$DataType $r2;
        androidx.constraintlayout.core.motion.utils.TypedBundle $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = dynamicinvoke "get" <androidx.constraintlayout.core.motion.parse.KeyParser$Ids ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.String), methodhandle: "REF_INVOKE_STATIC" <androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType: int getId(java.lang.String)>, methodtype: int __METHODTYPE__(java.lang.String));

        $r2 = dynamicinvoke "get" <androidx.constraintlayout.core.motion.parse.KeyParser$DataType ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(int), methodhandle: "REF_INVOKE_STATIC" <androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType: int getType(int)>, methodtype: int __METHODTYPE__(int));

        $r3 = staticinvoke <androidx.constraintlayout.core.motion.parse.KeyParser: androidx.constraintlayout.core.motion.utils.TypedBundle parse(java.lang.String,androidx.constraintlayout.core.motion.parse.KeyParser$Ids,androidx.constraintlayout.core.motion.parse.KeyParser$DataType)>(r0, $r1, $r2);

        return $r3;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.String[];

        r1 = "{frame:22,\ntarget:\'widget1\',\neasing:\'easeIn\',\ncurveFit:\'spline\',\nprogress:0.3,\nalpha:0.2,\nelevation:0.7,\nrotationZ:23,\nrotationX:25.0,\nrotationY:27.0,\npivotX:15,\npivotY:17,\npivotTarget:\'32\',\npathRotate:23,\nscaleX:0.5,\nscaleY:0.7,\ntranslationX:5,\ntranslationY:7,\ntranslationZ:11,\n}";

        staticinvoke <androidx.constraintlayout.core.motion.parse.KeyParser: androidx.constraintlayout.core.motion.utils.TypedBundle parseAttributes(java.lang.String)>(r1);

        return;
    }

androidx.constraintlayout.core.motion.parse.KeyParser$DataType
<androidx.constraintlayout.core.motion.parse.KeyParser$DataType: int get(int)>
androidx.constraintlayout.core.motion.parse.KeyParser$Ids
<androidx.constraintlayout.core.motion.parse.KeyParser$Ids: int get(java.lang.String)>
