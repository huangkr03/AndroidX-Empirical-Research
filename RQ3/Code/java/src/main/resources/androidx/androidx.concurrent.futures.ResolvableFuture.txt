androidx.concurrent.futures.ResolvableFuture
    public static androidx.concurrent.futures.ResolvableFuture create()
    {
        androidx.concurrent.futures.ResolvableFuture $r0;

        $r0 = new androidx.concurrent.futures.ResolvableFuture;

        specialinvoke $r0.<androidx.concurrent.futures.ResolvableFuture: void <init>()>();

        return $r0;
    }

    public boolean set(java.lang.Object)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<androidx.concurrent.futures.AbstractResolvableFuture: boolean set(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean setException(java.lang.Throwable)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        java.lang.Throwable r1;
        boolean $z0;

        r0 := @this: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter0: java.lang.Throwable;

        $z0 = specialinvoke r0.<androidx.concurrent.futures.AbstractResolvableFuture: boolean setException(java.lang.Throwable)>(r1);

        return $z0;
    }

    public boolean setFuture(com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        boolean $z0;

        r0 := @this: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $z0 = specialinvoke r0.<androidx.concurrent.futures.AbstractResolvableFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)>(r1);

        return $z0;
    }

    private void <init>()
    {
        androidx.concurrent.futures.ResolvableFuture r0;

        r0 := @this: androidx.concurrent.futures.ResolvableFuture;

        specialinvoke r0.<androidx.concurrent.futures.AbstractResolvableFuture: void <init>()>();

        return;
    }

