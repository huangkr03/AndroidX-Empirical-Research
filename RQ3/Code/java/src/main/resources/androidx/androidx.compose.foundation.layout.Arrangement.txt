androidx.compose.foundation.layout.Arrangement
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement INSTANCE>
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Horizontal Start>
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Horizontal End>
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Vertical Top>
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Vertical Bottom>
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical Center>
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceEvenly>
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceBetween>
<androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceAround>
    private void <init>()
    {
        androidx.compose.foundation.layout.Arrangement r0;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$Horizontal getStart()
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.foundation.layout.Arrangement$Horizontal $r1;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 = <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Horizontal Start>;

        return $r1;
    }

    public static void getStart$annotations()
    {
        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$Horizontal getEnd()
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.foundation.layout.Arrangement$Horizontal $r1;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 = <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Horizontal End>;

        return $r1;
    }

    public static void getEnd$annotations()
    {
        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$Vertical getTop()
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.foundation.layout.Arrangement$Vertical $r1;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 = <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Vertical Top>;

        return $r1;
    }

    public static void getTop$annotations()
    {
        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$Vertical getBottom()
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.foundation.layout.Arrangement$Vertical $r1;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 = <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Vertical Bottom>;

        return $r1;
    }

    public static void getBottom$annotations()
    {
        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical getCenter()
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical $r1;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 = <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical Center>;

        return $r1;
    }

    public static void getCenter$annotations()
    {
        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical getSpaceEvenly()
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical $r1;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 = <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceEvenly>;

        return $r1;
    }

    public static void getSpaceEvenly$annotations()
    {
        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical getSpaceBetween()
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical $r1;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 = <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceBetween>;

        return $r1;
    }

    public static void getSpaceBetween$annotations()
    {
        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical getSpaceAround()
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical $r1;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 = <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceAround>;

        return $r1;
    }

    public static void getSpaceAround$annotations()
    {
        return;
    }

    public final androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical spacedBy-0680j_4(float)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        float f0;
        androidx.compose.foundation.layout.Arrangement$SpacedAligned $r1;
        androidx.compose.foundation.layout.Arrangement$spacedBy$1 $r2;
        kotlin.jvm.functions.Function2 $r3;
        androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical $r4;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        f0 := @parameter0: float;

        $r1 = new androidx.compose.foundation.layout.Arrangement$SpacedAligned;

        $r2 = <androidx.compose.foundation.layout.Arrangement$spacedBy$1: androidx.compose.foundation.layout.Arrangement$spacedBy$1 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        specialinvoke $r1.<androidx.compose.foundation.layout.Arrangement$SpacedAligned: void <init>(float,boolean,kotlin.jvm.functions.Function2,kotlin.jvm.internal.DefaultConstructorMarker)>(f0, 1, $r3, null);

        $r4 = (androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical) $r1;

        return $r4;
    }

    public final androidx.compose.foundation.layout.Arrangement$Horizontal spacedBy-D5KLDUw(float, androidx.compose.ui.Alignment$Horizontal)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        float f0;
        androidx.compose.ui.Alignment$Horizontal r1;
        androidx.compose.foundation.layout.Arrangement$SpacedAligned $r2;
        androidx.compose.foundation.layout.Arrangement$spacedBy$2 $r3;
        kotlin.jvm.functions.Function2 $r4;
        androidx.compose.foundation.layout.Arrangement$Horizontal $r5;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.compose.ui.Alignment$Horizontal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignment");

        $r2 = new androidx.compose.foundation.layout.Arrangement$SpacedAligned;

        $r3 = new androidx.compose.foundation.layout.Arrangement$spacedBy$2;

        specialinvoke $r3.<androidx.compose.foundation.layout.Arrangement$spacedBy$2: void <init>(androidx.compose.ui.Alignment$Horizontal)>(r1);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        specialinvoke $r2.<androidx.compose.foundation.layout.Arrangement$SpacedAligned: void <init>(float,boolean,kotlin.jvm.functions.Function2,kotlin.jvm.internal.DefaultConstructorMarker)>(f0, 1, $r4, null);

        $r5 = (androidx.compose.foundation.layout.Arrangement$Horizontal) $r2;

        return $r5;
    }

    public final androidx.compose.foundation.layout.Arrangement$Vertical spacedBy-D5KLDUw(float, androidx.compose.ui.Alignment$Vertical)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        float f0;
        androidx.compose.ui.Alignment$Vertical r1;
        androidx.compose.foundation.layout.Arrangement$SpacedAligned $r2;
        androidx.compose.foundation.layout.Arrangement$spacedBy$3 $r3;
        kotlin.jvm.functions.Function2 $r4;
        androidx.compose.foundation.layout.Arrangement$Vertical $r5;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.compose.ui.Alignment$Vertical;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignment");

        $r2 = new androidx.compose.foundation.layout.Arrangement$SpacedAligned;

        $r3 = new androidx.compose.foundation.layout.Arrangement$spacedBy$3;

        specialinvoke $r3.<androidx.compose.foundation.layout.Arrangement$spacedBy$3: void <init>(androidx.compose.ui.Alignment$Vertical)>(r1);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        specialinvoke $r2.<androidx.compose.foundation.layout.Arrangement$SpacedAligned: void <init>(float,boolean,kotlin.jvm.functions.Function2,kotlin.jvm.internal.DefaultConstructorMarker)>(f0, 0, $r4, null);

        $r5 = (androidx.compose.foundation.layout.Arrangement$Vertical) $r2;

        return $r5;
    }

    public final androidx.compose.foundation.layout.Arrangement$Horizontal aligned(androidx.compose.ui.Alignment$Horizontal)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.ui.Alignment$Horizontal r1;
        androidx.compose.foundation.layout.Arrangement$SpacedAligned $r2;
        float $f0, $f1;
        androidx.compose.foundation.layout.Arrangement$aligned$1 $r3;
        kotlin.jvm.functions.Function2 $r4;
        androidx.compose.foundation.layout.Arrangement$Horizontal $r5;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        r1 := @parameter0: androidx.compose.ui.Alignment$Horizontal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignment");

        $r2 = new androidx.compose.foundation.layout.Arrangement$SpacedAligned;

        $f0 = (float) 0;

        $f1 = staticinvoke <androidx.compose.ui.unit.Dp: float constructor-impl(float)>($f0);

        $r3 = new androidx.compose.foundation.layout.Arrangement$aligned$1;

        specialinvoke $r3.<androidx.compose.foundation.layout.Arrangement$aligned$1: void <init>(androidx.compose.ui.Alignment$Horizontal)>(r1);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        specialinvoke $r2.<androidx.compose.foundation.layout.Arrangement$SpacedAligned: void <init>(float,boolean,kotlin.jvm.functions.Function2,kotlin.jvm.internal.DefaultConstructorMarker)>($f1, 1, $r4, null);

        $r5 = (androidx.compose.foundation.layout.Arrangement$Horizontal) $r2;

        return $r5;
    }

    public final androidx.compose.foundation.layout.Arrangement$Vertical aligned(androidx.compose.ui.Alignment$Vertical)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        androidx.compose.ui.Alignment$Vertical r1;
        androidx.compose.foundation.layout.Arrangement$SpacedAligned $r2;
        float $f0, $f1;
        androidx.compose.foundation.layout.Arrangement$aligned$2 $r3;
        kotlin.jvm.functions.Function2 $r4;
        androidx.compose.foundation.layout.Arrangement$Vertical $r5;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        r1 := @parameter0: androidx.compose.ui.Alignment$Vertical;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignment");

        $r2 = new androidx.compose.foundation.layout.Arrangement$SpacedAligned;

        $f0 = (float) 0;

        $f1 = staticinvoke <androidx.compose.ui.unit.Dp: float constructor-impl(float)>($f0);

        $r3 = new androidx.compose.foundation.layout.Arrangement$aligned$2;

        specialinvoke $r3.<androidx.compose.foundation.layout.Arrangement$aligned$2: void <init>(androidx.compose.ui.Alignment$Vertical)>(r1);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        specialinvoke $r2.<androidx.compose.foundation.layout.Arrangement$SpacedAligned: void <init>(float,boolean,kotlin.jvm.functions.Function2,kotlin.jvm.internal.DefaultConstructorMarker)>($f1, 0, $r4, null);

        $r5 = (androidx.compose.foundation.layout.Arrangement$Vertical) $r2;

        return $r5;
    }

    public final void placeRightOrBottom$foundation_layout_release(int, int[], int[], boolean)
    {
        androidx.compose.foundation.layout.Arrangement r0, r4;
        int i0, i1, $i2, $i3, i5, $i6, $i7, i8, i9, i10, $i11, i12, i13, i14, i15, i16, $i17, i18, i19;
        int[] r1, r2;
        boolean z0, z4;
        byte b4;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "outPosition");

        b4 = 0;

        i5 = b4;

        $i6 = 0;

        $i7 = lengthof r1;

     label1:
        if $i6 >= $i7 goto label2;

        i8 = r1[$i6];

        i9 = i8;

        i10 = i5;

        i5 = i10 + i9;

        $i6 = $i6 + 1;

        goto label1;

     label2:
        i1 = i5;

        $i11 = i0 - i1;

        r4 = r0;

        z4 = 0;

        if z0 != 0 goto label5;

        i12 = 0;

        i13 = 0;

        i14 = lengthof r1;

     label3:
        if i13 >= i14 goto label4;

        $i3 = i12;

        i12 = i12 + 1;

        i15 = r1[i13];

        i16 = $i3;

        r2[i16] = $i11;

        $i11 = $i11 + i15;

        i13 = i13 + 1;

        goto label3;

     label4:
        goto label7;

     label5:
        $i2 = lengthof r1;

        $i17 = $i2 - 1;

     label6:
        if -1 >= $i17 goto label7;

        i18 = r1[$i17];

        i19 = $i17;

        r2[i19] = $i11;

        $i11 = $i11 + i18;

        $i17 = $i17 + -1;

        goto label6;

     label7:
        return;
    }

    public final void placeLeftOrTop$foundation_layout_release(int[], int[], boolean)
    {
        androidx.compose.foundation.layout.Arrangement r0, r3;
        int[] r1, r2;
        boolean z0;
        int i0, i1, $i2, $i3, i4, i5, i6, i7, i8, $i9, i10, i11;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "outPosition");

        i4 = 0;

        r3 = r0;

        if z0 != 0 goto label3;

        i5 = 0;

        i6 = 0;

        i0 = lengthof r1;

     label1:
        if i6 >= i0 goto label2;

        i1 = r1[i6];

        $i3 = i5;

        i5 = i5 + 1;

        i7 = i1;

        i8 = $i3;

        r2[i8] = i4;

        i4 = i4 + i7;

        i6 = i6 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $i2 = lengthof r1;

        $i9 = $i2 - 1;

     label4:
        if -1 >= $i9 goto label5;

        i10 = r1[$i9];

        i11 = $i9;

        r2[i11] = i4;

        i4 = i4 + i10;

        $i9 = $i9 + -1;

        goto label4;

     label5:
        return;
    }

    public final void placeCenter$foundation_layout_release(int, int[], int[], boolean)
    {
        androidx.compose.foundation.layout.Arrangement r0, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, i20, i21;
        int[] r1, r2;
        boolean z0, z3;
        float $f0, $f1, $f2, $f3, $f5;
        byte b7;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "outPosition");

        b7 = 0;

        i8 = b7;

        $i9 = 0;

        $i10 = lengthof r1;

     label1:
        if $i9 >= $i10 goto label2;

        i11 = r1[$i9];

        i12 = i11;

        i13 = i8;

        i8 = i13 + i12;

        $i9 = $i9 + 1;

        goto label1;

     label2:
        i1 = i8;

        $i2 = i0 - i1;

        $f1 = (float) $i2;

        $f0 = (float) 2;

        $f5 = $f1 / $f0;

        r4 = r0;

        z3 = 0;

        if z0 != 0 goto label5;

        i14 = 0;

        i15 = 0;

        i16 = lengthof r1;

     label3:
        if i15 >= i16 goto label4;

        $i5 = i14;

        i14 = i14 + 1;

        i17 = r1[i15];

        i18 = $i5;

        $i6 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f5);

        r2[i18] = $i6;

        $f3 = (float) i17;

        $f5 = $f5 + $f3;

        i15 = i15 + 1;

        goto label3;

     label4:
        goto label7;

     label5:
        $i3 = lengthof r1;

        $i19 = $i3 - 1;

     label6:
        if -1 >= $i19 goto label7;

        i20 = r1[$i19];

        i21 = $i19;

        $i4 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f5);

        r2[i21] = $i4;

        $f2 = (float) i20;

        $f5 = $f5 + $f2;

        $i19 = $i19 + -1;

        goto label6;

     label7:
        return;
    }

    public final void placeSpaceEvenly$foundation_layout_release(int, int[], int[], boolean)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, $i12, $i13, i14, i15, i16, i17, i18, $i19, i20, i21, $i22, i23, i24;
        int[] r1, r2, r5;
        boolean z0, z4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8;
        byte b10;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "outPosition");

        b10 = 0;

        i11 = b10;

        $i12 = 0;

        $i13 = lengthof r1;

     label1:
        if $i12 >= $i13 goto label2;

        i14 = r1[$i12];

        i15 = i14;

        i16 = i11;

        i11 = i16 + i15;

        $i12 = $i12 + 1;

        goto label1;

     label2:
        i1 = i11;

        $i3 = i0 - i1;

        $f1 = (float) $i3;

        $i4 = lengthof r1;

        $i5 = $i4 + 1;

        $f0 = (float) $i5;

        $f6 = $f1 / $f0;

        f7 = 0.0F;

        f8 = $f6;

        r5 = r1;

        if z0 != 0 goto label5;

        z4 = 0;

        i17 = 0;

        i18 = 0;

        $i19 = lengthof r5;

     label3:
        if i18 >= $i19 goto label4;

        i2 = r5[i18];

        $i8 = i17;

        i17 = i17 + 1;

        i20 = i2;

        i21 = $i8;

        $i9 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f8);

        r2[i21] = $i9;

        $f4 = (float) i20;

        $f5 = $f4 + $f6;

        f8 = f8 + $f5;

        i18 = i18 + 1;

        goto label3;

     label4:
        goto label7;

     label5:
        $i6 = lengthof r5;

        $i22 = $i6 - 1;

     label6:
        if -1 >= $i22 goto label7;

        i23 = r5[$i22];

        i24 = $i22;

        $i7 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f8);

        r2[i24] = $i7;

        $f2 = (float) i23;

        $f3 = $f2 + $f6;

        f8 = f8 + $f3;

        $i22 = $i22 + -1;

        goto label6;

     label7:
        return;
    }

    public final void placeSpaceBetween$foundation_layout_release(int, int[], int[], boolean)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12, $i13, $i14, i15, i16, i17, i18, i19, $i20, i21, i22, $i23, i24, i25;
        int[] r1, r2, r5;
        boolean z0, z4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8;
        byte b11;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "outPosition");

        b11 = 0;

        i12 = b11;

        $i13 = 0;

        $i14 = lengthof r1;

     label1:
        if $i13 >= $i14 goto label2;

        i15 = r1[$i13];

        i16 = i15;

        i17 = i12;

        i12 = i17 + i16;

        $i13 = $i13 + 1;

        goto label1;

     label2:
        i1 = i12;

        $i3 = lengthof r1;

        if $i3 <= 1 goto label3;

        $i8 = i0 - i1;

        $f5 = (float) $i8;

        $i9 = lengthof r1;

        $i10 = $i9 - 1;

        $f4 = (float) $i10;

        $f6 = $f5 / $f4;

        goto label4;

     label3:
        $f6 = 0.0F;

     label4:
        $f7 = $f6;

        f8 = 0.0F;

        r5 = r1;

        if z0 != 0 goto label7;

        z4 = 0;

        i18 = 0;

        i19 = 0;

        $i20 = lengthof r5;

     label5:
        if i19 >= $i20 goto label6;

        i2 = r5[i19];

        $i6 = i18;

        i18 = i18 + 1;

        i21 = i2;

        i22 = $i6;

        $i7 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f8);

        r2[i22] = $i7;

        $f2 = (float) i21;

        $f3 = $f2 + $f7;

        f8 = f8 + $f3;

        i19 = i19 + 1;

        goto label5;

     label6:
        goto label9;

     label7:
        $i4 = lengthof r5;

        $i23 = $i4 - 1;

     label8:
        if -1 >= $i23 goto label9;

        i24 = r5[$i23];

        i25 = $i23;

        $i5 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f8);

        r2[i25] = $i5;

        $f0 = (float) i24;

        $f1 = $f0 + $f7;

        f8 = f8 + $f1;

        $i23 = $i23 + -1;

        goto label8;

     label9:
        return;
    }

    public final void placeSpaceAround$foundation_layout_release(int, int[], int[], boolean)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, $i12, $i13, i14, i15, i16, i17, i18, $i19, i20, i21, $i22, i23, i24;
        int[] r1, r2, r5;
        boolean z0, $z3, $z4, z6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10;
        byte b10;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "outPosition");

        b10 = 0;

        i11 = b10;

        $i12 = 0;

        $i13 = lengthof r1;

     label01:
        if $i12 >= $i13 goto label02;

        i14 = r1[$i12];

        i15 = i14;

        i16 = i11;

        i11 = i16 + i15;

        $i12 = $i12 + 1;

        goto label01;

     label02:
        i1 = i11;

        $i3 = lengthof r1;

        if $i3 != 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        if $z3 != 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        if $z4 == 0 goto label07;

        $i8 = i0 - i1;

        $f6 = (float) $i8;

        $i9 = lengthof r1;

        $f5 = (float) $i9;

        $f7 = $f6 / $f5;

        goto label08;

     label07:
        $f7 = 0.0F;

     label08:
        $f8 = $f7;

        f9 = 0.0F;

        $f0 = (float) 2;

        f10 = $f7 / $f0;

        r5 = r1;

        if z0 != 0 goto label11;

        z6 = 0;

        i17 = 0;

        i18 = 0;

        $i19 = lengthof r5;

     label09:
        if i18 >= $i19 goto label10;

        i2 = r5[i18];

        $i6 = i17;

        i17 = i17 + 1;

        i20 = i2;

        i21 = $i6;

        $i7 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f10);

        r2[i21] = $i7;

        $f3 = (float) i20;

        $f4 = $f3 + $f8;

        f10 = f10 + $f4;

        i18 = i18 + 1;

        goto label09;

     label10:
        goto label13;

     label11:
        $i4 = lengthof r5;

        $i22 = $i4 - 1;

     label12:
        if -1 >= $i22 goto label13;

        i23 = r5[$i22];

        i24 = $i22;

        $i5 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f10);

        r2[i24] = $i5;

        $f1 = (float) i23;

        $f2 = $f1 + $f8;

        f10 = f10 + $f2;

        $i22 = $i22 + -1;

        goto label12;

     label13:
        return;
    }

    private final void forEachIndexed(int[], boolean, kotlin.jvm.functions.Function2)
    {
        androidx.compose.foundation.layout.Arrangement r0;
        int[] $r1;
        boolean z0;
        kotlin.jvm.functions.Function2 r2;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i7;
        java.lang.Integer $r3, $r4, $r6, $r7;

        r0 := @this: androidx.compose.foundation.layout.Arrangement;

        $r1 := @parameter0: int[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        if z0 != 0 goto label3;

        i5 = 0;

        i6 = 0;

        i0 = lengthof $r1;

     label1:
        if i6 >= i0 goto label2;

        i1 = $r1[i6];

        $i4 = i5;

        i5 = i5 + 1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r7);

        i6 = i6 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $i2 = lengthof $r1;

        $i7 = $i2 - 1;

     label4:
        if -1 >= $i7 goto label5;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $i3 = $r1[$i7];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i7 = $i7 + -1;

        goto label4;

     label5:
        return;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.layout.Arrangement $r0;
        androidx.compose.foundation.layout.Arrangement$Start$1 $r1;
        androidx.compose.foundation.layout.Arrangement$Horizontal $r2, $r4;
        androidx.compose.foundation.layout.Arrangement$End$1 $r3;
        androidx.compose.foundation.layout.Arrangement$Top$1 $r5;
        androidx.compose.foundation.layout.Arrangement$Vertical $r6, $r8;
        androidx.compose.foundation.layout.Arrangement$Bottom$1 $r7;
        androidx.compose.foundation.layout.Arrangement$Center$1 $r9;
        androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical $r10, $r12, $r14, $r16;
        androidx.compose.foundation.layout.Arrangement$SpaceEvenly$1 $r11;
        androidx.compose.foundation.layout.Arrangement$SpaceBetween$1 $r13;
        androidx.compose.foundation.layout.Arrangement$SpaceAround$1 $r15;

        $r0 = new androidx.compose.foundation.layout.Arrangement;

        specialinvoke $r0.<androidx.compose.foundation.layout.Arrangement: void <init>()>();

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement INSTANCE> = $r0;

        $r1 = new androidx.compose.foundation.layout.Arrangement$Start$1;

        specialinvoke $r1.<androidx.compose.foundation.layout.Arrangement$Start$1: void <init>()>();

        $r2 = (androidx.compose.foundation.layout.Arrangement$Horizontal) $r1;

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Horizontal Start> = $r2;

        $r3 = new androidx.compose.foundation.layout.Arrangement$End$1;

        specialinvoke $r3.<androidx.compose.foundation.layout.Arrangement$End$1: void <init>()>();

        $r4 = (androidx.compose.foundation.layout.Arrangement$Horizontal) $r3;

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Horizontal End> = $r4;

        $r5 = new androidx.compose.foundation.layout.Arrangement$Top$1;

        specialinvoke $r5.<androidx.compose.foundation.layout.Arrangement$Top$1: void <init>()>();

        $r6 = (androidx.compose.foundation.layout.Arrangement$Vertical) $r5;

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Vertical Top> = $r6;

        $r7 = new androidx.compose.foundation.layout.Arrangement$Bottom$1;

        specialinvoke $r7.<androidx.compose.foundation.layout.Arrangement$Bottom$1: void <init>()>();

        $r8 = (androidx.compose.foundation.layout.Arrangement$Vertical) $r7;

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$Vertical Bottom> = $r8;

        $r9 = new androidx.compose.foundation.layout.Arrangement$Center$1;

        specialinvoke $r9.<androidx.compose.foundation.layout.Arrangement$Center$1: void <init>()>();

        $r10 = (androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical) $r9;

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical Center> = $r10;

        $r11 = new androidx.compose.foundation.layout.Arrangement$SpaceEvenly$1;

        specialinvoke $r11.<androidx.compose.foundation.layout.Arrangement$SpaceEvenly$1: void <init>()>();

        $r12 = (androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical) $r11;

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceEvenly> = $r12;

        $r13 = new androidx.compose.foundation.layout.Arrangement$SpaceBetween$1;

        specialinvoke $r13.<androidx.compose.foundation.layout.Arrangement$SpaceBetween$1: void <init>()>();

        $r14 = (androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical) $r13;

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceBetween> = $r14;

        $r15 = new androidx.compose.foundation.layout.Arrangement$SpaceAround$1;

        specialinvoke $r15.<androidx.compose.foundation.layout.Arrangement$SpaceAround$1: void <init>()>();

        $r16 = (androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical) $r15;

        <androidx.compose.foundation.layout.Arrangement: androidx.compose.foundation.layout.Arrangement$HorizontalOrVertical SpaceAround> = $r16;

        return;
    }

