androidx.recyclerview.widget.LinearLayoutManager
<androidx.recyclerview.widget.LinearLayoutManager: java.lang.String TAG>
<androidx.recyclerview.widget.LinearLayoutManager: boolean DEBUG>
<androidx.recyclerview.widget.LinearLayoutManager: int HORIZONTAL>
<androidx.recyclerview.widget.LinearLayoutManager: int VERTICAL>
<androidx.recyclerview.widget.LinearLayoutManager: int INVALID_OFFSET>
<androidx.recyclerview.widget.LinearLayoutManager: float MAX_SCROLL_FACTOR>
<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>
<androidx.recyclerview.widget.LinearLayoutManager: boolean mLastStackFromEnd>
<androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout>
<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>
<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>
<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>
<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>
<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset>
<androidx.recyclerview.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult>
<androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount>
<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>
    public void <init>(android.content.Context)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.content.Context r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>(r1, 1, 0);

        return;
    }

    public void <init>(android.content.Context, int, boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.content.Context r1;
        int i0;
        boolean z0;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo $r2;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult $r3;
        int[] $r4;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void <init>()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation> = 1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled> = 1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition> = -1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState> = null;

        $r2 = new androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        specialinvoke $r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void <init>()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo> = $r2;

        $r3 = new androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult;

        specialinvoke $r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: void <init>()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult> = $r3;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount> = 2;

        $r4 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair> = $r4;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)>(i0);

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)>(z0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties r3;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo $r4;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult $r5;
        int[] $r6;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void <init>()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation> = 1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled> = 1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition> = -1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState> = null;

        $r4 = new androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        specialinvoke $r4.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void <init>()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo> = $r4;

        $r5 = new androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult;

        specialinvoke $r5.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: void <init>()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult> = $r5;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount> = 2;

        $r6 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair> = $r6;

        r3 = staticinvoke <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $i2 = r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int orientation>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)>($i2);

        $z0 = r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)>($z0);

        $z1 = r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void setStackFromEnd(boolean)>($z1);

        return;
    }

    public boolean isAutoMeasureEnabled()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        return 1;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $r1 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        specialinvoke $r1.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    public boolean getRecycleChildrenOnDetach()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach>;

        return $z0;
    }

    public void setRecycleChildrenOnDetach(boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach> = z0;

        return;
    }

    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$Recycler r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)>(r1, r2);

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)>(r2);

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$Recycler: void clear()>();

     label1:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.view.accessibility.AccessibilityEvent r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int findFirstVisibleItemPosition()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i1);

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int findLastVisibleItemPosition()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i2);

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState r1, $r2, $r3, $r8, $r9;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.recyclerview.widget.OrientationHelper $r4, $r5, $r6, $r7;
        android.view.View r10, r11;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r2 == null goto label1;

        $r8 = new androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        specialinvoke $r8.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState)>($r9);

        return $r8;

     label1:
        $r3 = new androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        specialinvoke $r3.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: void <init>()>();

        r1 = $r3;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 <= 0 goto label4;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mLastStackFromEnd>;

        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        z0 = $z2 ^ $z1;

        r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd> = z0;

        if z0 == 0 goto label2;

        r10 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()>();

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i5 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r7.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r10);

        $i7 = $i5 - $i6;

        r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset> = $i7;

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r10);

        r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition> = $i8;

        goto label3;

     label2:
        r11 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToStart()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r11);

        r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition> = $i1;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r11);

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $i4 = $i2 - $i3;

        r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset> = $i4;

     label3:
        goto label5;

     label4:
        virtualinvoke r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: void invalidateAnchor()>();

     label5:
        return r1;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.os.Parcelable r1;
        boolean $z0;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r2, $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        if $z0 == 0 goto label2;

        $r2 = (androidx.recyclerview.widget.LinearLayoutManager$SavedState) r1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState> = $r2;

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i0 == -1 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        virtualinvoke $r3.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: void invalidateAnchor()>();

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void requestLayout()>();

     label2:
        return;
    }

    public boolean canScrollHorizontally()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canScrollVertically()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setStackFromEnd(boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean z0, $z1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd> = z0;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }

    public boolean getStackFromEnd()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        return $z0;
    }

    public int getOrientation()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        return $i0;
    }

    public void setOrientation(int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, $i1;
        androidx.recyclerview.widget.OrientationHelper $r1, $r2, $r4;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo $r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid orientation:");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if i0 != $i1 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        if $r4 != null goto label3;

     label2:
        $r1 = staticinvoke <androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)>(r0, i0);

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper> = $r1;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper> = $r2;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation> = i0;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void requestLayout()>();

     label3:
        return;
    }

    private void resolveShouldLayoutReverse()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i0 == 1 goto label1;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()>();

        if $z1 != 0 goto label2;

     label1:
        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout>;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout> = $z0;

        goto label5;

     label2:
        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout>;

        if $z2 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout> = $z3;

     label5:
        return;
    }

    public boolean getReverseLayout()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout>;

        return $z0;
    }

    public void setReverseLayout(boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean z0, $z1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout>;

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout> = z0;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }

    public android.view.View findViewByPosition(int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, i2, i3, $i4;
        android.view.View r1, $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if i1 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>($r2);

        i3 = i0 - i2;

        if i3 < 0 goto label2;

        if i3 >= i1 goto label2;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i3);

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r1);

        if $i4 != i0 goto label2;

        return r1;

     label2:
        $r3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findViewByPosition(int)>(i0);

        return $r3;
    }

    protected int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        boolean $z0;
        androidx.recyclerview.widget.OrientationHelper $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: boolean hasTargetScrollPosition()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getTotalSpace()>();

        return $i0;

     label1:
        return 0;
    }

    protected void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State, int[])
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int[] r2;
        int i0, $i1, i2, i3;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter1: int[];

        i2 = 0;

        i3 = 0;

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i1 = $r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i1 != -1 goto label1;

        i2 = i0;

        goto label2;

     label1:
        i3 = i0;

     label2:
        r2[0] = i2;

        r2[1] = i3;

        return;
    }

    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0;
        androidx.recyclerview.widget.LinearSmoothScroller r3, $r4;
        android.content.Context $r5;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $r4 = new androidx.recyclerview.widget.LinearSmoothScroller;

        $r5 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r4.<androidx.recyclerview.widget.LinearSmoothScroller: void <init>(android.content.Context)>($r5);

        r3 = $r4;

        virtualinvoke r3.<androidx.recyclerview.widget.LinearSmoothScroller: void setTargetPosition(int)>(i0);

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)>(r3);

        return;
    }

    public android.graphics.PointF computeScrollVectorForPosition(int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, $i3, $i4;
        byte b2, $b5;
        android.view.View $r1;
        boolean $z0, $z1;
        android.graphics.PointF $r2, $r3;
        float $f0, $f1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i3 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        if i0 >= i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z1 == $z0 goto label4;

        $b5 = -1;

        goto label5;

     label4:
        $b5 = 1;

     label5:
        b2 = $b5;

        $i4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i4 != 0 goto label6;

        $r3 = new android.graphics.PointF;

        $f1 = (float) b2;

        specialinvoke $r3.<android.graphics.PointF: void <init>(float,float)>($f1, 0.0F);

        return $r3;

     label6:
        $r2 = new android.graphics.PointF;

        $f0 = (float) b2;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>(0.0F, $f0);

        return $r2;
    }

    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        android.view.View r3, r71;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r4, $r5, $r56, $r62, $r63;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i18, $i19, $i20, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i44, i45, i46, i47, i48, i52, i53, i54, i55, i56, i57, $i58, i59, i60, i61, i62, i63, i64, i65, i66;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r6, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r64, $r70, $r74, $r75, $r76;
        int[] $r7, $r8, $r9, $r10, $r12;
        androidx.recyclerview.widget.OrientationHelper $r11, $r13, $r28, $r52, $r53, $r54, $r55, $r57, $r58, $r60, $r61;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo $r14, $r20, $r27, $r34, $r40, $r59, $r65, $r66, $r67, $r68, $r69, $r72, $r73, $r77;
        byte $b43, $b49, b50, $b51;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r4 != null goto label01;

        $i41 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i41 == -1 goto label02;

     label01:
        $i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i0 != 0 goto label02;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)>(r1);

        return;

     label02:
        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r5 == null goto label03;

        $r62 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z8 = virtualinvoke $r62.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()>();

        if $z8 == 0 goto label03;

        $r63 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $i40 = $r63.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition>;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition> = $i40;

     label03:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r64 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r64.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle> = 0;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void resolveShouldLayoutReverse()>();

        r3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getFocusedChild()>();

        $r65 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $z9 = $r65.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mValid>;

        if $z9 == 0 goto label04;

        $i34 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i34 != -1 goto label04;

        $r56 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r56 == null goto label05;

     label04:
        $r66 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke $r66.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void reset()>();

        $r67 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $z10 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $z11 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        $z12 = $z10 ^ $z11;

        $r67.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = $z12;

        $r68 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)>(r1, r2, $r68);

        $r69 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $r69.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mValid> = 1;

        goto label07;

     label05:
        if r3 == null goto label07;

        $r57 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i35 = virtualinvoke $r57.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r3);

        $r58 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i36 = virtualinvoke $r58.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        if $i35 >= $i36 goto label06;

        $r60 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i38 = virtualinvoke $r60.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r3);

        $r61 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i39 = virtualinvoke $r61.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        if $i38 > $i39 goto label07;

     label06:
        $r59 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $i37 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r3);

        virtualinvoke $r59.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromViewAndKeepVisibleRect(android.view.View,int)>(r3, $i37);

     label07:
        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r70 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i42 = $r70.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLastScrollDelta>;

        if $i42 < 0 goto label08;

        $b43 = 1;

        goto label09;

     label08:
        $b43 = -1;

     label09:
        $r6.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection> = $b43;

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        $r7[0] = 0;

        $r8 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        $r8[1] = 0;

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[])>(r2, $r9);

        $r10 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        $i1 = $r10[0];

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $r11 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r11.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        i44 = $i2 + $i3;

        $r12 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        $i4 = $r12[1];

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $r13 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r13.<androidx.recyclerview.widget.OrientationHelper: int getEndPadding()>();

        i45 = $i5 + $i6;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label13;

        $i25 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i25 == -1 goto label13;

        $i26 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        if $i26 == -2147483648 goto label13;

        $i27 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        r71 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findViewByPosition(int)>($i27);

        if r71 == null goto label13;

        $z7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z7 == 0 goto label10;

        $r54 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i31 = virtualinvoke $r54.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $r55 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i32 = virtualinvoke $r55.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r71);

        i46 = $i31 - $i32;

        $i33 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        i47 = i46 - $i33;

        goto label11;

     label10:
        $r52 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i28 = virtualinvoke $r52.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r71);

        $r53 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i29 = virtualinvoke $r53.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        i48 = $i28 - $i29;

        $i30 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        i47 = $i30 - i48;

     label11:
        if i47 <= 0 goto label12;

        i44 = i44 + i47;

        goto label13;

     label12:
        i45 = i45 - i47;

     label13:
        $r72 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $z13 = $r72.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z13 == 0 goto label16;

        $z6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z6 == 0 goto label14;

        $b49 = 1;

        goto label15;

     label14:
        $b49 = -1;

     label15:
        b50 = $b49;

        goto label19;

     label16:
        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z1 == 0 goto label17;

        $b51 = -1;

        goto label18;

     label17:
        $b51 = 1;

     label18:
        b50 = $b51;

     label19:
        $r73 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)>(r1, r2, $r73, b50);

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)>(r1);

        $r74 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z14 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean resolveIsInfinite()>();

        $r74.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mInfinite> = $z14;

        $r75 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z15 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        $r75.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mIsPreLayout> = $z15;

        $r76 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r76.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mNoRecycleSpace> = 0;

        $r77 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $z16 = $r77.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z16 == 0 goto label22;

        $r34 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)>($r34);

        $r35 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r35.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = i44;

        $r36 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r36, r2, 0);

        $r37 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i52 = $r37.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $r38 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i53 = $r38.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r39 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i17 = $r39.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i17 <= 0 goto label20;

        $r51 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i24 = $r51.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        i45 = i45 + $i24;

     label20:
        $r40 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)>($r40);

        $r41 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r41.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = i45;

        $r42 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i19 = $r42.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r43 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i18 = $r43.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i20 = $i19 + $i18;

        $r42.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i20;

        $r44 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r44, r2, 0);

        $r45 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i54 = $r45.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $r46 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i22 = $r46.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i22 <= 0 goto label21;

        $r47 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i55 = $r47.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)>(i53, i52);

        $r48 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r48.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = i55;

        $r49 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r49, r2, 0);

        $r50 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i52 = $r50.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

     label21:
        goto label24;

     label22:
        $r14 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)>($r14);

        $r15 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r15.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = i45;

        $r16 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r16, r2, 0);

        $r17 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i54 = $r17.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $r18 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i56 = $r18.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r19 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i8 = $r19.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i8 <= 0 goto label23;

        $r33 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i15 = $r33.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        i44 = i44 + $i15;

     label23:
        $r20 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)>($r20);

        $r21 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r21.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = i44;

        $r22 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i10 = $r22.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r23 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i9 = $r23.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i11 = $i10 + $i9;

        $r22.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i11;

        $r24 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r24, r2, 0);

        $r25 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i52 = $r25.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $r26 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i13 = $r26.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i13 <= 0 goto label24;

        $r29 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i57 = $r29.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)>(i56, i54);

        $r30 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r30.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = i57;

        $r31 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r31, r2, 0);

        $r32 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i54 = $r32.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

     label24:
        $i58 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i58 <= 0 goto label26;

        $z4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $z3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        $z5 = $z4 ^ $z3;

        if $z5 == 0 goto label25;

        i59 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)>(i54, r1, r2, 1);

        i60 = i52 + i59;

        i61 = i54 + i59;

        i62 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)>(i60, r1, r2, 0);

        i52 = i60 + i62;

        i54 = i61 + i62;

        goto label26;

     label25:
        i63 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)>(i52, r1, r2, 1);

        i64 = i52 + i63;

        i65 = i54 + i63;

        i66 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)>(i65, r1, r2, 0);

        i52 = i64 + i66;

        i54 = i65 + i66;

     label26:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)>(r1, r2, i52, i54);

        $z17 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z17 != 0 goto label27;

        $r28 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        virtualinvoke $r28.<androidx.recyclerview.widget.OrientationHelper: void onLayoutComplete()>();

        goto label28;

     label27:
        $r27 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke $r27.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void reset()>();

     label28:
        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mLastStackFromEnd> = $z2;

        return;
    }

    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState> = null;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition> = -1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke $r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void reset()>();

        return;
    }

    void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r3;
        int i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        i0 := @parameter3: int;

        return;
    }

    private void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, i1, i2, i3, i4, $i6, $i7, $i9, $i11, $i12, i13, i14, i15;
        java.util.List r3;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r4;
        byte b5, $b16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.view.View $r5, $r17, $r19, r21, r22;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.Object $r16;
        androidx.recyclerview.widget.OrientationHelper $r18, $r20;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean willRunPredictiveAnimations()>();

        if $z0 == 0 goto label01;

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i6 == 0 goto label01;

        $z1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 != 0 goto label01;

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()>();

        if $z2 != 0 goto label02;

     label01:
        return;

     label02:
        i13 = 0;

        i14 = 0;

        r3 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List getScrapList()>();

        i2 = interfaceinvoke r3.<java.util.List: int size()>();

        $r5 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>($r5);

        i15 = 0;

     label03:
        if i15 >= i2 goto label11;

        $r16 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i15);

        r4 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r16;

        $z3 = virtualinvoke r4.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z3 == 0 goto label04;

        goto label10;

     label04:
        i4 = virtualinvoke r4.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if i4 >= i3 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        $z4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z5 == $z4 goto label07;

        $b16 = -1;

        goto label08;

     label07:
        $b16 = 1;

     label08:
        b5 = $b16;

        if b5 != -1 goto label09;

        $r20 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $r19 = r4.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i12 = virtualinvoke $r20.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r19);

        i13 = i13 + $i12;

        goto label10;

     label09:
        $r18 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $r17 = r4.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i11 = virtualinvoke $r18.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r17);

        i14 = i14 + $i11;

     label10:
        i15 = i15 + 1;

        goto label03;

     label11:
        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r6.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList> = r3;

        if i13 <= 0 goto label12;

        r21 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToStart()>();

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r21);

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)>($i9, i0);

        $r12 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r12.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = i13;

        $r13 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r13.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable> = 0;

        $r14 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke $r14.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList()>();

        $r15 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r15, r2, 0);

     label12:
        if i14 <= 0 goto label13;

        r22 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()>();

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r22);

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)>($i7, i1);

        $r8 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r8.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = i14;

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r9.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable> = 0;

        $r10 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke $r10.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList()>();

        $r11 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r11, r2, 0);

     label13:
        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r7.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList> = null;

        return;
    }

    private void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r3;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        $z0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)>(r2, r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)>(r1, r2, r3);

        if $z1 == 0 goto label2;

        return;

     label2:
        virtualinvoke r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()>();

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        if $z2 == 0 goto label3;

        $i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $i1 = $i0 - 1;

        goto label4;

     label3:
        $i1 = 0;

     label4:
        r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition> = $i1;

        return;
    }

    private boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r3;
        android.view.View r4, r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        androidx.recyclerview.widget.OrientationHelper $r6, $r7, $r8, $r9;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i4 != 0 goto label01;

        return 0;

     label01:
        r4 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getFocusedChild()>();

        if r4 == null goto label02;

        $z9 = virtualinvoke r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)>(r4, r2);

        if $z9 == 0 goto label02;

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r4);

        virtualinvoke r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromViewAndKeepVisibleRect(android.view.View,int)>(r4, $i6);

        return 1;

     label02:
        $z3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mLastStackFromEnd>;

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        if $z3 == $z2 goto label03;

        return 0;

     label03:
        $z5 = r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        $z4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        r5 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean)>(r1, r2, $z5, $z4);

        if r5 == null goto label12;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r5);

        virtualinvoke r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromView(android.view.View,int)>(r5, $i5);

        $z6 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z6 != 0 goto label11;

        $z7 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()>();

        if $z7 == 0 goto label11;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r5);

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i1 = virtualinvoke $r7.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r5);

        $r8 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i2 = virtualinvoke $r8.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i3 = virtualinvoke $r9.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        if i1 > i2 goto label04;

        if i0 >= i2 goto label04;

        $z10 = 1;

        goto label05;

     label04:
        $z10 = 0;

     label05:
        z0 = $z10;

        if i0 < i3 goto label06;

        if i1 <= i3 goto label06;

        $z11 = 1;

        goto label07;

     label06:
        $z11 = 0;

     label07:
        z1 = $z11;

        if z0 != 0 goto label08;

        if z1 == 0 goto label11;

     label08:
        $z8 = r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z8 == 0 goto label09;

        $i7 = i3;

        goto label10;

     label09:
        $i7 = i2;

     label10:
        r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i7;

     label11:
        return 1;

     label12:
        return 0;
    }

    private boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r2;
        android.view.View r3, $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, $i33, i34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r4, $r21, $r22, $r24, $r26;
        androidx.recyclerview.widget.OrientationHelper $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r23, $r25;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter1: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label01;

        $i2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i2 != -1 goto label02;

     label01:
        return 0;

     label02:
        $i3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i3 < 0 goto label03;

        $i4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        $i5 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i4 < $i5 goto label04;

     label03:
        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition> = -1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        return 0;

     label04:
        $i6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition> = $i6;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r4 == null goto label07;

        $r21 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z5 = virtualinvoke $r21.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()>();

        if $z5 == 0 goto label07;

        $r22 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z6 = $r22.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd>;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = $z6;

        $z7 = r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z7 == 0 goto label05;

        $r25 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i29 = virtualinvoke $r25.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $r26 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $i30 = $r26.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset>;

        $i31 = $i29 - $i30;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i31;

        goto label06;

     label05:
        $r23 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i26 = virtualinvoke $r23.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $r24 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $i27 = $r24.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset>;

        $i28 = $i26 + $i27;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i28;

     label06:
        return 1;

     label07:
        $i7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        if $i7 != -2147483648 goto label20;

        $i14 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        r3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findViewByPosition(int)>($i14);

        if r3 == null goto label13;

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i32 = virtualinvoke $r9.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r3);

        $r10 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i17 = virtualinvoke $r10.<androidx.recyclerview.widget.OrientationHelper: int getTotalSpace()>();

        if i32 <= $i17 goto label08;

        virtualinvoke r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()>();

        return 1;

     label08:
        $r11 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i18 = virtualinvoke $r11.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r3);

        $r12 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i19 = virtualinvoke $r12.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        i0 = $i18 - $i19;

        if i0 >= 0 goto label09;

        $r20 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i25 = virtualinvoke $r20.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i25;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = 0;

        return 1;

     label09:
        $r13 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i20 = virtualinvoke $r13.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $r14 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i21 = virtualinvoke $r14.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r3);

        i1 = $i20 - $i21;

        if i1 >= 0 goto label10;

        $r19 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i24 = virtualinvoke $r19.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i24;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = 1;

        return 1;

     label10:
        $z4 = r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z4 == 0 goto label11;

        $r16 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i22 = virtualinvoke $r16.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r3);

        $r17 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i23 = virtualinvoke $r17.<androidx.recyclerview.widget.OrientationHelper: int getTotalSpaceChange()>();

        $i33 = $i22 + $i23;

        goto label12;

     label11:
        $r15 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i33 = virtualinvoke $r15.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r3);

     label12:
        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i33;

        goto label19;

     label13:
        $i15 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i15 <= 0 goto label18;

        $r7 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        i34 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>($r7);

        $i16 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i16 >= i34 goto label14;

        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        $z3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z8 != $z3 goto label16;

        $z9 = 1;

        goto label17;

     label16:
        $z9 = 0;

     label17:
        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = $z9;

     label18:
        virtualinvoke r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()>();

     label19:
        return 1;

     label20:
        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = $z1;

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z2 == 0 goto label21;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i11 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $i12 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        $i13 = $i11 - $i12;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i13;

        goto label22;

     label21:
        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i8 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $i9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        $i10 = $i8 + $i9;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i10;

     label22:
        return 1;
    }

    private int fixLayoutEndGap(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        boolean z0, z1;
        androidx.recyclerview.widget.OrientationHelper $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i5 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        z0 := @parameter3: boolean;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r3.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        i6 = $i0 - i5;

        z1 = 0;

        if i6 <= 0 goto label1;

        $i1 = neg i6;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>($i1, r1, r2);

        i7 = neg $i2;

        goto label2;

     label1:
        return 0;

     label2:
        i8 = i5 + i7;

        if z0 == 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        i9 = $i3 - i8;

        if i9 <= 0 goto label3;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: void offsetChildren(int)>(i9);

        $i4 = i9 + i7;

        return $i4;

     label3:
        return i7;
    }

    private int fixLayoutStartGap(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        boolean z0, z1;
        androidx.recyclerview.widget.OrientationHelper $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i5 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        z0 := @parameter3: boolean;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r3.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        i6 = i5 - $i0;

        z1 = 0;

        if i6 <= 0 goto label1;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i6, r1, r2);

        i7 = neg $i1;

        goto label2;

     label1:
        return 0;

     label2:
        i8 = i5 + i7;

        if z0 == 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        i9 = i8 - $i2;

        if i9 <= 0 goto label3;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i3 = neg i9;

        virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: void offsetChildren(int)>($i3);

        $i4 = i7 - i9;

        return $i4;

     label3:
        return i7;
    }

    private void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r1;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        $i1 = r1.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i0 = r1.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)>($i1, $i0);

        return;
    }

    private void updateLayoutStateToFillEnd(int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, $i2, $i3;
        androidx.recyclerview.widget.OrientationHelper $r1;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;
        byte $b4;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r1.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $i3 = $i2 - i1;

        $r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i3;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $b4 = -1;

        goto label2;

     label1:
        $b4 = 1;

     label2:
        $r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection> = $b4;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = i0;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r5.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection> = 1;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r6.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset> = i1;

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r7.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = -2147483648;

        return;
    }

    private void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r1;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        $i1 = r1.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i0 = r1.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)>($i1, $i0);

        return;
    }

    private void updateLayoutStateToFillStart(int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, $i2, $i3;
        androidx.recyclerview.widget.OrientationHelper $r1;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;
        byte $b4;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r1.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $i3 = i1 - $i2;

        $r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i3;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = i0;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $b4 = 1;

        goto label2;

     label1:
        $b4 = -1;

     label2:
        $r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection> = $b4;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r5.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection> = -1;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r6.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset> = i1;

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r7.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = -2147483648;

        return;
    }

    protected boolean isLayoutRTL()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void ensureLayoutState()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState> = $r2;

     label1:
        return;
    }

    androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $r1 = new androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        specialinvoke $r1.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void <init>()>();

        return $r1;
    }

    public void scrollToPosition(int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition> = i0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        virtualinvoke $r2.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: void invalidateAnchor()>();

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }

    public void scrollToPositionWithOffset(int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition> = i0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = i1;

        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        virtualinvoke $r2.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: void invalidateAnchor()>();

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }

    public int scrollHorizontallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i1 != 1 goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i0, r1, r2);

        return $i2;
    }

    public int scrollVerticallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i0, r1, r2);

        return $i2;
    }

    public int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    private int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        androidx.recyclerview.widget.OrientationHelper $r2;
        android.view.View $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z0 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)>($z4, 1);

        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        $r4 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)>($z5, 1);

        $z3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $i1 = staticinvoke <androidx.recyclerview.widget.ScrollbarHelper: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean)>(r1, $r2, $r3, $r4, r0, $z3, $z2);

        return $i1;
    }

    private int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.recyclerview.widget.OrientationHelper $r2;
        android.view.View $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z0 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)>($z3, 1);

        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        $r4 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)>($z4, 1);

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        $i1 = staticinvoke <androidx.recyclerview.widget.ScrollbarHelper: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean)>(r1, $r2, $r3, $r4, r0, $z2);

        return $i1;
    }

    private int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.recyclerview.widget.OrientationHelper $r2;
        android.view.View $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z0 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)>($z3, 1);

        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        $r4 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)>($z4, 1);

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        $i1 = staticinvoke <androidx.recyclerview.widget.ScrollbarHelper: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean)>(r1, $r2, $r3, $r4, r0, $z2);

        return $i1;
    }

    public void setSmoothScrollbarEnabled(boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled> = z0;

        return;
    }

    public boolean isSmoothScrollbarEnabled()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        return $z0;
    }

    private void updateLayoutState(int, int, boolean, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i30;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r2, $r3, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r33;
        int[] $r4, $r5, $r6, $r7, $r8;
        androidx.recyclerview.widget.OrientationHelper $r12, $r16, $r18, $r19, $r23, $r27, $r29, $r30;
        android.view.View r31, r32;
        byte $b29, $b31;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: androidx.recyclerview.widget.RecyclerView$State;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean resolveIsInfinite()>();

        $r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mInfinite> = $z2;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection> = i0;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        $r4[0] = 0;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        $r5[1] = 0;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[])>(r1, $r6);

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        $i4 = $r7[0];

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $r8 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair>;

        $i5 = $r8[1];

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        if i0 != 1 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z1 = $z5;

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        if z1 == 0 goto label03;

        $i27 = i3;

        goto label04;

     label03:
        $i27 = i2;

     label04:
        $r9.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = $i27;

        $r10 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        if z1 == 0 goto label05;

        $i28 = i2;

        goto label06;

     label05:
        $i28 = i3;

     label06:
        $r10.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mNoRecycleSpace> = $i28;

        if z1 == 0 goto label09;

        $r22 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i18 = $r22.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace>;

        $r23 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i19 = virtualinvoke $r23.<androidx.recyclerview.widget.OrientationHelper: int getEndPadding()>();

        $i20 = $i18 + $i19;

        $r22.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = $i20;

        r31 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()>();

        $r24 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z4 == 0 goto label07;

        $b29 = -1;

        goto label08;

     label07:
        $b29 = 1;

     label08:
        $r24.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection> = $b29;

        $r25 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i21 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r31);

        $r26 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i22 = $r26.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i23 = $i21 + $i22;

        $r25.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i23;

        $r28 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r27 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i24 = virtualinvoke $r27.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r31);

        $r28.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset> = $i24;

        $r29 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i25 = virtualinvoke $r29.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r31);

        $r30 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i26 = virtualinvoke $r30.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        i30 = $i25 - $i26;

        goto label12;

     label09:
        r32 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToStart()>();

        $r11 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i6 = $r11.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace>;

        $r12 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i7 = virtualinvoke $r12.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $i8 = $i6 + $i7;

        $r11.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = $i8;

        $r13 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z3 == 0 goto label10;

        $b31 = 1;

        goto label11;

     label10:
        $b31 = -1;

     label11:
        $r13.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection> = $b31;

        $r14 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r32);

        $r15 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i10 = $r15.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i11 = $i9 + $i10;

        $r14.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i11;

        $r17 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r16 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i12 = virtualinvoke $r16.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r32);

        $r17.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset> = $i12;

        $r18 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i13 = virtualinvoke $r18.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r32);

        $i14 = neg $i13;

        $r19 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i15 = virtualinvoke $r19.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        i30 = $i14 + $i15;

     label12:
        $r33 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r33.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable> = i1;

        if z0 == 0 goto label13;

        $r21 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i16 = $r21.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i17 = $i16 - i30;

        $r21.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i17;

     label13:
        $r20 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r20.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = i30;

        return;
    }

    boolean resolveIsInfinite()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.OrientationHelper $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.OrientationHelper: int getMode()>();

        if $i0 != 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getEnd()>();

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$LayoutState, androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r3;
        int i0, $i1, $i2, $i3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter1: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        i0 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if i0 >= $i1 goto label1;

        $i2 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        interfaceinvoke r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>(i0, $i3);

     label1:
        return;
    }

    public void collectInitialPrefetchPositions(int, androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, $i2, i3, $i4, i6, i7, $i8;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r1;
        byte b1, $b5;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r2, $r3, $r4, $r5;
        boolean $z0, z1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        z1 = $r4.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd>;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        i3 = $r5.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition>;

        goto label5;

     label1:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void resolveShouldLayoutReverse()>();

        z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $i2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i2 != -1 goto label4;

        if z1 == 0 goto label2;

        $i4 = i0 - 1;

        goto label3;

     label2:
        $i4 = 0;

     label3:
        i3 = $i4;

        goto label5;

     label4:
        i3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition>;

     label5:
        if z1 == 0 goto label6;

        $b5 = -1;

        goto label7;

     label6:
        $b5 = 1;

     label7:
        b1 = $b5;

        i6 = i3;

        i7 = 0;

     label8:
        $i8 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount>;

        if i7 >= $i8 goto label9;

        if i6 < 0 goto label9;

        if i6 >= i0 goto label9;

        interfaceinvoke r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>(i6, 0);

        i6 = i6 + b1;

        i7 = i7 + 1;

        goto label8;

     label9:
        return;
    }

    public void setInitialPrefetchItemCount(int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        r0.<androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount> = i0;

        return;
    }

    public int getInitialPrefetchItemCount()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount>;

        return $i0;
    }

    public void collectAdjacentPrefetchPositions(int, int, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, i2, i4, $i5, $i6, $i7;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r2;
        byte b3, $b8;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter3: androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        $i5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i5 != 0 goto label1;

        $i7 = i0;

        goto label2;

     label1:
        $i7 = i1;

     label2:
        i2 = $i7;

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i6 == 0 goto label3;

        if i2 != 0 goto label4;

     label3:
        return;

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        if i2 <= 0 goto label5;

        $b8 = 1;

        goto label6;

     label5:
        $b8 = -1;

     label6:
        b3 = $b8;

        i4 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State)>(b3, i4, 1, r1);

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)>(r1, $r3, r2);

        return;
    }

    int scrollBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i2, i3, i4, $i5, $i6, $i7, $i8, $i10;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        byte b1, $b9;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r3, $r4, $r5, $r7;
        androidx.recyclerview.widget.OrientationHelper $r6;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i5 == 0 goto label1;

        if i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle> = 1;

        if i0 <= 0 goto label3;

        $b9 = 1;

        goto label4;

     label3:
        $b9 = -1;

     label4:
        b1 = $b9;

        i2 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State)>(b1, i2, 1, r2);

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i6 = $r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r1, $r5, r2, 0);

        i3 = $i6 + $i7;

        if i3 >= 0 goto label5;

        return 0;

     label5:
        if i2 <= i3 goto label6;

        $i10 = b1 * i3;

        goto label7;

     label6:
        $i10 = i0;

     label7:
        i4 = $i10;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i8 = neg i4;

        virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: void offsetChildren(int)>($i8);

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r7.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLastScrollDelta> = i4;

        return i4;
    }

    public void assertNotInLayoutOrScroll(java.lang.String)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        java.lang.String r1;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r2 != null goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>(r1);

     label1:
        return;
    }

    private void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler, int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        int i0, i1, i2, i3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != i1 goto label1;

        return;

     label1:
        if i1 <= i0 goto label4;

        i2 = i1 - 1;

     label2:
        if i2 < i0 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)>(i2, r1);

        i2 = i2 + -1;

        goto label2;

     label3:
        goto label6;

     label4:
        i3 = i0;

     label5:
        if i3 <= i1 goto label6;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)>(i3, r1);

        i3 = i3 + -1;

        goto label5;

     label6:
        return;
    }

    private void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler, int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        boolean $z0;
        androidx.recyclerview.widget.OrientationHelper $r2, $r3, $r4, $r5;
        android.view.View r6, r7;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 >= 0 goto label01;

        return;

     label01:
        i2 = i0 - i1;

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label06;

        i9 = i3 - 1;

     label02:
        if i9 < 0 goto label05;

        r6 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i9);

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r6);

        if $i6 > i2 goto label03;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i8 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getTransformedEndWithDecoration(android.view.View)>(r6);

        if $i8 <= i2 goto label04;

     label03:
        $i7 = i3 - 1;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)>(r1, $i7, i9);

        return;

     label04:
        i9 = i9 + -1;

        goto label02;

     label05:
        goto label10;

     label06:
        i10 = 0;

     label07:
        if i10 >= i3 goto label10;

        r7 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i10);

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r7);

        if $i4 > i2 goto label08;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i5 = virtualinvoke $r3.<androidx.recyclerview.widget.OrientationHelper: int getTransformedEndWithDecoration(android.view.View)>(r7);

        if $i5 <= i2 goto label09;

     label08:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)>(r1, 0, i10);

        return;

     label09:
        i10 = i10 + 1;

        goto label07;

     label10:
        return;
    }

    private void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler, int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        androidx.recyclerview.widget.OrientationHelper $r2, $r3, $r4, $r5, $r6;
        boolean $z0;
        android.view.View r7, r8;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if i0 >= 0 goto label01;

        return;

     label01:
        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getEnd()>();

        $i5 = $i4 - i0;

        i3 = $i5 + i1;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label06;

        i11 = 0;

     label02:
        if i11 >= i2 goto label05;

        r7 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i11);

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i9 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r7);

        if $i9 < i3 goto label03;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i10 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getTransformedStartWithDecoration(android.view.View)>(r7);

        if $i10 >= i3 goto label04;

     label03:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)>(r1, 0, i11);

        return;

     label04:
        i11 = i11 + 1;

        goto label02;

     label05:
        goto label10;

     label06:
        i12 = i2 - 1;

     label07:
        if i12 < 0 goto label10;

        r8 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i12);

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r3.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r8);

        if $i6 < i3 goto label08;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i8 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getTransformedStartWithDecoration(android.view.View)>(r8);

        if $i8 >= i3 goto label09;

     label08:
        $i7 = i2 - 1;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)>(r1, $i7, i12);

        return;

     label09:
        i12 = i12 + -1;

        goto label07;

     label10:
        return;
    }

    private void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.LinearLayoutManager$LayoutState)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r2;
        int i0, i1, $i2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        $z0 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle>;

        if $z0 == 0 goto label1;

        $z1 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mInfinite>;

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        i0 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        i1 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mNoRecycleSpace>;

        $i2 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i2 != -1 goto label3;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)>(r1, i0, i1);

        goto label4;

     label3:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)>(r1, i0, i1);

     label4:
        return;
    }

    int fill(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.LinearLayoutManager$LayoutState, androidx.recyclerview.widget.RecyclerView$State, boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r2;
        androidx.recyclerview.widget.RecyclerView$State r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult r4;
        java.util.List $r5;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        z0 := @parameter3: boolean;

        i0 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i1 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        if $i1 == -2147483648 goto label02;

        $i14 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i14 >= 0 goto label01;

        $i16 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i15 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i17 = $i16 + $i15;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = $i17;

     label01:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState)>(r1, r2);

     label02:
        $i18 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i19 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace>;

        i20 = $i18 + $i19;

        r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult>;

     label03:
        $z6 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mInfinite>;

        if $z6 != 0 goto label04;

        if i20 <= 0 goto label10;

     label04:
        $z1 = virtualinvoke r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)>(r3);

        if $z1 == 0 goto label10;

        virtualinvoke r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: void resetInternal()>();

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)>(r1, r3, r2, r4);

        $z2 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished>;

        if $z2 == 0 goto label05;

        goto label10;

     label05:
        $i5 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i3 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i2 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        $i4 = $i3 * $i2;

        $i6 = $i5 + $i4;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset> = $i6;

        $z3 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed>;

        if $z3 == 0 goto label06;

        $r5 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r5 != null goto label06;

        $z5 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z5 != 0 goto label07;

     label06:
        $i21 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i22 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i23 = $i21 - $i22;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i23;

        $i24 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        i20 = i20 - $i24;

     label07:
        $i25 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        if $i25 == -2147483648 goto label09;

        $i8 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i7 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i9 = $i8 + $i7;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = $i9;

        $i10 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i10 >= 0 goto label08;

        $i12 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i11 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i13 = $i12 + $i11;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = $i13;

     label08:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState)>(r1, r2);

     label09:
        if z0 == 0 goto label03;

        $z4 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable>;

        if $z4 == 0 goto label03;

        goto label10;

     label10:
        $i26 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i27 = i0 - $i26;

        return $i27;
    }

    void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$LayoutState, androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r3;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult r4;
        android.view.View r5;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r6;
        android.view.ViewGroup$LayoutParams $r7;
        java.util.List $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        androidx.recyclerview.widget.OrientationHelper $r9, $r10, $r11, $r12;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r4 := @parameter3: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult;

        r5 = virtualinvoke r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)>(r1);

        if r5 != null goto label01;

        r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished> = 1;

        return;

     label01:
        $r7 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r7;

        $r8 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r8 != null goto label05;

        $z3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $i16 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i16 != -1 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        if $z3 != $z4 goto label04;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void addView(android.view.View)>(r5);

        goto label09;

     label04:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void addView(android.view.View,int)>(r5, 0);

        goto label09;

     label05:
        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $i0 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i0 != -1 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        if $z0 != $z5 goto label08;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void addDisappearingView(android.view.View)>(r5);

        goto label09;

     label08:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void addDisappearingView(android.view.View,int)>(r5, 0);

     label09:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void measureChildWithMargins(android.view.View,int,int)>(r5, 0, 0);

        $r12 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i17 = virtualinvoke $r12.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r5);

        r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed> = $i17;

        $i18 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i18 != 1 goto label13;

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()>();

        if $z2 == 0 goto label10;

        $i13 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getWidth()>();

        $i14 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPaddingRight()>();

        i19 = $i13 - $i14;

        $r11 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i15 = virtualinvoke $r11.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r5);

        i20 = i19 - $i15;

        goto label11;

     label10:
        i20 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPaddingLeft()>();

        $r10 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i7 = virtualinvoke $r10.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r5);

        i19 = i20 + $i7;

     label11:
        $i8 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i8 != -1 goto label12;

        i21 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i12 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i11 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        i22 = $i12 - $i11;

        goto label15;

     label12:
        i22 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i10 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i9 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        i21 = $i10 + $i9;

        goto label15;

     label13:
        i22 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPaddingTop()>();

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r9.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r5);

        i21 = i22 + $i1;

        $i2 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i2 != -1 goto label14;

        i19 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i6 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i5 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        i20 = $i6 - $i5;

        goto label15;

     label14:
        i20 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i4 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i3 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        i19 = $i4 + $i3;

     label15:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)>(r5, i20, i22, i19, i21);

        $z6 = virtualinvoke r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z6 != 0 goto label16;

        $z1 = virtualinvoke r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemChanged()>();

        if $z1 == 0 goto label17;

     label16:
        r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed> = 1;

     label17:
        $z7 = virtualinvoke r5.<android.view.View: boolean hasFocusable()>();

        r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable> = $z7;

        return;
    }

    boolean shouldMeasureTwice()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getHeightMode()>();

        if $i0 == 1073741824 goto label1;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getWidthMode()>();

        if $i1 == 1073741824 goto label1;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean hasFlexibleChildInBothOrientations()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    int convertFocusDirectionToLayoutDirection(int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 17: goto label13;
            case 33: goto label07;
            case 66: goto label16;
            case 130: goto label10;
            default: goto label19;
        };

     label01:
        $i6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i6 != 1 goto label02;

        return -1;

     label02:
        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()>();

        if $z1 == 0 goto label03;

        return 1;

     label03:
        return -1;

     label04:
        $i5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i5 != 1 goto label05;

        return 1;

     label05:
        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()>();

        if $z0 == 0 goto label06;

        return -1;

     label06:
        return 1;

     label07:
        $i3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i3 != 1 goto label08;

        $i7 = -1;

        goto label09;

     label08:
        $i7 = -2147483648;

     label09:
        return $i7;

     label10:
        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i1 != 1 goto label11;

        $i8 = 1;

        goto label12;

     label11:
        $i8 = -2147483648;

     label12:
        return $i8;

     label13:
        $i4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i4 != 0 goto label14;

        $i9 = -1;

        goto label15;

     label14:
        $i9 = -2147483648;

     label15:
        return $i9;

     label16:
        $i2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i2 != 0 goto label17;

        $i10 = 1;

        goto label18;

     label17:
        $i10 = -2147483648;

     label18:
        return $i10;

     label19:
        return -2147483648;
    }

    private android.view.View getChildClosestToStart()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean $z0;
        android.view.View $r1;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $i1 = $i0 - 1;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i1);

        return $r1;
    }

    private android.view.View getChildClosestToEnd()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean $z0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $i1 = $i0 - 1;

     label2:
        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i1);

        return $r1;
    }

    android.view.View findFirstVisibleChildClosestToStart(boolean, boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean z0, z1, $z2;
        int $i0, $i1, $i2;
        android.view.View $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z2 == 0 goto label1;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $i2 = $i1 - 1;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>($i2, -1, z0, z1);

        return $r2;

     label1:
        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>(0, $i0, z0, z1);

        return $r1;
    }

    android.view.View findFirstVisibleChildClosestToEnd(boolean, boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean z0, z1, $z2;
        int $i0, $i1, $i2;
        android.view.View $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z2 == 0 goto label1;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>(0, $i2, z0, z1);

        return $r2;

     label1:
        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>($i1, -1, z0, z1);

        return $r1;
    }

    android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, boolean, boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        boolean z0, z1, z2, z3, $z4, $z5, $z6;
        int i0, i1, i2, i3, i4, i5, $i6, i7, i8, i10;
        android.view.View r3, r10, r11, r12, $r13;
        androidx.recyclerview.widget.OrientationHelper $r4, $r5, $r6, $r7;
        android.view.ViewGroup$LayoutParams $r8;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r9;
        byte b9;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        i7 = 0;

        i8 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        b9 = 1;

        if z1 == 0 goto label01;

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        i7 = $i6 - 1;

        i8 = -1;

        b9 = -1;

     label01:
        i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i1 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i2 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        r10 = null;

        r11 = null;

        r12 = null;

        i10 = i7;

     label02:
        if i10 == i8 goto label14;

        r3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i10);

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r3);

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i4 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r3);

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i5 = virtualinvoke $r7.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r3);

        if i3 < 0 goto label13;

        if i3 >= i0 goto label13;

        $r8 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r9 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r8;

        $z4 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z4 == 0 goto label03;

        if r10 != null goto label13;

        r10 = r3;

        goto label13;

     label03:
        if i5 > i1 goto label04;

        if i4 >= i1 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        z2 = $z5;

        if i4 < i2 goto label06;

        if i5 <= i2 goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        z3 = $z6;

        if z2 != 0 goto label08;

        if z3 == 0 goto label12;

     label08:
        if z0 == 0 goto label10;

        if z3 == 0 goto label09;

        r11 = r3;

        goto label13;

     label09:
        if r12 != null goto label13;

        r12 = r3;

        goto label13;

     label10:
        if z2 == 0 goto label11;

        r11 = r3;

        goto label13;

     label11:
        if r12 != null goto label13;

        r12 = r3;

        goto label13;

     label12:
        return r3;

     label13:
        i10 = i10 + b9;

        goto label02;

     label14:
        if r12 == null goto label15;

        $r13 = r12;

        goto label17;

     label15:
        if r11 == null goto label16;

        $r13 = r11;

        goto label17;

     label16:
        $r13 = r10;

     label17:
        return $r13;
    }

    private android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstPartiallyOrCompletelyInvisibleChild()>();

        goto label2;

     label1:
        $r1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findLastPartiallyOrCompletelyInvisibleChild()>();

     label2:
        return $r1;
    }

    private android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findLastPartiallyOrCompletelyInvisibleChild()>();

        goto label2;

     label1:
        $r1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstPartiallyOrCompletelyInvisibleChild()>();

     label2:
        return $r1;
    }

    private android.view.View findFirstPartiallyOrCompletelyInvisibleChild()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)>(0, $i0);

        return $r1;
    }

    private android.view.View findLastPartiallyOrCompletelyInvisibleChild()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)>($i1, -1);

        return $r1;
    }

    public int findFirstVisibleItemPosition()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>(0, $i0, 0, 1);

        if r1 != null goto label1;

        $i1 = -1;

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r1);

     label2:
        return $i1;
    }

    public int findFirstCompletelyVisibleItemPosition()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>(0, $i0, 1, 0);

        if r1 != null goto label1;

        $i1 = -1;

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r1);

     label2:
        return $i1;
    }

    public int findLastVisibleItemPosition()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $i1 = $i0 - 1;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>($i1, -1, 0, 1);

        if r1 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r1);

     label2:
        return $i2;
    }

    public int findLastCompletelyVisibleItemPosition()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $i1 = $i0 - 1;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>($i1, -1, 1, 0);

        if r1 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r1);

     label2:
        return $i2;
    }

    android.view.View findOneVisibleChild(int, int, boolean, boolean)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, $i2;
        boolean z0, z1, z2;
        androidx.recyclerview.widget.ViewBoundsCheck $r1, $r2;
        short s3, s4;
        android.view.View $r3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        z2 = 0;

        s3 = 0;

        if z0 == 0 goto label1;

        s4 = 24579;

        goto label2;

     label1:
        s4 = 320;

     label2:
        if z1 == 0 goto label3;

        s3 = 320;

     label3:
        $i2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i2 != 0 goto label4;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)>(i0, i1, s4, s3);

        goto label5;

     label4:
        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck>;

        $r3 = virtualinvoke $r1.<androidx.recyclerview.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)>(i0, i1, s4, s3);

     label5:
        return $r3;
    }

    android.view.View findOnePartiallyOrCompletelyInvisibleChild(int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, $i3, $i4, $i5;
        byte b2, $b6;
        androidx.recyclerview.widget.OrientationHelper $r1, $r3;
        android.view.View $r2, $r6, $r7;
        androidx.recyclerview.widget.ViewBoundsCheck $r4, $r5;
        boolean z0, z1;
        short s7, s8;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        if i1 <= i0 goto label1;

        $b6 = 1;

        goto label3;

     label1:
        if i1 >= i0 goto label2;

        $b6 = -1;

        goto label3;

     label2:
        $b6 = 0;

     label3:
        b2 = $b6;

        if b2 != 0 goto label4;

        $r6 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i0);

        return $r6;

     label4:
        z0 = 0;

        z1 = 0;

        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i0);

        $i3 = virtualinvoke $r1.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r2);

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r3.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        if $i3 >= $i4 goto label5;

        s7 = 16644;

        s8 = 16388;

        goto label6;

     label5:
        s7 = 4161;

        s8 = 4097;

     label6:
        $i5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: int mOrientation>;

        if $i5 != 0 goto label7;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck>;

        $r7 = virtualinvoke $r5.<androidx.recyclerview.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)>(i0, i1, s7, s8);

        goto label8;

     label7:
        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck>;

        $r7 = virtualinvoke $r4.<androidx.recyclerview.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)>(i0, i1, s7, s8);

     label8:
        return $r7;
    }

    public android.view.View onFocusSearchFailed(android.view.View, int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.view.View r1, r8, r9;
        int i0, i1, i2, $i3, $i4;
        androidx.recyclerview.widget.RecyclerView$Recycler r2;
        androidx.recyclerview.widget.RecyclerView$State r3;
        androidx.recyclerview.widget.OrientationHelper $r4;
        float $f0, $f1;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$Recycler;

        r3 := @parameter3: androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void resolveShouldLayoutReverse()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i3 != 0 goto label1;

        return null;

     label1:
        i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int convertFocusDirectionToLayoutDirection(int)>(i0);

        if i1 != -2147483648 goto label2;

        return null;

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getTotalSpace()>();

        $f0 = (float) $i4;

        $f1 = 0.33333334F * $f0;

        i2 = (int) $f1;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State)>(i1, i2, 0, r3);

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r5.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = -2147483648;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r6.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle> = 0;

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)>(r2, $r7, r3, 1);

        if i1 != -1 goto label3;

        r8 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()>();

        goto label4;

     label3:
        r8 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()>();

     label4:
        if i1 != -1 goto label5;

        r9 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToStart()>();

        goto label6;

     label5:
        r9 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()>();

     label6:
        $z0 = virtualinvoke r9.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label8;

        if r8 != null goto label7;

        return null;

     label7:
        return r9;

     label8:
        return r8;
    }

    private void logChildren()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.view.View r1;
        int $i1, $i3, $i4, i6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;
        androidx.recyclerview.widget.OrientationHelper $r6;
        java.lang.String $r8;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinearLayoutManager", "internal representation of views on the screen");

        i6 = 0;

     label1:
        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if i6 >= $i1 goto label2;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i6);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("item ");

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", coord:");

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinearLayoutManager", $r8);

        i6 = i6 + 1;

        goto label1;

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinearLayoutManager", "==============");

        return;
    }

    void validateChildOrder()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        int i0, i1, $i2, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12;
        java.lang.StringBuilder $r1, $r2, $r3, $r11, $r12, $r13, $r18, $r19, $r20;
        java.lang.String $r4, $r14, $r21;
        android.view.View $r5, $r7, r22, r23;
        androidx.recyclerview.widget.OrientationHelper $r6, $r8, $r15;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r9, $r10, $r16, $r17;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validating child count ");

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinearLayoutManager", $r4);

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if $i4 >= 1 goto label01;

        return;

     label01:
        $r5 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>($r5);

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $r7 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        i1 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r7);

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label08;

        i7 = 1;

     label02:
        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if i7 >= $i6 goto label07;

        r22 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i7);

        i8 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r22);

        $r15 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i9 = virtualinvoke $r15.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r22);

        if i8 >= i0 goto label05;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void logChildren()>();

        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detected invalid position. loc invalid? ");

        if i9 >= i1 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label05:
        if i9 <= i1 goto label06;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void logChildren()>();

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>("detected invalid location");

        throw $r16;

     label06:
        i7 = i7 + 1;

        goto label02;

     label07:
        goto label14;

     label08:
        i10 = 1;

     label09:
        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getChildCount()>();

        if i10 >= $i5 goto label14;

        r23 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i10);

        i11 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r23);

        $r8 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i12 = virtualinvoke $r8.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r23);

        if i11 >= i0 goto label12;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void logChildren()>();

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detected invalid position. loc invalid? ");

        if i12 >= i1 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label12:
        if i12 >= i1 goto label13;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void logChildren()>();

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("detected invalid location");

        throw $r9;

     label13:
        i10 = i10 + 1;

        goto label09;

     label14:
        return;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 != null goto label1;

        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mLastStackFromEnd>;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd>;

        if $z1 != $z0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void prepareForDrop(android.view.View, android.view.View, int, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager r0;
        android.view.View r1, r2;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        byte b4, $b17;
        boolean $z0;
        androidx.recyclerview.widget.OrientationHelper $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot drop a view during a scroll or layout calculation");

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()>();

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void resolveShouldLayoutReverse()>();

        i2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r1);

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int getPosition(android.view.View)>(r2);

        if i2 >= i3 goto label1;

        $b17 = 1;

        goto label2;

     label1:
        $b17 = -1;

     label2:
        b4 = $b17;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label4;

        if b4 != 1 goto label3;

        $r8 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i12 = virtualinvoke $r8.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i13 = virtualinvoke $r9.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r2);

        $r10 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i14 = virtualinvoke $r10.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r1);

        $i15 = $i13 + $i14;

        $i16 = $i12 - $i15;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)>(i3, $i16);

        goto label6;

     label3:
        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i9 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i10 = virtualinvoke $r7.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r2);

        $i11 = $i9 - $i10;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)>(i3, $i11);

        goto label6;

     label4:
        if b4 != -1 goto label5;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i8 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r2);

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)>(i3, $i8);

        goto label6;

     label5:
        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i5 = virtualinvoke $r3.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r2);

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r1);

        $i7 = $i5 - $i6;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)>(i3, $i7);

     label6:
        return;
    }

androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo
<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>
<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>
<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>
<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>
<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mValid>
    void <init>()
    {
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void reset()>();

        return;
    }

    void reset()
    {
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition> = -1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = -2147483648;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mValid> = 0;

        return;
    }

    void assignCoordinateFromPadding()
    {
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r0;
        boolean $z0;
        androidx.recyclerview.widget.OrientationHelper $r1, $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        goto label2;

     label1:
        $r1 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

     label2:
        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i0;

        return;
    }

    public java.lang.String toString()
    {
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.String $r11;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnchorInfo{mPosition=");

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mCoordinate=");

        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLayoutFromEnd=");

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mValid=");

        $z1 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mValid>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    boolean isViewValidAsAnchor(android.view.View, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r4;

        $z0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        $i2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i1 >= $i2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void assignFromViewAndKeepVisibleRect(android.view.View, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37;
        androidx.recyclerview.widget.OrientationHelper $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i1 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getTotalSpaceChange()>();

        if i1 < 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromView(android.view.View,int)>(r1, i0);

        return;

     label1:
        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition> = i0;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label3;

        $r9 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i14 = virtualinvoke $r9.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        i24 = $i14 - i1;

        $r10 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i25 = virtualinvoke $r10.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r1);

        i26 = i24 - i25;

        $r11 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i15 = virtualinvoke $r11.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $i16 = $i15 - i26;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i16;

        if i26 <= 0 goto label2;

        $r12 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i27 = virtualinvoke $r12.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r1);

        $i17 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>;

        i28 = $i17 - i27;

        $r13 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i29 = virtualinvoke $r13.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $r14 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i18 = virtualinvoke $r14.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r1);

        i30 = $i18 - i29;

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>(i30, 0);

        i2 = i29 + $i19;

        i3 = i28 - i2;

        if i3 >= 0 goto label2;

        $i21 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>;

        $i20 = neg i3;

        $i22 = staticinvoke <java.lang.Math: int min(int,int)>(i26, $i20);

        $i23 = $i21 + $i22;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i23;

     label2:
        goto label4;

     label3:
        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i31 = virtualinvoke $r3.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r1);

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        i32 = i31 - $i4;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = i31;

        if i32 <= 0 goto label4;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i5 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r1);

        i33 = i31 + $i5;

        $r6 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        i34 = $i6 - i1;

        $r7 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i7 = virtualinvoke $r7.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r1);

        i35 = i34 - $i7;

        $r8 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i8 = virtualinvoke $r8.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>(0, i35);

        i36 = $i8 - $i9;

        i37 = i36 - i33;

        if i37 >= 0 goto label4;

        $i11 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>;

        $i10 = neg i37;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i32, $i10);

        $i13 = $i11 - $i12;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i13;

     label4:
        return;
    }

    public void assignFromView(android.view.View, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        androidx.recyclerview.widget.OrientationHelper $r2, $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r3.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r1);

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getTotalSpaceChange()>();

        $i4 = $i2 + $i3;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i4;

        goto label2;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r1);

        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i1;

     label2:
        r0.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition> = i0;

        return;
    }

androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult
<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable>
    protected void <init>()
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void resetInternal()
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable> = 0;

        return;
    }

androidx.recyclerview.widget.LinearLayoutManager$LayoutState
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.lang.String TAG>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int LAYOUT_START>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int LAYOUT_END>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int INVALID_LAYOUT>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int ITEM_DIRECTION_HEAD>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int ITEM_DIRECTION_TAIL>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int SCROLLING_OFFSET_NaN>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mNoRecycleSpace>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mIsPreLayout>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLastScrollDelta>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>
<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mInfinite>
    void <init>()
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle> = 1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mNoRecycleSpace> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mIsPreLayout> = 0;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList> = null;

        return;
    }

    boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        if $i0 < 0 goto label1;

        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i1 >= $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        android.view.View r2, $r4;
        java.util.List $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r3 == null goto label1;

        $r4 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View nextViewFromScrapList()>();

        return $r4;

     label1:
        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        r2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int)>($i0);

        $i2 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i3 = $i2 + $i1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i3;

        return r2;
    }

    private android.view.View nextViewFromScrapList()
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r0;
        int i0, $i1, $i2, i3;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r6;
        android.view.ViewGroup$LayoutParams $r7;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        $r3 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r5;

        r1 = $r6.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r7;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        if $i1 != $i2 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList(android.view.View)>(r1);

        return r1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return null;
    }

    public void assignPositionFromScrapList()
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList(android.view.View)>(null);

        return;
    }

    public void assignPositionFromScrapList(android.view.View)
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r0;
        android.view.View r1, r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View nextViewInLimitedList(android.view.View)>(r1);

        if r2 != null goto label1;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = -1;

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i0;

     label2:
        return;
    }

    public android.view.View nextViewInLimitedList(android.view.View)
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r0;
        android.view.View r1, r2, r9;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r3;
        java.util.List $r4, $r5;
        java.lang.Object $r6;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r7;
        android.view.ViewGroup$LayoutParams $r8;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r1 := @parameter0: android.view.View;

        $r4 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r9 = null;

        i6 = 2147483647;

        i7 = 0;

     label1:
        if i7 >= i0 goto label5;

        $r5 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i7);

        $r7 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r6;

        r2 = $r7.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r8 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r8;

        if r2 == r1 goto label4;

        $z0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z0 == 0 goto label2;

        goto label4;

     label2:
        $i2 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        $i3 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i5 = $i2 - $i3;

        $i4 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        i1 = $i5 * $i4;

        if i1 >= 0 goto label3;

        goto label4;

     label3:
        if i1 >= i6 goto label4;

        r9 = r2;

        i6 = i1;

        if i1 != 0 goto label4;

        goto label5;

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        return r9;
    }

    void log()
    {
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r12;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("avail:");

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ind:");

        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dir:");

        $i2 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offset:");

        $i3 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", layoutDir:");

        $i4 = r0.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LLM#LayoutState", $r12);

        return;
    }

androidx.recyclerview.widget.LinearLayoutManager$SavedState$1
    void <init>()
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 r0;
        android.os.Parcel r1;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        specialinvoke $r2.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 r0;
        int i0;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState[] $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.recyclerview.widget.LinearLayoutManager$SavedState)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 r0;
        int i0;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState[] $r1;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 r0;
        android.os.Parcel r1;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r2;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

androidx.recyclerview.widget.LinearLayoutManager$SavedState
<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition>
<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset>
<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd>
<androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR>
    public void <init>()
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.os.Parcel)
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd> = $z0;

        return;
    }

    public void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState)
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState r0, r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        r1 := @parameter0: androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition>;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition> = $i0;

        $i1 = r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset>;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset> = $i1;

        $z0 = r1.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd>;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd> = $z0;

        return;
    }

    boolean hasValidAnchor()
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        $i0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition>;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void invalidateAnchor()
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition> = -1;

        return;
    }

    public int describeContents()
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState r0;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        boolean $z0;
        byte $b3;

        r0 := @this: androidx.recyclerview.widget.LinearLayoutManager$SavedState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $z0 = r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd>;

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b3);

        return;
    }

    static void <clinit>()
    {
        androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 $r0;

        $r0 = new androidx.recyclerview.widget.LinearLayoutManager$SavedState$1;

        specialinvoke $r0.<androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: void <init>()>();

        <androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

