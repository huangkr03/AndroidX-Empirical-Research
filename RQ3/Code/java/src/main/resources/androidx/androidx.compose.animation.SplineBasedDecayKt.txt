androidx.compose.animation.SplineBasedDecayKt
<androidx.compose.animation.SplineBasedDecayKt: float Inflection>
<androidx.compose.animation.SplineBasedDecayKt: float StartTension>
<androidx.compose.animation.SplineBasedDecayKt: float EndTension>
<androidx.compose.animation.SplineBasedDecayKt: float P1>
<androidx.compose.animation.SplineBasedDecayKt: float P2>
    private static final void computeSplineInfo(float[], float[], int)
    {
        float[] r0, r1;
        int i0, i3;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20, f21, f22, f23, f24, $f25, $f26, f27, $f28, $f29, f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, f38, $f39, $f40, f41, f42, f43, $f44, $f45, f46, $f47, $f48, f49, $f50, $f51, $f52, $f53, $f54, $f55, f56, $f57, $f58;
        byte $b1, $b2, $b4, $b5;
        double $d0, $d1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        f19 = 0.0F;

        f20 = 0.0F;

        i3 = 0;

     label1:
        if i3 >= i0 goto label8;

        $f3 = (float) i3;

        $f2 = (float) i0;

        f0 = $f3 / $f2;

        f21 = 1.0F;

        f22 = 0.0F;

        f23 = 0.0F;

        f24 = 0.0F;

     label2:
        $f25 = f21 - f19;

        $f26 = $f25 / 2.0F;

        f27 = f19 + $f26;

        $f28 = 3.0F * f27;

        $f29 = 1.0F - f27;

        f30 = $f28 * $f29;

        $f31 = 1.0F - f27;

        $f32 = $f31 * 0.175F;

        $f33 = f27 * 0.35000002F;

        $f34 = $f32 + $f33;

        $f35 = f30 * $f34;

        $f36 = f27 * f27;

        $f37 = $f36 * f27;

        f38 = $f35 + $f37;

        $f39 = f38 - f0;

        $f40 = staticinvoke <java.lang.Math: float abs(float)>($f39);

        $d0 = (double) $f40;

        $b4 = $d0 cmpg 1.0E-5;

        if $b4 < 0 goto label4;

        $b2 = f38 cmpl f0;

        if $b2 <= 0 goto label3;

        f21 = f27;

        goto label2;

     label3:
        f19 = f27;

        goto label2;

     label4:
        $f4 = 1.0F - f27;

        $f5 = $f4 * 0.5F;

        $f6 = $f5 + f27;

        $f9 = f30 * $f6;

        $f7 = f27 * f27;

        $f8 = $f7 * f27;

        $f10 = $f9 + $f8;

        r0[i3] = $f10;

        f41 = 1.0F;

        f42 = 0.0F;

        f43 = 0.0F;

     label5:
        $f44 = f41 - f20;

        $f45 = $f44 / 2.0F;

        f46 = f20 + $f45;

        $f47 = 3.0F * f46;

        $f48 = 1.0F - f46;

        f49 = $f47 * $f48;

        $f50 = 1.0F - f46;

        $f51 = $f50 * 0.5F;

        $f52 = $f51 + f46;

        $f53 = f49 * $f52;

        $f54 = f46 * f46;

        $f55 = $f54 * f46;

        f56 = $f53 + $f55;

        $f57 = f56 - f0;

        $f58 = staticinvoke <java.lang.Math: float abs(float)>($f57);

        $d1 = (double) $f58;

        $b5 = $d1 cmpg 1.0E-5;

        if $b5 < 0 goto label7;

        $b1 = f56 cmpl f0;

        if $b1 <= 0 goto label6;

        f41 = f46;

        goto label5;

     label6:
        f20 = f46;

        goto label5;

     label7:
        $f11 = 1.0F - f46;

        $f13 = $f11 * 0.175F;

        $f12 = f46 * 0.35000002F;

        $f14 = $f13 + $f12;

        $f17 = f49 * $f14;

        $f15 = f46 * f46;

        $f16 = $f15 * f46;

        $f18 = $f17 + $f16;

        r1[i3] = $f18;

        i3 = i3 + 1;

        goto label1;

     label8:
        r1[i0] = 1.0F;

        $f1 = r1[i0];

        r0[i0] = $f1;

        return;
    }

    public static final androidx.compose.animation.core.DecayAnimationSpec splineBasedDecay(androidx.compose.ui.unit.Density)
    {
        androidx.compose.ui.unit.Density r0;
        androidx.compose.animation.SplineBasedFloatDecayAnimationSpec $r1;
        androidx.compose.animation.core.FloatDecayAnimationSpec $r2;
        androidx.compose.animation.core.DecayAnimationSpec $r3;

        r0 := @parameter0: androidx.compose.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "density");

        $r1 = new androidx.compose.animation.SplineBasedFloatDecayAnimationSpec;

        specialinvoke $r1.<androidx.compose.animation.SplineBasedFloatDecayAnimationSpec: void <init>(androidx.compose.ui.unit.Density)>(r0);

        $r2 = (androidx.compose.animation.core.FloatDecayAnimationSpec) $r1;

        $r3 = staticinvoke <androidx.compose.animation.core.DecayAnimationSpecKt: androidx.compose.animation.core.DecayAnimationSpec generateDecayAnimationSpec(androidx.compose.animation.core.FloatDecayAnimationSpec)>($r2);

        return $r3;
    }

    public static final void access$computeSplineInfo(float[], float[], int)
    {
        float[] r0, r1;
        int i0;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        staticinvoke <androidx.compose.animation.SplineBasedDecayKt: void computeSplineInfo(float[],float[],int)>(r0, r1, i0);

        return;
    }

