androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory
<androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory: javax.inject.Provider workerFactoriesProvider>
    public void <init>(javax.inject.Provider)
    {
        androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory r0;
        javax.inject.Provider r1;

        r0 := @this: androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory;

        r1 := @parameter0: javax.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory: javax.inject.Provider workerFactoriesProvider> = r1;

        return;
    }

    public androidx.hilt.work.HiltWorkerFactory get()
    {
        androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory r0;
        javax.inject.Provider $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        androidx.hilt.work.HiltWorkerFactory $r4;

        r0 := @this: androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory;

        $r1 = r0.<androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory: javax.inject.Provider workerFactoriesProvider>;

        $r2 = interfaceinvoke $r1.<javax.inject.Provider: java.lang.Object get()>();

        $r3 = (java.util.Map) $r2;

        $r4 = staticinvoke <androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory: androidx.hilt.work.HiltWorkerFactory provideFactory(java.util.Map)>($r3);

        return $r4;
    }

    public static androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory create(javax.inject.Provider)
    {
        javax.inject.Provider r0;
        androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory $r1;

        r0 := @parameter0: javax.inject.Provider;

        $r1 = new androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory;

        specialinvoke $r1.<androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory: void <init>(javax.inject.Provider)>(r0);

        return $r1;
    }

    public static androidx.hilt.work.HiltWorkerFactory provideFactory(java.util.Map)
    {
        java.util.Map r0;
        androidx.hilt.work.HiltWorkerFactory $r1, $r3;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <androidx.hilt.work.WorkerFactoryModule: androidx.hilt.work.HiltWorkerFactory provideFactory(java.util.Map)>(r0);

        $r2 = staticinvoke <dagger.internal.Preconditions: java.lang.Object checkNotNullFromProvides(java.lang.Object)>($r1);

        $r3 = (androidx.hilt.work.HiltWorkerFactory) $r2;

        return $r3;
    }

    public volatile java.lang.Object get()
    {
        androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory r0;
        androidx.hilt.work.HiltWorkerFactory $r1;

        r0 := @this: androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory;

        $r1 = virtualinvoke r0.<androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory: androidx.hilt.work.HiltWorkerFactory get()>();

        return $r1;
    }

