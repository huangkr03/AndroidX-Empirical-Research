kotlin.text.Charsets
<kotlin.text.Charsets: kotlin.text.Charsets INSTANCE>
<kotlin.text.Charsets: java.nio.charset.Charset ISO_8859_1>
<kotlin.text.Charsets: java.nio.charset.Charset US_ASCII>
<kotlin.text.Charsets: java.nio.charset.Charset UTF_16>
<kotlin.text.Charsets: java.nio.charset.Charset UTF_16BE>
<kotlin.text.Charsets: java.nio.charset.Charset UTF_16LE>
<kotlin.text.Charsets: java.nio.charset.Charset UTF_8>
<kotlin.text.Charsets: java.nio.charset.Charset utf_32>
<kotlin.text.Charsets: java.nio.charset.Charset utf_32be>
<kotlin.text.Charsets: java.nio.charset.Charset utf_32le>
    static void <clinit>()
    {
        kotlin.text.Charsets $r0;
        java.nio.charset.Charset $r1;

        $r0 = new kotlin.text.Charsets;

        specialinvoke $r0.<kotlin.text.Charsets: void <init>()>();

        <kotlin.text.Charsets: kotlin.text.Charsets INSTANCE> = $r0;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"UTF-8\")");

        <kotlin.text.Charsets: java.nio.charset.Charset UTF_8> = $r1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"UTF-16\")");

        <kotlin.text.Charsets: java.nio.charset.Charset UTF_16> = $r1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16BE");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"UTF-16BE\")");

        <kotlin.text.Charsets: java.nio.charset.Charset UTF_16BE> = $r1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16LE");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"UTF-16LE\")");

        <kotlin.text.Charsets: java.nio.charset.Charset UTF_16LE> = $r1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"US-ASCII\")");

        <kotlin.text.Charsets: java.nio.charset.Charset US_ASCII> = $r1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"ISO-8859-1\")");

        <kotlin.text.Charsets: java.nio.charset.Charset ISO_8859_1> = $r1;

        return;
    }

    private void <init>()
    {
        kotlin.text.Charsets $r0;

        $r0 := @this: kotlin.text.Charsets;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.nio.charset.Charset UTF32()
    {
        kotlin.text.Charsets $r0;
        java.nio.charset.Charset $r1;

        $r0 := @this: kotlin.text.Charsets;

        $r1 = <kotlin.text.Charsets: java.nio.charset.Charset utf_32>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-32");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"UTF-32\")");

        <kotlin.text.Charsets: java.nio.charset.Charset utf_32> = $r1;

     label1:
        return $r1;
    }

    public final java.nio.charset.Charset UTF32_BE()
    {
        kotlin.text.Charsets $r0;
        java.nio.charset.Charset $r1;

        $r0 := @this: kotlin.text.Charsets;

        $r1 = <kotlin.text.Charsets: java.nio.charset.Charset utf_32be>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-32BE");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"UTF-32BE\")");

        <kotlin.text.Charsets: java.nio.charset.Charset utf_32be> = $r1;

     label1:
        return $r1;
    }

    public final java.nio.charset.Charset UTF32_LE()
    {
        kotlin.text.Charsets $r0;
        java.nio.charset.Charset $r1;

        $r0 := @this: kotlin.text.Charsets;

        $r1 = <kotlin.text.Charsets: java.nio.charset.Charset utf_32le>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-32LE");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "forName(\"UTF-32LE\")");

        <kotlin.text.Charsets: java.nio.charset.Charset utf_32le> = $r1;

     label1:
        return $r1;
    }

