androidx.paging.compose.LazyPagingItems
<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$Companion Companion>
<androidx.paging.compose.LazyPagingItems: kotlinx.coroutines.flow.Flow flow>
<androidx.paging.compose.LazyPagingItems: kotlinx.coroutines.MainCoroutineDispatcher mainDispatcher>
<androidx.paging.compose.LazyPagingItems: androidx.compose.runtime.MutableState itemSnapshotList$delegate>
<androidx.paging.compose.LazyPagingItems: androidx.paging.DifferCallback differCallback>
<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer>
<androidx.paging.compose.LazyPagingItems: androidx.compose.runtime.MutableState loadState$delegate>
<androidx.paging.compose.LazyPagingItems: int $stable>
    public void <init>(kotlinx.coroutines.flow.Flow)
    {
        androidx.paging.compose.LazyPagingItems r0;
        kotlinx.coroutines.flow.Flow r1;
        androidx.paging.DifferCallback r2, $r9;
        kotlinx.coroutines.MainCoroutineDispatcher r3, $r4;
        androidx.paging.ItemSnapshotList $r5;
        java.util.List $r6;
        androidx.compose.runtime.MutableState $r7, $r14;
        androidx.paging.compose.LazyPagingItems$differCallback$1 $r8;
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 $r10, $r11;
        kotlinx.coroutines.flow.StateFlow $r12;
        java.lang.Object $r13;
        androidx.paging.LoadStates $r15, $r17, $r19, $r21;
        androidx.paging.LoadState $r16, $r18, $r20;
        androidx.paging.CombinedLoadStates $r23;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "flow");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.compose.LazyPagingItems: kotlinx.coroutines.flow.Flow flow> = r1;

        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r0.<androidx.paging.compose.LazyPagingItems: kotlinx.coroutines.MainCoroutineDispatcher mainDispatcher> = $r4;

        $r5 = new androidx.paging.ItemSnapshotList;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke $r5.<androidx.paging.ItemSnapshotList: void <init>(int,int,java.util.List)>(0, 0, $r6);

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r5, null, 2, null);

        r0.<androidx.paging.compose.LazyPagingItems: androidx.compose.runtime.MutableState itemSnapshotList$delegate> = $r7;

        $r8 = new androidx.paging.compose.LazyPagingItems$differCallback$1;

        specialinvoke $r8.<androidx.paging.compose.LazyPagingItems$differCallback$1: void <init>(androidx.paging.compose.LazyPagingItems)>(r0);

        $r9 = (androidx.paging.DifferCallback) $r8;

        r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.DifferCallback differCallback> = $r9;

        r2 = r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.DifferCallback differCallback>;

        r3 = r0.<androidx.paging.compose.LazyPagingItems: kotlinx.coroutines.MainCoroutineDispatcher mainDispatcher>;

        $r10 = new androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1;

        specialinvoke $r10.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: void <init>(androidx.paging.compose.LazyPagingItems,androidx.paging.DifferCallback,kotlinx.coroutines.MainCoroutineDispatcher)>(r0, r2, r3);

        r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer> = $r10;

        $r11 = r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer>;

        $r12 = virtualinvoke $r11.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: kotlinx.coroutines.flow.StateFlow getLoadStateFlow()>();

        $r13 = interfaceinvoke $r12.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        $r23 = (androidx.paging.CombinedLoadStates) $r13;

        if $r23 != null goto label1;

        $r23 = new androidx.paging.CombinedLoadStates;

        $r15 = staticinvoke <androidx.paging.compose.LazyPagingItemsKt: androidx.paging.LoadStates access$getInitialLoadStates$p()>();

        $r16 = virtualinvoke $r15.<androidx.paging.LoadStates: androidx.paging.LoadState getRefresh()>();

        $r17 = staticinvoke <androidx.paging.compose.LazyPagingItemsKt: androidx.paging.LoadStates access$getInitialLoadStates$p()>();

        $r18 = virtualinvoke $r17.<androidx.paging.LoadStates: androidx.paging.LoadState getPrepend()>();

        $r19 = staticinvoke <androidx.paging.compose.LazyPagingItemsKt: androidx.paging.LoadStates access$getInitialLoadStates$p()>();

        $r20 = virtualinvoke $r19.<androidx.paging.LoadStates: androidx.paging.LoadState getAppend()>();

        $r21 = staticinvoke <androidx.paging.compose.LazyPagingItemsKt: androidx.paging.LoadStates access$getInitialLoadStates$p()>();

        specialinvoke $r23.<androidx.paging.CombinedLoadStates: void <init>(androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadStates,androidx.paging.LoadStates,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r16, $r18, $r20, $r21, null, 16, null);

     label1:
        $r14 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r23, null, 2, null);

        r0.<androidx.paging.compose.LazyPagingItems: androidx.compose.runtime.MutableState loadState$delegate> = $r14;

        return;
    }

    public final androidx.paging.ItemSnapshotList getItemSnapshotList()
    {
        androidx.paging.compose.LazyPagingItems r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.paging.ItemSnapshotList $r4;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        $r2 = r0.<androidx.paging.compose.LazyPagingItems: androidx.compose.runtime.MutableState itemSnapshotList$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.paging.ItemSnapshotList) $r3;

        return $r4;
    }

    private final void setItemSnapshotList(androidx.paging.ItemSnapshotList)
    {
        androidx.paging.compose.LazyPagingItems r0;
        androidx.paging.ItemSnapshotList r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        r1 := @parameter0: androidx.paging.ItemSnapshotList;

        $r2 = r0.<androidx.paging.compose.LazyPagingItems: androidx.compose.runtime.MutableState itemSnapshotList$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final int getItemCount()
    {
        androidx.paging.compose.LazyPagingItems r0;
        androidx.paging.ItemSnapshotList $r1;
        int $i0;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        $r1 = virtualinvoke r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.ItemSnapshotList getItemSnapshotList()>();

        $i0 = virtualinvoke $r1.<androidx.paging.ItemSnapshotList: int size()>();

        return $i0;
    }

    private final void updateItemSnapshotList()
    {
        androidx.paging.compose.LazyPagingItems r0;
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 $r1;
        androidx.paging.ItemSnapshotList $r2;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        $r1 = r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer>;

        $r2 = virtualinvoke $r1.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: androidx.paging.ItemSnapshotList snapshot()>();

        specialinvoke r0.<androidx.paging.compose.LazyPagingItems: void setItemSnapshotList(androidx.paging.ItemSnapshotList)>($r2);

        return;
    }

    public final java.lang.Object get(int)
    {
        androidx.paging.compose.LazyPagingItems r0;
        int i0;
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 $r1;
        androidx.paging.ItemSnapshotList $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer>;

        virtualinvoke $r1.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: java.lang.Object get(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.ItemSnapshotList getItemSnapshotList()>();

        $r4 = virtualinvoke $r3.<androidx.paging.ItemSnapshotList: java.lang.Object get(int)>(i0);

        return $r4;
    }

    public final java.lang.Object peek(int)
    {
        androidx.paging.compose.LazyPagingItems r0;
        int i0;
        androidx.paging.ItemSnapshotList $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.ItemSnapshotList getItemSnapshotList()>();

        $r2 = virtualinvoke $r1.<androidx.paging.ItemSnapshotList: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public final void retry()
    {
        androidx.paging.compose.LazyPagingItems r0;
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 $r1;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        $r1 = r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer>;

        virtualinvoke $r1.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: void retry()>();

        return;
    }

    public final void refresh()
    {
        androidx.paging.compose.LazyPagingItems r0;
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 $r1;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        $r1 = r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer>;

        virtualinvoke $r1.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: void refresh()>();

        return;
    }

    public final androidx.paging.CombinedLoadStates getLoadState()
    {
        androidx.paging.compose.LazyPagingItems r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.paging.CombinedLoadStates $r4;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        $r2 = r0.<androidx.paging.compose.LazyPagingItems: androidx.compose.runtime.MutableState loadState$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.paging.CombinedLoadStates) $r3;

        return $r4;
    }

    private final void setLoadState(androidx.paging.CombinedLoadStates)
    {
        androidx.paging.compose.LazyPagingItems r0;
        androidx.paging.CombinedLoadStates r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        r1 := @parameter0: androidx.paging.CombinedLoadStates;

        $r2 = r0.<androidx.paging.compose.LazyPagingItems: androidx.compose.runtime.MutableState loadState$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final java.lang.Object collectLoadState$paging_compose_release(kotlin.coroutines.Continuation)
    {
        androidx.paging.compose.LazyPagingItems r0;
        kotlin.coroutines.Continuation $r1;
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 $r2;
        kotlinx.coroutines.flow.StateFlow $r3;
        kotlinx.coroutines.flow.Flow $r4, $r5;
        androidx.paging.compose.LazyPagingItems$collectLoadState$2 $r6;
        kotlinx.coroutines.flow.FlowCollector $r7;
        java.lang.Object $r8, $r9;
        kotlin.Unit $r10;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer>;

        $r3 = virtualinvoke $r2.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: kotlinx.coroutines.flow.StateFlow getLoadStateFlow()>();

        $r4 = (kotlinx.coroutines.flow.Flow) $r3;

        $r5 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)>($r4);

        $r6 = new androidx.paging.compose.LazyPagingItems$collectLoadState$2;

        specialinvoke $r6.<androidx.paging.compose.LazyPagingItems$collectLoadState$2: void <init>(androidx.paging.compose.LazyPagingItems)>(r0);

        $r7 = (kotlinx.coroutines.flow.FlowCollector) $r6;

        $r8 = interfaceinvoke $r5.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r7, $r1);

        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r8 != $r9 goto label1;

        return $r8;

     label1:
        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r10;
    }

    public final java.lang.Object collectPagingData$paging_compose_release(kotlin.coroutines.Continuation)
    {
        androidx.paging.compose.LazyPagingItems r0;
        kotlin.coroutines.Continuation $r1;
        androidx.paging.compose.LazyPagingItems$collectPagingData$2 $r2;
        kotlinx.coroutines.flow.Flow $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        r0 := @this: androidx.paging.compose.LazyPagingItems;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.paging.compose.LazyPagingItems: kotlinx.coroutines.flow.Flow flow>;

        $r2 = new androidx.paging.compose.LazyPagingItems$collectPagingData$2;

        specialinvoke $r2.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: void <init>(androidx.paging.compose.LazyPagingItems,kotlin.coroutines.Continuation)>(r0, null);

        $r4 = (kotlin.jvm.functions.Function2) $r2;

        $r5 = staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Object collectLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r3, $r4, $r1);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    public static final void access$setLoadState(androidx.paging.compose.LazyPagingItems, androidx.paging.CombinedLoadStates)
    {
        androidx.paging.compose.LazyPagingItems $r0;
        androidx.paging.CombinedLoadStates r1;

        $r0 := @parameter0: androidx.paging.compose.LazyPagingItems;

        r1 := @parameter1: androidx.paging.CombinedLoadStates;

        specialinvoke $r0.<androidx.paging.compose.LazyPagingItems: void setLoadState(androidx.paging.CombinedLoadStates)>(r1);

        return;
    }

    public static final androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 access$getPagingDataDiffer$p(androidx.paging.compose.LazyPagingItems)
    {
        androidx.paging.compose.LazyPagingItems $r0;
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 $r1;

        $r0 := @parameter0: androidx.paging.compose.LazyPagingItems;

        $r1 = $r0.<androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 pagingDataDiffer>;

        return $r1;
    }

    public static final void access$updateItemSnapshotList(androidx.paging.compose.LazyPagingItems)
    {
        androidx.paging.compose.LazyPagingItems $r0;

        $r0 := @parameter0: androidx.paging.compose.LazyPagingItems;

        specialinvoke $r0.<androidx.paging.compose.LazyPagingItems: void updateItemSnapshotList()>();

        return;
    }

    static void <clinit>()
    {
        androidx.paging.compose.LazyPagingItems$Companion $r0;
        androidx.paging.compose.LazyPagingItems$Companion$1 $r1;
        androidx.paging.Logger $r2;

        $r0 = new androidx.paging.compose.LazyPagingItems$Companion;

        specialinvoke $r0.<androidx.paging.compose.LazyPagingItems$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$Companion Companion> = $r0;

        <androidx.paging.compose.LazyPagingItems: int $stable> = 8;

        $r2 = staticinvoke <androidx.paging.LoggerKt: androidx.paging.Logger getLOGGER()>();

        if $r2 != null goto label1;

        $r1 = new androidx.paging.compose.LazyPagingItems$Companion$1;

        specialinvoke $r1.<androidx.paging.compose.LazyPagingItems$Companion$1: void <init>()>();

        $r2 = (androidx.paging.Logger) $r1;

     label1:
        staticinvoke <androidx.paging.LoggerKt: void setLOGGER(androidx.paging.Logger)>($r2);

        return;
    }

androidx.paging.compose.LazyPagingItems$collectLoadState$2
<androidx.paging.compose.LazyPagingItems$collectLoadState$2: androidx.paging.compose.LazyPagingItems this$0>
    void <init>(androidx.paging.compose.LazyPagingItems)
    {
        androidx.paging.compose.LazyPagingItems$collectLoadState$2 r0;
        androidx.paging.compose.LazyPagingItems $r1;

        r0 := @this: androidx.paging.compose.LazyPagingItems$collectLoadState$2;

        $r1 := @parameter0: androidx.paging.compose.LazyPagingItems;

        r0.<androidx.paging.compose.LazyPagingItems$collectLoadState$2: androidx.paging.compose.LazyPagingItems this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(androidx.paging.CombinedLoadStates, kotlin.coroutines.Continuation)
    {
        androidx.paging.compose.LazyPagingItems$collectLoadState$2 r0;
        androidx.paging.CombinedLoadStates r1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.compose.LazyPagingItems $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.paging.compose.LazyPagingItems$collectLoadState$2;

        r1 := @parameter0: androidx.paging.CombinedLoadStates;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.paging.compose.LazyPagingItems$collectLoadState$2: androidx.paging.compose.LazyPagingItems this$0>;

        staticinvoke <androidx.paging.compose.LazyPagingItems: void access$setLoadState(androidx.paging.compose.LazyPagingItems,androidx.paging.CombinedLoadStates)>($r3, r1);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public volatile java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.compose.LazyPagingItems$collectLoadState$2 r0;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.CombinedLoadStates $r3;

        r0 := @this: androidx.paging.compose.LazyPagingItems$collectLoadState$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (androidx.paging.CombinedLoadStates) r1;

        $r4 = virtualinvoke r0.<androidx.paging.compose.LazyPagingItems$collectLoadState$2: java.lang.Object emit(androidx.paging.CombinedLoadStates,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

androidx.paging.compose.LazyPagingItems$collectPagingData$2
<androidx.paging.compose.LazyPagingItems$collectPagingData$2: int label>
<androidx.paging.compose.LazyPagingItems$collectPagingData$2: java.lang.Object L$0>
<androidx.paging.compose.LazyPagingItems$collectPagingData$2: androidx.paging.compose.LazyPagingItems this$0>
    void <init>(androidx.paging.compose.LazyPagingItems, kotlin.coroutines.Continuation)
    {
        androidx.paging.compose.LazyPagingItems$collectPagingData$2 r0;
        androidx.paging.compose.LazyPagingItems $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.compose.LazyPagingItems$collectPagingData$2;

        $r1 := @parameter0: androidx.paging.compose.LazyPagingItems;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: androidx.paging.compose.LazyPagingItems this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.compose.LazyPagingItems$collectPagingData$2 r0;
        java.lang.Object $r1, r3, $r5, $r9;
        androidx.paging.PagingData r2;
        int $i0;
        kotlin.Unit $r4;
        androidx.paging.compose.LazyPagingItems $r6;
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.paging.compose.LazyPagingItems$collectPagingData$2;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r5 = r0.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: java.lang.Object L$0>;

        r2 = (androidx.paging.PagingData) $r5;

        $r6 = r0.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: androidx.paging.compose.LazyPagingItems this$0>;

        $r7 = staticinvoke <androidx.paging.compose.LazyPagingItems: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 access$getPagingDataDiffer$p(androidx.paging.compose.LazyPagingItems)>($r6);

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: int label> = 1;

        $r9 = virtualinvoke $r7.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: java.lang.Object collectFrom(androidx.paging.PagingData,kotlin.coroutines.Continuation)>(r2, $r8);

        if $r9 != r3 goto label3;

        return r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.compose.LazyPagingItems$collectPagingData$2 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.paging.compose.LazyPagingItems $r5;

        r0 := @this: androidx.paging.compose.LazyPagingItems$collectPagingData$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.compose.LazyPagingItems$collectPagingData$2;

        $r5 = r0.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: androidx.paging.compose.LazyPagingItems this$0>;

        specialinvoke $r4.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: void <init>(androidx.paging.compose.LazyPagingItems,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(androidx.paging.PagingData, kotlin.coroutines.Continuation)
    {
        androidx.paging.compose.LazyPagingItems$collectPagingData$2 r0, $r5;
        androidx.paging.PagingData r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.compose.LazyPagingItems$collectPagingData$2;

        r1 := @parameter0: androidx.paging.PagingData;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.compose.LazyPagingItems$collectPagingData$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.compose.LazyPagingItems$collectPagingData$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.paging.PagingData $r4;

        r0 := @this: androidx.paging.compose.LazyPagingItems$collectPagingData$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.paging.PagingData) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.compose.LazyPagingItems$collectPagingData$2: java.lang.Object invoke(androidx.paging.PagingData,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.compose.LazyPagingItems$Companion$1
    void <init>()
    {
        androidx.paging.compose.LazyPagingItems$Companion$1 r0;

        r0 := @this: androidx.paging.compose.LazyPagingItems$Companion$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isLoggable(int)
    {
        androidx.paging.compose.LazyPagingItems$Companion$1 r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.paging.compose.LazyPagingItems$Companion$1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("Paging", i0);

        return $z0;
    }

    public void log(int, java.lang.String, java.lang.Throwable)
    {
        androidx.paging.compose.LazyPagingItems$Companion$1 r0;
        int i0;
        java.lang.String r1, $r8;
        java.lang.Throwable r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: androidx.paging.compose.LazyPagingItems$Companion$1;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "message");

        if r2 == null goto label1;

        if i0 != 3 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Paging", r1, r2);

        goto label5;

     label1:
        if r2 == null goto label2;

        if i0 != 2 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("Paging", r1, r2);

        goto label5;

     label2:
        if i0 != 3 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Paging", r1);

        goto label5;

     label3:
        if i0 != 2 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Paging", r1);

        goto label5;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("debug level ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is requested but Paging only supports default logging for level 2 (DEBUG) or level 3 (VERBOSE)");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label5:
        return;
    }

androidx.paging.compose.LazyPagingItems$Companion
    private void <init>()
    {
        androidx.paging.compose.LazyPagingItems$Companion r0;

        r0 := @this: androidx.paging.compose.LazyPagingItems$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.compose.LazyPagingItems$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.compose.LazyPagingItems$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.compose.LazyPagingItems$Companion: void <init>()>();

        return;
    }

androidx.paging.compose.LazyPagingItems$differCallback$1
<androidx.paging.compose.LazyPagingItems$differCallback$1: androidx.paging.compose.LazyPagingItems this$0>
    void <init>(androidx.paging.compose.LazyPagingItems)
    {
        androidx.paging.compose.LazyPagingItems$differCallback$1 r0;
        androidx.paging.compose.LazyPagingItems $r1;

        r0 := @this: androidx.paging.compose.LazyPagingItems$differCallback$1;

        $r1 := @parameter0: androidx.paging.compose.LazyPagingItems;

        r0.<androidx.paging.compose.LazyPagingItems$differCallback$1: androidx.paging.compose.LazyPagingItems this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onChanged(int, int)
    {
        androidx.paging.compose.LazyPagingItems$differCallback$1 r0;
        int i0, i1;
        androidx.paging.compose.LazyPagingItems $r1;

        r0 := @this: androidx.paging.compose.LazyPagingItems$differCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= 0 goto label1;

        $r1 = r0.<androidx.paging.compose.LazyPagingItems$differCallback$1: androidx.paging.compose.LazyPagingItems this$0>;

        staticinvoke <androidx.paging.compose.LazyPagingItems: void access$updateItemSnapshotList(androidx.paging.compose.LazyPagingItems)>($r1);

     label1:
        return;
    }

    public void onInserted(int, int)
    {
        androidx.paging.compose.LazyPagingItems$differCallback$1 r0;
        int i0, i1;
        androidx.paging.compose.LazyPagingItems $r1;

        r0 := @this: androidx.paging.compose.LazyPagingItems$differCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= 0 goto label1;

        $r1 = r0.<androidx.paging.compose.LazyPagingItems$differCallback$1: androidx.paging.compose.LazyPagingItems this$0>;

        staticinvoke <androidx.paging.compose.LazyPagingItems: void access$updateItemSnapshotList(androidx.paging.compose.LazyPagingItems)>($r1);

     label1:
        return;
    }

    public void onRemoved(int, int)
    {
        androidx.paging.compose.LazyPagingItems$differCallback$1 r0;
        int i0, i1;
        androidx.paging.compose.LazyPagingItems $r1;

        r0 := @this: androidx.paging.compose.LazyPagingItems$differCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= 0 goto label1;

        $r1 = r0.<androidx.paging.compose.LazyPagingItems$differCallback$1: androidx.paging.compose.LazyPagingItems this$0>;

        staticinvoke <androidx.paging.compose.LazyPagingItems: void access$updateItemSnapshotList(androidx.paging.compose.LazyPagingItems)>($r1);

     label1:
        return;
    }

androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1
<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: androidx.paging.compose.LazyPagingItems this$0>
    void <init>(androidx.paging.compose.LazyPagingItems, androidx.paging.DifferCallback, kotlinx.coroutines.MainCoroutineDispatcher)
    {
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 r0;
        androidx.paging.compose.LazyPagingItems $r1;
        androidx.paging.DifferCallback $r2;
        kotlinx.coroutines.MainCoroutineDispatcher $r3;
        kotlin.coroutines.CoroutineContext $r4;

        r0 := @this: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1;

        $r1 := @parameter0: androidx.paging.compose.LazyPagingItems;

        $r2 := @parameter1: androidx.paging.DifferCallback;

        $r3 := @parameter2: kotlinx.coroutines.MainCoroutineDispatcher;

        r0.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: androidx.paging.compose.LazyPagingItems this$0> = $r1;

        $r4 = (kotlin.coroutines.CoroutineContext) $r3;

        specialinvoke r0.<androidx.paging.PagingDataDiffer: void <init>(androidx.paging.DifferCallback,kotlin.coroutines.CoroutineContext)>($r2, $r4);

        return;
    }

    public java.lang.Object presentNewList(androidx.paging.NullPaddedList, androidx.paging.NullPaddedList, int, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1 r0;
        androidx.paging.NullPaddedList r1, r2;
        int i0;
        kotlin.jvm.functions.Function0 r3;
        kotlin.coroutines.Continuation $r4;
        androidx.paging.compose.LazyPagingItems $r6;

        r0 := @this: androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1;

        r1 := @parameter0: androidx.paging.NullPaddedList;

        r2 := @parameter1: androidx.paging.NullPaddedList;

        i0 := @parameter2: int;

        r3 := @parameter3: kotlin.jvm.functions.Function0;

        $r4 := @parameter4: kotlin.coroutines.Continuation;

        interfaceinvoke r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r6 = r0.<androidx.paging.compose.LazyPagingItems$pagingDataDiffer$1: androidx.paging.compose.LazyPagingItems this$0>;

        staticinvoke <androidx.paging.compose.LazyPagingItems: void access$updateItemSnapshotList(androidx.paging.compose.LazyPagingItems)>($r6);

        return null;
    }

