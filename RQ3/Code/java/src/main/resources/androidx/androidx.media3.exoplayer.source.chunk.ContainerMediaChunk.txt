androidx.media3.exoplayer.source.chunk.ContainerMediaChunk
<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: int chunkCount>
<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long sampleOffsetUs>
<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.exoplayer.source.chunk.ChunkExtractor chunkExtractor>
<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long nextLoadPosition>
<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: boolean loadCanceled>
<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: boolean loadCompleted>
    public void <init>(androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, androidx.media3.common.Format, int, java.lang.Object, long, long, long, long, long, int, long, androidx.media3.exoplayer.source.chunk.ChunkExtractor)
    {
        androidx.media3.exoplayer.source.chunk.ContainerMediaChunk r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.datasource.DataSpec r2;
        androidx.media3.common.Format r3;
        int i0, i6;
        java.lang.Object r4;
        long l1, l2, l3, l4, l5, l7;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor r5;

        r0 := @this: androidx.media3.exoplayer.source.chunk.ContainerMediaChunk;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        r3 := @parameter2: androidx.media3.common.Format;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.Object;

        l1 := @parameter5: long;

        l2 := @parameter6: long;

        l3 := @parameter7: long;

        l4 := @parameter8: long;

        l5 := @parameter9: long;

        i6 := @parameter10: int;

        l7 := @parameter11: long;

        r5 := @parameter12: androidx.media3.exoplayer.source.chunk.ChunkExtractor;

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long,long,long)>(r1, r2, r3, i0, r4, l1, l2, l3, l4, l5);

        r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: int chunkCount> = i6;

        r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long sampleOffsetUs> = l7;

        r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.exoplayer.source.chunk.ChunkExtractor chunkExtractor> = r5;

        return;
    }

    public long getNextChunkIndex()
    {
        androidx.media3.exoplayer.source.chunk.ContainerMediaChunk r0;
        int $i0;
        long $l1, $l2, $l3;

        r0 := @this: androidx.media3.exoplayer.source.chunk.ContainerMediaChunk;

        $l2 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long chunkIndex>;

        $i0 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: int chunkCount>;

        $l1 = (long) $i0;

        $l3 = $l2 + $l1;

        return $l3;
    }

    public boolean isLoadCompleted()
    {
        androidx.media3.exoplayer.source.chunk.ContainerMediaChunk r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.chunk.ContainerMediaChunk;

        $z0 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: boolean loadCompleted>;

        return $z0;
    }

    public final void cancelLoad()
    {
        androidx.media3.exoplayer.source.chunk.ContainerMediaChunk r0;

        r0 := @this: androidx.media3.exoplayer.source.chunk.ContainerMediaChunk;

        r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: boolean loadCanceled> = 1;

        return;
    }

    public final void load() throws java.io.IOException
    {
        androidx.media3.exoplayer.source.chunk.ContainerMediaChunk r0;
        androidx.media3.extractor.DefaultExtractorInput r1, r20;
        java.lang.Throwable r2, r3, $r8, $r10;
        long $l0, $l2, $l3, $l4, $l5, $l6, $l8, $l9, $l10, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21;
        byte $b1, $b7, $b11;
        androidx.media3.datasource.DataSpec $r4, $r9, $r15, r16;
        androidx.media3.datasource.StatsDataSource $r5, $r11, $r18, $r19;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor $r7, $r13;
        androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput r12;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider $r14;
        androidx.media3.common.DataReader r21;
        androidx.media3.datasource.DataSource r22, r23;

        r0 := @this: androidx.media3.exoplayer.source.chunk.ContainerMediaChunk;

        $l0 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long nextLoadPosition>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label05;

        r12 = virtualinvoke r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput getOutput()>();

        $l5 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long sampleOffsetUs>;

        virtualinvoke r12.<androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput: void setSampleOffsetUs(long)>($l5);

        $r13 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.exoplayer.source.chunk.ChunkExtractor chunkExtractor>;

        $r14 = virtualinvoke r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider getTrackOutputProvider(androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput)>(r12);

        $l6 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long clippedStartTimeUs>;

        $b7 = $l6 cmp -9223372036854775807L;

        if $b7 != 0 goto label01;

        $l17 = -9223372036854775807L;

        goto label02;

     label01:
        $l9 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long clippedStartTimeUs>;

        $l8 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long sampleOffsetUs>;

        $l17 = $l9 - $l8;

     label02:
        $l10 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long clippedEndTimeUs>;

        $b11 = $l10 cmp -9223372036854775807L;

        if $b11 != 0 goto label03;

        $l18 = -9223372036854775807L;

        goto label04;

     label03:
        $l13 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long clippedEndTimeUs>;

        $l12 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long sampleOffsetUs>;

        $l18 = $l13 - $l12;

     label04:
        interfaceinvoke $r13.<androidx.media3.exoplayer.source.chunk.ChunkExtractor: void init(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider,long,long)>($r14, $l17, $l18);

     label05:
        $r15 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.datasource.DataSpec dataSpec>;

        $l19 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long nextLoadPosition>;

        r16 = virtualinvoke $r15.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec subrange(long)>($l19);

        r20 = new androidx.media3.extractor.DefaultExtractorInput;

        $r18 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        $l20 = r16.<androidx.media3.datasource.DataSpec: long position>;

        $r19 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        $l21 = virtualinvoke $r19.<androidx.media3.datasource.StatsDataSource: long open(androidx.media3.datasource.DataSpec)>(r16);

        r21 = (androidx.media3.common.DataReader) $r18;

        specialinvoke r20.<androidx.media3.extractor.DefaultExtractorInput: void <init>(androidx.media3.common.DataReader,long,long)>(r21, $l20, $l21);

        r1 = r20;

     label06:
        $z2 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: boolean loadCanceled>;

        if $z2 != 0 goto label07;

        $r7 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.exoplayer.source.chunk.ChunkExtractor chunkExtractor>;

        $z1 = interfaceinvoke $r7.<androidx.media3.exoplayer.source.chunk.ChunkExtractor: boolean read(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z1 == 0 goto label07;

        goto label06;

     label07:
        $l2 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $r4 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.datasource.DataSpec dataSpec>;

        $l3 = $r4.<androidx.media3.datasource.DataSpec: long position>;

        $l4 = $l2 - $l3;

        r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long nextLoadPosition> = $l4;

        goto label09;

     label08:
        $r8 := @caughtexception;

        r2 = $r8;

        $l14 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $r9 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.datasource.DataSpec dataSpec>;

        $l15 = $r9.<androidx.media3.datasource.DataSpec: long position>;

        $l16 = $l14 - $l15;

        r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: long nextLoadPosition> = $l16;

        throw r2;

     label09:
        $r5 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        r22 = (androidx.media3.datasource.DataSource) $r5;

        staticinvoke <androidx.media3.datasource.DataSourceUtil: void closeQuietly(androidx.media3.datasource.DataSource)>(r22);

        goto label12;

     label10:
        $r10 := @caughtexception;

        r3 = $r10;

     label11:
        $r11 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        r23 = (androidx.media3.datasource.DataSource) $r11;

        staticinvoke <androidx.media3.datasource.DataSourceUtil: void closeQuietly(androidx.media3.datasource.DataSource)>(r23);

        throw r3;

     label12:
        $z0 = r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: boolean loadCanceled>;

        if $z0 != 0 goto label13;

        $z3 = 1;

        goto label14;

     label13:
        $z3 = 0;

     label14:
        r0.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: boolean loadCompleted> = $z3;

        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label05 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider getTrackOutputProvider(androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput)
    {
        androidx.media3.exoplayer.source.chunk.ContainerMediaChunk r0;
        androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput r1;

        r0 := @this: androidx.media3.exoplayer.source.chunk.ContainerMediaChunk;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput;

        return r1;
    }

