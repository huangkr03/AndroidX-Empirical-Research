androidx.graphics.surface.SurfaceControlImpl
<androidx.graphics.surface.SurfaceControlImpl: boolean isValid()>
<androidx.graphics.surface.SurfaceControlImpl: void release()>
androidx.graphics.surface.SurfaceControlImpl$Builder
<androidx.graphics.surface.SurfaceControlImpl$Builder: androidx.graphics.surface.SurfaceControlImpl$Builder setParent(android.view.SurfaceView)>
<androidx.graphics.surface.SurfaceControlImpl$Builder: androidx.graphics.surface.SurfaceControlImpl$Builder setName(java.lang.String)>
<androidx.graphics.surface.SurfaceControlImpl$Builder: androidx.graphics.surface.SurfaceControlImpl build()>
androidx.graphics.surface.SurfaceControlImpl$Transaction$DefaultImpls
    public static androidx.graphics.surface.SurfaceControlImpl$Transaction setBuffer$default(androidx.graphics.surface.SurfaceControlImpl$Transaction, androidx.graphics.surface.SurfaceControlImpl, android.hardware.HardwareBuffer, androidx.graphics.lowlatency.SyncFenceImpl, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.graphics.surface.SurfaceControlImpl$Transaction r0, $r4;
        androidx.graphics.surface.SurfaceControlImpl r1;
        android.hardware.HardwareBuffer r2;
        int i0, $i1, $i2;
        java.lang.Object r3;
        java.lang.UnsupportedOperationException $r5;
        androidx.graphics.lowlatency.SyncFenceImpl r6;
        kotlin.jvm.functions.Function0 r7;

        r0 := @parameter0: androidx.graphics.surface.SurfaceControlImpl$Transaction;

        r1 := @parameter1: androidx.graphics.surface.SurfaceControlImpl;

        r2 := @parameter2: android.hardware.HardwareBuffer;

        r6 := @parameter3: androidx.graphics.lowlatency.SyncFenceImpl;

        r7 := @parameter4: kotlin.jvm.functions.Function0;

        i0 := @parameter5: int;

        r3 := @parameter6: java.lang.Object;

        if r3 == null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: setBuffer");

        throw $r5;

     label1:
        $i1 = i0 & 4;

        if $i1 == 0 goto label2;

        r6 = null;

     label2:
        $i2 = i0 & 8;

        if $i2 == 0 goto label3;

        r7 = null;

     label3:
        $r4 = interfaceinvoke r0.<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setBuffer(androidx.graphics.surface.SurfaceControlImpl,android.hardware.HardwareBuffer,androidx.graphics.lowlatency.SyncFenceImpl,kotlin.jvm.functions.Function0)>(r1, r2, r6, r7);

        return $r4;
    }

androidx.graphics.surface.SurfaceControlImpl$Transaction
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setOpaque(androidx.graphics.surface.SurfaceControlImpl,boolean)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setVisibility(androidx.graphics.surface.SurfaceControlImpl,boolean)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction reparent(androidx.graphics.surface.SurfaceControlImpl,androidx.graphics.surface.SurfaceControlImpl)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction reparent(androidx.graphics.surface.SurfaceControlImpl,android.view.AttachedSurfaceControl)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setBuffer(androidx.graphics.surface.SurfaceControlImpl,android.hardware.HardwareBuffer,androidx.graphics.lowlatency.SyncFenceImpl,kotlin.jvm.functions.Function0)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setLayer(androidx.graphics.surface.SurfaceControlImpl,int)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction addTransactionCommittedListener(java.util.concurrent.Executor,androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setDamageRegion(androidx.graphics.surface.SurfaceControlImpl,android.graphics.Region)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setAlpha(androidx.graphics.surface.SurfaceControlImpl,float)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setCrop(androidx.graphics.surface.SurfaceControlImpl,android.graphics.Rect)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setPosition(androidx.graphics.surface.SurfaceControlImpl,float,float)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setScale(androidx.graphics.surface.SurfaceControlImpl,float,float)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: androidx.graphics.surface.SurfaceControlImpl$Transaction setBufferTransform(androidx.graphics.surface.SurfaceControlImpl,int)>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: void commit()>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: void close()>
<androidx.graphics.surface.SurfaceControlImpl$Transaction: void commitTransactionOnDraw(android.view.AttachedSurfaceControl)>
