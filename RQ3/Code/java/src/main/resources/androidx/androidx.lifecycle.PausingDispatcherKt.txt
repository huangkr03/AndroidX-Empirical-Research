androidx.lifecycle.PausingDispatcherKt
    public static final java.lang.Object whenCreated(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function2 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r4 = staticinvoke <androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenCreated(androidx.lifecycle.Lifecycle,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r3, r1, $r2);

        return $r4;
    }

    public static final java.lang.Object whenCreated(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function2 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r4 = staticinvoke <androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenStateAtLeast(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, $r3, r1, $r2);

        return $r4;
    }

    public static final java.lang.Object whenStarted(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function2 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r4 = staticinvoke <androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenStarted(androidx.lifecycle.Lifecycle,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r3, r1, $r2);

        return $r4;
    }

    public static final java.lang.Object whenStarted(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function2 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $r4 = staticinvoke <androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenStateAtLeast(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, $r3, r1, $r2);

        return $r4;
    }

    public static final java.lang.Object whenResumed(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function2 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r4 = staticinvoke <androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenResumed(androidx.lifecycle.Lifecycle,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r3, r1, $r2);

        return $r4;
    }

    public static final java.lang.Object whenResumed(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function2 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED>;

        $r4 = staticinvoke <androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenStateAtLeast(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, $r3, r1, $r2);

        return $r4;
    }

    public static final java.lang.Object whenStateAtLeast(androidx.lifecycle.Lifecycle, androidx.lifecycle.Lifecycle$State, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        androidx.lifecycle.Lifecycle$State r1;
        kotlin.jvm.functions.Function2 r2, $r8;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.MainCoroutineDispatcher $r4, $r5;
        androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2 $r6;
        kotlin.coroutines.CoroutineContext $r7;
        java.lang.Object $r9;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r5 = virtualinvoke $r4.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r7 = (kotlin.coroutines.CoroutineContext) $r5;

        $r6 = new androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2;

        specialinvoke $r6.<androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, r1, r2, null);

        $r8 = (kotlin.jvm.functions.Function2) $r6;

        $r9 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r7, $r8, $r3);

        return $r9;
    }

