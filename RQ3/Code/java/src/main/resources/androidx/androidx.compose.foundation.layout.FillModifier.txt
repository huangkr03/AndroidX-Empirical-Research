androidx.compose.foundation.layout.FillModifier
<androidx.compose.foundation.layout.FillModifier: androidx.compose.foundation.layout.Direction direction>
<androidx.compose.foundation.layout.FillModifier: float fraction>
    public void <init>(androidx.compose.foundation.layout.Direction, float, kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.layout.FillModifier r0;
        androidx.compose.foundation.layout.Direction r1;
        float f0;
        kotlin.jvm.functions.Function1 r2;

        r0 := @this: androidx.compose.foundation.layout.FillModifier;

        r1 := @parameter0: androidx.compose.foundation.layout.Direction;

        f0 := @parameter1: float;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "direction");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "inspectorInfo");

        specialinvoke r0.<androidx.compose.ui.platform.InspectorValueInfo: void <init>(kotlin.jvm.functions.Function1)>(r2);

        r0.<androidx.compose.foundation.layout.FillModifier: androidx.compose.foundation.layout.Direction direction> = r1;

        r0.<androidx.compose.foundation.layout.FillModifier: float fraction> = f0;

        return;
    }

    public androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope, androidx.compose.ui.layout.Measurable, long)
    {
        androidx.compose.foundation.layout.FillModifier r0;
        androidx.compose.ui.layout.MeasureScope $r1;
        androidx.compose.ui.layout.Measurable r2;
        long l0, $l15;
        boolean $z0, z1, z2, z3, z4, $z5;
        androidx.compose.foundation.layout.Direction $r3, $r4, $r5, $r6;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, $i16, $i17;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        androidx.compose.ui.layout.Placeable r7;
        androidx.compose.foundation.layout.FillModifier$measure$1 $r8;
        kotlin.jvm.functions.Function1 $r9;
        androidx.compose.ui.layout.MeasureResult $r10;

        r0 := @this: androidx.compose.foundation.layout.FillModifier;

        $r1 := @parameter0: androidx.compose.ui.layout.MeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.Measurable;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$measure");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        z1 = 0;

        z2 = 0;

        $z0 = staticinvoke <androidx.compose.ui.unit.Constraints: boolean getHasBoundedWidth-impl(long)>(l0);

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.compose.foundation.layout.FillModifier: androidx.compose.foundation.layout.Direction direction>;

        $r5 = <androidx.compose.foundation.layout.Direction: androidx.compose.foundation.layout.Direction Vertical>;

        if $r6 == $r5 goto label1;

        $i5 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>(l0);

        $f4 = (float) $i5;

        $f3 = r0.<androidx.compose.foundation.layout.FillModifier: float fraction>;

        $f5 = $f4 * $f3;

        $i6 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f5);

        $i7 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinWidth-impl(long)>(l0);

        $i8 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>(l0);

        i9 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i6, $i7, $i8);

        i10 = i9;

        i11 = i9;

        goto label2;

     label1:
        i10 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinWidth-impl(long)>(l0);

        i11 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>(l0);

     label2:
        z3 = 0;

        z4 = 0;

        $z5 = staticinvoke <androidx.compose.ui.unit.Constraints: boolean getHasBoundedHeight-impl(long)>(l0);

        if $z5 == 0 goto label3;

        $r4 = r0.<androidx.compose.foundation.layout.FillModifier: androidx.compose.foundation.layout.Direction direction>;

        $r3 = <androidx.compose.foundation.layout.Direction: androidx.compose.foundation.layout.Direction Horizontal>;

        if $r4 == $r3 goto label3;

        $i1 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>(l0);

        $f1 = (float) $i1;

        $f0 = r0.<androidx.compose.foundation.layout.FillModifier: float fraction>;

        $f2 = $f1 * $f0;

        $i2 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        $i3 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinHeight-impl(long)>(l0);

        $i4 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>(l0);

        i12 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i2, $i3, $i4);

        i13 = i12;

        i14 = i12;

        goto label4;

     label3:
        i13 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinHeight-impl(long)>(l0);

        i14 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>(l0);

     label4:
        $l15 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: long Constraints(int,int,int,int)>(i10, i11, i13, i14);

        r7 = interfaceinvoke r2.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>($l15);

        $i16 = virtualinvoke r7.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        $i17 = virtualinvoke r7.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        $r8 = new androidx.compose.foundation.layout.FillModifier$measure$1;

        specialinvoke $r8.<androidx.compose.foundation.layout.FillModifier$measure$1: void <init>(androidx.compose.ui.layout.Placeable)>(r7);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r10 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $i16, $i17, null, $r9, 4, null);

        return $r10;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.foundation.layout.FillModifier r0, $r2, $r5;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        androidx.compose.foundation.layout.Direction $r3, $r4;
        float $f0, $f1;
        byte $b0;

        r0 := @this: androidx.compose.foundation.layout.FillModifier;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.compose.foundation.layout.FillModifier;

        if $z0 == 0 goto label3;

        $r4 = r0.<androidx.compose.foundation.layout.FillModifier: androidx.compose.foundation.layout.Direction direction>;

        $r2 = (androidx.compose.foundation.layout.FillModifier) r1;

        $r3 = $r2.<androidx.compose.foundation.layout.FillModifier: androidx.compose.foundation.layout.Direction direction>;

        if $r4 != $r3 goto label3;

        $f1 = r0.<androidx.compose.foundation.layout.FillModifier: float fraction>;

        $r5 = (androidx.compose.foundation.layout.FillModifier) r1;

        $f0 = $r5.<androidx.compose.foundation.layout.FillModifier: float fraction>;

        $b0 = $f1 cmpg $f0;

        if $b0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public int hashCode()
    {
        androidx.compose.foundation.layout.FillModifier r0;
        androidx.compose.foundation.layout.Direction $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;

        r0 := @this: androidx.compose.foundation.layout.FillModifier;

        $r1 = r0.<androidx.compose.foundation.layout.FillModifier: androidx.compose.foundation.layout.Direction direction>;

        $i0 = virtualinvoke $r1.<androidx.compose.foundation.layout.Direction: int hashCode()>();

        $i1 = $i0 * 31;

        $f0 = r0.<androidx.compose.foundation.layout.FillModifier: float fraction>;

        $i2 = staticinvoke <java.lang.Float: int hashCode(float)>($f0);

        $i3 = $i1 + $i2;

        return $i3;
    }

androidx.compose.foundation.layout.FillModifier$measure$1
<androidx.compose.foundation.layout.FillModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>
    void <init>(androidx.compose.ui.layout.Placeable)
    {
        androidx.compose.foundation.layout.FillModifier$measure$1 r0;
        androidx.compose.ui.layout.Placeable $r1;

        r0 := @this: androidx.compose.foundation.layout.FillModifier$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable;

        r0.<androidx.compose.foundation.layout.FillModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)
    {
        androidx.compose.foundation.layout.FillModifier$measure$1 r0;
        androidx.compose.ui.layout.Placeable$PlacementScope $r1;
        androidx.compose.ui.layout.Placeable $r2;

        r0 := @this: androidx.compose.foundation.layout.FillModifier$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$layout");

        $r2 = r0.<androidx.compose.foundation.layout.FillModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void placeRelative$default(androidx.compose.ui.layout.Placeable$PlacementScope,androidx.compose.ui.layout.Placeable,int,int,float,int,java.lang.Object)>($r1, $r2, 0, 0, 0.0F, 4, null);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.layout.FillModifier$measure$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.foundation.layout.FillModifier$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.compose.foundation.layout.FillModifier$measure$1: void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

