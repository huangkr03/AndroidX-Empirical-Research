androidx.test.services.shellexecutor.ShellExecutorImpl
<androidx.test.services.shellexecutor.ShellExecutorImpl: java.lang.String binderKey>
<androidx.test.services.shellexecutor.ShellExecutorImpl: android.content.Context context>
    public void <init>(android.content.Context, java.lang.String)
    {
        androidx.test.services.shellexecutor.ShellExecutorImpl $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        java.lang.NullPointerException $r3;

        $r0 := @this: androidx.test.services.shellexecutor.ShellExecutorImpl;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label2;

        $r0.<androidx.test.services.shellexecutor.ShellExecutorImpl: android.content.Context context> = $r1;

        if $r2 == null goto label1;

        $r0.<androidx.test.services.shellexecutor.ShellExecutorImpl: java.lang.String binderKey> = $r2;

        return;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ShellExecutorImpl", "Unable to find the binder key from the instrumentation registry.");

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("binderKey, cannot be null!");

        throw $r3;

     label2:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("context, cannot be null!");

        throw $r3;
    }

    public java.io.InputStream executeShellCommand(java.lang.String, java.util.List, java.util.Map, boolean) throws java.io.IOException, android.os.RemoteException
    {
        androidx.test.services.shellexecutor.ShellExecutorImpl $r0;
        java.util.List $r1;
        java.util.Map $r2;
        boolean $z0;
        java.io.InputStream $r3;
        java.lang.String $r4;

        $r0 := @this: androidx.test.services.shellexecutor.ShellExecutorImpl;

        $r4 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.util.Map;

        $z0 := @parameter3: boolean;

        $r3 = virtualinvoke $r0.<androidx.test.services.shellexecutor.ShellExecutorImpl: java.io.InputStream executeShellCommand(java.lang.String,java.util.List,java.util.Map,boolean,long)>($r4, $r1, $r2, $z0, 0L);

        return $r3;
    }

    public java.io.InputStream executeShellCommand(java.lang.String, java.util.List, java.util.Map, boolean, long) throws java.io.IOException, android.os.RemoteException
    {
        androidx.test.services.shellexecutor.ShellExecutorImpl $r0;
        java.util.Map $r1;
        boolean $z0;
        long $l0;
        android.content.Context $r2;
        java.lang.String $r3, $r5;
        java.io.InputStream $r4;
        java.util.List $r6;

        $r0 := @this: androidx.test.services.shellexecutor.ShellExecutorImpl;

        $r5 := @parameter0: java.lang.String;

        $r6 := @parameter1: java.util.List;

        $r1 := @parameter2: java.util.Map;

        $z0 := @parameter3: boolean;

        $l0 := @parameter4: long;

        $r2 = $r0.<androidx.test.services.shellexecutor.ShellExecutorImpl: android.content.Context context>;

        $r3 = $r0.<androidx.test.services.shellexecutor.ShellExecutorImpl: java.lang.String binderKey>;

        $r4 = staticinvoke <androidx.test.services.shellexecutor.ShellCommandClient: java.io.InputStream execOnServer(android.content.Context,java.lang.String,java.lang.String,java.util.List,java.util.Map,boolean,long)>($r2, $r3, $r5, $r6, $r1, $z0, $l0);

        return $r4;
    }

    public java.lang.String executeShellCommandSync(java.lang.String, java.util.List, java.util.Map, boolean) throws java.io.IOException
    {
        androidx.test.services.shellexecutor.ShellExecutorImpl $r0;
        java.util.List $r1;
        java.util.Map $r2;
        boolean $z0;
        java.lang.String $r3;

        $r0 := @this: androidx.test.services.shellexecutor.ShellExecutorImpl;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.util.Map;

        $z0 := @parameter3: boolean;

        $r3 = virtualinvoke $r0.<androidx.test.services.shellexecutor.ShellExecutorImpl: java.lang.String executeShellCommandSync(java.lang.String,java.util.List,java.util.Map,boolean,long)>($r3, $r1, $r2, $z0, 0L);

        return $r3;
    }

    public java.lang.String executeShellCommandSync(java.lang.String, java.util.List, java.util.Map, boolean, long) throws java.io.IOException
    {
        androidx.test.services.shellexecutor.ShellExecutorImpl $r0;
        java.util.Map $r1;
        boolean $z0;
        long $l0;
        android.content.Context $r2;
        java.lang.String $r3, $r4;
        java.util.List $r5;

        $r0 := @this: androidx.test.services.shellexecutor.ShellExecutorImpl;

        $r4 := @parameter0: java.lang.String;

        $r5 := @parameter1: java.util.List;

        $r1 := @parameter2: java.util.Map;

        $z0 := @parameter3: boolean;

        $l0 := @parameter4: long;

        $r2 = $r0.<androidx.test.services.shellexecutor.ShellExecutorImpl: android.content.Context context>;

        $r3 = $r0.<androidx.test.services.shellexecutor.ShellExecutorImpl: java.lang.String binderKey>;

        $r4 = staticinvoke <androidx.test.services.shellexecutor.ShellCommandClient: java.lang.String execOnServerSync(android.content.Context,java.lang.String,java.lang.String,java.util.List,java.util.Map,boolean,long)>($r2, $r3, $r4, $r5, $r1, $z0, $l0);

        return $r4;
    }

