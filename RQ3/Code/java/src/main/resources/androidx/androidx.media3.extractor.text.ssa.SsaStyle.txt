androidx.media3.extractor.text.ssa.SsaStyle
<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.String TAG>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_UNKNOWN>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_BOTTOM_LEFT>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_BOTTOM_CENTER>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_BOTTOM_RIGHT>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_MIDDLE_LEFT>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_MIDDLE_CENTER>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_MIDDLE_RIGHT>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_TOP_LEFT>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_TOP_CENTER>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_ALIGNMENT_TOP_RIGHT>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_BORDER_STYLE_UNKNOWN>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_BORDER_STYLE_OUTLINE>
<androidx.media3.extractor.text.ssa.SsaStyle: int SSA_BORDER_STYLE_BOX>
<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.String name>
<androidx.media3.extractor.text.ssa.SsaStyle: int alignment>
<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer primaryColor>
<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer outlineColor>
<androidx.media3.extractor.text.ssa.SsaStyle: float fontSize>
<androidx.media3.extractor.text.ssa.SsaStyle: boolean bold>
<androidx.media3.extractor.text.ssa.SsaStyle: boolean italic>
<androidx.media3.extractor.text.ssa.SsaStyle: boolean underline>
<androidx.media3.extractor.text.ssa.SsaStyle: boolean strikeout>
<androidx.media3.extractor.text.ssa.SsaStyle: int borderStyle>
    private void <init>(java.lang.String, int, java.lang.Integer, java.lang.Integer, float, boolean, boolean, boolean, boolean, int)
    {
        androidx.media3.extractor.text.ssa.SsaStyle r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.Integer r2, r3;
        float f0;
        boolean z0, z1, z2, z3;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaStyle;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Integer;

        r3 := @parameter3: java.lang.Integer;

        f0 := @parameter4: float;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        i1 := @parameter9: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.String name> = r1;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: int alignment> = i0;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer primaryColor> = r2;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer outlineColor> = r3;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: float fontSize> = f0;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: boolean bold> = z0;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: boolean italic> = z1;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: boolean underline> = z2;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: boolean strikeout> = z3;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle: int borderStyle> = i1;

        return;
    }

    public static androidx.media3.extractor.text.ssa.SsaStyle fromStyleLine(java.lang.String, androidx.media3.extractor.text.ssa.SsaStyle$Format)
    {
        java.lang.String r0, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r16, $r22, $r24, $r41, $r42, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70;
        androidx.media3.extractor.text.ssa.SsaStyle$Format r1;
        java.lang.String[] r2;
        java.lang.Throwable r3, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        float $f0, $f16;
        java.lang.Integer $r7, $r10, $r14, $r15, $r40, $r58;
        java.lang.Object[] $r13;
        java.lang.StringBuilder $r18, $r19, $r20, $r21;
        androidx.media3.extractor.text.ssa.SsaStyle $r23;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.extractor.text.ssa.SsaStyle$Format;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("Style:");

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $r4 = "Style:";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        r2 = staticinvoke <android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>($r5, ",");

        $i2 = lengthof r2;

        $i1 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int length>;

        if $i2 == $i1 goto label01;

        $r13 = newarray (java.lang.Object)[3];

        $i9 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int length>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r13[0] = $r14;

        $i10 = lengthof r2;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r13[1] = $r15;

        $r13[2] = r0;

        $r16 = staticinvoke <androidx.media3.common.util.Util: java.lang.String formatInvariant(java.lang.String,java.lang.Object[])>("Skipping malformed \'Style:\' line (expected %s values, found %s): \'%s\'", $r13);

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaStyle", $r16);

        return null;

     label01:
        $r23 = new androidx.media3.extractor.text.ssa.SsaStyle;

        $i3 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int nameIndex>;

        $r6 = r2[$i3];

        $r24 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i4 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int alignmentIndex>;

        if $i4 == -1 goto label02;

        $i7 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int alignmentIndex>;

        $r11 = r2[$i7];

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $i8 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: int parseAlignment(java.lang.String)>($r12);

        $i26 = $i8;

        goto label03;

     label02:
        $i26 = -1;

     label03:
        $i5 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int primaryColorIndex>;

        if $i5 == -1 goto label04;

        $i6 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int primaryColorIndex>;

        $r8 = r2[$i6];

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer parseColor(java.lang.String)>($r9);

        $r40 = $r10;

        goto label05;

     label04:
        $r40 = null;

     label05:
        $i27 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int outlineColorIndex>;

        if $i27 == -1 goto label06;

        $i28 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int outlineColorIndex>;

        $r41 = r2[$i28];

        $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String trim()>();

        $r7 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: java.lang.Integer parseColor(java.lang.String)>($r42);

        $r58 = $r7;

        goto label07;

     label06:
        $r58 = null;

     label07:
        $i29 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int fontSizeIndex>;

        if $i29 == -1 goto label08;

        $i30 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int fontSizeIndex>;

        $r59 = r2[$i30];

        $r60 = virtualinvoke $r59.<java.lang.String: java.lang.String trim()>();

        $f0 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: float parseFontSize(java.lang.String)>($r60);

        $f16 = $f0;

        goto label09;

     label08:
        $f16 = -3.4028235E38F;

     label09:
        $i31 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int boldIndex>;

        if $i31 == -1 goto label10;

        $i32 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int boldIndex>;

        $r61 = r2[$i32];

        $r62 = virtualinvoke $r61.<java.lang.String: java.lang.String trim()>();

        $z1 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: boolean parseBooleanValue(java.lang.String)>($r62);

        if $z1 == 0 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        $i33 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int italicIndex>;

        if $i33 == -1 goto label12;

        $i34 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int italicIndex>;

        $r63 = r2[$i34];

        $r64 = virtualinvoke $r63.<java.lang.String: java.lang.String trim()>();

        $z3 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: boolean parseBooleanValue(java.lang.String)>($r64);

        if $z3 == 0 goto label12;

        $z4 = 1;

        goto label13;

     label12:
        $z4 = 0;

     label13:
        $i35 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int underlineIndex>;

        if $i35 == -1 goto label14;

        $i36 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int underlineIndex>;

        $r65 = r2[$i36];

        $r66 = virtualinvoke $r65.<java.lang.String: java.lang.String trim()>();

        $z5 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: boolean parseBooleanValue(java.lang.String)>($r66);

        if $z5 == 0 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        $i37 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int strikeoutIndex>;

        if $i37 == -1 goto label16;

        $i38 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int strikeoutIndex>;

        $r67 = r2[$i38];

        $r68 = virtualinvoke $r67.<java.lang.String: java.lang.String trim()>();

        $z7 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: boolean parseBooleanValue(java.lang.String)>($r68);

        if $z7 == 0 goto label16;

        $z8 = 1;

        goto label17;

     label16:
        $z8 = 0;

     label17:
        $i39 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int borderStyleIndex>;

        if $i39 == -1 goto label18;

        $i40 = r1.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int borderStyleIndex>;

        $r69 = r2[$i40];

        $r70 = virtualinvoke $r69.<java.lang.String: java.lang.String trim()>();

        $i41 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: int parseBorderStyle(java.lang.String)>($r70);

        goto label19;

     label18:
        $i41 = -1;

     label19:
        specialinvoke $r23.<androidx.media3.extractor.text.ssa.SsaStyle: void <init>(java.lang.String,int,java.lang.Integer,java.lang.Integer,float,boolean,boolean,boolean,boolean,int)>($r24, $i26, $r40, $r58, $f16, $z2, $z4, $z6, $z8, $i41);

     label20:
        return $r23;

     label21:
        $r17 := @caughtexception;

        r3 = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping malformed \'Style:\' line: \'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("SsaStyle", $r22, r3);

        return null;

        catch java.lang.RuntimeException from label01 to label20 with label21;
    }

    private static int parseAlignment(java.lang.String)
    {
        java.lang.String r0, $r1, $r5;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.Throwable $r6, r7;
        int i0;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $z0 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: boolean isValidAlignment(int)>(i0);

        if $z0 == 0 goto label3;

     label2:
        return i0;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r7 = $r6;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unknown alignment: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaStyle", $r5);

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    private static boolean isValidAlignment(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label2;
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label1;
            case 9: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    private static int parseBorderStyle(java.lang.String)
    {
        java.lang.String r0, $r1, $r5;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.Throwable $r6, r7;
        int i0;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $z0 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: boolean isValidBorderStyle(int)>(i0);

        if $z0 == 0 goto label3;

     label2:
        return i0;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r7 = $r6;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unknown BorderStyle: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SsaStyle", $r5);

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    private static boolean isValidBorderStyle(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label2;
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public static java.lang.Integer parseColor(java.lang.String)
    {
        java.lang.String r0, $r2, $r8;
        long l0, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l14;
        int i1, i2, i3, $i13, i15;
        boolean $z0, $z1;
        byte $b4;
        java.lang.Integer $r1;
        java.lang.Throwable $r3, r9;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("&H");

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

        $l14 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r2, 16);

        goto label3;

     label2:
        $l14 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

     label3:
        l0 = $l14;

        $b4 = l0 cmp 4294967295L;

        if $b4 > 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        r9 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse color expression: \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("SsaStyle", $r8, r9);

        return null;

     label8:
        $l5 = l0 >> 24;

        $l6 = $l5 & 255L;

        $l7 = $l6 ^ 255L;

        i15 = staticinvoke <com.google.common.primitives.Ints: int checkedCast(long)>($l7);

        $l8 = l0 >> 16;

        $l9 = $l8 & 255L;

        i1 = staticinvoke <com.google.common.primitives.Ints: int checkedCast(long)>($l9);

        $l10 = l0 >> 8;

        $l11 = $l10 & 255L;

        i2 = staticinvoke <com.google.common.primitives.Ints: int checkedCast(long)>($l11);

        $l12 = l0 & 255L;

        i3 = staticinvoke <com.google.common.primitives.Ints: int checkedCast(long)>($l12);

        $i13 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(i15, i3, i2, i1);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        return $r1;

        catch java.lang.IllegalArgumentException from label1 to label6 with label7;
    }

    private static float parseFontSize(java.lang.String)
    {
        java.lang.String r0, $r7;
        java.lang.Throwable r1, $r2;
        float $f0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r0);

     label2:
        return $f0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse font size: \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("SsaStyle", $r7, r1);

        return -3.4028235E38F;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static boolean parseBooleanValue(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.Throwable $r1, r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        int i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        if i0 == 1 goto label2;

        if i0 != -1 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;

     label5:
        $r1 := @caughtexception;

        r7 = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse boolean value: \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("SsaStyle", $r6, r7);

        return 0;

        catch java.lang.NumberFormatException from label1 to label4 with label5;
    }

    static int access$000(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: int parseAlignment(java.lang.String)>(r0);

        return $i0;
    }

androidx.media3.extractor.text.ssa.SsaStyle$Format
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int nameIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int alignmentIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int primaryColorIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int outlineColorIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int fontSizeIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int boldIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int italicIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int underlineIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int strikeoutIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int borderStyleIndex>
<androidx.media3.extractor.text.ssa.SsaStyle$Format: int length>
    private void <init>(int, int, int, int, int, int, int, int, int, int, int)
    {
        androidx.media3.extractor.text.ssa.SsaStyle$Format r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaStyle$Format;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int nameIndex> = i0;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int alignmentIndex> = i1;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int primaryColorIndex> = i2;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int outlineColorIndex> = i3;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int fontSizeIndex> = i4;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int boldIndex> = i5;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int italicIndex> = i6;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int underlineIndex> = i7;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int strikeoutIndex> = i8;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int borderStyleIndex> = i9;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Format: int length> = i10;

        return;
    }

    public static androidx.media3.extractor.text.ssa.SsaStyle$Format fromFormatLine(java.lang.String)
    {
        java.lang.String r0, r2, $r3, $r4, $r5, $r6;
        java.lang.String[] r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        byte b15;
        androidx.media3.extractor.text.ssa.SsaStyle$Format $r7;

        r0 := @parameter0: java.lang.String;

        i4 = -1;

        i5 = -1;

        i6 = -1;

        i7 = -1;

        i8 = -1;

        i9 = -1;

        i10 = -1;

        i11 = -1;

        i12 = -1;

        i13 = -1;

        $r3 = "Format:";

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        r1 = staticinvoke <android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>($r4, ",");

        i14 = 0;

     label01:
        $i1 = lengthof r1;

        if i14 >= $i1 goto label24;

        $r5 = r1[i14];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        r2 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>($r6);

        b15 = -1;

        $i3 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -1178781136: goto label08;
            case -1026963764: goto label09;
            case -192095652: goto label10;
            case -70925746: goto label04;
            case 3029637: goto label07;
            case 3373707: goto label02;
            case 366554320: goto label06;
            case 767321349: goto label11;
            case 1767875043: goto label03;
            case 1988365454: goto label05;
            default: goto label12;
        };

     label02:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("name");

        if $z4 == 0 goto label12;

        b15 = 0;

        goto label12;

     label03:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("alignment");

        if $z1 == 0 goto label12;

        b15 = 1;

        goto label12;

     label04:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("primarycolour");

        if $z6 == 0 goto label12;

        b15 = 2;

        goto label12;

     label05:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("outlinecolour");

        if $z0 == 0 goto label12;

        b15 = 3;

        goto label12;

     label06:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("fontsize");

        if $z3 == 0 goto label12;

        b15 = 4;

        goto label12;

     label07:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("bold");

        if $z5 == 0 goto label12;

        b15 = 5;

        goto label12;

     label08:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("italic");

        if $z9 == 0 goto label12;

        b15 = 6;

        goto label12;

     label09:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("underline");

        if $z8 == 0 goto label12;

        b15 = 7;

        goto label12;

     label10:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("strikeout");

        if $z7 == 0 goto label12;

        b15 = 8;

        goto label12;

     label11:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("borderstyle");

        if $z2 == 0 goto label12;

        b15 = 9;

     label12:
        tableswitch(b15)
        {
            case 0: goto label13;
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label16;
            case 4: goto label17;
            case 5: goto label18;
            case 6: goto label19;
            case 7: goto label20;
            case 8: goto label21;
            case 9: goto label22;
            default: goto label23;
        };

     label13:
        i4 = i14;

        goto label23;

     label14:
        i5 = i14;

        goto label23;

     label15:
        i6 = i14;

        goto label23;

     label16:
        i7 = i14;

        goto label23;

     label17:
        i8 = i14;

        goto label23;

     label18:
        i9 = i14;

        goto label23;

     label19:
        i10 = i14;

        goto label23;

     label20:
        i11 = i14;

        goto label23;

     label21:
        i12 = i14;

        goto label23;

     label22:
        i13 = i14;

     label23:
        i14 = i14 + 1;

        goto label01;

     label24:
        if i4 == -1 goto label25;

        $r7 = new androidx.media3.extractor.text.ssa.SsaStyle$Format;

        $i2 = lengthof r1;

        specialinvoke $r7.<androidx.media3.extractor.text.ssa.SsaStyle$Format: void <init>(int,int,int,int,int,int,int,int,int,int,int)>(i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i2);

        goto label26;

     label25:
        $r7 = null;

     label26:
        return $r7;
    }

androidx.media3.extractor.text.ssa.SsaStyle$Overrides
<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.lang.String TAG>
<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern BRACES_PATTERN>
<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.lang.String PADDED_DECIMAL_PATTERN>
<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern POSITION_PATTERN>
<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern MOVE_PATTERN>
<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern ALIGNMENT_OVERRIDE_PATTERN>
<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: int alignment>
<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: android.graphics.PointF position>
    private void <init>(int, android.graphics.PointF)
    {
        androidx.media3.extractor.text.ssa.SsaStyle$Overrides r0;
        int i0;
        android.graphics.PointF r1;

        r0 := @this: androidx.media3.extractor.text.ssa.SsaStyle$Overrides;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PointF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: int alignment> = i0;

        r0.<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: android.graphics.PointF position> = r1;

        return;
    }

    public static androidx.media3.extractor.text.ssa.SsaStyle$Overrides parseFromDialogue(java.lang.String)
    {
        java.lang.String r0, r2, $r5;
        java.util.regex.Matcher r1;
        java.util.regex.Pattern $r3;
        boolean $z0;
        androidx.media3.extractor.text.ssa.SsaStyle$Overrides $r4;
        java.lang.Object $r6;
        java.lang.Throwable $r7, $r8, r11, r12;
        int i0, i1;
        android.graphics.PointF r9, r10;

        r0 := @parameter0: java.lang.String;

        i0 = -1;

        r9 = null;

        $r3 = <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern BRACES_PATTERN>;

        r1 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label1:
        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label9;

        $r5 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r2 = (java.lang.String) $r6;

     label2:
        r10 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: android.graphics.PointF parsePosition(java.lang.String)>(r2);

        if r10 == null goto label3;

        r9 = r10;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r11 = $r8;

     label5:
        i1 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: int parseAlignmentOverride(java.lang.String)>(r2);

        if i1 == -1 goto label6;

        i0 = i1;

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        r12 = $r7;

     label8:
        goto label1;

     label9:
        $r4 = new androidx.media3.extractor.text.ssa.SsaStyle$Overrides;

        specialinvoke $r4.<androidx.media3.extractor.text.ssa.SsaStyle$Overrides: void <init>(int,android.graphics.PointF)>(i0, r9);

        return $r4;

        catch java.lang.RuntimeException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public static java.lang.String stripStyleOverrides(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern BRACES_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        return $r3;
    }

    private static android.graphics.PointF parsePosition(java.lang.String)
    {
        java.lang.String r0, $r7, $r8, $r10, $r11, $r16, r17, r18;
        java.util.regex.Matcher r1, r2;
        boolean z0, z1;
        java.util.regex.Pattern $r3, $r4;
        android.graphics.PointF $r5;
        java.lang.Object $r6, $r9;
        float $f0, $f1;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;

        r0 := @parameter0: java.lang.String;

        $r3 = <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern POSITION_PATTERN>;

        r1 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r4 = <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern MOVE_PATTERN>;

        r2 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if z0 == 0 goto label2;

        if z1 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Override has both \\pos(x,y) and \\move(x1,y1,x2,y2); using \\pos values. override=\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("SsaStyle.Overrides", $r16);

     label1:
        r17 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r18 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        goto label4;

     label2:
        if z1 == 0 goto label3;

        r17 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r18 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        goto label4;

     label3:
        return null;

     label4:
        $r5 = new android.graphics.PointF;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r17);

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r8);

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r18);

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r11);

        specialinvoke $r5.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        return $r5;
    }

    private static int parseAlignmentOverride(java.lang.String)
    {
        java.lang.String r0, $r3, $r5;
        java.util.regex.Matcher r1;
        java.util.regex.Pattern $r2;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r2 = <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern ALIGNMENT_OVERRIDE_PATTERN>;

        r1 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        $i0 = staticinvoke <androidx.media3.extractor.text.ssa.SsaStyle: int access$000(java.lang.String)>($r5);

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r3, $r6, $r7;
        java.lang.Object[] $r1, $r4;
        java.lang.String $r2, $r5;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\{([^}]*)\\}");

        <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern BRACES_PATTERN> = $r0;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "\\s*\\d+(?:\\.\\d+)?\\s*";

        $r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.String formatInvariant(java.lang.String,java.lang.Object[])>("\\\\pos\\((%1$s),(%1$s)\\)", $r1);

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r2);

        <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern POSITION_PATTERN> = $r3;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "\\s*\\d+(?:\\.\\d+)?\\s*";

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.String formatInvariant(java.lang.String,java.lang.Object[])>("\\\\move\\(%1$s,%1$s,(%1$s),(%1$s)(?:,%1$s,%1$s)?\\)", $r4);

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern MOVE_PATTERN> = $r6;

        $r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\\\an(\\d+)");

        <androidx.media3.extractor.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern ALIGNMENT_OVERRIDE_PATTERN> = $r7;

        return;
    }

androidx.media3.extractor.text.ssa.SsaStyle$SsaAlignment
androidx.media3.extractor.text.ssa.SsaStyle$SsaBorderStyle
