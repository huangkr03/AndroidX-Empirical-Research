androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration
<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: androidx.health.connect.client.aggregate.AggregationResult result>
<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.Instant startTime>
<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.Instant endTime>
<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.ZoneOffset zoneOffset>
    public void <init>(androidx.health.connect.client.aggregate.AggregationResult, java.time.Instant, java.time.Instant, java.time.ZoneOffset)
    {
        androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration r0;
        androidx.health.connect.client.aggregate.AggregationResult r1;
        java.time.Instant r2, r3, $r5, $r6;
        java.time.ZoneOffset r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r9;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration;

        r1 := @parameter0: androidx.health.connect.client.aggregate.AggregationResult;

        r2 := @parameter1: java.time.Instant;

        r3 := @parameter2: java.time.Instant;

        r4 := @parameter3: java.time.ZoneOffset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "result");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "startTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "endTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "zoneOffset");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: androidx.health.connect.client.aggregate.AggregationResult result> = r1;

        r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.Instant startTime> = r2;

        r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.Instant endTime> = r3;

        r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.ZoneOffset zoneOffset> = r4;

        $r6 = r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.Instant startTime>;

        $r5 = r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.Instant endTime>;

        $z0 = virtualinvoke $r6.<java.time.Instant: boolean isBefore(java.time.Instant)>($r5);

        if $z0 != 0 goto label1;

        $r9 = "start time must be before end time";

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label1:
        return;
    }

    public final androidx.health.connect.client.aggregate.AggregationResult getResult()
    {
        androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration r0;
        androidx.health.connect.client.aggregate.AggregationResult $r1;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration;

        $r1 = r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: androidx.health.connect.client.aggregate.AggregationResult result>;

        return $r1;
    }

    public final java.time.Instant getStartTime()
    {
        androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration;

        $r1 = r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.Instant startTime>;

        return $r1;
    }

    public final java.time.Instant getEndTime()
    {
        androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration;

        $r1 = r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.Instant endTime>;

        return $r1;
    }

    public final java.time.ZoneOffset getZoneOffset()
    {
        androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration;

        $r1 = r0.<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration: java.time.ZoneOffset zoneOffset>;

        return $r1;
    }

