com.google.common.base.Preconditions
    private static java.lang.String badElementIndex(int, int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        if $i0 >= 0 goto label1;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = $r0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r2;

        $r0 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>("%s (%s) must not be negative", $r1);

        return $r0;

     label1:
        if $i1 < 0 goto label2;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = $r0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r2;

        $r0 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>("%s (%s) must be less than size (%s)", $r1);

        return $r0;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("negative size: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r3;
    }

    private static java.lang.String badPositionIndex(int, int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        if $i0 >= 0 goto label1;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = $r0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r2;

        $r0 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>("%s (%s) must not be negative", $r1);

        return $r0;

     label1:
        if $i1 < 0 goto label2;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = $r0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r2;

        $r0 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>("%s (%s) must not be greater than size (%s)", $r1);

        return $r0;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("negative size: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r3;
    }

    private static java.lang.String badPositionIndexes(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.Object[] $r0;
        java.lang.Integer $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i0 < 0 goto label4;

        if $i0 <= $i2 goto label1;

        goto label4;

     label1:
        if $i1 < 0 goto label3;

        if $i1 <= $i2 goto label2;

        goto label3;

     label2:
        $r0 = newarray (java.lang.Object)[2];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[0] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[1] = $r1;

        $r2 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>("end index (%s) must not be less than start index (%s)", $r0);

        return $r2;

     label3:
        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)>($i1, $i2, "end index");

        return $r2;

     label4:
        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)>($i0, $i2, "start index");

        return $r2;
    }

    public static void checkArgument(boolean)
    {
        boolean $z0;
        java.lang.IllegalArgumentException $r0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;
    }

    public static void checkArgument(boolean, java.lang.Object)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static void checkArgument(boolean, java.lang.String, char)
    {
        boolean $z0;
        java.lang.String $r0;
        char $c0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object[] $r2;
        java.lang.Character $r3;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        $c0 := @parameter2: char;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r2[0] = $r3;

        $r0 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r0, $r2);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    public static void checkArgument(boolean, java.lang.String, char, java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        java.lang.String $r1;
        char $c0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.lang.Character $r4;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $c0 := @parameter2: char;

        $r0 := @parameter3: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r3[0] = $r4;

        $r3[1] = $r0;

        $r1 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r1, $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static void checkArgument(boolean, java.lang.String, int)
    {
        boolean $z0;
        java.lang.String $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r0 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r0, $r2);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    public static void checkArgument(boolean, java.lang.String, long)
    {
        boolean $z0;
        java.lang.String $r0;
        long $l0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object[] $r2;
        java.lang.Long $r3;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2[0] = $r3;

        $r0 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r0, $r2);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    public static void checkArgument(boolean, java.lang.String, java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r0;

        $r1 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r1, $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static void checkArgument(boolean, java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r2;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Object;

        $r0 := @parameter3: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r2;

        $r4[1] = $r0;

        $r1 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r1, $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public static int checkElementIndex(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.common.base.Preconditions: int checkElementIndex(int,int,java.lang.String)>($i1, $i0, "index");

        return $i1;
    }

    public static int checkElementIndex(int, int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;
        java.lang.IndexOutOfBoundsException $r1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        if $i1 < 0 goto label1;

        if $i1 >= $i0 goto label1;

        return $i1;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r0 = staticinvoke <com.google.common.base.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)>($i1, $i0, $r0);

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    public static java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.NullPointerException $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        return $r0;

     label1:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();

        throw $r1;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.Object)
    {
        java.lang.String $r0;
        java.lang.Object $r1, $r2;
        java.lang.NullPointerException $r3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r3 = new java.lang.NullPointerException;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r0);

        throw $r3;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.String, java.lang.Object)
    {
        java.lang.Object $r0, $r2;
        java.lang.String $r1;
        java.lang.NullPointerException $r3;
        java.lang.Object[] $r4;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Object;

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new java.lang.NullPointerException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r0;

        $r1 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r1, $r4);

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public static int checkPositionIndex(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.common.base.Preconditions: int checkPositionIndex(int,int,java.lang.String)>($i1, $i0, "index");

        return $i1;
    }

    public static int checkPositionIndex(int, int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;
        java.lang.IndexOutOfBoundsException $r1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        if $i1 < 0 goto label1;

        if $i1 > $i0 goto label1;

        return $i1;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r0 = staticinvoke <com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)>($i1, $i0, $r0);

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    public static void checkPositionIndexes(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.String $r1;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i2 < 0 goto label1;

        if $i0 < $i2 goto label1;

        if $i0 > $i1 goto label1;

        return;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.String badPositionIndexes(int,int,int)>($i2, $i0, $i1);

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

    public static void checkState(boolean)
    {
        boolean $z0;
        java.lang.IllegalStateException $r0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>()>();

        throw $r0;
    }

    public static void checkState(boolean, java.lang.Object)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static void checkState(boolean, java.lang.String, int)
    {
        boolean $z0;
        java.lang.String $r0;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r0 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r0, $r2);

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    public static void checkState(boolean, java.lang.String, java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.Object[] $r3;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r0;

        $r1 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>($r1, $r3);

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

