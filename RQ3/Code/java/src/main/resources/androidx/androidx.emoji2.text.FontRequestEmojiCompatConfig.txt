androidx.emoji2.text.FontRequestEmojiCompatConfig
<androidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper DEFAULT_FONTS_CONTRACT>
    public void <init>(android.content.Context, androidx.core.provider.FontRequest)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig r0;
        android.content.Context r1;
        androidx.core.provider.FontRequest r2;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r3;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper $r4;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.core.provider.FontRequest;

        $r3 = new androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        $r4 = <androidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper DEFAULT_FONTS_CONTRACT>;

        specialinvoke $r3.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper)>(r1, r2, $r4);

        specialinvoke r0.<androidx.emoji2.text.EmojiCompat$Config: void <init>(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader)>($r3);

        return;
    }

    public void <init>(android.content.Context, androidx.core.provider.FontRequest, androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig r0;
        android.content.Context r1;
        androidx.core.provider.FontRequest r2;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper r3;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r4;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.core.provider.FontRequest;

        r3 := @parameter2: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper;

        $r4 = new androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        specialinvoke $r4.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper)>(r1, r2, r3);

        specialinvoke r0.<androidx.emoji2.text.EmojiCompat$Config: void <init>(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader)>($r4);

        return;
    }

    public androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig r0;
        java.util.concurrent.Executor r1;
        androidx.emoji2.text.EmojiCompat$MetadataRepoLoader $r2;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r3;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig;

        r1 := @parameter0: java.util.concurrent.Executor;

        $r2 = virtualinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader()>();

        $r3 = (androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) $r2;

        virtualinvoke $r3.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void setExecutor(java.util.concurrent.Executor)>(r1);

        return r0;
    }

    public androidx.emoji2.text.FontRequestEmojiCompatConfig setHandler(android.os.Handler)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig r0;
        android.os.Handler r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig;

        r1 := @parameter0: android.os.Handler;

        if r1 != null goto label1;

        return r0;

     label1:
        $r2 = staticinvoke <androidx.emoji2.text.ConcurrencyHelpers: java.util.concurrent.Executor convertHandlerToExecutor(android.os.Handler)>(r1);

        virtualinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor)>($r2);

        return r0;
    }

    public androidx.emoji2.text.FontRequestEmojiCompatConfig setRetryPolicy(androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig r0;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy r1;
        androidx.emoji2.text.EmojiCompat$MetadataRepoLoader $r2;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r3;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig;

        r1 := @parameter0: androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy;

        $r2 = virtualinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader()>();

        $r3 = (androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) $r2;

        virtualinvoke $r3.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void setRetryPolicy(androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy)>(r1);

        return r0;
    }

    static void <clinit>()
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper $r0;

        $r0 = new androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper;

        specialinvoke $r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: void <init>()>();

        <androidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper DEFAULT_FONTS_CONTRACT> = $r0;

        return;
    }

androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy
<androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mTotalMs>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mRetryOrigin>
    public void <init>(long)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy r0;
        long l0;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy: void <init>()>();

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mTotalMs> = l0;

        return;
    }

    public long getRetryDelay()
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy r0;
        long l0, $l1, $l3, $l4, $l5, $l7, $l8, $l9, $l10, $l11;
        byte $b2, $b6;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy;

        $l1 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mRetryOrigin>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mRetryOrigin> = $l11;

        return 0L;

     label1:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mRetryOrigin>;

        l0 = $l3 - $l4;

        $l5 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mTotalMs>;

        $b6 = l0 cmp $l5;

        if $b6 <= 0 goto label2;

        return -1L;

     label2:
        $l7 = staticinvoke <java.lang.Math: long max(long,long)>(l0, 1000L);

        $l8 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mTotalMs>;

        $l9 = $l8 - l0;

        $l10 = staticinvoke <java.lang.Math: long min(long,long)>($l7, $l9);

        return $l10;
    }

androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper
    public void <init>()
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper r0;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context, androidx.core.provider.FontRequest) throws android.content.pm.PackageManager$NameNotFoundException
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper r0;
        android.content.Context r1;
        androidx.core.provider.FontRequest r2;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r3;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.core.provider.FontRequest;

        $r3 = staticinvoke <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)>(r1, null, r2);

        return $r3;
    }

    public android.graphics.Typeface buildTypeface(android.content.Context, androidx.core.provider.FontsContractCompat$FontInfo) throws android.content.pm.PackageManager$NameNotFoundException
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper r0;
        android.content.Context r1;
        androidx.core.provider.FontsContractCompat$FontInfo r2;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r3;
        android.graphics.Typeface $r4;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.core.provider.FontsContractCompat$FontInfo;

        $r3 = newarray (androidx.core.provider.FontsContractCompat$FontInfo)[1];

        $r3[0] = r2;

        $r4 = staticinvoke <androidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])>(r1, null, $r3);

        return $r4;
    }

    public void registerObserver(android.content.Context, android.net.Uri, android.database.ContentObserver)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper r0;
        android.content.Context r1;
        android.net.Uri r2;
        android.database.ContentObserver r3;
        android.content.ContentResolver $r4;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.database.ContentObserver;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r4.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r2, 0, r3);

        return;
    }

    public void unregisterObserver(android.content.Context, android.database.ContentObserver)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper r0;
        android.content.Context r1;
        android.database.ContentObserver r2;
        android.content.ContentResolver $r3;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.database.ContentObserver;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r3.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r2);

        return;
    }

androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>
    void <init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader, android.os.Handler)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1 r0;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r1;
        android.os.Handler r2;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1;

        r1 := @parameter0: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r2 := @parameter1: android.os.Handler;

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        return;
    }

    public void onChange(boolean, android.net.Uri)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1 r0;
        boolean z0;
        android.net.Uri r1;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r2;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        $r2 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>;

        virtualinvoke $r2.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void loadInternal()>();

        return;
    }

androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.String S_TRACE_BUILD_TYPEFACE>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontRequest mRequest>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mMainHandler>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.Executor mExecutor>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.ThreadPoolExecutor mMyThreadPoolExecutor>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy mRetryPolicy>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>
<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mMainHandlerLoadCallback>
    void <init>(android.content.Context, androidx.core.provider.FontRequest, androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        android.content.Context r1, $r7;
        androidx.core.provider.FontRequest r2;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper r3;
        java.lang.Object $r4;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.core.provider.FontRequest;

        r3 := @parameter2: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock> = $r4;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Context cannot be null");

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "FontRequest cannot be null");

        $r7 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext> = $r7;

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontRequest mRequest> = r2;

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper> = r3;

        return;
    }

    public void setExecutor(java.util.concurrent.Executor)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        java.util.concurrent.Executor r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: java.util.concurrent.Executor;

        $r3 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.Executor mExecutor> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public void setRetryPolicy(androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy;

        $r3 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy mRetryPolicy> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback r1;
        java.lang.Object r2, $r4;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "LoaderCallback cannot be null");

        $r4 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        virtualinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void loadInternal()>();

        return;
    }

    void loadInternal()
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r10;
        androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback $r4;
        java.util.concurrent.Executor $r5, $r6;
        java.lang.Runnable $r7;
        java.util.concurrent.ThreadPoolExecutor $r8, $r9;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        $r3 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        if $r4 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.Executor mExecutor>;

        if $r5 != null goto label4;

        $r8 = staticinvoke <androidx.emoji2.text.ConcurrencyHelpers: java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String)>("emojiCompat");

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.ThreadPoolExecutor mMyThreadPoolExecutor> = $r8;

        $r9 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.ThreadPoolExecutor mMyThreadPoolExecutor>;

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.Executor mExecutor> = $r9;

     label4:
        $r6 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.Executor mExecutor>;

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo()
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        androidx.core.provider.FontsContractCompat$FontFamilyResult r1;
        androidx.core.provider.FontRequest $r2;
        android.content.Context $r3;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper $r4;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r5, $r7, $r14;
        androidx.core.provider.FontsContractCompat$FontInfo $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        java.lang.Throwable $r13, r15;
        androidx.core.provider.FontsContractCompat$FontInfo[] r16;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

     label1:
        $r4 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>;

        $r3 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        $r2 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontRequest mRequest>;

        r1 = virtualinvoke $r4.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest)>($r3, $r2);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r15 = $r13;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("provider not found", r15);

        throw $r14;

     label4:
        $i0 = virtualinvoke r1.<androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        if $i0 == 0 goto label5;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetchFonts failed (");

        $i2 = virtualinvoke r1.<androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label5:
        r16 = virtualinvoke r1.<androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()>();

        if r16 == null goto label6;

        $i1 = lengthof r16;

        if $i1 != 0 goto label7;

     label6:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("fetchFonts failed (empty result)");

        throw $r5;

     label7:
        $r6 = r16[0];

        return $r6;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private void scheduleRetry(android.net.Uri, long)
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        android.net.Uri r1;
        long l0;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r13;
        android.database.ContentObserver $r5, $r10;
        java.lang.Runnable $r6, $r7, $r8;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1 $r9;
        android.content.Context $r11;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper $r12;
        android.os.Handler r14;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: android.net.Uri;

        l0 := @parameter1: long;

        $r4 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r14 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mMainHandler>;

        if r14 != null goto label2;

        r14 = staticinvoke <androidx.emoji2.text.ConcurrencyHelpers: android.os.Handler mainHandlerAsync()>();

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mMainHandler> = r14;

     label2:
        $r5 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>;

        if $r5 != null goto label3;

        $r9 = new androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1;

        specialinvoke $r9.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: void <init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader,android.os.Handler)>(r0, r14);

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver> = $r9;

        $r12 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>;

        $r11 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        $r10 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>;

        virtualinvoke $r12.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: void registerObserver(android.content.Context,android.net.Uri,android.database.ContentObserver)>($r11, r1, $r10);

     label3:
        $r6 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mMainHandlerLoadCallback>;

        if $r6 != null goto label4;

        $r8 = dynamicinvoke "run" <java.lang.Runnable (androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void loadInternal()>, methodtype: void __METHODTYPE__());

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mMainHandlerLoadCallback> = $r8;

     label4:
        $r7 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mMainHandlerLoadCallback>;

        virtualinvoke r14.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, l0);

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void cleanUp()
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r13;
        android.database.ContentObserver $r4, $r10;
        android.os.Handler $r5, $r9;
        java.util.concurrent.ThreadPoolExecutor $r6, $r7;
        java.lang.Runnable $r8;
        android.content.Context $r11;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper $r12;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        $r3 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback> = null;

        $r4 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>;

        if $r4 == null goto label2;

        $r12 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>;

        $r11 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        $r10 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>;

        virtualinvoke $r12.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: void unregisterObserver(android.content.Context,android.database.ContentObserver)>($r11, $r10);

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver> = null;

     label2:
        $r5 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mMainHandler>;

        if $r5 == null goto label3;

        $r9 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mMainHandler>;

        $r8 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mMainHandlerLoadCallback>;

        virtualinvoke $r9.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r8);

     label3:
        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mMainHandler> = null;

        $r6 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.ThreadPoolExecutor mMyThreadPoolExecutor>;

        if $r6 == null goto label4;

        $r7 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.ThreadPoolExecutor mMyThreadPoolExecutor>;

        virtualinvoke $r7.<java.util.concurrent.ThreadPoolExecutor: void shutdown()>();

     label4:
        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.Executor mExecutor> = null;

        r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.util.concurrent.ThreadPoolExecutor mMyThreadPoolExecutor> = null;

        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r2 = $r13;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void createMetadata()
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        java.nio.ByteBuffer r1;
        java.lang.Throwable r2, r3, r4, r5, $r26, $r30, $r31, $r32, $r33, r40;
        java.lang.Object $r6, $r13, $r22, $r27, r34, r36, r39, r41;
        androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback $r7, $r14, $r15, $r28, $r29;
        android.content.Context $r8, $r10;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper $r9;
        android.net.Uri $r11, $r25;
        java.lang.RuntimeException $r12, $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r20;
        java.lang.String $r21;
        androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy $r23, $r24;
        byte $b0;
        androidx.core.provider.FontsContractCompat$FontInfo r35;
        int i1;
        long l2;
        android.graphics.Typeface r37;
        androidx.emoji2.text.MetadataRepo r38;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        $r6 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r34 = $r6;

        entermonitor $r6;

        $r7 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        if $r7 != null goto label01;

        exitmonitor r34;

        return;

     label01:
        exitmonitor r34;

        goto label02;

     label02:
        r35 = specialinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo()>();

        i1 = virtualinvoke r35.<androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()>();

        if i1 != 2 goto label09;

        $r22 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r36 = $r22;

        entermonitor $r22;

     label03:
        $r23 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy mRetryPolicy>;

        if $r23 == null goto label05;

        $r24 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy mRetryPolicy>;

        l2 = virtualinvoke $r24.<androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy: long getRetryDelay()>();

        $b0 = l2 cmp 0L;

        if $b0 < 0 goto label05;

        $r25 = virtualinvoke r35.<androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        specialinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void scheduleRetry(android.net.Uri,long)>($r25, l2);

        exitmonitor r36;

     label04:
        return;

     label05:
        exitmonitor r36;

     label06:
        goto label09;

     label07:
        $r33 := @caughtexception;

        r2 = $r33;

        exitmonitor r36;

     label08:
        throw r2;

     label09:
        if i1 == 0 goto label10;

        $r16 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetchFonts result is not OK. (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label10:
        staticinvoke <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>("EmojiCompat.FontRequestEmojiCompatConfig.buildTypeface");

        $r9 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>;

        $r8 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        r37 = virtualinvoke $r9.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo)>($r8, r35);

        $r10 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        $r11 = virtualinvoke r35.<androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        r1 = staticinvoke <androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)>($r10, null, $r11);

        if r1 == null goto label11;

        if r37 != null goto label12;

     label11:
        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unable to open file.");

        throw $r12;

     label12:
        r38 = staticinvoke <androidx.emoji2.text.MetadataRepo: androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer)>(r37, r1);

     label13:
        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

        goto label16;

     label14:
        $r30 := @caughtexception;

        r3 = $r30;

     label15:
        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

        throw r3;

     label16:
        $r13 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r39 = $r13;

        entermonitor $r13;

     label17:
        $r14 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        if $r14 == null goto label18;

        $r15 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        virtualinvoke $r15.<androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback: void onLoaded(androidx.emoji2.text.MetadataRepo)>(r38);

     label18:
        exitmonitor r39;

     label19:
        goto label22;

     label20:
        $r31 := @caughtexception;

        r4 = $r31;

        exitmonitor r39;

     label21:
        throw r4;

     label22:
        specialinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void cleanUp()>();

     label23:
        goto label31;

     label24:
        $r26 := @caughtexception;

        r40 = $r26;

        $r27 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r41 = $r27;

        entermonitor $r27;

     label25:
        $r28 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        if $r28 == null goto label26;

        $r29 = r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        virtualinvoke $r29.<androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback: void onFailed(java.lang.Throwable)>(r40);

     label26:
        exitmonitor r41;

     label27:
        goto label30;

     label28:
        $r32 := @caughtexception;

        r5 = $r32;

        exitmonitor r41;

     label29:
        throw r5;

     label30:
        specialinvoke r0.<androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void cleanUp()>();

     label31:
        return;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label10 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label17 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Throwable from label02 to label04 with label24;
        catch java.lang.Throwable from label05 to label23 with label24;
        catch java.lang.Throwable from label25 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy
    public void <init>()
    {
        androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy r0;

        r0 := @this: androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy: long getRetryDelay()>
