androidx.activity.OnBackPressedCallback
<androidx.activity.OnBackPressedCallback: boolean mEnabled>
<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables>
<androidx.activity.OnBackPressedCallback: androidx.core.util.Consumer mEnabledConsumer>
    public void <init>(boolean)
    {
        androidx.activity.OnBackPressedCallback r0;
        boolean z0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: androidx.activity.OnBackPressedCallback;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables> = $r1;

        r0.<androidx.activity.OnBackPressedCallback: boolean mEnabled> = z0;

        return;
    }

    public final void setEnabled(boolean)
    {
        androidx.activity.OnBackPressedCallback r0;
        boolean z0, $z1;
        androidx.core.util.Consumer $r1, $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.activity.OnBackPressedCallback;

        z0 := @parameter0: boolean;

        r0.<androidx.activity.OnBackPressedCallback: boolean mEnabled> = z0;

        $r1 = r0.<androidx.activity.OnBackPressedCallback: androidx.core.util.Consumer mEnabledConsumer>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.activity.OnBackPressedCallback: androidx.core.util.Consumer mEnabledConsumer>;

        $z1 = r0.<androidx.activity.OnBackPressedCallback: boolean mEnabled>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        interfaceinvoke $r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r3);

     label1:
        return;
    }

    public final boolean isEnabled()
    {
        androidx.activity.OnBackPressedCallback r0;
        boolean $z0;

        r0 := @this: androidx.activity.OnBackPressedCallback;

        $z0 = r0.<androidx.activity.OnBackPressedCallback: boolean mEnabled>;

        return $z0;
    }

    public final void remove()
    {
        androidx.activity.OnBackPressedCallback r0;
        java.util.Iterator r1;
        androidx.activity.Cancellable r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: androidx.activity.OnBackPressedCallback;

        $r3 = r0.<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables>;

        r1 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.activity.Cancellable) $r4;

        interfaceinvoke r2.<androidx.activity.Cancellable: void cancel()>();

        goto label1;

     label2:
        return;
    }

<androidx.activity.OnBackPressedCallback: void handleOnBackPressed()>
    void addCancellable(androidx.activity.Cancellable)
    {
        androidx.activity.OnBackPressedCallback r0;
        androidx.activity.Cancellable r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.OnBackPressedCallback;

        r1 := @parameter0: androidx.activity.Cancellable;

        $r2 = r0.<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void removeCancellable(androidx.activity.Cancellable)
    {
        androidx.activity.OnBackPressedCallback r0;
        androidx.activity.Cancellable r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.OnBackPressedCallback;

        r1 := @parameter0: androidx.activity.Cancellable;

        $r2 = r0.<androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    void setIsEnabledConsumer(androidx.core.util.Consumer)
    {
        androidx.activity.OnBackPressedCallback r0;
        androidx.core.util.Consumer r1;

        r0 := @this: androidx.activity.OnBackPressedCallback;

        r1 := @parameter0: androidx.core.util.Consumer;

        r0.<androidx.activity.OnBackPressedCallback: androidx.core.util.Consumer mEnabledConsumer> = r1;

        return;
    }

