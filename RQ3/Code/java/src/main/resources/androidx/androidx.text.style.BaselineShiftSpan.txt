androidx.text.style.BaselineShiftSpan
<androidx.text.style.BaselineShiftSpan: float multiplier>
    public void updateMeasureState(android.text.TextPaint)
    {
        androidx.text.style.BaselineShiftSpan r0;
        android.text.TextPaint r1, r2;
        float f0, f1, $f2, $f3;
        boolean z0;
        int i0, $i1, $i2, $i3;
        double $d0, $d1;

        r0 := @this: androidx.text.style.BaselineShiftSpan;

        r1 := @parameter0: android.text.TextPaint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "textPaint");

        $i1 = r1.<android.text.TextPaint: int baselineShift>;

        $f2 = virtualinvoke r1.<android.text.TextPaint: float ascent()>();

        $f3 = r0.<androidx.text.style.BaselineShiftSpan: float multiplier>;

        f0 = $f2 * $f3;

        i0 = $i1;

        r2 = r1;

        z0 = 0;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        f1 = (float) $d1;

        $i2 = (int) f1;

        $i3 = i0 + $i2;

        r2.<android.text.TextPaint: int baselineShift> = $i3;

        return;
    }

    public void updateDrawState(android.text.TextPaint)
    {
        androidx.text.style.BaselineShiftSpan r0;
        android.text.TextPaint r1, r2;
        float f0, f1, $f2, $f3;
        boolean z0;
        int i0, $i1, $i2, $i3;
        double $d0, $d1;

        r0 := @this: androidx.text.style.BaselineShiftSpan;

        r1 := @parameter0: android.text.TextPaint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "textPaint");

        $i1 = r1.<android.text.TextPaint: int baselineShift>;

        $f2 = virtualinvoke r1.<android.text.TextPaint: float ascent()>();

        $f3 = r0.<androidx.text.style.BaselineShiftSpan: float multiplier>;

        f0 = $f2 * $f3;

        i0 = $i1;

        r2 = r1;

        z0 = 0;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        f1 = (float) $d1;

        $i2 = (int) f1;

        $i3 = i0 + $i2;

        r2.<android.text.TextPaint: int baselineShift> = $i3;

        return;
    }

    public final float getMultiplier()
    {
        androidx.text.style.BaselineShiftSpan r0;
        float $f0;

        r0 := @this: androidx.text.style.BaselineShiftSpan;

        $f0 = r0.<androidx.text.style.BaselineShiftSpan: float multiplier>;

        return $f0;
    }

    public void <init>(float)
    {
        androidx.text.style.BaselineShiftSpan r0;
        float f0;

        r0 := @this: androidx.text.style.BaselineShiftSpan;

        f0 := @parameter0: float;

        specialinvoke r0.<android.text.style.MetricAffectingSpan: void <init>()>();

        r0.<androidx.text.style.BaselineShiftSpan: float multiplier> = f0;

        return;
    }

