androidx.room.compiler.processing.XMethodElement
<androidx.room.compiler.processing.XMethodElement: java.lang.String getJvmName()>
<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XType getReturnType()>
<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XMethodType getExecutableType()>
    public java.lang.String getFallbackLocationText()
    {
        androidx.room.compiler.processing.XMethodElement r0;
        java.lang.StringBuilder r1, $r3;
        androidx.room.compiler.processing.XMemberContainer $r4;
        java.lang.String $r5, $r8, $r17, $r20;
        java.util.List $r11, $r12;
        boolean $z1;
        androidx.room.compiler.processing.XMethodElement$fallbackLocationText$1$1 $r13;
        kotlin.jvm.functions.Function1 $r14;
        java.lang.CharSequence $r15;
        java.lang.Iterable $r16;
        byte $b0;

        r0 := @this: androidx.room.compiler.processing.XMethodElement;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        $r4 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XMemberContainer getEnclosingElement()>();

        $r5 = interfaceinvoke $r4.<androidx.room.compiler.processing.XMemberContainer: java.lang.String getFallbackLocationText()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: java.lang.String getJvmName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r11 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: java.util.List getParameters()>();

        $z1 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: boolean isSuspendFunction()>();

        if $z1 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List dropLast(java.util.List,int)>($r11, $b0);

        $r16 = (java.lang.Iterable) $r12;

        $r15 = (java.lang.CharSequence) ", ";

        $r13 = <androidx.room.compiler.processing.XMethodElement$fallbackLocationText$1$1: androidx.room.compiler.processing.XMethodElement$fallbackLocationText$1$1 INSTANCE>;

        $r14 = (kotlin.jvm.functions.Function1) $r13;

        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r16, $r15, null, null, 0, null, $r14, 30, null);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "StringBuilder().apply(builderAction).toString()");

        return $r20;
    }

<androidx.room.compiler.processing.XMethodElement: boolean isJavaDefault()>
<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XMethodType asMemberOf(androidx.room.compiler.processing.XType)>
<androidx.room.compiler.processing.XMethodElement: boolean hasKotlinDefaultImpl()>
<androidx.room.compiler.processing.XMethodElement: boolean isSuspendFunction()>
<androidx.room.compiler.processing.XMethodElement: boolean isExtensionFunction()>
    public boolean isOverrideableIgnoringContainer()
    {
        androidx.room.compiler.processing.XMethodElement r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.room.compiler.processing.XMethodElement;

        $z0 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: boolean isFinal()>();

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: boolean isPrivate()>();

        if $z1 != 0 goto label1;

        $z2 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: boolean isStatic()>();

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

<androidx.room.compiler.processing.XMethodElement: boolean overrides(androidx.room.compiler.processing.XMethodElement,androidx.room.compiler.processing.XTypeElement)>
    public boolean hasValidJvmSourceName()
    {
        androidx.room.compiler.processing.XMethodElement r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.XMethodElement;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XMethodElement: java.lang.String getJvmName()>();

        $z0 = staticinvoke <androidx.room.compiler.processing.util.NamingUtilsKt: boolean isValidJavaSourceName(java.lang.String)>($r1);

        return $z0;
    }

