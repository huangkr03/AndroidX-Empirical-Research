androidx.compose.foundation.text.selection.HandlePositionProvider
<androidx.compose.foundation.text.selection.HandlePositionProvider: androidx.compose.foundation.text.selection.HandleReferencePoint handleReferencePoint>
<androidx.compose.foundation.text.selection.HandlePositionProvider: long offset>
    private void <init>(androidx.compose.foundation.text.selection.HandleReferencePoint, long)
    {
        androidx.compose.foundation.text.selection.HandlePositionProvider r0;
        androidx.compose.foundation.text.selection.HandleReferencePoint r1;
        long l0;

        r0 := @this: androidx.compose.foundation.text.selection.HandlePositionProvider;

        r1 := @parameter0: androidx.compose.foundation.text.selection.HandleReferencePoint;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: androidx.compose.foundation.text.selection.HandleReferencePoint handleReferencePoint> = r1;

        r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: long offset> = l0;

        return;
    }

    public long calculatePosition-llwVHH4(androidx.compose.ui.unit.IntRect, long, androidx.compose.ui.unit.LayoutDirection, long)
    {
        androidx.compose.foundation.text.selection.HandlePositionProvider r0;
        androidx.compose.ui.unit.IntRect r1;
        long l0, l1, $l5, $l12, $l16, $l22, $l26, $l30, $l33;
        androidx.compose.ui.unit.LayoutDirection r2;
        int[] $r3;
        androidx.compose.foundation.text.selection.HandleReferencePoint $r4;
        int $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i27, $i28, $i29, $i31, $i32;
        kotlin.NoWhenBranchMatchedException $r5;

        r0 := @this: androidx.compose.foundation.text.selection.HandlePositionProvider;

        r1 := @parameter0: androidx.compose.ui.unit.IntRect;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.compose.ui.unit.LayoutDirection;

        l1 := @parameter3: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "anchorBounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutDirection");

        $r4 = r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: androidx.compose.foundation.text.selection.HandleReferencePoint handleReferencePoint>;

        $r3 = <androidx.compose.foundation.text.selection.HandlePositionProvider$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i2 = virtualinvoke $r4.<androidx.compose.foundation.text.selection.HandleReferencePoint: int ordinal()>();

        $i3 = $r3[$i2];

        tableswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $i25 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getLeft()>();

        $l26 = r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: long offset>;

        $i27 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l26);

        $i28 = $i25 + $i27;

        $i29 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getTop()>();

        $l30 = r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: long offset>;

        $i31 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l30);

        $i32 = $i29 + $i31;

        $l33 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i28, $i32);

        goto label5;

     label2:
        $i15 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getLeft()>();

        $l16 = r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: long offset>;

        $i17 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l16);

        $i18 = $i15 + $i17;

        $i19 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>(l1);

        $i20 = $i18 - $i19;

        $i21 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getTop()>();

        $l22 = r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: long offset>;

        $i23 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l22);

        $i24 = $i21 + $i23;

        $l33 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i20, $i24);

        goto label5;

     label3:
        $i4 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getLeft()>();

        $l5 = r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: long offset>;

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l5);

        $i7 = $i4 + $i6;

        $i8 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>(l1);

        $i9 = $i8 / 2;

        $i10 = $i7 - $i9;

        $i11 = virtualinvoke r1.<androidx.compose.ui.unit.IntRect: int getTop()>();

        $l12 = r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: long offset>;

        $i13 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l12);

        $i14 = $i11 + $i13;

        $l33 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i10, $i14);

        goto label5;

     label4:
        $r5 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r5.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r5;

     label5:
        return $l33;
    }

    public void <init>(androidx.compose.foundation.text.selection.HandleReferencePoint, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.text.selection.HandlePositionProvider r0;
        androidx.compose.foundation.text.selection.HandleReferencePoint r1;
        long l0;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.compose.foundation.text.selection.HandlePositionProvider;

        r1 := @parameter0: androidx.compose.foundation.text.selection.HandleReferencePoint;

        l0 := @parameter1: long;

        $r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.text.selection.HandlePositionProvider: void <init>(androidx.compose.foundation.text.selection.HandleReferencePoint,long)>(r1, l0);

        return;
    }

androidx.compose.foundation.text.selection.HandlePositionProvider$WhenMappings
<androidx.compose.foundation.text.selection.HandlePositionProvider$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.foundation.text.selection.HandleReferencePoint[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.compose.foundation.text.selection.HandleReferencePoint $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.compose.foundation.text.selection.HandleReferencePoint: androidx.compose.foundation.text.selection.HandleReferencePoint[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.foundation.text.selection.HandleReferencePoint: androidx.compose.foundation.text.selection.HandleReferencePoint TopLeft>;

        $i1 = virtualinvoke $r2.<androidx.compose.foundation.text.selection.HandleReferencePoint: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.foundation.text.selection.HandleReferencePoint: androidx.compose.foundation.text.selection.HandleReferencePoint TopRight>;

        $i2 = virtualinvoke $r3.<androidx.compose.foundation.text.selection.HandleReferencePoint: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.compose.foundation.text.selection.HandleReferencePoint: androidx.compose.foundation.text.selection.HandleReferencePoint TopMiddle>;

        $i3 = virtualinvoke $r4.<androidx.compose.foundation.text.selection.HandleReferencePoint: int ordinal()>();

        r0[$i3] = 3;

        <androidx.compose.foundation.text.selection.HandlePositionProvider$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

