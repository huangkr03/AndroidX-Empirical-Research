androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ELEMENT_TRANSITION>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ELEMENT_ITEM>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String TRANSITION_MISSING_FROM_TO_ID>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ITEM_MISSING_DRAWABLE_ERROR>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex>
<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated>
    public void <init>()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)>(null, null);

        return;
    }

    void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState, android.content.res.Resources)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState r1, r3, $r4;
        android.content.res.Resources r2;
        int[] $r5;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<androidx.appcompat.graphics.drawable.StateListDrawableCompat: void <init>(androidx.appcompat.graphics.drawable.StateListDrawableCompat$StateListState)>(null);

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = -1;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = -1;

        $r4 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        specialinvoke $r4.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)>(r1, r0, r2);

        r3 = $r4;

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState)>(r3);

        $r5 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] getState()>();

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>($r5);

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>();

        return;
    }

    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context, int, android.content.res.Resources$Theme)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        android.content.res.Resources$Theme r1;
        android.content.res.XmlResourceParser r2;
        android.util.AttributeSet r3;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat $r4;
        org.xmlpull.v1.XmlPullParserException $r5;
        java.lang.Throwable $r6, $r8, r11, r12;
        java.lang.String $r7, $r9;
        android.content.res.Resources r10;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.res.Resources$Theme;

     label1:
        r10 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke r10.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

     label2:
        $i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 2 goto label3;

        if i1 == 1 goto label3;

        goto label2;

     label3:
        if i1 == 2 goto label4;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r5;

     label4:
        $r4 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r10, r2, r3, r1);

     label5:
        return $r4;

     label6:
        $r6 := @caughtexception;

        r11 = $r6;

        $r7 = <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "parser error", r11);

        goto label8;

     label7:
        $r8 := @caughtexception;

        r12 = $r8;

        $r9 = <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "parser error", r12);

     label8:
        return null;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label5 with label6;
        catch java.io.IOException from label1 to label5 with label7;
    }

    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.Context r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        java.lang.String r5, $r10, $r14;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r6, $r7;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r13;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter3: android.util.AttributeSet;

        r4 := @parameter4: android.content.res.Resources$Theme;

        r5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("animated-selector");

        if $z0 != 0 goto label1;

        $r8 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid animated-selector tag ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        $r7 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke $r7.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void <init>()>();

        r6 = $r7;

        virtualinvoke r6.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r1, r2, r3, r4);

        return r6;
    }

    public void inflate(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        org.xmlpull.v1.XmlPullParser r3;
        android.util.AttributeSet r4;
        android.content.res.Resources$Theme r5;
        android.content.res.TypedArray r6;
        int[] $r7;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r4 := @parameter3: android.util.AttributeSet;

        r5 := @parameter4: android.content.res.Resources$Theme;

        $r7 = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat>;

        r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r2, r5, r4, $r7);

        $i0 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_visible>;

        $z0 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)>($z0, 1);

        specialinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)>(r6);

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateDensity(android.content.res.Resources)>(r2);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4, r5);

        specialinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()>();

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean z0, z1, z2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition $r1, $r2;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<androidx.appcompat.graphics.drawable.StateListDrawableCompat: boolean setVisible(boolean,boolean)>(z0, z1);

        $r1 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        if $r1 == null goto label3;

        if z2 != 0 goto label1;

        if z1 == 0 goto label3;

     label1:
        if z0 == 0 goto label2;

        $r2 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>();

        goto label3;

     label2:
        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()>();

     label3:
        return z2;
    }

    public void addState(int[], android.graphics.drawable.Drawable, int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        int[] r1, $r5;
        android.graphics.drawable.Drawable r2;
        int i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r4;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.graphics.drawable.Drawable;

        i0 := @parameter2: int;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        virtualinvoke $r4.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>(r1, r2, i0);

        $r5 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] getState()>();

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>($r5);

        return;
    }

    public void addTransition(int, int, android.graphics.drawable.Drawable, boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        int i0, i1;
        android.graphics.drawable.Drawable r1;
        boolean z0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r3;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.drawable.Drawable;

        z0 := @parameter3: boolean;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        virtualinvoke $r3.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>(i0, i1, r1, z0);

        return;
    }

    public boolean isStateful()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        return 1;
    }

    public void jumpToCurrentState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition $r1, $r2;
        int $i0;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke r0.<androidx.appcompat.graphics.drawable.StateListDrawableCompat: void jumpToCurrentState()>();

        $r1 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>();

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition> = null;

        $i0 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex>;

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>($i0);

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = -1;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = -1;

     label1:
        return;
    }

    protected boolean onStateChange(int[])
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        int[] r1;
        int i0, $i1;
        android.graphics.drawable.Drawable r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r3;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: int[];

        $r3 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        i0 = virtualinvoke $r3.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])>(r1);

        $i1 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getCurrentIndex()>();

        if i0 == $i1 goto label2;

        $z1 = specialinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)>(i0);

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>(i0);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z4 = $z3;

        r2 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()>();

        if r2 == null goto label4;

        $z0 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        z4 = z4 | $z0;

     label4:
        return z4;
    }

    private boolean selectTransition(int)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition r1, r10;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState r2;
        boolean z0, z1, $z3, $z4, $z5, $z6;
        android.graphics.drawable.Drawable r3;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition $r4;
        android.graphics.drawable.Animatable $r5;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition $r6;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat $r7;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition $r8;
        android.graphics.drawable.AnimationDrawable $r9;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        i0 := @parameter0: int;

        r1 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition>;

        if r1 == null goto label03;

        $i4 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex>;

        if i0 != $i4 goto label01;

        return 1;

     label01:
        $i5 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex>;

        if i0 != $i5 goto label02;

        $z6 = virtualinvoke r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()>();

        if $z6 == 0 goto label02;

        virtualinvoke r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()>();

        $i6 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex>;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = $i6;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = i0;

        return 1;

     label02:
        i7 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex>;

        virtualinvoke r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()>();

        goto label04;

     label03:
        i7 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getCurrentIndex()>();

     label04:
        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition> = null;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = -1;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = -1;

        r2 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        i1 = virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)>(i7);

        i2 = virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)>(i0);

        if i2 == 0 goto label05;

        if i1 != 0 goto label06;

     label05:
        return 0;

     label06:
        i3 = virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)>(i1, i2);

        if i3 >= 0 goto label07;

        return 0;

     label07:
        z0 = virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)>(i1, i2);

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectDrawable(int)>(i3);

        r3 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()>();

        $z3 = r3 instanceof android.graphics.drawable.AnimationDrawable;

        if $z3 == 0 goto label08;

        z1 = virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)>(i1, i2);

        $r8 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition;

        $r9 = (android.graphics.drawable.AnimationDrawable) r3;

        specialinvoke $r8.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)>($r9, z1, z0);

        r10 = $r8;

        goto label11;

     label08:
        $z4 = r3 instanceof androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat;

        if $z4 == 0 goto label09;

        $r6 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition;

        $r7 = (androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) r3;

        specialinvoke $r6.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)>($r7);

        r10 = $r6;

        goto label11;

     label09:
        $z5 = r3 instanceof android.graphics.drawable.Animatable;

        if $z5 == 0 goto label10;

        $r4 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition;

        $r5 = (android.graphics.drawable.Animatable) r3;

        specialinvoke $r4.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void <init>(android.graphics.drawable.Animatable)>($r5);

        r10 = $r4;

        goto label11;

     label10:
        return 0;

     label11:
        virtualinvoke r10.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()>();

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition> = r10;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex> = i7;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex> = i0;

        return 1;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.res.TypedArray r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $i10 = r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int mChangingConfigurations>;

        $i11 = staticinvoke <androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)>(r1);

        $i12 = $i10 | $i11;

        r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int mChangingConfigurations> = $i12;

     label1:
        $i1 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding>;

        $z0 = r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean mVariablePadding>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, $z0);

        virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setVariablePadding(boolean)>($z1);

        $i2 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize>;

        $z2 = r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean mConstantSize>;

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, $z2);

        virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setConstantSize(boolean)>($z3);

        $i4 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration>;

        $i3 = r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int mEnterFadeDuration>;

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>($i4, $i3);

        virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setEnterFadeDuration(int)>($i5);

        $i7 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration>;

        $i6 = r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int mExitFadeDuration>;

        $i8 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>($i7, $i6);

        virtualinvoke r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void setExitFadeDuration(int)>($i8);

        $i9 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_dither>;

        $z4 = r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean mDither>;

        $z5 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i9, $z4);

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)>($z5);

        return;
    }

    private void init()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        int[] $r1;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $r1 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] getState()>();

        virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])>($r1);

        return;
    }

    private void inflateChildElements(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        org.xmlpull.v1.XmlPullParser r3;
        android.util.AttributeSet r4;
        android.content.res.Resources$Theme r5;
        int i0, i1, i2, $i3, $i4, $i7;
        java.lang.String $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r4 := @parameter3: android.util.AttributeSet;

        r5 := @parameter4: android.content.res.Resources$Theme;

        $i3 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i1 = $i3 + 1;

     label1:
        $i7 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i7;

        if $i7 == 1 goto label6;

        $i4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i2 = $i4;

        if $i4 >= i1 goto label2;

        if i0 == 3 goto label6;

     label2:
        if i0 == 2 goto label3;

        goto label1;

     label3:
        if i2 <= i1 goto label4;

        goto label1;

     label4:
        $r6 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label5;

        specialinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4, r5);

        goto label1;

     label5:
        $r7 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("transition");

        if $z1 == 0 goto label1;

        specialinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4, r5);

        goto label1;

     label6:
        return;
    }

    private int parseTransition(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        org.xmlpull.v1.XmlPullParser r3;
        android.util.AttributeSet r4;
        android.content.res.Resources$Theme r5;
        android.content.res.TypedArray r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, $z1;
        int[] $r7;
        java.lang.String $r10, $r13, $r17, $r20, $r21, $r24, $r27;
        java.lang.StringBuilder $r11, $r12, $r18, $r19, $r25, $r26, r30, r32, r34;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r14;
        androidx.appcompat.widget.ResourceManagerInternal $r28;
        java.lang.Object r29;
        org.xmlpull.v1.XmlPullParserException r31, r33, r35;
        android.graphics.drawable.Drawable r36;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r4 := @parameter3: android.util.AttributeSet;

        r5 := @parameter4: android.content.res.Resources$Theme;

        $r7 = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition>;

        r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r2, r5, r4, $r7);

        $i4 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_fromId>;

        i0 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i4, -1);

        $i5 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_toId>;

        i1 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i5, -1);

        r29 = null;

        $i6 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_drawable>;

        i2 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i6, -1);

        if i2 <= 0 goto label01;

        $r28 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>();

        r29 = virtualinvoke $r28.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, i2);

     label01:
        $i7 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_reversible>;

        z0 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i7, 0);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        if r29 != null goto label07;

     label02:
        $i9 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i3 = $i9;

        if $i9 != 4 goto label03;

        goto label02;

     label03:
        if i3 == 2 goto label04;

        r31 = new org.xmlpull.v1.XmlPullParserException;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r24 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r25 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r27);

        throw r31;

     label04:
        $r21 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("animated-vector");

        if $z1 == 0 goto label05;

        r29 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4, r5);

        goto label07;

     label05:
        $i10 = <android.os.Build$VERSION: int SDK_INT>;

        if $i10 < 21 goto label06;

        r29 = staticinvoke <androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r2, r3, r4, r5);

        goto label07;

     label06:
        r29 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r2, r3, r4);

     label07:
        if r29 != null goto label08;

        r33 = new org.xmlpull.v1.XmlPullParserException;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r18 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        throw r33;

     label08:
        if i0 == -1 goto label09;

        if i1 != -1 goto label10;

     label09:
        r35 = new org.xmlpull.v1.XmlPullParserException;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r10 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r11 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires \'fromId\' & \'toId\' attributes");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

        throw r35;

     label10:
        $r14 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        r36 = (android.graphics.drawable.Drawable) r29;

        $i8 = virtualinvoke $r14.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>(i0, i1, r36, z0);

        return $i8;
    }

    private int parseItem(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        org.xmlpull.v1.XmlPullParser r3;
        android.util.AttributeSet r4;
        android.content.res.Resources$Theme r5;
        android.content.res.TypedArray r6;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        int[] r7, $r8;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r9;
        java.lang.String $r12, $r15, $r16, $r19, $r22;
        java.lang.StringBuilder $r13, $r14, $r20, $r21, r25, r27;
        boolean $z0;
        androidx.appcompat.widget.ResourceManagerInternal $r23;
        java.lang.Object r24;
        org.xmlpull.v1.XmlPullParserException r26, r28;
        android.graphics.drawable.Drawable r29;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r4 := @parameter3: android.util.AttributeSet;

        r5 := @parameter4: android.content.res.Resources$Theme;

        $r8 = <androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem>;

        r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r2, r5, r4, $r8);

        $i3 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_id>;

        i0 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i3, 0);

        r24 = null;

        $i4 = <androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_drawable>;

        i1 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i4, -1);

        if i1 <= 0 goto label1;

        $r23 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()>();

        r24 = virtualinvoke $r23.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, i1);

     label1:
        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        r7 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int[] extractStateSet(android.util.AttributeSet)>(r4);

        if r24 != null goto label7;

     label2:
        $i6 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i6;

        if $i6 != 4 goto label3;

        goto label2;

     label3:
        if i2 == 2 goto label4;

        r26 = new org.xmlpull.v1.XmlPullParserException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        $r19 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r20 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r22);

        throw r26;

     label4:
        $r16 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("vector");

        if $z0 == 0 goto label5;

        r24 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r2, r3, r4, r5);

        goto label7;

     label5:
        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 < 21 goto label6;

        r24 = staticinvoke <androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r2, r3, r4, r5);

        goto label7;

     label6:
        r24 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r2, r3, r4);

     label7:
        if r24 != null goto label8;

        r28 = new org.xmlpull.v1.XmlPullParserException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r12 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r13 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r15);

        throw r28;

     label8:
        $r9 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        r29 = (android.graphics.drawable.Drawable) r24;

        $i5 = virtualinvoke $r9.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>(r7, r29, i0);

        return $i5;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r2;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $z0 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<androidx.appcompat.graphics.drawable.StateListDrawableCompat: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        virtualinvoke $r2.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()>();

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated> = 1;

     label1:
        return r0;
    }

    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r1, $r2;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $r1 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        $r2 = r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState>;

        specialinvoke $r1.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)>($r2, r0, null);

        return $r1;
    }

    void clearMutated()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke r0.<androidx.appcompat.graphics.drawable.StateListDrawableCompat: void clearMutated()>();

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated> = 0;

        return;
    }

    void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState r1;
        boolean $z0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r2;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        r1 := @parameter0: androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState;

        specialinvoke r0.<androidx.appcompat.graphics.drawable.StateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState)>(r1);

        $z0 = r1 instanceof androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        if $z0 == 0 goto label1;

        $r2 = (androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState) r1;

        r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState> = $r2;

     label1:
        return;
    }

    volatile androidx.appcompat.graphics.drawable.StateListDrawableCompat$StateListState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r1;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $r1 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()>();

        return $r1;
    }

    volatile androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r1;

        r0 := @this: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        $r1 = virtualinvoke r0.<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/appcompat/graphics/drawable/AnimatedStateListDrawableCompat;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG> = $r1;

        return;
    }

