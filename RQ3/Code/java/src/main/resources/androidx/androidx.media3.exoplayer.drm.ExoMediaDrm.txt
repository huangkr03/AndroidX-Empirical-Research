androidx.media3.exoplayer.drm.ExoMediaDrm
<androidx.media3.exoplayer.drm.ExoMediaDrm: int EVENT_KEY_REQUIRED>
<androidx.media3.exoplayer.drm.ExoMediaDrm: int EVENT_KEY_EXPIRED>
<androidx.media3.exoplayer.drm.ExoMediaDrm: int EVENT_PROVISION_REQUIRED>
<androidx.media3.exoplayer.drm.ExoMediaDrm: int KEY_TYPE_STREAMING>
<androidx.media3.exoplayer.drm.ExoMediaDrm: int KEY_TYPE_OFFLINE>
<androidx.media3.exoplayer.drm.ExoMediaDrm: int KEY_TYPE_RELEASE>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void setOnEventListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener)>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void setOnKeyStatusChangeListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener)>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void setOnExpirationUpdateListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener)>
<androidx.media3.exoplayer.drm.ExoMediaDrm: byte[] openSession()>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void closeSession(byte[])>
    public void setPlayerIdForSession(byte[], androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm r0;
        byte[] r1;
        androidx.media3.exoplayer.analytics.PlayerId r2;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm;

        r1 := @parameter0: byte[];

        r2 := @parameter1: androidx.media3.exoplayer.analytics.PlayerId;

        return;
    }

<androidx.media3.exoplayer.drm.ExoMediaDrm: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest getKeyRequest(byte[],java.util.List,int,java.util.HashMap)>
<androidx.media3.exoplayer.drm.ExoMediaDrm: byte[] provideKeyResponse(byte[],byte[])>
<androidx.media3.exoplayer.drm.ExoMediaDrm: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest getProvisionRequest()>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void provideProvisionResponse(byte[])>
<androidx.media3.exoplayer.drm.ExoMediaDrm: java.util.Map queryKeyStatus(byte[])>
<androidx.media3.exoplayer.drm.ExoMediaDrm: boolean requiresSecureDecoder(byte[],java.lang.String)>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void acquire()>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void release()>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void restoreKeys(byte[],byte[])>
<androidx.media3.exoplayer.drm.ExoMediaDrm: android.os.PersistableBundle getMetrics()>
<androidx.media3.exoplayer.drm.ExoMediaDrm: java.lang.String getPropertyString(java.lang.String)>
<androidx.media3.exoplayer.drm.ExoMediaDrm: byte[] getPropertyByteArray(java.lang.String)>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void setPropertyString(java.lang.String,java.lang.String)>
<androidx.media3.exoplayer.drm.ExoMediaDrm: void setPropertyByteArray(java.lang.String,byte[])>
<androidx.media3.exoplayer.drm.ExoMediaDrm: androidx.media3.decoder.CryptoConfig createCryptoConfig(byte[])>
<androidx.media3.exoplayer.drm.ExoMediaDrm: int getCryptoType()>
androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider
<androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider: androidx.media3.exoplayer.drm.ExoMediaDrm exoMediaDrm>
    public void <init>(androidx.media3.exoplayer.drm.ExoMediaDrm)
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider r0;
        androidx.media3.exoplayer.drm.ExoMediaDrm r1;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider;

        r1 := @parameter0: androidx.media3.exoplayer.drm.ExoMediaDrm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider: androidx.media3.exoplayer.drm.ExoMediaDrm exoMediaDrm> = r1;

        return;
    }

    public androidx.media3.exoplayer.drm.ExoMediaDrm acquireExoMediaDrm(java.util.UUID)
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider r0;
        java.util.UUID r1;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider;

        r1 := @parameter0: java.util.UUID;

        $r2 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider: androidx.media3.exoplayer.drm.ExoMediaDrm exoMediaDrm>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.drm.ExoMediaDrm: void acquire()>();

        $r3 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$AppManagedProvider: androidx.media3.exoplayer.drm.ExoMediaDrm exoMediaDrm>;

        return $r3;
    }

androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest$RequestType
androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int REQUEST_TYPE_UNKNOWN>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int REQUEST_TYPE_INITIAL>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int REQUEST_TYPE_RENEWAL>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int REQUEST_TYPE_RELEASE>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int REQUEST_TYPE_NONE>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int REQUEST_TYPE_UPDATE>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: byte[] data>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: java.lang.String licenseServerUrl>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int requestType>
    public void <init>(byte[], java.lang.String)
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest r0;
        byte[] r1;
        java.lang.String r2;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: void <init>(byte[],java.lang.String,int)>(r1, r2, -2147483648);

        return;
    }

    public void <init>(byte[], java.lang.String, int)
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest r0;
        byte[] r1;
        java.lang.String r2;
        int i0;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: byte[] data> = r1;

        r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: java.lang.String licenseServerUrl> = r2;

        r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int requestType> = i0;

        return;
    }

    public byte[] getData()
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest r0;
        byte[] $r1;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest;

        $r1 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: byte[] data>;

        return $r1;
    }

    public java.lang.String getLicenseServerUrl()
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest r0;
        java.lang.String $r1;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest;

        $r1 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: java.lang.String licenseServerUrl>;

        return $r1;
    }

    public int getRequestType()
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest;

        $i0 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: int requestType>;

        return $i0;
    }

androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus: int statusCode>
<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus: byte[] keyId>
    public void <init>(int, byte[])
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus r0;
        int i0;
        byte[] r1;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus: int statusCode> = i0;

        r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus: byte[] keyId> = r1;

        return;
    }

    public int getStatusCode()
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus;

        $i0 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus: int statusCode>;

        return $i0;
    }

    public byte[] getKeyId()
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus r0;
        byte[] $r1;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus;

        $r1 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus: byte[] keyId>;

        return $r1;
    }

androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener
<androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener: void onEvent(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],int,int,byte[])>
androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener
<androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener: void onExpirationUpdate(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],long)>
androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener
<androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener: void onKeyStatusChange(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],java.util.List,boolean)>
androidx.media3.exoplayer.drm.ExoMediaDrm$Provider
<androidx.media3.exoplayer.drm.ExoMediaDrm$Provider: androidx.media3.exoplayer.drm.ExoMediaDrm acquireExoMediaDrm(java.util.UUID)>
androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest
<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: byte[] data>
<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: java.lang.String defaultUrl>
    public void <init>(byte[], java.lang.String)
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest r0;
        byte[] r1;
        java.lang.String r2;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: byte[] data> = r1;

        r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: java.lang.String defaultUrl> = r2;

        return;
    }

    public byte[] getData()
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest r0;
        byte[] $r1;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest;

        $r1 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: byte[] data>;

        return $r1;
    }

    public java.lang.String getDefaultUrl()
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest r0;
        java.lang.String $r1;

        r0 := @this: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest;

        $r1 = r0.<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: java.lang.String defaultUrl>;

        return $r1;
    }

