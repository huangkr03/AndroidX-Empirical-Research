androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter
<androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient>
    public void <init>(androidx.webkit.WebViewRenderProcessClient)
    {
        androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter r0;
        androidx.webkit.WebViewRenderProcessClient r1;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter;

        r1 := @parameter0: androidx.webkit.WebViewRenderProcessClient;

        specialinvoke r0.<android.webkit.WebViewRenderProcessClient: void <init>()>();

        r0.<androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient> = r1;

        return;
    }

    public void onRenderProcessUnresponsive(android.webkit.WebView, android.webkit.WebViewRenderProcess)
    {
        androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter r0;
        android.webkit.WebView r1;
        android.webkit.WebViewRenderProcess r2;
        androidx.webkit.WebViewRenderProcessClient $r3;
        androidx.webkit.internal.WebViewRenderProcessImpl $r4;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebViewRenderProcess;

        $r3 = r0.<androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient>;

        $r4 = staticinvoke <androidx.webkit.internal.WebViewRenderProcessImpl: androidx.webkit.internal.WebViewRenderProcessImpl forFrameworkObject(android.webkit.WebViewRenderProcess)>(r2);

        virtualinvoke $r3.<androidx.webkit.WebViewRenderProcessClient: void onRenderProcessUnresponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)>(r1, $r4);

        return;
    }

    public void onRenderProcessResponsive(android.webkit.WebView, android.webkit.WebViewRenderProcess)
    {
        androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter r0;
        android.webkit.WebView r1;
        android.webkit.WebViewRenderProcess r2;
        androidx.webkit.WebViewRenderProcessClient $r3;
        androidx.webkit.internal.WebViewRenderProcessImpl $r4;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebViewRenderProcess;

        $r3 = r0.<androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient>;

        $r4 = staticinvoke <androidx.webkit.internal.WebViewRenderProcessImpl: androidx.webkit.internal.WebViewRenderProcessImpl forFrameworkObject(android.webkit.WebViewRenderProcess)>(r2);

        virtualinvoke $r3.<androidx.webkit.WebViewRenderProcessClient: void onRenderProcessResponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)>(r1, $r4);

        return;
    }

    public androidx.webkit.WebViewRenderProcessClient getFrameworkRenderProcessClient()
    {
        androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter r0;
        androidx.webkit.WebViewRenderProcessClient $r1;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter;

        $r1 = r0.<androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient>;

        return $r1;
    }

