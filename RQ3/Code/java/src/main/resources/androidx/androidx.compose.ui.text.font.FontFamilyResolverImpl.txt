androidx.compose.ui.text.font.FontFamilyResolverImpl
<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader>
<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor>
<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.TypefaceRequestCache typefaceRequestCache>
<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter fontListFontFamilyTypefaceAdapter>
<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter platformFamilyTypefaceAdapter>
<androidx.compose.ui.text.font.FontFamilyResolverImpl: kotlin.jvm.functions.Function1 createDefaultTypeface>
    public void <init>(androidx.compose.ui.text.font.PlatformFontLoader, androidx.compose.ui.text.font.PlatformResolveInterceptor, androidx.compose.ui.text.font.TypefaceRequestCache, androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter, androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl r0;
        androidx.compose.ui.text.font.PlatformFontLoader r1;
        androidx.compose.ui.text.font.PlatformResolveInterceptor r2;
        androidx.compose.ui.text.font.TypefaceRequestCache r3;
        androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter r4;
        androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter r5;
        androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1 $r6;
        kotlin.jvm.functions.Function1 $r7;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        r1 := @parameter0: androidx.compose.ui.text.font.PlatformFontLoader;

        r2 := @parameter1: androidx.compose.ui.text.font.PlatformResolveInterceptor;

        r3 := @parameter2: androidx.compose.ui.text.font.TypefaceRequestCache;

        r4 := @parameter3: androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter;

        r5 := @parameter4: androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "platformFontLoader");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "platformResolveInterceptor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "typefaceRequestCache");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "fontListFontFamilyTypefaceAdapter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "platformFamilyTypefaceAdapter");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader> = r1;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor> = r2;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.TypefaceRequestCache typefaceRequestCache> = r3;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter fontListFontFamilyTypefaceAdapter> = r4;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter platformFamilyTypefaceAdapter> = r5;

        $r6 = new androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1;

        specialinvoke $r6.<androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1: void <init>(androidx.compose.ui.text.font.FontFamilyResolverImpl)>(r0);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: kotlin.jvm.functions.Function1 createDefaultTypeface> = $r7;

        return;
    }

    public void <init>(androidx.compose.ui.text.font.PlatformFontLoader, androidx.compose.ui.text.font.PlatformResolveInterceptor, androidx.compose.ui.text.font.TypefaceRequestCache, androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter, androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl r0;
        androidx.compose.ui.text.font.PlatformFontLoader r1;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter $r3, r10;
        androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter $r4, r9;
        androidx.compose.ui.text.font.AsyncTypefaceCache $r5;
        androidx.compose.ui.text.font.PlatformResolveInterceptor$Companion $r6;
        androidx.compose.ui.text.font.PlatformResolveInterceptor r7;
        androidx.compose.ui.text.font.TypefaceRequestCache r8;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        r1 := @parameter0: androidx.compose.ui.text.font.PlatformFontLoader;

        r7 := @parameter1: androidx.compose.ui.text.font.PlatformResolveInterceptor;

        r8 := @parameter2: androidx.compose.ui.text.font.TypefaceRequestCache;

        r9 := @parameter3: androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter;

        r10 := @parameter4: androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter;

        i0 := @parameter5: int;

        r2 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r6 = <androidx.compose.ui.text.font.PlatformResolveInterceptor: androidx.compose.ui.text.font.PlatformResolveInterceptor$Companion Companion>;

        r7 = virtualinvoke $r6.<androidx.compose.ui.text.font.PlatformResolveInterceptor$Companion: androidx.compose.ui.text.font.PlatformResolveInterceptor getDefault$ui_text_release()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r8 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverKt: androidx.compose.ui.text.font.TypefaceRequestCache getGlobalTypefaceRequestCache()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        $r4 = new androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter;

        $r5 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverKt: androidx.compose.ui.text.font.AsyncTypefaceCache getGlobalAsyncTypefaceCache()>();

        specialinvoke $r4.<androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter: void <init>(androidx.compose.ui.text.font.AsyncTypefaceCache,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r5, null, 2, null);

        r9 = $r4;

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        $r3 = new androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter;

        specialinvoke $r3.<androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter: void <init>()>();

        r10 = $r3;

     label4:
        specialinvoke r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: void <init>(androidx.compose.ui.text.font.PlatformFontLoader,androidx.compose.ui.text.font.PlatformResolveInterceptor,androidx.compose.ui.text.font.TypefaceRequestCache,androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter,androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter)>(r1, r7, r8, r9, r10);

        return;
    }

    public final androidx.compose.ui.text.font.PlatformFontLoader getPlatformFontLoader$ui_text_release()
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl r0;
        androidx.compose.ui.text.font.PlatformFontLoader $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        $r1 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader>;

        return $r1;
    }

    public java.lang.Object preload(androidx.compose.ui.text.font.FontFamily, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r43;
        java.util.List r1, $r2;
        java.util.ArrayList r3, r39;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.Object r5, r6, $r9, r10, $r12, $r13, $r29, $r32;
        androidx.compose.ui.text.font.Font r7;
        java.util.Collection r8;
        boolean $z4, $z6;
        androidx.compose.ui.text.font.FontListFontFamily $r14;
        androidx.compose.ui.text.font.TypefaceRequestCache $r17;
        kotlin.jvm.functions.Function1 $r18;
        kotlin.Unit $r19, $r33;
        androidx.compose.ui.text.font.PlatformResolveInterceptor $r21, $r23, $r26;
        androidx.compose.ui.text.font.FontFamily $r22, r36;
        androidx.compose.ui.text.font.FontWeight $r24, $r25;
        androidx.compose.ui.text.font.FontSynthesis$Companion $r27;
        androidx.compose.ui.text.font.PlatformFontLoader $r28, $r31;
        androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter $r30;
        androidx.compose.ui.text.font.FontFamilyResolverImpl r35;
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1 $r37, r38;
        androidx.compose.ui.text.font.TypefaceRequest r40;
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2 r41;
        java.lang.IllegalStateException r42;

        r35 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        r36 := @parameter0: androidx.compose.ui.text.font.FontFamily;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z4 = r0 instanceof androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1;

        if $z4 == 0 goto label1;

        $r37 = (androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1) r0;

        $i5 = $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: int label>;

        $i6 = $i5 & -2147483648;

        if $i6 == 0 goto label1;

        $i7 = $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: int label>;

        $i8 = $i7 - -2147483648;

        $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: int label> = $i8;

        goto label2;

     label1:
        r38 = new androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1;

        specialinvoke r38.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: void <init>(androidx.compose.ui.text.font.FontFamilyResolverImpl,kotlin.coroutines.Continuation)>(r35, r0);

        $r37 = r38;

     label2:
        $r9 = $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object result>;

        r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i9 = $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: int label>;

        tableswitch($i9)
        {
            case 0: goto label3;
            case 1: goto label5;
            default: goto label9;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r9);

        $z6 = r36 instanceof androidx.compose.ui.text.font.FontListFontFamily;

        if $z6 != 0 goto label4;

        $r33 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r33;

     label4:
        $r30 = r35.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter fontListFontFamilyTypefaceAdapter>;

        $r31 = r35.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader>;

        $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object L$0> = r35;

        $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object L$1> = r36;

        $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: int label> = 1;

        r43 = (kotlin.coroutines.Continuation) $r37;

        $r32 = virtualinvoke $r30.<androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter: java.lang.Object preload(androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.PlatformFontLoader,kotlin.coroutines.Continuation)>(r36, $r31, r43);

        if $r32 != r10 goto label6;

        return r10;

     label5:
        $r12 = $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object L$1>;

        r36 = (androidx.compose.ui.text.font.FontFamily) $r12;

        $r13 = $r37.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object L$0>;

        r35 = (androidx.compose.ui.text.font.FontFamilyResolverImpl) $r13;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r9);

     label6:
        $r14 = (androidx.compose.ui.text.font.FontListFontFamily) r36;

        $r2 = virtualinvoke $r14.<androidx.compose.ui.text.font.FontListFontFamily: java.util.List getFonts()>();

        r39 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke r39.<java.util.ArrayList: void <init>(int)>($i1);

        r3 = r39;

        i10 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label7:
        if i10 >= i0 goto label8;

        r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i10);

        r6 = r5;

        r7 = (androidx.compose.ui.text.font.Font) r6;

        r8 = (java.util.Collection) r3;

        r40 = new androidx.compose.ui.text.font.TypefaceRequest;

        $r21 = r35.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor>;

        $r22 = interfaceinvoke $r21.<androidx.compose.ui.text.font.PlatformResolveInterceptor: androidx.compose.ui.text.font.FontFamily interceptFontFamily(androidx.compose.ui.text.font.FontFamily)>(r36);

        $r23 = r35.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor>;

        $r24 = interfaceinvoke r7.<androidx.compose.ui.text.font.Font: androidx.compose.ui.text.font.FontWeight getWeight()>();

        $r25 = interfaceinvoke $r23.<androidx.compose.ui.text.font.PlatformResolveInterceptor: androidx.compose.ui.text.font.FontWeight interceptFontWeight(androidx.compose.ui.text.font.FontWeight)>($r24);

        $r26 = r35.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor>;

        $i2 = interfaceinvoke r7.<androidx.compose.ui.text.font.Font: int getStyle-_-LCdwA()>();

        $i3 = interfaceinvoke $r26.<androidx.compose.ui.text.font.PlatformResolveInterceptor: int interceptFontStyle-T2F_aPo(int)>($i2);

        $r27 = <androidx.compose.ui.text.font.FontSynthesis: androidx.compose.ui.text.font.FontSynthesis$Companion Companion>;

        $i4 = virtualinvoke $r27.<androidx.compose.ui.text.font.FontSynthesis$Companion: int getAll-GVVA2EU()>();

        $r28 = r35.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader>;

        $r29 = interfaceinvoke $r28.<androidx.compose.ui.text.font.PlatformFontLoader: java.lang.Object getCacheKey()>();

        specialinvoke r40.<androidx.compose.ui.text.font.TypefaceRequest: void <init>(androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,int,int,java.lang.Object,kotlin.jvm.internal.DefaultConstructorMarker)>($r22, $r25, $i3, $i4, $r29, null);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r40);

        i10 = i10 + 1;

        goto label7;

     label8:
        r1 = (java.util.List) r3;

        $r17 = r35.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.TypefaceRequestCache typefaceRequestCache>;

        r41 = new androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2;

        specialinvoke r41.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: void <init>(androidx.compose.ui.text.font.FontFamilyResolverImpl)>(r35);

        $r18 = (kotlin.jvm.functions.Function1) r41;

        virtualinvoke $r17.<androidx.compose.ui.text.font.TypefaceRequestCache: void preWarmCache(java.util.List,kotlin.jvm.functions.Function1)>(r1, $r18);

        $r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r19;

     label9:
        r42 = new java.lang.IllegalStateException;

        specialinvoke r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r42;
    }

    public androidx.compose.runtime.State resolve-DPcqOEQ(androidx.compose.ui.text.font.FontFamily, androidx.compose.ui.text.font.FontWeight, int, int)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl r0;
        androidx.compose.ui.text.font.FontFamily r1, $r5;
        androidx.compose.ui.text.font.FontWeight r2, $r7;
        int i0, i1, $i2, $i3;
        androidx.compose.ui.text.font.TypefaceRequest $r3;
        androidx.compose.ui.text.font.PlatformResolveInterceptor $r4, $r6, $r8, $r9;
        androidx.compose.ui.text.font.PlatformFontLoader $r10;
        java.lang.Object $r11;
        androidx.compose.runtime.State $r12;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        r1 := @parameter0: androidx.compose.ui.text.font.FontFamily;

        r2 := @parameter1: androidx.compose.ui.text.font.FontWeight;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "fontWeight");

        $r3 = new androidx.compose.ui.text.font.TypefaceRequest;

        $r4 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor>;

        $r5 = interfaceinvoke $r4.<androidx.compose.ui.text.font.PlatformResolveInterceptor: androidx.compose.ui.text.font.FontFamily interceptFontFamily(androidx.compose.ui.text.font.FontFamily)>(r1);

        $r6 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor>;

        $r7 = interfaceinvoke $r6.<androidx.compose.ui.text.font.PlatformResolveInterceptor: androidx.compose.ui.text.font.FontWeight interceptFontWeight(androidx.compose.ui.text.font.FontWeight)>(r2);

        $r8 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor>;

        $i2 = interfaceinvoke $r8.<androidx.compose.ui.text.font.PlatformResolveInterceptor: int interceptFontStyle-T2F_aPo(int)>(i0);

        $r9 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformResolveInterceptor platformResolveInterceptor>;

        $i3 = interfaceinvoke $r9.<androidx.compose.ui.text.font.PlatformResolveInterceptor: int interceptFontSynthesis-Mscr08Y(int)>(i1);

        $r10 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader>;

        $r11 = interfaceinvoke $r10.<androidx.compose.ui.text.font.PlatformFontLoader: java.lang.Object getCacheKey()>();

        specialinvoke $r3.<androidx.compose.ui.text.font.TypefaceRequest: void <init>(androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,int,int,java.lang.Object,kotlin.jvm.internal.DefaultConstructorMarker)>($r5, $r7, $i2, $i3, $r11, null);

        $r12 = specialinvoke r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.runtime.State resolve(androidx.compose.ui.text.font.TypefaceRequest)>($r3);

        return $r12;
    }

    private final androidx.compose.runtime.State resolve(androidx.compose.ui.text.font.TypefaceRequest)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl r0;
        androidx.compose.ui.text.font.TypefaceRequest r1;
        androidx.compose.runtime.State r2;
        androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1 $r3;
        androidx.compose.ui.text.font.TypefaceRequestCache $r4;
        kotlin.jvm.functions.Function1 $r5;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        r1 := @parameter0: androidx.compose.ui.text.font.TypefaceRequest;

        $r4 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.TypefaceRequestCache typefaceRequestCache>;

        $r3 = new androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1;

        specialinvoke $r3.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: void <init>(androidx.compose.ui.text.font.FontFamilyResolverImpl,androidx.compose.ui.text.font.TypefaceRequest)>(r0, r1);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        r2 = virtualinvoke $r4.<androidx.compose.ui.text.font.TypefaceRequestCache: androidx.compose.runtime.State runCached(androidx.compose.ui.text.font.TypefaceRequest,kotlin.jvm.functions.Function1)>(r1, $r5);

        return r2;
    }

    public static final androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter access$getFontListFontFamilyTypefaceAdapter$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r0;
        androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter $r1;

        $r0 := @parameter0: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        $r1 = $r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter fontListFontFamilyTypefaceAdapter>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function1 access$getCreateDefaultTypeface$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r0;
        kotlin.jvm.functions.Function1 $r1;

        $r0 := @parameter0: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        $r1 = $r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: kotlin.jvm.functions.Function1 createDefaultTypeface>;

        return $r1;
    }

    public static final androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter access$getPlatformFamilyTypefaceAdapter$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r0;
        androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter $r1;

        $r0 := @parameter0: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        $r1 = $r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter platformFamilyTypefaceAdapter>;

        return $r1;
    }

    public static final androidx.compose.runtime.State access$resolve(androidx.compose.ui.text.font.FontFamilyResolverImpl, androidx.compose.ui.text.font.TypefaceRequest)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r0;
        androidx.compose.ui.text.font.TypefaceRequest r1;
        androidx.compose.runtime.State $r2;

        $r0 := @parameter0: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        r1 := @parameter1: androidx.compose.ui.text.font.TypefaceRequest;

        $r2 = specialinvoke $r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.runtime.State resolve(androidx.compose.ui.text.font.TypefaceRequest)>(r1);

        return $r2;
    }

androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1
<androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>
    void <init>(androidx.compose.ui.text.font.FontFamilyResolverImpl)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1 r0;
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1;

        $r1 := @parameter0: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Object invoke(androidx.compose.ui.text.font.TypefaceRequest)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1 r0;
        androidx.compose.ui.text.font.TypefaceRequest r1, $r3;
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r2;
        androidx.compose.runtime.State $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1;

        r1 := @parameter0: androidx.compose.ui.text.font.TypefaceRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r3 = staticinvoke <androidx.compose.ui.text.font.TypefaceRequest: androidx.compose.ui.text.font.TypefaceRequest copy-e1PVR60$default(androidx.compose.ui.text.font.TypefaceRequest,androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,int,int,java.lang.Object,int,java.lang.Object)>(r1, null, null, 0, 0, null, 30, null);

        $r4 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.runtime.State access$resolve(androidx.compose.ui.text.font.FontFamilyResolverImpl,androidx.compose.ui.text.font.TypefaceRequest)>($r2, $r3);

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1 r0;
        java.lang.Object r1, $r3;
        androidx.compose.ui.text.font.TypefaceRequest $r2;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.text.font.TypefaceRequest) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$createDefaultTypeface$1: java.lang.Object invoke(androidx.compose.ui.text.font.TypefaceRequest)>($r2);

        return $r3;
    }

androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1
<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object L$0>
<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object L$1>
<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object result>
<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>
<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: int label>
    void <init>(androidx.compose.ui.text.font.FontFamilyResolverImpl, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1 r0;
        androidx.compose.ui.text.font.FontFamilyResolverImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1;

        r1 := @parameter0: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r3;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: int label> = $i1;

        $r3 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontFamilyResolverImpl: java.lang.Object preload(androidx.compose.ui.text.font.FontFamily,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1
<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1 r0;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.text.font.TypefaceResult$Immutable)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1 r0;
        androidx.compose.ui.text.font.TypefaceResult$Immutable r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1;

        r1 := @parameter0: androidx.compose.ui.text.font.TypefaceResult$Immutable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.text.font.TypefaceResult$Immutable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.text.font.TypefaceResult$Immutable) r1;

        virtualinvoke r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1: void invoke(androidx.compose.ui.text.font.TypefaceResult$Immutable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1 $r0;

        $r0 = new androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1;

        specialinvoke $r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1: void <init>()>();

        <androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2
<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2 r0;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.text.font.TypefaceResult$Immutable)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2 r0;
        androidx.compose.ui.text.font.TypefaceResult$Immutable r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2;

        r1 := @parameter0: androidx.compose.ui.text.font.TypefaceResult$Immutable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2 r0;
        java.lang.Object r1;
        androidx.compose.ui.text.font.TypefaceResult$Immutable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.text.font.TypefaceResult$Immutable) r1;

        virtualinvoke r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2: void invoke(androidx.compose.ui.text.font.TypefaceResult$Immutable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2 $r0;

        $r0 = new androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2;

        specialinvoke $r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2: void <init>()>();

        <androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2
<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>
    void <init>(androidx.compose.ui.text.font.FontFamilyResolverImpl)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2 r0;
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2;

        $r1 := @parameter0: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.ui.text.font.TypefaceResult invoke(androidx.compose.ui.text.font.TypefaceRequest)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2 r0;
        androidx.compose.ui.text.font.TypefaceRequest r1;
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r2, $r4, $r7, $r10, $r12, $r15;
        androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter $r3;
        androidx.compose.ui.text.font.PlatformFontLoader $r5, $r13;
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1 $r6;
        kotlin.jvm.functions.Function1 $r8, $r9, $r16, $r17;
        androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter $r11;
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2 $r14;
        java.lang.IllegalStateException $r18;
        androidx.compose.ui.text.font.TypefaceResult $r19;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2;

        r1 := @parameter0: androidx.compose.ui.text.font.TypefaceRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeRequest");

        $r2 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r3 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter access$getFontListFontFamilyTypefaceAdapter$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)>($r2);

        $r4 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader getPlatformFontLoader$ui_text_release()>();

        $r6 = <androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$1 INSTANCE>;

        $r8 = (kotlin.jvm.functions.Function1) $r6;

        $r7 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r9 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: kotlin.jvm.functions.Function1 access$getCreateDefaultTypeface$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)>($r7);

        $r19 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter: androidx.compose.ui.text.font.TypefaceResult resolve(androidx.compose.ui.text.font.TypefaceRequest,androidx.compose.ui.text.font.PlatformFontLoader,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r1, $r5, $r8, $r9);

        if $r19 != null goto label1;

        $r10 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r11 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter access$getPlatformFamilyTypefaceAdapter$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)>($r10);

        $r12 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r13 = virtualinvoke $r12.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader getPlatformFontLoader$ui_text_release()>();

        $r14 = <androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2$2 INSTANCE>;

        $r16 = (kotlin.jvm.functions.Function1) $r14;

        $r15 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r17 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: kotlin.jvm.functions.Function1 access$getCreateDefaultTypeface$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)>($r15);

        $r19 = virtualinvoke $r11.<androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter: androidx.compose.ui.text.font.TypefaceResult resolve(androidx.compose.ui.text.font.TypefaceRequest,androidx.compose.ui.text.font.PlatformFontLoader,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r1, $r13, $r16, $r17);

        if $r19 != null goto label1;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not load font");

        throw $r18;

     label1:
        return $r19;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2 r0;
        java.lang.Object r1;
        androidx.compose.ui.text.font.TypefaceRequest $r2;
        androidx.compose.ui.text.font.TypefaceResult $r3;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.text.font.TypefaceRequest) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$preload$2: androidx.compose.ui.text.font.TypefaceResult invoke(androidx.compose.ui.text.font.TypefaceRequest)>($r2);

        return $r3;
    }

androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1
<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>
<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.TypefaceRequest $typefaceRequest>
    void <init>(androidx.compose.ui.text.font.FontFamilyResolverImpl, androidx.compose.ui.text.font.TypefaceRequest)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1 r0;
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r1;
        androidx.compose.ui.text.font.TypefaceRequest $r2;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1;

        $r1 := @parameter0: androidx.compose.ui.text.font.FontFamilyResolverImpl;

        $r2 := @parameter1: androidx.compose.ui.text.font.TypefaceRequest;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0> = $r1;

        r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.TypefaceRequest $typefaceRequest> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.ui.text.font.TypefaceResult invoke(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1 r0;
        kotlin.jvm.functions.Function1 r1, $r8, $r15;
        androidx.compose.ui.text.font.FontFamilyResolverImpl $r2, $r4, $r7, $r9, $r11, $r14;
        androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter $r3;
        androidx.compose.ui.text.font.TypefaceRequest $r5, $r12;
        androidx.compose.ui.text.font.PlatformFontLoader $r6, $r13;
        androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter $r10;
        java.lang.IllegalStateException $r16;
        androidx.compose.ui.text.font.TypefaceResult $r17;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onAsyncCompletion");

        $r2 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r3 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter access$getFontListFontFamilyTypefaceAdapter$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)>($r2);

        $r5 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.TypefaceRequest $typefaceRequest>;

        $r4 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r6 = virtualinvoke $r4.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader getPlatformFontLoader$ui_text_release()>();

        $r7 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r8 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: kotlin.jvm.functions.Function1 access$getCreateDefaultTypeface$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)>($r7);

        $r17 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapter: androidx.compose.ui.text.font.TypefaceResult resolve(androidx.compose.ui.text.font.TypefaceRequest,androidx.compose.ui.text.font.PlatformFontLoader,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r5, $r6, r1, $r8);

        if $r17 != null goto label1;

        $r9 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r10 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter access$getPlatformFamilyTypefaceAdapter$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)>($r9);

        $r12 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.TypefaceRequest $typefaceRequest>;

        $r11 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r13 = virtualinvoke $r11.<androidx.compose.ui.text.font.FontFamilyResolverImpl: androidx.compose.ui.text.font.PlatformFontLoader getPlatformFontLoader$ui_text_release()>();

        $r14 = r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.FontFamilyResolverImpl this$0>;

        $r15 = staticinvoke <androidx.compose.ui.text.font.FontFamilyResolverImpl: kotlin.jvm.functions.Function1 access$getCreateDefaultTypeface$p(androidx.compose.ui.text.font.FontFamilyResolverImpl)>($r14);

        $r17 = virtualinvoke $r10.<androidx.compose.ui.text.font.PlatformFontFamilyTypefaceAdapter: androidx.compose.ui.text.font.TypefaceResult resolve(androidx.compose.ui.text.font.TypefaceRequest,androidx.compose.ui.text.font.PlatformFontLoader,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r12, $r13, r1, $r15);

        if $r17 != null goto label1;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not load font");

        throw $r16;

     label1:
        return $r17;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1 r0;
        java.lang.Object r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.compose.ui.text.font.TypefaceResult $r3;

        r0 := @this: androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.jvm.functions.Function1) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.text.font.FontFamilyResolverImpl$resolve$result$1: androidx.compose.ui.text.font.TypefaceResult invoke(kotlin.jvm.functions.Function1)>($r2);

        return $r3;
    }

