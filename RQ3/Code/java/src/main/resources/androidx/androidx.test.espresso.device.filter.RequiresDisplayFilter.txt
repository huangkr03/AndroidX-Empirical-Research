androidx.test.espresso.device.filter.RequiresDisplayFilter
<androidx.test.espresso.device.filter.RequiresDisplayFilter: android.app.Instrumentation instrumentation>
    public void <init>(android.app.Instrumentation)
    {
        androidx.test.espresso.device.filter.RequiresDisplayFilter r0;
        android.app.Instrumentation r1;

        r0 := @this: androidx.test.espresso.device.filter.RequiresDisplayFilter;

        r1 := @parameter0: android.app.Instrumentation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "instrumentation");

        specialinvoke r0.<androidx.test.filters.AbstractFilter: void <init>()>();

        r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: android.app.Instrumentation instrumentation> = r1;

        return;
    }

    public void <init>(android.app.Instrumentation, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.test.espresso.device.filter.RequiresDisplayFilter r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        android.app.Instrumentation $r2, r3;

        r0 := @this: androidx.test.espresso.device.filter.RequiresDisplayFilter;

        r3 := @parameter0: android.app.Instrumentation;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r2 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "getInstrumentation()");

        r3 = $r2;

     label1:
        specialinvoke r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: void <init>(android.app.Instrumentation)>(r3);

        return;
    }

    protected boolean evaluateTest(org.junit.runner.Description)
    {
        androidx.test.espresso.device.filter.RequiresDisplayFilter r0;
        org.junit.runner.Description r1;
        androidx.test.espresso.device.filter.RequiresDisplay r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r3, $r4;
        androidx.test.espresso.device.sizeclass.WidthSizeClass$Companion$WidthSizeClassEnum $r5, $r9;
        androidx.test.espresso.device.sizeclass.WidthSizeClass$Companion $r6, $r7;
        int $i0, $i1;
        androidx.test.espresso.device.sizeclass.WidthSizeClass $r8;
        androidx.test.espresso.device.sizeclass.HeightSizeClass$Companion$HeightSizeClassEnum $r10, $r14;
        androidx.test.espresso.device.sizeclass.HeightSizeClass$Companion $r11, $r12;
        androidx.test.espresso.device.sizeclass.HeightSizeClass $r13;
        java.util.List r15;

        r0 := @this: androidx.test.espresso.device.filter.RequiresDisplayFilter;

        r1 := @parameter0: org.junit.runner.Description;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "description");

        r15 = virtualinvoke r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: java.util.List getMethodAnnotations(org.junit.runner.Description)>(r1);

        $z0 = interfaceinvoke r15.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r15 = virtualinvoke r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: java.util.List getClassAnnotations(org.junit.runner.Description)>(r1);

     label1:
        $z1 = interfaceinvoke r15.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r3 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(0);

        $z2 = $r3 instanceof androidx.test.espresso.device.filter.RequiresDisplay;

        if $z2 == 0 goto label4;

        $r4 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.test.espresso.device.filter.RequiresDisplay");

        r2 = (androidx.test.espresso.device.filter.RequiresDisplay) $r4;

        $r5 = interfaceinvoke r2.<androidx.test.espresso.device.filter.RequiresDisplay: androidx.test.espresso.device.sizeclass.WidthSizeClass$Companion$WidthSizeClassEnum widthSizeClass()>();

        $r6 = <androidx.test.espresso.device.sizeclass.WidthSizeClass: androidx.test.espresso.device.sizeclass.WidthSizeClass$Companion Companion>;

        $r7 = <androidx.test.espresso.device.sizeclass.WidthSizeClass: androidx.test.espresso.device.sizeclass.WidthSizeClass$Companion Companion>;

        $i0 = specialinvoke r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: int getWidthDp()>();

        $r8 = virtualinvoke $r7.<androidx.test.espresso.device.sizeclass.WidthSizeClass$Companion: androidx.test.espresso.device.sizeclass.WidthSizeClass compute(int)>($i0);

        $r9 = virtualinvoke $r6.<androidx.test.espresso.device.sizeclass.WidthSizeClass$Companion: androidx.test.espresso.device.sizeclass.WidthSizeClass$Companion$WidthSizeClassEnum getEnum(androidx.test.espresso.device.sizeclass.WidthSizeClass)>($r8);

        if $r5 != $r9 goto label2;

        $r10 = interfaceinvoke r2.<androidx.test.espresso.device.filter.RequiresDisplay: androidx.test.espresso.device.sizeclass.HeightSizeClass$Companion$HeightSizeClassEnum heightSizeClass()>();

        $r11 = <androidx.test.espresso.device.sizeclass.HeightSizeClass: androidx.test.espresso.device.sizeclass.HeightSizeClass$Companion Companion>;

        $r12 = <androidx.test.espresso.device.sizeclass.HeightSizeClass: androidx.test.espresso.device.sizeclass.HeightSizeClass$Companion Companion>;

        $i1 = specialinvoke r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: int getHeightDp()>();

        $r13 = virtualinvoke $r12.<androidx.test.espresso.device.sizeclass.HeightSizeClass$Companion: androidx.test.espresso.device.sizeclass.HeightSizeClass compute(int)>($i1);

        $r14 = virtualinvoke $r11.<androidx.test.espresso.device.sizeclass.HeightSizeClass$Companion: androidx.test.espresso.device.sizeclass.HeightSizeClass$Companion$HeightSizeClassEnum getEnum(androidx.test.espresso.device.sizeclass.HeightSizeClass)>($r13);

        if $r10 != $r14 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 1;
    }

    public java.lang.String describe()
    {
        androidx.test.espresso.device.filter.RequiresDisplayFilter r0;

        r0 := @this: androidx.test.espresso.device.filter.RequiresDisplayFilter;

        return "skip tests annotated with RequiresDisplay if necessary";
    }

    private final int getWidthDp()
    {
        androidx.test.espresso.device.filter.RequiresDisplayFilter r0;
        android.util.DisplayMetrics r1;
        android.app.Instrumentation $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        int $i0, $i1;
        float $f0, $f1, $f2;

        r0 := @this: androidx.test.espresso.device.filter.RequiresDisplayFilter;

        $r2 = r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: android.app.Instrumentation instrumentation>;

        $r3 = virtualinvoke $r2.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f1 = (float) $i0;

        $f0 = r1.<android.util.DisplayMetrics: float density>;

        $f2 = $f1 / $f0;

        $i1 = (int) $f2;

        return $i1;
    }

    private final int getHeightDp()
    {
        androidx.test.espresso.device.filter.RequiresDisplayFilter r0;
        android.util.DisplayMetrics r1;
        android.app.Instrumentation $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        int $i0, $i1;
        float $f0, $f1, $f2;

        r0 := @this: androidx.test.espresso.device.filter.RequiresDisplayFilter;

        $r2 = r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: android.app.Instrumentation instrumentation>;

        $r3 = virtualinvoke $r2.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f1 = (float) $i0;

        $f0 = r1.<android.util.DisplayMetrics: float density>;

        $f2 = $f1 / $f0;

        $i1 = (int) $f2;

        return $i1;
    }

    public void <init>()
    {
        androidx.test.espresso.device.filter.RequiresDisplayFilter r0;

        r0 := @this: androidx.test.espresso.device.filter.RequiresDisplayFilter;

        specialinvoke r0.<androidx.test.espresso.device.filter.RequiresDisplayFilter: void <init>(android.app.Instrumentation,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

