androidx.camera.core.impl.MultiValueSet
<androidx.camera.core.impl.MultiValueSet: java.util.Set mSet>
    public void <init>()
    {
        androidx.camera.core.impl.MultiValueSet r0;
        java.util.HashSet $r1;

        r0 := @this: androidx.camera.core.impl.MultiValueSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<androidx.camera.core.impl.MultiValueSet: java.util.Set mSet> = $r1;

        return;
    }

    public void addAll(java.util.List)
    {
        androidx.camera.core.impl.MultiValueSet r0;
        java.util.List r1;
        java.util.Set $r2;

        r0 := @this: androidx.camera.core.impl.MultiValueSet;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.camera.core.impl.MultiValueSet: java.util.Set mSet>;

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public java.util.List getAllItems()
    {
        androidx.camera.core.impl.MultiValueSet r0;
        java.util.ArrayList $r1;
        java.util.Set $r2;
        java.util.List $r3;

        r0 := @this: androidx.camera.core.impl.MultiValueSet;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<androidx.camera.core.impl.MultiValueSet: java.util.Set mSet>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r3;
    }

<androidx.camera.core.impl.MultiValueSet: androidx.camera.core.impl.MultiValueSet clone()>
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        androidx.camera.core.impl.MultiValueSet r0, $r1;

        r0 := @this: androidx.camera.core.impl.MultiValueSet;

        $r1 = virtualinvoke r0.<androidx.camera.core.impl.MultiValueSet: androidx.camera.core.impl.MultiValueSet clone()>();

        return $r1;
    }

