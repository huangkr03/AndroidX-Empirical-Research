androidx.recyclerview.selection.MotionInputHandler
<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker>
<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.ItemKeyProvider mKeyProvider>
<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.FocusDelegate mFocusDelegate>
    void <init>(androidx.recyclerview.selection.SelectionTracker, androidx.recyclerview.selection.ItemKeyProvider, androidx.recyclerview.selection.FocusDelegate)
    {
        androidx.recyclerview.selection.MotionInputHandler r0;
        androidx.recyclerview.selection.SelectionTracker r1;
        androidx.recyclerview.selection.ItemKeyProvider r2;
        androidx.recyclerview.selection.FocusDelegate r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.selection.MotionInputHandler;

        r1 := @parameter0: androidx.recyclerview.selection.SelectionTracker;

        r2 := @parameter1: androidx.recyclerview.selection.ItemKeyProvider;

        r3 := @parameter2: androidx.recyclerview.selection.FocusDelegate;

        specialinvoke r0.<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>();

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z0);

        if r2 == null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z1);

        if r3 == null goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z2);

        r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker> = r1;

        r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.ItemKeyProvider mKeyProvider> = r2;

        r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.FocusDelegate mFocusDelegate> = r3;

        return;
    }

    final boolean selectItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)
    {
        androidx.recyclerview.selection.MotionInputHandler r0;
        androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails r1;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.selection.SelectionTracker $r2, $r4, $r8;
        java.lang.Object $r3;
        androidx.recyclerview.selection.Selection $r5;
        int $i0, $i1;
        androidx.recyclerview.selection.FocusDelegate $r6, $r7;

        r0 := @this: androidx.recyclerview.selection.MotionInputHandler;

        r1 := @parameter0: androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails;

        if r1 == null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z3);

        $z0 = staticinvoke <androidx.recyclerview.selection.MotionInputHandler: boolean hasPosition(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)>(r1);

        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z0);

        $z1 = staticinvoke <androidx.recyclerview.selection.MotionInputHandler: boolean hasSelectionKey(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)>(r1);

        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z1);

        $r2 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker>;

        $r3 = virtualinvoke r1.<androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: java.lang.Object getSelectionKey()>();

        $z2 = virtualinvoke $r2.<androidx.recyclerview.selection.SelectionTracker: boolean select(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        $r8 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker>;

        $i1 = virtualinvoke r1.<androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: int getPosition()>();

        virtualinvoke $r8.<androidx.recyclerview.selection.SelectionTracker: void anchorRange(int)>($i1);

     label3:
        $r4 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.selection.SelectionTracker: androidx.recyclerview.selection.Selection getSelection()>();

        $i0 = virtualinvoke $r5.<androidx.recyclerview.selection.Selection: int size()>();

        if $i0 != 1 goto label4;

        $r7 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.FocusDelegate mFocusDelegate>;

        virtualinvoke $r7.<androidx.recyclerview.selection.FocusDelegate: void focusItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)>(r1);

        goto label5;

     label4:
        $r6 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.FocusDelegate mFocusDelegate>;

        virtualinvoke $r6.<androidx.recyclerview.selection.FocusDelegate: void clearFocus()>();

     label5:
        return 1;
    }

    protected final boolean focusItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)
    {
        androidx.recyclerview.selection.MotionInputHandler r0;
        androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails r1;
        boolean $z0, $z2;
        androidx.recyclerview.selection.SelectionTracker $r2;
        androidx.recyclerview.selection.FocusDelegate $r3;

        r0 := @this: androidx.recyclerview.selection.MotionInputHandler;

        r1 := @parameter0: androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails;

        if r1 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z2);

        $z0 = staticinvoke <androidx.recyclerview.selection.MotionInputHandler: boolean hasSelectionKey(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)>(r1);

        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z0);

        $r2 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker>;

        virtualinvoke $r2.<androidx.recyclerview.selection.SelectionTracker: boolean clearSelection()>();

        $r3 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.FocusDelegate mFocusDelegate>;

        virtualinvoke $r3.<androidx.recyclerview.selection.FocusDelegate: void focusItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)>(r1);

        return 1;
    }

    protected final void extendSelectionRange(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)
    {
        androidx.recyclerview.selection.MotionInputHandler r0;
        androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails r1;
        androidx.recyclerview.selection.ItemKeyProvider $r2;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.selection.SelectionTracker $r3;
        int $i0;
        androidx.recyclerview.selection.FocusDelegate $r4;

        r0 := @this: androidx.recyclerview.selection.MotionInputHandler;

        r1 := @parameter0: androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails;

        $r2 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.ItemKeyProvider mKeyProvider>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.selection.ItemKeyProvider: boolean hasAccess(int)>(0);

        staticinvoke <android.support.v4.util.Preconditions: void checkState(boolean)>($z0);

        $z1 = staticinvoke <androidx.recyclerview.selection.MotionInputHandler: boolean hasPosition(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)>(r1);

        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z1);

        $z2 = staticinvoke <androidx.recyclerview.selection.MotionInputHandler: boolean hasSelectionKey(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)>(r1);

        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z2);

        $r3 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker>;

        $i0 = virtualinvoke r1.<androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: int getPosition()>();

        virtualinvoke $r3.<androidx.recyclerview.selection.SelectionTracker: void extendRange(int)>($i0);

        $r4 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.FocusDelegate mFocusDelegate>;

        virtualinvoke $r4.<androidx.recyclerview.selection.FocusDelegate: void focusItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)>(r1);

        return;
    }

    final boolean isRangeExtension(android.view.MotionEvent)
    {
        androidx.recyclerview.selection.MotionInputHandler r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.selection.SelectionTracker $r2;
        androidx.recyclerview.selection.ItemKeyProvider $r3;

        r0 := @this: androidx.recyclerview.selection.MotionInputHandler;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = staticinvoke <androidx.recyclerview.selection.MotionEvents: boolean isShiftKeyPressed(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker>;

        $z1 = virtualinvoke $r2.<androidx.recyclerview.selection.SelectionTracker: boolean isRangeActive()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.ItemKeyProvider mKeyProvider>;

        $z2 = virtualinvoke $r3.<androidx.recyclerview.selection.ItemKeyProvider: boolean hasAccess(int)>(0);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    boolean shouldClearSelection(android.view.MotionEvent, androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)
    {
        androidx.recyclerview.selection.MotionInputHandler r0;
        android.view.MotionEvent r1;
        androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails r2;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.selection.SelectionTracker $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.recyclerview.selection.MotionInputHandler;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails;

        $z0 = staticinvoke <androidx.recyclerview.selection.MotionEvents: boolean isCtrlKeyPressed(android.view.MotionEvent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: boolean inSelectionHotspot(android.view.MotionEvent)>(r1);

        if $z1 != 0 goto label1;

        $r3 = r0.<androidx.recyclerview.selection.MotionInputHandler: androidx.recyclerview.selection.SelectionTracker mSelectionTracker>;

        $r4 = virtualinvoke r2.<androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: java.lang.Object getSelectionKey()>();

        $z2 = virtualinvoke $r3.<androidx.recyclerview.selection.SelectionTracker: boolean isSelected(java.lang.Object)>($r4);

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    static boolean hasSelectionKey(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)
    {
        androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: java.lang.Object getSelectionKey()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static boolean hasPosition(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)
    {
        androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: int getPosition()>();

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

