com.google.common.flogger.context.NoOpContextDataProvider
<com.google.common.flogger.context.NoOpContextDataProvider: com.google.common.flogger.context.ContextDataProvider NO_OP_INSTANCE>
<com.google.common.flogger.context.NoOpContextDataProvider: com.google.common.flogger.context.ScopedLoggingContext noOpContext>
    static void <clinit>()
    {
        com.google.common.flogger.context.NoOpContextDataProvider $r0;

        $r0 = new com.google.common.flogger.context.NoOpContextDataProvider;

        specialinvoke $r0.<com.google.common.flogger.context.NoOpContextDataProvider: void <init>()>();

        <com.google.common.flogger.context.NoOpContextDataProvider: com.google.common.flogger.context.ContextDataProvider NO_OP_INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        com.google.common.flogger.context.NoOpContextDataProvider $r0;
        com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext $r1;

        $r0 := @this: com.google.common.flogger.context.NoOpContextDataProvider;

        specialinvoke $r0.<com.google.common.flogger.context.ContextDataProvider: void <init>()>();

        $r1 = new com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext;

        specialinvoke $r1.<com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext: void <init>(com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext-IA)>(null);

        $r0.<com.google.common.flogger.context.NoOpContextDataProvider: com.google.common.flogger.context.ScopedLoggingContext noOpContext> = $r1;

        return;
    }

    static final com.google.common.flogger.context.ContextDataProvider getNoOpInstance()
    {
        com.google.common.flogger.context.ContextDataProvider r0;

        r0 = <com.google.common.flogger.context.NoOpContextDataProvider: com.google.common.flogger.context.ContextDataProvider NO_OP_INSTANCE>;

        return r0;
    }

    public java.lang.String toString()
    {
        com.google.common.flogger.context.NoOpContextDataProvider $r0;

        $r0 := @this: com.google.common.flogger.context.NoOpContextDataProvider;

        return "No-op Provider";
    }

com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext-IA
com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext
<com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext: java.util.concurrent.atomic.AtomicBoolean haveWarned>
    private void <init>()
    {
        com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext $r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        $r0 := @this: com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext;

        specialinvoke $r0.<com.google.common.flogger.context.ScopedLoggingContext: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        $r0.<com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext: java.util.concurrent.atomic.AtomicBoolean haveWarned> = $r1;

        return;
    }

    void <init>(com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext-IA)
    {
        com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext $r0;
        com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext-IA $r1;

        $r0 := @this: com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext;

        $r1 := @parameter0: com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext-IA;

        specialinvoke $r0.<com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext: void <init>()>();

        return;
    }

    public void close()
    {
        com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext $r0;

        $r0 := @this: com.google.common.flogger.context.NoOpContextDataProvider$NoOpScopedLoggingContext;

        return;
    }

