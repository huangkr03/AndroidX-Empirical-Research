kotlinx.coroutines.DebugStringsKt
    public static final java.lang.String getClassSimpleName(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }

    public static final java.lang.String getHexAddress(java.lang.Object)
    {
        java.lang.Object $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        return $r1;
    }

    public static final java.lang.String toDebugString(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        boolean $z0;
        java.lang.String $r1, $r7;
        kotlin.Result$Companion $r2;
        java.lang.StringBuilder $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        java.lang.Class $r6;

        $r0 := @parameter0: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof kotlinx.coroutines.internal.DispatchedContinuation;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;

     label1:
        $r2 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r1 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>($r0);

        $r3 = new java.lang.StringBuilder;

     label2:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r1);

        goto label5;

     label4:
        $r5 := @caughtexception;

        $r2 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r5);

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r4);

     label5:
        $r5 = staticinvoke <kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r4);

        if $r5 != null goto label6;

        goto label7;

     label6:
        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>($r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r1 = (java.lang.String) $r4;

        return $r1;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

