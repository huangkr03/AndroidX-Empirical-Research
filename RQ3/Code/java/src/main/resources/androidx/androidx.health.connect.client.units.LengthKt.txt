androidx.health.connect.client.units.LengthKt
    public static final androidx.health.connect.client.units.Length getMeters(double)
    {
        double $d0;
        androidx.health.connect.client.units.Length$Companion $r0;
        androidx.health.connect.client.units.Length $r1;

        $d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Length: androidx.health.connect.client.units.Length$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Length$Companion: androidx.health.connect.client.units.Length meters(double)>($d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Length getMeters(long)
    {
        long $l0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getMeters(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getMeters(float)
    {
        float $f0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getMeters(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getMeters(int)
    {
        int $i0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $i0 := @parameter0: int;

        $d0 = (double) $i0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getMeters(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getKilometers(double)
    {
        double $d0;
        androidx.health.connect.client.units.Length$Companion $r0;
        androidx.health.connect.client.units.Length $r1;

        $d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Length: androidx.health.connect.client.units.Length$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Length$Companion: androidx.health.connect.client.units.Length kilometers(double)>($d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Length getKilometers(float)
    {
        float $f0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getKilometers(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getKilometers(long)
    {
        long $l0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getKilometers(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getKilometers(int)
    {
        int $i0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $i0 := @parameter0: int;

        $d0 = (double) $i0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getKilometers(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getMiles(double)
    {
        double $d0;
        androidx.health.connect.client.units.Length$Companion $r0;
        androidx.health.connect.client.units.Length $r1;

        $d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Length: androidx.health.connect.client.units.Length$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Length$Companion: androidx.health.connect.client.units.Length miles(double)>($d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Length getMiles(float)
    {
        float $f0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getMiles(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getMiles(long)
    {
        long $l0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getMiles(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getMiles(int)
    {
        int $i0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $i0 := @parameter0: int;

        $d0 = (double) $i0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getMiles(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getInches(double)
    {
        double $d0;
        androidx.health.connect.client.units.Length$Companion $r0;
        androidx.health.connect.client.units.Length $r1;

        $d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Length: androidx.health.connect.client.units.Length$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Length$Companion: androidx.health.connect.client.units.Length inches(double)>($d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Length getInches(float)
    {
        float $f0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getInches(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getInches(long)
    {
        long $l0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getInches(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getInches(int)
    {
        int $i0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $i0 := @parameter0: int;

        $d0 = (double) $i0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getInches(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getFeet(double)
    {
        double $d0;
        androidx.health.connect.client.units.Length$Companion $r0;
        androidx.health.connect.client.units.Length $r1;

        $d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Length: androidx.health.connect.client.units.Length$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Length$Companion: androidx.health.connect.client.units.Length feet(double)>($d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Length getFeet(float)
    {
        float $f0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getFeet(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getFeet(long)
    {
        long $l0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getFeet(double)>($d0);

        return $r0;
    }

    public static final androidx.health.connect.client.units.Length getFeet(int)
    {
        int $i0;
        double $d0;
        androidx.health.connect.client.units.Length $r0;

        $i0 := @parameter0: int;

        $d0 = (double) $i0;

        $r0 = staticinvoke <androidx.health.connect.client.units.LengthKt: androidx.health.connect.client.units.Length getFeet(double)>($d0);

        return $r0;
    }

