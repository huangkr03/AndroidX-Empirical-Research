kotlin.jvm.internal.PackageReference
<kotlin.jvm.internal.PackageReference: java.lang.Class jClass>
<kotlin.jvm.internal.PackageReference: java.lang.String moduleName>
    public void <init>(java.lang.Class, java.lang.String)
    {
        kotlin.jvm.internal.PackageReference $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        $r0 := @this: kotlin.jvm.internal.PackageReference;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "jClass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "moduleName");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.jvm.internal.PackageReference: java.lang.Class jClass> = $r1;

        $r0.<kotlin.jvm.internal.PackageReference: java.lang.String moduleName> = $r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.jvm.internal.PackageReference $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.Class $r2, $r3;

        $r0 := @this: kotlin.jvm.internal.PackageReference;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlin.jvm.internal.PackageReference;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()>();

        $r0 = (kotlin.jvm.internal.PackageReference) $r1;

        $r3 = virtualinvoke $r0.<kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Class getJClass()
    {
        kotlin.jvm.internal.PackageReference $r0;
        java.lang.Class r1;

        $r0 := @this: kotlin.jvm.internal.PackageReference;

        r1 = $r0.<kotlin.jvm.internal.PackageReference: java.lang.Class jClass>;

        return r1;
    }

    public java.util.Collection getMembers()
    {
        kotlin.jvm.internal.PackageReference $r0;
        kotlin.jvm.KotlinReflectionNotSupportedError $r1;

        $r0 := @this: kotlin.jvm.internal.PackageReference;

        $r1 = new kotlin.jvm.KotlinReflectionNotSupportedError;

        specialinvoke $r1.<kotlin.jvm.KotlinReflectionNotSupportedError: void <init>()>();

        throw $r1;
    }

    public int hashCode()
    {
        kotlin.jvm.internal.PackageReference $r0;
        java.lang.Class $r1;
        int $i0;

        $r0 := @this: kotlin.jvm.internal.PackageReference;

        $r1 = virtualinvoke $r0.<kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Class: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        kotlin.jvm.internal.PackageReference $r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @this: kotlin.jvm.internal.PackageReference;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Kotlin reflection is not available)");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

