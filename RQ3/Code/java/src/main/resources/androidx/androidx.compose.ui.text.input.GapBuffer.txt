androidx.compose.ui.text.input.GapBuffer
<androidx.compose.ui.text.input.GapBuffer: int capacity>
<androidx.compose.ui.text.input.GapBuffer: char[] buffer>
<androidx.compose.ui.text.input.GapBuffer: int gapStart>
<androidx.compose.ui.text.input.GapBuffer: int gapEnd>
    public void <init>(char[], int, int)
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        char[] r1;
        int i0, i1, $i2;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initBuffer");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = lengthof r1;

        r0.<androidx.compose.ui.text.input.GapBuffer: int capacity> = $i2;

        r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer> = r1;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart> = i0;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd> = i1;

        return;
    }

    private final int gapLength()
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        $i1 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        $i0 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public final char get(int)
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r1, $r2;
        char $c6, $c7;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        if i0 >= $i1 goto label1;

        $r2 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $c7 = $r2[i0];

        return $c7;

     label1:
        $r1 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $i2 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        $i4 = i0 - $i2;

        $i3 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        $i5 = $i4 + $i3;

        $c6 = $r1[$i5];

        return $c6;
    }

    private final void makeSureAvailableSpace(int)
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        char[] r1, $r2, $r4;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        i0 := @parameter0: int;

        $i4 = specialinvoke r0.<androidx.compose.ui.text.input.GapBuffer: int gapLength()>();

        if i0 > $i4 goto label1;

        return;

     label1:
        $i5 = specialinvoke r0.<androidx.compose.ui.text.input.GapBuffer: int gapLength()>();

        i1 = i0 - $i5;

        $i6 = r0.<androidx.compose.ui.text.input.GapBuffer: int capacity>;

        i15 = $i6 * 2;

     label2:
        $i7 = r0.<androidx.compose.ui.text.input.GapBuffer: int capacity>;

        $i8 = i15 - $i7;

        if $i8 >= i1 goto label3;

        i15 = i15 * 2;

        goto label2;

     label3:
        r1 = newarray (char)[i15];

        $r2 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $i9 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        staticinvoke <kotlin.collections.ArraysKt: char[] copyInto(char[],char[],int,int,int)>($r2, r1, 0, 0, $i9);

        $i11 = r0.<androidx.compose.ui.text.input.GapBuffer: int capacity>;

        $i10 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        i2 = $i11 - $i10;

        i3 = i15 - i2;

        $r4 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $i14 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        $i12 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        $i13 = $i12 + i2;

        staticinvoke <kotlin.collections.ArraysKt: char[] copyInto(char[],char[],int,int,int)>($r4, r1, i3, $i14, $i13);

        r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer> = r1;

        r0.<androidx.compose.ui.text.input.GapBuffer: int capacity> = i15;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd> = i3;

        return;
    }

    private final void delete(int, int)
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24;
        char[] $r1, $r2, $r4, $r5;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        if i0 >= $i4 goto label1;

        $i16 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        if i1 > $i16 goto label1;

        $i17 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        i23 = $i17 - i1;

        $r5 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $r4 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $i18 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        $i20 = $i18 - i23;

        $i19 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        staticinvoke <kotlin.collections.ArraysKt: char[] copyInto(char[],char[],int,int,int)>($r5, $r4, $i20, i1, $i19);

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart> = i0;

        $i21 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        $i22 = $i21 - i23;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd> = $i22;

        goto label3;

     label1:
        $i5 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        if i0 >= $i5 goto label2;

        $i13 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        if i1 < $i13 goto label2;

        $i14 = specialinvoke r0.<androidx.compose.ui.text.input.GapBuffer: int gapLength()>();

        $i15 = i1 + $i14;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd> = $i15;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart> = i0;

        goto label3;

     label2:
        $i6 = specialinvoke r0.<androidx.compose.ui.text.input.GapBuffer: int gapLength()>();

        i24 = i0 + $i6;

        $i7 = specialinvoke r0.<androidx.compose.ui.text.input.GapBuffer: int gapLength()>();

        i2 = i1 + $i7;

        $i8 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        i3 = i24 - $i8;

        $r2 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $r1 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $i10 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        $i9 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        staticinvoke <kotlin.collections.ArraysKt: char[] copyInto(char[],char[],int,int,int)>($r2, $r1, $i10, $i9, i24);

        $i11 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        $i12 = $i11 + i3;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart> = $i12;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd> = i2;

     label3:
        return;
    }

    public final void replace(int, int, java.lang.String)
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r1;
        char[] $r2;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "text");

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = i1 - i0;

        $i4 = $i2 - $i3;

        specialinvoke r0.<androidx.compose.ui.text.input.GapBuffer: void makeSureAvailableSpace(int)>($i4);

        specialinvoke r0.<androidx.compose.ui.text.input.GapBuffer: void delete(int,int)>(i0, i1);

        $r2 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $i5 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        staticinvoke <androidx.compose.ui.text.input.GapBufferKt: void access$toCharArray(java.lang.String,char[],int)>(r1, $r2, $i5);

        $i6 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        $i8 = $i6 + $i7;

        r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart> = $i8;

        return;
    }

    public final void append(java.lang.StringBuilder)
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        java.lang.StringBuilder r1;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r2, $r4;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        r1 := @parameter0: java.lang.StringBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "builder");

        $r2 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $i0 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapStart>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r2, 0, $i0);

        $r4 = r0.<androidx.compose.ui.text.input.GapBuffer: char[] buffer>;

        $i4 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        $i2 = r0.<androidx.compose.ui.text.input.GapBuffer: int capacity>;

        $i1 = r0.<androidx.compose.ui.text.input.GapBuffer: int gapEnd>;

        $i3 = $i2 - $i1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r4, $i4, $i3);

        return;
    }

    public final int length()
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        $i0 = r0.<androidx.compose.ui.text.input.GapBuffer: int capacity>;

        $i1 = specialinvoke r0.<androidx.compose.ui.text.input.GapBuffer: int gapLength()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.text.input.GapBuffer r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.CharSequence $r4;
        java.lang.String $r6;

        r0 := @this: androidx.compose.ui.text.input.GapBuffer;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        $r4 = (java.lang.CharSequence) r1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "StringBuilder().apply { append(this) }.toString()");

        return $r6;
    }

