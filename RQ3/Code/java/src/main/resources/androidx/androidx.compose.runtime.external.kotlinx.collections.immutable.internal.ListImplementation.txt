androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation
<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation INSTANCE>
    private void <init>()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation r0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void checkElementIndex$runtime_release(int, int)
    {
        int i0, i1;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 < i1 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label2:
        return;
    }

    public static final void checkPositionIndex$runtime_release(int, int)
    {
        int i0, i1;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 <= i1 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label2:
        return;
    }

    public static final void checkRangeIndexes$runtime_release(int, int, int)
    {
        int i0, i1, i2;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r8, $r15;
        java.lang.IllegalArgumentException $r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 < 0 goto label1;

        if i1 <= i2 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromIndex: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", toIndex: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r0;

     label2:
        if i0 <= i1 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromIndex: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > toIndex: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label3:
        return;
    }

    public static final int orderedHashCode$runtime_release(java.util.Collection)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        boolean $z0;
        int $i0, i1, $i2;

        r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "c");

        i1 = 1;

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $i0 = 31 * i1;

        if r2 == null goto label2;

        $i2 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        goto label3;

     label2:
        $i2 = 0;

     label3:
        i1 = $i0 + $i2;

        goto label1;

     label4:
        return i1;
    }

    public static final boolean orderedEquals$runtime_release(java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1;
        java.util.Iterator r2, r3;
        java.lang.Object r4, r5;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "c");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, r5);

        if $z1 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation $r0;

        $r0 = new androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation;

        specialinvoke $r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation: void <init>()>();

        <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.ListImplementation INSTANCE> = $r0;

        return;
    }

