androidx.wear.tiles.TileService
<androidx.wear.tiles.TileService: java.lang.String TAG>
<androidx.wear.tiles.TileService: java.lang.String ACTION_BIND_TILE_PROVIDER>
<androidx.wear.tiles.TileService: java.lang.String EXTRA_CLICKABLE_ID>
<androidx.wear.tiles.TileService: java.lang.String METADATA_PREVIEW_KEY>
<androidx.wear.tiles.TileService: androidx.wear.tiles.TileProvider$Stub mBinder>
    public void <init>()
    {
        androidx.wear.tiles.TileService r0;

        r0 := @this: androidx.wear.tiles.TileService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

<androidx.wear.tiles.TileService: com.google.common.util.concurrent.ListenableFuture onTileRequest(androidx.wear.tiles.RequestBuilders$TileRequest)>
<androidx.wear.tiles.TileService: com.google.common.util.concurrent.ListenableFuture onResourcesRequest(androidx.wear.tiles.RequestBuilders$ResourcesRequest)>
    protected void onTileAddEvent(androidx.wear.tiles.EventBuilders$TileAddEvent)
    {
        androidx.wear.tiles.TileService r0;
        androidx.wear.tiles.EventBuilders$TileAddEvent r1;

        r0 := @this: androidx.wear.tiles.TileService;

        r1 := @parameter0: androidx.wear.tiles.EventBuilders$TileAddEvent;

        return;
    }

    protected void onTileRemoveEvent(androidx.wear.tiles.EventBuilders$TileRemoveEvent)
    {
        androidx.wear.tiles.TileService r0;
        androidx.wear.tiles.EventBuilders$TileRemoveEvent r1;

        r0 := @this: androidx.wear.tiles.TileService;

        r1 := @parameter0: androidx.wear.tiles.EventBuilders$TileRemoveEvent;

        return;
    }

    protected void onTileEnterEvent(androidx.wear.tiles.EventBuilders$TileEnterEvent)
    {
        androidx.wear.tiles.TileService r0;
        androidx.wear.tiles.EventBuilders$TileEnterEvent r1;

        r0 := @this: androidx.wear.tiles.TileService;

        r1 := @parameter0: androidx.wear.tiles.EventBuilders$TileEnterEvent;

        return;
    }

    protected void onTileLeaveEvent(androidx.wear.tiles.EventBuilders$TileLeaveEvent)
    {
        androidx.wear.tiles.TileService r0;
        androidx.wear.tiles.EventBuilders$TileLeaveEvent r1;

        r0 := @this: androidx.wear.tiles.TileService;

        r1 := @parameter0: androidx.wear.tiles.EventBuilders$TileLeaveEvent;

        return;
    }

    public static androidx.wear.tiles.TileUpdateRequester getUpdater(android.content.Context)
    {
        android.content.Context r0;
        java.util.ArrayList r1, $r2;
        androidx.wear.tiles.SysUiTileUpdateRequester $r3;
        androidx.wear.tiles.ViewerTileUpdateRequester $r4;
        androidx.wear.tiles.CompositeTileUpdateRequester $r5;

        r0 := @parameter0: android.content.Context;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        $r3 = new androidx.wear.tiles.SysUiTileUpdateRequester;

        specialinvoke $r3.<androidx.wear.tiles.SysUiTileUpdateRequester: void <init>(android.content.Context)>(r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new androidx.wear.tiles.ViewerTileUpdateRequester;

        specialinvoke $r4.<androidx.wear.tiles.ViewerTileUpdateRequester: void <init>(android.content.Context)>(r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new androidx.wear.tiles.CompositeTileUpdateRequester;

        specialinvoke $r5.<androidx.wear.tiles.CompositeTileUpdateRequester: void <init>(java.util.List)>(r1);

        return $r5;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        androidx.wear.tiles.TileService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        androidx.wear.tiles.TileProvider$Stub $r4, $r5;
        android.os.Looper $r8;
        android.os.Handler r9;
        androidx.wear.tiles.TileService$TileProviderWrapper r10;
        android.os.IBinder r11;

        r0 := @this: androidx.wear.tiles.TileService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "androidx.wear.tiles.action.BIND_TILE_PROVIDER";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.wear.tiles.TileService: androidx.wear.tiles.TileProvider$Stub mBinder>;

        if $r4 != null goto label1;

        r10 = new androidx.wear.tiles.TileService$TileProviderWrapper;

        r9 = new android.os.Handler;

        $r8 = virtualinvoke r0.<androidx.wear.tiles.TileService: android.os.Looper getMainLooper()>();

        specialinvoke r9.<android.os.Handler: void <init>(android.os.Looper)>($r8);

        specialinvoke r10.<androidx.wear.tiles.TileService$TileProviderWrapper: void <init>(androidx.wear.tiles.TileService,android.os.Handler)>(r0, r9);

        r0.<androidx.wear.tiles.TileService: androidx.wear.tiles.TileProvider$Stub mBinder> = r10;

     label1:
        $r5 = r0.<androidx.wear.tiles.TileService: androidx.wear.tiles.TileProvider$Stub mBinder>;

        r11 = (android.os.IBinder) $r5;

        return r11;

     label2:
        return null;
    }

androidx.wear.tiles.TileService$TileProviderWrapper
<androidx.wear.tiles.TileService$TileProviderWrapper: java.lang.ref.WeakReference mServiceRef>
<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>
    void <init>(androidx.wear.tiles.TileService, android.os.Handler)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileService r1;
        android.os.Handler r2;
        java.lang.ref.WeakReference $r3;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileService;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<androidx.wear.tiles.TileProvider$Stub: void <init>()>();

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.wear.tiles.TileService$TileProviderWrapper: java.lang.ref.WeakReference mServiceRef> = $r3;

        r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler> = r2;

        return;
    }

    public int getApiVersion()
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        return 1;
    }

    public void onTileRequest(int, androidx.wear.tiles.TileRequestData, androidx.wear.tiles.TileCallback)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        int i0;
        androidx.wear.tiles.TileRequestData r1;
        androidx.wear.tiles.TileCallback r2;
        android.os.Handler $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.tiles.TileRequestData;

        r2 := @parameter2: androidx.wear.tiles.TileCallback;

        $r3 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.wear.tiles.TileService$TileProviderWrapper,androidx.wear.tiles.TileRequestData,androidx.wear.tiles.TileCallback)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.wear.tiles.TileService$TileProviderWrapper: void lambda$onTileRequest$1(androidx.wear.tiles.TileRequestData,androidx.wear.tiles.TileCallback)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void onResourcesRequest(int, androidx.wear.tiles.ResourcesRequestData, androidx.wear.tiles.ResourcesCallback)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        int i0;
        androidx.wear.tiles.ResourcesRequestData r1;
        androidx.wear.tiles.ResourcesCallback r2;
        android.os.Handler $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.tiles.ResourcesRequestData;

        r2 := @parameter2: androidx.wear.tiles.ResourcesCallback;

        $r3 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.wear.tiles.TileService$TileProviderWrapper,androidx.wear.tiles.ResourcesRequestData,androidx.wear.tiles.ResourcesCallback)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.wear.tiles.TileService$TileProviderWrapper: void lambda$onResourcesRequest$3(androidx.wear.tiles.ResourcesRequestData,androidx.wear.tiles.ResourcesCallback)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void onTileAddEvent(androidx.wear.tiles.TileAddEventData)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileAddEventData r1;
        android.os.Handler $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileAddEventData;

        $r2 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.wear.tiles.TileService$TileProviderWrapper,androidx.wear.tiles.TileAddEventData)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.wear.tiles.TileService$TileProviderWrapper: void lambda$onTileAddEvent$4(androidx.wear.tiles.TileAddEventData)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void onTileRemoveEvent(androidx.wear.tiles.TileRemoveEventData)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileRemoveEventData r1;
        android.os.Handler $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileRemoveEventData;

        $r2 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.wear.tiles.TileService$TileProviderWrapper,androidx.wear.tiles.TileRemoveEventData)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.wear.tiles.TileService$TileProviderWrapper: void lambda$onTileRemoveEvent$5(androidx.wear.tiles.TileRemoveEventData)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void onTileEnterEvent(androidx.wear.tiles.TileEnterEventData)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileEnterEventData r1;
        android.os.Handler $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileEnterEventData;

        $r2 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.wear.tiles.TileService$TileProviderWrapper,androidx.wear.tiles.TileEnterEventData)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.wear.tiles.TileService$TileProviderWrapper: void lambda$onTileEnterEvent$6(androidx.wear.tiles.TileEnterEventData)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void onTileLeaveEvent(androidx.wear.tiles.TileLeaveEventData)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileLeaveEventData r1;
        android.os.Handler $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileLeaveEventData;

        $r2 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.wear.tiles.TileService$TileProviderWrapper,androidx.wear.tiles.TileLeaveEventData)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.wear.tiles.TileService$TileProviderWrapper: void lambda$onTileLeaveEvent$7(androidx.wear.tiles.TileLeaveEventData)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void lambda$onTileLeaveEvent$7(androidx.wear.tiles.TileLeaveEventData)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileLeaveEventData r1;
        androidx.wear.tiles.TileService r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        int $i0, $i1;
        byte[] $r5;
        androidx.wear.tiles.proto.EventProto$TileLeaveEvent $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        java.lang.Throwable $r11, r13;
        androidx.wear.tiles.EventBuilders$TileLeaveEvent r12;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileLeaveEventData;

        $r3 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: java.lang.ref.WeakReference mServiceRef>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.wear.tiles.TileService) $r4;

        if r2 == null goto label4;

        $i0 = virtualinvoke r1.<androidx.wear.tiles.TileLeaveEventData: int getVersion()>();

        if $i0 == 1 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TileLeaveEventData had unexpected version: ");

        $i1 = virtualinvoke r1.<androidx.wear.tiles.TileLeaveEventData: int getVersion()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TileService", $r10);

        return;

     label1:
        $r5 = virtualinvoke r1.<androidx.wear.tiles.TileLeaveEventData: byte[] getContents()>();

        $r6 = staticinvoke <androidx.wear.tiles.proto.EventProto$TileLeaveEvent: androidx.wear.tiles.proto.EventProto$TileLeaveEvent parseFrom(byte[])>($r5);

        r12 = staticinvoke <androidx.wear.tiles.EventBuilders$TileLeaveEvent: androidx.wear.tiles.EventBuilders$TileLeaveEvent fromProto(androidx.wear.tiles.proto.EventProto$TileLeaveEvent)>($r6);

        virtualinvoke r2.<androidx.wear.tiles.TileService: void onTileLeaveEvent(androidx.wear.tiles.EventBuilders$TileLeaveEvent)>(r12);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "Error deserializing TileLeaveEvent payload.", r13);

     label4:
        return;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    private void lambda$onTileEnterEvent$6(androidx.wear.tiles.TileEnterEventData)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileEnterEventData r1;
        androidx.wear.tiles.TileService r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        int $i0, $i1;
        byte[] $r5;
        androidx.wear.tiles.proto.EventProto$TileEnterEvent $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        java.lang.Throwable $r11, r13;
        androidx.wear.tiles.EventBuilders$TileEnterEvent r12;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileEnterEventData;

        $r3 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: java.lang.ref.WeakReference mServiceRef>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.wear.tiles.TileService) $r4;

        if r2 == null goto label4;

        $i0 = virtualinvoke r1.<androidx.wear.tiles.TileEnterEventData: int getVersion()>();

        if $i0 == 1 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TileEnterEventData had unexpected version: ");

        $i1 = virtualinvoke r1.<androidx.wear.tiles.TileEnterEventData: int getVersion()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TileService", $r10);

        return;

     label1:
        $r5 = virtualinvoke r1.<androidx.wear.tiles.TileEnterEventData: byte[] getContents()>();

        $r6 = staticinvoke <androidx.wear.tiles.proto.EventProto$TileEnterEvent: androidx.wear.tiles.proto.EventProto$TileEnterEvent parseFrom(byte[])>($r5);

        r12 = staticinvoke <androidx.wear.tiles.EventBuilders$TileEnterEvent: androidx.wear.tiles.EventBuilders$TileEnterEvent fromProto(androidx.wear.tiles.proto.EventProto$TileEnterEvent)>($r6);

        virtualinvoke r2.<androidx.wear.tiles.TileService: void onTileEnterEvent(androidx.wear.tiles.EventBuilders$TileEnterEvent)>(r12);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "Error deserializing TileEnterEvent payload.", r13);

     label4:
        return;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    private void lambda$onTileRemoveEvent$5(androidx.wear.tiles.TileRemoveEventData)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileRemoveEventData r1;
        androidx.wear.tiles.TileService r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        int $i0, $i1;
        byte[] $r5;
        androidx.wear.tiles.proto.EventProto$TileRemoveEvent $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        java.lang.Throwable $r11, r13;
        androidx.wear.tiles.EventBuilders$TileRemoveEvent r12;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileRemoveEventData;

        $r3 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: java.lang.ref.WeakReference mServiceRef>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.wear.tiles.TileService) $r4;

        if r2 == null goto label4;

        $i0 = virtualinvoke r1.<androidx.wear.tiles.TileRemoveEventData: int getVersion()>();

        if $i0 == 1 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TileRemoveEventData had unexpected version: ");

        $i1 = virtualinvoke r1.<androidx.wear.tiles.TileRemoveEventData: int getVersion()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TileService", $r10);

        return;

     label1:
        $r5 = virtualinvoke r1.<androidx.wear.tiles.TileRemoveEventData: byte[] getContents()>();

        $r6 = staticinvoke <androidx.wear.tiles.proto.EventProto$TileRemoveEvent: androidx.wear.tiles.proto.EventProto$TileRemoveEvent parseFrom(byte[])>($r5);

        r12 = staticinvoke <androidx.wear.tiles.EventBuilders$TileRemoveEvent: androidx.wear.tiles.EventBuilders$TileRemoveEvent fromProto(androidx.wear.tiles.proto.EventProto$TileRemoveEvent)>($r6);

        virtualinvoke r2.<androidx.wear.tiles.TileService: void onTileRemoveEvent(androidx.wear.tiles.EventBuilders$TileRemoveEvent)>(r12);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "Error deserializing TileRemoveEvent payload.", r13);

     label4:
        return;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    private void lambda$onTileAddEvent$4(androidx.wear.tiles.TileAddEventData)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileAddEventData r1;
        androidx.wear.tiles.TileService r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        int $i0, $i1;
        byte[] $r5;
        androidx.wear.tiles.proto.EventProto$TileAddEvent $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        java.lang.Throwable $r11, r13;
        androidx.wear.tiles.EventBuilders$TileAddEvent r12;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileAddEventData;

        $r3 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: java.lang.ref.WeakReference mServiceRef>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.wear.tiles.TileService) $r4;

        if r2 == null goto label4;

        $i0 = virtualinvoke r1.<androidx.wear.tiles.TileAddEventData: int getVersion()>();

        if $i0 == 1 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TileAddEventData had unexpected version: ");

        $i1 = virtualinvoke r1.<androidx.wear.tiles.TileAddEventData: int getVersion()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TileService", $r10);

        return;

     label1:
        $r5 = virtualinvoke r1.<androidx.wear.tiles.TileAddEventData: byte[] getContents()>();

        $r6 = staticinvoke <androidx.wear.tiles.proto.EventProto$TileAddEvent: androidx.wear.tiles.proto.EventProto$TileAddEvent parseFrom(byte[])>($r5);

        r12 = staticinvoke <androidx.wear.tiles.EventBuilders$TileAddEvent: androidx.wear.tiles.EventBuilders$TileAddEvent fromProto(androidx.wear.tiles.proto.EventProto$TileAddEvent)>($r6);

        virtualinvoke r2.<androidx.wear.tiles.TileService: void onTileAddEvent(androidx.wear.tiles.EventBuilders$TileAddEvent)>(r12);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "Error deserializing TileAddEvent payload.", r13);

     label4:
        return;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    private void lambda$onResourcesRequest$3(androidx.wear.tiles.ResourcesRequestData, androidx.wear.tiles.ResourcesCallback)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.ResourcesRequestData r1;
        androidx.wear.tiles.ResourcesCallback r2;
        androidx.wear.tiles.TileService r3;
        androidx.wear.tiles.RequestBuilders$ResourcesRequest r4;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;
        int $i0, $i1;
        byte[] $r7;
        androidx.wear.tiles.proto.RequestProto$ResourcesRequest $r8;
        java.lang.Runnable $r9;
        android.os.Handler $r10;
        java.util.concurrent.Executor $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r16;
        java.lang.Throwable $r17, r18;
        com.google.common.util.concurrent.ListenableFuture r19;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.ResourcesRequestData;

        r2 := @parameter1: androidx.wear.tiles.ResourcesCallback;

        $r5 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: java.lang.ref.WeakReference mServiceRef>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.wear.tiles.TileService) $r6;

        if r3 == null goto label5;

        $i0 = virtualinvoke r1.<androidx.wear.tiles.ResourcesRequestData: int getVersion()>();

        if $i0 == 1 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ResourcesRequestData had unexpected version: ");

        $i1 = virtualinvoke r1.<androidx.wear.tiles.ResourcesRequestData: int getVersion()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TileService", $r16);

        return;

     label1:
        $r7 = virtualinvoke r1.<androidx.wear.tiles.ResourcesRequestData: byte[] getContents()>();

        $r8 = staticinvoke <androidx.wear.tiles.proto.RequestProto$ResourcesRequest: androidx.wear.tiles.proto.RequestProto$ResourcesRequest parseFrom(byte[])>($r7);

        r4 = staticinvoke <androidx.wear.tiles.RequestBuilders$ResourcesRequest: androidx.wear.tiles.RequestBuilders$ResourcesRequest fromProto(androidx.wear.tiles.proto.RequestProto$ResourcesRequest)>($r8);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r18 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "Error deserializing ResourcesRequest payload.", r18);

        return;

     label4:
        r19 = virtualinvoke r3.<androidx.wear.tiles.TileService: com.google.common.util.concurrent.ListenableFuture onResourcesRequest(androidx.wear.tiles.RequestBuilders$ResourcesRequest)>(r4);

        $r9 = dynamicinvoke "run" <java.lang.Runnable (androidx.wear.tiles.ResourcesCallback,com.google.common.util.concurrent.ListenableFuture)>(r2, r19) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.wear.tiles.TileService$TileProviderWrapper: void lambda$onResourcesRequest$2(androidx.wear.tiles.ResourcesCallback,com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__());

        $r10 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r10);

        $r12 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>($r10) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.Handler: boolean post(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r19.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r9, $r12);

     label5:
        return;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    private static void lambda$onResourcesRequest$2(androidx.wear.tiles.ResourcesCallback, com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.wear.tiles.ResourcesCallback r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.wear.tiles.ResourcesData $r2;
        java.lang.Object $r3;
        androidx.wear.tiles.ResourceBuilders$Resources $r4;
        androidx.wear.tiles.proto.ResourceProto$Resources $r5;
        byte[] $r6;
        java.lang.Throwable $r7, $r8, r9, r10;

        r0 := @parameter0: androidx.wear.tiles.ResourcesCallback;

        r1 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

     label1:
        $r2 = new androidx.wear.tiles.ResourcesData;

        $r3 = interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r4 = (androidx.wear.tiles.ResourceBuilders$Resources) $r3;

        $r5 = virtualinvoke $r4.<androidx.wear.tiles.ResourceBuilders$Resources: androidx.wear.tiles.proto.ResourceProto$Resources toProto()>();

        $r6 = virtualinvoke $r5.<androidx.wear.tiles.proto.ResourceProto$Resources: byte[] toByteArray()>();

        specialinvoke $r2.<androidx.wear.tiles.ResourcesData: void <init>(byte[],int)>($r6, 1);

        interfaceinvoke r0.<androidx.wear.tiles.ResourcesCallback: void updateResources(androidx.wear.tiles.ResourcesData)>($r2);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r9 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "onResourcesRequest Future failed", r9);

        goto label5;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "RemoteException while returning resources payload", r10);

     label5:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void lambda$onTileRequest$1(androidx.wear.tiles.TileRequestData, androidx.wear.tiles.TileCallback)
    {
        androidx.wear.tiles.TileService$TileProviderWrapper r0;
        androidx.wear.tiles.TileRequestData r1;
        androidx.wear.tiles.TileCallback r2;
        androidx.wear.tiles.TileService r3;
        androidx.wear.tiles.RequestBuilders$TileRequest r4;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;
        int $i0, $i1;
        byte[] $r7;
        androidx.wear.tiles.proto.RequestProto$TileRequest $r8;
        java.lang.Runnable $r9;
        android.os.Handler $r10;
        java.util.concurrent.Executor $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r16;
        java.lang.Throwable $r17, r18;
        com.google.common.util.concurrent.ListenableFuture r19;

        r0 := @this: androidx.wear.tiles.TileService$TileProviderWrapper;

        r1 := @parameter0: androidx.wear.tiles.TileRequestData;

        r2 := @parameter1: androidx.wear.tiles.TileCallback;

        $r5 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: java.lang.ref.WeakReference mServiceRef>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.wear.tiles.TileService) $r6;

        if r3 == null goto label5;

        $i0 = virtualinvoke r1.<androidx.wear.tiles.TileRequestData: int getVersion()>();

        if $i0 == 1 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TileRequestData had unexpected version: ");

        $i1 = virtualinvoke r1.<androidx.wear.tiles.TileRequestData: int getVersion()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TileService", $r16);

        return;

     label1:
        $r7 = virtualinvoke r1.<androidx.wear.tiles.TileRequestData: byte[] getContents()>();

        $r8 = staticinvoke <androidx.wear.tiles.proto.RequestProto$TileRequest: androidx.wear.tiles.proto.RequestProto$TileRequest parseFrom(byte[])>($r7);

        r4 = staticinvoke <androidx.wear.tiles.RequestBuilders$TileRequest: androidx.wear.tiles.RequestBuilders$TileRequest fromProto(androidx.wear.tiles.proto.RequestProto$TileRequest)>($r8);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r18 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "Error deserializing TileRequest payload.", r18);

        return;

     label4:
        r19 = virtualinvoke r3.<androidx.wear.tiles.TileService: com.google.common.util.concurrent.ListenableFuture onTileRequest(androidx.wear.tiles.RequestBuilders$TileRequest)>(r4);

        $r9 = dynamicinvoke "run" <java.lang.Runnable (com.google.common.util.concurrent.ListenableFuture,androidx.wear.tiles.TileCallback)>(r19, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.wear.tiles.TileService$TileProviderWrapper: void lambda$onTileRequest$0(com.google.common.util.concurrent.ListenableFuture,androidx.wear.tiles.TileCallback)>, methodtype: void __METHODTYPE__());

        $r10 = r0.<androidx.wear.tiles.TileService$TileProviderWrapper: android.os.Handler mHandler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r10);

        $r12 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>($r10) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.Handler: boolean post(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r19.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r9, $r12);

     label5:
        return;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    private static void lambda$onTileRequest$0(com.google.common.util.concurrent.ListenableFuture, androidx.wear.tiles.TileCallback)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.wear.tiles.TileCallback r1;
        java.lang.Object $r2;
        androidx.wear.tiles.TileBuilders$Tile $r3;
        androidx.wear.tiles.proto.TileProto$Tile $r4, r14;
        androidx.wear.tiles.protobuf.GeneratedMessageLite$Builder $r5;
        androidx.wear.tiles.proto.VersionProto$VersionInfo $r6;
        androidx.wear.tiles.proto.TileProto$Tile$Builder $r7, $r8;
        androidx.wear.tiles.protobuf.GeneratedMessageLite $r9;
        androidx.wear.tiles.TileData $r10;
        byte[] $r11;
        java.lang.Throwable $r12, $r13, r15, r16;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.wear.tiles.TileCallback;

     label1:
        $r2 = interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r3 = (androidx.wear.tiles.TileBuilders$Tile) $r2;

        $r4 = virtualinvoke $r3.<androidx.wear.tiles.TileBuilders$Tile: androidx.wear.tiles.proto.TileProto$Tile toProto()>();

        $r5 = virtualinvoke $r4.<androidx.wear.tiles.proto.TileProto$Tile: androidx.wear.tiles.protobuf.GeneratedMessageLite$Builder toBuilder()>();

        $r7 = (androidx.wear.tiles.proto.TileProto$Tile$Builder) $r5;

        $r6 = <androidx.wear.tiles.TileBuilders$Version: androidx.wear.tiles.proto.VersionProto$VersionInfo CURRENT>;

        $r8 = virtualinvoke $r7.<androidx.wear.tiles.proto.TileProto$Tile$Builder: androidx.wear.tiles.proto.TileProto$Tile$Builder setSchemaVersion(androidx.wear.tiles.proto.VersionProto$VersionInfo)>($r6);

        $r9 = virtualinvoke $r8.<androidx.wear.tiles.proto.TileProto$Tile$Builder: androidx.wear.tiles.protobuf.GeneratedMessageLite build()>();

        r14 = (androidx.wear.tiles.proto.TileProto$Tile) $r9;

        $r10 = new androidx.wear.tiles.TileData;

        $r11 = virtualinvoke r14.<androidx.wear.tiles.proto.TileProto$Tile: byte[] toByteArray()>();

        specialinvoke $r10.<androidx.wear.tiles.TileData: void <init>(byte[],int)>($r11, 1);

        interfaceinvoke r1.<androidx.wear.tiles.TileCallback: void updateTileData(androidx.wear.tiles.TileData)>($r10);

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        r15 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "onTileRequest Future failed", r15);

        goto label5;

     label4:
        $r12 := @caughtexception;

        r16 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TileService", "RemoteException while returning tile payload", r16);

     label5:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

