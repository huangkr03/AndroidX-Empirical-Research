androidx.camera.core.impl.AutoValue_CameraThreadConfig
<androidx.camera.core.impl.AutoValue_CameraThreadConfig: java.util.concurrent.Executor cameraExecutor>
<androidx.camera.core.impl.AutoValue_CameraThreadConfig: android.os.Handler schedulerHandler>
    void <init>(java.util.concurrent.Executor, android.os.Handler)
    {
        androidx.camera.core.impl.AutoValue_CameraThreadConfig r0;
        java.util.concurrent.Executor r1;
        android.os.Handler r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @this: androidx.camera.core.impl.AutoValue_CameraThreadConfig;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<androidx.camera.core.impl.CameraThreadConfig: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null cameraExecutor");

        throw $r4;

     label1:
        r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: java.util.concurrent.Executor cameraExecutor> = r1;

        if r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null schedulerHandler");

        throw $r3;

     label2:
        r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: android.os.Handler schedulerHandler> = r2;

        return;
    }

    public java.util.concurrent.Executor getCameraExecutor()
    {
        androidx.camera.core.impl.AutoValue_CameraThreadConfig r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.camera.core.impl.AutoValue_CameraThreadConfig;

        $r1 = r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: java.util.concurrent.Executor cameraExecutor>;

        return $r1;
    }

    public android.os.Handler getSchedulerHandler()
    {
        androidx.camera.core.impl.AutoValue_CameraThreadConfig r0;
        android.os.Handler $r1;

        r0 := @this: androidx.camera.core.impl.AutoValue_CameraThreadConfig;

        $r1 = r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: android.os.Handler schedulerHandler>;

        return $r1;
    }

    public java.lang.String toString()
    {
        androidx.camera.core.impl.AutoValue_CameraThreadConfig r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        java.util.concurrent.Executor $r3;
        android.os.Handler $r6;
        java.lang.String $r9;

        r0 := @this: androidx.camera.core.impl.AutoValue_CameraThreadConfig;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CameraThreadConfig{cameraExecutor=");

        $r3 = r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: java.util.concurrent.Executor cameraExecutor>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", schedulerHandler=");

        $r6 = r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: android.os.Handler schedulerHandler>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.camera.core.impl.AutoValue_CameraThreadConfig r0;
        java.lang.Object r1;
        androidx.camera.core.impl.CameraThreadConfig r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.concurrent.Executor $r3, $r4;
        android.os.Handler $r5, $r6;

        r0 := @this: androidx.camera.core.impl.AutoValue_CameraThreadConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.camera.core.impl.CameraThreadConfig;

        if $z0 == 0 goto label4;

        r2 = (androidx.camera.core.impl.CameraThreadConfig) r1;

        $r3 = r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: java.util.concurrent.Executor cameraExecutor>;

        $r4 = virtualinvoke r2.<androidx.camera.core.impl.CameraThreadConfig: java.util.concurrent.Executor getCameraExecutor()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r5 = r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: android.os.Handler schedulerHandler>;

        $r6 = virtualinvoke r2.<androidx.camera.core.impl.CameraThreadConfig: android.os.Handler getSchedulerHandler()>();

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;
    }

    public int hashCode()
    {
        androidx.camera.core.impl.AutoValue_CameraThreadConfig r0;
        java.util.concurrent.Executor $r1;
        int $i0, $i1, i3, i4, i5, i6;
        android.os.Handler $r2;
        byte b2;

        r0 := @this: androidx.camera.core.impl.AutoValue_CameraThreadConfig;

        b2 = 1;

        i3 = b2 * 1000003;

        $r1 = r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: java.util.concurrent.Executor cameraExecutor>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i4 = i3 ^ $i0;

        i5 = i4 * 1000003;

        $r2 = r0.<androidx.camera.core.impl.AutoValue_CameraThreadConfig: android.os.Handler schedulerHandler>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i6 = i5 ^ $i1;

        return i6;
    }

