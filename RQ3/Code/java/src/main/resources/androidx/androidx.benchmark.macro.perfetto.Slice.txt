androidx.benchmark.macro.perfetto.Slice
<androidx.benchmark.macro.perfetto.Slice: androidx.benchmark.macro.perfetto.Slice$Companion Companion>
<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>
<androidx.benchmark.macro.perfetto.Slice: long ts>
<androidx.benchmark.macro.perfetto.Slice: long dur>
<androidx.benchmark.macro.perfetto.Slice: long endTs>
<androidx.benchmark.macro.perfetto.Slice: java.lang.Integer frameId>
    public void <init>(java.lang.String, long, long)
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        java.lang.String r1, $r2, $r3;
        long l0, l1, $l2, $l3, $l4;
        java.lang.Integer $r4;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name> = r1;

        r0.<androidx.benchmark.macro.perfetto.Slice: long ts> = l0;

        r0.<androidx.benchmark.macro.perfetto.Slice: long dur> = l1;

        $l3 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        $l2 = r0.<androidx.benchmark.macro.perfetto.Slice: long dur>;

        $l4 = $l3 + $l2;

        r0.<androidx.benchmark.macro.perfetto.Slice: long endTs> = $l4;

        $r2 = r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>;

        $r3 = staticinvoke <kotlin.text.StringsKt: java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>($r2, " ", null, 2, null);

        $r4 = staticinvoke <kotlin.text.StringsKt: java.lang.Integer toIntOrNull(java.lang.String)>($r3);

        r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.Integer frameId> = $r4;

        return;
    }

    public final java.lang.String getName()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $r1 = r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>;

        return $r1;
    }

    public final long getTs()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        long $l0;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $l0 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        return $l0;
    }

    public final long getDur()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        long $l0;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $l0 = r0.<androidx.benchmark.macro.perfetto.Slice: long dur>;

        return $l0;
    }

    public final long getEndTs()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        long $l0;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $l0 = r0.<androidx.benchmark.macro.perfetto.Slice: long endTs>;

        return $l0;
    }

    public final java.lang.Integer getFrameId()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        java.lang.Integer $r1;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $r1 = r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.Integer frameId>;

        return $r1;
    }

    public final boolean contains(long)
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        long l0, $l1, $l3, $l4, $l5;
        byte $b2, $b6;
        boolean $z0;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        l0 := @parameter0: long;

        $l1 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        $b2 = l0 cmp $l1;

        if $b2 < 0 goto label1;

        $l4 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        $l3 = r0.<androidx.benchmark.macro.perfetto.Slice: long dur>;

        $l5 = $l4 + $l3;

        $b6 = l0 cmp $l5;

        if $b6 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.lang.String component1()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $r1 = r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>;

        return $r1;
    }

    public final long component2()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        long $l0;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $l0 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        return $l0;
    }

    public final long component3()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        long $l0;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $l0 = r0.<androidx.benchmark.macro.perfetto.Slice: long dur>;

        return $l0;
    }

    public final androidx.benchmark.macro.perfetto.Slice copy(java.lang.String, long, long)
    {
        androidx.benchmark.macro.perfetto.Slice r0, $r2;
        java.lang.String r1;
        long l0, l1;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        $r2 = new androidx.benchmark.macro.perfetto.Slice;

        specialinvoke $r2.<androidx.benchmark.macro.perfetto.Slice: void <init>(java.lang.String,long,long)>(r1, l0, l1);

        return $r2;
    }

    public static androidx.benchmark.macro.perfetto.Slice copy$default(androidx.benchmark.macro.perfetto.Slice, java.lang.String, long, long, int, java.lang.Object)
    {
        androidx.benchmark.macro.perfetto.Slice r0, $r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.String r3;
        long l4, l5;

        r0 := @parameter0: androidx.benchmark.macro.perfetto.Slice;

        r3 := @parameter1: java.lang.String;

        l4 := @parameter2: long;

        l5 := @parameter3: long;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        l4 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        l5 = r0.<androidx.benchmark.macro.perfetto.Slice: long dur>;

     label3:
        $r2 = virtualinvoke r0.<androidx.benchmark.macro.perfetto.Slice: androidx.benchmark.macro.perfetto.Slice copy(java.lang.String,long,long)>(r3, l4, l5);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r3, $r10;
        long $l0, $l1;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slice(name=");

        $r3 = r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ts=");

        $l0 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dur=");

        $l1 = r0.<androidx.benchmark.macro.perfetto.Slice: long dur>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public int hashCode()
    {
        androidx.benchmark.macro.perfetto.Slice r0;
        java.lang.String $r1;
        long $l0, $l3;
        int $i1, $i2, $i4, $i5, i6, i7, i8;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        $r1 = r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>;

        i6 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = i6 * 31;

        $l0 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        $i2 = staticinvoke <java.lang.Long: int hashCode(long)>($l0);

        i7 = $i1 + $i2;

        $i4 = i7 * 31;

        $l3 = r0.<androidx.benchmark.macro.perfetto.Slice: long dur>;

        $i5 = staticinvoke <java.lang.Long: int hashCode(long)>($l3);

        i8 = $i4 + $i5;

        return i8;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.benchmark.macro.perfetto.Slice r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.benchmark.macro.perfetto.Slice;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.benchmark.macro.perfetto.Slice) r1;

        $r4 = r0.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>;

        $r3 = r2.<androidx.benchmark.macro.perfetto.Slice: java.lang.String name>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $l1 = r0.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        $l0 = r2.<androidx.benchmark.macro.perfetto.Slice: long ts>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $l4 = r0.<androidx.benchmark.macro.perfetto.Slice: long dur>;

        $l3 = r2.<androidx.benchmark.macro.perfetto.Slice: long dur>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        androidx.benchmark.macro.perfetto.Slice$Companion $r0;

        $r0 = new androidx.benchmark.macro.perfetto.Slice$Companion;

        specialinvoke $r0.<androidx.benchmark.macro.perfetto.Slice$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.benchmark.macro.perfetto.Slice: androidx.benchmark.macro.perfetto.Slice$Companion Companion> = $r0;

        return;
    }

androidx.benchmark.macro.perfetto.Slice$Companion
    private void <init>()
    {
        androidx.benchmark.macro.perfetto.Slice$Companion r0;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final java.lang.String unquote(java.lang.String)
    {
        androidx.benchmark.macro.perfetto.Slice$Companion r0;
        java.lang.String $r1, r2, r3, $r6;
        java.lang.CharSequence $r4, $r7;
        char $c0, $c3;
        int $i1, $i2;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice$Companion;

        $r1 := @parameter0: java.lang.String;

        $r4 = (java.lang.CharSequence) $r1;

        $c0 = staticinvoke <kotlin.text.StringsKt: char first(java.lang.CharSequence)>($r4);

        if $c0 != 34 goto label1;

        $r7 = (java.lang.CharSequence) $r1;

        $c3 = staticinvoke <kotlin.text.StringsKt: char last(java.lang.CharSequence)>($r7);

        if $c3 != 34 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        r2 = "Failed requirement.";

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        return r3;
    }

    public final java.util.List parseListFromQueryResult(java.lang.String)
    {
        androidx.benchmark.macro.perfetto.Slice$Companion r0, $r17;
        java.lang.String r1, $r19, $r20, $r22, $r24, $r28, r33, r38, r43;
        java.util.List r2, r4, $r7, $r10, $r12, $r14;
        java.lang.String[] r3, $r29;
        java.util.Collection r5, $r35, $r40;
        java.lang.CharSequence $r6, $r15, $r25;
        boolean $z0, $z1, $z2, $z4, $z11, $z13;
        java.lang.Object $r8, $r18, $r21, $r23, r32, r37, r42;
        java.util.ArrayList $r9, $r13;
        java.lang.Iterable $r11, $r30, $r34, $r39;
        int $i0;
        androidx.benchmark.macro.perfetto.Slice $r16;
        long $l1, $l2;
        java.lang.IllegalStateException $r26;
        java.io.PrintStream $r27;
        java.util.Iterator r31, r36, r41;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "queryResult");

        $r6 = (java.lang.CharSequence) r1;

        $r29 = newarray (java.lang.String)[1];

        $r29[0] = "\n";

        $r7 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r6, $r29, 0, 0, 6, null);

        $r30 = (java.lang.Iterable) $r7;

        r31 = interfaceinvoke $r30.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r32 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.lang.String) r32;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r28 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("query result line ", r33);

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.Object)>($r28);

        goto label1;

     label2:
        r2 = (java.util.List) $r30;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r2);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, "\"name\",\"ts\",\"dur\"");

        if $z1 != 0 goto label3;

        $r26 = new java.lang.IllegalStateException;

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>("query failed!");

        throw $r26;

     label3:
        $r34 = (java.lang.Iterable) r2;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r35 = (java.util.Collection) $r9;

        r36 = interfaceinvoke $r34.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z11 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label7;

        r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.lang.String) r37;

        $r25 = (java.lang.CharSequence) r38;

        $z4 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r25);

        if $z4 != 0 goto label5;

        $z13 = 1;

        goto label6;

     label5:
        $z13 = 0;

     label6:
        if $z13 == 0 goto label4;

        interfaceinvoke $r35.<java.util.Collection: boolean add(java.lang.Object)>(r37);

        goto label4;

     label7:
        $r10 = (java.util.List) $r35;

        $r11 = (java.lang.Iterable) $r10;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List drop(java.lang.Iterable,int)>($r11, 1);

        $r39 = (java.lang.Iterable) $r12;

        $r13 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r39, 10);

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i0);

        $r40 = (java.util.Collection) $r13;

        r41 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>();

     label8:
        $z2 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r43 = (java.lang.String) r42;

        r5 = $r40;

        $r15 = (java.lang.CharSequence) r43;

        r3 = newarray (java.lang.String)[1];

        r3[0] = ",";

        r4 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r15, r3, 0, 0, 6, null);

        $r16 = new androidx.benchmark.macro.perfetto.Slice;

        $r17 = <androidx.benchmark.macro.perfetto.Slice: androidx.benchmark.macro.perfetto.Slice$Companion Companion>;

        $r18 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r19 = (java.lang.String) $r18;

        $r20 = specialinvoke $r17.<androidx.benchmark.macro.perfetto.Slice$Companion: java.lang.String unquote(java.lang.String)>($r19);

        $r21 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(1);

        $r22 = (java.lang.String) $r21;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r22);

        $r23 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(2);

        $r24 = (java.lang.String) $r23;

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r24);

        specialinvoke $r16.<androidx.benchmark.macro.perfetto.Slice: void <init>(java.lang.String,long,long)>($r20, $l1, $l2);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label8;

     label9:
        $r14 = (java.util.List) $r40;

        return $r14;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.macro.perfetto.Slice$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.benchmark.macro.perfetto.Slice$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.benchmark.macro.perfetto.Slice$Companion: void <init>()>();

        return;
    }

