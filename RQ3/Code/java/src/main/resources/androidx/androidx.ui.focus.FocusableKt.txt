androidx.ui.focus.FocusableKt
<androidx.ui.focus.FocusableKt: java.lang.String focusNotCreated>
    public static final void Focusable(androidx.ui.focus.FocusOperator, kotlin.jvm.functions.Function2, androidx.compose.Composer)
    {
        androidx.ui.focus.FocusOperator r0;
        kotlin.jvm.functions.Function2 r1, $r7, $r8;
        androidx.compose.Composer $r2, r3, r4;
        java.lang.Integer r5;
        androidx.ui.focus.FocusableKt$Focusable$2 $r6;
        boolean $z2, $z3;
        androidx.ui.focus.FocusableKt$Focusable$5 $r9;
        kotlin.jvm.functions.Function1 $r10;
        androidx.compose.internal.RestartableFunction r11;
        androidx.compose.ComposerValidator $r12;
        androidx.compose.ScopeUpdateScope r13;

        r0 := @parameter0: androidx.ui.focus.FocusOperator;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "focusOperator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "children");

        virtualinvoke $r2.<androidx.compose.Composer: void startRestartGroup(int)>(-802660432);

        $r6 = new androidx.ui.focus.FocusableKt$Focusable$2;

        specialinvoke $r6.<androidx.ui.focus.FocusableKt$Focusable$2: void <init>(androidx.ui.focus.FocusOperator,kotlin.jvm.functions.Function2)>(r0, r1);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        r11 = staticinvoke <androidx.compose.internal.RestartableFunctionKt: androidx.compose.internal.RestartableFunction restartableFunction(androidx.compose.Composer,int,boolean,java.lang.Object)>($r2, -756384910, 1, $r7);

        r3 = $r2;

        r4 = $r2;

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-139947065);

        virtualinvoke r4.<androidx.compose.Composer: void startGroup(java.lang.Object)>(r5);

        $r12 = (androidx.compose.ComposerValidator) r4;

        $z2 = interfaceinvoke $r12.<androidx.compose.ComposerValidator: boolean changed(java.lang.Object)>(r11);

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r4.<androidx.compose.Composer: boolean getSkipping()>();

        if $z3 != 0 goto label2;

     label1:
        $r8 = (kotlin.jvm.functions.Function2) r11;

        staticinvoke <androidx.compose.RecomposeKt: void Recompose(kotlin.jvm.functions.Function2,androidx.compose.Composer)>($r8, r3);

        goto label3;

     label2:
        virtualinvoke r4.<androidx.compose.Composer: void skipToGroupEnd()>();

     label3:
        virtualinvoke r4.<androidx.compose.Composer: void endGroup()>();

        r13 = virtualinvoke $r2.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if r13 == null goto label4;

        $r9 = new androidx.ui.focus.FocusableKt$Focusable$5;

        specialinvoke $r9.<androidx.ui.focus.FocusableKt$Focusable$5: void <init>(androidx.ui.focus.FocusOperator,kotlin.jvm.functions.Function2)>(r0, r1);

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        interfaceinvoke r13.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function1)>($r10);

     label4:
        return;
    }

    public static void Focusable$default(androidx.ui.focus.FocusOperator, kotlin.jvm.functions.Function2, androidx.compose.Composer, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function2 r0;
        androidx.compose.Composer $r1;
        int i0, $i1;
        java.lang.Object r2, $r7, r10;
        androidx.ui.focus.FocusOperator r3, $r8, r9;
        boolean z1;
        java.lang.Integer $r5;
        androidx.compose.SlotTable$Companion $r6;

        r9 := @parameter0: androidx.ui.focus.FocusOperator;

        r0 := @parameter1: kotlin.jvm.functions.Function2;

        $r1 := @parameter2: androidx.compose.Composer;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label3;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2008874711);

        virtualinvoke $r1.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r5);

        z1 = 1;

        r10 = virtualinvoke $r1.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r6 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r10 == $r7 goto label1;

        goto label2;

     label1:
        $r8 = new androidx.ui.focus.FocusOperator;

        specialinvoke $r8.<androidx.ui.focus.FocusOperator: void <init>()>();

        virtualinvoke $r1.<androidx.compose.Composer: void updateValue(java.lang.Object)>($r8);

        r10 = $r8;

     label2:
        r3 = (androidx.ui.focus.FocusOperator) r10;

        virtualinvoke $r1.<androidx.compose.Composer: void endExpr()>();

        r9 = r3;

     label3:
        staticinvoke <androidx.ui.focus.FocusableKt: void Focusable(androidx.ui.focus.FocusOperator,kotlin.jvm.functions.Function2,androidx.compose.Composer)>(r9, r0, $r1);

        return;
    }

    public static final java.lang.String access$getFocusNotCreated$cp$s-515134693()
    {
        java.lang.String $r0;

        $r0 = <androidx.ui.focus.FocusableKt: java.lang.String focusNotCreated>;

        return $r0;
    }

    public static final void <clinit>()
    {
        <androidx.ui.focus.FocusableKt: java.lang.String focusNotCreated> = "Focus node could not be created.";

        return;
    }

