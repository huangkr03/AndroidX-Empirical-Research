androidx.window.core.FailedSpecification
<androidx.window.core.FailedSpecification: java.lang.Object value>
<androidx.window.core.FailedSpecification: java.lang.String tag>
<androidx.window.core.FailedSpecification: java.lang.String message>
<androidx.window.core.FailedSpecification: androidx.window.core.Logger logger>
<androidx.window.core.FailedSpecification: androidx.window.core.SpecificationComputer$VerificationMode verificationMode>
<androidx.window.core.FailedSpecification: androidx.window.core.WindowStrictModeException exception>
    public void <init>(java.lang.Object, java.lang.String, java.lang.String, androidx.window.core.Logger, androidx.window.core.SpecificationComputer$VerificationMode)
    {
        androidx.window.core.FailedSpecification r0, r9;
        java.lang.Object r1, $r12;
        java.lang.String r2, r3, $r11, $r13;
        androidx.window.core.Logger r4;
        androidx.window.core.SpecificationComputer$VerificationMode r5;
        androidx.window.core.WindowStrictModeException r6, $r10;
        java.util.Collection r8;
        java.lang.Object[] $r14, $r17;
        java.util.List $r15;
        java.lang.StackTraceElement[] $r16, $r18, $r20;
        java.lang.NullPointerException $r19;

        r0 := @this: androidx.window.core.FailedSpecification;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.window.core.Logger;

        r5 := @parameter4: androidx.window.core.SpecificationComputer$VerificationMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "tag");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "message");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "logger");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "verificationMode");

        specialinvoke r0.<androidx.window.core.SpecificationComputer: void <init>()>();

        r0.<androidx.window.core.FailedSpecification: java.lang.Object value> = r1;

        r0.<androidx.window.core.FailedSpecification: java.lang.String tag> = r2;

        r0.<androidx.window.core.FailedSpecification: java.lang.String message> = r3;

        r0.<androidx.window.core.FailedSpecification: androidx.window.core.Logger logger> = r4;

        r0.<androidx.window.core.FailedSpecification: androidx.window.core.SpecificationComputer$VerificationMode verificationMode> = r5;

        $r10 = new androidx.window.core.WindowStrictModeException;

        $r12 = r0.<androidx.window.core.FailedSpecification: java.lang.Object value>;

        $r11 = r0.<androidx.window.core.FailedSpecification: java.lang.String message>;

        $r13 = virtualinvoke r0.<androidx.window.core.FailedSpecification: java.lang.String createMessage(java.lang.Object,java.lang.String)>($r12, $r11);

        specialinvoke $r10.<androidx.window.core.WindowStrictModeException: void <init>(java.lang.String)>($r13);

        r6 = $r10;

        r9 = r0;

        $r20 = virtualinvoke r6.<androidx.window.core.WindowStrictModeException: java.lang.StackTraceElement[] getStackTrace()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "stackTrace");

        $r14 = (java.lang.Object[]) $r20;

        $r15 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(java.lang.Object[],int)>($r14, 2);

        r8 = (java.util.Collection) $r15;

        $r16 = newarray (java.lang.StackTraceElement)[0];

        $r17 = interfaceinvoke r8.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        if $r17 != null goto label1;

        $r19 = new java.lang.NullPointerException;

        specialinvoke $r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        throw $r19;

     label1:
        $r18 = (java.lang.StackTraceElement[]) $r17;

        virtualinvoke r6.<androidx.window.core.WindowStrictModeException: void setStackTrace(java.lang.StackTraceElement[])>($r18);

        r9.<androidx.window.core.FailedSpecification: androidx.window.core.WindowStrictModeException exception> = r6;

        return;
    }

    public final java.lang.Object getValue()
    {
        androidx.window.core.FailedSpecification r0;
        java.lang.Object $r1;

        r0 := @this: androidx.window.core.FailedSpecification;

        $r1 = r0.<androidx.window.core.FailedSpecification: java.lang.Object value>;

        return $r1;
    }

    public final java.lang.String getTag()
    {
        androidx.window.core.FailedSpecification r0;
        java.lang.String $r1;

        r0 := @this: androidx.window.core.FailedSpecification;

        $r1 = r0.<androidx.window.core.FailedSpecification: java.lang.String tag>;

        return $r1;
    }

    public final java.lang.String getMessage()
    {
        androidx.window.core.FailedSpecification r0;
        java.lang.String $r1;

        r0 := @this: androidx.window.core.FailedSpecification;

        $r1 = r0.<androidx.window.core.FailedSpecification: java.lang.String message>;

        return $r1;
    }

    public final androidx.window.core.Logger getLogger()
    {
        androidx.window.core.FailedSpecification r0;
        androidx.window.core.Logger $r1;

        r0 := @this: androidx.window.core.FailedSpecification;

        $r1 = r0.<androidx.window.core.FailedSpecification: androidx.window.core.Logger logger>;

        return $r1;
    }

    public final androidx.window.core.SpecificationComputer$VerificationMode getVerificationMode()
    {
        androidx.window.core.FailedSpecification r0;
        androidx.window.core.SpecificationComputer$VerificationMode $r1;

        r0 := @this: androidx.window.core.FailedSpecification;

        $r1 = r0.<androidx.window.core.FailedSpecification: androidx.window.core.SpecificationComputer$VerificationMode verificationMode>;

        return $r1;
    }

    public final androidx.window.core.WindowStrictModeException getException()
    {
        androidx.window.core.FailedSpecification r0;
        androidx.window.core.WindowStrictModeException $r1;

        r0 := @this: androidx.window.core.FailedSpecification;

        $r1 = r0.<androidx.window.core.FailedSpecification: androidx.window.core.WindowStrictModeException exception>;

        return $r1;
    }

    public androidx.window.core.SpecificationComputer require(java.lang.String, kotlin.jvm.functions.Function1)
    {
        androidx.window.core.FailedSpecification r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function1 r2;
        androidx.window.core.SpecificationComputer $r3;

        r0 := @this: androidx.window.core.FailedSpecification;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "message");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "condition");

        $r3 = (androidx.window.core.SpecificationComputer) r0;

        return $r3;
    }

    public java.lang.Object compute()
    {
        androidx.window.core.FailedSpecification r0;
        int[] $r1;
        androidx.window.core.SpecificationComputer$VerificationMode $r2;
        int $i0, $i1;
        java.lang.String $r3, $r6, $r7;
        java.lang.Object $r4;
        androidx.window.core.Logger $r5;
        androidx.window.core.WindowStrictModeException $r8;
        kotlin.NoWhenBranchMatchedException r10;
        java.lang.Throwable r11;

        r0 := @this: androidx.window.core.FailedSpecification;

        $r2 = r0.<androidx.window.core.FailedSpecification: androidx.window.core.SpecificationComputer$VerificationMode verificationMode>;

        $r1 = <androidx.window.core.FailedSpecification$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r2.<androidx.window.core.SpecificationComputer$VerificationMode: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r8 = r0.<androidx.window.core.FailedSpecification: androidx.window.core.WindowStrictModeException exception>;

        r11 = (java.lang.Throwable) $r8;

        throw r11;

     label2:
        $r5 = r0.<androidx.window.core.FailedSpecification: androidx.window.core.Logger logger>;

        $r6 = r0.<androidx.window.core.FailedSpecification: java.lang.String tag>;

        $r4 = r0.<androidx.window.core.FailedSpecification: java.lang.Object value>;

        $r3 = r0.<androidx.window.core.FailedSpecification: java.lang.String message>;

        $r7 = virtualinvoke r0.<androidx.window.core.FailedSpecification: java.lang.String createMessage(java.lang.Object,java.lang.String)>($r4, $r3);

        interfaceinvoke $r5.<androidx.window.core.Logger: void debug(java.lang.String,java.lang.String)>($r6, $r7);

        goto label5;

     label3:
        goto label5;

     label4:
        r10 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke r10.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw r10;

     label5:
        return null;
    }

androidx.window.core.FailedSpecification$WhenMappings
<androidx.window.core.FailedSpecification$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.window.core.SpecificationComputer$VerificationMode[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.window.core.SpecificationComputer$VerificationMode $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode STRICT>;

        $i1 = virtualinvoke $r2.<androidx.window.core.SpecificationComputer$VerificationMode: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode LOG>;

        $i2 = virtualinvoke $r3.<androidx.window.core.SpecificationComputer$VerificationMode: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode QUIET>;

        $i3 = virtualinvoke $r4.<androidx.window.core.SpecificationComputer$VerificationMode: int ordinal()>();

        r0[$i3] = 3;

        <androidx.window.core.FailedSpecification$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

