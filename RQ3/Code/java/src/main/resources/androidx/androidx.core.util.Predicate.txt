androidx.core.util.Predicate
<androidx.core.util.Predicate: boolean test(java.lang.Object)>
    public androidx.core.util.Predicate and(androidx.core.util.Predicate)
    {
        androidx.core.util.Predicate r0, r1, $r3;

        r0 := @this: androidx.core.util.Predicate;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = dynamicinvoke "test" <androidx.core.util.Predicate (androidx.core.util.Predicate,androidx.core.util.Predicate)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.core.util.Predicate: boolean lambda$and$0(androidx.core.util.Predicate,java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.Object));

        return $r3;
    }

    public androidx.core.util.Predicate negate()
    {
        androidx.core.util.Predicate r0, $r1;

        r0 := @this: androidx.core.util.Predicate;

        $r1 = dynamicinvoke "test" <androidx.core.util.Predicate (androidx.core.util.Predicate)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.core.util.Predicate: boolean lambda$negate$1(java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.Object));

        return $r1;
    }

    public androidx.core.util.Predicate or(androidx.core.util.Predicate)
    {
        androidx.core.util.Predicate r0, r1, $r3;

        r0 := @this: androidx.core.util.Predicate;

        r1 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = dynamicinvoke "test" <androidx.core.util.Predicate (androidx.core.util.Predicate,androidx.core.util.Predicate)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.core.util.Predicate: boolean lambda$or$2(androidx.core.util.Predicate,java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.Object));

        return $r3;
    }

    public static androidx.core.util.Predicate isEqual(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.core.util.Predicate $r1;

        r0 := @parameter0: java.lang.Object;

        if null != r0 goto label1;

        $r1 = dynamicinvoke "test" <androidx.core.util.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.util.Predicate: boolean lambda$isEqual$3(java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.Object));

        goto label2;

     label1:
        $r1 = dynamicinvoke "test" <androidx.core.util.Predicate (java.lang.Object)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.util.Predicate: boolean lambda$isEqual$4(java.lang.Object,java.lang.Object)>, methodtype: boolean __METHODTYPE__(java.lang.Object));

     label2:
        return $r1;
    }

    public static androidx.core.util.Predicate not(androidx.core.util.Predicate)
    {
        androidx.core.util.Predicate r0, $r2;

        r0 := @parameter0: androidx.core.util.Predicate;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = interfaceinvoke r0.<androidx.core.util.Predicate: androidx.core.util.Predicate negate()>();

        return $r2;
    }

    private static boolean lambda$isEqual$4(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    private static boolean lambda$isEqual$3(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <java.util.Objects: boolean isNull(java.lang.Object)>(r0);

        return $z0;
    }

    private boolean lambda$or$2(androidx.core.util.Predicate, java.lang.Object)
    {
        androidx.core.util.Predicate r0, r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.core.util.Predicate;

        r1 := @parameter0: androidx.core.util.Predicate;

        r2 := @parameter1: java.lang.Object;

        $z0 = interfaceinvoke r0.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r1.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean lambda$negate$1(java.lang.Object)
    {
        androidx.core.util.Predicate r0;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: androidx.core.util.Predicate;

        r1 := @parameter0: java.lang.Object;

        $z0 = interfaceinvoke r0.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean lambda$and$0(androidx.core.util.Predicate, java.lang.Object)
    {
        androidx.core.util.Predicate r0, r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.core.util.Predicate;

        r1 := @parameter0: androidx.core.util.Predicate;

        r2 := @parameter1: java.lang.Object;

        $z0 = interfaceinvoke r0.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r1.<androidx.core.util.Predicate: boolean test(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

