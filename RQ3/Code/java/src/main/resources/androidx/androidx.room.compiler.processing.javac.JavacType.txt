androidx.room.compiler.processing.javac.JavacType
<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>
<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror typeMirror>
<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability maybeNullability>
<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy rawType$delegate>
<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy superTypes$delegate>
<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy typeElement$delegate>
<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy typeName$delegate>
<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy xTypeName$delegate>
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, javax.lang.model.type.TypeMirror, androidx.room.compiler.processing.XNullability)
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        javax.lang.model.type.TypeMirror r2;
        androidx.room.compiler.processing.XNullability r3;
        androidx.room.compiler.processing.javac.JavacType$rawType$2 $r4;
        kotlin.jvm.functions.Function0 $r5, $r8, $r11, $r14, $r17;
        kotlin.Lazy $r6, $r9, $r12, $r15, $r18;
        androidx.room.compiler.processing.javac.JavacType$superTypes$2 $r7;
        androidx.room.compiler.processing.javac.JavacType$typeElement$2 $r10;
        androidx.room.compiler.processing.javac.JavacType$typeName$2 $r13;
        androidx.room.compiler.processing.javac.JavacType$xTypeName$2 $r16;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: javax.lang.model.type.TypeMirror;

        r3 := @parameter2: androidx.room.compiler.processing.XNullability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeMirror");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env> = r1;

        r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror typeMirror> = r2;

        r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability maybeNullability> = r3;

        $r4 = new androidx.room.compiler.processing.javac.JavacType$rawType$2;

        specialinvoke $r4.<androidx.room.compiler.processing.javac.JavacType$rawType$2: void <init>(androidx.room.compiler.processing.javac.JavacType)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r5);

        r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy rawType$delegate> = $r6;

        $r7 = new androidx.room.compiler.processing.javac.JavacType$superTypes$2;

        specialinvoke $r7.<androidx.room.compiler.processing.javac.JavacType$superTypes$2: void <init>(androidx.room.compiler.processing.javac.JavacType)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        $r9 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r8);

        r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy superTypes$delegate> = $r9;

        $r10 = new androidx.room.compiler.processing.javac.JavacType$typeElement$2;

        specialinvoke $r10.<androidx.room.compiler.processing.javac.JavacType$typeElement$2: void <init>(androidx.room.compiler.processing.javac.JavacType)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        $r12 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r11);

        r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy typeElement$delegate> = $r12;

        $r13 = new androidx.room.compiler.processing.javac.JavacType$typeName$2;

        specialinvoke $r13.<androidx.room.compiler.processing.javac.JavacType$typeName$2: void <init>(androidx.room.compiler.processing.javac.JavacType)>(r0);

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        $r15 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r14);

        r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy typeName$delegate> = $r15;

        $r16 = new androidx.room.compiler.processing.javac.JavacType$xTypeName$2;

        specialinvoke $r16.<androidx.room.compiler.processing.javac.JavacType$xTypeName$2: void <init>(androidx.room.compiler.processing.javac.JavacType)>(r0);

        $r17 = (kotlin.jvm.functions.Function0) $r16;

        $r18 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r17);

        r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy xTypeName$delegate> = $r18;

        return;
    }

    public final androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        return $r1;
    }

    public javax.lang.model.type.TypeMirror getTypeMirror()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        javax.lang.model.type.TypeMirror $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror typeMirror>;

        return $r1;
    }

    public final androidx.room.compiler.processing.XNullability getMaybeNullability$room_compiler_processing()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        androidx.room.compiler.processing.XNullability $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability maybeNullability>;

        return $r1;
    }

<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.kotlin.KmType getKotlinType()>
    public androidx.room.compiler.processing.XRawType getRawType()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XRawType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy rawType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XRawType) $r2;

        return $r3;
    }

    public java.util.List getSuperTypes()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy superTypes$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.javac.JavacTypeElement getTypeElement()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.JavacTypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy typeElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.JavacTypeElement) $r2;

        return $r3;
    }

    public boolean isError()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        javax.lang.model.type.TypeMirror $r1;
        javax.lang.model.type.TypeKind $r2, $r3;
        androidx.room.compiler.processing.javac.kotlin.KmType $r4;
        androidx.room.compiler.codegen.XTypeName $r5;
        com.squareup.javapoet.TypeName $r6;
        com.squareup.javapoet.ClassName $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r2 = interfaceinvoke $r1.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r3 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind ERROR>;

        if $r2 == $r3 goto label1;

        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.kotlin.KmType getKotlinType()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r6 = virtualinvoke $r5.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r7 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeJavaPoetExtKt: com.squareup.javapoet.ClassName getERROR_JTYPE_NAME()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public com.squareup.javapoet.TypeName getTypeName()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.squareup.javapoet.TypeName $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy typeName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (com.squareup.javapoet.TypeName) $r2;

        return $r3;
    }

    private final androidx.room.compiler.codegen.XTypeName getXTypeName()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.codegen.XTypeName $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacType: kotlin.Lazy xTypeName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.codegen.XTypeName) $r2;

        return $r3;
    }

    public androidx.room.compiler.codegen.XTypeName asTypeName()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        java.lang.Object r1;
        androidx.room.compiler.processing.XEquality$Companion $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 := @parameter0: java.lang.Object;

        $r2 = <androidx.room.compiler.processing.XEquality: androidx.room.compiler.processing.XEquality$Companion Companion>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.XEquality$Companion: boolean equals(java.lang.Object,java.lang.Object)>(r0, r1);

        return $z0;
    }

    public int hashCode()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        androidx.room.compiler.processing.XEquality$Companion $r1;
        java.lang.Object[] $r2;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = <androidx.room.compiler.processing.XEquality: androidx.room.compiler.processing.XEquality$Companion Companion>;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: java.lang.Object[] getEqualityItems()>();

        $i0 = virtualinvoke $r1.<androidx.room.compiler.processing.XEquality$Companion: int hashCode(java.lang.Object[])>($r2);

        return $i0;
    }

    public java.lang.String defaultValue()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        javax.lang.model.type.TypeMirror $r1;
        javax.lang.model.type.TypeKind $r2;
        int[] $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r2 = interfaceinvoke $r1.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r2 != null goto label1;

        $i1 = -1;

        goto label2;

     label1:
        $r3 = <androidx.room.compiler.processing.javac.JavacType$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r2.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i1 = $r3[$i0];

     label2:
        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label6;
            case 8: goto label7;
            default: goto label8;
        };

     label3:
        $r4 = "false";

        goto label9;

     label4:
        $r4 = "0";

        goto label9;

     label5:
        $r4 = "0L";

        goto label9;

     label6:
        $r4 = "0f";

        goto label9;

     label7:
        $r4 = "0.0";

        goto label9;

     label8:
        $r4 = "null";

     label9:
        return $r4;
    }

    public androidx.room.compiler.processing.javac.JavacType boxed()
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r44;
        javax.lang.model.type.TypeMirror $r1, $r3, $r10, $r24, $r27, r40, r48;
        javax.lang.model.type.TypeKind $r2, $r4, $r5, $r11, $r28;
        boolean $z0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r6, $r22, r39, r47;
        javax.lang.model.util.Elements $r7;
        java.lang.CharSequence $r8;
        javax.lang.model.element.TypeElement $r9, $r26;
        int[] $r12, $r29;
        int $i0, $i1, $i2, $i3;
        javax.lang.model.type.DeclaredType $r13, $r14, $r16, $r30, $r31, $r33;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r15, $r32, $r45, $r52;
        javax.lang.model.type.ArrayType $r17, $r18, $r20, $r34, $r35, $r37;
        androidx.room.compiler.processing.javac.JavacArrayType $r19, $r36, $r43, $r51;
        androidx.room.compiler.processing.javac.DefaultJavacType $r21, $r38, $r46, $r53;
        javax.lang.model.util.Types $r23;
        javax.lang.model.type.PrimitiveType $r25;
        androidx.room.compiler.processing.javac.kotlin.KmType r41, r49;
        androidx.room.compiler.processing.XNullability r42, r50;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r2 = interfaceinvoke $r1.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $z0 = virtualinvoke $r2.<javax.lang.model.type.TypeKind: boolean isPrimitive()>();

        if $z0 == 0 goto label16;

        r39 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        $r22 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        $r23 = virtualinvoke $r22.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r24 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r25 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.PrimitiveType asPrimitiveType(javax.lang.model.type.TypeMirror)>($r24);

        $r26 = interfaceinvoke $r23.<javax.lang.model.util.Types: javax.lang.model.element.TypeElement boxedClass(javax.lang.model.type.PrimitiveType)>($r25);

        $r27 = interfaceinvoke $r26.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "env.typeUtils.boxedClass\u2026                .asType()");

        r40 = $r27;

        r41 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.kotlin.KmType getKotlinType()>();

        r42 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NULLABLE>;

        $r28 = interfaceinvoke r40.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r28 != null goto label01;

        $i2 = -1;

        goto label02;

     label01:
        $r29 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke $r28.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i2 = $r29[$i1];

     label02:
        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label07;
            default: goto label11;
        };

     label03:
        if r41 == null goto label04;

        $r36 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r43 = $r36;

        $r37 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r40);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r37, "asArray(typeMirror)");

        specialinvoke $r36.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r39, $r37, r41);

        goto label06;

     label04:
        if r42 == null goto label05;

        $r43 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r35 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r40);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r35, "asArray(typeMirror)");

        specialinvoke $r43.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r39, $r35, r42, null);

        goto label06;

     label05:
        $r43 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r34 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r40);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r34, "asArray(typeMirror)");

        specialinvoke $r43.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r39, $r34);

     label06:
        $r44 = (androidx.room.compiler.processing.javac.JavacType) $r43;

        goto label15;

     label07:
        if r41 == null goto label08;

        $r32 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r45 = $r32;

        $r33 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r40);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "asDeclared(typeMirror)");

        specialinvoke $r32.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r39, $r33, r41);

        goto label10;

     label08:
        if r42 == null goto label09;

        $r45 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r31 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r40);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r31, "asDeclared(typeMirror)");

        specialinvoke $r45.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r39, $r31, r42);

        goto label10;

     label09:
        $r45 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r30 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r40);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "asDeclared(typeMirror)");

        specialinvoke $r45.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r39, $r30);

     label10:
        $r44 = (androidx.room.compiler.processing.javac.JavacType) $r45;

        goto label15;

     label11:
        if r41 == null goto label12;

        $r38 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        $r46 = $r38;

        specialinvoke $r38.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.javac.kotlin.KmType)>(r39, r40, r41);

        goto label14;

     label12:
        if r42 == null goto label13;

        $r46 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r46.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r39, r40, r42);

        goto label14;

     label13:
        $r46 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r46.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r39, r40);

     label14:
        $r44 = (androidx.room.compiler.processing.javac.JavacType) $r46;

     label15:
        goto label33;

     label16:
        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r4 = interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r5 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind VOID>;

        if $r4 != $r5 goto label32;

        r47 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        $r6 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        $r7 = virtualinvoke $r6.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Elements getElementUtils()>();

        $r8 = (java.lang.CharSequence) "java.lang.Void";

        $r9 = interfaceinvoke $r7.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r8);

        $r10 = interfaceinvoke $r9.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "env.elementUtils.getType\u2026java.lang.Void\").asType()");

        r48 = $r10;

        r49 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.kotlin.KmType getKotlinType()>();

        r50 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NULLABLE>;

        $r11 = interfaceinvoke r48.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r11 != null goto label17;

        $i3 = -1;

        goto label18;

     label17:
        $r12 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r11.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i3 = $r12[$i0];

     label18:
        tableswitch($i3)
        {
            case 1: goto label19;
            case 2: goto label23;
            default: goto label27;
        };

     label19:
        if r49 == null goto label20;

        $r19 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r51 = $r19;

        $r20 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r48);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "asArray(typeMirror)");

        specialinvoke $r19.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r47, $r20, r49);

        goto label22;

     label20:
        if r50 == null goto label21;

        $r51 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r18 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r48);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "asArray(typeMirror)");

        specialinvoke $r51.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r47, $r18, r50, null);

        goto label22;

     label21:
        $r51 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r17 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r48);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "asArray(typeMirror)");

        specialinvoke $r51.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r47, $r17);

     label22:
        $r44 = (androidx.room.compiler.processing.javac.JavacType) $r51;

        goto label31;

     label23:
        if r49 == null goto label24;

        $r15 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r52 = $r15;

        $r16 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r48);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "asDeclared(typeMirror)");

        specialinvoke $r15.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r47, $r16, r49);

        goto label26;

     label24:
        if r50 == null goto label25;

        $r52 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r14 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r48);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "asDeclared(typeMirror)");

        specialinvoke $r52.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r47, $r14, r50);

        goto label26;

     label25:
        $r52 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r13 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r48);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "asDeclared(typeMirror)");

        specialinvoke $r52.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r47, $r13);

     label26:
        $r44 = (androidx.room.compiler.processing.javac.JavacType) $r52;

        goto label31;

     label27:
        if r49 == null goto label28;

        $r21 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        $r53 = $r21;

        specialinvoke $r21.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.javac.kotlin.KmType)>(r47, r48, r49);

        goto label30;

     label28:
        if r50 == null goto label29;

        $r53 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r53.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r47, r48, r50);

        goto label30;

     label29:
        $r53 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r53.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r47, r48);

     label30:
        $r44 = (androidx.room.compiler.processing.javac.JavacType) $r53;

     label31:
        goto label33;

     label32:
        $r44 = r0;

     label33:
        return $r44;
    }

    public boolean isNone()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        javax.lang.model.type.TypeMirror $r1;
        javax.lang.model.type.TypeKind $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r2 = interfaceinvoke $r1.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r3 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind NONE>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        javax.lang.model.type.TypeMirror $r1;
        java.lang.String $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public androidx.room.compiler.processing.XType extendsBound()
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r21;
        javax.lang.model.type.TypeMirror r1, $r5, $r6;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r2;
        androidx.room.compiler.processing.javac.kotlin.KmType r3, $r7, $r19;
        androidx.room.compiler.processing.XNullability r4;
        javax.lang.model.type.TypeKind $r8;
        int[] $r9;
        int $i0, $i1;
        javax.lang.model.type.DeclaredType $r10, $r11, $r13;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r12, $r22;
        javax.lang.model.type.ArrayType $r14, $r15, $r17;
        androidx.room.compiler.processing.javac.JavacArrayType $r16, $r20;
        androidx.room.compiler.processing.javac.DefaultJavacType $r18, $r23;
        androidx.room.compiler.processing.XType $r24;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r6 = staticinvoke <androidx.room.compiler.processing.javac.TypeMirrorExtKt: javax.lang.model.type.TypeMirror extendsBound(javax.lang.model.type.TypeMirror)>($r5);

        if $r6 == null goto label18;

        r1 = $r6;

        r2 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        $r7 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.kotlin.KmType getKotlinType()>();

        if $r7 == null goto label01;

        $r19 = virtualinvoke $r7.<androidx.room.compiler.processing.javac.kotlin.KmType: androidx.room.compiler.processing.javac.kotlin.KmType getExtendsBound()>();

        goto label02;

     label01:
        $r19 = null;

     label02:
        r3 = $r19;

        r4 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability maybeNullability>;

        $r8 = interfaceinvoke r1.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r8 != null goto label03;

        $i1 = -1;

        goto label04;

     label03:
        $r9 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r8.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i1 = $r9[$i0];

     label04:
        tableswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label09;
            default: goto label13;
        };

     label05:
        if r3 == null goto label06;

        $r16 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r20 = $r16;

        $r17 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "asArray(typeMirror)");

        specialinvoke $r16.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r2, $r17, r3);

        goto label08;

     label06:
        if r4 == null goto label07;

        $r20 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r15 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "asArray(typeMirror)");

        specialinvoke $r20.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r2, $r15, r4, null);

        goto label08;

     label07:
        $r20 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r14 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "asArray(typeMirror)");

        specialinvoke $r20.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r2, $r14);

     label08:
        $r21 = (androidx.room.compiler.processing.javac.JavacType) $r20;

        goto label17;

     label09:
        if r3 == null goto label10;

        $r12 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r22 = $r12;

        $r13 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "asDeclared(typeMirror)");

        specialinvoke $r12.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r2, $r13, r3);

        goto label12;

     label10:
        if r4 == null goto label11;

        $r22 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r11 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "asDeclared(typeMirror)");

        specialinvoke $r22.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r2, $r11, r4);

        goto label12;

     label11:
        $r22 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r10 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "asDeclared(typeMirror)");

        specialinvoke $r22.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r2, $r10);

     label12:
        $r21 = (androidx.room.compiler.processing.javac.JavacType) $r22;

        goto label17;

     label13:
        if r3 == null goto label14;

        $r18 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        $r23 = $r18;

        specialinvoke $r18.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.javac.kotlin.KmType)>(r2, r1, r3);

        goto label16;

     label14:
        if r4 == null goto label15;

        $r23 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r23.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r2, r1, r4);

        goto label16;

     label15:
        $r23 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r23.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r2, r1);

     label16:
        $r21 = (androidx.room.compiler.processing.javac.JavacType) $r23;

     label17:
        goto label19;

     label18:
        $r21 = null;

     label19:
        $r24 = (androidx.room.compiler.processing.XType) $r21;

        return $r24;
    }

    public boolean isAssignableFrom(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r4;
        androidx.room.compiler.processing.XType r1;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        javax.lang.model.util.Types $r3;
        javax.lang.model.type.TypeMirror $r5, $r6;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacType;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r4 = (androidx.room.compiler.processing.javac.JavacType) r1;

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r6 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $z1 = interfaceinvoke $r3.<javax.lang.model.util.Types: boolean isAssignable(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>($r5, $r6);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isTypeOf(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        kotlin.reflect.KClass r1;
        java.lang.Throwable r2, $r5;
        java.lang.Class $r3;
        javax.lang.model.type.TypeMirror $r4;
        boolean z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

     label1:
        $r3 = staticinvoke <kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)>(r1);

        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean isTypeOf(java.lang.Class,javax.lang.model.type.TypeMirror)>($r3, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        z0 = 0;

     label4:
        return z0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public boolean isSameType(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r5;
        androidx.room.compiler.processing.XType r1;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        javax.lang.model.util.Types $r3;
        javax.lang.model.type.TypeMirror $r4, $r6;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacType;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r5 = (androidx.room.compiler.processing.javac.JavacType) r1;

        $r6 = virtualinvoke $r5.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $z1 = interfaceinvoke $r3.<javax.lang.model.util.Types: boolean isSameType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>($r4, $r6);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacType copyWithNullability(androidx.room.compiler.processing.XNullability)>
    public final androidx.room.compiler.processing.javac.JavacType makeNullable()
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r5, $r6, $r11;
        androidx.room.compiler.processing.XNullability $r1, $r2, $r10;
        javax.lang.model.type.TypeMirror $r3, $r7;
        javax.lang.model.type.TypeKind $r4, $r8, $r9;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability getNullability()>();

        $r2 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NULLABLE>;

        if $r1 != $r2 goto label1;

        return r0;

     label1:
        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r4 = interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $z0 = virtualinvoke $r4.<javax.lang.model.type.TypeKind: boolean isPrimitive()>();

        if $z0 != 0 goto label2;

        $r7 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r9 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind VOID>;

        if $r8 != $r9 goto label3;

     label2:
        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacType boxed()>();

        $r6 = virtualinvoke $r5.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacType makeNullable()>();

        return $r6;

     label3:
        $r10 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NULLABLE>;

        $r11 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacType copyWithNullability(androidx.room.compiler.processing.XNullability)>($r10);

        return $r11;
    }

    public final androidx.room.compiler.processing.javac.JavacType makeNonNullable()
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r4;
        androidx.room.compiler.processing.XNullability $r1, $r2, $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability getNullability()>();

        $r2 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

        if $r1 != $r2 goto label1;

        return r0;

     label1:
        $r3 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacType copyWithNullability(androidx.room.compiler.processing.XNullability)>($r3);

        return $r4;
    }

    public androidx.room.compiler.processing.XNullability getNullability()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        androidx.room.compiler.processing.XNullability $r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability maybeNullability>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = "XType#nullibility cannot be called from this type because it is missing nullability information. Was this type derived from a type created with TypeMirror#toXProcessing(XProcessingEnv)?";

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        return $r1;
    }

    public volatile androidx.room.compiler.processing.XTypeElement getTypeElement()
    {
        androidx.room.compiler.processing.javac.JavacType r0;
        androidx.room.compiler.processing.javac.JavacTypeElement $r1;
        androidx.room.compiler.processing.XTypeElement $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacTypeElement getTypeElement()>();

        $r2 = (androidx.room.compiler.processing.XTypeElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType boxed()
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacType boxed()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType makeNullable()
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacType makeNullable()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType makeNonNullable()
    {
        androidx.room.compiler.processing.javac.JavacType r0, $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacType makeNonNullable()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getXTypeName(androidx.room.compiler.processing.javac.JavacType)
    {
        androidx.room.compiler.processing.javac.JavacType $r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.javac.JavacType;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacType$rawType$2
<androidx.room.compiler.processing.javac.JavacType$rawType$2: androidx.room.compiler.processing.javac.JavacType this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacType)
    {
        androidx.room.compiler.processing.javac.JavacType$rawType$2 r0;
        androidx.room.compiler.processing.javac.JavacType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$rawType$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacType;

        r0.<androidx.room.compiler.processing.javac.JavacType$rawType$2: androidx.room.compiler.processing.javac.JavacType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.processing.javac.JavacRawType invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$rawType$2 r0;
        androidx.room.compiler.processing.javac.JavacRawType $r1;
        androidx.room.compiler.processing.javac.JavacType $r2, $r4;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$rawType$2;

        $r1 = new androidx.room.compiler.processing.javac.JavacRawType;

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacType$rawType$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r4 = r0.<androidx.room.compiler.processing.javac.JavacType$rawType$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        specialinvoke $r1.<androidx.room.compiler.processing.javac.JavacRawType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacType)>($r3, $r4);

        return $r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$rawType$2 r0;
        androidx.room.compiler.processing.javac.JavacRawType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$rawType$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType$rawType$2: androidx.room.compiler.processing.javac.JavacRawType invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacType$superTypes$2
<androidx.room.compiler.processing.javac.JavacType$superTypes$2: androidx.room.compiler.processing.javac.JavacType this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacType)
    {
        androidx.room.compiler.processing.javac.JavacType$superTypes$2 r0;
        androidx.room.compiler.processing.javac.JavacType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$superTypes$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacType;

        r0.<androidx.room.compiler.processing.javac.JavacType$superTypes$2: androidx.room.compiler.processing.javac.JavacType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.List invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$superTypes$2 r0;
        java.util.List r1, $r20;
        java.lang.Iterable $r2;
        androidx.room.compiler.processing.javac.JavacType r3, $r14, $r17, $r35, $r39;
        java.util.Collection r4, r13;
        java.util.Iterator r5;
        java.lang.Object r6;
        javax.lang.model.type.TypeMirror r7, r10, $r18;
        javax.lang.model.element.TypeElement r8;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r9, $r15;
        androidx.room.compiler.processing.javac.kotlin.KmType r11, $r37;
        androidx.room.compiler.processing.XNullability r12;
        javax.lang.model.util.Types $r16;
        java.util.ArrayList $r19;
        int $i0, $i1, $i2;
        boolean $z4;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement$Companion $r21;
        javax.lang.model.element.Element $r22, $r24;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r23;
        javax.lang.model.type.TypeKind $r25;
        int[] $r26;
        javax.lang.model.type.DeclaredType $r27, $r28, $r30;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r29, $r40;
        javax.lang.model.type.ArrayType $r31, $r32, $r34;
        androidx.room.compiler.processing.javac.JavacArrayType $r33, $r38;
        androidx.room.compiler.processing.javac.DefaultJavacType $r36, $r41;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$superTypes$2;

        $r14 = r0.<androidx.room.compiler.processing.javac.JavacType$superTypes$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        $r15 = virtualinvoke $r14.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r16 = virtualinvoke $r15.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r17 = r0.<androidx.room.compiler.processing.javac.JavacType$superTypes$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        $r18 = virtualinvoke $r17.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        r1 = interfaceinvoke $r16.<javax.lang.model.util.Types: java.util.List directSupertypes(javax.lang.model.type.TypeMirror)>($r18);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "superTypes");

        $r2 = (java.lang.Iterable) r1;

        r3 = r0.<androidx.room.compiler.processing.javac.JavacType$superTypes$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        $r19 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r19;

        r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.type.TypeMirror) r6;

        r13 = r4;

        r8 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.element.TypeElement asTypeElement(javax.lang.model.type.TypeMirror)>(r7);

        r9 = virtualinvoke r3.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "it");

        r10 = r7;

        $r21 = <androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement$Companion Companion>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r8, "element");

        $r22 = (javax.lang.model.element.Element) r8;

        $r23 = virtualinvoke $r21.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement$Companion: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement createFor(javax.lang.model.element.Element)>($r22);

        if $r23 == null goto label02;

        $r37 = virtualinvoke $r23.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: androidx.room.compiler.processing.javac.kotlin.KmType getKmType()>();

        goto label03;

     label02:
        $r37 = null;

     label03:
        r11 = $r37;

        $r24 = (javax.lang.model.element.Element) r8;

        r12 = staticinvoke <androidx.room.compiler.processing.javac.ElementExtKt: androidx.room.compiler.processing.XNullability getNullability(javax.lang.model.element.Element)>($r24);

        $r25 = interfaceinvoke r10.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r25 != null goto label04;

        $i2 = -1;

        goto label05;

     label04:
        $r26 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke $r25.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i2 = $r26[$i1];

     label05:
        tableswitch($i2)
        {
            case 1: goto label06;
            case 2: goto label10;
            default: goto label14;
        };

     label06:
        if r11 == null goto label07;

        $r33 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r38 = $r33;

        $r34 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r34, "asArray(typeMirror)");

        specialinvoke $r33.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r9, $r34, r11);

        goto label09;

     label07:
        if r12 == null goto label08;

        $r38 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r32 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r32, "asArray(typeMirror)");

        specialinvoke $r38.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r9, $r32, r12, null);

        goto label09;

     label08:
        $r38 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r31 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r31, "asArray(typeMirror)");

        specialinvoke $r38.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r9, $r31);

     label09:
        $r39 = (androidx.room.compiler.processing.javac.JavacType) $r38;

        goto label18;

     label10:
        if r11 == null goto label11;

        $r29 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r40 = $r29;

        $r30 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "asDeclared(typeMirror)");

        specialinvoke $r29.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r9, $r30, r11);

        goto label13;

     label11:
        if r12 == null goto label12;

        $r40 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r28 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r28, "asDeclared(typeMirror)");

        specialinvoke $r40.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r9, $r28, r12);

        goto label13;

     label12:
        $r40 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r27 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "asDeclared(typeMirror)");

        specialinvoke $r40.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r9, $r27);

     label13:
        $r39 = (androidx.room.compiler.processing.javac.JavacType) $r40;

        goto label18;

     label14:
        if r11 == null goto label15;

        $r36 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        $r41 = $r36;

        specialinvoke $r36.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.javac.kotlin.KmType)>(r9, r10, r11);

        goto label17;

     label15:
        if r12 == null goto label16;

        $r41 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r41.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r9, r10, r12);

        goto label17;

     label16:
        $r41 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r41.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r9, r10);

     label17:
        $r35 = (androidx.room.compiler.processing.javac.JavacType) $r41;

        $r39 = $r35;

     label18:
        interfaceinvoke r13.<java.util.Collection: boolean add(java.lang.Object)>($r39);

        goto label01;

     label19:
        $r20 = (java.util.List) r4;

        return $r20;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$superTypes$2 r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$superTypes$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType$superTypes$2: java.util.List invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacType$typeElement$2
<androidx.room.compiler.processing.javac.JavacType$typeElement$2: androidx.room.compiler.processing.javac.JavacType this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacType)
    {
        androidx.room.compiler.processing.javac.JavacType$typeElement$2 r0;
        androidx.room.compiler.processing.javac.JavacType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$typeElement$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacType;

        r0.<androidx.room.compiler.processing.javac.JavacType$typeElement$2: androidx.room.compiler.processing.javac.JavacType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.processing.javac.JavacTypeElement invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$typeElement$2 r0;
        javax.lang.model.element.TypeElement r1, r2, r8, r10;
        androidx.room.compiler.processing.javac.JavacType $r3, r11;
        javax.lang.model.type.TypeMirror $r4;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r5;
        java.lang.Throwable $r6, r9;
        androidx.room.compiler.processing.javac.JavacTypeElement $r12;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$typeElement$2;

     label1:
        $r3 = r0.<androidx.room.compiler.processing.javac.JavacType$typeElement$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        r8 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.element.TypeElement asTypeElement(javax.lang.model.type.TypeMirror)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r9 = $r6;

        r8 = (javax.lang.model.element.TypeElement) null;

     label4:
        r1 = r8;

        if r1 == null goto label5;

        r10 = r1;

        r11 = r0.<androidx.room.compiler.processing.javac.JavacType$typeElement$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        r2 = r10;

        $r5 = virtualinvoke r11.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r12 = virtualinvoke $r5.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement wrapTypeElement(javax.lang.model.element.TypeElement)>(r2);

        goto label6;

     label5:
        $r12 = null;

     label6:
        return $r12;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$typeElement$2 r0;
        androidx.room.compiler.processing.javac.JavacTypeElement $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$typeElement$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType$typeElement$2: androidx.room.compiler.processing.javac.JavacTypeElement invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacType$typeName$2
<androidx.room.compiler.processing.javac.JavacType$typeName$2: androidx.room.compiler.processing.javac.JavacType this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacType)
    {
        androidx.room.compiler.processing.javac.JavacType$typeName$2 r0;
        androidx.room.compiler.processing.javac.JavacType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$typeName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacType;

        r0.<androidx.room.compiler.processing.javac.JavacType$typeName$2: androidx.room.compiler.processing.javac.JavacType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final com.squareup.javapoet.TypeName invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$typeName$2 r0;
        androidx.room.compiler.processing.javac.JavacType $r1;
        androidx.room.compiler.codegen.XTypeName $r2;
        com.squareup.javapoet.TypeName $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$typeName$2;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacType$typeName$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        $r2 = staticinvoke <androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.codegen.XTypeName access$getXTypeName(androidx.room.compiler.processing.javac.JavacType)>($r1);

        $r3 = virtualinvoke $r2.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$typeName$2 r0;
        com.squareup.javapoet.TypeName $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$typeName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType$typeName$2: com.squareup.javapoet.TypeName invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacType$WhenMappings
<androidx.room.compiler.processing.javac.JavacType$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        javax.lang.model.type.TypeKind[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        javax.lang.model.type.TypeKind $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, r18, r19, r20, r21, r22, r23, r24, r25;

        $r1 = staticinvoke <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label01:
        $r2 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind BOOLEAN>;

        $i1 = virtualinvoke $r2.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

        r18 = $r10;

     label04:
        $r3 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind BYTE>;

        $i2 = virtualinvoke $r3.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r15 := @caughtexception;

        r19 = $r15;

     label07:
        $r4 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind SHORT>;

        $i3 = virtualinvoke $r4.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

        r20 = $r13;

     label10:
        $r5 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind INT>;

        $i4 = virtualinvoke $r5.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r11 := @caughtexception;

        r21 = $r11;

     label13:
        $r6 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind CHAR>;

        $i5 = virtualinvoke $r6.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i5] = 5;

     label14:
        goto label16;

     label15:
        $r12 := @caughtexception;

        r22 = $r12;

     label16:
        $r7 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind LONG>;

        $i6 = virtualinvoke $r7.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i6] = 6;

     label17:
        goto label19;

     label18:
        $r14 := @caughtexception;

        r23 = $r14;

     label19:
        $r8 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind FLOAT>;

        $i7 = virtualinvoke $r8.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i7] = 7;

     label20:
        goto label22;

     label21:
        $r17 := @caughtexception;

        r24 = $r17;

     label22:
        $r9 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind DOUBLE>;

        $i8 = virtualinvoke $r9.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i8] = 8;

     label23:
        goto label25;

     label24:
        $r16 := @caughtexception;

        r25 = $r16;

     label25:
        <androidx.room.compiler.processing.javac.JavacType$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
        catch java.lang.NoSuchFieldError from label16 to label17 with label18;
        catch java.lang.NoSuchFieldError from label19 to label20 with label21;
        catch java.lang.NoSuchFieldError from label22 to label23 with label24;
    }

androidx.room.compiler.processing.javac.JavacType$xTypeName$2
<androidx.room.compiler.processing.javac.JavacType$xTypeName$2: androidx.room.compiler.processing.javac.JavacType this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacType)
    {
        androidx.room.compiler.processing.javac.JavacType$xTypeName$2 r0;
        androidx.room.compiler.processing.javac.JavacType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$xTypeName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacType;

        r0.<androidx.room.compiler.processing.javac.JavacType$xTypeName$2: androidx.room.compiler.processing.javac.JavacType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.codegen.XTypeName invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$xTypeName$2 r0;
        androidx.room.compiler.processing.javac.JavacType $r1, $r7;
        androidx.room.compiler.codegen.XTypeName$Companion $r2, $r5;
        javax.lang.model.type.TypeMirror $r3;
        com.squareup.javapoet.TypeName $r4;
        com.squareup.kotlinpoet.ClassName $r6;
        com.squareup.kotlinpoet.TypeName $r8;
        androidx.room.compiler.codegen.XTypeName $r9;
        androidx.room.compiler.processing.XNullability $r10;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$xTypeName$2;

        $r2 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion>;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacType$xTypeName$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        $r3 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r4 = staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.TypeName safeTypeName(javax.lang.model.type.TypeMirror)>($r3);

        $r5 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.room.compiler.codegen.XTypeName$Companion: com.squareup.kotlinpoet.ClassName getUNAVAILABLE_KTYPE_NAME$room_compiler_processing()>();

        $r8 = (com.squareup.kotlinpoet.TypeName) $r6;

        $r7 = r0.<androidx.room.compiler.processing.javac.JavacType$xTypeName$2: androidx.room.compiler.processing.javac.JavacType this$0>;

        $r10 = virtualinvoke $r7.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability getMaybeNullability$room_compiler_processing()>();

        if $r10 != null goto label1;

        $r10 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability UNKNOWN>;

     label1:
        $r9 = virtualinvoke $r2.<androidx.room.compiler.codegen.XTypeName$Companion: androidx.room.compiler.codegen.XTypeName invoke(com.squareup.javapoet.TypeName,com.squareup.kotlinpoet.TypeName,androidx.room.compiler.processing.XNullability)>($r4, $r8, $r10);

        return $r9;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacType$xTypeName$2 r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacType$xTypeName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacType$xTypeName$2: androidx.room.compiler.codegen.XTypeName invoke()>();

        return $r1;
    }

