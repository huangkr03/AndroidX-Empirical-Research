androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder builder>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: java.lang.Object lastIteratedElement>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: boolean nextWasInvoked>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: int expectedModCount>
    public void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r1, $r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "builder");

        $r2 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()>();

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>($r2);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder builder> = r1;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder builder>;

        $i0 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int getModCount$runtime_release()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: int expectedModCount> = $i0;

        return;
    }

    public java.lang.Object next()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: void checkForComodification()>();

        r1 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetIterator: java.lang.Object next()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: java.lang.Object lastIteratedElement> = r1;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: boolean nextWasInvoked> = 1;

        return r1;
    }

    public void remove()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator r0;
        java.lang.Object r1, r10, r13;
        boolean $z0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder $r2, $r4, $r5, $r7;
        java.util.Collection $r3, $r6, r11, r12;
        int $i0, $i1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r8;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: void checkNextWasInvoked()>();

        $z0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r10 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: java.lang.Object currentElement()>();

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder builder>;

        r11 = (java.util.Collection) $r5;

        r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: java.lang.Object lastIteratedElement>;

        $r6 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)>(r11);

        interfaceinvoke $r6.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        if r10 == null goto label1;

        $i1 = virtualinvoke r10.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $r7 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder builder>;

        $r8 = virtualinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getNode$runtime_release()>();

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: void resetPath(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,java.lang.Object,int)>($i1, $r8, r10, 0);

        goto label4;

     label3:
        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder builder>;

        r12 = (java.util.Collection) $r2;

        r13 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: java.lang.Object lastIteratedElement>;

        $r3 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)>(r12);

        interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>(r13);

     label4:
        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: java.lang.Object lastIteratedElement> = null;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: boolean nextWasInvoked> = 0;

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder builder>;

        $i0 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int getModCount$runtime_release()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: int expectedModCount> = $i0;

        return;
    }

    private final void resetPath(int, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, java.lang.Object, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator r0;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r1, $r9;
        java.lang.Object r2, r3, $r5, $r12;
        boolean $z0, $z1, $z2;
        java.util.List $r4, $r11;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator $r6, $r13;
        java.lang.Object[] $r7, $r8, $r10, $r14;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r2 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        $z0 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: boolean isCollision(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>(r1);

        if $z0 == 0 goto label3;

        $r10 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] getBuffer()>();

        i6 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)>($r10, r2);

        if i6 == -1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z2);

        $r11 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: java.util.List getPath()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i1);

        $r13 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r12;

        $r14 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] getBuffer()>();

        virtualinvoke $r13.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void reset(java.lang.Object[],int)>($r14, i6);

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: void setPathLastIndex(int)>(i1);

        return;

     label3:
        $i3 = i1 * 5;

        $i4 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: int indexSegment(int,int)>(i0, $i3);

        i7 = 1 << $i4;

        i2 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i7);

        $r4 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: java.util.List getPath()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator) $r5;

        $r7 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] getBuffer()>();

        virtualinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeIterator: void reset(java.lang.Object[],int)>($r7, i2);

        $r8 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] getBuffer()>();

        r3 = $r8[i2];

        $z1 = r3 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z1 == 0 goto label4;

        $r9 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r3;

        $i5 = i1 + 1;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: void resetPath(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,java.lang.Object,int)>(i0, $r9, r2, $i5);

        goto label5;

     label4:
        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: void setPathLastIndex(int)>(i1);

     label5:
        return;
    }

    private final boolean isCollision(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i0 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int getBitmap()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final void checkNextWasInvoked()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator r0;
        boolean $z0;
        java.lang.IllegalStateException r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator;

        $z0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: boolean nextWasInvoked>;

        if $z0 != 0 goto label1;

        r2 = new java.lang.IllegalStateException;

        specialinvoke r2.<java.lang.IllegalStateException: void <init>()>();

        r3 = (java.lang.Throwable) r2;

        throw r3;

     label1:
        return;
    }

    private final void checkForComodification()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder $r1;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder builder>;

        $i0 = virtualinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int getModCount$runtime_release()>();

        $i1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetMutableIterator: int expectedModCount>;

        if $i0 == $i1 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

