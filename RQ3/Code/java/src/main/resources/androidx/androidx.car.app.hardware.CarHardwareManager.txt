androidx.car.app.hardware.CarHardwareManager
    public androidx.car.app.hardware.info.CarInfo getCarInfo()
    {
        androidx.car.app.hardware.CarHardwareManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.car.app.hardware.CarHardwareManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public androidx.car.app.hardware.info.CarSensors getCarSensors()
    {
        androidx.car.app.hardware.CarHardwareManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.car.app.hardware.CarHardwareManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public static androidx.car.app.hardware.CarHardwareManager create(androidx.car.app.CarContext, androidx.car.app.HostDispatcher)
    {
        androidx.car.app.CarContext r0;
        androidx.car.app.HostDispatcher r1;
        java.lang.Class r2;
        java.lang.reflect.Constructor r3;
        int $i0;
        android.os.Bundle $r4, $r10;
        java.lang.Class[] $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7;
        androidx.car.app.hardware.CarHardwareManager $r8;
        java.lang.Throwable $r13, r17, r22;
        android.content.pm.ServiceInfo r15;
        java.lang.String r16;
        java.lang.IllegalArgumentException r18;
        androidx.car.app.HostException r19;
        java.lang.ClassNotFoundException r20;
        java.lang.IllegalStateException r21;
        android.content.Context r23;

        r0 := @parameter0: androidx.car.app.CarContext;

        r1 := @parameter1: androidx.car.app.HostDispatcher;

        $i0 = virtualinvoke r0.<androidx.car.app.CarContext: int getCarAppApiLevel()>();

        if $i0 >= 3 goto label1;

        r19 = new androidx.car.app.HostException;

        r18 = new java.lang.IllegalArgumentException;

        specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempted to retrieve CarHardwareManager service, but the host is less than 3");

        specialinvoke r19.<androidx.car.app.HostException: void <init>(java.lang.String,java.lang.Throwable)>("Create CarHardwareManager failed", r18);

        r22 = (java.lang.Throwable) r19;

        throw r22;

     label1:
        r23 = (android.content.Context) r0;

        r15 = staticinvoke <androidx.car.app.CarAppMetadataHolderService: android.content.pm.ServiceInfo getServiceInfo(android.content.Context)>(r23);

        r16 = null;

        $r4 = r15.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        if $r4 == null goto label2;

        $r10 = r15.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        r16 = virtualinvoke $r10.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.car.app.CarAppMetadataHolderService.CAR_HARDWARE_MANAGER");

     label2:
        if r16 != null goto label3;

        r20 = new java.lang.ClassNotFoundException;

        specialinvoke r20.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>("CarHardwareManager metadata could not be found");

        throw r20;

     label3:
        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r16);

        $r5 = newarray (java.lang.Class)[2];

        $r5[0] = class "Landroidx/car/app/CarContext;";

        $r5[1] = class "Landroidx/car/app/HostDispatcher;";

        r3 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5);

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r0;

        $r6[1] = r1;

        $r7 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        $r8 = (androidx.car.app.hardware.CarHardwareManager) $r7;

     label4:
        return $r8;

     label5:
        $r13 := @caughtexception;

        r17 = $r13;

        r21 = new java.lang.IllegalStateException;

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("CarHardwareManager not configured. Did you forget to add a dependency on app-automotive or app-projected artifacts?");

        throw r21;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label4 with label5;
        catch java.lang.ReflectiveOperationException from label1 to label4 with label5;
    }

