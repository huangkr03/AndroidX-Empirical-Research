io.grpc.MethodDescriptor
<io.grpc.MethodDescriptor: boolean $assertionsDisabled>
<io.grpc.MethodDescriptor: java.lang.String fullMethodName>
<io.grpc.MethodDescriptor: boolean idempotent>
<io.grpc.MethodDescriptor: java.util.concurrent.atomic.AtomicReferenceArray rawMethodNames>
<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller requestMarshaller>
<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller responseMarshaller>
<io.grpc.MethodDescriptor: boolean safe>
<io.grpc.MethodDescriptor: boolean sampledToLocalTracing>
<io.grpc.MethodDescriptor: java.lang.Object schemaDescriptor>
<io.grpc.MethodDescriptor: java.lang.String serviceName>
<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$MethodType type>
    static void <clinit>()
    {
        <io.grpc.MethodDescriptor: boolean $assertionsDisabled> = 1;

        return;
    }

    private void <init>(io.grpc.MethodDescriptor$MethodType, java.lang.String, io.grpc.MethodDescriptor$Marshaller, io.grpc.MethodDescriptor$Marshaller, java.lang.Object, boolean, boolean, boolean)
    {
        io.grpc.MethodDescriptor $r0;
        io.grpc.MethodDescriptor$Marshaller $r1, $r2;
        java.lang.Object $r3, $r8;
        boolean $z0, $z1, $z2, $z3;
        io.grpc.MethodDescriptor$MethodType $r4;
        java.lang.String $r5, $r9;
        java.util.concurrent.atomic.AtomicReferenceArray $r6;
        java.lang.AssertionError $r7;

        $r0 := @this: io.grpc.MethodDescriptor;

        $r4 := @parameter0: io.grpc.MethodDescriptor$MethodType;

        $r5 := @parameter1: java.lang.String;

        $r1 := @parameter2: io.grpc.MethodDescriptor$Marshaller;

        $r2 := @parameter3: io.grpc.MethodDescriptor$Marshaller;

        $r3 := @parameter4: java.lang.Object;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $z2 := @parameter7: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.concurrent.atomic.AtomicReferenceArray;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(2);

        $r0.<io.grpc.MethodDescriptor: java.util.concurrent.atomic.AtomicReferenceArray rawMethodNames> = $r6;

        $z3 = <io.grpc.MethodDescriptor: boolean $assertionsDisabled>;

        if $z3 != 0 goto label2;

        if $z1 == 0 goto label2;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("safe should imply idempotent");

        throw $r7;

     label2:
        $r8 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r4, "type");

        $r4 = (io.grpc.MethodDescriptor$MethodType) $r8;

        $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$MethodType type> = $r4;

        $r8 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r5, "fullMethodName");

        $r9 = (java.lang.String) $r8;

        $r0.<io.grpc.MethodDescriptor: java.lang.String fullMethodName> = $r9;

        $r5 = staticinvoke <io.grpc.MethodDescriptor: java.lang.String extractFullServiceName(java.lang.String)>($r5);

        $r0.<io.grpc.MethodDescriptor: java.lang.String serviceName> = $r5;

        $r8 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "requestMarshaller");

        $r1 = (io.grpc.MethodDescriptor$Marshaller) $r8;

        $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller requestMarshaller> = $r1;

        $r8 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "responseMarshaller");

        $r1 = (io.grpc.MethodDescriptor$Marshaller) $r8;

        $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller responseMarshaller> = $r1;

        $r0.<io.grpc.MethodDescriptor: java.lang.Object schemaDescriptor> = $r3;

        $r0.<io.grpc.MethodDescriptor: boolean idempotent> = $z0;

        $r0.<io.grpc.MethodDescriptor: boolean safe> = $z1;

        $r0.<io.grpc.MethodDescriptor: boolean sampledToLocalTracing> = $z2;

        return;
    }

    void <init>(io.grpc.MethodDescriptor$MethodType, java.lang.String, io.grpc.MethodDescriptor$Marshaller, io.grpc.MethodDescriptor$Marshaller, java.lang.Object, boolean, boolean, boolean, io.grpc.MethodDescriptor$1)
    {
        io.grpc.MethodDescriptor $r0;
        io.grpc.MethodDescriptor$MethodType $r1;
        java.lang.String $r2;
        io.grpc.MethodDescriptor$Marshaller $r3, $r4;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        io.grpc.MethodDescriptor$1 $r6;

        $r0 := @this: io.grpc.MethodDescriptor;

        $r1 := @parameter0: io.grpc.MethodDescriptor$MethodType;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: io.grpc.MethodDescriptor$Marshaller;

        $r4 := @parameter3: io.grpc.MethodDescriptor$Marshaller;

        $r5 := @parameter4: java.lang.Object;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $z2 := @parameter7: boolean;

        $r6 := @parameter8: io.grpc.MethodDescriptor$1;

        specialinvoke $r0.<io.grpc.MethodDescriptor: void <init>(io.grpc.MethodDescriptor$MethodType,java.lang.String,io.grpc.MethodDescriptor$Marshaller,io.grpc.MethodDescriptor$Marshaller,java.lang.Object,boolean,boolean,boolean)>($r1, $r2, $r3, $r4, $r5, $z0, $z1, $z2);

        return;
    }

    public static java.lang.String extractFullServiceName(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.Object $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "fullMethodName");

        $r2 = (java.lang.String) $r1;

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 != -1 goto label1;

        return null;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;
    }

    public static java.lang.String generateFullMethodName(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "fullServiceName");

        $r0 = (java.lang.String) $r3;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "methodName");

        $r0 = (java.lang.String) $r3;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static io.grpc.MethodDescriptor$Builder newBuilder()
    {
        io.grpc.MethodDescriptor$Builder $r0;

        $r0 = staticinvoke <io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Builder newBuilder(io.grpc.MethodDescriptor$Marshaller,io.grpc.MethodDescriptor$Marshaller)>(null, null);

        return $r0;
    }

    public static io.grpc.MethodDescriptor$Builder newBuilder(io.grpc.MethodDescriptor$Marshaller, io.grpc.MethodDescriptor$Marshaller)
    {
        io.grpc.MethodDescriptor$Marshaller $r0, $r2;
        io.grpc.MethodDescriptor$Builder $r1;

        $r2 := @parameter0: io.grpc.MethodDescriptor$Marshaller;

        $r0 := @parameter1: io.grpc.MethodDescriptor$Marshaller;

        $r1 = new io.grpc.MethodDescriptor$Builder;

        specialinvoke $r1.<io.grpc.MethodDescriptor$Builder: void <init>(io.grpc.MethodDescriptor$1)>(null);

        $r1 = virtualinvoke $r1.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setRequestMarshaller(io.grpc.MethodDescriptor$Marshaller)>($r2);

        $r1 = virtualinvoke $r1.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setResponseMarshaller(io.grpc.MethodDescriptor$Marshaller)>($r0);

        return $r1;
    }

    public java.lang.String getFullMethodName()
    {
        io.grpc.MethodDescriptor $r0;
        java.lang.String r1;

        $r0 := @this: io.grpc.MethodDescriptor;

        r1 = $r0.<io.grpc.MethodDescriptor: java.lang.String fullMethodName>;

        return r1;
    }

    public java.lang.String getServiceName()
    {
        io.grpc.MethodDescriptor $r0;
        java.lang.String r1;

        $r0 := @this: io.grpc.MethodDescriptor;

        r1 = $r0.<io.grpc.MethodDescriptor: java.lang.String serviceName>;

        return r1;
    }

    public io.grpc.MethodDescriptor$MethodType getType()
    {
        io.grpc.MethodDescriptor $r0;
        io.grpc.MethodDescriptor$MethodType r1;

        $r0 := @this: io.grpc.MethodDescriptor;

        r1 = $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$MethodType type>;

        return r1;
    }

    public boolean isSafe()
    {
        io.grpc.MethodDescriptor $r0;
        boolean z0;

        $r0 := @this: io.grpc.MethodDescriptor;

        z0 = $r0.<io.grpc.MethodDescriptor: boolean safe>;

        return z0;
    }

    public java.lang.Object parseResponse(java.io.InputStream)
    {
        io.grpc.MethodDescriptor $r0;
        io.grpc.MethodDescriptor$Marshaller $r1;
        java.lang.Object $r2;
        java.io.InputStream $r3;

        $r0 := @this: io.grpc.MethodDescriptor;

        $r3 := @parameter0: java.io.InputStream;

        $r1 = $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller responseMarshaller>;

        $r2 = interfaceinvoke $r1.<io.grpc.MethodDescriptor$Marshaller: java.lang.Object parse(java.io.InputStream)>($r3);

        return $r2;
    }

    public java.io.InputStream streamRequest(java.lang.Object)
    {
        io.grpc.MethodDescriptor $r0;
        io.grpc.MethodDescriptor$Marshaller $r1;
        java.io.InputStream $r2;
        java.lang.Object $r3;

        $r0 := @this: io.grpc.MethodDescriptor;

        $r3 := @parameter0: java.lang.Object;

        $r1 = $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller requestMarshaller>;

        $r2 = interfaceinvoke $r1.<io.grpc.MethodDescriptor$Marshaller: java.io.InputStream stream(java.lang.Object)>($r3);

        return $r2;
    }

    public java.lang.String toString()
    {
        io.grpc.MethodDescriptor $r0;
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        java.lang.String $r2;
        io.grpc.MethodDescriptor$MethodType $r3;
        boolean $z0;
        io.grpc.MethodDescriptor$Marshaller $r4;
        java.lang.Object $r5;

        $r0 := @this: io.grpc.MethodDescriptor;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>($r0);

        $r2 = $r0.<io.grpc.MethodDescriptor: java.lang.String fullMethodName>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("fullMethodName", $r2);

        $r3 = $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$MethodType type>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("type", $r3);

        $z0 = $r0.<io.grpc.MethodDescriptor: boolean idempotent>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean)>("idempotent", $z0);

        $z0 = $r0.<io.grpc.MethodDescriptor: boolean safe>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean)>("safe", $z0);

        $z0 = $r0.<io.grpc.MethodDescriptor: boolean sampledToLocalTracing>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean)>("sampledToLocalTracing", $z0);

        $r4 = $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller requestMarshaller>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("requestMarshaller", $r4);

        $r4 = $r0.<io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller responseMarshaller>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("responseMarshaller", $r4);

        $r5 = $r0.<io.grpc.MethodDescriptor: java.lang.Object schemaDescriptor>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("schemaDescriptor", $r5);

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper omitNullValues()>();

        $r2 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r2;
    }

io.grpc.MethodDescriptor$1
io.grpc.MethodDescriptor$Builder
<io.grpc.MethodDescriptor$Builder: java.lang.String fullMethodName>
<io.grpc.MethodDescriptor$Builder: boolean idempotent>
<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Marshaller requestMarshaller>
<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Marshaller responseMarshaller>
<io.grpc.MethodDescriptor$Builder: boolean safe>
<io.grpc.MethodDescriptor$Builder: boolean sampledToLocalTracing>
<io.grpc.MethodDescriptor$Builder: java.lang.Object schemaDescriptor>
<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$MethodType type>
    private void <init>()
    {
        io.grpc.MethodDescriptor$Builder $r0;

        $r0 := @this: io.grpc.MethodDescriptor$Builder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(io.grpc.MethodDescriptor$1)
    {
        io.grpc.MethodDescriptor$Builder $r0;
        io.grpc.MethodDescriptor$1 $r1;

        $r0 := @this: io.grpc.MethodDescriptor$Builder;

        $r1 := @parameter0: io.grpc.MethodDescriptor$1;

        specialinvoke $r0.<io.grpc.MethodDescriptor$Builder: void <init>()>();

        return;
    }

    public io.grpc.MethodDescriptor build()
    {
        io.grpc.MethodDescriptor$Builder $r0;
        io.grpc.MethodDescriptor$MethodType $r1;
        java.lang.String $r2;
        io.grpc.MethodDescriptor$Marshaller $r3, $r4;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        io.grpc.MethodDescriptor $r6;

        $r0 := @this: io.grpc.MethodDescriptor$Builder;

        $r6 = new io.grpc.MethodDescriptor;

        $r1 = $r0.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$MethodType type>;

        $r2 = $r0.<io.grpc.MethodDescriptor$Builder: java.lang.String fullMethodName>;

        $r3 = $r0.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Marshaller requestMarshaller>;

        $r4 = $r0.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Marshaller responseMarshaller>;

        $r5 = $r0.<io.grpc.MethodDescriptor$Builder: java.lang.Object schemaDescriptor>;

        $z0 = $r0.<io.grpc.MethodDescriptor$Builder: boolean idempotent>;

        $z1 = $r0.<io.grpc.MethodDescriptor$Builder: boolean safe>;

        $z2 = $r0.<io.grpc.MethodDescriptor$Builder: boolean sampledToLocalTracing>;

        specialinvoke $r6.<io.grpc.MethodDescriptor: void <init>(io.grpc.MethodDescriptor$MethodType,java.lang.String,io.grpc.MethodDescriptor$Marshaller,io.grpc.MethodDescriptor$Marshaller,java.lang.Object,boolean,boolean,boolean,io.grpc.MethodDescriptor$1)>($r1, $r2, $r3, $r4, $r5, $z0, $z1, $z2, null);

        return $r6;
    }

    public io.grpc.MethodDescriptor$Builder setFullMethodName(java.lang.String)
    {
        io.grpc.MethodDescriptor$Builder $r0;
        java.lang.String $r1;

        $r0 := @this: io.grpc.MethodDescriptor$Builder;

        $r1 := @parameter0: java.lang.String;

        $r0.<io.grpc.MethodDescriptor$Builder: java.lang.String fullMethodName> = $r1;

        return $r0;
    }

    public io.grpc.MethodDescriptor$Builder setRequestMarshaller(io.grpc.MethodDescriptor$Marshaller)
    {
        io.grpc.MethodDescriptor$Builder $r0;
        io.grpc.MethodDescriptor$Marshaller $r1;

        $r0 := @this: io.grpc.MethodDescriptor$Builder;

        $r1 := @parameter0: io.grpc.MethodDescriptor$Marshaller;

        $r0.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Marshaller requestMarshaller> = $r1;

        return $r0;
    }

    public io.grpc.MethodDescriptor$Builder setResponseMarshaller(io.grpc.MethodDescriptor$Marshaller)
    {
        io.grpc.MethodDescriptor$Builder $r0;
        io.grpc.MethodDescriptor$Marshaller $r1;

        $r0 := @this: io.grpc.MethodDescriptor$Builder;

        $r1 := @parameter0: io.grpc.MethodDescriptor$Marshaller;

        $r0.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Marshaller responseMarshaller> = $r1;

        return $r0;
    }

    public io.grpc.MethodDescriptor$Builder setSampledToLocalTracing(boolean)
    {
        io.grpc.MethodDescriptor$Builder $r0;
        boolean $z0;

        $r0 := @this: io.grpc.MethodDescriptor$Builder;

        $z0 := @parameter0: boolean;

        $r0.<io.grpc.MethodDescriptor$Builder: boolean sampledToLocalTracing> = $z0;

        return $r0;
    }

    public io.grpc.MethodDescriptor$Builder setType(io.grpc.MethodDescriptor$MethodType)
    {
        io.grpc.MethodDescriptor$Builder $r0;
        io.grpc.MethodDescriptor$MethodType $r1;

        $r0 := @this: io.grpc.MethodDescriptor$Builder;

        $r1 := @parameter0: io.grpc.MethodDescriptor$MethodType;

        $r0.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$MethodType type> = $r1;

        return $r0;
    }

io.grpc.MethodDescriptor$Marshaller
<io.grpc.MethodDescriptor$Marshaller: java.lang.Object parse(java.io.InputStream)>
<io.grpc.MethodDescriptor$Marshaller: java.io.InputStream stream(java.lang.Object)>
io.grpc.MethodDescriptor$MethodType
<io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] $VALUES>
<io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType BIDI_STREAMING>
<io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType CLIENT_STREAMING>
<io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType SERVER_STREAMING>
<io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNARY>
<io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNKNOWN>
    private static io.grpc.MethodDescriptor$MethodType[] $values()
    {
        io.grpc.MethodDescriptor$MethodType[] $r0;
        io.grpc.MethodDescriptor$MethodType $r1;

        $r0 = newarray (io.grpc.MethodDescriptor$MethodType)[5];

        $r1 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNARY>;

        $r0[0] = $r1;

        $r1 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType CLIENT_STREAMING>;

        $r0[1] = $r1;

        $r1 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType SERVER_STREAMING>;

        $r0[2] = $r1;

        $r1 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType BIDI_STREAMING>;

        $r0[3] = $r1;

        $r1 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNKNOWN>;

        $r0[4] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        io.grpc.MethodDescriptor$MethodType[] $r0;
        io.grpc.MethodDescriptor$MethodType $r1;

        $r1 = new io.grpc.MethodDescriptor$MethodType;

        specialinvoke $r1.<io.grpc.MethodDescriptor$MethodType: void <init>(java.lang.String,int)>("UNARY", 0);

        <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNARY> = $r1;

        $r1 = new io.grpc.MethodDescriptor$MethodType;

        specialinvoke $r1.<io.grpc.MethodDescriptor$MethodType: void <init>(java.lang.String,int)>("CLIENT_STREAMING", 1);

        <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType CLIENT_STREAMING> = $r1;

        $r1 = new io.grpc.MethodDescriptor$MethodType;

        specialinvoke $r1.<io.grpc.MethodDescriptor$MethodType: void <init>(java.lang.String,int)>("SERVER_STREAMING", 2);

        <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType SERVER_STREAMING> = $r1;

        $r1 = new io.grpc.MethodDescriptor$MethodType;

        specialinvoke $r1.<io.grpc.MethodDescriptor$MethodType: void <init>(java.lang.String,int)>("BIDI_STREAMING", 3);

        <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType BIDI_STREAMING> = $r1;

        $r1 = new io.grpc.MethodDescriptor$MethodType;

        specialinvoke $r1.<io.grpc.MethodDescriptor$MethodType: void <init>(java.lang.String,int)>("UNKNOWN", 4);

        <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNKNOWN> = $r1;

        $r0 = staticinvoke <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] $values()>();

        <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        io.grpc.MethodDescriptor$MethodType $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: io.grpc.MethodDescriptor$MethodType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static io.grpc.MethodDescriptor$MethodType[] values()
    {
        java.lang.Object $r0;
        io.grpc.MethodDescriptor$MethodType[] $r1;

        $r1 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (io.grpc.MethodDescriptor$MethodType[]) $r0;

        return $r1;
    }

    public final boolean clientSendsOneMessage()
    {
        io.grpc.MethodDescriptor$MethodType $r0, $r1;

        $r0 := @this: io.grpc.MethodDescriptor$MethodType;

        $r1 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNARY>;

        if $r0 == $r1 goto label2;

        $r1 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType SERVER_STREAMING>;

        if $r0 != $r1 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

