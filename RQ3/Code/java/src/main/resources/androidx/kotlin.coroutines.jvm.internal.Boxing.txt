kotlin.coroutines.jvm.internal.Boxing
    public static final java.lang.Boolean boxBoolean(boolean)
    {
        java.lang.Boolean $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r0;
    }

    public static final java.lang.Byte boxByte(byte)
    {
        java.lang.Byte $r0;
        byte $b0;

        $b0 := @parameter0: byte;

        $r0 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r0;
    }

    public static final java.lang.Character boxChar(char)
    {
        char $c0;
        java.lang.Character $r0;

        $c0 := @parameter0: char;

        $r0 = new java.lang.Character;

        specialinvoke $r0.<java.lang.Character: void <init>(char)>($c0);

        return $r0;
    }

    public static final java.lang.Double boxDouble(double)
    {
        double $d0;
        java.lang.Double $r0;

        $d0 := @parameter0: double;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d0);

        return $r0;
    }

    public static final java.lang.Float boxFloat(float)
    {
        float $f0;
        java.lang.Float $r0;

        $f0 := @parameter0: float;

        $r0 = new java.lang.Float;

        specialinvoke $r0.<java.lang.Float: void <init>(float)>($f0);

        return $r0;
    }

    public static final java.lang.Integer boxInt(int)
    {
        int $i0;
        java.lang.Integer $r0;

        $i0 := @parameter0: int;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>($i0);

        return $r0;
    }

    public static final java.lang.Long boxLong(long)
    {
        long $l0;
        java.lang.Long $r0;

        $l0 := @parameter0: long;

        $r0 = new java.lang.Long;

        specialinvoke $r0.<java.lang.Long: void <init>(long)>($l0);

        return $r0;
    }

    public static final java.lang.Short boxShort(short)
    {
        short $s0;
        java.lang.Short $r0;

        $s0 := @parameter0: short;

        $r0 = new java.lang.Short;

        specialinvoke $r0.<java.lang.Short: void <init>(short)>($s0);

        return $r0;
    }

