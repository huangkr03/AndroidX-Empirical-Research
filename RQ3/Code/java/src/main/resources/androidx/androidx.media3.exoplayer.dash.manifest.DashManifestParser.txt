androidx.media3.exoplayer.dash.manifest.DashManifestParser
<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String TAG>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern FRAME_RATE_PATTERN>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern CEA_608_ACCESSIBILITY_PATTERN>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern CEA_708_ACCESSIBILITY_PATTERN>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int[] MPEG_CHANNEL_CONFIGURATION_MAPPING>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser: org.xmlpull.v1.XmlPullParserFactory xmlParserFactory>
    public void <init>()
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.Throwable r1, $r3;
        org.xmlpull.v1.XmlPullParserFactory $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

     label1:
        $r2 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: org.xmlpull.v1.XmlPullParserFactory xmlParserFactory> = $r2;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Couldn\'t create XmlPullParserFactory instance", r1);

        throw $r4;

     label4:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public androidx.media3.exoplayer.dash.manifest.DashManifest parse(android.net.Uri, java.io.InputStream) throws java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        android.net.Uri r1;
        java.io.InputStream r2;
        int i0;
        org.xmlpull.v1.XmlPullParserFactory $r3;
        androidx.media3.common.ParserException $r4, $r9;
        java.lang.String $r5, $r6;
        boolean $z0;
        androidx.media3.exoplayer.dash.manifest.DashManifest $r7;
        java.lang.Throwable $r8, r11;
        org.xmlpull.v1.XmlPullParser r10;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.io.InputStream;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: org.xmlpull.v1.XmlPullParserFactory xmlParserFactory>;

        r10 = virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r2, null);

        i0 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 2 goto label2;

        $r5 = "MPD";

        $r6 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label3;

     label2:
        $r4 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("inputStream does not contain a valid media presentation description", null);

        throw $r4;

     label3:
        $r7 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.DashManifest parseMediaPresentationDescription(org.xmlpull.v1.XmlPullParser,android.net.Uri)>(r10, r1);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        r11 = $r8;

        $r9 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(null, r11);

        throw $r9;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label4 with label5;
    }

    protected androidx.media3.exoplayer.dash.manifest.DashManifest parseMediaPresentationDescription(org.xmlpull.v1.XmlPullParser, android.net.Uri) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.net.Uri r2, r37;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, z10, z11, $z12, $z13, $z14;
        long l0, l1, l2, l3, l4, l5, l6, $l10, $l13, l15, $l16, $l17, $l18, $l19, l20, $l22, l23, $l24;
        java.lang.String r3, $r12, $r14, $r15, $r28, $r32, $r33;
        androidx.media3.exoplayer.dash.manifest.BaseUrl r4, $r13;
        java.util.ArrayList r5, r6, r7, $r17, $r18, $r39;
        android.util.Pair r8;
        androidx.media3.exoplayer.dash.manifest.Period r9;
        java.lang.String[] $r10, $r11;
        androidx.media3.exoplayer.dash.manifest.BaseUrl[] $r16;
        byte $b8, $b9, $b11, $b12;
        androidx.media3.exoplayer.dash.manifest.DashManifest $r19;
        androidx.media3.common.ParserException $r20, $r21, $r29;
        java.lang.Object $r22, $r23;
        java.lang.Long $r24;
        java.lang.StringBuilder $r25, $r26, $r27;
        int $i14, $i21;
        java.util.List $r34;
        androidx.media3.exoplayer.dash.manifest.ProgramInformation r35;
        androidx.media3.exoplayer.dash.manifest.UtcTimingElement r36;
        androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement r38;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.net.Uri;

        $r10 = newarray (java.lang.String)[0];

        $r11 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String[] parseProfiles(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r1, "profiles", $r10);

        z0 = specialinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: boolean isDvbProfileDeclared(java.lang.String[])>($r11);

        l0 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDateTime(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "availabilityStartTime", -9223372036854775807L);

        l15 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "mediaPresentationDuration", -9223372036854775807L);

        l1 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "minBufferTime", -9223372036854775807L);

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        $r12 = "dynamic";

        z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if z1 == 0 goto label01;

        $l16 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "minimumUpdatePeriod", -9223372036854775807L);

        goto label02;

     label01:
        $l16 = -9223372036854775807L;

     label02:
        l2 = $l16;

        if z1 == 0 goto label03;

        $l17 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "timeShiftBufferDepth", -9223372036854775807L);

        goto label04;

     label03:
        $l17 = -9223372036854775807L;

     label04:
        l3 = $l17;

        if z1 == 0 goto label05;

        $l18 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "suggestedPresentationDelay", -9223372036854775807L);

        goto label06;

     label05:
        $l18 = -9223372036854775807L;

     label06:
        l4 = $l18;

        l5 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDateTime(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "publishTime", -9223372036854775807L);

        r35 = null;

        r36 = null;

        r37 = null;

        r38 = null;

        if z1 == 0 goto label07;

        $l19 = 0L;

        goto label08;

     label07:
        $l19 = -9223372036854775807L;

     label08:
        l20 = $l19;

        $r13 = new androidx.media3.exoplayer.dash.manifest.BaseUrl;

        $r14 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        $r15 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        if z0 == 0 goto label09;

        $i21 = 1;

        goto label10;

     label09:
        $i21 = -2147483648;

     label10:
        specialinvoke $r13.<androidx.media3.exoplayer.dash.manifest.BaseUrl: void <init>(java.lang.String,java.lang.String,int,int)>($r14, $r15, $i21, 1);

        r4 = $r13;

        $r16 = newarray (androidx.media3.exoplayer.dash.manifest.BaseUrl)[1];

        $r16[0] = r4;

        r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r16);

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r6 = $r17;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r7 = $r18;

        if z1 == 0 goto label11;

        $l22 = -9223372036854775807L;

        goto label12;

     label11:
        $l22 = 0L;

     label12:
        l23 = $l22;

        z10 = 0;

        z11 = 0;

     label13:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z12 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "BaseURL");

        if $z12 == 0 goto label15;

        if z11 != 0 goto label14;

        l20 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, l20);

        z11 = 1;

     label14:
        $r34 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.List parseBaseUrl(org.xmlpull.v1.XmlPullParser,java.util.List,boolean)>(r1, r5, z0);

        virtualinvoke r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r34);

        goto label28;

     label15:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ProgramInformation");

        if $z2 == 0 goto label16;

        r35 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.ProgramInformation parseProgramInformation(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label28;

     label16:
        $z3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "UTCTiming");

        if $z3 == 0 goto label17;

        r36 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.UtcTimingElement parseUtcTiming(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label28;

     label17:
        $z4 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Location");

        if $z4 == 0 goto label18;

        $r32 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        $r33 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        r37 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>($r32, $r33);

        goto label28;

     label18:
        $z5 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ServiceDescription");

        if $z5 == 0 goto label19;

        r38 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement parseServiceDescription(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label28;

     label19:
        $z6 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Period");

        if $z6 == 0 goto label27;

        if z10 != 0 goto label27;

        $z7 = virtualinvoke r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z7 != 0 goto label20;

        $r39 = r7;

        goto label21;

     label20:
        $r39 = r5;

     label21:
        r8 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: android.util.Pair parsePeriod(org.xmlpull.v1.XmlPullParser,java.util.List,long,long,long,long,boolean)>(r1, $r39, l23, l20, l0, l3, z0);

        $r22 = r8.<android.util.Pair: java.lang.Object first>;

        r9 = (androidx.media3.exoplayer.dash.manifest.Period) $r22;

        $l10 = r9.<androidx.media3.exoplayer.dash.manifest.Period: long startMs>;

        $b11 = $l10 cmp -9223372036854775807L;

        if $b11 != 0 goto label23;

        if z1 == 0 goto label22;

        z10 = 1;

        goto label26;

     label22:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to determine start of period ");

        $i14 = interfaceinvoke r6.<java.util.List: int size()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>($r28, null);

        throw $r29;

     label23:
        $r23 = r8.<android.util.Pair: java.lang.Object second>;

        $r24 = (java.lang.Long) $r23;

        l6 = virtualinvoke $r24.<java.lang.Long: long longValue()>();

        $b12 = l6 cmp -9223372036854775807L;

        if $b12 != 0 goto label24;

        $l24 = -9223372036854775807L;

        goto label25;

     label24:
        $l13 = r9.<androidx.media3.exoplayer.dash.manifest.Period: long startMs>;

        $l24 = $l13 + l6;

     label25:
        l23 = $l24;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r9);

     label26:
        goto label28;

     label27:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label28:
        $z13 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "MPD");

        if $z13 == 0 goto label13;

        $b8 = l15 cmp -9223372036854775807L;

        if $b8 != 0 goto label30;

        $b9 = l23 cmp -9223372036854775807L;

        if $b9 == 0 goto label29;

        l15 = l23;

        goto label30;

     label29:
        if z1 != 0 goto label30;

        $r21 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("Unable to determine duration of static manifest.", null);

        throw $r21;

     label30:
        $z14 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z14 == 0 goto label31;

        $r20 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("No periods found.", null);

        throw $r20;

     label31:
        $r19 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.DashManifest buildMediaPresentationDescription(long,long,long,boolean,long,long,long,long,androidx.media3.exoplayer.dash.manifest.ProgramInformation,androidx.media3.exoplayer.dash.manifest.UtcTimingElement,androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement,android.net.Uri,java.util.List)>(l0, l15, l1, z1, l2, l3, l4, l5, r35, r36, r38, r37, r6);

        return $r19;
    }

    protected androidx.media3.exoplayer.dash.manifest.DashManifest buildMediaPresentationDescription(long, long, long, boolean, long, long, long, long, androidx.media3.exoplayer.dash.manifest.ProgramInformation, androidx.media3.exoplayer.dash.manifest.UtcTimingElement, androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement, android.net.Uri, java.util.List)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        long l0, l1, l2, l3, l4, l5, l6;
        boolean z0;
        androidx.media3.exoplayer.dash.manifest.ProgramInformation r1;
        androidx.media3.exoplayer.dash.manifest.UtcTimingElement r2;
        androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement r3;
        android.net.Uri r4;
        java.util.List r5;
        androidx.media3.exoplayer.dash.manifest.DashManifest $r6;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        z0 := @parameter3: boolean;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        l5 := @parameter6: long;

        l6 := @parameter7: long;

        r1 := @parameter8: androidx.media3.exoplayer.dash.manifest.ProgramInformation;

        r2 := @parameter9: androidx.media3.exoplayer.dash.manifest.UtcTimingElement;

        r3 := @parameter10: androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement;

        r4 := @parameter11: android.net.Uri;

        r5 := @parameter12: java.util.List;

        $r6 = new androidx.media3.exoplayer.dash.manifest.DashManifest;

        specialinvoke $r6.<androidx.media3.exoplayer.dash.manifest.DashManifest: void <init>(long,long,long,boolean,long,long,long,long,androidx.media3.exoplayer.dash.manifest.ProgramInformation,androidx.media3.exoplayer.dash.manifest.UtcTimingElement,androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement,android.net.Uri,java.util.List)>(l0, l1, l2, z0, l3, l4, l5, l6, r1, r2, r3, r4, r5);

        return $r6;
    }

    protected androidx.media3.exoplayer.dash.manifest.UtcTimingElement parseUtcTiming(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        androidx.media3.exoplayer.dash.manifest.UtcTimingElement $r4;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "schemeIdUri");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.UtcTimingElement buildUtcTimingElement(java.lang.String,java.lang.String)>(r2, r3);

        return $r4;
    }

    protected androidx.media3.exoplayer.dash.manifest.UtcTimingElement buildUtcTimingElement(java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1, r2;
        androidx.media3.exoplayer.dash.manifest.UtcTimingElement $r3;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new androidx.media3.exoplayer.dash.manifest.UtcTimingElement;

        specialinvoke $r3.<androidx.media3.exoplayer.dash.manifest.UtcTimingElement: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    protected androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement parseServiceDescription(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement $r2;
        long l1, l2, l3;
        float f0, f1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        l1 = -9223372036854775807L;

        l2 = -9223372036854775807L;

        l3 = -9223372036854775807L;

        f0 = -3.4028235E38F;

        f1 = -3.4028235E38F;

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Latency");

        if $z0 == 0 goto label2;

        l1 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "target", -9223372036854775807L);

        l2 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "min", -9223372036854775807L);

        l3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "max", -9223372036854775807L);

        goto label3;

     label2:
        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "PlaybackRate");

        if $z1 == 0 goto label3;

        f0 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: float parseFloat(org.xmlpull.v1.XmlPullParser,java.lang.String,float)>(r1, "min", -3.4028235E38F);

        f1 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: float parseFloat(org.xmlpull.v1.XmlPullParser,java.lang.String,float)>(r1, "max", -3.4028235E38F);

     label3:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ServiceDescription");

        if $z2 == 0 goto label1;

        $r2 = new androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement;

        specialinvoke $r2.<androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement: void <init>(long,long,long,float,float)>(l1, l2, l3, f0, f1);

        return $r2;
    }

    protected android.util.Pair parsePeriod(org.xmlpull.v1.XmlPullParser, java.util.List, long, long, long, long, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List r2, $r19, r26;
        long l0, l1, l2, l3, l4, l5, l8, $l9, l10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, z11, $z12, $z13;
        java.lang.String r3;
        java.util.ArrayList r4, r5, r6, r23, r24, r25;
        byte $b6;
        androidx.media3.exoplayer.dash.manifest.Period $r10;
        java.lang.Long $r11;
        android.util.Pair $r12;
        com.google.common.collect.ImmutableList $r13;
        androidx.media3.exoplayer.dash.manifest.EventStream $r14;
        androidx.media3.exoplayer.dash.manifest.AdaptationSet $r15;
        androidx.media3.exoplayer.dash.manifest.SegmentBase r20;
        androidx.media3.exoplayer.dash.manifest.Descriptor r21;
        java.lang.Object $r22;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        l8 := @parameter3: long;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        z0 := @parameter6: boolean;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        l3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "start", l0);

        $b6 = l1 cmp -9223372036854775807L;

        if $b6 == 0 goto label01;

        $l9 = l1 + l3;

        goto label02;

     label01:
        $l9 = -9223372036854775807L;

     label02:
        l4 = $l9;

        l5 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "duration", -9223372036854775807L);

        r20 = null;

        r21 = null;

        r23 = new java.util.ArrayList;

        specialinvoke r23.<java.util.ArrayList: void <init>()>();

        r4 = r23;

        r24 = new java.util.ArrayList;

        specialinvoke r24.<java.util.ArrayList: void <init>()>();

        r5 = r24;

        r25 = new java.util.ArrayList;

        specialinvoke r25.<java.util.ArrayList: void <init>()>();

        r6 = r25;

        z11 = 0;

        l10 = -9223372036854775807L;

     label03:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z12 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "BaseURL");

        if $z12 == 0 goto label05;

        if z11 != 0 goto label04;

        l8 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, l8);

        z11 = 1;

     label04:
        $r19 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.List parseBaseUrl(org.xmlpull.v1.XmlPullParser,java.util.List,boolean)>(r1, r2, z0);

        virtualinvoke r6.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r19);

        goto label14;

     label05:
        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "AdaptationSet");

        if $z1 == 0 goto label08;

        $z8 = virtualinvoke r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z8 != 0 goto label06;

        $r22 = r6;

        goto label07;

     label06:
        $r22 = r2;

     label07:
        r26 = (java.util.List) $r22;

        $r15 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.AdaptationSet parseAdaptationSet(org.xmlpull.v1.XmlPullParser,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,long,long,long,long,long,boolean)>(r1, r26, r20, l5, l8, l10, l4, l2, z0);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label14;

     label08:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "EventStream");

        if $z2 == 0 goto label09;

        $r14 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.EventStream parseEventStream(org.xmlpull.v1.XmlPullParser)>(r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label14;

     label09:
        $z3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentBase");

        if $z3 == 0 goto label10;

        r20 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase parseSegmentBase(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase)>(r1, null);

        goto label14;

     label10:
        $z4 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentList");

        if $z4 == 0 goto label11;

        l10 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, -9223372036854775807L);

        r20 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList parseSegmentList(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList,long,long,long,long,long)>(r1, null, l4, l5, l8, l10, l2);

        goto label14;

     label11:
        $z5 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentTemplate");

        if $z5 == 0 goto label12;

        l10 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, -9223372036854775807L);

        $r13 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        r20 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate parseSegmentTemplate(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate,java.util.List,long,long,long,long,long)>(r1, null, $r13, l4, l5, l8, l10, l2);

        goto label14;

     label12:
        $z6 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "AssetIdentifier");

        if $z6 == 0 goto label13;

        r21 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "AssetIdentifier");

        goto label14;

     label13:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label14:
        $z13 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Period");

        if $z13 == 0 goto label03;

        $r10 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Period buildPeriod(java.lang.String,long,java.util.List,java.util.List,androidx.media3.exoplayer.dash.manifest.Descriptor)>(r3, l3, r4, r5, r21);

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r12 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r10, $r11);

        return $r12;
    }

    protected androidx.media3.exoplayer.dash.manifest.Period buildPeriod(java.lang.String, long, java.util.List, java.util.List, androidx.media3.exoplayer.dash.manifest.Descriptor)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1;
        long l0;
        java.util.List r2, r3;
        androidx.media3.exoplayer.dash.manifest.Descriptor r4;
        androidx.media3.exoplayer.dash.manifest.Period $r5;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: androidx.media3.exoplayer.dash.manifest.Descriptor;

        $r5 = new androidx.media3.exoplayer.dash.manifest.Period;

        specialinvoke $r5.<androidx.media3.exoplayer.dash.manifest.Period: void <init>(java.lang.String,long,java.util.List,java.util.List,androidx.media3.exoplayer.dash.manifest.Descriptor)>(r1, l0, r2, r3, r4);

        return $r5;
    }

    protected androidx.media3.exoplayer.dash.manifest.AdaptationSet parseAdaptationSet(org.xmlpull.v1.XmlPullParser, java.util.List, androidx.media3.exoplayer.dash.manifest.SegmentBase, long, long, long, long, long, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List r2, $r44, r62;
        long l0, l1, l2, l12, l13;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z18, z26, $z27;
        int i3, i4, i5, i6, $i8, $i9, $i10, $i11, i14, i15, i16;
        java.lang.String r3, r4, $r31, $r38, r46, r47, r48;
        float f0;
        java.util.ArrayList r5, r6, r7, r8, r9, r10, r11, r12, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61;
        androidx.media3.exoplayer.dash.manifest.AdaptationSet $r22;
        java.lang.Object $r23, $r39, $r40, $r41, $r43, $r50;
        androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo $r24, r51;
        androidx.media3.exoplayer.dash.manifest.Representation $r25;
        androidx.media3.exoplayer.dash.manifest.Descriptor $r26, $r34, $r35, $r36, $r37;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate $r27;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList $r28;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase $r29;
        androidx.media3.common.Format $r30;
        androidx.media3.common.DrmInitData$SchemeData $r42;
        androidx.media3.exoplayer.dash.manifest.SegmentBase r45;
        android.util.Pair r49;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.List;

        r45 := @parameter2: androidx.media3.exoplayer.dash.manifest.SegmentBase;

        l0 := @parameter3: long;

        l12 := @parameter4: long;

        l13 := @parameter5: long;

        l1 := @parameter6: long;

        l2 := @parameter7: long;

        z0 := @parameter8: boolean;

        i3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "id", -1);

        i14 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseContentType(org.xmlpull.v1.XmlPullParser)>(r1);

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "mimeType");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codecs");

        i4 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "width", -1);

        i5 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "height", -1);

        f0 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: float parseFrameRate(org.xmlpull.v1.XmlPullParser,float)>(r1, -1.0F);

        i15 = -1;

        i6 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "audioSamplingRate", -1);

        r46 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "lang");

        r47 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        r48 = null;

        r53 = new java.util.ArrayList;

        specialinvoke r53.<java.util.ArrayList: void <init>()>();

        r5 = r53;

        r54 = new java.util.ArrayList;

        specialinvoke r54.<java.util.ArrayList: void <init>()>();

        r6 = r54;

        r55 = new java.util.ArrayList;

        specialinvoke r55.<java.util.ArrayList: void <init>()>();

        r7 = r55;

        r56 = new java.util.ArrayList;

        specialinvoke r56.<java.util.ArrayList: void <init>()>();

        r8 = r56;

        r57 = new java.util.ArrayList;

        specialinvoke r57.<java.util.ArrayList: void <init>()>();

        r9 = r57;

        r58 = new java.util.ArrayList;

        specialinvoke r58.<java.util.ArrayList: void <init>()>();

        r10 = r58;

        r59 = new java.util.ArrayList;

        specialinvoke r59.<java.util.ArrayList: void <init>()>();

        r11 = r59;

        r60 = new java.util.ArrayList;

        specialinvoke r60.<java.util.ArrayList: void <init>()>();

        r12 = r60;

        z26 = 0;

     label01:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "BaseURL");

        if $z1 == 0 goto label03;

        if z26 != 0 goto label02;

        l12 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, l12);

        z26 = 1;

     label02:
        $r44 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.List parseBaseUrl(org.xmlpull.v1.XmlPullParser,java.util.List,boolean)>(r1, r2, z0);

        virtualinvoke r12.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r44);

        goto label21;

     label03:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ContentProtection");

        if $z2 == 0 goto label06;

        r49 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: android.util.Pair parseContentProtection(org.xmlpull.v1.XmlPullParser)>(r1);

        $r39 = r49.<android.util.Pair: java.lang.Object first>;

        if $r39 == null goto label04;

        $r43 = r49.<android.util.Pair: java.lang.Object first>;

        r48 = (java.lang.String) $r43;

     label04:
        $r40 = r49.<android.util.Pair: java.lang.Object second>;

        if $r40 == null goto label05;

        $r41 = r49.<android.util.Pair: java.lang.Object second>;

        $r42 = (androidx.media3.common.DrmInitData$SchemeData) $r41;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);

     label05:
        goto label21;

     label06:
        $z3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ContentComponent");

        if $z3 == 0 goto label07;

        $r38 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "lang");

        r46 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String checkLanguageConsistency(java.lang.String,java.lang.String)>(r46, $r38);

        $i11 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseContentType(org.xmlpull.v1.XmlPullParser)>(r1);

        i14 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int checkContentTypeConsistency(int,int)>(i14, $i11);

        goto label21;

     label07:
        $z4 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Role");

        if $z4 == 0 goto label08;

        $r37 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Role");

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

        goto label21;

     label08:
        $z5 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "AudioChannelConfiguration");

        if $z5 == 0 goto label09;

        i15 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseAudioChannelConfiguration(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label21;

     label09:
        $z6 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Accessibility");

        if $z6 == 0 goto label10;

        $r36 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Accessibility");

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r36);

        goto label21;

     label10:
        $z7 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "EssentialProperty");

        if $z7 == 0 goto label11;

        $r35 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "EssentialProperty");

        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r35);

        goto label21;

     label11:
        $z8 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SupplementalProperty");

        if $z8 == 0 goto label12;

        $r34 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SupplementalProperty");

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

        goto label21;

     label12:
        $z9 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Representation");

        if $z9 == 0 goto label15;

        $z18 = virtualinvoke r12.<java.util.ArrayList: boolean isEmpty()>();

        if $z18 != 0 goto label13;

        $r50 = r12;

        goto label14;

     label13:
        $r50 = r2;

     label14:
        r62 = (java.util.List) $r50;

        r51 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo parseRepresentation(org.xmlpull.v1.XmlPullParser,java.util.List,java.lang.String,java.lang.String,int,int,float,int,int,java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,long,long,long,long,long,boolean)>(r1, r62, r3, r4, i4, i5, f0, i15, i6, r46, r8, r7, r9, r10, r45, l1, l0, l12, l13, l2, z0);

        $r30 = r51.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: androidx.media3.common.Format format>;

        $r31 = $r30.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $i10 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>($r31);

        i14 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int checkContentTypeConsistency(int,int)>(i14, $i10);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r51);

        goto label21;

     label15:
        $z10 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentBase");

        if $z10 == 0 goto label16;

        $r29 = (androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase) r45;

        r45 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase parseSegmentBase(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase)>(r1, $r29);

        goto label21;

     label16:
        $z11 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentList");

        if $z11 == 0 goto label17;

        l13 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, l13);

        $r28 = (androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList) r45;

        r45 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList parseSegmentList(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList,long,long,long,long,long)>(r1, $r28, l1, l0, l12, l13, l2);

        goto label21;

     label17:
        $z12 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentTemplate");

        if $z12 == 0 goto label18;

        l13 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, l13);

        $r27 = (androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate) r45;

        r45 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate parseSegmentTemplate(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate,java.util.List,long,long,long,long,long)>(r1, $r27, r10, l1, l0, l12, l13, l2);

        goto label21;

     label18:
        $z13 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "InbandEventStream");

        if $z13 == 0 goto label19;

        $r26 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "InbandEventStream");

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        goto label21;

     label19:
        $z14 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Label");

        if $z14 == 0 goto label20;

        r47 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseLabel(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label21;

     label20:
        $z15 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser)>(r1);

        if $z15 == 0 goto label21;

        virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: void parseAdaptationSetChild(org.xmlpull.v1.XmlPullParser)>(r1);

     label21:
        $z27 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "AdaptationSet");

        if $z27 == 0 goto label01;

        r61 = new java.util.ArrayList;

        $i8 = interfaceinvoke r11.<java.util.List: int size()>();

        specialinvoke r61.<java.util.ArrayList: void <init>(int)>($i8);

        r52 = r61;

        i16 = 0;

     label22:
        $i9 = interfaceinvoke r11.<java.util.List: int size()>();

        if i16 >= $i9 goto label23;

        $r23 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i16);

        $r24 = (androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo) $r23;

        $r25 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Representation buildRepresentation(androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo,java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList)>($r24, r47, r48, r5, r6);

        interfaceinvoke r52.<java.util.List: boolean add(java.lang.Object)>($r25);

        i16 = i16 + 1;

        goto label22;

     label23:
        $r22 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.AdaptationSet buildAdaptationSet(int,int,java.util.List,java.util.List,java.util.List,java.util.List)>(i3, i14, r52, r7, r9, r10);

        return $r22;
    }

    protected androidx.media3.exoplayer.dash.manifest.AdaptationSet buildAdaptationSet(int, int, java.util.List, java.util.List, java.util.List, java.util.List)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        int i0, i1;
        java.util.List r1, r2, r3, r4;
        androidx.media3.exoplayer.dash.manifest.AdaptationSet $r5;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: java.util.List;

        r4 := @parameter5: java.util.List;

        $r5 = new androidx.media3.exoplayer.dash.manifest.AdaptationSet;

        specialinvoke $r5.<androidx.media3.exoplayer.dash.manifest.AdaptationSet: void <init>(int,int,java.util.List,java.util.List,java.util.List,java.util.List)>(i0, i1, r1, r2, r3, r4);

        return $r5;
    }

    protected int parseContentType(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b0;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "contentType");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $b0 = -1;

        goto label6;

     label1:
        $r3 = "audio";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $b0 = 1;

        goto label6;

     label2:
        $r4 = "video";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

        $b0 = 2;

        goto label6;

     label3:
        $r5 = "text";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label4;

        $b0 = 3;

        goto label6;

     label4:
        $r6 = "image";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label5;

        $b0 = 4;

        goto label6;

     label5:
        $b0 = -1;

     label6:
        return $b0;
    }

    protected android.util.Pair parseContentProtection(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, $r9, $r11, $r12, $r14, r16, r17, r20;
        java.lang.String[] r4;
        java.util.UUID[] r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.util.Pair $r6;
        java.util.UUID $r7, $r8, $r13, $r15, r19;
        int $i1, $i2, $i3, $i4, $i5, $i6, i8;
        byte[] $r10, r18;
        byte b7;
        androidx.media3.common.DrmInitData$SchemeData $r21, r22;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r16 = null;

        r17 = null;

        r18 = null;

        r19 = null;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "schemeIdUri");

        if r2 == null goto label12;

        r20 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r2);

        b7 = -1;

        $i4 = virtualinvoke r20.<java.lang.String: int hashCode()>();

        lookupswitch($i4)
        {
            case -1980789791: goto label04;
            case 489446379: goto label02;
            case 755418770: goto label03;
            case 1812765994: goto label01;
            default: goto label05;
        };

     label01:
        $z4 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("urn:mpeg:dash:mp4protection:2011");

        if $z4 == 0 goto label05;

        b7 = 0;

        goto label05;

     label02:
        $z8 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95");

        if $z8 == 0 goto label05;

        b7 = 1;

        goto label05;

     label03:
        $z7 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed");

        if $z7 == 0 goto label05;

        b7 = 2;

        goto label05;

     label04:
        $z9 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("urn:uuid:e2719d58-a985-b3c9-781a-b030af78d30e");

        if $z9 == 0 goto label05;

        b7 = 3;

     label05:
        tableswitch(b7)
        {
            case 0: goto label06;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label12;
        };

     label06:
        r16 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: java.lang.String getAttributeValueIgnorePrefix(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "default_KID");

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z5 != 0 goto label12;

        $r12 = "00000000-0000-0000-0000-000000000000";

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z6 != 0 goto label12;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        $i5 = lengthof r4;

        r5 = newarray (java.util.UUID)[$i5];

        i8 = 0;

     label07:
        $i6 = lengthof r4;

        if i8 >= $i6 goto label08;

        $r14 = r4[i8];

        $r15 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($r14);

        r5[i8] = $r15;

        i8 = i8 + 1;

        goto label07;

     label08:
        $r13 = <androidx.media3.common.C: java.util.UUID COMMON_PSSH_UUID>;

        r18 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: byte[] buildPsshAtom(java.util.UUID,java.util.UUID[],byte[])>($r13, r5, null);

        r19 = <androidx.media3.common.C: java.util.UUID COMMON_PSSH_UUID>;

        goto label12;

     label09:
        r19 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        goto label12;

     label10:
        r19 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        goto label12;

     label11:
        r19 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        goto label12;

     label12:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z10 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "clearkey:Laurl");

        if $z10 == 0 goto label13;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 != 4 goto label13;

        r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        goto label17;

     label13:
        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ms:laurl");

        if $z0 == 0 goto label14;

        r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "licenseUrl");

        goto label17;

     label14:
        if r18 != null goto label15;

        $z3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTagIgnorePrefix(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "pssh");

        if $z3 == 0 goto label15;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 != 4 goto label15;

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        r18 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r11, 0);

        r19 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: java.util.UUID parseUuid(byte[])>(r18);

        if r19 != null goto label17;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MpdParser", "Skipping malformed cenc:pssh data");

        r18 = null;

        goto label17;

     label15:
        if r18 != null goto label16;

        $r7 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        $z1 = virtualinvoke $r7.<java.util.UUID: boolean equals(java.lang.Object)>(r19);

        if $z1 == 0 goto label16;

        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "mspr:pro");

        if $z2 == 0 goto label16;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 4 goto label16;

        $r8 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r10 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r9, 0);

        r18 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: byte[] buildPsshAtom(java.util.UUID,byte[])>($r8, $r10);

        goto label17;

     label16:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label17:
        $z11 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ContentProtection");

        if $z11 == 0 goto label12;

        if r19 == null goto label18;

        $r21 = new androidx.media3.common.DrmInitData$SchemeData;

        specialinvoke $r21.<androidx.media3.common.DrmInitData$SchemeData: void <init>(java.util.UUID,java.lang.String,java.lang.String,byte[])>(r19, r17, "video/mp4", r18);

        goto label19;

     label18:
        $r21 = null;

     label19:
        r22 = $r21;

        $r6 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r16, r22);

        return $r6;
    }

    protected void parseAdaptationSetChild(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

        return;
    }

    protected androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo parseRepresentation(org.xmlpull.v1.XmlPullParser, java.util.List, java.lang.String, java.lang.String, int, int, float, int, int, java.lang.String, java.util.List, java.util.List, java.util.List, java.util.List, androidx.media3.exoplayer.dash.manifest.SegmentBase, long, long, long, long, long, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List r2, r6, r7, r8, r9, $r36, r51;
        java.lang.String r3, r4, r5, r10, r11, r12, r38;
        int i0, i1, i2, i3, i7, i8, i9, i10, i14;
        float f0, f1;
        long l4, l5, l6, l12, l13;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z16, $z17;
        java.util.ArrayList r13, r14, r15, r16, r17, r44, r45, r46, r47, r48;
        androidx.media3.exoplayer.dash.manifest.Descriptor $r25, $r26, $r27;
        java.lang.Object $r28, $r29, $r30, $r32, $r43;
        androidx.media3.common.DrmInitData$SchemeData $r31;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate $r33;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList $r34;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase $r35, r49;
        androidx.media3.exoplayer.dash.manifest.SegmentBase r37, $r41, r42;
        android.util.Pair r39;
        androidx.media3.common.Format r40;
        androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo r50;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        f0 := @parameter6: float;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        r5 := @parameter9: java.lang.String;

        r6 := @parameter10: java.util.List;

        r7 := @parameter11: java.util.List;

        r8 := @parameter12: java.util.List;

        r9 := @parameter13: java.util.List;

        r37 := @parameter14: androidx.media3.exoplayer.dash.manifest.SegmentBase;

        l4 := @parameter15: long;

        l5 := @parameter16: long;

        l12 := @parameter17: long;

        l13 := @parameter18: long;

        l6 := @parameter19: long;

        z0 := @parameter20: boolean;

        r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        i7 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "bandwidth", -1);

        r11 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "mimeType", r3);

        r12 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "codecs", r4);

        i8 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "width", i0);

        i9 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "height", i1);

        f1 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: float parseFrameRate(org.xmlpull.v1.XmlPullParser,float)>(r1, f0);

        i14 = i2;

        i10 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "audioSamplingRate", i3);

        r38 = null;

        r44 = new java.util.ArrayList;

        specialinvoke r44.<java.util.ArrayList: void <init>()>();

        r13 = r44;

        r45 = new java.util.ArrayList;

        specialinvoke r45.<java.util.ArrayList: void <init>()>();

        r14 = r45;

        r46 = new java.util.ArrayList;

        specialinvoke r46.<java.util.ArrayList: void <init>(java.util.Collection)>(r8);

        r15 = r46;

        r47 = new java.util.ArrayList;

        specialinvoke r47.<java.util.ArrayList: void <init>(java.util.Collection)>(r9);

        r16 = r47;

        r48 = new java.util.ArrayList;

        specialinvoke r48.<java.util.ArrayList: void <init>()>();

        r17 = r48;

        z16 = 0;

     label01:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "BaseURL");

        if $z1 == 0 goto label03;

        if z16 != 0 goto label02;

        l12 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, l12);

        z16 = 1;

     label02:
        $r36 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.List parseBaseUrl(org.xmlpull.v1.XmlPullParser,java.util.List,boolean)>(r1, r2, z0);

        virtualinvoke r17.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r36);

        goto label14;

     label03:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "AudioChannelConfiguration");

        if $z2 == 0 goto label04;

        i14 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseAudioChannelConfiguration(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label14;

     label04:
        $z3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentBase");

        if $z3 == 0 goto label05;

        $r35 = (androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase) r37;

        r37 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase parseSegmentBase(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase)>(r1, $r35);

        goto label14;

     label05:
        $z4 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentList");

        if $z4 == 0 goto label06;

        l13 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, l13);

        $r34 = (androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList) r37;

        r37 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList parseSegmentList(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList,long,long,long,long,long)>(r1, $r34, l4, l5, l12, l13, l6);

        goto label14;

     label06:
        $z5 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentTemplate");

        if $z5 == 0 goto label07;

        l13 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long)>(r1, l13);

        $r33 = (androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate) r37;

        r37 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate parseSegmentTemplate(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate,java.util.List,long,long,long,long,long)>(r1, $r33, r9, l4, l5, l12, l13, l6);

        goto label14;

     label07:
        $z6 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ContentProtection");

        if $z6 == 0 goto label10;

        r39 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: android.util.Pair parseContentProtection(org.xmlpull.v1.XmlPullParser)>(r1);

        $r28 = r39.<android.util.Pair: java.lang.Object first>;

        if $r28 == null goto label08;

        $r32 = r39.<android.util.Pair: java.lang.Object first>;

        r38 = (java.lang.String) $r32;

     label08:
        $r29 = r39.<android.util.Pair: java.lang.Object second>;

        if $r29 == null goto label09;

        $r30 = r39.<android.util.Pair: java.lang.Object second>;

        $r31 = (androidx.media3.common.DrmInitData$SchemeData) $r30;

        virtualinvoke r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

     label09:
        goto label14;

     label10:
        $z7 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "InbandEventStream");

        if $z7 == 0 goto label11;

        $r27 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "InbandEventStream");

        virtualinvoke r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        goto label14;

     label11:
        $z8 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "EssentialProperty");

        if $z8 == 0 goto label12;

        $r26 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "EssentialProperty");

        virtualinvoke r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        goto label14;

     label12:
        $z9 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SupplementalProperty");

        if $z9 == 0 goto label13;

        $r25 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SupplementalProperty");

        virtualinvoke r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        goto label14;

     label13:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label14:
        $z17 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Representation");

        if $z17 == 0 goto label01;

        r40 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.common.Format buildFormat(java.lang.String,java.lang.String,int,int,float,int,int,int,java.lang.String,java.util.List,java.util.List,java.lang.String,java.util.List,java.util.List)>(r10, r11, i8, i9, f1, i14, i10, i7, r5, r6, r7, r12, r15, r16);

        if r37 == null goto label15;

        $r41 = r37;

        goto label16;

     label15:
        r49 = new androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase;

        $r41 = r49;

        specialinvoke r49.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase: void <init>()>();

     label16:
        r42 = $r41;

        r50 = new androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo;

        $z10 = virtualinvoke r17.<java.util.ArrayList: boolean isEmpty()>();

        if $z10 != 0 goto label17;

        $r43 = r17;

        goto label18;

     label17:
        $r43 = r2;

     label18:
        r51 = (java.util.List) $r43;

        specialinvoke r50.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: void <init>(androidx.media3.common.Format,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.List,java.util.List,long)>(r40, r51, r42, r38, r13, r14, r15, r16, -1L);

        return r50;
    }

    protected androidx.media3.common.Format buildFormat(java.lang.String, java.lang.String, int, int, float, int, int, int, java.lang.String, java.util.List, java.util.List, java.lang.String, java.util.List, java.util.List)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1, r2, r3, $r10, $r15, $r16, $r27, r28, r29;
        int i0, i1, i2, i3, i4, i5, i6, $i7, i8, $i9, i10, $i11, i12, $i13, $i14, i15;
        float f0;
        java.util.List r4, r5, r6, r7;
        android.util.Pair r8;
        androidx.media3.common.Format$Builder r9, $r11, $r12, $r13, $r18, $r20, $r21, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r23, $r25;
        java.lang.Integer $r24, $r26;
        androidx.media3.common.Format $r38;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        f0 := @parameter4: float;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: java.util.List;

        r5 := @parameter10: java.util.List;

        r28 := @parameter11: java.lang.String;

        r6 := @parameter12: java.util.List;

        r7 := @parameter13: java.util.List;

        r29 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String getSampleMimeType(java.lang.String,java.lang.String)>(r2, r28);

        $r10 = "audio/eac3";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r29);

        if $z0 == 0 goto label01;

        r29 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseEac3SupplementalProperties(java.util.List)>(r7);

        $r27 = "audio/eac3-joc";

        $z7 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r29);

        if $z7 == 0 goto label01;

        r28 = "ec+3";

     label01:
        i5 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseSelectionFlagsFromRoleDescriptors(java.util.List)>(r4);

        i6 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseRoleFlagsFromRoleDescriptors(java.util.List)>(r4);

        $i7 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseRoleFlagsFromAccessibilityDescriptors(java.util.List)>(r5);

        i8 = i6 | $i7;

        $i9 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseRoleFlagsFromProperties(java.util.List)>(r6);

        i10 = i8 | $i9;

        $i11 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseRoleFlagsFromProperties(java.util.List)>(r7);

        i12 = i10 | $i11;

        r8 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: android.util.Pair parseTileCountFromProperties(java.util.List)>(r6);

        $r30 = new androidx.media3.common.Format$Builder;

        specialinvoke $r30.<androidx.media3.common.Format$Builder: void <init>()>();

        $r31 = virtualinvoke $r30.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>(r1);

        $r32 = virtualinvoke $r31.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String)>(r2);

        $r33 = virtualinvoke $r32.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>(r29);

        $r34 = virtualinvoke $r33.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>(r28);

        $r35 = virtualinvoke $r34.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPeakBitrate(int)>(i4);

        $r36 = virtualinvoke $r35.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSelectionFlags(int)>(i5);

        $r37 = virtualinvoke $r36.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setRoleFlags(int)>(i12);

        $r11 = virtualinvoke $r37.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>(r3);

        if r8 == null goto label02;

        $r25 = r8.<android.util.Pair: java.lang.Object first>;

        $r26 = (java.lang.Integer) $r25;

        $i13 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        goto label03;

     label02:
        $i13 = -1;

     label03:
        $r12 = virtualinvoke $r11.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setTileCountHorizontal(int)>($i13);

        if r8 == null goto label04;

        $r23 = r8.<android.util.Pair: java.lang.Object second>;

        $r24 = (java.lang.Integer) $r23;

        $i14 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        goto label05;

     label04:
        $i14 = -1;

     label05:
        r9 = virtualinvoke $r12.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setTileCountVertical(int)>($i14);

        $z1 = staticinvoke <androidx.media3.common.MimeTypes: boolean isVideo(java.lang.String)>(r29);

        if $z1 == 0 goto label06;

        $r20 = virtualinvoke r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>(i0);

        $r21 = virtualinvoke $r20.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>(i1);

        virtualinvoke $r21.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setFrameRate(float)>(f0);

        goto label11;

     label06:
        $z2 = staticinvoke <androidx.media3.common.MimeTypes: boolean isAudio(java.lang.String)>(r29);

        if $z2 == 0 goto label07;

        $r18 = virtualinvoke r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>(i2);

        virtualinvoke $r18.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleRate(int)>(i3);

        goto label11;

     label07:
        $z3 = staticinvoke <androidx.media3.common.MimeTypes: boolean isText(java.lang.String)>(r29);

        if $z3 == 0 goto label10;

        i15 = -1;

        $r15 = "application/cea-608";

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r29);

        if $z5 == 0 goto label08;

        i15 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseCea608AccessibilityChannel(java.util.List)>(r5);

        goto label09;

     label08:
        $r16 = "application/cea-708";

        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r29);

        if $z6 == 0 goto label09;

        i15 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseCea708AccessibilityChannel(java.util.List)>(r5);

     label09:
        virtualinvoke r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setAccessibilityChannel(int)>(i15);

        goto label11;

     label10:
        $z4 = staticinvoke <androidx.media3.common.MimeTypes: boolean isImage(java.lang.String)>(r29);

        if $z4 == 0 goto label11;

        $r13 = virtualinvoke r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>(i0);

        virtualinvoke $r13.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>(i1);

     label11:
        $r38 = virtualinvoke r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        return $r38;
    }

    protected androidx.media3.exoplayer.dash.manifest.Representation buildRepresentation(androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo, java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo r1;
        java.lang.String r2, r3, r19;
        java.util.ArrayList r4, r5, r7, r8;
        androidx.media3.common.Format$Builder r6;
        androidx.media3.common.Format $r9, $r10;
        boolean $z1;
        long $l0;
        java.util.List $r11, $r12;
        androidx.media3.exoplayer.dash.manifest.SegmentBase $r13;
        com.google.common.collect.ImmutableList $r14;
        androidx.media3.exoplayer.dash.manifest.Representation $r15;
        androidx.media3.common.DrmInitData $r16;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.ArrayList;

        r5 := @parameter4: java.util.ArrayList;

        $r9 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: androidx.media3.common.Format format>;

        r6 = virtualinvoke $r9.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        if r2 == null goto label1;

        virtualinvoke r6.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLabel(java.lang.String)>(r2);

     label1:
        r19 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.lang.String drmSchemeType>;

        if r19 != null goto label2;

        r19 = r3;

     label2:
        r7 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.ArrayList drmSchemeDatas>;

        virtualinvoke r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r4);

        $z1 = virtualinvoke r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void fillInClearKeyInformation(java.util.ArrayList)>(r7);

        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void filterRedundantIncompleteSchemeDatas(java.util.ArrayList)>(r7);

        $r16 = new androidx.media3.common.DrmInitData;

        specialinvoke $r16.<androidx.media3.common.DrmInitData: void <init>(java.lang.String,java.util.List)>(r19, r7);

        virtualinvoke r6.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setDrmInitData(androidx.media3.common.DrmInitData)>($r16);

     label3:
        r8 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.ArrayList inbandEventStreams>;

        virtualinvoke r8.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r5);

        $l0 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: long revisionId>;

        $r10 = virtualinvoke r6.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        $r14 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: com.google.common.collect.ImmutableList baseUrls>;

        $r13 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: androidx.media3.exoplayer.dash.manifest.SegmentBase segmentBase>;

        $r12 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.List essentialProperties>;

        $r11 = r1.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.List supplementalProperties>;

        $r15 = staticinvoke <androidx.media3.exoplayer.dash.manifest.Representation: androidx.media3.exoplayer.dash.manifest.Representation newInstance(long,androidx.media3.common.Format,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,java.util.List,java.util.List,java.util.List,java.lang.String)>($l0, $r10, $r14, $r13, r8, $r12, $r11, null);

        return $r15;
    }

    protected androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase parseSegmentBase(org.xmlpull.v1.XmlPullParser, androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase r2, $r4;
        long l0, l1, $l3, $l4, $l5, $l6, $l7, l8, $l9, l10;
        java.lang.String r3, $r5, $r6;
        boolean $z0, $z1;
        java.lang.String[] r11;
        androidx.media3.exoplayer.dash.manifest.RangedUri $r12, r13;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase;

        if r2 == null goto label01;

        $l5 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase: long timescale>;

        goto label02;

     label01:
        $l5 = 1L;

     label02:
        l0 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "timescale", $l5);

        if r2 == null goto label03;

        $l6 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase: long presentationTimeOffset>;

        goto label04;

     label03:
        $l6 = 0L;

     label04:
        l1 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "presentationTimeOffset", $l6);

        if r2 == null goto label05;

        $l7 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase: long indexStart>;

        goto label06;

     label05:
        $l7 = 0L;

     label06:
        l8 = $l7;

        if r2 == null goto label07;

        $l9 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase: long indexLength>;

        goto label08;

     label07:
        $l9 = 0L;

     label08:
        l10 = $l9;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "indexRange");

        if r3 == null goto label09;

        r11 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        $r5 = r11[0];

        l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $r6 = r11[1];

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $l4 = $l3 - l8;

        l10 = $l4 + 1L;

     label09:
        if r2 == null goto label10;

        $r12 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase: androidx.media3.exoplayer.dash.manifest.RangedUri initialization>;

        goto label11;

     label10:
        $r12 = null;

     label11:
        r13 = $r12;

     label12:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Initialization");

        if $z1 == 0 goto label13;

        r13 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.RangedUri parseInitialization(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label14;

     label13:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label14:
        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentBase");

        if $z0 == 0 goto label12;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase buildSingleSegmentBase(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long)>(r13, l0, l1, l8, l10);

        return $r4;
    }

    protected androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase buildSingleSegmentBase(androidx.media3.exoplayer.dash.manifest.RangedUri, long, long, long, long)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        androidx.media3.exoplayer.dash.manifest.RangedUri r1;
        long l0, l1, l2, l3;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase $r2;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: androidx.media3.exoplayer.dash.manifest.RangedUri;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        $r2 = new androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase;

        specialinvoke $r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase: void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long)>(r1, l0, l1, l2, l3);

        return $r2;
    }

    protected androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList parseSegmentList(org.xmlpull.v1.XmlPullParser, androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList, long, long, long, long, long) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList r2, $r19;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, $l11, $l12, $l13, $l14;
        boolean $z0, $z1, $z3, $z4;
        androidx.media3.exoplayer.dash.manifest.RangedUri $r3, r13, $r16;
        java.util.List r14, $r17, r21, r22;
        java.lang.Object r15, $r18;
        java.util.ArrayList r20;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        l3 := @parameter5: long;

        l4 := @parameter6: long;

        if r2 == null goto label01;

        $l11 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList: long timescale>;

        goto label02;

     label01:
        $l11 = 1L;

     label02:
        l5 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "timescale", $l11);

        if r2 == null goto label03;

        $l12 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList: long presentationTimeOffset>;

        goto label04;

     label03:
        $l12 = 0L;

     label04:
        l6 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "presentationTimeOffset", $l12);

        if r2 == null goto label05;

        $l13 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList: long duration>;

        goto label06;

     label05:
        $l13 = -9223372036854775807L;

     label06:
        l7 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "duration", $l13);

        if r2 == null goto label07;

        $l14 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList: long startNumber>;

        goto label08;

     label07:
        $l14 = 1L;

     label08:
        l8 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "startNumber", $l14);

        l9 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long getFinalAvailabilityTimeOffset(long,long)>(l2, l3);

        r13 = null;

        r14 = null;

        r15 = null;

     label09:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Initialization");

        if $z3 == 0 goto label10;

        r13 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.RangedUri parseInitialization(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label14;

     label10:
        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentTimeline");

        if $z0 == 0 goto label11;

        r14 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.List parseSegmentTimeline(org.xmlpull.v1.XmlPullParser,long,long)>(r1, l5, l1);

        goto label14;

     label11:
        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentURL");

        if $z1 == 0 goto label13;

        if r15 != null goto label12;

        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

        r15 = r20;

     label12:
        $r3 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.RangedUri parseSegmentUrl(org.xmlpull.v1.XmlPullParser)>(r1);

        r21 = (java.util.List) r15;

        interfaceinvoke r21.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label14;

     label13:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label14:
        $z4 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentList");

        if $z4 == 0 goto label09;

        if r2 == null goto label21;

        if r13 == null goto label15;

        $r16 = r13;

        goto label16;

     label15:
        $r16 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList: androidx.media3.exoplayer.dash.manifest.RangedUri initialization>;

     label16:
        r13 = $r16;

        if r14 == null goto label17;

        $r17 = r14;

        goto label18;

     label17:
        $r17 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList: java.util.List segmentTimeline>;

     label18:
        r14 = $r17;

        if r15 == null goto label19;

        $r18 = r15;

        goto label20;

     label19:
        $r18 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList: java.util.List mediaSegments>;

     label20:
        r15 = $r18;

     label21:
        r22 = (java.util.List) r15;

        $r19 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList buildSegmentList(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,java.util.List,long,java.util.List,long,long)>(r13, l5, l6, l8, l7, r14, l9, r22, l4, l0);

        return $r19;
    }

    protected androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList buildSegmentList(androidx.media3.exoplayer.dash.manifest.RangedUri, long, long, long, long, java.util.List, long, java.util.List, long, long)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        androidx.media3.exoplayer.dash.manifest.RangedUri r1;
        long l0, l1, l2, l3, l4, l5, l6, $l7, $l8;
        java.util.List r2, r3;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList $r4;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: androidx.media3.exoplayer.dash.manifest.RangedUri;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        r2 := @parameter5: java.util.List;

        l4 := @parameter6: long;

        r3 := @parameter7: java.util.List;

        l5 := @parameter8: long;

        l6 := @parameter9: long;

        $r4 = new androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList;

        $l7 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>(l5);

        $l8 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>(l6);

        specialinvoke $r4.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList: void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,java.util.List,long,java.util.List,long,long)>(r1, l0, l1, l2, l3, r2, l4, r3, $l7, $l8);

        return $r4;
    }

    protected androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate parseSegmentTemplate(org.xmlpull.v1.XmlPullParser, androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate, java.util.List, long, long, long, long, long) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate r2, $r26;
        java.util.List r3, r23, $r25;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, $l12, $l13, $l14, $l15;
        androidx.media3.exoplayer.dash.manifest.UrlTemplate r4, r5, $r20, $r21;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.dash.manifest.RangedUri r22, $r24;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate;

        r3 := @parameter2: java.util.List;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        l4 := @parameter7: long;

        if r2 == null goto label01;

        $l12 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: long timescale>;

        goto label02;

     label01:
        $l12 = 1L;

     label02:
        l5 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "timescale", $l12);

        if r2 == null goto label03;

        $l13 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: long presentationTimeOffset>;

        goto label04;

     label03:
        $l13 = 0L;

     label04:
        l6 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "presentationTimeOffset", $l13);

        if r2 == null goto label05;

        $l14 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: long duration>;

        goto label06;

     label05:
        $l14 = -9223372036854775807L;

     label06:
        l7 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "duration", $l14);

        if r2 == null goto label07;

        $l15 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: long startNumber>;

        goto label08;

     label07:
        $l15 = 1L;

     label08:
        l8 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "startNumber", $l15);

        l9 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLastSegmentNumberSupplementalProperty(java.util.List)>(r3);

        l10 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long getFinalAvailabilityTimeOffset(long,long)>(l2, l3);

        if r2 == null goto label09;

        $r20 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: androidx.media3.exoplayer.dash.manifest.UrlTemplate mediaTemplate>;

        goto label10;

     label09:
        $r20 = null;

     label10:
        r4 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.UrlTemplate parseUrlTemplate(org.xmlpull.v1.XmlPullParser,java.lang.String,androidx.media3.exoplayer.dash.manifest.UrlTemplate)>(r1, "media", $r20);

        if r2 == null goto label11;

        $r21 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: androidx.media3.exoplayer.dash.manifest.UrlTemplate initializationTemplate>;

        goto label12;

     label11:
        $r21 = null;

     label12:
        r5 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.UrlTemplate parseUrlTemplate(org.xmlpull.v1.XmlPullParser,java.lang.String,androidx.media3.exoplayer.dash.manifest.UrlTemplate)>(r1, "initialization", $r21);

        r22 = null;

        r23 = null;

     label13:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Initialization");

        if $z1 == 0 goto label14;

        r22 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.RangedUri parseInitialization(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label16;

     label14:
        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentTimeline");

        if $z0 == 0 goto label15;

        r23 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.List parseSegmentTimeline(org.xmlpull.v1.XmlPullParser,long,long)>(r1, l5, l1);

        goto label16;

     label15:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label16:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentTemplate");

        if $z2 == 0 goto label13;

        if r2 == null goto label21;

        if r22 == null goto label17;

        $r24 = r22;

        goto label18;

     label17:
        $r24 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: androidx.media3.exoplayer.dash.manifest.RangedUri initialization>;

     label18:
        r22 = $r24;

        if r23 == null goto label19;

        $r25 = r23;

        goto label20;

     label19:
        $r25 = r2.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: java.util.List segmentTimeline>;

     label20:
        r23 = $r25;

     label21:
        $r26 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate buildSegmentTemplate(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,long,java.util.List,long,androidx.media3.exoplayer.dash.manifest.UrlTemplate,androidx.media3.exoplayer.dash.manifest.UrlTemplate,long,long)>(r22, l5, l6, l8, l9, l7, r23, l10, r5, r4, l4, l0);

        return $r26;
    }

    protected androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate buildSegmentTemplate(androidx.media3.exoplayer.dash.manifest.RangedUri, long, long, long, long, long, java.util.List, long, androidx.media3.exoplayer.dash.manifest.UrlTemplate, androidx.media3.exoplayer.dash.manifest.UrlTemplate, long, long)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        androidx.media3.exoplayer.dash.manifest.RangedUri r1;
        long l0, l1, l2, l3, l4, l5, l6, l7, $l8, $l9;
        java.util.List r2;
        androidx.media3.exoplayer.dash.manifest.UrlTemplate r3, r4;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate $r5;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: androidx.media3.exoplayer.dash.manifest.RangedUri;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        r2 := @parameter6: java.util.List;

        l5 := @parameter7: long;

        r3 := @parameter8: androidx.media3.exoplayer.dash.manifest.UrlTemplate;

        r4 := @parameter9: androidx.media3.exoplayer.dash.manifest.UrlTemplate;

        l6 := @parameter10: long;

        l7 := @parameter11: long;

        $r5 = new androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate;

        $l8 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>(l6);

        $l9 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>(l7);

        specialinvoke $r5.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate: void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,long,java.util.List,long,androidx.media3.exoplayer.dash.manifest.UrlTemplate,androidx.media3.exoplayer.dash.manifest.UrlTemplate,long,long)>(r1, l0, l1, l2, l3, l4, r2, l5, r3, r4, $l8, $l9);

        return $r5;
    }

    protected androidx.media3.exoplayer.dash.manifest.EventStream parseEventStream(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        long l0, l1, $l6;
        java.util.ArrayList r4, $r8;
        java.io.ByteArrayOutputStream r5, $r9;
        androidx.media3.extractor.metadata.emsg.EventMessage[] r6;
        android.util.Pair r7, r16;
        boolean $z0, $z1;
        int $i3, $i4, $i5, i7;
        androidx.media3.exoplayer.dash.manifest.EventStream $r10;
        java.lang.Object $r11, $r12, $r14;
        java.lang.Long $r13;
        androidx.media3.extractor.metadata.emsg.EventMessage $r15;
        long[] r17;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "schemeIdUri", "");

        r3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "value", "");

        l0 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "timescale", 1L);

        l1 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "presentationTimeOffset", 0L);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>(int)>(512);

        r5 = $r9;

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Event");

        if $z0 == 0 goto label2;

        r16 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: android.util.Pair parseEvent(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,long,long,java.io.ByteArrayOutputStream)>(r1, r2, r3, l0, l1, r5);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r16);

        goto label3;

     label2:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label3:
        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "EventStream");

        if $z1 == 0 goto label1;

        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        r17 = newarray (long)[$i3];

        $i4 = interfaceinvoke r4.<java.util.List: int size()>();

        r6 = newarray (androidx.media3.extractor.metadata.emsg.EventMessage)[$i4];

        i7 = 0;

     label4:
        $i5 = interfaceinvoke r4.<java.util.List: int size()>();

        if i7 >= $i5 goto label5;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i7);

        r7 = (android.util.Pair) $r11;

        $r12 = r7.<android.util.Pair: java.lang.Object first>;

        $r13 = (java.lang.Long) $r12;

        $l6 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        r17[i7] = $l6;

        $r14 = r7.<android.util.Pair: java.lang.Object second>;

        $r15 = (androidx.media3.extractor.metadata.emsg.EventMessage) $r14;

        r6[i7] = $r15;

        i7 = i7 + 1;

        goto label4;

     label5:
        $r10 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.EventStream buildEventStream(java.lang.String,java.lang.String,long,long[],androidx.media3.extractor.metadata.emsg.EventMessage[])>(r2, r3, l0, r17, r6);

        return $r10;
    }

    protected androidx.media3.exoplayer.dash.manifest.EventStream buildEventStream(java.lang.String, java.lang.String, long, long[], androidx.media3.extractor.metadata.emsg.EventMessage[])
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1, r2;
        long l0;
        long[] r3;
        androidx.media3.extractor.metadata.emsg.EventMessage[] r4;
        androidx.media3.exoplayer.dash.manifest.EventStream $r5;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: long[];

        r4 := @parameter4: androidx.media3.extractor.metadata.emsg.EventMessage[];

        $r5 = new androidx.media3.exoplayer.dash.manifest.EventStream;

        specialinvoke $r5.<androidx.media3.exoplayer.dash.manifest.EventStream: void <init>(java.lang.String,java.lang.String,long,long[],androidx.media3.extractor.metadata.emsg.EventMessage[])>(r1, r2, l0, r3, r4);

        return $r5;
    }

    protected android.util.Pair parseEvent(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String, long, long, java.io.ByteArrayOutputStream) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r5;
        long l0, l1, l2, l3, l4, l5, l6, $l7;
        java.io.ByteArrayOutputStream r4;
        byte[] r6, $r13;
        java.lang.Long $r7;
        androidx.media3.extractor.metadata.emsg.EventMessage $r8;
        android.util.Pair $r9;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r4 := @parameter5: java.io.ByteArrayOutputStream;

        l2 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "id", 0L);

        l3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "duration", -9223372036854775807L);

        l4 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "presentationTime", 0L);

        l5 = staticinvoke <androidx.media3.common.util.Util: long scaleLargeTimestamp(long,long,long)>(l3, 1000L, l0);

        $l7 = l4 - l1;

        l6 = staticinvoke <androidx.media3.common.util.Util: long scaleLargeTimestamp(long,long,long)>($l7, 1000000L, l0);

        r5 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "messageData", null);

        r6 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: byte[] parseEventObject(org.xmlpull.v1.XmlPullParser,java.io.ByteArrayOutputStream)>(r1, r4);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        if r5 != null goto label1;

        $r13 = r6;

        goto label2;

     label1:
        $r13 = staticinvoke <androidx.media3.common.util.Util: byte[] getUtf8Bytes(java.lang.String)>(r5);

     label2:
        $r8 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.extractor.metadata.emsg.EventMessage buildEvent(java.lang.String,java.lang.String,long,long,byte[])>(r2, r3, l2, l5, $r13);

        $r9 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r7, $r8);

        return $r9;
    }

    protected byte[] parseEventObject(org.xmlpull.v1.XmlPullParser, java.io.ByteArrayOutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.io.ByteArrayOutputStream r2;
        org.xmlpull.v1.XmlSerializer r3;
        java.nio.charset.Charset $r4;
        java.lang.String $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23;
        boolean $z0;
        byte[] $r6;
        int $i1, $i3, i4;
        java.lang.Boolean $r25;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.io.ByteArrayOutputStream;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void reset()>();

        r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        $r4 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, $r5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int nextToken()>();

     label01:
        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Event");

        if $z0 != 0 goto label16;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        tableswitch($i1)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label14;
            default: goto label15;
        };

     label02:
        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r25);

        goto label15;

     label03:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        goto label15;

     label04:
        $r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r18, $r19);

        i4 = 0;

     label05:
        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i4 >= $i3 goto label06;

        $r21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i4);

        $r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i4);

        $r23 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i4);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r21, $r22, $r23);

        i4 = i4 + 1;

        goto label05;

     label06:
        goto label15;

     label07:
        $r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r16 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r15, $r16);

        goto label15;

     label08:
        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r13);

        goto label15;

     label09:
        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void cdsect(java.lang.String)>($r12);

        goto label15;

     label10:
        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void entityRef(java.lang.String)>($r11);

        goto label15;

     label11:
        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void ignorableWhitespace(java.lang.String)>($r10);

        goto label15;

     label12:
        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void processingInstruction(java.lang.String)>($r9);

        goto label15;

     label13:
        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void comment(java.lang.String)>($r8);

        goto label15;

     label14:
        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void docdecl(java.lang.String)>($r7);

        goto label15;

     label15:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int nextToken()>();

        goto label01;

     label16:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void flush()>();

        $r6 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r6;
    }

    protected androidx.media3.extractor.metadata.emsg.EventMessage buildEvent(java.lang.String, java.lang.String, long, long, byte[])
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1, r2;
        long l0, l1;
        byte[] r3;
        androidx.media3.extractor.metadata.emsg.EventMessage $r4;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        r3 := @parameter4: byte[];

        $r4 = new androidx.media3.extractor.metadata.emsg.EventMessage;

        specialinvoke $r4.<androidx.media3.extractor.metadata.emsg.EventMessage: void <init>(java.lang.String,java.lang.String,long,long,byte[])>(r1, r2, l1, l0, r3);

        return $r4;
    }

    protected java.util.List parseSegmentTimeline(org.xmlpull.v1.XmlPullParser, long, long) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        long l0, l1, l5, l6, l8, l9;
        java.util.ArrayList r2, $r3;
        boolean $z0, $z1, z2;
        byte $b4;
        int i7;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = $r3;

        l5 = 0L;

        l6 = -9223372036854775807L;

        i7 = 0;

        z2 = 0;

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "S");

        if $z0 == 0 goto label4;

        l8 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "t", -9223372036854775807L);

        if z2 == 0 goto label2;

        l5 = specialinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long addSegmentTimelineElementsToList(java.util.List,long,long,int,long)>(r2, l5, l6, i7, l8);

     label2:
        $b4 = l8 cmp -9223372036854775807L;

        if $b4 == 0 goto label3;

        l5 = l8;

     label3:
        l6 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "d", -9223372036854775807L);

        i7 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "r", 0);

        z2 = 1;

        goto label5;

     label4:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SegmentTimeline");

        if $z1 == 0 goto label1;

        if z2 == 0 goto label6;

        l9 = staticinvoke <androidx.media3.common.util.Util: long scaleLargeTimestamp(long,long,long)>(l1, l0, 1000L);

        specialinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: long addSegmentTimelineElementsToList(java.util.List,long,long,int,long)>(r2, l5, l6, i7, l9);

     label6:
        return r2;
    }

    private long addSegmentTimelineElementsToList(java.util.List, long, long, int, long)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.util.List r1;
        long l0, l2, $l4, $l5, l6;
        int i1, i3, $i7, i8;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTimelineElement $r2;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.util.List;

        l6 := @parameter1: long;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        if i1 < 0 goto label1;

        $i7 = 1 + i1;

        goto label2;

     label1:
        $l4 = l2 - l6;

        $l5 = staticinvoke <androidx.media3.common.util.Util: long ceilDivide(long,long)>($l4, l0);

        $i7 = (int) $l5;

     label2:
        i3 = $i7;

        i8 = 0;

     label3:
        if i8 >= i3 goto label4;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTimelineElement buildSegmentTimelineElement(long,long)>(l6, l0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        l6 = l6 + l0;

        i8 = i8 + 1;

        goto label3;

     label4:
        return l6;
    }

    protected androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTimelineElement buildSegmentTimelineElement(long, long)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        long l0, l1;
        androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTimelineElement $r1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = new androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTimelineElement;

        specialinvoke $r1.<androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTimelineElement: void <init>(long,long)>(l0, l1);

        return $r1;
    }

    protected androidx.media3.exoplayer.dash.manifest.UrlTemplate parseUrlTemplate(org.xmlpull.v1.XmlPullParser, java.lang.String, androidx.media3.exoplayer.dash.manifest.UrlTemplate)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4;
        androidx.media3.exoplayer.dash.manifest.UrlTemplate r3, $r5;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media3.exoplayer.dash.manifest.UrlTemplate;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r4 == null goto label1;

        $r5 = staticinvoke <androidx.media3.exoplayer.dash.manifest.UrlTemplate: androidx.media3.exoplayer.dash.manifest.UrlTemplate compile(java.lang.String)>(r4);

        return $r5;

     label1:
        return r3;
    }

    protected androidx.media3.exoplayer.dash.manifest.RangedUri parseInitialization(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        androidx.media3.exoplayer.dash.manifest.RangedUri $r2;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.RangedUri parseRangedUrl(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "sourceURL", "range");

        return $r2;
    }

    protected androidx.media3.exoplayer.dash.manifest.RangedUri parseSegmentUrl(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        androidx.media3.exoplayer.dash.manifest.RangedUri $r2;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.RangedUri parseRangedUrl(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "media", "mediaRange");

        return $r2;
    }

    protected androidx.media3.exoplayer.dash.manifest.RangedUri parseRangedUrl(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, r5, $r7, $r8;
        java.lang.String[] r6;
        int $i0;
        long $l1, $l2, l3, l4;
        androidx.media3.exoplayer.dash.manifest.RangedUri $r9;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        l3 = 0L;

        l4 = -1L;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r3);

        if r5 == null goto label1;

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        $r7 = r6[0];

        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

        $i0 = lengthof r6;

        if $i0 != 2 goto label1;

        $r8 = r6[1];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        $l2 = $l1 - l3;

        l4 = $l2 + 1L;

     label1:
        $r9 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.RangedUri buildRangedUri(java.lang.String,long,long)>(r4, l3, l4);

        return $r9;
    }

    protected androidx.media3.exoplayer.dash.manifest.RangedUri buildRangedUri(java.lang.String, long, long)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1;
        long l0, l1;
        androidx.media3.exoplayer.dash.manifest.RangedUri $r2;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = new androidx.media3.exoplayer.dash.manifest.RangedUri;

        specialinvoke $r2.<androidx.media3.exoplayer.dash.manifest.RangedUri: void <init>(java.lang.String,long,long)>(r1, l0, l1);

        return $r2;
    }

    protected androidx.media3.exoplayer.dash.manifest.ProgramInformation parseProgramInformation(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r5, r6, r7;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.exoplayer.dash.manifest.ProgramInformation $r4;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r5 = null;

        r6 = null;

        r7 = null;

        r2 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "moreInformationURL", null);

        r3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "lang", null);

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Title");

        if $z0 == 0 goto label2;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        goto label5;

     label2:
        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Source");

        if $z1 == 0 goto label3;

        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        goto label5;

     label3:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Copyright");

        if $z2 == 0 goto label4;

        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        goto label5;

     label4:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        $z3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ProgramInformation");

        if $z3 == 0 goto label1;

        $r4 = new androidx.media3.exoplayer.dash.manifest.ProgramInformation;

        specialinvoke $r4.<androidx.media3.exoplayer.dash.manifest.ProgramInformation: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r5, r6, r7, r2, r3);

        return $r4;
    }

    protected java.lang.String parseLabel(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String $r2;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseText(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Label");

        return $r2;
    }

    protected java.util.List parseBaseUrl(org.xmlpull.v1.XmlPullParser, java.util.List, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List r2;
        boolean z0, $z1;
        java.lang.String r3, r4, r5, r8, $r11, r16, $r17, r18;
        java.util.ArrayList r6, $r9, $r15;
        androidx.media3.exoplayer.dash.manifest.BaseUrl r7, $r12, $r14;
        int $i0, $i1, i2, $i3, i4, i5;
        java.lang.Object $r10;
        androidx.media3.exoplayer.dash.manifest.BaseUrl[] $r13;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "dvb:priority");

        if r3 == null goto label01;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        goto label03;

     label01:
        if z0 == 0 goto label02;

        $i1 = 1;

        goto label03;

     label02:
        $i1 = -2147483648;

     label03:
        i2 = $i1;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "dvb:weight");

        if r4 == null goto label04;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        goto label05;

     label04:
        $i3 = 1;

     label05:
        i4 = $i3;

        r16 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "serviceLocation");

        r5 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseText(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "BaseURL");

        $z1 = staticinvoke <androidx.media3.common.util.UriUtil: boolean isAbsolute(java.lang.String)>(r5);

        if $z1 == 0 goto label07;

        if r16 != null goto label06;

        r16 = r5;

     label06:
        $r13 = newarray (androidx.media3.exoplayer.dash.manifest.BaseUrl)[1];

        $r14 = new androidx.media3.exoplayer.dash.manifest.BaseUrl;

        specialinvoke $r14.<androidx.media3.exoplayer.dash.manifest.BaseUrl: void <init>(java.lang.String,java.lang.String,int,int)>(r5, r16, i2, i4);

        $r13[0] = $r14;

        $r15 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r13);

        return $r15;

     label07:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r6 = $r9;

        i5 = 0;

     label08:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i5 >= $i0 goto label12;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);

        r7 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r10;

        $r11 = r7.<androidx.media3.exoplayer.dash.manifest.BaseUrl: java.lang.String url>;

        r8 = staticinvoke <androidx.media3.common.util.UriUtil: java.lang.String resolve(java.lang.String,java.lang.String)>($r11, r5);

        if r16 != null goto label09;

        $r17 = r8;

        goto label10;

     label09:
        $r17 = r16;

     label10:
        r18 = $r17;

        if z0 == 0 goto label11;

        i2 = r7.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int priority>;

        i4 = r7.<androidx.media3.exoplayer.dash.manifest.BaseUrl: int weight>;

        r18 = r7.<androidx.media3.exoplayer.dash.manifest.BaseUrl: java.lang.String serviceLocation>;

     label11:
        $r12 = new androidx.media3.exoplayer.dash.manifest.BaseUrl;

        specialinvoke $r12.<androidx.media3.exoplayer.dash.manifest.BaseUrl: void <init>(java.lang.String,java.lang.String,int,int)>(r8, r18, i2, i4);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r12);

        i5 = i5 + 1;

        goto label08;

     label12:
        return r6;
    }

    protected long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser, long)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        long l0, $l1;
        java.lang.String r2, $r3;
        boolean $z0;
        float $f0, $f1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        l0 := @parameter1: long;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "availabilityTimeOffset");

        if r2 != null goto label1;

        return l0;

     label1:
        $r3 = "INF";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 9223372036854775807L;

     label2:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

        $f1 = $f0 * 1000000.0F;

        $l1 = (long) $f1;

        return $l1;
    }

    protected int parseAudioChannelConfiguration(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        int $i0, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte b2;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "schemeIdUri", null);

        r3 = r2;

        b2 = -1;

        $i0 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2128649360: goto label04;
            case -1352850286: goto label01;
            case -1138141449: goto label06;
            case -986633423: goto label02;
            case -79006963: goto label03;
            case 312179081: goto label05;
            case 2036691300: goto label07;
            default: goto label08;
        };

     label01:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("urn:mpeg:dash:23003:3:audio_channel_configuration:2011");

        if $z5 == 0 goto label08;

        b2 = 0;

        goto label08;

     label02:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("urn:mpeg:mpegB:cicp:ChannelConfiguration");

        if $z3 == 0 goto label08;

        b2 = 1;

        goto label08;

     label03:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("tag:dts.com,2014:dash:audio_channel_configuration:2012");

        if $z2 == 0 goto label08;

        b2 = 2;

        goto label08;

     label04:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("urn:dts:dash:audio_channel_configuration:2012");

        if $z6 == 0 goto label08;

        b2 = 3;

        goto label08;

     label05:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("tag:dts.com,2018:uhd:audio_channel_configuration");

        if $z1 == 0 goto label08;

        b2 = 4;

        goto label08;

     label06:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("tag:dolby.com,2014:dash:audio_channel_configuration:2011");

        if $z4 == 0 goto label08;

        b2 = 5;

        goto label08;

     label07:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("urn:dolby:dash:audio_channel_configuration:2011");

        if $z0 == 0 goto label08;

        b2 = 6;

     label08:
        tableswitch(b2)
        {
            case 0: goto label09;
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label12;
            case 5: goto label13;
            case 6: goto label13;
            default: goto label14;
        };

     label09:
        i3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "value", -1);

        goto label15;

     label10:
        i3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseMpegChannelConfiguration(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label15;

     label11:
        i3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseDtsChannelConfiguration(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label15;

     label12:
        i3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseDtsxChannelConfiguration(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label15;

     label13:
        i3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseDolbyChannelConfiguration(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label15;

     label14:
        i3 = -1;

     label15:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z7 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "AudioChannelConfiguration");

        if $z7 == 0 goto label15;

        return i3;
    }

    protected int parseSelectionFlagsFromRoleDescriptors(java.util.List)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.util.List r1;
        androidx.media3.exoplayer.dash.manifest.Descriptor r2;
        int $i0, $i1, i2, i3;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.util.List;

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r3;

        $r4 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z0 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("urn:mpeg:dash:role:2011", $r4);

        if $z0 == 0 goto label2;

        $r5 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseSelectionFlagsFromDashRoleScheme(java.lang.String)>($r5);

        i2 = i2 | $i1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    protected int parseSelectionFlagsFromDashRoleScheme(java.lang.String)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0, $z1;
        byte b1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1574842690: goto label2;
            case -1396432756: goto label3;
            default: goto label4;
        };

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("forced_subtitle");

        if $z1 == 0 goto label4;

        b1 = 0;

        goto label4;

     label3:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("forced-subtitle");

        if $z0 == 0 goto label4;

        b1 = 1;

     label4:
        lookupswitch(b1)
        {
            case 0: goto label5;
            case 1: goto label5;
            default: goto label6;
        };

     label5:
        return 2;

     label6:
        return 0;
    }

    protected int parseRoleFlagsFromRoleDescriptors(java.util.List)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.util.List r1;
        androidx.media3.exoplayer.dash.manifest.Descriptor r2;
        int $i0, $i1, i2, i3;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.util.List;

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r3;

        $r4 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z0 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("urn:mpeg:dash:role:2011", $r4);

        if $z0 == 0 goto label2;

        $r5 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseRoleFlagsFromDashRoleScheme(java.lang.String)>($r5);

        i2 = i2 | $i1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    protected int parseRoleFlagsFromAccessibilityDescriptors(java.util.List)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.util.List r1;
        androidx.media3.exoplayer.dash.manifest.Descriptor r2;
        int $i0, $i1, $i2, i3, i4;
        java.lang.Object $r3;
        java.lang.String $r4, $r5, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.util.List;

        i3 = 0;

        i4 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i4 >= $i0 goto label4;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        r2 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r3;

        $r4 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z0 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("urn:mpeg:dash:role:2011", $r4);

        if $z0 == 0 goto label2;

        $r7 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $i2 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseRoleFlagsFromDashRoleScheme(java.lang.String)>($r7);

        i3 = i3 | $i2;

        goto label3;

     label2:
        $r5 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z1 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("urn:tva:metadata:cs:AudioPurposeCS:2007", $r5);

        if $z1 == 0 goto label3;

        $r6 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseTvaAudioPurposeCsValue(java.lang.String)>($r6);

        i3 = i3 | $i1;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return i3;
    }

    protected int parseRoleFlagsFromProperties(java.util.List)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.util.List r1;
        androidx.media3.exoplayer.dash.manifest.Descriptor r2;
        int $i0, i2;
        java.lang.Object $r3;
        java.lang.String $r4;
        boolean $z0;
        short s1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.util.List;

        s1 = 0;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r3;

        $r4 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z0 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("http://dashif.org/guidelines/trickmode", $r4);

        if $z0 == 0 goto label2;

        s1 = s1 | 16384;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return s1;
    }

    protected int parseRoleFlagsFromDashRoleScheme(java.lang.String)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        byte b1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        return 0;

     label01:
        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2060497896: goto label11;
            case -1724546052: goto label13;
            case -1580883024: goto label14;
            case -1574842690: goto label09;
            case -1408024454: goto label03;
            case -1396432756: goto label10;
            case 99825: goto label06;
            case 3343801: goto label02;
            case 3530173: goto label12;
            case 552573414: goto label08;
            case 899152809: goto label05;
            case 1629013393: goto label07;
            case 1855372047: goto label04;
            default: goto label15;
        };

     label02:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("main");

        if $z5 == 0 goto label15;

        b1 = 0;

        goto label15;

     label03:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("alternate");

        if $z8 == 0 goto label15;

        b1 = 1;

        goto label15;

     label04:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("supplementary");

        if $z0 == 0 goto label15;

        b1 = 2;

        goto label15;

     label05:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("commentary");

        if $z2 == 0 goto label15;

        b1 = 3;

        goto label15;

     label06:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("dub");

        if $z6 == 0 goto label15;

        b1 = 4;

        goto label15;

     label07:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("emergency");

        if $z1 == 0 goto label15;

        b1 = 5;

        goto label15;

     label08:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("caption");

        if $z3 == 0 goto label15;

        b1 = 6;

        goto label15;

     label09:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("forced_subtitle");

        if $z9 == 0 goto label15;

        b1 = 7;

        goto label15;

     label10:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("forced-subtitle");

        if $z7 == 0 goto label15;

        b1 = 8;

        goto label15;

     label11:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("subtitle");

        if $z12 == 0 goto label15;

        b1 = 9;

        goto label15;

     label12:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("sign");

        if $z4 == 0 goto label15;

        b1 = 10;

        goto label15;

     label13:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("description");

        if $z11 == 0 goto label15;

        b1 = 11;

        goto label15;

     label14:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("enhanced-audio-intelligibility");

        if $z10 == 0 goto label15;

        b1 = 12;

     label15:
        tableswitch(b1)
        {
            case 0: goto label16;
            case 1: goto label17;
            case 2: goto label18;
            case 3: goto label19;
            case 4: goto label20;
            case 5: goto label21;
            case 6: goto label22;
            case 7: goto label23;
            case 8: goto label23;
            case 9: goto label23;
            case 10: goto label24;
            case 11: goto label25;
            case 12: goto label26;
            default: goto label27;
        };

     label16:
        return 1;

     label17:
        return 2;

     label18:
        return 4;

     label19:
        return 8;

     label20:
        return 16;

     label21:
        return 32;

     label22:
        return 64;

     label23:
        return 128;

     label24:
        return 256;

     label25:
        return 512;

     label26:
        return 2048;

     label27:
        return 0;
    }

    protected int parseTvaAudioPurposeCsValue(java.lang.String)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b1;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        return 0;

     label01:
        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        tableswitch($i0)
        {
            case 49: goto label02;
            case 50: goto label03;
            case 51: goto label04;
            case 52: goto label05;
            case 53: goto label07;
            case 54: goto label06;
            default: goto label07;
        };

     label02:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z4 == 0 goto label07;

        b1 = 0;

        goto label07;

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z3 == 0 goto label07;

        b1 = 1;

        goto label07;

     label04:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("3");

        if $z2 == 0 goto label07;

        b1 = 2;

        goto label07;

     label05:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("4");

        if $z1 == 0 goto label07;

        b1 = 3;

        goto label07;

     label06:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("6");

        if $z0 == 0 goto label07;

        b1 = 4;

     label07:
        tableswitch(b1)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label12;
            default: goto label13;
        };

     label08:
        return 512;

     label09:
        return 2048;

     label10:
        return 4;

     label11:
        return 8;

     label12:
        return 1;

     label13:
        return 0;
    }

    protected java.lang.String[] parseProfiles(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[])
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4;
        java.lang.String[] r3, $r5;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r4 != null goto label1;

        return r3;

     label1:
        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        return $r5;
    }

    protected android.util.Pair parseTileCountFromProperties(java.util.List)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.util.List r1;
        androidx.media3.exoplayer.dash.manifest.Descriptor r2;
        java.lang.String r3, $r6, $r7, $r8, $r9, $r13;
        java.lang.String[] r4;
        int i0, $i1, $i2, i3, i4;
        java.lang.Object $r5;
        boolean $z0, $z1;
        java.lang.Integer $r10, $r11;
        android.util.Pair $r12;
        java.lang.Throwable $r14, r15;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.util.List;

        i3 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i1 goto label7;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r5;

        $r6 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z0 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("http://dashif.org/thumbnail_tile", $r6);

        if $z0 != 0 goto label2;

        $r13 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z1 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("http://dashif.org/guidelines/thumbnail_tile", $r13);

        if $z1 == 0 goto label6;

     label2:
        $r7 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        if $r7 == null goto label6;

        r3 = r2.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r3, "x");

        $i2 = lengthof r4;

        if $i2 == 2 goto label3;

        goto label6;

     label3:
        $r8 = r4[0];

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r9 = r4[1];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r10, $r11);

     label4:
        return $r12;

     label5:
        $r14 := @caughtexception;

        r15 = $r14;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        return null;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public static void maybeSkipTag(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        boolean $z0, $z1, $z2;
        int i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser)>(r0);

        if $z0 != 0 goto label1;

        return;

     label1:
        i1 = 1;

     label2:
        if i1 == 0 goto label4;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser)>(r0);

        if $z1 == 0 goto label3;

        i1 = i1 + 1;

        goto label2;

     label3:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser)>(r0);

        if $z2 == 0 goto label2;

        i1 = i1 + -1;

        goto label2;

     label4:
        return;
    }

    private static void filterRedundantIncompleteSchemeDatas(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        androidx.media3.common.DrmInitData$SchemeData r1, $r4;
        int $i0, $i1, i2, i3;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label5;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (androidx.media3.common.DrmInitData$SchemeData) $r2;

        $z0 = virtualinvoke r1.<androidx.media3.common.DrmInitData$SchemeData: boolean hasData()>();

        if $z0 != 0 goto label4;

        i3 = 0;

     label2:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label4;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (androidx.media3.common.DrmInitData$SchemeData) $r3;

        $z1 = virtualinvoke $r4.<androidx.media3.common.DrmInitData$SchemeData: boolean canReplace(androidx.media3.common.DrmInitData$SchemeData)>(r1);

        if $z1 == 0 goto label3;

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + -1;

        goto label1;

     label5:
        return;
    }

    private static void fillInClearKeyInformation(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        int $i0, $i1, i2, i3;
        java.lang.Object $r1, $r10;
        java.util.UUID $r2, $r3, $r8, $r11, $r12;
        boolean $z0, $z1;
        java.lang.String $r4, $r7, $r13, r15;
        androidx.media3.common.DrmInitData$SchemeData $r5, r16, r17;
        byte[] $r6;

        r0 := @parameter0: java.util.ArrayList;

        r15 = null;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label3;

        $r10 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r16 = (androidx.media3.common.DrmInitData$SchemeData) $r10;

        $r12 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        $r11 = r16.<androidx.media3.common.DrmInitData$SchemeData: java.util.UUID uuid>;

        $z1 = virtualinvoke $r12.<java.util.UUID: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label2;

        $r13 = r16.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String licenseServerUrl>;

        if $r13 == null goto label2;

        r15 = r16.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String licenseServerUrl>;

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if r15 != null goto label4;

        return;

     label4:
        i3 = 0;

     label5:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label7;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r17 = (androidx.media3.common.DrmInitData$SchemeData) $r1;

        $r3 = <androidx.media3.common.C: java.util.UUID COMMON_PSSH_UUID>;

        $r2 = r17.<androidx.media3.common.DrmInitData$SchemeData: java.util.UUID uuid>;

        $z0 = virtualinvoke $r3.<java.util.UUID: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

        $r4 = r17.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String licenseServerUrl>;

        if $r4 != null goto label6;

        $r5 = new androidx.media3.common.DrmInitData$SchemeData;

        $r8 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        $r7 = r17.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String mimeType>;

        $r6 = r17.<androidx.media3.common.DrmInitData$SchemeData: byte[] data>;

        specialinvoke $r5.<androidx.media3.common.DrmInitData$SchemeData: void <init>(java.util.UUID,java.lang.String,java.lang.String,byte[])>($r8, r15, $r7, $r6);

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i3, $r5);

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return;
    }

    private static java.lang.String getSampleMimeType(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <androidx.media3.common.MimeTypes: boolean isAudio(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <androidx.media3.common.MimeTypes: java.lang.String getAudioMediaMimeType(java.lang.String)>(r1);

        return $r6;

     label1:
        $z1 = staticinvoke <androidx.media3.common.MimeTypes: boolean isVideo(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $r5 = staticinvoke <androidx.media3.common.MimeTypes: java.lang.String getVideoMediaMimeType(java.lang.String)>(r1);

        return $r5;

     label2:
        $z2 = staticinvoke <androidx.media3.common.MimeTypes: boolean isText(java.lang.String)>(r0);

        if $z2 == 0 goto label3;

        return r0;

     label3:
        $z3 = staticinvoke <androidx.media3.common.MimeTypes: boolean isImage(java.lang.String)>(r0);

        if $z3 == 0 goto label4;

        return r0;

     label4:
        $r3 = "application/mp4";

        $z4 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label7;

        r2 = staticinvoke <androidx.media3.common.MimeTypes: java.lang.String getMediaMimeType(java.lang.String)>(r1);

        $r4 = "text/vtt";

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label5;

        $r7 = "application/x-mp4-vtt";

        goto label6;

     label5:
        $r7 = r2;

     label6:
        return $r7;

     label7:
        return null;
    }

    private static java.lang.String checkLanguageConsistency(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return r0;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        return r0;
    }

    private static int checkContentTypeConsistency(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != -1 goto label1;

        return i1;

     label1:
        if i1 != -1 goto label2;

        return i0;

     label2:
        if i0 != i1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        return i0;
    }

    protected static androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, r3, r4;
        boolean $z0;
        androidx.media3.exoplayer.dash.manifest.Descriptor $r5;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r0, "schemeIdUri", "");

        r3 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r0, "value", null);

        r4 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r0, "id", null);

     label1:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r1);

        if $z0 == 0 goto label1;

        $r5 = new androidx.media3.exoplayer.dash.manifest.Descriptor;

        specialinvoke $r5.<androidx.media3.exoplayer.dash.manifest.Descriptor: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4);

        return $r5;
    }

    protected static int parseCea608AccessibilityChannel(java.util.List)
    {
        java.util.List r0;
        androidx.media3.exoplayer.dash.manifest.Descriptor r1;
        java.util.regex.Matcher r2;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r11, $r13, $r14;
        boolean $z0, $z1;
        java.util.regex.Pattern $r8;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @parameter0: java.util.List;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r3;

        $r5 = "urn:scte:dash:cc:cea-608:2015";

        $r4 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r6 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        if $r6 == null goto label3;

        $r8 = <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern CEA_608_ACCESSIBILITY_PATTERN>;

        $r7 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        r2 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r7);

        $z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label2;

        $r14 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        return $i1;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse CEA-608 channel number from: ");

        $r11 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MpdParser", $r13);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return -1;
    }

    protected static int parseCea708AccessibilityChannel(java.util.List)
    {
        java.util.List r0;
        androidx.media3.exoplayer.dash.manifest.Descriptor r1;
        java.util.regex.Matcher r2;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r11, $r13, $r14;
        boolean $z0, $z1;
        java.util.regex.Pattern $r8;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @parameter0: java.util.List;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r3;

        $r5 = "urn:scte:dash:cc:cea-708:2015";

        $r4 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r6 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        if $r6 == null goto label3;

        $r8 = <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern CEA_708_ACCESSIBILITY_PATTERN>;

        $r7 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        r2 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r7);

        $z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label2;

        $r14 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        return $i1;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse CEA-708 service block number from: ");

        $r11 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MpdParser", $r13);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return -1;
    }

    protected static java.lang.String parseEac3SupplementalProperties(java.util.List)
    {
        java.util.List r0;
        androidx.media3.exoplayer.dash.manifest.Descriptor r1;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.util.List;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label5;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r3;

        r2 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $r4 = "tag:dolby.com,2018:dash:EC3_ExtensionType:2018";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r9 = "JOC";

        $r8 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 != 0 goto label3;

     label2:
        $r5 = "tag:dolby.com,2014:dash:DolbyDigitalPlusExtensionType:2014";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

        $r7 = "ec+3";

        $r6 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label4;

     label3:
        return "audio/eac3-joc";

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return "audio/eac3";
    }

    protected static float parseFrameRate(org.xmlpull.v1.XmlPullParser, float)
    {
        org.xmlpull.v1.XmlPullParser r0;
        float f0, $f1, $f2, f3;
        java.lang.String r1, r3, $r5;
        java.util.regex.Matcher r2;
        int i0, $i1;
        java.util.regex.Pattern $r4;
        boolean $z0, $z1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        f0 := @parameter1: float;

        f3 = f0;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "frameRate");

        if r1 == null goto label2;

        $r4 = <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern FRAME_RATE_PATTERN>;

        r2 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label1;

        $f1 = (float) i0;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        $f2 = (float) $i1;

        f3 = $f1 / $f2;

        goto label2;

     label1:
        f3 = (float) i0;

     label2:
        return f3;
    }

    protected static long parseDuration(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        long l0, $l1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 != null goto label1;

        return l0;

     label1:
        $l1 = staticinvoke <androidx.media3.common.util.Util: long parseXsDuration(java.lang.String)>(r2);

        return $l1;
    }

    protected static long parseDateTime(org.xmlpull.v1.XmlPullParser, java.lang.String, long) throws androidx.media3.common.ParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        long l0, $l1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 != null goto label1;

        return l0;

     label1:
        $l1 = staticinvoke <androidx.media3.common.util.Util: long parseXsDateTime(java.lang.String)>(r2);

        return $l1;
    }

    protected static java.lang.String parseText(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        int $i1;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = "";

     label1:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 != 4 goto label2;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        goto label3;

     label2:
        staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: void maybeSkipTag(org.xmlpull.v1.XmlPullParser)>(r0);

     label3:
        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r1);

        if $z0 == 0 goto label1;

        return r2;
    }

    protected static int parseInt(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        int i0, $i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 != null goto label1;

        $i1 = i0;

        goto label2;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return $i1;
    }

    protected static long parseLong(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        long l0, $l1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 != null goto label1;

        $l1 = l0;

        goto label2;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return $l1;
    }

    protected static float parseFloat(org.xmlpull.v1.XmlPullParser, java.lang.String, float)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        float f0, $f1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 != null goto label1;

        $f1 = f0;

        goto label2;

     label1:
        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        return $f1;
    }

    protected static java.lang.String parseString(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r3 != null goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = r3;

     label2:
        return $r4;
    }

    protected static int parseMpegChannelConfiguration(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1, $i2;
        int[] $r1, $r2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "value", -1);

        if 0 > i0 goto label1;

        $r1 = <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int[] MPEG_CHANNEL_CONFIGURATION_MAPPING>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label1;

        $r2 = <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int[] MPEG_CHANNEL_CONFIGURATION_MAPPING>;

        $i2 = $r2[i0];

        goto label2;

     label1:
        $i2 = -1;

     label2:
        return $i2;
    }

    protected static int parseDtsChannelConfiguration(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = staticinvoke <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "value", -1);

        if 0 >= i0 goto label1;

        if i0 >= 33 goto label1;

        $i1 = i0;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    protected static int parseDtsxChannelConfiguration(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        int i0, $i1, $i2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        if r1 != null goto label1;

        return -1;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r1, 16);

        i0 = staticinvoke <java.lang.Integer: int bitCount(int)>($i1);

        if i0 != 0 goto label2;

        $i2 = -1;

        goto label3;

     label2:
        $i2 = i0;

     label3:
        return $i2;
    }

    protected static int parseDolbyChannelConfiguration(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        byte b1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        if r1 != null goto label01;

        return -1;

     label01:
        r2 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r1);

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 1596796: goto label02;
            case 2937391: goto label03;
            case 3094035: goto label04;
            case 3133436: goto label05;
            default: goto label06;
        };

     label02:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("4000");

        if $z3 == 0 goto label06;

        b1 = 0;

        goto label06;

     label03:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("a000");

        if $z2 == 0 goto label06;

        b1 = 1;

        goto label06;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("f801");

        if $z1 == 0 goto label06;

        b1 = 2;

        goto label06;

     label05:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("fa01");

        if $z0 == 0 goto label06;

        b1 = 3;

     label06:
        tableswitch(b1)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            default: goto label11;
        };

     label07:
        return 1;

     label08:
        return 2;

     label09:
        return 6;

     label10:
        return 8;

     label11:
        return -1;
    }

    protected static long parseLastSegmentNumberSupplementalProperty(java.util.List)
    {
        java.util.List r0;
        androidx.media3.exoplayer.dash.manifest.Descriptor r1;
        int $i0, i2;
        java.lang.Object $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        long $l1;

        r0 := @parameter0: java.util.List;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (androidx.media3.exoplayer.dash.manifest.Descriptor) $r2;

        $r3 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String schemeIdUri>;

        $z0 = staticinvoke <com.google.common.base.Ascii: boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>("http://dashif.org/guidelines/last-segment-number", $r3);

        if $z0 == 0 goto label2;

        $r4 = r1.<androidx.media3.exoplayer.dash.manifest.Descriptor: java.lang.String value>;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        return $l1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return -1L;
    }

    private static long getFinalAvailabilityTimeOffset(long, long)
    {
        long l0, l1, l4;
        byte $b2, $b3;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l4 = l1;

        $b2 = l4 cmp -9223372036854775807L;

        if $b2 != 0 goto label1;

        l4 = l0;

     label1:
        $b3 = l4 cmp 9223372036854775807L;

        if $b3 != 0 goto label2;

        l4 = -9223372036854775807L;

     label2:
        return l4;
    }

    private boolean isDvbProfileDeclared(java.lang.String[])
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: java.lang.String[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("urn:dvb:dash:profile:dvb-dash:");

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public volatile java.lang.Object parse(android.net.Uri, java.io.InputStream) throws java.io.IOException
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser r0;
        android.net.Uri r1;
        java.io.InputStream r2;
        androidx.media3.exoplayer.dash.manifest.DashManifest $r3;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.io.InputStream;

        $r3 = virtualinvoke r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: androidx.media3.exoplayer.dash.manifest.DashManifest parse(android.net.Uri,java.io.InputStream)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2;
        int[] $r3;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+)(?:/(\\d+))?");

        <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern FRAME_RATE_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("CC([1-4])=.*");

        <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern CEA_608_ACCESSIBILITY_PATTERN> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([1-9]|[1-5][0-9]|6[0-3])=.*");

        <androidx.media3.exoplayer.dash.manifest.DashManifestParser: java.util.regex.Pattern CEA_708_ACCESSIBILITY_PATTERN> = $r2;

        $r3 = newarray (int)[21];

        $r3[0] = -1;

        $r3[1] = 1;

        $r3[2] = 2;

        $r3[3] = 3;

        $r3[4] = 4;

        $r3[5] = 5;

        $r3[6] = 6;

        $r3[7] = 8;

        $r3[8] = 2;

        $r3[9] = 3;

        $r3[10] = 4;

        $r3[11] = 7;

        $r3[12] = 8;

        $r3[13] = 24;

        $r3[14] = 8;

        $r3[15] = 12;

        $r3[16] = 10;

        $r3[17] = 12;

        $r3[18] = 14;

        $r3[19] = 12;

        $r3[20] = 14;

        <androidx.media3.exoplayer.dash.manifest.DashManifestParser: int[] MPEG_CHANNEL_CONFIGURATION_MAPPING> = $r3;

        return;
    }

androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: androidx.media3.common.Format format>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: com.google.common.collect.ImmutableList baseUrls>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: androidx.media3.exoplayer.dash.manifest.SegmentBase segmentBase>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.lang.String drmSchemeType>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.ArrayList drmSchemeDatas>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.ArrayList inbandEventStreams>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: long revisionId>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.List essentialProperties>
<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.List supplementalProperties>
    public void <init>(androidx.media3.common.Format, java.util.List, androidx.media3.exoplayer.dash.manifest.SegmentBase, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.List, java.util.List, long)
    {
        androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo r0;
        androidx.media3.common.Format r1;
        java.util.List r2, r7, r8;
        androidx.media3.exoplayer.dash.manifest.SegmentBase r3;
        java.lang.String r4;
        java.util.ArrayList r5, r6;
        long l0;
        com.google.common.collect.ImmutableList $r9;

        r0 := @this: androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo;

        r1 := @parameter0: androidx.media3.common.Format;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.media3.exoplayer.dash.manifest.SegmentBase;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.util.ArrayList;

        r6 := @parameter5: java.util.ArrayList;

        r7 := @parameter6: java.util.List;

        r8 := @parameter7: java.util.List;

        l0 := @parameter8: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: androidx.media3.common.Format format> = r1;

        $r9 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>(r2);

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: com.google.common.collect.ImmutableList baseUrls> = $r9;

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: androidx.media3.exoplayer.dash.manifest.SegmentBase segmentBase> = r3;

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.lang.String drmSchemeType> = r4;

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.ArrayList drmSchemeDatas> = r5;

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.ArrayList inbandEventStreams> = r6;

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.List essentialProperties> = r7;

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: java.util.List supplementalProperties> = r8;

        r0.<androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo: long revisionId> = l0;

        return;
    }

