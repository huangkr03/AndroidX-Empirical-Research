androidx.media3.exoplayer.drm.DefaultDrmSession
<androidx.media3.exoplayer.drm.DefaultDrmSession: java.lang.String TAG>
<androidx.media3.exoplayer.drm.DefaultDrmSession: int MSG_PROVISION>
<androidx.media3.exoplayer.drm.DefaultDrmSession: int MSG_KEYS>
<androidx.media3.exoplayer.drm.DefaultDrmSession: int MAX_LICENSE_DURATION_TO_RENEW_SECONDS>
<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.List schemeDatas>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager provisioningManager>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener referenceCountListener>
<androidx.media3.exoplayer.drm.DefaultDrmSession: int mode>
<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean playClearSamplesWithoutKeys>
<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean isPlaceholderSession>
<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.HashMap keyRequestParameters>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.common.util.CopyOnWriteMultiset eventDispatchers>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.analytics.PlayerId playerId>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.MediaDrmCallback callback>
<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.UUID uuid>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler responseHandler>
<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>
<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount>
<androidx.media3.exoplayer.drm.DefaultDrmSession: android.os.HandlerThread requestHandlerThread>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler requestHandler>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.decoder.CryptoConfig cryptoConfig>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException lastException>
<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>
<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest currentKeyRequest>
<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest currentProvisionRequest>
    public void <init>(java.util.UUID, androidx.media3.exoplayer.drm.ExoMediaDrm, androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager, androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener, java.util.List, int, boolean, boolean, byte[], java.util.HashMap, androidx.media3.exoplayer.drm.MediaDrmCallback, android.os.Looper, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.util.UUID r1;
        androidx.media3.exoplayer.drm.ExoMediaDrm r2;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager r3;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener r4;
        java.util.List r5, $r14, $r15;
        int i0;
        boolean z0, z1;
        byte[] r6;
        java.util.HashMap r7;
        androidx.media3.exoplayer.drm.MediaDrmCallback r8;
        android.os.Looper r9;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r10;
        androidx.media3.exoplayer.analytics.PlayerId r11;
        java.lang.Object $r13;
        androidx.media3.common.util.CopyOnWriteMultiset $r16;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler $r17;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: java.util.UUID;

        r2 := @parameter1: androidx.media3.exoplayer.drm.ExoMediaDrm;

        r3 := @parameter2: androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager;

        r4 := @parameter3: androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener;

        r5 := @parameter4: java.util.List;

        i0 := @parameter5: int;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        r6 := @parameter8: byte[];

        r7 := @parameter9: java.util.HashMap;

        r8 := @parameter10: androidx.media3.exoplayer.drm.MediaDrmCallback;

        r9 := @parameter11: android.os.Looper;

        r10 := @parameter12: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        r11 := @parameter13: androidx.media3.exoplayer.analytics.PlayerId;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 == 1 goto label1;

        if i0 != 3 goto label2;

     label1:
        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

     label2:
        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.UUID uuid> = r1;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager provisioningManager> = r3;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener referenceCountListener> = r4;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm> = r2;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int mode> = i0;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean playClearSamplesWithoutKeys> = z0;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean isPlaceholderSession> = z1;

        if r6 == null goto label3;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId> = r6;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.List schemeDatas> = null;

        goto label4;

     label3:
        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r14 = (java.util.List) $r13;

        $r15 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r14);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.List schemeDatas> = $r15;

     label4:
        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.HashMap keyRequestParameters> = r7;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.MediaDrmCallback callback> = r8;

        $r16 = new androidx.media3.common.util.CopyOnWriteMultiset;

        specialinvoke $r16.<androidx.media3.common.util.CopyOnWriteMultiset: void <init>()>();

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.common.util.CopyOnWriteMultiset eventDispatchers> = $r16;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = r10;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.analytics.PlayerId playerId> = r11;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state> = 2;

        $r17 = new androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler;

        specialinvoke $r17.<androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler: void <init>(androidx.media3.exoplayer.drm.DefaultDrmSession,android.os.Looper)>(r0, r9);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler responseHandler> = $r17;

        return;
    }

    public boolean hasSessionId(byte[])
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        byte[] r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r2, r1);

        return $z0;
    }

    public void onMediaDrmEvent(int)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onKeysRequired()>();

        goto label2;

     label2:
        return;
    }

    public void provision()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r1;
        androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest $r2, $r5;
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler $r3, $r6;
        java.lang.Object $r4, $r7;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r2 = interfaceinvoke $r1.<androidx.media3.exoplayer.drm.ExoMediaDrm: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest getProvisionRequest()>();

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest currentProvisionRequest> = $r2;

        $r3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler requestHandler>;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        $r6 = (androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler) $r4;

        $r5 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest currentProvisionRequest>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        virtualinvoke $r6.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: void post(int,java.lang.Object,boolean)>(0, $r7, 1);

        return;
    }

    public void onProvisionCompleted()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean openInternal()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void doLicense(boolean)>(1);

     label1:
        return;
    }

    public void onProvisionError(java.lang.Exception, boolean)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.Exception r1;
        boolean z0;
        byte $b0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: java.lang.Exception;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 3;

     label2:
        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onError(java.lang.Exception,int)>(r1, $b0);

        return;
    }

    public final int getState()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        return $i0;
    }

    public boolean playClearSamplesWithoutKeys()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $z0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean playClearSamplesWithoutKeys>;

        return $z0;
    }

    public final androidx.media3.exoplayer.drm.DrmSession$DrmSessionException getError()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        int $i0;
        androidx.media3.exoplayer.drm.DrmSession$DrmSessionException $r1;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        if $i0 != 1 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException lastException>;

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public final java.util.UUID getSchemeUuid()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.util.UUID $r1;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.UUID uuid>;

        return $r1;
    }

    public final androidx.media3.decoder.CryptoConfig getCryptoConfig()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        androidx.media3.decoder.CryptoConfig $r1;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.decoder.CryptoConfig cryptoConfig>;

        return $r1;
    }

    public java.util.Map queryKeyStatus()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        byte[] $r1, $r2;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r3;
        java.util.Map $r4;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        $r4 = interfaceinvoke $r3.<androidx.media3.exoplayer.drm.ExoMediaDrm: java.util.Map queryKeyStatus(byte[])>($r2);

     label2:
        return $r4;
    }

    public byte[] getOfflineLicenseKeySetId()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        byte[] $r1;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>;

        return $r1;
    }

    public boolean requiresSecureDecoder(java.lang.String)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.String r1;
        byte[] $r2, $r5;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r2);

        $r5 = (byte[]) $r4;

        $z0 = interfaceinvoke $r3.<androidx.media3.exoplayer.drm.ExoMediaDrm: boolean requiresSecureDecoder(byte[],java.lang.String)>($r5, r1);

        return $z0;
    }

    public void acquire(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2;
        androidx.media3.common.util.CopyOnWriteMultiset $r2, $r8;
        android.os.HandlerThread $r3, $r4, $r6;
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler $r5;
        android.os.Looper $r7;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener $r14;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        $i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount>;

        if $i0 >= 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session reference count less than zero: ");

        $i6 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DefaultDrmSession", $r13);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount> = 0;

     label1:
        if r1 == null goto label2;

        $r8 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.common.util.CopyOnWriteMultiset eventDispatchers>;

        virtualinvoke $r8.<androidx.media3.common.util.CopyOnWriteMultiset: void add(java.lang.Object)>(r1);

     label2:
        $i1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount>;

        $i2 = $i1 + 1;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount> = $i2;

        if $i2 != 1 goto label5;

        $i5 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        if $i5 != 2 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        $r3 = new android.os.HandlerThread;

        specialinvoke $r3.<android.os.HandlerThread: void <init>(java.lang.String)>("ExoPlayer:DrmRequestHandler");

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: android.os.HandlerThread requestHandlerThread> = $r3;

        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: android.os.HandlerThread requestHandlerThread>;

        virtualinvoke $r4.<android.os.HandlerThread: void start()>();

        $r5 = new androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler;

        $r6 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: android.os.HandlerThread requestHandlerThread>;

        $r7 = virtualinvoke $r6.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r5.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: void <init>(androidx.media3.exoplayer.drm.DefaultDrmSession,android.os.Looper)>(r0, $r7);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler requestHandler> = $r5;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean openInternal()>();

        if $z1 == 0 goto label6;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void doLicense(boolean)>(1);

        goto label6;

     label5:
        if r1 == null goto label6;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean isOpen()>();

        if $z0 == 0 goto label6;

        $r2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.common.util.CopyOnWriteMultiset eventDispatchers>;

        $i3 = virtualinvoke $r2.<androidx.media3.common.util.CopyOnWriteMultiset: int count(java.lang.Object)>(r1);

        if $i3 != 1 goto label6;

        $i4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        virtualinvoke r1.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmSessionAcquired(int)>($i4);

     label6:
        $r14 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener referenceCountListener>;

        $i7 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount>;

        interfaceinvoke $r14.<androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener: void onReferenceCountIncremented(androidx.media3.exoplayer.drm.DefaultDrmSession,int)>(r0, $i7);

        return;
    }

    public void release(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r1;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.media3.common.util.CopyOnWriteMultiset $r2, $r3;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler $r4, $r6;
        java.lang.Object $r5, $r8, $r11;
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler $r7, $r9;
        android.os.HandlerThread $r10, $r12;
        byte[] $r13, $r14;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r15;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener $r16;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        $i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount>;

        if $i0 > 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DefaultDrmSession", "release() called on a session that\'s already fully released.");

        return;

     label1:
        $i1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount>;

        $i2 = $i1 - 1;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount> = $i2;

        if $i2 != 0 goto label2;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state> = 0;

        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler responseHandler>;

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r4);

        $r6 = (androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler) $r5;

        virtualinvoke $r6.<androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        $r7 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler requestHandler>;

        $r8 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r7);

        $r9 = (androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler) $r8;

        virtualinvoke $r9.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: void release()>();

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler requestHandler> = null;

        $r10 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: android.os.HandlerThread requestHandlerThread>;

        $r11 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r10);

        $r12 = (android.os.HandlerThread) $r11;

        virtualinvoke $r12.<android.os.HandlerThread: boolean quit()>();

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: android.os.HandlerThread requestHandlerThread> = null;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.decoder.CryptoConfig cryptoConfig> = null;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException lastException> = null;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest currentKeyRequest> = null;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest currentProvisionRequest> = null;

        $r13 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        if $r13 == null goto label2;

        $r15 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r14 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        interfaceinvoke $r15.<androidx.media3.exoplayer.drm.ExoMediaDrm: void closeSession(byte[])>($r14);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId> = null;

     label2:
        if r1 == null goto label3;

        $r2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.common.util.CopyOnWriteMultiset eventDispatchers>;

        virtualinvoke $r2.<androidx.media3.common.util.CopyOnWriteMultiset: void remove(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.common.util.CopyOnWriteMultiset eventDispatchers>;

        $i3 = virtualinvoke $r3.<androidx.media3.common.util.CopyOnWriteMultiset: int count(java.lang.Object)>(r1);

        if $i3 != 0 goto label3;

        virtualinvoke r1.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmSessionReleased()>();

     label3:
        $r16 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener referenceCountListener>;

        $i4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int referenceCount>;

        interfaceinvoke $r16.<androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener: void onReferenceCountDecremented(androidx.media3.exoplayer.drm.DefaultDrmSession,int)>(r0, $i4);

        return;
    }

    private boolean openInternal()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        boolean $z0;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r1, $r5, $r7;
        byte[] $r2, $r4, $r6, $r10;
        androidx.media3.exoplayer.analytics.PlayerId $r3;
        androidx.media3.decoder.CryptoConfig $r8;
        androidx.media3.common.util.Consumer $r9;
        java.lang.Throwable $r12, $r13, r15, r16;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager $r14;
        int i0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean isOpen()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r2 = interfaceinvoke $r1.<androidx.media3.exoplayer.drm.ExoMediaDrm: byte[] openSession()>();

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId> = $r2;

        $r5 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        $r3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.analytics.PlayerId playerId>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.drm.ExoMediaDrm: void setPlayerIdForSession(byte[],androidx.media3.exoplayer.analytics.PlayerId)>($r4, $r3);

        $r7 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r6 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        $r8 = interfaceinvoke $r7.<androidx.media3.exoplayer.drm.ExoMediaDrm: androidx.media3.decoder.CryptoConfig createCryptoConfig(byte[])>($r6);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.decoder.CryptoConfig cryptoConfig> = $r8;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state> = 3;

        i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        $r9 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (int)>(i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.drm.DefaultDrmSession: void lambda$openInternal$0(int,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)>, methodtype: void __METHODTYPE__(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher));

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void dispatchEvent(androidx.media3.common.util.Consumer)>($r9);

        $r10 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r10);

     label2:
        return 1;

     label3:
        $r13 := @caughtexception;

        r15 = $r13;

        $r14 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager provisioningManager>;

        interfaceinvoke $r14.<androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager: void provisionRequired(androidx.media3.exoplayer.drm.DefaultDrmSession)>(r0);

        goto label5;

     label4:
        $r12 := @caughtexception;

        r16 = $r12;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onError(java.lang.Exception,int)>(r16, 1);

     label5:
        return 0;

        catch android.media.NotProvisionedException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void onProvisionResponse(java.lang.Object, java.lang.Object)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.Object r1, r2;
        java.lang.Throwable r3, $r10;
        androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest $r4;
        int $i0;
        boolean $z0, $z1;
        byte[] $r5;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r6;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager $r7, $r9, $r11;
        java.lang.Exception $r8;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest currentProvisionRequest>;

        if r1 != $r4 goto label1;

        $i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        if $i0 == 2 goto label2;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean isOpen()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest currentProvisionRequest> = null;

        $z0 = r2 instanceof java.lang.Exception;

        if $z0 == 0 goto label3;

        $r9 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager provisioningManager>;

        $r8 = (java.lang.Exception) r2;

        interfaceinvoke $r9.<androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager: void onProvisionError(java.lang.Exception,boolean)>($r8, 0);

        return;

     label3:
        $r6 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r5 = (byte[]) r2;

        interfaceinvoke $r6.<androidx.media3.exoplayer.drm.ExoMediaDrm: void provideProvisionResponse(byte[])>($r5);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager provisioningManager>;

        interfaceinvoke $r11.<androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager: void onProvisionError(java.lang.Exception,boolean)>(r3, 1);

        return;

     label6:
        $r7 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager provisioningManager>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager: void onProvisionCompleted()>();

        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void doLicense(boolean)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        boolean z0, $z1, $z2, $z3;
        byte[] r1, $r2, $r4, $r6, $r8, $r9, $r10;
        long l0;
        java.lang.Object $r3;
        int $i1, $i2, $i3;
        byte $b4, $b5;
        androidx.media3.common.util.Consumer $r11;
        androidx.media3.exoplayer.drm.KeysExpiredException $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r16;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean isPlaceholderSession>;

        if $z1 == 0 goto label01;

        return;

     label01:
        $r2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r2);

        r1 = (byte[]) $r3;

        $i1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int mode>;

        tableswitch($i1)
        {
            case 0: goto label02;
            case 1: goto label02;
            case 2: goto label08;
            case 3: goto label10;
            default: goto label11;
        };

     label02:
        $r10 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>;

        if $r10 != null goto label03;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void postKeyRequest(byte[],int,boolean)>(r1, 1, z0);

        goto label11;

     label03:
        $i2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        if $i2 == 4 goto label04;

        $z3 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean restoreKeys()>();

        if $z3 == 0 goto label11;

     label04:
        l0 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: long getLicenseDurationRemainingSec()>();

        $i3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int mode>;

        if $i3 != 0 goto label05;

        $b5 = l0 cmp 60L;

        if $b5 > 0 goto label05;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Offline license has expired or will expire soon. Remaining seconds: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void d(java.lang.String,java.lang.String)>("DefaultDrmSession", $r16);

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void postKeyRequest(byte[],int,boolean)>(r1, 2, z0);

        goto label07;

     label05:
        $b4 = l0 cmp 0L;

        if $b4 > 0 goto label06;

        $r12 = new androidx.media3.exoplayer.drm.KeysExpiredException;

        specialinvoke $r12.<androidx.media3.exoplayer.drm.KeysExpiredException: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onError(java.lang.Exception,int)>($r12, 2);

        goto label07;

     label06:
        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state> = 4;

        $r11 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmKeysRestored()>, methodtype: void __METHODTYPE__(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher));

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void dispatchEvent(androidx.media3.common.util.Consumer)>($r11);

     label07:
        goto label11;

     label08:
        $r9 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>;

        if $r9 == null goto label09;

        $z2 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean restoreKeys()>();

        if $z2 == 0 goto label11;

     label09:
        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void postKeyRequest(byte[],int,boolean)>(r1, 2, z0);

        goto label11;

     label10:
        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void postKeyRequest(byte[],int,boolean)>($r8, 3, z0);

        goto label11;

     label11:
        return;
    }

    private boolean restoreKeys()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.Throwable r1, $r5;
        byte[] $r2, $r3;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r4;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        $r2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>;

        interfaceinvoke $r4.<androidx.media3.exoplayer.drm.ExoMediaDrm: void restoreKeys(byte[],byte[])>($r3, $r2);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onError(java.lang.Exception,int)>(r1, 1);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private long getLicenseDurationRemainingSec()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        android.util.Pair r1, $r4;
        java.util.UUID $r2, $r3;
        boolean $z0;
        java.lang.Object $r5, $r6, $r8;
        java.lang.Long $r7, $r9;
        long $l0, $l1, $l2;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $r3 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        $r2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.UUID uuid>;

        $z0 = virtualinvoke $r3.<java.util.UUID: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return 9223372036854775807L;

     label1:
        $r4 = staticinvoke <androidx.media3.exoplayer.drm.WidevineUtil: android.util.Pair getLicenseDurationRemainingSec(androidx.media3.exoplayer.drm.DrmSession)>(r0);

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        r1 = (android.util.Pair) $r5;

        $r6 = r1.<android.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.Long) $r6;

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r8 = r1.<android.util.Pair: java.lang.Object second>;

        $r9 = (java.lang.Long) $r8;

        $l1 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l1);

        return $l2;
    }

    private void postKeyRequest(byte[], int, boolean)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        byte[] r1;
        int i0;
        boolean z0;
        java.lang.Throwable r2, $r12;
        java.util.HashMap $r3;
        java.util.List $r4;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r5;
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest $r6, $r9;
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler $r7, $r10;
        java.lang.Object $r8, $r11;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

     label1:
        $r5 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.List schemeDatas>;

        $r3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.HashMap keyRequestParameters>;

        $r6 = interfaceinvoke $r5.<androidx.media3.exoplayer.drm.ExoMediaDrm: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest getKeyRequest(byte[],java.util.List,int,java.util.HashMap)>(r1, $r4, i0, $r3);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest currentKeyRequest> = $r6;

        $r7 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler requestHandler>;

        $r8 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r7);

        $r10 = (androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler) $r8;

        $r9 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest currentKeyRequest>;

        $r11 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        virtualinvoke $r10.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: void post(int,java.lang.Object,boolean)>(1, $r11, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r2 = $r12;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onKeysError(java.lang.Exception,boolean)>(r2, 1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void onKeyResponse(java.lang.Object, java.lang.Object)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.Object r1, r2, $r10;
        byte[] r3, $r5, $r7, $r8, $r11, r16;
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        androidx.media3.exoplayer.drm.ExoMediaDrm $r6, $r9;
        androidx.media3.common.util.Consumer $r13, $r17;
        java.lang.Exception $r14;
        java.lang.Throwable $r15, r18;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest currentKeyRequest>;

        if r1 != $r4 goto label1;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: boolean isOpen()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest currentKeyRequest> = null;

        $z1 = r2 instanceof java.lang.Exception;

        if $z1 == 0 goto label3;

        $r14 = (java.lang.Exception) r2;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onKeysError(java.lang.Exception,boolean)>($r14, 0);

        return;

     label3:
        r16 = (byte[]) r2;

        $i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int mode>;

        if $i0 != 3 goto label4;

        $r9 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r8 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>;

        $r10 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r8);

        $r11 = (byte[]) $r10;

        interfaceinvoke $r9.<androidx.media3.exoplayer.drm.ExoMediaDrm: byte[] provideKeyResponse(byte[],byte[])>($r11, r16);

        $r13 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmKeysRemoved()>, methodtype: void __METHODTYPE__(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher));

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void dispatchEvent(androidx.media3.common.util.Consumer)>($r13);

        goto label7;

     label4:
        $r6 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm>;

        $r5 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        r3 = interfaceinvoke $r6.<androidx.media3.exoplayer.drm.ExoMediaDrm: byte[] provideKeyResponse(byte[],byte[])>($r5, r16);

        $i1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int mode>;

        if $i1 == 2 goto label5;

        $i3 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int mode>;

        if $i3 != 0 goto label6;

        $r7 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId>;

        if $r7 == null goto label6;

     label5:
        if r3 == null goto label6;

        $i2 = lengthof r3;

        if $i2 == 0 goto label6;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId> = r3;

     label6:
        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state> = 4;

        $r17 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmKeysLoaded()>, methodtype: void __METHODTYPE__(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher));

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void dispatchEvent(androidx.media3.common.util.Consumer)>($r17);

     label7:
        goto label9;

     label8:
        $r15 := @caughtexception;

        r18 = $r15;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onKeysError(java.lang.Exception,boolean)>(r18, 1);

     label9:
        return;

        catch java.lang.Exception from label3 to label7 with label8;
    }

    private void onKeysRequired()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int mode>;

        if $i0 != 0 goto label1;

        $i1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        if $i1 != 4 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: byte[] sessionId>;

        staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r1);

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void doLicense(boolean)>(0);

     label1:
        return;
    }

    private void onKeysError(java.lang.Exception, boolean)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.Exception r1;
        boolean z0, $z1;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager $r4;
        byte $b0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: java.lang.Exception;

        z0 := @parameter1: boolean;

        $z1 = r1 instanceof android.media.NotProvisionedException;

        if $z1 == 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager provisioningManager>;

        interfaceinvoke $r4.<androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager: void provisionRequired(androidx.media3.exoplayer.drm.DefaultDrmSession)>(r0);

        goto label4;

     label1:
        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 2;

     label3:
        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onError(java.lang.Exception,int)>(r1, $b0);

     label4:
        return;
    }

    private void onError(java.lang.Exception, int)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.Exception r1;
        int i0, $i1, $i2;
        androidx.media3.common.util.Consumer $r3;
        androidx.media3.exoplayer.drm.DrmSession$DrmSessionException r4;
        java.lang.Throwable r5, r6;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: java.lang.Exception;

        i0 := @parameter1: int;

        r4 = new androidx.media3.exoplayer.drm.DrmSession$DrmSessionException;

        $i1 = staticinvoke <androidx.media3.exoplayer.drm.DrmUtil: int getErrorCodeForMediaDrmException(java.lang.Exception,int)>(r1, i0);

        r5 = (java.lang.Throwable) r1;

        specialinvoke r4.<androidx.media3.exoplayer.drm.DrmSession$DrmSessionException: void <init>(java.lang.Throwable,int)>(r5, $i1);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException lastException> = r4;

        r6 = (java.lang.Throwable) r1;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DefaultDrmSession", "DRM session error", r6);

        $r3 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (java.lang.Exception)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.drm.DefaultDrmSession: void lambda$onError$1(java.lang.Exception,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)>, methodtype: void __METHODTYPE__(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher));

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void dispatchEvent(androidx.media3.common.util.Consumer)>($r3);

        $i2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        if $i2 == 4 goto label1;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state> = 1;

     label1:
        return;
    }

    private boolean isOpen()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $i0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        if $i0 == 3 goto label1;

        $i1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: int state>;

        if $i1 != 4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void dispatchEvent(androidx.media3.common.util.Consumer)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        androidx.media3.common.util.Consumer r1;
        java.util.Iterator r2;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r3;
        androidx.media3.common.util.CopyOnWriteMultiset $r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter0: androidx.media3.common.util.Consumer;

        $r4 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.common.util.CopyOnWriteMultiset eventDispatchers>;

        $r5 = virtualinvoke $r4.<androidx.media3.common.util.CopyOnWriteMultiset: java.util.Set elementSet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher) $r6;

        interfaceinvoke r1.<androidx.media3.common.util.Consumer: void accept(java.lang.Object)>(r3);

        goto label1;

     label2:
        return;
    }

    private static void lambda$onError$1(java.lang.Exception, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)
    {
        java.lang.Exception r0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r1;

        r0 := @parameter0: java.lang.Exception;

        r1 := @parameter1: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        virtualinvoke r1.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmSessionManagerError(java.lang.Exception)>(r0);

        return;
    }

    private static void lambda$openInternal$0(int, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)
    {
        int i0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        virtualinvoke r0.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmSessionAcquired(int)>(i0);

        return;
    }

    static void access$000(androidx.media3.exoplayer.drm.DefaultDrmSession, java.lang.Object, java.lang.Object)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.Object r1, r2;

        r0 := @parameter0: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onProvisionResponse(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    static void access$100(androidx.media3.exoplayer.drm.DefaultDrmSession, java.lang.Object, java.lang.Object)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        java.lang.Object r1, r2;

        r0 := @parameter0: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: void onKeyResponse(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    static androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$200(androidx.media3.exoplayer.drm.DefaultDrmSession)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r1;

        r0 := @parameter0: androidx.media3.exoplayer.drm.DefaultDrmSession;

        $r1 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        return $r1;
    }

androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager
<androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager: void provisionRequired(androidx.media3.exoplayer.drm.DefaultDrmSession)>
<androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager: void onProvisionError(java.lang.Exception,boolean)>
<androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager: void onProvisionCompleted()>
androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener
<androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener: void onReferenceCountIncremented(androidx.media3.exoplayer.drm.DefaultDrmSession,int)>
<androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener: void onReferenceCountDecremented(androidx.media3.exoplayer.drm.DefaultDrmSession,int)>
androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler
<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: boolean isReleased>
<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>
    public void <init>(androidx.media3.exoplayer.drm.DefaultDrmSession, android.os.Looper)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler r0;
        androidx.media3.exoplayer.drm.DefaultDrmSession r1;
        android.os.Looper r2;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r2 := @parameter1: android.os.Looper;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    void post(int, java.lang.Object, boolean)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask r2, $r3;
        long $l1, $l2;
        android.os.Message $r4;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        $r3 = new androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask;

        $l1 = staticinvoke <androidx.media3.exoplayer.source.LoadEventInfo: long getNewId()>();

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r3.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: void <init>(long,boolean,long,java.lang.Object)>($l1, z0, $l2, r1);

        r2 = $r3;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: android.os.Message obtainMessage(int,java.lang.Object)>(i0, r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler r0, r30;
        android.os.Message r1, $r15;
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask r2;
        java.lang.Throwable r3, $r23, $r24, r26, r32;
        java.lang.Object $r4, $r7, $r12, $r18, r25;
        int $i0, $i1;
        androidx.media3.exoplayer.drm.DefaultDrmSession $r5, $r6, $r11, $r16, $r17, $r27;
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest $r8;
        java.util.UUID $r9, $r20;
        androidx.media3.exoplayer.drm.MediaDrmCallback $r10, $r21;
        androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler $r13;
        android.util.Pair $r14;
        androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest $r19;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r28;
        long $l2;
        boolean $z0;
        java.lang.RuntimeException r31;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler;

        r1 := @parameter0: android.os.Message;

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask) $r4;

     label01:
        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            default: goto label04;
        };

     label02:
        $r16 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        $r21 = $r16.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.MediaDrmCallback callback>;

        $r17 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        $r20 = $r17.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.UUID uuid>;

        $r18 = r2.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: java.lang.Object request>;

        $r19 = (androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest) $r18;

        r25 = interfaceinvoke $r21.<androidx.media3.exoplayer.drm.MediaDrmCallback: byte[] executeProvisionRequest(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest)>($r20, $r19);

        goto label05;

     label03:
        $r5 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        $r10 = $r5.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.MediaDrmCallback callback>;

        $r6 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        $r9 = $r6.<androidx.media3.exoplayer.drm.DefaultDrmSession: java.util.UUID uuid>;

        $r7 = r2.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: java.lang.Object request>;

        $r8 = (androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest) $r7;

        r25 = interfaceinvoke $r10.<androidx.media3.exoplayer.drm.MediaDrmCallback: byte[] executeKeyRequest(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest)>($r9, $r8);

        goto label05;

     label04:
        r31 = new java.lang.RuntimeException;

        specialinvoke r31.<java.lang.RuntimeException: void <init>()>();

        r32 = (java.lang.Throwable) r31;

        throw r32;

     label05:
        goto label07;

     label06:
        $r24 := @caughtexception;

        r26 = $r24;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("DefaultDrmSession", "Key/provisioning request produced an unexpected exception. Not retrying.", r26);

        r25 = r26;

     label07:
        $r27 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        $r28 = staticinvoke <androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$200(androidx.media3.exoplayer.drm.DefaultDrmSession)>($r27);

        $l2 = r2.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: long taskId>;

        interfaceinvoke $r28.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l2);

        r30 = r0;

        entermonitor r0;

     label08:
        $z0 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: boolean isReleased>;

        if $z0 != 0 goto label09;

        $r11 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        $r13 = $r11.<androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler responseHandler>;

        $i1 = r1.<android.os.Message: int what>;

        $r12 = r2.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: java.lang.Object request>;

        $r14 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r12, r25);

        $r15 = virtualinvoke $r13.<androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler: android.os.Message obtainMessage(int,java.lang.Object)>($i1, $r14);

        virtualinvoke $r15.<android.os.Message: void sendToTarget()>();

     label09:
        exitmonitor r30;

     label10:
        goto label13;

     label11:
        $r23 := @caughtexception;

        r3 = $r23;

        exitmonitor r30;

     label12:
        throw r3;

     label13:
        return;

        catch java.lang.Exception from label01 to label05 with label06;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private boolean maybeRetryRequest(android.os.Message, androidx.media3.exoplayer.drm.MediaDrmCallbackException)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler r0, r7;
        android.os.Message r1, $r23;
        androidx.media3.exoplayer.drm.MediaDrmCallbackException r2;
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask r3;
        androidx.media3.exoplayer.source.LoadEventInfo r4, r27;
        androidx.media3.exoplayer.source.MediaLoadData r5, r28;
        java.lang.Object r6, $r9, $r26;
        long l0, $l5, $l6, $l7, $l8, $l9, $l10;
        java.lang.Throwable r8, $r17, $r18, $r24, $r25;
        boolean $z0, $z1, $z2;
        int $i1, $i2, $i3, $i4, $i11;
        androidx.media3.exoplayer.drm.DefaultDrmSession $r10, $r19;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r11, $r20;
        androidx.media3.datasource.DataSpec $r13;
        android.net.Uri $r14;
        java.util.Map $r15;
        byte $b12;
        androidx.media3.exoplayer.drm.DefaultDrmSession$UnexpectedDrmSessionException r29;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r30;
        java.io.IOException r31;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler;

        r1 := @parameter0: android.os.Message;

        r2 := @parameter1: androidx.media3.exoplayer.drm.MediaDrmCallbackException;

        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask) $r9;

        $z0 = r3.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: boolean allowRetry>;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $i1 = r3.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: int errorCount>;

        $i2 = $i1 + 1;

        r3.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: int errorCount> = $i2;

        $i3 = r3.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: int errorCount>;

        $r10 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        $r11 = staticinvoke <androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$200(androidx.media3.exoplayer.drm.DefaultDrmSession)>($r10);

        $i4 = interfaceinvoke $r11.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: int getMinimumLoadableRetryCount(int)>(3);

        if $i3 <= $i4 goto label02;

        return 0;

     label02:
        r27 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l5 = r3.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: long taskId>;

        $r13 = r2.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: androidx.media3.datasource.DataSpec dataSpec>;

        $r14 = r2.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: android.net.Uri uriAfterRedirects>;

        $r15 = r2.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: java.util.Map responseHeaders>;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l8 = r3.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: long startTimeMs>;

        $l10 = $l7 - $l8;

        $l9 = r2.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: long bytesLoaded>;

        specialinvoke r27.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l5, $r13, $r14, $r15, $l6, $l10, $l9);

        r4 = r27;

        r28 = new androidx.media3.exoplayer.source.MediaLoadData;

        specialinvoke r28.<androidx.media3.exoplayer.source.MediaLoadData: void <init>(int)>(3);

        r5 = r28;

        $r17 = virtualinvoke r2.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: java.lang.Throwable getCause()>();

        $z1 = $r17 instanceof java.io.IOException;

        if $z1 == 0 goto label03;

        $r24 = virtualinvoke r2.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: java.lang.Throwable getCause()>();

        $r26 = (java.io.IOException) $r24;

        goto label04;

     label03:
        r29 = new androidx.media3.exoplayer.drm.DefaultDrmSession$UnexpectedDrmSessionException;

        $r26 = r29;

        $r18 = virtualinvoke r2.<androidx.media3.exoplayer.drm.MediaDrmCallbackException: java.lang.Throwable getCause()>();

        specialinvoke r29.<androidx.media3.exoplayer.drm.DefaultDrmSession$UnexpectedDrmSessionException: void <init>(java.lang.Throwable)>($r18);

     label04:
        r6 = $r26;

        $r19 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        $r20 = staticinvoke <androidx.media3.exoplayer.drm.DefaultDrmSession: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$200(androidx.media3.exoplayer.drm.DefaultDrmSession)>($r19);

        r30 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        $i11 = r3.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: int errorCount>;

        r31 = (java.io.IOException) r6;

        specialinvoke r30.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: void <init>(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,int)>(r4, r5, r31, $i11);

        l0 = interfaceinvoke $r20.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>(r30);

        $b12 = l0 cmp -9223372036854775807L;

        if $b12 != 0 goto label05;

        return 0;

     label05:
        r7 = r0;

        entermonitor r0;

     label06:
        $z2 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: boolean isReleased>;

        if $z2 != 0 goto label08;

        $r23 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>(r1);

        virtualinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: boolean sendMessageDelayed(android.os.Message,long)>($r23, l0);

        exitmonitor r7;

     label07:
        return 1;

     label08:
        exitmonitor r7;

     label09:
        goto label12;

     label10:
        $r25 := @caughtexception;

        r8 = $r25;

        exitmonitor r7;

     label11:
        throw r8;

     label12:
        return 0;

        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public synchronized void release()
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler r0;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler;

        virtualinvoke r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler: boolean isReleased> = 1;

        return;
    }

androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask
<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: long taskId>
<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: boolean allowRetry>
<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: long startTimeMs>
<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: java.lang.Object request>
<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: int errorCount>
    public void <init>(long, boolean, long, java.lang.Object)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask r0;
        long l0, l1;
        boolean z0;
        java.lang.Object r1;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        r1 := @parameter3: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: long taskId> = l0;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: boolean allowRetry> = z0;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: long startTimeMs> = l1;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask: java.lang.Object request> = r1;

        return;
    }

androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler
<androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>
    public void <init>(androidx.media3.exoplayer.drm.DefaultDrmSession, android.os.Looper)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler r0;
        androidx.media3.exoplayer.drm.DefaultDrmSession r1;
        android.os.Looper r2;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DefaultDrmSession;

        r2 := @parameter1: android.os.Looper;

        r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler r0;
        android.os.Message r1;
        android.util.Pair r2;
        java.lang.Object r3, r4, $r5;
        int $i0;
        androidx.media3.exoplayer.drm.DefaultDrmSession $r6, $r7;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler;

        r1 := @parameter0: android.os.Message;

        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.util.Pair) $r5;

        r3 = r2.<android.util.Pair: java.lang.Object first>;

        r4 = r2.<android.util.Pair: java.lang.Object second>;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r7 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        staticinvoke <androidx.media3.exoplayer.drm.DefaultDrmSession: void access$000(androidx.media3.exoplayer.drm.DefaultDrmSession,java.lang.Object,java.lang.Object)>($r7, r3, r4);

        goto label3;

     label2:
        $r6 = r0.<androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler: androidx.media3.exoplayer.drm.DefaultDrmSession this$0>;

        staticinvoke <androidx.media3.exoplayer.drm.DefaultDrmSession: void access$100(androidx.media3.exoplayer.drm.DefaultDrmSession,java.lang.Object,java.lang.Object)>($r6, r3, r4);

        goto label3;

     label3:
        return;
    }

androidx.media3.exoplayer.drm.DefaultDrmSession$UnexpectedDrmSessionException
    public void <init>(java.lang.Throwable)
    {
        androidx.media3.exoplayer.drm.DefaultDrmSession$UnexpectedDrmSessionException r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.media3.exoplayer.drm.DefaultDrmSession$UnexpectedDrmSessionException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.Throwable)>(r1);

        return;
    }

