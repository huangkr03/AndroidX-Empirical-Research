androidx.room.compiler.processing.XTypeKt
    public static final boolean isArray(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof androidx.room.compiler.processing.XArrayType;

        return $z0;
    }

    public static final boolean isCollection(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        kotlin.reflect.KClass $r1, $r2;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Ljava/util/List;");

        $z0 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: boolean isTypeOf(kotlin.reflect.KClass)>($r1);

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Ljava/util/Set;");

        $z1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: boolean isTypeOf(kotlin.reflect.KClass)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private static final boolean isAssignableWithoutVariance(androidx.room.compiler.processing.XType, androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType r0, r1, r6, $r15, $r19, $r26, $r29;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z14, $z15, $z17, $z19, $z20;
        java.util.List r2, r3, r4;
        java.lang.Object r5, $r13, $r14, $r16, r25;
        java.util.Collection r7, $r10, $r17, $r18, r21;
        int $i0, $i1, $i2, i3;
        androidx.room.compiler.processing.XRawType $r8;
        java.util.ArrayList $r9;
        kotlin.ranges.IntRange $r11;
        kotlin.collections.IntIterator $r12;
        java.lang.Iterable $r20, $r23, $r27;
        java.util.Iterator $r22, $r24, $r28;

        r0 := @parameter0: androidx.room.compiler.processing.XType;

        r1 := @parameter1: androidx.room.compiler.processing.XType;

        z0 = interfaceinvoke r1.<androidx.room.compiler.processing.XType: boolean isAssignableFrom(androidx.room.compiler.processing.XType)>(r0);

        if z0 == 0 goto label01;

        return 1;

     label01:
        r2 = interfaceinvoke r0.<androidx.room.compiler.processing.XType: java.util.List getTypeArguments()>();

        r3 = interfaceinvoke r1.<androidx.room.compiler.processing.XType: java.util.List getTypeArguments()>();

        $z2 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label02;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 == $i1 goto label03;

     label02:
        return 0;

     label03:
        $r8 = interfaceinvoke r1.<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XRawType getRawType()>();

        $z3 = interfaceinvoke $r8.<androidx.room.compiler.processing.XRawType: boolean isAssignableFrom(androidx.room.compiler.processing.XType)>(r0);

        if $z3 != 0 goto label04;

        return 0;

     label04:
        $r20 = (java.lang.Iterable) r2;

        $r9 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r20, 10);

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i2);

        r21 = (java.util.Collection) $r9;

        $r22 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        r5 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.room.compiler.processing.XType) r5;

        r7 = r21;

        $r19 = interfaceinvoke r6.<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XType extendsBound()>();

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r19);

        goto label05;

     label06:
        r4 = (java.util.List) r21;

        $r23 = (java.lang.Iterable) r4;

        $z5 = $r23 instanceof java.util.Collection;

        if $z5 == 0 goto label07;

        $r18 = (java.util.Collection) $r23;

        $z9 = interfaceinvoke $r18.<java.util.Collection: boolean isEmpty()>();

        if $z9 == 0 goto label07;

        $z14 = 1;

        goto label12;

     label07:
        $r24 = interfaceinvoke $r23.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z15 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label11;

        r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (androidx.room.compiler.processing.XType) r25;

        if $r26 != null goto label09;

        $z17 = 1;

        goto label10;

     label09:
        $z17 = 0;

     label10:
        if $z17 != 0 goto label08;

        $z14 = 0;

        goto label12;

     label11:
        $z14 = 1;

     label12:
        if $z14 == 0 goto label13;

        return 0;

     label13:
        $r10 = (java.util.Collection) r2;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.ranges.IntRange getIndices(java.util.Collection)>($r10);

        $r27 = (java.lang.Iterable) $r11;

        $z6 = $r27 instanceof java.util.Collection;

        if $z6 == 0 goto label14;

        $r17 = (java.util.Collection) $r27;

        $z8 = interfaceinvoke $r17.<java.util.Collection: boolean isEmpty()>();

        if $z8 == 0 goto label14;

        $z19 = 1;

        goto label18;

     label14:
        $r28 = interfaceinvoke $r27.<java.lang.Iterable: java.util.Iterator iterator()>();

     label15:
        $z20 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label17;

        $r12 = (kotlin.collections.IntIterator) $r28;

        i3 = virtualinvoke $r12.<kotlin.collections.IntIterator: int nextInt()>();

        $r13 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i3);

        $r29 = (androidx.room.compiler.processing.XType) $r13;

        if $r29 != null goto label16;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r29 = (androidx.room.compiler.processing.XType) $r16;

     label16:
        $r14 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r15 = (androidx.room.compiler.processing.XType) $r14;

        $z7 = staticinvoke <androidx.room.compiler.processing.XTypeKt: boolean isAssignableWithoutVariance(androidx.room.compiler.processing.XType,androidx.room.compiler.processing.XType)>($r29, $r15);

        if $z7 != 0 goto label15;

        $z19 = 0;

        goto label18;

     label17:
        $z19 = 1;

     label18:
        return $z19;
    }

    public static final boolean isInt(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        com.squareup.javapoet.TypeName $r1, $r2, $r3, $r5;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.KnownTypeNames $r4;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r2 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName INT>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r4 = <androidx.room.compiler.processing.KnownTypeNames: androidx.room.compiler.processing.KnownTypeNames INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.KnownTypeNames: com.squareup.javapoet.TypeName getBOXED_INT()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static final boolean isLong(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        com.squareup.javapoet.TypeName $r1, $r2, $r3, $r5;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.KnownTypeNames $r4;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r2 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName LONG>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r4 = <androidx.room.compiler.processing.KnownTypeNames: androidx.room.compiler.processing.KnownTypeNames INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.KnownTypeNames: com.squareup.javapoet.TypeName getBOXED_LONG()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static final boolean isVoid(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        com.squareup.javapoet.TypeName $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r2 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName VOID>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $z0;
    }

    public static final boolean isVoidObject(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        com.squareup.javapoet.TypeName $r1, $r3;
        androidx.room.compiler.processing.KnownTypeNames $r2;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r2 = <androidx.room.compiler.processing.KnownTypeNames: androidx.room.compiler.processing.KnownTypeNames INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.KnownTypeNames: com.squareup.javapoet.TypeName getBOXED_VOID()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $z0;
    }

    public static final boolean isKotlinUnit(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        com.squareup.javapoet.TypeName $r1;
        androidx.room.compiler.processing.KnownTypeNames $r2;
        com.squareup.javapoet.ClassName $r3;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r2 = <androidx.room.compiler.processing.KnownTypeNames: androidx.room.compiler.processing.KnownTypeNames INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.KnownTypeNames: com.squareup.javapoet.ClassName getKOTLIN_UNIT()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $z0;
    }

    public static final boolean isByte(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType $r0;
        com.squareup.javapoet.TypeName $r1, $r2, $r3, $r5;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.KnownTypeNames $r4;

        $r0 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r2 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName BYTE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke $r0.<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>();

        $r4 = <androidx.room.compiler.processing.KnownTypeNames: androidx.room.compiler.processing.KnownTypeNames INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.KnownTypeNames: com.squareup.javapoet.TypeName getBOXED_BYTE()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static final boolean access$isAssignableWithoutVariance(androidx.room.compiler.processing.XType, androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType r0, r1;
        boolean $z0;

        r0 := @parameter0: androidx.room.compiler.processing.XType;

        r1 := @parameter1: androidx.room.compiler.processing.XType;

        $z0 = staticinvoke <androidx.room.compiler.processing.XTypeKt: boolean isAssignableWithoutVariance(androidx.room.compiler.processing.XType,androidx.room.compiler.processing.XType)>(r0, r1);

        return $z0;
    }

