androidx.activity.OnBackPressedDispatcher
<androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed>
<androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks>
<androidx.activity.OnBackPressedDispatcher: androidx.core.util.Consumer mEnabledConsumer>
<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedCallback mOnBackInvokedCallback>
<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedDispatcher mInvokedDispatcher>
<androidx.activity.OnBackPressedDispatcher: boolean mBackInvokedCallbackRegistered>
    public void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher)
    {
        androidx.activity.OnBackPressedDispatcher r0;
        android.window.OnBackInvokedDispatcher r1;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        r1 := @parameter0: android.window.OnBackInvokedDispatcher;

        r0.<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedDispatcher mInvokedDispatcher> = r1;

        virtualinvoke r0.<androidx.activity.OnBackPressedDispatcher: void updateBackInvokedCallbackState()>();

        return;
    }

    void updateBackInvokedCallbackState()
    {
        androidx.activity.OnBackPressedDispatcher r0;
        boolean z0, $z1, $z2;
        android.window.OnBackInvokedDispatcher $r1, $r3, $r5;
        android.window.OnBackInvokedCallback $r2, $r4;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        z0 = virtualinvoke r0.<androidx.activity.OnBackPressedDispatcher: boolean hasEnabledCallbacks()>();

        $r1 = r0.<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedDispatcher mInvokedDispatcher>;

        if $r1 == null goto label2;

        if z0 == 0 goto label1;

        $z2 = r0.<androidx.activity.OnBackPressedDispatcher: boolean mBackInvokedCallbackRegistered>;

        if $z2 != 0 goto label1;

        $r5 = r0.<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedDispatcher mInvokedDispatcher>;

        $r4 = r0.<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedCallback mOnBackInvokedCallback>;

        staticinvoke <androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)>($r5, 0, $r4);

        r0.<androidx.activity.OnBackPressedDispatcher: boolean mBackInvokedCallbackRegistered> = 1;

        goto label2;

     label1:
        if z0 != 0 goto label2;

        $z1 = r0.<androidx.activity.OnBackPressedDispatcher: boolean mBackInvokedCallbackRegistered>;

        if $z1 == 0 goto label2;

        $r3 = r0.<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedDispatcher mInvokedDispatcher>;

        $r2 = r0.<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedCallback mOnBackInvokedCallback>;

        staticinvoke <androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)>($r3, $r2);

        r0.<androidx.activity.OnBackPressedDispatcher: boolean mBackInvokedCallbackRegistered> = 0;

     label2:
        return;
    }

    public void <init>()
    {
        androidx.activity.OnBackPressedDispatcher r0;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        specialinvoke r0.<androidx.activity.OnBackPressedDispatcher: void <init>(java.lang.Runnable)>(null);

        return;
    }

    public void <init>(java.lang.Runnable)
    {
        androidx.activity.OnBackPressedDispatcher r0;
        java.lang.Runnable r1, $r4;
        java.util.ArrayDeque $r2;
        boolean $z0;
        androidx.core.util.Consumer $r3;
        android.window.OnBackInvokedCallback $r5;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks> = $r2;

        r0.<androidx.activity.OnBackPressedDispatcher: boolean mBackInvokedCallbackRegistered> = 0;

        r0.<androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed> = r1;

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 == 0 goto label1;

        $r3 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.activity.OnBackPressedDispatcher)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.activity.OnBackPressedDispatcher: void lambda$new$0(java.lang.Boolean)>, methodtype: void __METHODTYPE__(java.lang.Boolean));

        r0.<androidx.activity.OnBackPressedDispatcher: androidx.core.util.Consumer mEnabledConsumer> = $r3;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.activity.OnBackPressedDispatcher)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.activity.OnBackPressedDispatcher: void onBackPressed()>, methodtype: void __METHODTYPE__());

        $r5 = staticinvoke <androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)>($r4);

        r0.<androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedCallback mOnBackInvokedCallback> = $r5;

     label1:
        return;
    }

    public void addCallback(androidx.activity.OnBackPressedCallback)
    {
        androidx.activity.OnBackPressedDispatcher r0;
        androidx.activity.OnBackPressedCallback r1;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        r1 := @parameter0: androidx.activity.OnBackPressedCallback;

        virtualinvoke r0.<androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)>(r1);

        return;
    }

    androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
    {
        androidx.activity.OnBackPressedDispatcher r0;
        androidx.activity.OnBackPressedCallback r1;
        androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable r2, $r4;
        java.util.ArrayDeque $r3;
        boolean $z1;
        androidx.core.util.Consumer $r5;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        r1 := @parameter0: androidx.activity.OnBackPressedCallback;

        $r3 = r0.<androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks>;

        virtualinvoke $r3.<java.util.ArrayDeque: boolean add(java.lang.Object)>(r1);

        $r4 = new androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable;

        specialinvoke $r4.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)>(r0, r1);

        r2 = $r4;

        virtualinvoke r1.<androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)>(r2);

        $z1 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z1 == 0 goto label1;

        virtualinvoke r0.<androidx.activity.OnBackPressedDispatcher: void updateBackInvokedCallbackState()>();

        $r5 = r0.<androidx.activity.OnBackPressedDispatcher: androidx.core.util.Consumer mEnabledConsumer>;

        virtualinvoke r1.<androidx.activity.OnBackPressedCallback: void setIsEnabledConsumer(androidx.core.util.Consumer)>($r5);

     label1:
        return r2;
    }

    public void addCallback(androidx.lifecycle.LifecycleOwner, androidx.activity.OnBackPressedCallback)
    {
        androidx.activity.OnBackPressedDispatcher r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.activity.OnBackPressedCallback r2;
        androidx.lifecycle.Lifecycle r3;
        androidx.lifecycle.Lifecycle$State $r4, $r5;
        androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable $r6;
        boolean $z0;
        androidx.core.util.Consumer $r7;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.activity.OnBackPressedCallback;

        r3 = interfaceinvoke r1.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r4 = virtualinvoke r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r4 != $r5 goto label1;

        return;

     label1:
        $r6 = new androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable;

        specialinvoke $r6.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>(r0, r3, r2);

        virtualinvoke r2.<androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)>($r6);

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<androidx.activity.OnBackPressedDispatcher: void updateBackInvokedCallbackState()>();

        $r7 = r0.<androidx.activity.OnBackPressedDispatcher: androidx.core.util.Consumer mEnabledConsumer>;

        virtualinvoke r2.<androidx.activity.OnBackPressedCallback: void setIsEnabledConsumer(androidx.core.util.Consumer)>($r7);

     label2:
        return;
    }

    public boolean hasEnabledCallbacks()
    {
        androidx.activity.OnBackPressedDispatcher r0;
        java.util.Iterator r1;
        java.util.ArrayDeque $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        androidx.activity.OnBackPressedCallback $r4;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        $r2 = r0.<androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks>;

        r1 = virtualinvoke $r2.<java.util.ArrayDeque: java.util.Iterator descendingIterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (androidx.activity.OnBackPressedCallback) $r3;

        $z1 = virtualinvoke $r4.<androidx.activity.OnBackPressedCallback: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public void onBackPressed()
    {
        androidx.activity.OnBackPressedDispatcher r0;
        java.util.Iterator r1;
        androidx.activity.OnBackPressedCallback r2;
        java.util.ArrayDeque $r3;
        boolean $z0, $z1;
        java.lang.Runnable $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        $r3 = r0.<androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks>;

        r1 = virtualinvoke $r3.<java.util.ArrayDeque: java.util.Iterator descendingIterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.activity.OnBackPressedCallback) $r6;

        $z1 = virtualinvoke r2.<androidx.activity.OnBackPressedCallback: boolean isEnabled()>();

        if $z1 == 0 goto label2;

        virtualinvoke r2.<androidx.activity.OnBackPressedCallback: void handleOnBackPressed()>();

        return;

     label2:
        goto label1;

     label3:
        $r4 = r0.<androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed>;

        if $r4 == null goto label4;

        $r5 = r0.<androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed>;

        interfaceinvoke $r5.<java.lang.Runnable: void run()>();

     label4:
        return;
    }

    private void lambda$new$0(java.lang.Boolean)
    {
        androidx.activity.OnBackPressedDispatcher r0;
        java.lang.Boolean r1;
        boolean $z0;

        r0 := @this: androidx.activity.OnBackPressedDispatcher;

        r1 := @parameter0: java.lang.Boolean;

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.activity.OnBackPressedDispatcher: void updateBackInvokedCallbackState()>();

     label1:
        return;
    }

androidx.activity.OnBackPressedDispatcher$Api33Impl
    private void <init>()
    {
        androidx.activity.OnBackPressedDispatcher$Api33Impl r0;

        r0 := @this: androidx.activity.OnBackPressedDispatcher$Api33Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void registerOnBackInvokedCallback(java.lang.Object, int, java.lang.Object)
    {
        java.lang.Object r0, r1;
        int i0;
        android.window.OnBackInvokedDispatcher r2;
        android.window.OnBackInvokedCallback r3;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = (android.window.OnBackInvokedDispatcher) r0;

        r3 = (android.window.OnBackInvokedCallback) r1;

        interfaceinvoke r2.<android.window.OnBackInvokedDispatcher: void registerOnBackInvokedCallback(int,android.window.OnBackInvokedCallback)>(i0, r3);

        return;
    }

    static void unregisterOnBackInvokedCallback(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.window.OnBackInvokedDispatcher r2;
        android.window.OnBackInvokedCallback r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 = (android.window.OnBackInvokedDispatcher) r0;

        r3 = (android.window.OnBackInvokedCallback) r1;

        interfaceinvoke r2.<android.window.OnBackInvokedDispatcher: void unregisterOnBackInvokedCallback(android.window.OnBackInvokedCallback)>(r3);

        return;
    }

    static android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        android.window.OnBackInvokedCallback $r2;

        r0 := @parameter0: java.lang.Runnable;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = dynamicinvoke "onBackInvoked" <android.window.OnBackInvokedCallback (java.lang.Runnable)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__());

        return $r2;
    }

androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle>
<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>
<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable>
<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0>
    void <init>(androidx.activity.OnBackPressedDispatcher, androidx.lifecycle.Lifecycle, androidx.activity.OnBackPressedCallback)
    {
        androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable r0;
        androidx.activity.OnBackPressedDispatcher r1;
        androidx.lifecycle.Lifecycle r2;
        androidx.activity.OnBackPressedCallback r3;
        androidx.lifecycle.LifecycleObserver r4;

        r0 := @this: androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable;

        r1 := @parameter0: androidx.activity.OnBackPressedDispatcher;

        r2 := @parameter1: androidx.lifecycle.Lifecycle;

        r3 := @parameter2: androidx.activity.OnBackPressedCallback;

        r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle> = r2;

        r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback> = r3;

        r4 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke r2.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r4);

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r3, $r4, $r5;
        androidx.activity.Cancellable $r6, $r7, $r10;
        androidx.activity.OnBackPressedCallback $r8;
        androidx.activity.OnBackPressedDispatcher $r9;

        r0 := @this: androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        if r2 != $r3 goto label1;

        $r9 = r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0>;

        $r8 = r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        $r10 = virtualinvoke $r9.<androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)>($r8);

        r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable> = $r10;

        goto label3;

     label1:
        $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        if r2 != $r4 goto label2;

        $r6 = r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable>;

        if $r6 == null goto label3;

        $r7 = r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable>;

        interfaceinvoke $r7.<androidx.activity.Cancellable: void cancel()>();

        goto label3;

     label2:
        $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if r2 != $r5 goto label3;

        virtualinvoke r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()>();

     label3:
        return;
    }

    public void cancel()
    {
        androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable r0;
        androidx.lifecycle.Lifecycle $r1;
        androidx.activity.OnBackPressedCallback $r2;
        androidx.activity.Cancellable $r3, $r4;
        androidx.lifecycle.LifecycleObserver r5;

        r0 := @this: androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable;

        $r1 = r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle>;

        r5 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke $r1.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>(r5);

        $r2 = r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $r2.<androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)>(r0);

        $r3 = r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable>;

        interfaceinvoke $r4.<androidx.activity.Cancellable: void cancel()>();

        r0.<androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable> = null;

     label1:
        return;
    }

androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable
<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>
<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0>
    void <init>(androidx.activity.OnBackPressedDispatcher, androidx.activity.OnBackPressedCallback)
    {
        androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable r0;
        androidx.activity.OnBackPressedDispatcher r1;
        androidx.activity.OnBackPressedCallback r2;

        r0 := @this: androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable;

        r1 := @parameter0: androidx.activity.OnBackPressedDispatcher;

        r2 := @parameter1: androidx.activity.OnBackPressedCallback;

        r0.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback> = r2;

        return;
    }

    public void cancel()
    {
        androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable r0;
        androidx.activity.OnBackPressedDispatcher $r1, $r6;
        androidx.activity.OnBackPressedCallback $r2, $r4, $r5;
        java.util.ArrayDeque $r3;
        boolean $z1;

        r0 := @this: androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable;

        $r1 = r0.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0>;

        $r3 = $r1.<androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks>;

        $r2 = r0.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $r3.<java.util.ArrayDeque: boolean remove(java.lang.Object)>($r2);

        $r4 = r0.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $r4.<androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)>(r0);

        $z1 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z1 == 0 goto label1;

        $r5 = r0.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $r5.<androidx.activity.OnBackPressedCallback: void setIsEnabledConsumer(androidx.core.util.Consumer)>(null);

        $r6 = r0.<androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0>;

        virtualinvoke $r6.<androidx.activity.OnBackPressedDispatcher: void updateBackInvokedCallbackState()>();

     label1:
        return;
    }

