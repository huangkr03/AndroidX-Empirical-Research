androidx.ui.tooling.InspectableKt
    public static final void Inspectable(androidx.ui.tooling.SlotTableRecord, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        androidx.ui.tooling.SlotTableRecord r0;
        kotlin.jvm.functions.Function2 r1, $r12;
        androidx.compose.runtime.Composer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8, $i10, $i11;
        androidx.compose.runtime.ProvidedValue[] r3;
        androidx.ui.tooling.SlotTableRecordImpl $r4;
        androidx.compose.runtime.SlotTable $r5;
        androidx.compose.runtime.ProvidableAmbient $r6, $r9;
        java.lang.Boolean $r7;
        androidx.compose.runtime.ProvidedValue $r8, $r10;
        androidx.ui.tooling.InspectableKt$Inspectable$1 $r11;
        boolean $z1, $z2, $z3;
        byte $b7, $b9;
        java.util.Set r13;
        androidx.compose.runtime.ScopeUpdateScope r14;

        r0 := @parameter0: androidx.ui.tooling.SlotTableRecord;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "slotTableRecord");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "children");

        virtualinvoke $r2.<androidx.compose.runtime.Composer: void startRestartGroup(int,java.lang.String)>(-1036160074, "C(Inspectable)P(1)63@2057L123:Inspectable.kt#o8h5at");

        i6 = $i0;

        $i1 = $i0 & 14;

        if $i1 != 0 goto label03;

        $i5 = i6;

        $z3 = virtualinvoke $r2.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        if $z3 == 0 goto label01;

        $b7 = 4;

        goto label02;

     label01:
        $b7 = 2;

     label02:
        i6 = $i5 | $b7;

     label03:
        $i8 = $i0 & 112;

        if $i8 != 0 goto label06;

        $i4 = i6;

        $z2 = virtualinvoke $r2.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        if $z2 == 0 goto label04;

        $b9 = 32;

        goto label05;

     label04:
        $b9 = 16;

     label05:
        i6 = $i4 | $b9;

     label06:
        $i10 = i6 & 91;

        $i11 = $i10 ^ 18;

        if $i11 != 0 goto label07;

        $z1 = virtualinvoke $r2.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z1 != 0 goto label08;

     label07:
        virtualinvoke $r2.<androidx.compose.runtime.Composer: void collectKeySourceInformation()>();

        $r4 = (androidx.ui.tooling.SlotTableRecordImpl) r0;

        r13 = virtualinvoke $r4.<androidx.ui.tooling.SlotTableRecordImpl: java.util.Set getStore()>();

        $r5 = virtualinvoke $r2.<androidx.compose.runtime.Composer: androidx.compose.runtime.SlotTable getSlotTable()>();

        interfaceinvoke r13.<java.util.Set: boolean add(java.lang.Object)>($r5);

        r3 = newarray (androidx.compose.runtime.ProvidedValue)[2];

        $r6 = staticinvoke <androidx.compose.ui.platform.InspectionModeKt: androidx.compose.runtime.ProvidableAmbient getInspectionMode()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r8 = virtualinvoke $r6.<androidx.compose.runtime.ProvidableAmbient: androidx.compose.runtime.ProvidedValue provides(java.lang.Object)>($r7);

        r3[0] = $r8;

        $r9 = staticinvoke <androidx.compose.runtime.tooling.InspectionTablesKt: androidx.compose.runtime.ProvidableAmbient getInspectionTables()>();

        $r10 = virtualinvoke $r9.<androidx.compose.runtime.ProvidableAmbient: androidx.compose.runtime.ProvidedValue provides(java.lang.Object)>(r13);

        r3[1] = $r10;

        $i2 = 112 & i6;

        $i3 = 8 | $i2;

        staticinvoke <androidx.compose.runtime.AmbientKt: void Providers(androidx.compose.runtime.ProvidedValue[],kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>(r3, r1, $r2, $i3);

        goto label09;

     label08:
        virtualinvoke $r2.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label09:
        r14 = virtualinvoke $r2.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if r14 != null goto label10;

        goto label11;

     label10:
        $r11 = new androidx.ui.tooling.InspectableKt$Inspectable$1;

        specialinvoke $r11.<androidx.ui.tooling.InspectableKt$Inspectable$1: void <init>(androidx.ui.tooling.SlotTableRecord,kotlin.jvm.functions.Function2,int)>(r0, r1, $i0);

        $r12 = (kotlin.jvm.functions.Function2) $r11;

        interfaceinvoke r14.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r12);

     label11:
        return;
    }

    public static final void InInspectionModeOnly(kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function2 r0, $r6;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2, $i3, i4, $i6, $i7;
        java.lang.Object r2;
        androidx.compose.runtime.ProvidableAmbient $r3;
        java.lang.Boolean $r4;
        boolean $z2, $z3, $z4;
        androidx.ui.tooling.InspectableKt$InInspectionModeOnly$1 $r5;
        java.lang.Integer $r7;
        byte $b5;
        androidx.compose.runtime.Ambient r9;
        androidx.compose.runtime.ScopeUpdateScope r10;

        r0 := @parameter0: kotlin.jvm.functions.Function2;

        $r1 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "children");

        virtualinvoke $r1.<androidx.compose.runtime.Composer: void startRestartGroup(int,java.lang.String)>(642913922, "C(InInspectionModeOnly)76@2455L7:Inspectable.kt#o8h5at");

        i4 = $i0;

        $i1 = $i0 & 14;

        if $i1 != 0 goto label03;

        $i3 = i4;

        $z4 = virtualinvoke $r1.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        if $z4 == 0 goto label01;

        $b5 = 4;

        goto label02;

     label01:
        $b5 = 2;

     label02:
        i4 = $i3 | $b5;

     label03:
        $i6 = i4 & 11;

        $i7 = $i6 ^ 2;

        if $i7 != 0 goto label04;

        $z3 = virtualinvoke $r1.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z3 != 0 goto label07;

     label04:
        $r3 = staticinvoke <androidx.compose.ui.platform.InspectionModeKt: androidx.compose.runtime.ProvidableAmbient getInspectionMode()>();

        r9 = (androidx.compose.runtime.Ambient) $r3;

        r2 = virtualinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.Ambient)>(r9);

        $r4 = (java.lang.Boolean) r2;

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label05;

        virtualinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int,java.lang.String)>(642914015, "77@2474L10");

        $i2 = 14 & i4;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r1, $r7);

        virtualinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        goto label06;

     label05:
        virtualinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(642914041);

        virtualinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

     label06:
        goto label08;

     label07:
        virtualinvoke $r1.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label08:
        r10 = virtualinvoke $r1.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if r10 != null goto label09;

        goto label10;

     label09:
        $r5 = new androidx.ui.tooling.InspectableKt$InInspectionModeOnly$1;

        specialinvoke $r5.<androidx.ui.tooling.InspectableKt$InInspectionModeOnly$1: void <init>(kotlin.jvm.functions.Function2,int)>(r0, $i0);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        interfaceinvoke r10.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r6);

     label10:
        return;
    }

