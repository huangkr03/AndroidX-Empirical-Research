io.opencensus.trace.internal.BaseMessageEventUtils
    public static io.opencensus.trace.MessageEvent asMessageEvent(io.opencensus.trace.BaseMessageEvent)
    {
        io.opencensus.trace.BaseMessageEvent $r0;
        boolean $z0;
        io.opencensus.trace.MessageEvent $r1;
        io.opencensus.trace.NetworkEvent $r2;
        io.opencensus.trace.NetworkEvent$Type $r3, $r4;
        io.opencensus.trace.MessageEvent$Type $r5;
        long $l0;
        io.opencensus.trace.MessageEvent$Builder $r6;

        $r0 := @parameter0: io.opencensus.trace.BaseMessageEvent;

        staticinvoke <io.opencensus.internal.Utils: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "event");

        $z0 = $r0 instanceof io.opencensus.trace.MessageEvent;

        if $z0 == 0 goto label1;

        $r1 = (io.opencensus.trace.MessageEvent) $r0;

        return $r1;

     label1:
        $r2 = (io.opencensus.trace.NetworkEvent) $r0;

        $r3 = virtualinvoke $r2.<io.opencensus.trace.NetworkEvent: io.opencensus.trace.NetworkEvent$Type getType()>();

        $r4 = <io.opencensus.trace.NetworkEvent$Type: io.opencensus.trace.NetworkEvent$Type RECV>;

        if $r3 != $r4 goto label2;

        $r5 = <io.opencensus.trace.MessageEvent$Type: io.opencensus.trace.MessageEvent$Type RECEIVED>;

        goto label3;

     label2:
        $r5 = <io.opencensus.trace.MessageEvent$Type: io.opencensus.trace.MessageEvent$Type SENT>;

     label3:
        $l0 = virtualinvoke $r2.<io.opencensus.trace.NetworkEvent: long getMessageId()>();

        $r6 = staticinvoke <io.opencensus.trace.MessageEvent: io.opencensus.trace.MessageEvent$Builder builder(io.opencensus.trace.MessageEvent$Type,long)>($r5, $l0);

        $l0 = virtualinvoke $r2.<io.opencensus.trace.NetworkEvent: long getUncompressedMessageSize()>();

        $r6 = virtualinvoke $r6.<io.opencensus.trace.MessageEvent$Builder: io.opencensus.trace.MessageEvent$Builder setUncompressedMessageSize(long)>($l0);

        $l0 = virtualinvoke $r2.<io.opencensus.trace.NetworkEvent: long getCompressedMessageSize()>();

        $r6 = virtualinvoke $r6.<io.opencensus.trace.MessageEvent$Builder: io.opencensus.trace.MessageEvent$Builder setCompressedMessageSize(long)>($l0);

        $r1 = virtualinvoke $r6.<io.opencensus.trace.MessageEvent$Builder: io.opencensus.trace.MessageEvent build()>();

        return $r1;
    }

