androidx.lifecycle.SavedStateHandleAttacher
<androidx.lifecycle.SavedStateHandleAttacher: androidx.lifecycle.SavedStateHandlesProvider provider>
    public void <init>(androidx.lifecycle.SavedStateHandlesProvider)
    {
        androidx.lifecycle.SavedStateHandleAttacher r0;
        androidx.lifecycle.SavedStateHandlesProvider r1;

        r0 := @this: androidx.lifecycle.SavedStateHandleAttacher;

        r1 := @parameter0: androidx.lifecycle.SavedStateHandlesProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "provider");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.SavedStateHandleAttacher: androidx.lifecycle.SavedStateHandlesProvider provider> = r1;

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.SavedStateHandleAttacher r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r3;
        androidx.lifecycle.Lifecycle $r4;
        androidx.lifecycle.LifecycleObserver $r5;
        androidx.lifecycle.SavedStateHandlesProvider $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, $r12;
        boolean $z0;

        r0 := @this: androidx.lifecycle.SavedStateHandleAttacher;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "event");

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE>;

        if r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Next event must be ON_CREATE, it was ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label3:
        $r4 = interfaceinvoke r1.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r5 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke $r4.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r5);

        $r6 = r0.<androidx.lifecycle.SavedStateHandleAttacher: androidx.lifecycle.SavedStateHandlesProvider provider>;

        virtualinvoke $r6.<androidx.lifecycle.SavedStateHandlesProvider: void performRestore()>();

        return;
    }

