androidx.transition.Slide
<androidx.transition.Slide: android.animation.TimeInterpolator sDecelerate>
<androidx.transition.Slide: android.animation.TimeInterpolator sAccelerate>
<androidx.transition.Slide: java.lang.String PROPNAME_SCREEN_POSITION>
<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator>
<androidx.transition.Slide: int mSlideEdge>
<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateLeft>
<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateStart>
<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateTop>
<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateRight>
<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateEnd>
<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateBottom>
    public void <init>()
    {
        androidx.transition.Slide r0;
        androidx.transition.Slide$CalculateSlide $r1;

        r0 := @this: androidx.transition.Slide;

        specialinvoke r0.<androidx.transition.Visibility: void <init>()>();

        $r1 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateBottom>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r1;

        r0.<androidx.transition.Slide: int mSlideEdge> = 80;

        virtualinvoke r0.<androidx.transition.Slide: void setSlideEdge(int)>(80);

        return;
    }

    public void <init>(int)
    {
        androidx.transition.Slide r0;
        int i0;
        androidx.transition.Slide$CalculateSlide $r1;

        r0 := @this: androidx.transition.Slide;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.transition.Visibility: void <init>()>();

        $r1 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateBottom>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r1;

        r0.<androidx.transition.Slide: int mSlideEdge> = 80;

        virtualinvoke r0.<androidx.transition.Slide: void setSlideEdge(int)>(i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.transition.Slide r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0;
        androidx.transition.Slide$CalculateSlide $r4;
        int[] $r5;
        org.xmlpull.v1.XmlPullParser $r6;

        r0 := @this: androidx.transition.Slide;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r4 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateBottom>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r4;

        r0.<androidx.transition.Slide: int mSlideEdge> = 80;

        $r5 = <androidx.transition.Styleable: int[] SLIDE>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r5);

        $r6 = (org.xmlpull.v1.XmlPullParser) r2;

        i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r3, $r6, "slideEdge", 0, 80);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<androidx.transition.Slide: void setSlideEdge(int)>(i0);

        return;
    }

    private void captureValues(androidx.transition.TransitionValues)
    {
        androidx.transition.Slide r0;
        androidx.transition.TransitionValues r1;
        android.view.View r2;
        int[] r3;
        java.util.Map $r4;

        r0 := @this: androidx.transition.Slide;

        r1 := @parameter0: androidx.transition.TransitionValues;

        r2 = r1.<androidx.transition.TransitionValues: android.view.View view>;

        r3 = newarray (int)[2];

        virtualinvoke r2.<android.view.View: void getLocationOnScreen(int[])>(r3);

        $r4 = r1.<androidx.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:slide:screenPosition", r3);

        return;
    }

    public void captureStartValues(androidx.transition.TransitionValues)
    {
        androidx.transition.Slide r0;
        androidx.transition.TransitionValues r1;

        r0 := @this: androidx.transition.Slide;

        r1 := @parameter0: androidx.transition.TransitionValues;

        specialinvoke r0.<androidx.transition.Visibility: void captureStartValues(androidx.transition.TransitionValues)>(r1);

        specialinvoke r0.<androidx.transition.Slide: void captureValues(androidx.transition.TransitionValues)>(r1);

        return;
    }

    public void captureEndValues(androidx.transition.TransitionValues)
    {
        androidx.transition.Slide r0;
        androidx.transition.TransitionValues r1;

        r0 := @this: androidx.transition.Slide;

        r1 := @parameter0: androidx.transition.TransitionValues;

        specialinvoke r0.<androidx.transition.Visibility: void captureEndValues(androidx.transition.TransitionValues)>(r1);

        specialinvoke r0.<androidx.transition.Slide: void captureValues(androidx.transition.TransitionValues)>(r1);

        return;
    }

    public void setSlideEdge(int)
    {
        androidx.transition.Slide r0;
        int i0;
        androidx.transition.SidePropagation r1, $r9;
        androidx.transition.Slide$CalculateSlide $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: androidx.transition.Slide;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 3: goto label1;
            case 5: goto label3;
            case 48: goto label2;
            case 80: goto label4;
            case 8388611: goto label5;
            case 8388613: goto label6;
            default: goto label7;
        };

     label1:
        $r7 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateLeft>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r7;

        goto label8;

     label2:
        $r5 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateTop>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r5;

        goto label8;

     label3:
        $r6 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateRight>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r6;

        goto label8;

     label4:
        $r4 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateBottom>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r4;

        goto label8;

     label5:
        $r3 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateStart>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r3;

        goto label8;

     label6:
        $r2 = <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateEnd>;

        r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator> = $r2;

        goto label8;

     label7:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid slide direction");

        throw $r8;

     label8:
        r0.<androidx.transition.Slide: int mSlideEdge> = i0;

        $r9 = new androidx.transition.SidePropagation;

        specialinvoke $r9.<androidx.transition.SidePropagation: void <init>()>();

        r1 = $r9;

        virtualinvoke r1.<androidx.transition.SidePropagation: void setSide(int)>(i0);

        virtualinvoke r0.<androidx.transition.Slide: void setPropagation(androidx.transition.TransitionPropagation)>(r1);

        return;
    }

    public int getSlideEdge()
    {
        androidx.transition.Slide r0;
        int $i0;

        r0 := @this: androidx.transition.Slide;

        $i0 = r0.<androidx.transition.Slide: int mSlideEdge>;

        return $i0;
    }

    public android.animation.Animator onAppear(android.view.ViewGroup, android.view.View, androidx.transition.TransitionValues, androidx.transition.TransitionValues)
    {
        androidx.transition.Slide r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        androidx.transition.TransitionValues r3, r4;
        int[] r5;
        float f0, f1, f2, f3;
        java.util.Map $r6;
        java.lang.Object $r7;
        androidx.transition.Slide$CalculateSlide $r8, $r9;
        android.animation.TimeInterpolator $r10;
        int $i0, $i1;
        android.animation.Animator $r11;

        r0 := @this: androidx.transition.Slide;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: androidx.transition.TransitionValues;

        r4 := @parameter3: androidx.transition.TransitionValues;

        if r4 != null goto label1;

        return null;

     label1:
        $r6 = r4.<androidx.transition.TransitionValues: java.util.Map values>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:slide:screenPosition");

        r5 = (int[]) $r7;

        f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        f1 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $r8 = r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator>;

        f2 = interfaceinvoke $r8.<androidx.transition.Slide$CalculateSlide: float getGoneX(android.view.ViewGroup,android.view.View)>(r1, r2);

        $r9 = r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator>;

        f3 = interfaceinvoke $r9.<androidx.transition.Slide$CalculateSlide: float getGoneY(android.view.ViewGroup,android.view.View)>(r1, r2);

        $i1 = r5[0];

        $i0 = r5[1];

        $r10 = <androidx.transition.Slide: android.animation.TimeInterpolator sDecelerate>;

        $r11 = staticinvoke <androidx.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,androidx.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,androidx.transition.Transition)>(r2, r4, $i1, $i0, f2, f3, f0, f1, $r10, r0);

        return $r11;
    }

    public android.animation.Animator onDisappear(android.view.ViewGroup, android.view.View, androidx.transition.TransitionValues, androidx.transition.TransitionValues)
    {
        androidx.transition.Slide r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        androidx.transition.TransitionValues r3, r4;
        int[] r5;
        float f0, f1, f2, f3;
        java.util.Map $r6;
        java.lang.Object $r7;
        androidx.transition.Slide$CalculateSlide $r8, $r9;
        android.animation.TimeInterpolator $r10;
        int $i0, $i1;
        android.animation.Animator $r11;

        r0 := @this: androidx.transition.Slide;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: androidx.transition.TransitionValues;

        r4 := @parameter3: androidx.transition.TransitionValues;

        if r3 != null goto label1;

        return null;

     label1:
        $r6 = r3.<androidx.transition.TransitionValues: java.util.Map values>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:slide:screenPosition");

        r5 = (int[]) $r7;

        f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        f1 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $r8 = r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator>;

        f2 = interfaceinvoke $r8.<androidx.transition.Slide$CalculateSlide: float getGoneX(android.view.ViewGroup,android.view.View)>(r1, r2);

        $r9 = r0.<androidx.transition.Slide: androidx.transition.Slide$CalculateSlide mSlideCalculator>;

        f3 = interfaceinvoke $r9.<androidx.transition.Slide$CalculateSlide: float getGoneY(android.view.ViewGroup,android.view.View)>(r1, r2);

        $i1 = r5[0];

        $i0 = r5[1];

        $r10 = <androidx.transition.Slide: android.animation.TimeInterpolator sAccelerate>;

        $r11 = staticinvoke <androidx.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,androidx.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,androidx.transition.Transition)>(r2, r3, $i1, $i0, f0, f1, f2, f3, $r10, r0);

        return $r11;
    }

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;
        android.view.animation.AccelerateInterpolator $r1;
        androidx.transition.Slide$1 $r2;
        androidx.transition.Slide$2 $r3;
        androidx.transition.Slide$3 $r4;
        androidx.transition.Slide$4 $r5;
        androidx.transition.Slide$5 $r6;
        androidx.transition.Slide$6 $r7;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <androidx.transition.Slide: android.animation.TimeInterpolator sDecelerate> = $r0;

        $r1 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r1.<android.view.animation.AccelerateInterpolator: void <init>()>();

        <androidx.transition.Slide: android.animation.TimeInterpolator sAccelerate> = $r1;

        $r2 = new androidx.transition.Slide$1;

        specialinvoke $r2.<androidx.transition.Slide$1: void <init>()>();

        <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateLeft> = $r2;

        $r3 = new androidx.transition.Slide$2;

        specialinvoke $r3.<androidx.transition.Slide$2: void <init>()>();

        <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateStart> = $r3;

        $r4 = new androidx.transition.Slide$3;

        specialinvoke $r4.<androidx.transition.Slide$3: void <init>()>();

        <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateTop> = $r4;

        $r5 = new androidx.transition.Slide$4;

        specialinvoke $r5.<androidx.transition.Slide$4: void <init>()>();

        <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateRight> = $r5;

        $r6 = new androidx.transition.Slide$5;

        specialinvoke $r6.<androidx.transition.Slide$5: void <init>()>();

        <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateEnd> = $r6;

        $r7 = new androidx.transition.Slide$6;

        specialinvoke $r7.<androidx.transition.Slide$6: void <init>()>();

        <androidx.transition.Slide: androidx.transition.Slide$CalculateSlide sCalculateBottom> = $r7;

        return;
    }

androidx.transition.Slide$1
    void <init>()
    {
        androidx.transition.Slide$1 r0;

        r0 := @this: androidx.transition.Slide$1;

        specialinvoke r0.<androidx.transition.Slide$CalculateSlideHorizontal: void <init>(androidx.transition.Slide$1)>(null);

        return;
    }

    public float getGoneX(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.Slide$1 r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @this: androidx.transition.Slide$1;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        $f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        $f1 = (float) $i0;

        $f2 = $f0 - $f1;

        return $f2;
    }

androidx.transition.Slide$2
    void <init>()
    {
        androidx.transition.Slide$2 r0;

        r0 := @this: androidx.transition.Slide$2;

        specialinvoke r0.<androidx.transition.Slide$CalculateSlideHorizontal: void <init>(androidx.transition.Slide$1)>(null);

        return;
    }

    public float getGoneX(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.Slide$2 r0;
        android.view.ViewGroup r1;
        android.view.View r2, r3;
        boolean z0, $z1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, f4;

        r0 := @this: androidx.transition.Slide$2;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 = (android.view.View) r1;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r3);

        if $i0 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $f2 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        $i2 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        $f3 = (float) $i2;

        f4 = $f2 + $f3;

        goto label4;

     label3:
        $f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        $f1 = (float) $i1;

        f4 = $f0 - $f1;

     label4:
        return f4;
    }

androidx.transition.Slide$3
    void <init>()
    {
        androidx.transition.Slide$3 r0;

        r0 := @this: androidx.transition.Slide$3;

        specialinvoke r0.<androidx.transition.Slide$CalculateSlideVertical: void <init>(androidx.transition.Slide$1)>(null);

        return;
    }

    public float getGoneY(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.Slide$3 r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @this: androidx.transition.Slide$3;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        $f0 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getHeight()>();

        $f1 = (float) $i0;

        $f2 = $f0 - $f1;

        return $f2;
    }

androidx.transition.Slide$4
    void <init>()
    {
        androidx.transition.Slide$4 r0;

        r0 := @this: androidx.transition.Slide$4;

        specialinvoke r0.<androidx.transition.Slide$CalculateSlideHorizontal: void <init>(androidx.transition.Slide$1)>(null);

        return;
    }

    public float getGoneX(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.Slide$4 r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @this: androidx.transition.Slide$4;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        $f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        $f1 = (float) $i0;

        $f2 = $f0 + $f1;

        return $f2;
    }

androidx.transition.Slide$5
    void <init>()
    {
        androidx.transition.Slide$5 r0;

        r0 := @this: androidx.transition.Slide$5;

        specialinvoke r0.<androidx.transition.Slide$CalculateSlideHorizontal: void <init>(androidx.transition.Slide$1)>(null);

        return;
    }

    public float getGoneX(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.Slide$5 r0;
        android.view.ViewGroup r1;
        android.view.View r2, r3;
        boolean z0, $z1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, f4;

        r0 := @this: androidx.transition.Slide$5;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 = (android.view.View) r1;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r3);

        if $i0 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $f2 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        $i2 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        $f3 = (float) $i2;

        f4 = $f2 - $f3;

        goto label4;

     label3:
        $f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        $f1 = (float) $i1;

        f4 = $f0 + $f1;

     label4:
        return f4;
    }

androidx.transition.Slide$6
    void <init>()
    {
        androidx.transition.Slide$6 r0;

        r0 := @this: androidx.transition.Slide$6;

        specialinvoke r0.<androidx.transition.Slide$CalculateSlideVertical: void <init>(androidx.transition.Slide$1)>(null);

        return;
    }

    public float getGoneY(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.Slide$6 r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @this: androidx.transition.Slide$6;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        $f0 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getHeight()>();

        $f1 = (float) $i0;

        $f2 = $f0 + $f1;

        return $f2;
    }

androidx.transition.Slide$CalculateSlide
<androidx.transition.Slide$CalculateSlide: float getGoneX(android.view.ViewGroup,android.view.View)>
<androidx.transition.Slide$CalculateSlide: float getGoneY(android.view.ViewGroup,android.view.View)>
androidx.transition.Slide$CalculateSlideHorizontal
    private void <init>()
    {
        androidx.transition.Slide$CalculateSlideHorizontal r0;

        r0 := @this: androidx.transition.Slide$CalculateSlideHorizontal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public float getGoneY(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.Slide$CalculateSlideHorizontal r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        float $f0;

        r0 := @this: androidx.transition.Slide$CalculateSlideHorizontal;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        $f0 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        return $f0;
    }

    void <init>(androidx.transition.Slide$1)
    {
        androidx.transition.Slide$CalculateSlideHorizontal r0;
        androidx.transition.Slide$1 r1;

        r0 := @this: androidx.transition.Slide$CalculateSlideHorizontal;

        r1 := @parameter0: androidx.transition.Slide$1;

        specialinvoke r0.<androidx.transition.Slide$CalculateSlideHorizontal: void <init>()>();

        return;
    }

androidx.transition.Slide$CalculateSlideVertical
    private void <init>()
    {
        androidx.transition.Slide$CalculateSlideVertical r0;

        r0 := @this: androidx.transition.Slide$CalculateSlideVertical;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public float getGoneX(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.Slide$CalculateSlideVertical r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        float $f0;

        r0 := @this: androidx.transition.Slide$CalculateSlideVertical;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        $f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        return $f0;
    }

    void <init>(androidx.transition.Slide$1)
    {
        androidx.transition.Slide$CalculateSlideVertical r0;
        androidx.transition.Slide$1 r1;

        r0 := @this: androidx.transition.Slide$CalculateSlideVertical;

        r1 := @parameter0: androidx.transition.Slide$1;

        specialinvoke r0.<androidx.transition.Slide$CalculateSlideVertical: void <init>()>();

        return;
    }

androidx.transition.Slide$GravityFlag
