androidx.appsearch.platformstorage.SearchSessionImpl
<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>
<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>
<androidx.appsearch.platformstorage.SearchSessionImpl: androidx.appsearch.app.Features mFeatures>
    void <init>(android.app.appsearch.AppSearchSession, java.util.concurrent.Executor, androidx.appsearch.app.Features)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        android.app.appsearch.AppSearchSession r1, $r5;
        java.util.concurrent.Executor r2, $r7;
        androidx.appsearch.app.Features r3, $r9;
        java.lang.Object $r4, $r6, $r8;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: android.app.appsearch.AppSearchSession;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.appsearch.app.Features;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (android.app.appsearch.AppSearchSession) $r4;

        r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession> = $r5;

        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (java.util.concurrent.Executor) $r6;

        r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor> = $r7;

        $r8 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r9 = (androidx.appsearch.app.Features) $r8;

        r0.<androidx.appsearch.platformstorage.SearchSessionImpl: androidx.appsearch.app.Features mFeatures> = $r9;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture setSchemaAsync(androidx.appsearch.app.SetSchemaRequest)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.appsearch.app.SetSchemaRequest r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        android.app.appsearch.AppSearchSession $r4;
        android.app.appsearch.SetSchemaRequest $r5;
        java.util.concurrent.Executor $r6, $r7;
        java.util.function.Consumer $r8;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.SetSchemaRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r4 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r5 = staticinvoke <androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter: android.app.appsearch.SetSchemaRequest toPlatformSetSchemaRequest(androidx.appsearch.app.SetSchemaRequest)>(r1);

        $r6 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r7 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r8 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.SearchSessionImpl: void lambda$setSchemaAsync$0(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r4.<android.app.appsearch.AppSearchSession: void setSchema(android.app.appsearch.SetSchemaRequest,java.util.concurrent.Executor,java.util.concurrent.Executor,java.util.function.Consumer)>($r5, $r6, $r7, $r8);

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getSchemaAsync()
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.concurrent.futures.ResolvableFuture r1;
        android.app.appsearch.AppSearchSession $r2;
        java.util.concurrent.Executor $r3;
        java.util.function.Consumer $r4;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r2 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r3 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r4 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.SearchSessionImpl: void lambda$getSchemaAsync$1(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r2.<android.app.appsearch.AppSearchSession: void getSchema(java.util.concurrent.Executor,java.util.function.Consumer)>($r3, $r4);

        return r1;
    }

    public com.google.common.util.concurrent.ListenableFuture getNamespacesAsync()
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.concurrent.futures.ResolvableFuture r1;
        android.app.appsearch.AppSearchSession $r2;
        java.util.concurrent.Executor $r3;
        java.util.function.Consumer $r4;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r2 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r3 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r4 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.SearchSessionImpl: void lambda$getNamespacesAsync$2(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r2.<android.app.appsearch.AppSearchSession: void getNamespaces(java.util.concurrent.Executor,java.util.function.Consumer)>($r3, $r4);

        return r1;
    }

    public com.google.common.util.concurrent.ListenableFuture putAsync(androidx.appsearch.app.PutDocumentsRequest)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.appsearch.app.PutDocumentsRequest r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        android.app.appsearch.AppSearchSession $r4;
        android.app.appsearch.PutDocumentsRequest $r5;
        java.util.concurrent.Executor $r6;
        androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter $r7;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.PutDocumentsRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r4 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r5 = staticinvoke <androidx.appsearch.platformstorage.converter.RequestToPlatformConverter: android.app.appsearch.PutDocumentsRequest toPlatformPutDocumentsRequest(androidx.appsearch.app.PutDocumentsRequest)>(r1);

        $r6 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r7 = staticinvoke <androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter forSameValueType(androidx.concurrent.futures.ResolvableFuture)>(r2);

        virtualinvoke $r4.<android.app.appsearch.AppSearchSession: void put(android.app.appsearch.PutDocumentsRequest,java.util.concurrent.Executor,android.app.appsearch.BatchResultCallback)>($r5, $r6, $r7);

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getByDocumentIdAsync(androidx.appsearch.app.GetByDocumentIdRequest)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.appsearch.app.GetByDocumentIdRequest r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        android.app.appsearch.AppSearchSession $r4;
        android.app.appsearch.GetByDocumentIdRequest $r5;
        androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter $r6;
        java.util.concurrent.Executor $r7;
        java.util.function.Function $r8;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.GetByDocumentIdRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r4 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r5 = staticinvoke <androidx.appsearch.platformstorage.converter.RequestToPlatformConverter: android.app.appsearch.GetByDocumentIdRequest toPlatformGetByDocumentIdRequest(androidx.appsearch.app.GetByDocumentIdRequest)>(r1);

        $r7 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r6 = new androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter;

        $r8 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.converter.GenericDocumentToPlatformConverter: androidx.appsearch.app.GenericDocument toJetpackGenericDocument(android.app.appsearch.GenericDocument)>, methodtype: androidx.appsearch.app.GenericDocument __METHODTYPE__(android.app.appsearch.GenericDocument));

        specialinvoke $r6.<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: void <init>(androidx.concurrent.futures.ResolvableFuture,java.util.function.Function)>(r2, $r8);

        virtualinvoke $r4.<android.app.appsearch.AppSearchSession: void getByDocumentId(android.app.appsearch.GetByDocumentIdRequest,java.util.concurrent.Executor,android.app.appsearch.BatchResultCallback)>($r5, $r7, $r6);

        return r2;
    }

    public androidx.appsearch.app.SearchResults search(java.lang.String, androidx.appsearch.app.SearchSpec)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        java.lang.String r1;
        androidx.appsearch.app.SearchSpec r2;
        android.app.appsearch.SearchResults r3;
        android.app.appsearch.AppSearchSession $r6;
        android.app.appsearch.SearchSpec $r7;
        androidx.appsearch.platformstorage.SearchResultsImpl $r8;
        java.util.concurrent.Executor $r9;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r7 = staticinvoke <androidx.appsearch.platformstorage.converter.SearchSpecToPlatformConverter: android.app.appsearch.SearchSpec toPlatformSearchSpec(androidx.appsearch.app.SearchSpec)>(r2);

        r3 = virtualinvoke $r6.<android.app.appsearch.AppSearchSession: android.app.appsearch.SearchResults search(java.lang.String,android.app.appsearch.SearchSpec)>(r1, $r7);

        $r8 = new androidx.appsearch.platformstorage.SearchResultsImpl;

        $r9 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        specialinvoke $r8.<androidx.appsearch.platformstorage.SearchResultsImpl: void <init>(android.app.appsearch.SearchResults,androidx.appsearch.app.SearchSpec,java.util.concurrent.Executor)>(r3, r2, $r9);

        return $r8;
    }

    public com.google.common.util.concurrent.ListenableFuture searchSuggestionAsync(java.lang.String, androidx.appsearch.app.SearchSuggestionSpec)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        java.lang.String r1;
        androidx.appsearch.app.SearchSuggestionSpec r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSuggestionSpec;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Search Suggestion is not supported on this AppSearch implementation.");

        throw $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture reportUsageAsync(androidx.appsearch.app.ReportUsageRequest)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.appsearch.app.ReportUsageRequest r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        android.app.appsearch.AppSearchSession $r4;
        android.app.appsearch.ReportUsageRequest $r5;
        java.util.concurrent.Executor $r6;
        java.util.function.Consumer $r7;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.ReportUsageRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r4 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r5 = staticinvoke <androidx.appsearch.platformstorage.converter.RequestToPlatformConverter: android.app.appsearch.ReportUsageRequest toPlatformReportUsageRequest(androidx.appsearch.app.ReportUsageRequest)>(r1);

        $r6 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r7 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.SearchSessionImpl: void lambda$reportUsageAsync$3(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r4.<android.app.appsearch.AppSearchSession: void reportUsage(android.app.appsearch.ReportUsageRequest,java.util.concurrent.Executor,java.util.function.Consumer)>($r5, $r6, $r7);

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture removeAsync(androidx.appsearch.app.RemoveByDocumentIdRequest)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.appsearch.app.RemoveByDocumentIdRequest r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        android.app.appsearch.AppSearchSession $r4;
        android.app.appsearch.RemoveByDocumentIdRequest $r5;
        java.util.concurrent.Executor $r6;
        androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter $r7;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.RemoveByDocumentIdRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r4 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r5 = staticinvoke <androidx.appsearch.platformstorage.converter.RequestToPlatformConverter: android.app.appsearch.RemoveByDocumentIdRequest toPlatformRemoveByDocumentIdRequest(androidx.appsearch.app.RemoveByDocumentIdRequest)>(r1);

        $r6 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r7 = staticinvoke <androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter forSameValueType(androidx.concurrent.futures.ResolvableFuture)>(r2);

        virtualinvoke $r4.<android.app.appsearch.AppSearchSession: void remove(android.app.appsearch.RemoveByDocumentIdRequest,java.util.concurrent.Executor,android.app.appsearch.BatchResultCallback)>($r5, $r6, $r7);

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture removeAsync(java.lang.String, androidx.appsearch.app.SearchSpec)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        java.lang.String r1;
        androidx.appsearch.app.SearchSpec r2;
        androidx.concurrent.futures.ResolvableFuture r3;
        boolean $z0, $z1;
        android.app.appsearch.AppSearchSession $r6, $r11;
        android.app.appsearch.SearchSpec $r7;
        java.util.concurrent.Executor $r8, $r12;
        java.util.function.Consumer $r9, $r13;
        java.util.List $r10;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r3 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 != 0 goto label1;

        $r10 = virtualinvoke r2.<androidx.appsearch.app.SearchSpec: java.util.List getFilterNamespaces()>();

        $z1 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r11 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r12 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r13 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.appsearch.platformstorage.SearchSessionImpl,androidx.concurrent.futures.ResolvableFuture,androidx.appsearch.app.SearchSpec,java.lang.String)>(r0, r3, r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.platformstorage.SearchSessionImpl: void lambda$removeAsync$5(androidx.concurrent.futures.ResolvableFuture,androidx.appsearch.app.SearchSpec,java.lang.String,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r11.<android.app.appsearch.AppSearchSession: void getNamespaces(java.util.concurrent.Executor,java.util.function.Consumer)>($r12, $r13);

        goto label2;

     label1:
        $r6 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r7 = staticinvoke <androidx.appsearch.platformstorage.converter.SearchSpecToPlatformConverter: android.app.appsearch.SearchSpec toPlatformSearchSpec(androidx.appsearch.app.SearchSpec)>(r2);

        $r8 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r9 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.SearchSessionImpl: void lambda$removeAsync$6(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r6.<android.app.appsearch.AppSearchSession: void remove(java.lang.String,android.app.appsearch.SearchSpec,java.util.concurrent.Executor,java.util.function.Consumer)>(r1, $r7, $r8, $r9);

     label2:
        return r3;
    }

    public com.google.common.util.concurrent.ListenableFuture getStorageInfoAsync()
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.concurrent.futures.ResolvableFuture r1;
        android.app.appsearch.AppSearchSession $r2;
        java.util.concurrent.Executor $r3;
        java.util.function.Consumer $r4;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r2 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r3 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r4 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.SearchSessionImpl: void lambda$getStorageInfoAsync$7(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r2.<android.app.appsearch.AppSearchSession: void getStorageInfo(java.util.concurrent.Executor,java.util.function.Consumer)>($r3, $r4);

        return r1;
    }

    public com.google.common.util.concurrent.ListenableFuture requestFlushAsync()
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.concurrent.futures.ResolvableFuture r1;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        virtualinvoke r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>(null);

        return r1;
    }

    public androidx.appsearch.app.Features getFeatures()
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.appsearch.app.Features $r1;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        $r1 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: androidx.appsearch.app.Features mFeatures>;

        return $r1;
    }

    public void close()
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        android.app.appsearch.AppSearchSession $r1;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        $r1 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        virtualinvoke $r1.<android.app.appsearch.AppSearchSession: void close()>();

        return;
    }

    private static void lambda$getStorageInfoAsync$7(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;
        java.util.function.Function $r2;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        $r2 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.converter.ResponseToPlatformConverter: androidx.appsearch.app.StorageInfo toJetpackStorageInfo(android.app.appsearch.StorageInfo)>, methodtype: androidx.appsearch.app.StorageInfo __METHODTYPE__(android.app.appsearch.StorageInfo));

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture,java.util.function.Function)>(r1, r0, $r2);

        return;
    }

    private static void lambda$removeAsync$6(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture)>(r1, r0);

        return;
    }

    private void lambda$removeAsync$5(androidx.concurrent.futures.ResolvableFuture, androidx.appsearch.app.SearchSpec, java.lang.String, android.app.appsearch.AppSearchResult)
    {
        androidx.appsearch.platformstorage.SearchSessionImpl r0;
        androidx.concurrent.futures.ResolvableFuture r1;
        androidx.appsearch.app.SearchSpec r2;
        java.lang.String r3, $r13;
        android.app.appsearch.AppSearchResult r4;
        java.util.List r5;
        boolean $z0, $z2;
        java.lang.Object $r6, $r7;
        int $i0, $i1, i2;
        android.app.appsearch.AppSearchSession $r8;
        android.app.appsearch.SearchSpec $r9;
        java.util.concurrent.Executor $r10;
        java.util.function.Consumer $r11;
        androidx.appsearch.exceptions.AppSearchException $r12;
        java.lang.Throwable $r14, r16;
        java.util.Set r15;

        r0 := @this: androidx.appsearch.platformstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.appsearch.AppSearchResult;

        $z0 = virtualinvoke r4.<android.app.appsearch.AppSearchResult: boolean isSuccess()>();

        if $z0 != 0 goto label1;

        $r12 = new androidx.appsearch.exceptions.AppSearchException;

        $i1 = virtualinvoke r4.<android.app.appsearch.AppSearchResult: int getResultCode()>();

        $r13 = virtualinvoke r4.<android.app.appsearch.AppSearchResult: java.lang.String getErrorMessage()>();

        specialinvoke $r12.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>($i1, $r13);

        virtualinvoke r1.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>($r12);

        return;

     label1:
        $r6 = virtualinvoke r4.<android.app.appsearch.AppSearchResult: java.lang.Object getResultValue()>();

        r15 = (java.util.Set) $r6;

        r5 = virtualinvoke r2.<androidx.appsearch.app.SearchSpec: java.util.List getFilterNamespaces()>();

        i2 = 0;

     label2:
        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if i2 >= $i0 goto label5;

        $r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i2);

        $z2 = interfaceinvoke r15.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z2 == 0 goto label4;

        $r8 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: android.app.appsearch.AppSearchSession mPlatformSession>;

        $r9 = staticinvoke <androidx.appsearch.platformstorage.converter.SearchSpecToPlatformConverter: android.app.appsearch.SearchSpec toPlatformSearchSpec(androidx.appsearch.app.SearchSpec)>(r2);

        $r10 = r0.<androidx.appsearch.platformstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r11 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.SearchSessionImpl: void lambda$removeAsync$4(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r8.<android.app.appsearch.AppSearchSession: void remove(java.lang.String,android.app.appsearch.SearchSpec,java.util.concurrent.Executor,java.util.function.Consumer)>(r3, $r9, $r10, $r11);

     label3:
        return;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        virtualinvoke r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>(null);

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

        r16 = $r14;

        virtualinvoke r1.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>(r16);

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }

    private static void lambda$removeAsync$4(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture)>(r1, r0);

        return;
    }

    private static void lambda$reportUsageAsync$3(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture)>(r1, r0);

        return;
    }

    private static void lambda$getNamespacesAsync$2(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture)>(r1, r0);

        return;
    }

    private static void lambda$getSchemaAsync$1(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;
        java.util.function.Function $r2;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        $r2 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.converter.GetSchemaResponseToPlatformConverter: androidx.appsearch.app.GetSchemaResponse toJetpackGetSchemaResponse(android.app.appsearch.GetSchemaResponse)>, methodtype: androidx.appsearch.app.GetSchemaResponse __METHODTYPE__(android.app.appsearch.GetSchemaResponse));

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture,java.util.function.Function)>(r1, r0, $r2);

        return;
    }

    private static void lambda$setSchemaAsync$0(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;
        java.util.function.Function $r2;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        $r2 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.converter.SetSchemaRequestToPlatformConverter: androidx.appsearch.app.SetSchemaResponse toJetpackSetSchemaResponse(android.app.appsearch.SetSchemaResponse)>, methodtype: androidx.appsearch.app.SetSchemaResponse __METHODTYPE__(android.app.appsearch.SetSchemaResponse));

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture,java.util.function.Function)>(r1, r0, $r2);

        return;
    }

