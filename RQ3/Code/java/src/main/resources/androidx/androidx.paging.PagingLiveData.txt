androidx.paging.PagingLiveData
    public static final androidx.lifecycle.LiveData getLiveData(androidx.paging.Pager)
    {
        androidx.paging.Pager $r0;
        kotlinx.coroutines.flow.Flow $r1;
        androidx.lifecycle.LiveData $r2;

        $r0 := @parameter0: androidx.paging.Pager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.paging.Pager: kotlinx.coroutines.flow.Flow getFlow()>();

        $r2 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long,int,java.lang.Object)>($r1, null, 0L, 3, null);

        return $r2;
    }

    public static final androidx.lifecycle.LiveData cachedIn(androidx.lifecycle.LiveData, androidx.lifecycle.Lifecycle)
    {
        androidx.lifecycle.LiveData $r0, $r6;
        androidx.lifecycle.Lifecycle r1;
        kotlinx.coroutines.flow.Flow $r2, $r5;
        androidx.lifecycle.LifecycleCoroutineScope $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        $r0 := @parameter0: androidx.lifecycle.LiveData;

        r1 := @parameter1: androidx.lifecycle.Lifecycle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "lifecycle");

        $r2 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: kotlinx.coroutines.flow.Flow asFlow(androidx.lifecycle.LiveData)>($r0);

        $r3 = staticinvoke <androidx.lifecycle.LifecycleKt: androidx.lifecycle.LifecycleCoroutineScope getCoroutineScope(androidx.lifecycle.Lifecycle)>(r1);

        $r4 = (kotlinx.coroutines.CoroutineScope) $r3;

        $r5 = staticinvoke <androidx.paging.CachedPagingDataKt: kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)>($r2, $r4);

        $r6 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long,int,java.lang.Object)>($r5, null, 0L, 3, null);

        return $r6;
    }

    public static final androidx.lifecycle.LiveData cachedIn(androidx.lifecycle.LiveData, androidx.lifecycle.ViewModel)
    {
        androidx.lifecycle.LiveData $r0, $r5;
        androidx.lifecycle.ViewModel r1;
        kotlinx.coroutines.flow.Flow $r2, $r4;
        kotlinx.coroutines.CoroutineScope $r3;

        $r0 := @parameter0: androidx.lifecycle.LiveData;

        r1 := @parameter1: androidx.lifecycle.ViewModel;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "viewModel");

        $r2 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: kotlinx.coroutines.flow.Flow asFlow(androidx.lifecycle.LiveData)>($r0);

        $r3 = staticinvoke <androidx.lifecycle.ViewModelKt: kotlinx.coroutines.CoroutineScope getViewModelScope(androidx.lifecycle.ViewModel)>(r1);

        $r4 = staticinvoke <androidx.paging.CachedPagingDataKt: kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)>($r2, $r3);

        $r5 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long,int,java.lang.Object)>($r4, null, 0L, 3, null);

        return $r5;
    }

    public static final androidx.lifecycle.LiveData cachedIn(androidx.lifecycle.LiveData, kotlinx.coroutines.CoroutineScope)
    {
        androidx.lifecycle.LiveData $r0, $r4;
        kotlinx.coroutines.CoroutineScope r1;
        kotlinx.coroutines.flow.Flow $r2, $r3;

        $r0 := @parameter0: androidx.lifecycle.LiveData;

        r1 := @parameter1: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        $r2 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: kotlinx.coroutines.flow.Flow asFlow(androidx.lifecycle.LiveData)>($r0);

        $r3 = staticinvoke <androidx.paging.CachedPagingDataKt: kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)>($r2, r1);

        $r4 = staticinvoke <androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long,int,java.lang.Object)>($r3, null, 0L, 3, null);

        return $r4;
    }

