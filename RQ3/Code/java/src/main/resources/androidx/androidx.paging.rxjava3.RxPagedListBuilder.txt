androidx.paging.rxjava3.RxPagedListBuilder
<androidx.paging.rxjava3.RxPagedListBuilder: kotlin.jvm.functions.Function0 pagingSourceFactory>
<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.DataSource$Factory dataSourceFactory>
<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.PagedList$Config config>
<androidx.paging.rxjava3.RxPagedListBuilder: java.lang.Object initialLoadKey>
<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.PagedList$BoundaryCallback boundaryCallback>
<androidx.paging.rxjava3.RxPagedListBuilder: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher notifyDispatcher>
<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Scheduler notifyScheduler>
<androidx.paging.rxjava3.RxPagedListBuilder: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher fetchDispatcher>
<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Scheduler fetchScheduler>
    private static void getConfig$annotations()
    {
        return;
    }

    private static void getBoundaryCallback$annotations()
    {
        return;
    }

    public void <init>(kotlin.jvm.functions.Function0, androidx.paging.PagedList$Config)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.paging.PagedList$Config r2;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: androidx.paging.PagedList$Config;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pagingSourceFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.rxjava3.RxPagedListBuilder: kotlin.jvm.functions.Function0 pagingSourceFactory> = r1;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.DataSource$Factory dataSourceFactory> = null;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.PagedList$Config config> = r2;

        return;
    }

    public void <init>(kotlin.jvm.functions.Function0, int)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0;
        kotlin.jvm.functions.Function0 r1;
        int i0;
        androidx.paging.PagedList$Config$Builder $r2, $r3;
        androidx.paging.PagedList$Config $r4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pagingSourceFactory");

        $r2 = new androidx.paging.PagedList$Config$Builder;

        specialinvoke $r2.<androidx.paging.PagedList$Config$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<androidx.paging.PagedList$Config$Builder: androidx.paging.PagedList$Config$Builder setPageSize(int)>(i0);

        $r4 = virtualinvoke $r3.<androidx.paging.PagedList$Config$Builder: androidx.paging.PagedList$Config build()>();

        specialinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder: void <init>(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config)>(r1, $r4);

        return;
    }

    public void <init>(androidx.paging.DataSource$Factory, androidx.paging.PagedList$Config)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0;
        androidx.paging.DataSource$Factory r1;
        androidx.paging.PagedList$Config r2;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: androidx.paging.DataSource$Factory;

        r2 := @parameter1: androidx.paging.PagedList$Config;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataSourceFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.rxjava3.RxPagedListBuilder: kotlin.jvm.functions.Function0 pagingSourceFactory> = null;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.DataSource$Factory dataSourceFactory> = r1;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.PagedList$Config config> = r2;

        return;
    }

    public void <init>(androidx.paging.DataSource$Factory, int)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0;
        androidx.paging.DataSource$Factory r1;
        int i0;
        androidx.paging.PagedList$Config$Builder $r2, $r3;
        androidx.paging.PagedList$Config $r4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: androidx.paging.DataSource$Factory;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataSourceFactory");

        $r2 = new androidx.paging.PagedList$Config$Builder;

        specialinvoke $r2.<androidx.paging.PagedList$Config$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<androidx.paging.PagedList$Config$Builder: androidx.paging.PagedList$Config$Builder setPageSize(int)>(i0);

        $r4 = virtualinvoke $r3.<androidx.paging.PagedList$Config$Builder: androidx.paging.PagedList$Config build()>();

        specialinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder: void <init>(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config)>(r1, $r4);

        return;
    }

    public final androidx.paging.rxjava3.RxPagedListBuilder setInitialLoadKey(java.lang.Object)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0, r2, $r3, $r4;
        java.lang.Object r1;
        boolean z0, z1;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.paging.rxjava3.RxPagedListBuilder) r2;

        $r3.<androidx.paging.rxjava3.RxPagedListBuilder: java.lang.Object initialLoadKey> = r1;

        $r4 = (androidx.paging.rxjava3.RxPagedListBuilder) r2;

        return $r4;
    }

    public final androidx.paging.rxjava3.RxPagedListBuilder setBoundaryCallback(androidx.paging.PagedList$BoundaryCallback)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0, r2, $r3, $r4;
        androidx.paging.PagedList$BoundaryCallback r1;
        boolean z0, z1;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: androidx.paging.PagedList$BoundaryCallback;

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.paging.rxjava3.RxPagedListBuilder) r2;

        $r3.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.PagedList$BoundaryCallback boundaryCallback> = r1;

        $r4 = (androidx.paging.rxjava3.RxPagedListBuilder) r2;

        return $r4;
    }

    public final androidx.paging.rxjava3.RxPagedListBuilder setNotifyScheduler(io.reactivex.rxjava3.core.Scheduler)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0, r2, $r3, $r5;
        io.reactivex.rxjava3.core.Scheduler r1;
        boolean z0, z1;
        kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher $r4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scheduler");

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.paging.rxjava3.RxPagedListBuilder) r2;

        $r3.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Scheduler notifyScheduler> = r1;

        $r4 = staticinvoke <kotlinx.coroutines.rx3.RxSchedulerKt: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher asCoroutineDispatcher(io.reactivex.rxjava3.core.Scheduler)>(r1);

        $r3.<androidx.paging.rxjava3.RxPagedListBuilder: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher notifyDispatcher> = $r4;

        $r5 = (androidx.paging.rxjava3.RxPagedListBuilder) r2;

        return $r5;
    }

    public final androidx.paging.rxjava3.RxPagedListBuilder setFetchScheduler(io.reactivex.rxjava3.core.Scheduler)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0, r2, $r3, $r5;
        io.reactivex.rxjava3.core.Scheduler r1;
        boolean z0, z1;
        kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher $r4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scheduler");

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.paging.rxjava3.RxPagedListBuilder) r2;

        $r3.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Scheduler fetchScheduler> = r1;

        $r4 = staticinvoke <kotlinx.coroutines.rx3.RxSchedulerKt: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher asCoroutineDispatcher(io.reactivex.rxjava3.core.Scheduler)>(r1);

        $r3.<androidx.paging.rxjava3.RxPagedListBuilder: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher fetchDispatcher> = $r4;

        $r5 = (androidx.paging.rxjava3.RxPagedListBuilder) r2;

        return $r5;
    }

    public final io.reactivex.rxjava3.core.Observable buildObservable()
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0;
        io.reactivex.rxjava3.core.Scheduler r1, r17, $r19, r23, $r25, r26;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r2;
        kotlinx.coroutines.CoroutineDispatcher $r3, $r4, $r14;
        androidx.paging.PagedList$BoundaryCallback $r5;
        androidx.paging.PagedList$Config $r6;
        java.lang.Object $r7;
        io.reactivex.rxjava3.core.ObservableOnSubscribe $r8;
        io.reactivex.rxjava3.core.Observable $r9, $r10, r35;
        java.lang.IllegalStateException $r11;
        java.lang.String $r12, r34;
        java.lang.Throwable $r13;
        androidx.paging.rxjava3.ScheduledExecutor $r15, $r16;
        java.util.concurrent.Executor r18, r24;
        kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher r20, $r21, r22, r27, $r28, r29;
        kotlin.jvm.functions.Function0 r30, $r32, r33;
        androidx.paging.DataSource$Factory r31;
        boolean $z1, z2, z3, z4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r17 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Scheduler notifyScheduler>;

        if r17 != null goto label01;

        $r16 = new androidx.paging.rxjava3.ScheduledExecutor;

        r18 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r18, "getMainThreadExecutor()");

        specialinvoke $r16.<androidx.paging.rxjava3.ScheduledExecutor: void <init>(java.util.concurrent.Executor)>(r18);

        $r19 = (io.reactivex.rxjava3.core.Scheduler) $r16;

        goto label02;

     label01:
        $r19 = r17;

     label02:
        r1 = $r19;

        r20 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher notifyDispatcher>;

        if r20 != null goto label03;

        $r21 = staticinvoke <kotlinx.coroutines.rx3.RxSchedulerKt: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher asCoroutineDispatcher(io.reactivex.rxjava3.core.Scheduler)>(r1);

        goto label04;

     label03:
        $r21 = r20;

     label04:
        r22 = $r21;

        r23 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Scheduler fetchScheduler>;

        if r23 != null goto label05;

        $r15 = new androidx.paging.rxjava3.ScheduledExecutor;

        r24 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r24, "getIOThreadExecutor()");

        specialinvoke $r15.<androidx.paging.rxjava3.ScheduledExecutor: void <init>(java.util.concurrent.Executor)>(r24);

        $r25 = (io.reactivex.rxjava3.core.Scheduler) $r15;

        goto label06;

     label05:
        $r25 = r23;

     label06:
        r26 = $r25;

        r27 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher fetchDispatcher>;

        if r27 != null goto label07;

        $r28 = staticinvoke <kotlinx.coroutines.rx3.RxSchedulerKt: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher asCoroutineDispatcher(io.reactivex.rxjava3.core.Scheduler)>(r26);

        goto label08;

     label07:
        $r28 = r27;

     label08:
        r29 = $r28;

        r30 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: kotlin.jvm.functions.Function0 pagingSourceFactory>;

        if r30 != null goto label10;

        r31 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.DataSource$Factory dataSourceFactory>;

        if r31 != null goto label09;

        $r32 = null;

        goto label11;

     label09:
        $r14 = (kotlinx.coroutines.CoroutineDispatcher) r29;

        $r32 = virtualinvoke r31.<androidx.paging.DataSource$Factory: kotlin.jvm.functions.Function0 asPagingSourceFactory(kotlinx.coroutines.CoroutineDispatcher)>($r14);

        goto label11;

     label10:
        $r32 = r30;

     label11:
        r33 = $r32;

        if r33 == null goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        z2 = $z1;

        z3 = 0;

        z4 = 0;

        if z2 != 0 goto label14;

        r34 = "RxPagedList cannot be built without a PagingSourceFactory or DataSource.Factory";

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke r34.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label14:
        $r2 = new androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r7 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: java.lang.Object initialLoadKey>;

        $r6 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.PagedList$Config config>;

        $r5 = r0.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.PagedList$BoundaryCallback boundaryCallback>;

        $r4 = (kotlinx.coroutines.CoroutineDispatcher) r22;

        $r3 = (kotlinx.coroutines.CoroutineDispatcher) r29;

        specialinvoke $r2.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: void <init>(java.lang.Object,androidx.paging.PagedList$Config,androidx.paging.PagedList$BoundaryCallback,kotlin.jvm.functions.Function0,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>($r7, $r6, $r5, r33, $r4, $r3);

        $r8 = (io.reactivex.rxjava3.core.ObservableOnSubscribe) $r2;

        $r9 = staticinvoke <io.reactivex.rxjava3.core.Observable: io.reactivex.rxjava3.core.Observable create(io.reactivex.rxjava3.core.ObservableOnSubscribe)>($r8);

        $r10 = virtualinvoke $r9.<io.reactivex.rxjava3.core.Observable: io.reactivex.rxjava3.core.Observable observeOn(io.reactivex.rxjava3.core.Scheduler)>(r1);

        r35 = virtualinvoke $r10.<io.reactivex.rxjava3.core.Observable: io.reactivex.rxjava3.core.Observable subscribeOn(io.reactivex.rxjava3.core.Scheduler)>(r26);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r35, "create(\n                \u2026bscribeOn(fetchScheduler)");

        return r35;
    }

    public final io.reactivex.rxjava3.core.Flowable buildFlowable(io.reactivex.rxjava3.core.BackpressureStrategy)
    {
        androidx.paging.rxjava3.RxPagedListBuilder r0;
        io.reactivex.rxjava3.core.BackpressureStrategy r1;
        io.reactivex.rxjava3.core.Flowable r2;
        io.reactivex.rxjava3.core.Observable $r3;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder;

        r1 := @parameter0: io.reactivex.rxjava3.core.BackpressureStrategy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "backpressureStrategy");

        $r3 = virtualinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Observable buildObservable()>();

        r2 = virtualinvoke $r3.<io.reactivex.rxjava3.core.Observable: io.reactivex.rxjava3.core.Flowable toFlowable(io.reactivex.rxjava3.core.BackpressureStrategy)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "buildObservable().toFlowable(backpressureStrategy)");

        return r2;
    }

androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>
    void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1 r0;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r1;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1;

        $r1 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1 r0;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r1;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1;

        $r1 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: void access$invalidate(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe,boolean)>($r1, 1);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1;

        virtualinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: int label>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>
    void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe, kotlin.coroutines.Continuation)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1 r0;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1;

        $r1 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1 r0;
        java.lang.Object $r1;
        int $i0;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r3;
        androidx.paging.PagedList $r4;
        androidx.paging.LoadState$Loading $r5;
        androidx.paging.LoadState $r6;
        androidx.paging.LoadType $r7;
        kotlin.Unit $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r4 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList access$getCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r3);

        $r7 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r5 = <androidx.paging.LoadState$Loading: androidx.paging.LoadState$Loading INSTANCE>;

        $r6 = (androidx.paging.LoadState) $r5;

        virtualinvoke $r4.<androidx.paging.PagedList: void setInitialLoadState(androidx.paging.LoadType,androidx.paging.LoadState)>($r7, $r6);

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label2:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1;

        $r4 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        specialinvoke $r3.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object L$0>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object L$1>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: int label>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>
    void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe, kotlin.coroutines.Continuation)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1 r0;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1;

        $r1 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1 r0;
        java.lang.Object $r1, r6, $r7, $r37, $r50, $r60, r66, $r67;
        androidx.paging.PagingSource$LoadParams r2;
        androidx.paging.PagingSource$LoadResult r3;
        androidx.paging.PagedList r4, $r22, $r26, $r33, $r39, $r44;
        io.reactivex.rxjava3.core.ObservableEmitter r5, $r68;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        kotlinx.coroutines.GlobalScope $r8;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r9, $r14, $r16, $r18, $r20, $r21, $r23, $r24, $r25, $r32, $r38, $r40, $r43, $r46, $r48, $r51, $r53, $r56, $r61;
        androidx.paging.PagedList$Companion $r10;
        androidx.paging.PagingSource$LoadResult$Page $r11;
        kotlinx.coroutines.CoroutineScope $r12;
        kotlinx.coroutines.CoroutineDispatcher $r13, $r15, $r54;
        androidx.paging.PagedList$BoundaryCallback $r17;
        androidx.paging.PagedList$Config $r19, $r41, $r63;
        androidx.paging.LoadState$Error $r27;
        androidx.paging.PagingSource$LoadResult$Error $r28;
        androidx.paging.LoadType $r29, $r35;
        java.lang.Throwable $r30;
        androidx.paging.LoadState $r31, $r36;
        androidx.paging.LoadState$NotLoading $r34;
        kotlin.coroutines.Continuation $r42, $r59;
        androidx.paging.PagingSource $r45, r65;
        kotlin.jvm.functions.Function0 $r47, $r49, $r52;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1 $r55;
        kotlin.coroutines.CoroutineContext $r57;
        kotlin.jvm.functions.Function2 $r58;
        androidx.paging.LegacyPagingSource $r62;
        java.lang.IllegalStateException $r64;
        kotlin.Unit $r69;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1;

        $r1 := @parameter0: java.lang.Object;

        r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label05;
            default: goto label12;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r43 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r44 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList access$getCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r43);

        $r45 = virtualinvoke $r44.<androidx.paging.PagedList: androidx.paging.PagingSource getPagingSource()>();

        $r46 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r47 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 access$getCallback$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r46);

        virtualinvoke $r45.<androidx.paging.PagingSource: void unregisterInvalidatedCallback(kotlin.jvm.functions.Function0)>($r47);

        $r48 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r49 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 access$getPagingSourceFactory$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r48);

        $r50 = interfaceinvoke $r49.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r65 = (androidx.paging.PagingSource) $r50;

        $r51 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r52 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 access$getCallback$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r51);

        virtualinvoke r65.<androidx.paging.PagingSource: void registerInvalidatedCallback(kotlin.jvm.functions.Function0)>($r52);

        $z3 = r65 instanceof androidx.paging.LegacyPagingSource;

        if $z3 == 0 goto label02;

        $r62 = (androidx.paging.LegacyPagingSource) r65;

        $r61 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r63 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$Config access$getConfig$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r61);

        $i1 = $r63.<androidx.paging.PagedList$Config: int pageSize>;

        virtualinvoke $r62.<androidx.paging.LegacyPagingSource: void setPageSize(int)>($i1);

     label02:
        $r53 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r54 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher access$getNotifyDispatcher$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r53);

        $r57 = (kotlin.coroutines.CoroutineContext) $r54;

        $r55 = new androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1;

        $r56 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        specialinvoke $r55.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1$1: void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe,kotlin.coroutines.Continuation)>($r56, null);

        $r58 = (kotlin.jvm.functions.Function2) $r55;

        $r59 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object L$0> = r65;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: int label> = 1;

        $r60 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r57, $r58, $r59);

        if $r60 != r6 goto label04;

        return r6;

     label03:
        $r37 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object L$0>;

        r65 = (androidx.paging.PagingSource) $r37;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label04:
        $r38 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r39 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList access$getCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r38);

        r66 = virtualinvoke $r39.<androidx.paging.PagedList: java.lang.Object getLastKey()>();

        $r40 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r41 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$Config access$getConfig$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r40);

        r2 = staticinvoke <androidx.paging.PagingSourceKt: androidx.paging.PagingSource$LoadParams toRefreshLoadParams(androidx.paging.PagedList$Config,java.lang.Object)>($r41, r66);

        $r42 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object L$0> = r65;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object L$1> = r66;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: int label> = 2;

        $r67 = virtualinvoke r65.<androidx.paging.PagingSource: java.lang.Object load(androidx.paging.PagingSource$LoadParams,kotlin.coroutines.Continuation)>(r2, $r42);

        if $r67 != r6 goto label06;

        return r6;

     label05:
        r66 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object L$1>;

        $r7 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object L$0>;

        r65 = (androidx.paging.PagingSource) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r67 = $r1;

     label06:
        r3 = (androidx.paging.PagingSource$LoadResult) $r67;

        $z0 = r3 instanceof androidx.paging.PagingSource$LoadResult$Invalid;

        if $z0 == 0 goto label07;

        $r32 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r33 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList access$getCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r32);

        $r35 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r34 = new androidx.paging.LoadState$NotLoading;

        specialinvoke $r34.<androidx.paging.LoadState$NotLoading: void <init>(boolean)>(0);

        $r36 = (androidx.paging.LoadState) $r34;

        virtualinvoke $r33.<androidx.paging.PagedList: void setInitialLoadState(androidx.paging.LoadType,androidx.paging.LoadState)>($r35, $r36);

        virtualinvoke r65.<androidx.paging.PagingSource: void invalidate()>();

        goto label11;

     label07:
        $z1 = r3 instanceof androidx.paging.PagingSource$LoadResult$Error;

        if $z1 == 0 goto label08;

        $r25 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r26 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList access$getCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r25);

        $r29 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r27 = new androidx.paging.LoadState$Error;

        $r28 = (androidx.paging.PagingSource$LoadResult$Error) r3;

        $r30 = virtualinvoke $r28.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable getThrowable()>();

        specialinvoke $r27.<androidx.paging.LoadState$Error: void <init>(java.lang.Throwable)>($r30);

        $r31 = (androidx.paging.LoadState) $r27;

        virtualinvoke $r26.<androidx.paging.PagedList: void setInitialLoadState(androidx.paging.LoadType,androidx.paging.LoadState)>($r29, $r31);

        goto label11;

     label08:
        $z2 = r3 instanceof androidx.paging.PagingSource$LoadResult$Page;

        if $z2 == 0 goto label11;

        $r10 = <androidx.paging.PagedList: androidx.paging.PagedList$Companion Companion>;

        $r11 = (androidx.paging.PagingSource$LoadResult$Page) r3;

        $r8 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        $r12 = (kotlinx.coroutines.CoroutineScope) $r8;

        $r9 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r13 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher access$getNotifyDispatcher$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r9);

        $r14 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r15 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher access$getFetchDispatcher$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r14);

        $r16 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r17 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$BoundaryCallback access$getBoundaryCallback$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r16);

        $r18 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r19 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$Config access$getConfig$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r18);

        r4 = virtualinvoke $r10.<androidx.paging.PagedList$Companion: androidx.paging.PagedList create(androidx.paging.PagingSource,androidx.paging.PagingSource$LoadResult$Page,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,androidx.paging.PagedList$BoundaryCallback,androidx.paging.PagedList$Config,java.lang.Object)>(r65, $r11, $r12, $r13, $r15, $r17, $r19, r66);

        $r21 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r20 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        $r22 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList access$getCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r20);

        staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: void access$onItemUpdate(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe,androidx.paging.PagedList,androidx.paging.PagedList)>($r21, $r22, r4);

        $r23 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: void access$setCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe,androidx.paging.PagedList)>($r23, r4);

        $r24 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        r5 = staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: io.reactivex.rxjava3.core.ObservableEmitter access$getEmitter$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>($r24);

        if r5 != null goto label09;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emitter");

        $r68 = null;

        goto label10;

     label09:
        $r68 = r5;

     label10:
        interfaceinvoke $r68.<io.reactivex.rxjava3.core.ObservableEmitter: void onNext(java.lang.Object)>(r4);

     label11:
        $r69 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r69;

     label12:
        $r64 = new java.lang.IllegalStateException;

        specialinvoke $r64.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r64;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1;

        $r4 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        specialinvoke $r3.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>
    void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1 r0;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r1;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1;

        $r1 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void run()
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1 r0;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r1;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1;

        $r1 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe this$0>;

        staticinvoke <androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: void access$invalidate(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe,boolean)>($r1, 1);

        return;
    }

androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$Config config>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$BoundaryCallback boundaryCallback>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 pagingSourceFactory>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: boolean firstSubscribe>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList currentData>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.Job currentJob>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: io.reactivex.rxjava3.core.ObservableEmitter emitter>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 callback>
<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: java.lang.Runnable refreshRetryCallback>
    public void <init>(java.lang.Object, androidx.paging.PagedList$Config, androidx.paging.PagedList$BoundaryCallback, kotlin.jvm.functions.Function0, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe r0;
        java.lang.Object r1;
        androidx.paging.PagedList$Config r2, $r13;
        androidx.paging.PagedList$BoundaryCallback r3;
        kotlin.jvm.functions.Function0 r4, $r8;
        kotlinx.coroutines.CoroutineDispatcher r5, r6, $r14, $r15;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1 $r7;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1 $r9;
        java.lang.Runnable $r10, $r18;
        androidx.paging.InitialPagedList $r11;
        kotlinx.coroutines.GlobalScope $r12;
        kotlinx.coroutines.CoroutineScope $r16;
        androidx.paging.PagedList $r17, $r19;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.paging.PagedList$Config;

        r3 := @parameter2: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter3: kotlin.jvm.functions.Function0;

        r5 := @parameter4: kotlinx.coroutines.CoroutineDispatcher;

        r6 := @parameter5: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "pagingSourceFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "notifyDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "fetchDispatcher");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$Config config> = r2;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$BoundaryCallback boundaryCallback> = r3;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 pagingSourceFactory> = r4;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher> = r5;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher> = r6;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: boolean firstSubscribe> = 1;

        $r7 = new androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1;

        specialinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$callback$1: void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 callback> = $r8;

        $r9 = new androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1;

        specialinvoke $r9.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$refreshRetryCallback$1: void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)>(r0);

        $r10 = (java.lang.Runnable) $r9;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: java.lang.Runnable refreshRetryCallback> = $r10;

        $r11 = new androidx.paging.InitialPagedList;

        $r12 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        $r16 = (kotlinx.coroutines.CoroutineScope) $r12;

        $r15 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher>;

        $r14 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>;

        $r13 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$Config config>;

        specialinvoke $r11.<androidx.paging.InitialPagedList: void <init>(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,androidx.paging.PagedList$Config,java.lang.Object)>($r16, $r15, $r14, $r13, r1);

        $r17 = (androidx.paging.PagedList) $r11;

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList currentData> = $r17;

        $r19 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList currentData>;

        $r18 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: java.lang.Runnable refreshRetryCallback>;

        virtualinvoke $r19.<androidx.paging.PagedList: void setRetryCallback(java.lang.Runnable)>($r18);

        return;
    }

    public void subscribe(io.reactivex.rxjava3.core.ObservableEmitter)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe r0;
        io.reactivex.rxjava3.core.ObservableEmitter r1;
        io.reactivex.rxjava3.functions.Cancellable $r2;
        boolean $z0;
        androidx.paging.PagedList $r3;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        r1 := @parameter0: io.reactivex.rxjava3.core.ObservableEmitter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "emitter");

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: io.reactivex.rxjava3.core.ObservableEmitter emitter> = r1;

        $r2 = (io.reactivex.rxjava3.functions.Cancellable) r0;

        interfaceinvoke r1.<io.reactivex.rxjava3.core.ObservableEmitter: void setCancellable(io.reactivex.rxjava3.functions.Cancellable)>($r2);

        $z0 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: boolean firstSubscribe>;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList currentData>;

        interfaceinvoke r1.<io.reactivex.rxjava3.core.ObservableEmitter: void onNext(java.lang.Object)>($r3);

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: boolean firstSubscribe> = 0;

     label1:
        specialinvoke r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: void invalidate(boolean)>(0);

        return;
    }

    public void cancel()
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe r0;
        androidx.paging.PagedList $r1;
        androidx.paging.PagingSource $r2;
        kotlin.jvm.functions.Function0 $r3;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList currentData>;

        $r2 = virtualinvoke $r1.<androidx.paging.PagedList: androidx.paging.PagingSource getPagingSource()>();

        $r3 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 callback>;

        virtualinvoke $r2.<androidx.paging.PagingSource: void unregisterInvalidatedCallback(kotlin.jvm.functions.Function0)>($r3);

        return;
    }

    private final void invalidate(boolean)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe r0;
        boolean z0;
        kotlinx.coroutines.Job r1, $r2, $r9;
        kotlinx.coroutines.GlobalScope $r3;
        kotlinx.coroutines.CoroutineDispatcher $r4;
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1 $r5;
        kotlinx.coroutines.CoroutineScope $r6;
        kotlin.coroutines.CoroutineContext $r7;
        kotlin.jvm.functions.Function2 $r8;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.Job currentJob>;

        if $r2 == null goto label1;

        if z0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.Job currentJob>;

        if r1 != null goto label2;

        goto label3;

     label2:
        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>(r1, null, 1, null);

     label3:
        $r3 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        $r6 = (kotlinx.coroutines.CoroutineScope) $r3;

        $r4 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>;

        $r7 = (kotlin.coroutines.CoroutineContext) $r4;

        $r5 = new androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1;

        specialinvoke $r5.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe$invalidate$1: void <init>(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe,kotlin.coroutines.Continuation)>(r0, null);

        $r8 = (kotlin.jvm.functions.Function2) $r5;

        $r9 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r6, $r7, null, $r8, 2, null);

        r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.Job currentJob> = $r9;

        return;
    }

    private final void onItemUpdate(androidx.paging.PagedList, androidx.paging.PagedList)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe r0;
        androidx.paging.PagedList r1, r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        r1 := @parameter0: androidx.paging.PagedList;

        r2 := @parameter1: androidx.paging.PagedList;

        virtualinvoke r1.<androidx.paging.PagedList: void setRetryCallback(java.lang.Runnable)>(null);

        $r3 = r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: java.lang.Runnable refreshRetryCallback>;

        virtualinvoke r2.<androidx.paging.PagedList: void setRetryCallback(java.lang.Runnable)>($r3);

        return;
    }

    public static final androidx.paging.PagedList access$getCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        androidx.paging.PagedList $r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList currentData>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function0 access$getCallback$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 callback>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function0 access$getPagingSourceFactory$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlin.jvm.functions.Function0 pagingSourceFactory>;

        return $r1;
    }

    public static final androidx.paging.PagedList$Config access$getConfig$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        androidx.paging.PagedList$Config $r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$Config config>;

        return $r1;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher access$getNotifyDispatcher$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        kotlinx.coroutines.CoroutineDispatcher $r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher>;

        return $r1;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher access$getFetchDispatcher$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        kotlinx.coroutines.CoroutineDispatcher $r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>;

        return $r1;
    }

    public static final androidx.paging.PagedList$BoundaryCallback access$getBoundaryCallback$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        androidx.paging.PagedList$BoundaryCallback $r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList$BoundaryCallback boundaryCallback>;

        return $r1;
    }

    public static final void access$onItemUpdate(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe, androidx.paging.PagedList, androidx.paging.PagedList)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        androidx.paging.PagedList r1, r2;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        r1 := @parameter1: androidx.paging.PagedList;

        r2 := @parameter2: androidx.paging.PagedList;

        specialinvoke $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: void onItemUpdate(androidx.paging.PagedList,androidx.paging.PagedList)>(r1, r2);

        return;
    }

    public static final void access$setCurrentData$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe, androidx.paging.PagedList)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        androidx.paging.PagedList r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        r1 := @parameter1: androidx.paging.PagedList;

        $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: androidx.paging.PagedList currentData> = r1;

        return;
    }

    public static final io.reactivex.rxjava3.core.ObservableEmitter access$getEmitter$p(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        io.reactivex.rxjava3.core.ObservableEmitter $r1;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        $r1 = $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: io.reactivex.rxjava3.core.ObservableEmitter emitter>;

        return $r1;
    }

    public static final void access$invalidate(androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe, boolean)
    {
        androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe $r0;
        boolean z0;

        $r0 := @parameter0: androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe;

        z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.paging.rxjava3.RxPagedListBuilder$PagingObservableOnSubscribe: void invalidate(boolean)>(z0);

        return;
    }

