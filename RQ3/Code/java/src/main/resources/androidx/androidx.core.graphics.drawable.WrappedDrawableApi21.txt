androidx.core.graphics.drawable.WrappedDrawableApi21
<androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.String TAG>
<androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod>
    void <init>(android.graphics.drawable.Drawable)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)>(r1);

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()>();

        return;
    }

    void <init>(androidx.core.graphics.drawable.WrappedDrawableState, android.content.res.Resources)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        androidx.core.graphics.drawable.WrappedDrawableState r1;
        android.content.res.Resources r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        r1 := @parameter0: androidx.core.graphics.drawable.WrappedDrawableState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>(r1, r2);

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()>();

        return;
    }

    public void setHotspot(float, float)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        float f0, f1;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void getOutline(android.graphics.Outline)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        android.graphics.Outline r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

        return;
    }

    public android.graphics.Rect getDirtyBounds()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.Rect $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>();

        return $r2;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        android.content.res.ColorStateList r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        r1 := @parameter0: android.content.res.ColorStateList;

        $z0 = virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)>(r1);

        goto label2;

     label1:
        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>(r1);

     label2:
        return;
    }

    public void setTint(int)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        int i0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setTint(int)>(i0);

        goto label2;

     label1:
        $r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setTint(int)>(i0);

     label2:
        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        android.graphics.PorterDuff$Mode r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $z0 = virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)>(r1);

        goto label2;

     label1:
        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>(r1);

     label2:
        return;
    }

    public boolean setState(int[])
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        int[] r1;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        r1 := @parameter0: int[];

        $z0 = specialinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: void invalidateSelf()>();

        return 1;

     label1:
        return 0;
    }

    protected boolean isCompatTintEnabled()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        android.graphics.drawable.Drawable r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 21 goto label4;

        r1 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        $z0 = r1 instanceof android.graphics.drawable.GradientDrawable;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof android.graphics.drawable.DrawableContainer;

        if $z1 != 0 goto label1;

        $z2 = r1 instanceof android.graphics.drawable.InsetDrawable;

        if $z2 != 0 goto label1;

        $z3 = r1 instanceof android.graphics.drawable.RippleDrawable;

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        return 0;
    }

    public boolean isProjected()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        java.lang.Throwable r1, $r9;
        android.graphics.drawable.Drawable $r2, $r5;
        java.lang.reflect.Method $r3, $r6;
        java.lang.Object[] $r4;
        java.lang.Object $r7;
        java.lang.Boolean $r8;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        $r2 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label4;

        $r3 = <androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod>;

        if $r3 == null goto label4;

     label1:
        $r6 = <androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod>;

        $r5 = r0.<androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.drawable.Drawable mDrawable>;

        $r4 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r4);

        $r8 = (java.lang.Boolean) $r7;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WrappedDrawableApi21", "Error calling Drawable#isProjected() method", r1);

     label4:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void findAndCacheIsProjectedDrawableMethod()
    {
        androidx.core.graphics.drawable.WrappedDrawableApi21 r0;
        java.lang.Throwable r1, $r6;
        java.lang.reflect.Method $r2, $r5;
        java.lang.Class[] $r3;
        java.lang.Class $r4;

        r0 := @this: androidx.core.graphics.drawable.WrappedDrawableApi21;

        $r2 = <androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod>;

        if $r2 != null goto label4;

     label1:
        $r4 = class "Landroid/graphics/drawable/Drawable;";

        $r3 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isProjected", $r3);

        <androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod> = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WrappedDrawableApi21", "Failed to retrieve Drawable#isProjected() method", r1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

