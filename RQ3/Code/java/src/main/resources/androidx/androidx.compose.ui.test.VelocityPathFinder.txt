androidx.compose.ui.test.VelocityPathFinder
<androidx.compose.ui.test.VelocityPathFinder: androidx.compose.ui.test.VelocityPathFinder$Companion Companion>
<androidx.compose.ui.test.VelocityPathFinder: long startPosition>
<androidx.compose.ui.test.VelocityPathFinder: long endPosition>
<androidx.compose.ui.test.VelocityPathFinder: float endVelocity>
<androidx.compose.ui.test.VelocityPathFinder: long durationMillis>
<androidx.compose.ui.test.VelocityPathFinder: double vx>
<androidx.compose.ui.test.VelocityPathFinder: double vy>
<androidx.compose.ui.test.VelocityPathFinder: long HorizonMilliseconds>
<androidx.compose.ui.test.VelocityPathFinder: long DefaultDurationMilliseconds>
    private void <init>(long, long, float, long)
    {
        androidx.compose.ui.test.VelocityPathFinder r0;
        long l0, l1, l2, l3, $l4, $l5;
        float f0, $f1, $f2, $f3, $f4;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        l2 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.VelocityPathFinder: long startPosition> = l0;

        r0.<androidx.compose.ui.test.VelocityPathFinder: long endPosition> = l1;

        r0.<androidx.compose.ui.test.VelocityPathFinder: float endVelocity> = f0;

        r0.<androidx.compose.ui.test.VelocityPathFinder: long durationMillis> = l2;

        $l5 = r0.<androidx.compose.ui.test.VelocityPathFinder: long endPosition>;

        $l4 = r0.<androidx.compose.ui.test.VelocityPathFinder: long startPosition>;

        l3 = staticinvoke <androidx.compose.ui.geometry.Offset: long minus-MK-Hz9U(long,long)>($l5, $l4);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l3);

        $d1 = (double) $f1;

        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l3);

        $d2 = (double) $f2;

        d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d2);

        $d3 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $f3 = r0.<androidx.compose.ui.test.VelocityPathFinder: float endVelocity>;

        $d4 = (double) $f3;

        $d6 = $d3 * $d4;

        $d5 = (double) 1000;

        $d7 = $d6 / $d5;

        r0.<androidx.compose.ui.test.VelocityPathFinder: double vx> = $d7;

        $d8 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $f4 = r0.<androidx.compose.ui.test.VelocityPathFinder: float endVelocity>;

        $d9 = (double) $f4;

        $d11 = $d8 * $d9;

        $d10 = (double) 1000;

        $d12 = $d11 / $d10;

        r0.<androidx.compose.ui.test.VelocityPathFinder: double vy> = $d12;

        return;
    }

    public final long getStartPosition-F1C5BW0()
    {
        androidx.compose.ui.test.VelocityPathFinder r0;
        long $l0;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder;

        $l0 = r0.<androidx.compose.ui.test.VelocityPathFinder: long startPosition>;

        return $l0;
    }

    public final long getEndPosition-F1C5BW0()
    {
        androidx.compose.ui.test.VelocityPathFinder r0;
        long $l0;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder;

        $l0 = r0.<androidx.compose.ui.test.VelocityPathFinder: long endPosition>;

        return $l0;
    }

    public final float getEndVelocity()
    {
        androidx.compose.ui.test.VelocityPathFinder r0;
        float $f0;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder;

        $f0 = r0.<androidx.compose.ui.test.VelocityPathFinder: float endVelocity>;

        return $f0;
    }

    public final long getDurationMillis()
    {
        androidx.compose.ui.test.VelocityPathFinder r0;
        long $l0;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder;

        $l0 = r0.<androidx.compose.ui.test.VelocityPathFinder: long durationMillis>;

        return $l0;
    }

    public final kotlin.jvm.functions.Function1 generateFunction()
    {
        androidx.compose.ui.test.VelocityPathFinder r0;
        kotlin.jvm.functions.Function1 r1, r2, $r4, $r6, $r8;
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1 $r3;
        double $d0, $d1;
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1 $r5;
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$1 $r7;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder;

        $d0 = r0.<androidx.compose.ui.test.VelocityPathFinder: double vx>;

        $r3 = <androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        r1 = specialinvoke r0.<androidx.compose.ui.test.VelocityPathFinder: kotlin.jvm.functions.Function1 createFunctionForVelocity(double,kotlin.jvm.functions.Function1)>($d0, $r4);

        $d1 = r0.<androidx.compose.ui.test.VelocityPathFinder: double vy>;

        $r5 = <androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1 INSTANCE>;

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        r2 = specialinvoke r0.<androidx.compose.ui.test.VelocityPathFinder: kotlin.jvm.functions.Function1 createFunctionForVelocity(double,kotlin.jvm.functions.Function1)>($d1, $r6);

        $r7 = new androidx.compose.ui.test.VelocityPathFinder$generateFunction$1;

        specialinvoke $r7.<androidx.compose.ui.test.VelocityPathFinder$generateFunction$1: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r1, r2);

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        return $r8;
    }

    private final kotlin.jvm.functions.Function1 createFunctionForVelocity(double, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.VelocityPathFinder r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        kotlin.jvm.functions.Function1 r1, $r9;
        long l0, $l1, $l2, $l4, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        androidx.compose.ui.geometry.Offset $r2, $r5;
        java.lang.Object $r3, $r6;
        java.lang.Number $r4, $r7;
        byte $b3, $b5;
        androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2 $r8;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.String $r12, $r15, $r29, $r30;
        java.lang.IllegalArgumentException $r28;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder;

        d0 := @parameter0: double;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        l0 = r0.<androidx.compose.ui.test.VelocityPathFinder: long durationMillis>;

        $l1 = r0.<androidx.compose.ui.test.VelocityPathFinder: long startPosition>;

        $r2 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l1);

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $l2 = r0.<androidx.compose.ui.test.VelocityPathFinder: long endPosition>;

        $r5 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l2);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Number) $r6;

        f1 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        $b3 = f0 cmpg f1;

        if $b3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $d18 = (double) l0;

        goto label4;

     label3:
        $d9 = (double) l0;

        $d5 = (double) 2;

        $d7 = $d5 / d0;

        $f5 = f1 - f0;

        $d6 = (double) $f5;

        $d8 = $d7 * $d6;

        $d18 = staticinvoke <java.lang.Math: double min(double,double)>($d9, $d8);

     label4:
        d1 = $d18;

        $d11 = (double) f0;

        $d10 = d0 * d1;

        $d13 = $d11 + $d10;

        $d12 = (double) f1;

        $d15 = $d13 - $d12;

        $d14 = d1 * d1;

        d2 = $d15 / $d14;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>(l0, 100L);

        $d16 = (double) $l4;

        $b5 = d1 cmpl $d16;

        if $b5 < 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        if $z1 != 0 goto label7;

        $l7 = r0.<androidx.compose.ui.test.VelocityPathFinder: long endPosition>;

        $l6 = r0.<androidx.compose.ui.test.VelocityPathFinder: long startPosition>;

        $l8 = staticinvoke <androidx.compose.ui.geometry.Offset: long minus-MK-Hz9U(long,long)>($l7, $l6);

        f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getDistance-impl(long)>($l8);

        d4 = d1;

        $l9 = staticinvoke <java.lang.Math: long min(long,long)>(l0, 100L);

        $f6 = (float) $l9;

        $f7 = 2.0F / $f6;

        $f9 = $f7 * f2;

        $f8 = (float) 1000;

        f3 = $f9 * $f8;

        $l10 = staticinvoke <java.lang.Math: long min(long,long)>(l0, 100L);

        $f10 = (float) $l10;

        $f12 = $f10 / 2.0F;

        $f11 = r0.<androidx.compose.ui.test.VelocityPathFinder: float endVelocity>;

        $f14 = $f12 * $f11;

        $f13 = (float) 1000;

        f4 = $f14 / $f13;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to generate a swipe gesture between ");

        $l11 = r0.<androidx.compose.ui.test.VelocityPathFinder: long startPosition>;

        $r12 = staticinvoke <androidx.compose.ui.geometry.Offset: java.lang.String toString-impl(long)>($l11);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $l12 = r0.<androidx.compose.ui.test.VelocityPathFinder: long endPosition>;

        $r15 = staticinvoke <androidx.compose.ui.geometry.Offset: java.lang.String toString-impl(long)>($l12);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with duration ");

        $l13 = r0.<androidx.compose.ui.test.VelocityPathFinder: long durationMillis>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that ends with velocity of ");

        $f15 = r0.<androidx.compose.ui.test.VelocityPathFinder: float endVelocity>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f15);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" px/s, without going outside of the range [start..end]. Suggested fixes: 1. set duration to ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or lower; 2. set velocity to ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" px/s or lower; or 3. increase the distance between the start and end to ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or higher");

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.IllegalArgumentException;

        $r29 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label7:
        $d17 = (double) l0;

        d3 = $d17 - d1;

        $r8 = new androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2;

        specialinvoke $r8.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: void <init>(double,float,double,long,double,float)>(d3, f0, d2, l0, d0, f1);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        return $r9;
    }

    public void <init>(long, long, float, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.test.VelocityPathFinder r0;
        long l0, l1, l2;
        float f0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        l2 := @parameter3: long;

        $r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.test.VelocityPathFinder: void <init>(long,long,float,long)>(l0, l1, f0, l2);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.ui.test.VelocityPathFinder$Companion $r0;

        $r0 = new androidx.compose.ui.test.VelocityPathFinder$Companion;

        specialinvoke $r0.<androidx.compose.ui.test.VelocityPathFinder$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.test.VelocityPathFinder: androidx.compose.ui.test.VelocityPathFinder$Companion Companion> = $r0;

        return;
    }

androidx.compose.ui.test.VelocityPathFinder$Companion
    private void <init>()
    {
        androidx.compose.ui.test.VelocityPathFinder$Companion r0;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final long calculateDefaultDuration-Wko1d7g(long, long, float)
    {
        androidx.compose.ui.test.VelocityPathFinder$Companion r0;
        long l0, l1, l2, $l4, $l6, $l7, $l9;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        byte $b3, $b5, $b8, $b10;
        boolean $z0, $z1, $z2, $z4, $z5, $z7;
        androidx.compose.ui.test.InputDispatcher$Companion $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r24, $r25, $r26, $r27;
        java.lang.String $r4, $r7, $r17, $r23, $r29, $r30, $r31, $r32;
        java.lang.IllegalArgumentException $r16, $r22, $r28;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$Companion;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        $b3 = f0 cmpl 0.0F;

        if $b3 < 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        if $z2 != 0 goto label03;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Velocity cannot be ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", it must be positive");

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.IllegalArgumentException;

        $r29 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label03:
        $z0 = staticinvoke <androidx.compose.ui.geometry.Offset: boolean equals-impl0(long,long)>(l0, l1);

        if $z0 == 0 goto label06;

        $b10 = f0 cmpg 0.0F;

        if $b10 != 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        if $z4 == 0 goto label07;

     label06:
        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        if $z5 != 0 goto label09;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("When start == end; velocity cannot be ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", it must be 0f");

        $r31 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label09:
        $l4 = staticinvoke <androidx.compose.ui.geometry.Offset: long minus-MK-Hz9U(long,long)>(l1, l0);

        f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getDistance-impl(long)>($l4);

        $f4 = (float) 2;

        $f5 = $f4 / f0;

        $f7 = $f5 * f1;

        $f6 = (float) 1000;

        $f21 = $f7 * $f6;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f21);

        if $z1 != 0 goto label10;

        $b5 = $f21 cmpl 100.0F;

        if $b5 <= 0 goto label11;

     label10:
        return 200L;

     label11:
        $r1 = <androidx.compose.ui.test.InputDispatcher: androidx.compose.ui.test.InputDispatcher$Companion Companion>;

        $l6 = virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher$Companion: long getEventPeriodMillis()>();

        $f8 = (float) $l6;

        $f9 = 2.5F * $f8;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f10 = (float) $d1;

        l2 = staticinvoke <kotlin.math.MathKt: long roundToLong(float)>($f10);

        $d2 = (double) $f21;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $f11 = (float) $d3;

        $l7 = staticinvoke <kotlin.math.MathKt: long roundToLong(float)>($f11);

        $b8 = $l7 cmp l2;

        if $b8 < 0 goto label12;

        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        if $z7 != 0 goto label14;

        $f13 = (float) l2;

        $f14 = 2.0F / $f13;

        $f16 = $f14 * f1;

        $f15 = (float) 1000;

        f2 = $f16 * $f15;

        $f17 = (float) l2;

        $f18 = 0.5F * $f17;

        $f20 = $f18 * f0;

        $f19 = (float) 1000;

        f3 = $f20 / $f19;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to generate a swipe gesture between ");

        $r4 = staticinvoke <androidx.compose.ui.geometry.Offset: java.lang.String toString-impl(long)>(l0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r7 = staticinvoke <androidx.compose.ui.geometry.Offset: java.lang.String toString-impl(long)>(l1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that ends with velocity of ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" px/s, without going outside of the range [start..end]. Suggested fixes: 1. set velocity to ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" px/s or lower; or 2. increase the distance between the start and end to ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or higher");

        $r32 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label14:
        $d4 = (double) $f21;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4);

        $f12 = (float) $d5;

        $l9 = staticinvoke <kotlin.math.MathKt: long roundToLong(float)>($f12);

        return $l9;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.test.VelocityPathFinder$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.test.VelocityPathFinder$Companion: void <init>()>();

        return;
    }

androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2
<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $threshold>
<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: float $start>
<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $a>
<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: long $T>
<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $velocity>
<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: float $end>
    void <init>(double, float, double, long, double, float)
    {
        androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2 r0;
        double $d0, $d1, $d2;
        float $f0, $f1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2;

        $d0 := @parameter0: double;

        $f0 := @parameter1: float;

        $d1 := @parameter2: double;

        $l0 := @parameter3: long;

        $d2 := @parameter4: double;

        $f1 := @parameter5: float;

        r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $threshold> = $d0;

        r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: float $start> = $f0;

        r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $a> = $d1;

        r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: long $T> = $l0;

        r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $velocity> = $d2;

        r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: float $end> = $f1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Float invoke(long)
    {
        androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2 r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        byte $b1;
        float $f0, $f1, $f2;
        java.lang.Number $r1;
        java.lang.Float $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2;

        l0 := @parameter0: long;

        $d1 = (double) l0;

        $d0 = r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $threshold>;

        $b1 = $d1 cmpg $d0;

        if $b1 >= 0 goto label1;

        $f2 = r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: float $start>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        goto label2;

     label1:
        $d3 = r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $a>;

        $l2 = r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: long $T>;

        $l3 = l0 - $l2;

        $d2 = (double) $l3;

        $d5 = $d3 * $d2;

        $l4 = r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: long $T>;

        $l5 = l0 - $l4;

        $d4 = (double) $l5;

        $d9 = $d5 * $d4;

        $d7 = r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: double $velocity>;

        $l6 = r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: long $T>;

        $l7 = l0 - $l6;

        $d6 = (double) $l7;

        $d8 = $d7 * $d6;

        $d11 = $d9 + $d8;

        $f0 = r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: float $end>;

        $d10 = (double) $f0;

        $d12 = $d11 + $d10;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

     label2:
        $r1 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r1.<java.lang.Number: float floatValue()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        long $l0;
        java.lang.Float $r3;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $l0 = virtualinvoke $r2.<java.lang.Number: long longValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.ui.test.VelocityPathFinder$createFunctionForVelocity$2: java.lang.Float invoke(long)>($l0);

        return $r3;
    }

androidx.compose.ui.test.VelocityPathFinder$generateFunction$1
<androidx.compose.ui.test.VelocityPathFinder$generateFunction$1: kotlin.jvm.functions.Function1 $fx>
<androidx.compose.ui.test.VelocityPathFinder$generateFunction$1: kotlin.jvm.functions.Function1 $fy>
    void <init>(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$1 r0;
        kotlin.jvm.functions.Function1 $r1, $r2;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$generateFunction$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.ui.test.VelocityPathFinder$generateFunction$1: kotlin.jvm.functions.Function1 $fx> = $r1;

        r0.<androidx.compose.ui.test.VelocityPathFinder$generateFunction$1: kotlin.jvm.functions.Function1 $fy> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final long invoke-tuRUvjQ(long)
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$1 r0;
        long l0, $l1;
        kotlin.jvm.functions.Function1 $r1, $r5;
        java.lang.Long $r2, $r6;
        java.lang.Object $r3, $r7;
        java.lang.Number $r4, $r8;
        float $f0, $f1;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$generateFunction$1;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.VelocityPathFinder$generateFunction$1: kotlin.jvm.functions.Function1 $fx>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = r0.<androidx.compose.ui.test.VelocityPathFinder$generateFunction$1: kotlin.jvm.functions.Function1 $fy>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r7 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $r8 = (java.lang.Number) $r7;

        $f1 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $l1 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f0, $f1);

        return $l1;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        long $l0, $l1;
        androidx.compose.ui.geometry.Offset $r3;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$generateFunction$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $l0 = virtualinvoke $r2.<java.lang.Number: long longValue()>();

        $l1 = virtualinvoke r0.<androidx.compose.ui.test.VelocityPathFinder$generateFunction$1: long invoke-tuRUvjQ(long)>($l0);

        $r3 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l1);

        return $r3;
    }

androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1
<androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1 r0;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1;

        specialinvoke r0.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(java.lang.Class,java.lang.String,java.lang.String,int)>(class "Landroidx/compose/ui/geometry/Offset;", "x", "getX-impl(J)F", 0);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.geometry.Offset $r2;
        long $l0;
        float $f0;
        java.lang.Float $r3;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.geometry.Offset) r1;

        $l0 = virtualinvoke $r2.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1 $r0;

        $r0 = new androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1;

        specialinvoke $r0.<androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1: void <init>()>();

        <androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fx$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1
<androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1 r0;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1;

        specialinvoke r0.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(java.lang.Class,java.lang.String,java.lang.String,int)>(class "Landroidx/compose/ui/geometry/Offset;", "y", "getY-impl(J)F", 0);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.geometry.Offset $r2;
        long $l0;
        float $f0;
        java.lang.Float $r3;

        r0 := @this: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.geometry.Offset) r1;

        $l0 = virtualinvoke $r2.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1 $r0;

        $r0 = new androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1;

        specialinvoke $r0.<androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1: void <init>()>();

        <androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1: androidx.compose.ui.test.VelocityPathFinder$generateFunction$fy$1 INSTANCE> = $r0;

        return;
    }

