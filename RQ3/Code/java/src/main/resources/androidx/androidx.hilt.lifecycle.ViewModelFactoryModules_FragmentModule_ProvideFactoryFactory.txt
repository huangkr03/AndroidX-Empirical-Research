androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory
<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider fragmentProvider>
<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider applicationProvider>
<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider viewModelFactoriesProvider>
    public void <init>(javax.inject.Provider, javax.inject.Provider, javax.inject.Provider)
    {
        androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory r0;
        javax.inject.Provider r1, r2, r3;

        r0 := @this: androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory;

        r1 := @parameter0: javax.inject.Provider;

        r2 := @parameter1: javax.inject.Provider;

        r3 := @parameter2: javax.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider fragmentProvider> = r1;

        r0.<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider applicationProvider> = r2;

        r0.<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider viewModelFactoriesProvider> = r3;

        return;
    }

    public androidx.lifecycle.ViewModelProvider$Factory get()
    {
        androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory r0;
        javax.inject.Provider $r1, $r3, $r6;
        java.lang.Object $r2, $r5, $r8;
        androidx.fragment.app.Fragment $r4;
        android.app.Application $r7;
        java.util.Map $r9;
        androidx.lifecycle.ViewModelProvider$Factory $r10;

        r0 := @this: androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory;

        $r1 = r0.<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider fragmentProvider>;

        $r2 = interfaceinvoke $r1.<javax.inject.Provider: java.lang.Object get()>();

        $r4 = (androidx.fragment.app.Fragment) $r2;

        $r3 = r0.<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider applicationProvider>;

        $r5 = interfaceinvoke $r3.<javax.inject.Provider: java.lang.Object get()>();

        $r7 = (android.app.Application) $r5;

        $r6 = r0.<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: javax.inject.Provider viewModelFactoriesProvider>;

        $r8 = interfaceinvoke $r6.<javax.inject.Provider: java.lang.Object get()>();

        $r9 = (java.util.Map) $r8;

        $r10 = staticinvoke <androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: androidx.lifecycle.ViewModelProvider$Factory provideFactory(androidx.fragment.app.Fragment,android.app.Application,java.util.Map)>($r4, $r7, $r9);

        return $r10;
    }

    public static androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory create(javax.inject.Provider, javax.inject.Provider, javax.inject.Provider)
    {
        javax.inject.Provider r0, r1, r2;
        androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory $r3;

        r0 := @parameter0: javax.inject.Provider;

        r1 := @parameter1: javax.inject.Provider;

        r2 := @parameter2: javax.inject.Provider;

        $r3 = new androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory;

        specialinvoke $r3.<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>(r0, r1, r2);

        return $r3;
    }

    public static androidx.lifecycle.ViewModelProvider$Factory provideFactory(androidx.fragment.app.Fragment, android.app.Application, java.util.Map)
    {
        androidx.fragment.app.Fragment r0;
        android.app.Application r1;
        java.util.Map r2;
        androidx.lifecycle.ViewModelProvider$Factory $r3, $r5;
        java.lang.Object $r4;

        r0 := @parameter0: androidx.fragment.app.Fragment;

        r1 := @parameter1: android.app.Application;

        r2 := @parameter2: java.util.Map;

        $r3 = staticinvoke <androidx.hilt.lifecycle.ViewModelFactoryModules$FragmentModule: androidx.lifecycle.ViewModelProvider$Factory provideFactory(androidx.fragment.app.Fragment,android.app.Application,java.util.Map)>(r0, r1, r2);

        $r4 = staticinvoke <dagger.internal.Preconditions: java.lang.Object checkNotNullFromProvides(java.lang.Object)>($r3);

        $r5 = (androidx.lifecycle.ViewModelProvider$Factory) $r4;

        return $r5;
    }

    public volatile java.lang.Object get()
    {
        androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory r0;
        androidx.lifecycle.ViewModelProvider$Factory $r1;

        r0 := @this: androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory;

        $r1 = virtualinvoke r0.<androidx.hilt.lifecycle.ViewModelFactoryModules_FragmentModule_ProvideFactoryFactory: androidx.lifecycle.ViewModelProvider$Factory get()>();

        return $r1;
    }

