androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec
<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec: com.squareup.kotlinpoet.AnnotationSpec actual>
    public void <init>(com.squareup.kotlinpoet.AnnotationSpec)
    {
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec r0;
        com.squareup.kotlinpoet.AnnotationSpec r1;

        r0 := @this: androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec;

        r1 := @parameter0: com.squareup.kotlinpoet.AnnotationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "actual");

        specialinvoke r0.<androidx.room.compiler.codegen.kotlin.KotlinLang: void <init>()>();

        r0.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec: com.squareup.kotlinpoet.AnnotationSpec actual> = r1;

        return;
    }

    public final com.squareup.kotlinpoet.AnnotationSpec getActual$room_compiler_processing()
    {
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec r0;
        com.squareup.kotlinpoet.AnnotationSpec $r1;

        r0 := @this: androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec;

        $r1 = r0.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec: com.squareup.kotlinpoet.AnnotationSpec actual>;

        return $r1;
    }

androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder
<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder: com.squareup.kotlinpoet.AnnotationSpec$Builder actual>
    public void <init>(com.squareup.kotlinpoet.AnnotationSpec$Builder)
    {
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder r0;
        com.squareup.kotlinpoet.AnnotationSpec$Builder r1;

        r0 := @this: androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder;

        r1 := @parameter0: com.squareup.kotlinpoet.AnnotationSpec$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "actual");

        specialinvoke r0.<androidx.room.compiler.codegen.kotlin.KotlinLang: void <init>()>();

        r0.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder: com.squareup.kotlinpoet.AnnotationSpec$Builder actual> = r1;

        return;
    }

    public final com.squareup.kotlinpoet.AnnotationSpec$Builder getActual$room_compiler_processing()
    {
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder r0;
        com.squareup.kotlinpoet.AnnotationSpec$Builder $r1;

        r0 := @this: androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder;

        $r1 = r0.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder: com.squareup.kotlinpoet.AnnotationSpec$Builder actual>;

        return $r1;
    }

    public androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder addMember(java.lang.String, androidx.room.compiler.codegen.XCodeBlock)
    {
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder r0, r3, $r4, $r17;
        java.lang.String r1, r5, $r12, $r19;
        androidx.room.compiler.codegen.XCodeBlock r2;
        java.lang.Object[] r6;
        boolean $z1;
        java.lang.StringBuilder $r7, $r10, $r11;
        com.squareup.kotlinpoet.AnnotationSpec$Builder $r8;
        com.squareup.kotlinpoet.CodeBlock$Companion $r9;
        androidx.room.compiler.codegen.kotlin.KotlinCodeBlock $r13;
        com.squareup.kotlinpoet.CodeBlock $r14, $r15;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.room.compiler.codegen.XCodeBlock;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "code");

        r3 = r0;

        $r4 = (androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder) r3;

        $z1 = r2 instanceof androidx.room.compiler.codegen.kotlin.KotlinCodeBlock;

        if $z1 != 0 goto label1;

        r5 = "Failed requirement.";

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label1:
        $r8 = $r4.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder: com.squareup.kotlinpoet.AnnotationSpec$Builder actual>;

        $r9 = <com.squareup.kotlinpoet.CodeBlock: com.squareup.kotlinpoet.CodeBlock$Companion Companion>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = %L");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = newarray (java.lang.Object)[1];

        $r13 = (androidx.room.compiler.codegen.kotlin.KotlinCodeBlock) r2;

        $r14 = virtualinvoke $r13.<androidx.room.compiler.codegen.kotlin.KotlinCodeBlock: com.squareup.kotlinpoet.CodeBlock getActual$room_compiler_processing()>();

        r6[0] = $r14;

        $r15 = virtualinvoke $r9.<com.squareup.kotlinpoet.CodeBlock$Companion: com.squareup.kotlinpoet.CodeBlock of(java.lang.String,java.lang.Object[])>($r12, r6);

        virtualinvoke $r8.<com.squareup.kotlinpoet.AnnotationSpec$Builder: com.squareup.kotlinpoet.AnnotationSpec$Builder addMember(com.squareup.kotlinpoet.CodeBlock)>($r15);

        $r17 = (androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder) r3;

        return $r17;
    }

    public androidx.room.compiler.codegen.XAnnotationSpec build()
    {
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder r0;
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec $r1;
        com.squareup.kotlinpoet.AnnotationSpec$Builder $r2;
        com.squareup.kotlinpoet.AnnotationSpec $r3;
        androidx.room.compiler.codegen.XAnnotationSpec $r4;

        r0 := @this: androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder;

        $r1 = new androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec;

        $r2 = r0.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder: com.squareup.kotlinpoet.AnnotationSpec$Builder actual>;

        $r3 = virtualinvoke $r2.<com.squareup.kotlinpoet.AnnotationSpec$Builder: com.squareup.kotlinpoet.AnnotationSpec build()>();

        specialinvoke $r1.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec: void <init>(com.squareup.kotlinpoet.AnnotationSpec)>($r3);

        $r4 = (androidx.room.compiler.codegen.XAnnotationSpec) $r1;

        return $r4;
    }

    public volatile androidx.room.compiler.codegen.XAnnotationSpec$Builder addMember(java.lang.String, androidx.room.compiler.codegen.XCodeBlock)
    {
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder r0, $r3;
        java.lang.String r1;
        androidx.room.compiler.codegen.XCodeBlock r2;
        androidx.room.compiler.codegen.XAnnotationSpec$Builder $r4;

        r0 := @this: androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.room.compiler.codegen.XCodeBlock;

        $r3 = virtualinvoke r0.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder: androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder addMember(java.lang.String,androidx.room.compiler.codegen.XCodeBlock)>(r1, r2);

        $r4 = (androidx.room.compiler.codegen.XAnnotationSpec$Builder) $r3;

        return $r4;
    }

