androidx.constraintlayout.core.motion.utils.LinearCurveFit
<androidx.constraintlayout.core.motion.utils.LinearCurveFit: java.lang.String TAG>
<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>
<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>
<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double mTotalLength>
<androidx.constraintlayout.core.motion.utils.LinearCurveFit: boolean mExtrapolate>
<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>
    public void <init>(double[], double[][])
    {
        androidx.constraintlayout.core.motion.utils.LinearCurveFit r0;
        double[] r1, $r3, $r4, $r5, $r6;
        double[][] r2;
        int i0, i1, $i2, i3;
        double d0, d1, $d2, $d3, $d4, d5, d6, d7;

        r0 := @this: androidx.constraintlayout.core.motion.utils.LinearCurveFit;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[][];

        specialinvoke r0.<androidx.constraintlayout.core.motion.utils.CurveFit: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double mTotalLength> = #NaN;

        r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: boolean mExtrapolate> = 1;

        i0 = lengthof r1;

        $r3 = r2[0];

        i1 = lengthof $r3;

        $r4 = newarray (double)[i1];

        r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp> = $r4;

        r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT> = r1;

        r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY> = r2;

        if i1 <= 2 goto label4;

        d5 = 0.0;

        d6 = 0.0;

        d7 = 0.0;

        i3 = 0;

     label1:
        $i2 = lengthof r1;

        if i3 >= $i2 goto label3;

        $r5 = r2[i3];

        d0 = $r5[0];

        $r6 = r2[i3];

        d1 = $r6[0];

        if i3 <= 0 goto label2;

        $d3 = d0 - d6;

        $d2 = d1 - d7;

        $d4 = staticinvoke <java.lang.Math: double hypot(double,double)>($d3, $d2);

        d5 = d5 + $d4;

     label2:
        d6 = d0;

        d7 = d1;

        i3 = i3 + 1;

        goto label1;

     label3:
        r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double mTotalLength> = 0.0;

     label4:
        return;
    }

    private double getLength2D(double)
    {
        androidx.constraintlayout.core.motion.utils.LinearCurveFit r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, d31, d32, d33, d34, d35, d36;
        int i0, $i2, $i4, $i6, $i8, $i9, $i10, i11;
        boolean $z0;
        double[] $r1, $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r18, $r20;
        byte $b1, $b3, $b5, $b7;
        double[][] $r4, $r6, $r13, $r15, $r17, $r19;

        r0 := @this: androidx.constraintlayout.core.motion.utils.LinearCurveFit;

        d0 := @parameter0: double;

        $d7 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double mTotalLength>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d7);

        if $z0 == 0 goto label1;

        return 0.0;

     label1:
        $r1 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        i0 = lengthof $r1;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d8 = $r2[0];

        $b1 = d0 cmpg $d8;

        if $b1 > 0 goto label2;

        return 0.0;

     label2:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i2 = i0 - 1;

        $d9 = $r3[$i2];

        $b3 = d0 cmpl $d9;

        if $b3 < 0 goto label3;

        $d28 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double mTotalLength>;

        return $d28;

     label3:
        d29 = 0.0;

        d30 = 0.0;

        d31 = 0.0;

        i11 = 0;

     label4:
        $i4 = i0 - 1;

        if i11 >= $i4 goto label8;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r5 = $r4[i11];

        d32 = $r5[0];

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r7 = $r6[i11];

        d33 = $r7[1];

        if i11 <= 0 goto label5;

        $d26 = d32 - d30;

        $d25 = d33 - d31;

        $d27 = staticinvoke <java.lang.Math: double hypot(double,double)>($d26, $d25);

        d29 = d29 + $d27;

     label5:
        d30 = d32;

        d31 = d33;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d10 = $r8[i11];

        $b5 = d0 cmpl $d10;

        if $b5 != 0 goto label6;

        return d29;

     label6:
        $r9 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i6 = i11 + 1;

        $d11 = $r9[$i6];

        $b7 = d0 cmpg $d11;

        if $b7 >= 0 goto label7;

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i8 = i11 + 1;

        $d13 = $r10[$i8];

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d12 = $r11[i11];

        d1 = $d13 - $d12;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d14 = $r12[i11];

        $d15 = d0 - $d14;

        d2 = $d15 / d1;

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r14 = $r13[i11];

        d3 = $r14[0];

        $r15 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i9 = i11 + 1;

        $r16 = $r15[$i9];

        d4 = $r16[0];

        $r17 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r18 = $r17[i11];

        d5 = $r18[1];

        $r19 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i10 = i11 + 1;

        $r20 = $r19[$i10];

        d6 = $r20[1];

        $d16 = 1.0 - d2;

        $d18 = d5 * $d16;

        $d17 = d6 * d2;

        $d19 = $d18 + $d17;

        d34 = d33 - $d19;

        $d20 = 1.0 - d2;

        $d22 = d3 * $d20;

        $d21 = d4 * d2;

        $d23 = $d22 + $d21;

        d35 = d32 - $d23;

        $d24 = staticinvoke <java.lang.Math: double hypot(double,double)>(d34, d35);

        d36 = d29 + $d24;

        return d36;

     label7:
        i11 = i11 + 1;

        goto label4;

     label8:
        return 0.0;
    }

    public void getPos(double, double[])
    {
        androidx.constraintlayout.core.motion.utils.LinearCurveFit r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, d35;
        double[] r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r35;
        int i0, i1, $i3, $i6, $i8, $i9, $i10, $i12, $i14, $i15, $i16, i17, i18, i19, i20, i21, $i22, i23, i24;
        double[][] $r3, $r12, $r14, $r16, $r18, $r20, $r26, $r32;
        boolean $z0;
        byte $b2, $b4, $b5, $b7, $b11, $b13;

        r0 := @this: androidx.constraintlayout.core.motion.utils.LinearCurveFit;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        i0 = lengthof $r2;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r4 = $r3[0];

        i1 = lengthof $r4;

        $z0 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: boolean mExtrapolate>;

        if $z0 == 0 goto label06;

        $r22 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d19 = $r22[0];

        $b11 = d0 cmpg $d19;

        if $b11 > 0 goto label03;

        $r30 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d28 = $r30[0];

        $r31 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: void getSlope(double,double[])>($d28, $r31);

        i17 = 0;

     label01:
        if i17 >= i1 goto label02;

        $r32 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r33 = $r32[0];

        $d33 = $r33[i17];

        $r34 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d29 = $r34[0];

        $d31 = d0 - $d29;

        $r35 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>;

        $d30 = $r35[i17];

        $d32 = $d31 * $d30;

        $d34 = $d33 + $d32;

        r1[i17] = $d34;

        i17 = i17 + 1;

        goto label01;

     label02:
        return;

     label03:
        $r23 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i12 = i0 - 1;

        $d20 = $r23[$i12];

        $b13 = d0 cmpl $d20;

        if $b13 < 0 goto label12;

        $r24 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i14 = i0 - 1;

        $d21 = $r24[$i14];

        $r25 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: void getSlope(double,double[])>($d21, $r25);

        i18 = 0;

     label04:
        if i18 >= i1 goto label05;

        $r26 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i15 = i0 - 1;

        $r27 = $r26[$i15];

        $d26 = $r27[i18];

        $r28 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i16 = i0 - 1;

        $d22 = $r28[$i16];

        $d24 = d0 - $d22;

        $r29 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>;

        $d23 = $r29[i18];

        $d25 = $d24 * $d23;

        $d27 = $d26 + $d25;

        r1[i18] = $d27;

        i18 = i18 + 1;

        goto label04;

     label05:
        return;

     label06:
        $r5 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d4 = $r5[0];

        $b2 = d0 cmpg $d4;

        if $b2 > 0 goto label09;

        i19 = 0;

     label07:
        if i19 >= i1 goto label08;

        $r20 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r21 = $r20[0];

        $d18 = $r21[i19];

        r1[i19] = $d18;

        i19 = i19 + 1;

        goto label07;

     label08:
        return;

     label09:
        $r6 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i3 = i0 - 1;

        $d5 = $r6[$i3];

        $b4 = d0 cmpl $d5;

        if $b4 < 0 goto label12;

        i20 = 0;

     label10:
        if i20 >= i1 goto label11;

        $r18 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i10 = i0 - 1;

        $r19 = $r18[$i10];

        $d17 = $r19[i20];

        r1[i20] = $d17;

        i20 = i20 + 1;

        goto label10;

     label11:
        return;

     label12:
        i21 = 0;

     label13:
        $i22 = i0 - 1;

        if i21 >= $i22 goto label19;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d6 = $r7[i21];

        $b5 = d0 cmpl $d6;

        if $b5 != 0 goto label15;

        i23 = 0;

     label14:
        if i23 >= i1 goto label15;

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r17 = $r16[i21];

        $d16 = $r17[i23];

        r1[i23] = $d16;

        i23 = i23 + 1;

        goto label14;

     label15:
        $r8 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i6 = i21 + 1;

        $d7 = $r8[$i6];

        $b7 = d0 cmpg $d7;

        if $b7 >= 0 goto label18;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i8 = i21 + 1;

        $d9 = $r9[$i8];

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d8 = $r10[i21];

        d35 = $d9 - $d8;

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d10 = $r11[i21];

        $d11 = d0 - $d10;

        d1 = $d11 / d35;

        i24 = 0;

     label16:
        if i24 >= i1 goto label17;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r13 = $r12[i21];

        d2 = $r13[i24];

        $r14 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i9 = i21 + 1;

        $r15 = $r14[$i9];

        d3 = $r15[i24];

        $d12 = 1.0 - d1;

        $d14 = d2 * $d12;

        $d13 = d3 * d1;

        $d15 = $d14 + $d13;

        r1[i24] = $d15;

        i24 = i24 + 1;

        goto label16;

     label17:
        return;

     label18:
        i21 = i21 + 1;

        goto label13;

     label19:
        return;
    }

    public void getPos(double, float[])
    {
        androidx.constraintlayout.core.motion.utils.LinearCurveFit r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, d35;
        float[] r1;
        int i0, i1, $i3, $i6, $i8, $i9, $i10, $i12, $i14, $i15, $i16, i17, i18, i19, i20, i21, $i22, i23, i24;
        double[] $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r35;
        double[][] $r3, $r12, $r14, $r16, $r18, $r20, $r26, $r32;
        boolean $z0;
        byte $b2, $b4, $b5, $b7, $b11, $b13;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: androidx.constraintlayout.core.motion.utils.LinearCurveFit;

        d0 := @parameter0: double;

        r1 := @parameter1: float[];

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        i0 = lengthof $r2;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r4 = $r3[0];

        i1 = lengthof $r4;

        $z0 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: boolean mExtrapolate>;

        if $z0 == 0 goto label06;

        $r22 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d19 = $r22[0];

        $b11 = d0 cmpg $d19;

        if $b11 > 0 goto label03;

        $r30 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d28 = $r30[0];

        $r31 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: void getSlope(double,double[])>($d28, $r31);

        i17 = 0;

     label01:
        if i17 >= i1 goto label02;

        $r32 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r33 = $r32[0];

        $d33 = $r33[i17];

        $r34 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d29 = $r34[0];

        $d31 = d0 - $d29;

        $r35 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>;

        $d30 = $r35[i17];

        $d32 = $d31 * $d30;

        $d34 = $d33 + $d32;

        $f5 = (float) $d34;

        r1[i17] = $f5;

        i17 = i17 + 1;

        goto label01;

     label02:
        return;

     label03:
        $r23 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i12 = i0 - 1;

        $d20 = $r23[$i12];

        $b13 = d0 cmpl $d20;

        if $b13 < 0 goto label12;

        $r24 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i14 = i0 - 1;

        $d21 = $r24[$i14];

        $r25 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: void getSlope(double,double[])>($d21, $r25);

        i18 = 0;

     label04:
        if i18 >= i1 goto label05;

        $r26 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i15 = i0 - 1;

        $r27 = $r26[$i15];

        $d26 = $r27[i18];

        $r28 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i16 = i0 - 1;

        $d22 = $r28[$i16];

        $d24 = d0 - $d22;

        $r29 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mSlopeTemp>;

        $d23 = $r29[i18];

        $d25 = $d24 * $d23;

        $d27 = $d26 + $d25;

        $f4 = (float) $d27;

        r1[i18] = $f4;

        i18 = i18 + 1;

        goto label04;

     label05:
        return;

     label06:
        $r5 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d4 = $r5[0];

        $b2 = d0 cmpg $d4;

        if $b2 > 0 goto label09;

        i19 = 0;

     label07:
        if i19 >= i1 goto label08;

        $r20 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r21 = $r20[0];

        $d18 = $r21[i19];

        $f3 = (float) $d18;

        r1[i19] = $f3;

        i19 = i19 + 1;

        goto label07;

     label08:
        return;

     label09:
        $r6 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i3 = i0 - 1;

        $d5 = $r6[$i3];

        $b4 = d0 cmpl $d5;

        if $b4 < 0 goto label12;

        i20 = 0;

     label10:
        if i20 >= i1 goto label11;

        $r18 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i10 = i0 - 1;

        $r19 = $r18[$i10];

        $d17 = $r19[i20];

        $f2 = (float) $d17;

        r1[i20] = $f2;

        i20 = i20 + 1;

        goto label10;

     label11:
        return;

     label12:
        i21 = 0;

     label13:
        $i22 = i0 - 1;

        if i21 >= $i22 goto label19;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d6 = $r7[i21];

        $b5 = d0 cmpl $d6;

        if $b5 != 0 goto label15;

        i23 = 0;

     label14:
        if i23 >= i1 goto label15;

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r17 = $r16[i21];

        $d16 = $r17[i23];

        $f1 = (float) $d16;

        r1[i23] = $f1;

        i23 = i23 + 1;

        goto label14;

     label15:
        $r8 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i6 = i21 + 1;

        $d7 = $r8[$i6];

        $b7 = d0 cmpg $d7;

        if $b7 >= 0 goto label18;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i8 = i21 + 1;

        $d9 = $r9[$i8];

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d8 = $r10[i21];

        d35 = $d9 - $d8;

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d10 = $r11[i21];

        $d11 = d0 - $d10;

        d1 = $d11 / d35;

        i24 = 0;

     label16:
        if i24 >= i1 goto label17;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r13 = $r12[i21];

        d2 = $r13[i24];

        $r14 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i9 = i21 + 1;

        $r15 = $r14[$i9];

        d3 = $r15[i24];

        $d12 = 1.0 - d1;

        $d14 = d2 * $d12;

        $d13 = d3 * d1;

        $d15 = $d14 + $d13;

        $f0 = (float) $d15;

        r1[i24] = $f0;

        i24 = i24 + 1;

        goto label16;

     label17:
        return;

     label18:
        i21 = i21 + 1;

        goto label13;

     label19:
        return;
    }

    public double getPos(double, int)
    {
        androidx.constraintlayout.core.motion.utils.LinearCurveFit r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35;
        int i0, i1, $i3, $i6, $i8, $i9, $i10, $i12, $i14, $i15, $i16, i17, $i18;
        double[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r14, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r28;
        boolean $z0;
        byte $b2, $b4, $b5, $b7, $b11, $b13;
        double[][] $r9, $r11, $r13, $r15, $r17, $r21, $r25;

        r0 := @this: androidx.constraintlayout.core.motion.utils.LinearCurveFit;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        i1 = lengthof $r1;

        $z0 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: boolean mExtrapolate>;

        if $z0 == 0 goto label2;

        $r19 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d20 = $r19[0];

        $b11 = d0 cmpg $d20;

        if $b11 > 0 goto label1;

        $r25 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r26 = $r25[0];

        $d31 = $r26[i0];

        $r27 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d29 = $r27[0];

        $d32 = d0 - $d29;

        $r28 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d30 = $r28[0];

        $d33 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double getSlope(double,int)>($d30, i0);

        $d34 = $d32 * $d33;

        $d35 = $d31 + $d34;

        return $d35;

     label1:
        $r20 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i12 = i1 - 1;

        $d21 = $r20[$i12];

        $b13 = d0 cmpl $d21;

        if $b13 < 0 goto label4;

        $r21 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i14 = i1 - 1;

        $r22 = $r21[$i14];

        $d24 = $r22[i0];

        $r23 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i15 = i1 - 1;

        $d22 = $r23[$i15];

        $d25 = d0 - $d22;

        $r24 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i16 = i1 - 1;

        $d23 = $r24[$i16];

        $d26 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double getSlope(double,int)>($d23, i0);

        $d27 = $d25 * $d26;

        $d28 = $d24 + $d27;

        return $d28;

     label2:
        $r2 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d5 = $r2[0];

        $b2 = d0 cmpg $d5;

        if $b2 > 0 goto label3;

        $r17 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r18 = $r17[0];

        $d19 = $r18[i0];

        return $d19;

     label3:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i3 = i1 - 1;

        $d6 = $r3[$i3];

        $b4 = d0 cmpl $d6;

        if $b4 < 0 goto label4;

        $r15 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i10 = i1 - 1;

        $r16 = $r15[$i10];

        $d18 = $r16[i0];

        return $d18;

     label4:
        i17 = 0;

     label5:
        $i18 = i1 - 1;

        if i17 >= $i18 goto label8;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d7 = $r4[i17];

        $b5 = d0 cmpl $d7;

        if $b5 != 0 goto label6;

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r14 = $r13[i17];

        $d17 = $r14[i0];

        return $d17;

     label6:
        $r5 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i6 = i17 + 1;

        $d8 = $r5[$i6];

        $b7 = d0 cmpg $d8;

        if $b7 >= 0 goto label7;

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i8 = i17 + 1;

        $d10 = $r6[$i8];

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d9 = $r7[i17];

        d1 = $d10 - $d9;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d11 = $r8[i17];

        $d12 = d0 - $d11;

        d2 = $d12 / d1;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r10 = $r9[i17];

        d3 = $r10[i0];

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i9 = i17 + 1;

        $r12 = $r11[$i9];

        d4 = $r12[i0];

        $d13 = 1.0 - d2;

        $d15 = d3 * $d13;

        $d14 = d4 * d2;

        $d16 = $d15 + $d14;

        return $d16;

     label7:
        i17 = i17 + 1;

        goto label5;

     label8:
        return 0.0;
    }

    public void getSlope(double, double[])
    {
        androidx.constraintlayout.core.motion.utils.LinearCurveFit r0;
        double[] r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r14, $r15, $r16;
        int i0, i1, $i3, $i5, $i7, $i8, $i9, i10, $i11, i12;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        double[][] $r3, $r11, $r13;
        byte $b2, $b4, $b6;

        r0 := @this: androidx.constraintlayout.core.motion.utils.LinearCurveFit;

        d13 := @parameter0: double;

        r1 := @parameter1: double[];

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        i0 = lengthof $r2;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r4 = $r3[0];

        i1 = lengthof $r4;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d4 = $r5[0];

        $b2 = d13 cmpg $d4;

        if $b2 > 0 goto label1;

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        d13 = $r16[0];

        goto label2;

     label1:
        $r6 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i3 = i0 - 1;

        $d5 = $r6[$i3];

        $b4 = d13 cmpl $d5;

        if $b4 < 0 goto label2;

        $r15 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i9 = i0 - 1;

        d13 = $r15[$i9];

     label2:
        i10 = 0;

     label3:
        $i11 = i0 - 1;

        if i10 >= $i11 goto label7;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i5 = i10 + 1;

        $d6 = $r7[$i5];

        $b6 = d13 cmpg $d6;

        if $b6 > 0 goto label6;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i7 = i10 + 1;

        $d8 = $r8[$i7];

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d7 = $r9[i10];

        d0 = $d8 - $d7;

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d9 = $r10[i10];

        $d10 = d13 - $d9;

        d1 = $d10 / d0;

        i12 = 0;

     label4:
        if i12 >= i1 goto label5;

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r12 = $r11[i10];

        d2 = $r12[i12];

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i8 = i10 + 1;

        $r14 = $r13[$i8];

        d3 = $r14[i12];

        $d11 = d3 - d2;

        $d12 = $d11 / d0;

        r1[i12] = $d12;

        i12 = i12 + 1;

        goto label4;

     label5:
        goto label7;

     label6:
        i10 = i10 + 1;

        goto label3;

     label7:
        return;
    }

    public double getSlope(double, int)
    {
        androidx.constraintlayout.core.motion.utils.LinearCurveFit r0;
        int i0, i1, $i3, $i5, $i7, $i8, $i9, i10, $i11;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        double[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r13;
        byte $b2, $b4, $b6;
        double[][] $r8, $r10;

        r0 := @this: androidx.constraintlayout.core.motion.utils.LinearCurveFit;

        d13 := @parameter0: double;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        i1 = lengthof $r1;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d4 = $r2[0];

        $b2 = d13 cmpg $d4;

        if $b2 >= 0 goto label1;

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        d13 = $r13[0];

        goto label2;

     label1:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i3 = i1 - 1;

        $d5 = $r3[$i3];

        $b4 = d13 cmpl $d5;

        if $b4 < 0 goto label2;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i9 = i1 - 1;

        d13 = $r12[$i9];

     label2:
        i10 = 0;

     label3:
        $i11 = i1 - 1;

        if i10 >= $i11 goto label5;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i5 = i10 + 1;

        $d6 = $r4[$i5];

        $b6 = d13 cmpg $d6;

        if $b6 > 0 goto label4;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $i7 = i10 + 1;

        $d8 = $r5[$i7];

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d7 = $r6[i10];

        d0 = $d8 - $d7;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        $d9 = $r7[i10];

        $d10 = d13 - $d9;

        d1 = $d10 / d0;

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $r9 = $r8[i10];

        d2 = $r9[i0];

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[][] mY>;

        $i8 = i10 + 1;

        $r11 = $r10[$i8];

        d3 = $r11[i0];

        $d11 = d3 - d2;

        $d12 = $d11 / d0;

        return $d12;

     label4:
        i10 = i10 + 1;

        goto label3;

     label5:
        return 0.0;
    }

    public double[] getTimePoints()
    {
        androidx.constraintlayout.core.motion.utils.LinearCurveFit r0;
        double[] $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.LinearCurveFit;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.LinearCurveFit: double[] mT>;

        return $r1;
    }

