androidx.paging.AccessorState
<androidx.paging.AccessorState: androidx.paging.AccessorState$BlockState[] blockStates>
<androidx.paging.AccessorState: androidx.paging.LoadState$Error[] errors>
<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>
    public void <init>()
    {
        androidx.paging.AccessorState r0, r6, r8;
        androidx.paging.LoadType[] $r1, $r2;
        kotlin.collections.ArrayDeque $r3;
        androidx.paging.AccessorState$BlockState $r4;
        int i0, i1, i2, i3, i4, i5;
        androidx.paging.AccessorState$BlockState[] r5;
        androidx.paging.LoadState$Error[] r7;

        r0 := @this: androidx.paging.AccessorState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = 0;

        $r1 = staticinvoke <androidx.paging.LoadType: androidx.paging.LoadType[] values()>();

        i1 = lengthof $r1;

        r5 = newarray (androidx.paging.AccessorState$BlockState)[i1];

        r6 = r0;

     label1:
        if i0 >= i1 goto label2;

        i2 = i0;

        $r4 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>;

        r5[i2] = $r4;

        i0 = i0 + 1;

        goto label1;

     label2:
        r6.<androidx.paging.AccessorState: androidx.paging.AccessorState$BlockState[] blockStates> = r5;

        i3 = 0;

        $r2 = staticinvoke <androidx.paging.LoadType: androidx.paging.LoadType[] values()>();

        i4 = lengthof $r2;

        r7 = newarray (androidx.paging.LoadState$Error)[i4];

        r8 = r0;

     label3:
        if i3 >= i4 goto label4;

        i5 = i3;

        r7[i5] = null;

        i3 = i3 + 1;

        goto label3;

     label4:
        r8.<androidx.paging.AccessorState: androidx.paging.LoadState$Error[] errors> = r7;

        $r3 = new kotlin.collections.ArrayDeque;

        specialinvoke $r3.<kotlin.collections.ArrayDeque: void <init>()>();

        r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests> = $r3;

        return;
    }

    public final androidx.paging.LoadStates computeLoadStates()
    {
        androidx.paging.AccessorState r0;
        androidx.paging.LoadState r1, r2, r3;
        androidx.paging.LoadType $r4, $r5, $r6;
        androidx.paging.LoadStates $r7;

        r0 := @this: androidx.paging.AccessorState;

        $r4 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        r1 = specialinvoke r0.<androidx.paging.AccessorState: androidx.paging.LoadState computeLoadTypeState(androidx.paging.LoadType)>($r4);

        $r5 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        r2 = specialinvoke r0.<androidx.paging.AccessorState: androidx.paging.LoadState computeLoadTypeState(androidx.paging.LoadType)>($r5);

        $r6 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        r3 = specialinvoke r0.<androidx.paging.AccessorState: androidx.paging.LoadState computeLoadTypeState(androidx.paging.LoadType)>($r6);

        $r7 = new androidx.paging.LoadStates;

        specialinvoke $r7.<androidx.paging.LoadStates: void <init>(androidx.paging.LoadState,androidx.paging.LoadState,androidx.paging.LoadState)>(r1, r3, r2);

        return $r7;
    }

    private final androidx.paging.LoadState computeLoadTypeState(androidx.paging.LoadType)
    {
        androidx.paging.AccessorState r0;
        androidx.paging.LoadType r1, $r19, r27;
        androidx.paging.AccessorState$BlockState r2, $r16;
        boolean z0, $z1, $z2, $z4, $z5, $z7, z8, z9;
        androidx.paging.AccessorState$BlockState[] $r3;
        int $i0, $i1, $i2, $i3, $i4, i5;
        kotlin.collections.ArrayDeque $r4;
        androidx.paging.LoadState$Error[] $r5;
        androidx.paging.LoadState $r6, $r18, $r29;
        int[] $r7, $r12;
        androidx.paging.LoadState$NotLoading$Companion $r8, $r10, $r13, $r14;
        androidx.paging.LoadState$NotLoading $r9, $r11, $r28;
        kotlin.NoWhenBranchMatchedException $r15;
        androidx.paging.LoadState$Loading $r17;
        java.util.Collection $r20;
        java.lang.Iterable $r21;
        java.util.Iterator r22;
        java.lang.Object r23;
        androidx.paging.AccessorState$PendingRequest r24;
        androidx.paging.LoadState$Error $r25, r26;

        r0 := @this: androidx.paging.AccessorState;

        r1 := @parameter0: androidx.paging.LoadType;

        $r3 = r0.<androidx.paging.AccessorState: androidx.paging.AccessorState$BlockState[] blockStates>;

        $i0 = virtualinvoke r1.<androidx.paging.LoadType: int ordinal()>();

        r2 = $r3[$i0];

        $r4 = r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>;

        $r21 = (java.lang.Iterable) $r4;

        $z1 = $r21 instanceof java.util.Collection;

        if $z1 == 0 goto label01;

        $r20 = (java.util.Collection) $r21;

        $z2 = interfaceinvoke $r20.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label01;

        $z4 = 0;

        goto label06;

     label01:
        r22 = interfaceinvoke $r21.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label05;

        r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (androidx.paging.AccessorState$PendingRequest) r23;

        $r19 = virtualinvoke r24.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType getLoadType()>();

        if $r19 != r1 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        if $z7 == 0 goto label02;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        z0 = $z4;

        if z0 == 0 goto label07;

        $r16 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState REQUIRES_REFRESH>;

        if r2 == $r16 goto label07;

        $r17 = <androidx.paging.LoadState$Loading: androidx.paging.LoadState$Loading INSTANCE>;

        $r18 = (androidx.paging.LoadState) $r17;

        return $r18;

     label07:
        $r5 = r0.<androidx.paging.AccessorState: androidx.paging.LoadState$Error[] errors>;

        $i1 = virtualinvoke r1.<androidx.paging.LoadType: int ordinal()>();

        $r25 = $r5[$i1];

        if $r25 != null goto label08;

        goto label09;

     label08:
        z8 = 0;

        z9 = 0;

        r26 = $r25;

        $r6 = (androidx.paging.LoadState) r26;

        return $r6;

     label09:
        $r7 = <androidx.paging.AccessorState$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i2 = virtualinvoke r2.<androidx.paging.AccessorState$BlockState: int ordinal()>();

        $i4 = $r7[$i2];

        tableswitch($i4)
        {
            case 1: goto label10;
            case 2: goto label13;
            case 3: goto label14;
            default: goto label15;
        };

     label10:
        r27 = r1;

        $r12 = <androidx.paging.AccessorState$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i3 = virtualinvoke r27.<androidx.paging.LoadType: int ordinal()>();

        i5 = $r12[$i3];

        if i5 != 1 goto label11;

        $r14 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r28 = virtualinvoke $r14.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        goto label12;

     label11:
        $r13 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r28 = virtualinvoke $r13.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getComplete$paging_common()>();

     label12:
        $r29 = (androidx.paging.LoadState) $r28;

        goto label16;

     label13:
        $r10 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r11 = virtualinvoke $r10.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r29 = (androidx.paging.LoadState) $r11;

        goto label16;

     label14:
        $r8 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r29 = (androidx.paging.LoadState) $r9;

        goto label16;

     label15:
        $r15 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r15.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r15;

     label16:
        return $r29;
    }

    public final boolean add(androidx.paging.LoadType, androidx.paging.PagingState)
    {
        androidx.paging.AccessorState r0;
        androidx.paging.LoadType r1, $r11, $r16, $r17, $r18, $r21;
        androidx.paging.PagingState r2;
        androidx.paging.AccessorState$PendingRequest r3, r6, $r14, $r19;
        java.util.Iterator r4;
        java.lang.Object r5, $r23;
        kotlin.collections.ArrayDeque $r7, $r15, $r20;
        boolean $z2, $z4, $z5;
        androidx.paging.AccessorState$BlockState[] $r8;
        int $i0, $i1;
        androidx.paging.AccessorState$BlockState $r9, $r10, $r24;
        androidx.paging.LoadState$Error[] $r12;
        androidx.paging.LoadState$Error $r13;
        java.lang.Iterable $r22;

        r0 := @this: androidx.paging.AccessorState;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.PagingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pagingState");

        $r7 = r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>;

        $r22 = (java.lang.Iterable) $r7;

        r4 = interfaceinvoke $r22.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label04;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.paging.AccessorState$PendingRequest) r5;

        $r21 = virtualinvoke r6.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType getLoadType()>();

        if $r21 != r1 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        if $z4 == 0 goto label01;

        $r23 = r5;

        goto label05;

     label04:
        $r23 = null;

     label05:
        r3 = (androidx.paging.AccessorState$PendingRequest) $r23;

        if r3 == null goto label06;

        virtualinvoke r3.<androidx.paging.AccessorState$PendingRequest: void setPagingState(androidx.paging.PagingState)>(r2);

        return 0;

     label06:
        $r8 = r0.<androidx.paging.AccessorState: androidx.paging.AccessorState$BlockState[] blockStates>;

        $i0 = virtualinvoke r1.<androidx.paging.LoadType: int ordinal()>();

        $r24 = $r8[$i0];

        $r9 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState REQUIRES_REFRESH>;

        if $r24 != $r9 goto label07;

        $r18 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if r1 == $r18 goto label07;

        $r20 = r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>;

        $r19 = new androidx.paging.AccessorState$PendingRequest;

        specialinvoke $r19.<androidx.paging.AccessorState$PendingRequest: void <init>(androidx.paging.LoadType,androidx.paging.PagingState)>(r1, r2);

        virtualinvoke $r20.<kotlin.collections.ArrayDeque: boolean add(java.lang.Object)>($r19);

        return 0;

     label07:
        $r10 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>;

        if $r24 == $r10 goto label08;

        $r17 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if r1 == $r17 goto label08;

        return 0;

     label08:
        $r11 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if r1 != $r11 goto label09;

        $r16 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        virtualinvoke r0.<androidx.paging.AccessorState: void setError(androidx.paging.LoadType,androidx.paging.LoadState$Error)>($r16, null);

     label09:
        $r12 = r0.<androidx.paging.AccessorState: androidx.paging.LoadState$Error[] errors>;

        $i1 = virtualinvoke r1.<androidx.paging.LoadType: int ordinal()>();

        $r13 = $r12[$i1];

        if $r13 != null goto label10;

        $r15 = r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>;

        $r14 = new androidx.paging.AccessorState$PendingRequest;

        specialinvoke $r14.<androidx.paging.AccessorState$PendingRequest: void <init>(androidx.paging.LoadType,androidx.paging.PagingState)>(r1, r2);

        $z5 = virtualinvoke $r15.<kotlin.collections.ArrayDeque: boolean add(java.lang.Object)>($r14);

        goto label11;

     label10:
        $z5 = 0;

     label11:
        return $z5;
    }

    public final void setBlockState(androidx.paging.LoadType, androidx.paging.AccessorState$BlockState)
    {
        androidx.paging.AccessorState r0;
        androidx.paging.LoadType r1;
        androidx.paging.AccessorState$BlockState r2;
        androidx.paging.AccessorState$BlockState[] $r3;
        int $i0;

        r0 := @this: androidx.paging.AccessorState;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.AccessorState$BlockState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "state");

        $r3 = r0.<androidx.paging.AccessorState: androidx.paging.AccessorState$BlockState[] blockStates>;

        $i0 = virtualinvoke r1.<androidx.paging.LoadType: int ordinal()>();

        $r3[$i0] = r2;

        return;
    }

    public final androidx.paging.PagingState getPendingRefresh()
    {
        androidx.paging.AccessorState r0;
        androidx.paging.AccessorState$PendingRequest r1, r5;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r9;
        kotlin.collections.ArrayDeque $r6;
        boolean $z2, $z3;
        androidx.paging.LoadType $r7, $r8;
        androidx.paging.PagingState $r10;

        r0 := @this: androidx.paging.AccessorState;

        $r6 = r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>;

        $r2 = (java.lang.Iterable) $r6;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.paging.AccessorState$PendingRequest) r4;

        $r7 = virtualinvoke r5.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType getLoadType()>();

        $r8 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if $r7 != $r8 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 == 0 goto label1;

        $r9 = r4;

        goto label5;

     label4:
        $r9 = null;

     label5:
        r1 = (androidx.paging.AccessorState$PendingRequest) $r9;

        if r1 != null goto label6;

        $r10 = null;

        goto label7;

     label6:
        $r10 = virtualinvoke r1.<androidx.paging.AccessorState$PendingRequest: androidx.paging.PagingState getPagingState()>();

     label7:
        return $r10;
    }

    public final kotlin.Pair getPendingBoundary()
    {
        androidx.paging.AccessorState r0;
        androidx.paging.AccessorState$PendingRequest r1, r14, r17;
        kotlin.collections.ArrayDeque $r2;
        boolean $z1, $z3, z5, z6;
        androidx.paging.LoadType $r3, $r5, $r6, $r8;
        androidx.paging.PagingState $r4;
        androidx.paging.AccessorState$BlockState[] $r7;
        int $i0;
        androidx.paging.AccessorState$BlockState $r9, $r10;
        java.lang.Iterable $r11;
        java.util.Iterator r12;
        java.lang.Object r13, $r15;
        kotlin.Pair $r16;

        r0 := @this: androidx.paging.AccessorState;

        $r2 = r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>;

        $r11 = (java.lang.Iterable) $r2;

        r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (androidx.paging.AccessorState$PendingRequest) r13;

        $r5 = virtualinvoke r14.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType getLoadType()>();

        $r6 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if $r5 == $r6 goto label2;

        $r7 = r0.<androidx.paging.AccessorState: androidx.paging.AccessorState$BlockState[] blockStates>;

        $r8 = virtualinvoke r14.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType getLoadType()>();

        $i0 = virtualinvoke $r8.<androidx.paging.LoadType: int ordinal()>();

        $r10 = $r7[$i0];

        $r9 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>;

        if $r10 != $r9 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 == 0 goto label1;

        $r15 = r13;

        goto label5;

     label4:
        $r15 = null;

     label5:
        r1 = (androidx.paging.AccessorState$PendingRequest) $r15;

        if r1 != null goto label6;

        $r16 = null;

        goto label7;

     label6:
        z5 = 0;

        r17 = r1;

        z6 = 0;

        $r3 = virtualinvoke r17.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType getLoadType()>();

        $r4 = virtualinvoke r17.<androidx.paging.AccessorState$PendingRequest: androidx.paging.PagingState getPagingState()>();

        $r16 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

     label7:
        return $r16;
    }

    public final void clearPendingRequests()
    {
        androidx.paging.AccessorState r0;
        kotlin.collections.ArrayDeque $r1;

        r0 := @this: androidx.paging.AccessorState;

        $r1 = r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>;

        virtualinvoke $r1.<kotlin.collections.ArrayDeque: void clear()>();

        return;
    }

    public final void clearPendingRequest(androidx.paging.LoadType)
    {
        androidx.paging.AccessorState r0;
        androidx.paging.LoadType r1;
        kotlin.collections.ArrayDeque $r2;
        androidx.paging.AccessorState$clearPendingRequest$1 $r3;
        java.util.List $r4;
        kotlin.jvm.functions.Function1 $r5;

        r0 := @this: androidx.paging.AccessorState;

        r1 := @parameter0: androidx.paging.LoadType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        $r2 = r0.<androidx.paging.AccessorState: kotlin.collections.ArrayDeque pendingRequests>;

        $r4 = (java.util.List) $r2;

        $r3 = new androidx.paging.AccessorState$clearPendingRequest$1;

        specialinvoke $r3.<androidx.paging.AccessorState$clearPendingRequest$1: void <init>(androidx.paging.LoadType)>(r1);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.List,kotlin.jvm.functions.Function1)>($r4, $r5);

        return;
    }

    public final void clearErrors()
    {
        androidx.paging.AccessorState r0;
        int i0, i1, $i2, i3;
        androidx.paging.LoadState$Error[] $r1, $r2;

        r0 := @this: androidx.paging.AccessorState;

        i3 = 0;

        $r1 = r0.<androidx.paging.AccessorState: androidx.paging.LoadState$Error[] errors>;

        $i2 = lengthof $r1;

        i0 = $i2 + -1;

        if i3 > i0 goto label2;

     label1:
        i1 = i3;

        i3 = i3 + 1;

        $r2 = r0.<androidx.paging.AccessorState: androidx.paging.LoadState$Error[] errors>;

        $r2[i1] = null;

        if i3 <= i0 goto label1;

     label2:
        return;
    }

    public final void setError(androidx.paging.LoadType, androidx.paging.LoadState$Error)
    {
        androidx.paging.AccessorState r0;
        androidx.paging.LoadType r1;
        androidx.paging.LoadState$Error r2;
        androidx.paging.LoadState$Error[] $r3;
        int $i0;

        r0 := @this: androidx.paging.AccessorState;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.LoadState$Error;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        $r3 = r0.<androidx.paging.AccessorState: androidx.paging.LoadState$Error[] errors>;

        $i0 = virtualinvoke r1.<androidx.paging.LoadType: int ordinal()>();

        $r3[$i0] = r2;

        return;
    }

androidx.paging.AccessorState$BlockState
<androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>
<androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState COMPLETED>
<androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState REQUIRES_REFRESH>
<androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.paging.AccessorState$BlockState r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.paging.AccessorState$BlockState;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.paging.AccessorState$BlockState[] values()
    {
        androidx.paging.AccessorState$BlockState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.paging.AccessorState$BlockState[]) $r1;

        return $r2;
    }

    public static androidx.paging.AccessorState$BlockState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.paging.AccessorState$BlockState $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/paging/AccessorState$BlockState;", r0);

        $r2 = (androidx.paging.AccessorState$BlockState) $r1;

        return $r2;
    }

    private static final androidx.paging.AccessorState$BlockState[] $values()
    {
        androidx.paging.AccessorState$BlockState[] r0;
        androidx.paging.AccessorState$BlockState $r1, $r2, $r3;

        r0 = newarray (androidx.paging.AccessorState$BlockState)[3];

        $r1 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>;

        r0[0] = $r1;

        $r2 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState COMPLETED>;

        r0[1] = $r2;

        $r3 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState REQUIRES_REFRESH>;

        r0[2] = $r3;

        return r0;
    }

    static void <clinit>()
    {
        androidx.paging.AccessorState$BlockState $r0, $r1, $r2;
        androidx.paging.AccessorState$BlockState[] $r3;

        $r0 = new androidx.paging.AccessorState$BlockState;

        specialinvoke $r0.<androidx.paging.AccessorState$BlockState: void <init>(java.lang.String,int)>("UNBLOCKED", 0);

        <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED> = $r0;

        $r1 = new androidx.paging.AccessorState$BlockState;

        specialinvoke $r1.<androidx.paging.AccessorState$BlockState: void <init>(java.lang.String,int)>("COMPLETED", 1);

        <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState COMPLETED> = $r1;

        $r2 = new androidx.paging.AccessorState$BlockState;

        specialinvoke $r2.<androidx.paging.AccessorState$BlockState: void <init>(java.lang.String,int)>("REQUIRES_REFRESH", 2);

        <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState REQUIRES_REFRESH> = $r2;

        $r3 = staticinvoke <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState[] $values()>();

        <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState[] $VALUES> = $r3;

        return;
    }

androidx.paging.AccessorState$clearPendingRequest$1
<androidx.paging.AccessorState$clearPendingRequest$1: androidx.paging.LoadType $loadType>
    void <init>(androidx.paging.LoadType)
    {
        androidx.paging.AccessorState$clearPendingRequest$1 r0;
        androidx.paging.LoadType $r1;

        r0 := @this: androidx.paging.AccessorState$clearPendingRequest$1;

        $r1 := @parameter0: androidx.paging.LoadType;

        r0.<androidx.paging.AccessorState$clearPendingRequest$1: androidx.paging.LoadType $loadType> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.paging.AccessorState$PendingRequest)
    {
        androidx.paging.AccessorState$clearPendingRequest$1 r0;
        androidx.paging.AccessorState$PendingRequest r1;
        androidx.paging.LoadType $r2, $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.paging.AccessorState$clearPendingRequest$1;

        r1 := @parameter0: androidx.paging.AccessorState$PendingRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = virtualinvoke r1.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType getLoadType()>();

        $r3 = r0.<androidx.paging.AccessorState$clearPendingRequest$1: androidx.paging.LoadType $loadType>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.AccessorState$clearPendingRequest$1 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState$PendingRequest $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.paging.AccessorState$clearPendingRequest$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState$PendingRequest) r1;

        $r3 = virtualinvoke r0.<androidx.paging.AccessorState$clearPendingRequest$1: java.lang.Boolean invoke(androidx.paging.AccessorState$PendingRequest)>($r2);

        return $r3;
    }

androidx.paging.AccessorState$PendingRequest
<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType loadType>
<androidx.paging.AccessorState$PendingRequest: androidx.paging.PagingState pagingState>
    public void <init>(androidx.paging.LoadType, androidx.paging.PagingState)
    {
        androidx.paging.AccessorState$PendingRequest r0;
        androidx.paging.LoadType r1;
        androidx.paging.PagingState r2;

        r0 := @this: androidx.paging.AccessorState$PendingRequest;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.PagingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pagingState");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType loadType> = r1;

        r0.<androidx.paging.AccessorState$PendingRequest: androidx.paging.PagingState pagingState> = r2;

        return;
    }

    public final androidx.paging.LoadType getLoadType()
    {
        androidx.paging.AccessorState$PendingRequest r0;
        androidx.paging.LoadType $r1;

        r0 := @this: androidx.paging.AccessorState$PendingRequest;

        $r1 = r0.<androidx.paging.AccessorState$PendingRequest: androidx.paging.LoadType loadType>;

        return $r1;
    }

    public final androidx.paging.PagingState getPagingState()
    {
        androidx.paging.AccessorState$PendingRequest r0;
        androidx.paging.PagingState $r1;

        r0 := @this: androidx.paging.AccessorState$PendingRequest;

        $r1 = r0.<androidx.paging.AccessorState$PendingRequest: androidx.paging.PagingState pagingState>;

        return $r1;
    }

    public final void setPagingState(androidx.paging.PagingState)
    {
        androidx.paging.AccessorState$PendingRequest r0;
        androidx.paging.PagingState r1;

        r0 := @this: androidx.paging.AccessorState$PendingRequest;

        r1 := @parameter0: androidx.paging.PagingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.paging.AccessorState$PendingRequest: androidx.paging.PagingState pagingState> = r1;

        return;
    }

androidx.paging.AccessorState$WhenMappings
<androidx.paging.AccessorState$WhenMappings: int[] $EnumSwitchMapping$0>
<androidx.paging.AccessorState$WhenMappings: int[] $EnumSwitchMapping$1>
    static void <clinit>()
    {
        androidx.paging.AccessorState$BlockState[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.paging.AccessorState$BlockState $r1, $r2, $r3;
        androidx.paging.LoadType[] $r4;
        androidx.paging.LoadType $r5;
        int[] r6, r7;

        $r0 = staticinvoke <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState[] values()>();

        $i0 = lengthof $r0;

        r6 = newarray (int)[$i0];

        $r1 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState COMPLETED>;

        $i1 = virtualinvoke $r1.<androidx.paging.AccessorState$BlockState: int ordinal()>();

        r6[$i1] = 1;

        $r2 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState REQUIRES_REFRESH>;

        $i2 = virtualinvoke $r2.<androidx.paging.AccessorState$BlockState: int ordinal()>();

        r6[$i2] = 2;

        $r3 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>;

        $i3 = virtualinvoke $r3.<androidx.paging.AccessorState$BlockState: int ordinal()>();

        r6[$i3] = 3;

        <androidx.paging.AccessorState$WhenMappings: int[] $EnumSwitchMapping$0> = r6;

        $r4 = staticinvoke <androidx.paging.LoadType: androidx.paging.LoadType[] values()>();

        $i4 = lengthof $r4;

        r7 = newarray (int)[$i4];

        $r5 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $i5 = virtualinvoke $r5.<androidx.paging.LoadType: int ordinal()>();

        r7[$i5] = 1;

        <androidx.paging.AccessorState$WhenMappings: int[] $EnumSwitchMapping$1> = r7;

        return;
    }

