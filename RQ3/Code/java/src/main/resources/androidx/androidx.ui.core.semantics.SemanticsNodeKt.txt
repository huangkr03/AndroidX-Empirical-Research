androidx.ui.core.semantics.SemanticsNodeKt
    public static final androidx.ui.core.semantics.SemanticsWrapper getOuterSemantics(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode $r0, r2;
        androidx.ui.core.LayoutNode r1, $r5;
        boolean $z0, $z1;
        androidx.ui.core.semantics.SemanticsWrapper $r3, $r4;
        androidx.ui.core.LayoutNodeWrapper $r6, r7;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r2 = $r0;

        $z0 = r2 instanceof androidx.ui.core.LayoutNode;

        if $z0 == 0 goto label1;

        $r5 = (androidx.ui.core.LayoutNode) r2;

        goto label2;

     label1:
        $r5 = null;

     label2:
        r1 = $r5;

        if r1 != null goto label3;

        $r6 = (androidx.ui.core.LayoutNodeWrapper) null;

        goto label4;

     label3:
        $r6 = virtualinvoke r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

     label4:
        r7 = $r6;

     label5:
        if r7 == null goto label7;

        $z1 = r7 instanceof androidx.ui.core.semantics.SemanticsWrapper;

        if $z1 == 0 goto label6;

        $r4 = (androidx.ui.core.semantics.SemanticsWrapper) r7;

        return $r4;

     label6:
        r7 = virtualinvoke r7.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        goto label5;

     label7:
        $r3 = (androidx.ui.core.semantics.SemanticsWrapper) null;

        return $r3;
    }

    private static final androidx.ui.core.ComponentNode findHighestConsecutiveAncestor(androidx.ui.core.ComponentNode, kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.ComponentNode $r0, $r6, r7, r8;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object $r2, $r4;
        java.lang.Boolean $r3, $r5;
        boolean $z0, $z1;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $r6 = (androidx.ui.core.ComponentNode) null;

        return $r6;

     label1:
        r7 = $r0;

        r8 = virtualinvoke $r0.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode getParent()>();

     label2:
        if r8 == null goto label3;

        $r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r8);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        r7 = r8;

        r8 = virtualinvoke r8.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode getParent()>();

        goto label2;

     label3:
        return r7;
    }

    public static final androidx.ui.core.semantics.SemanticsNode findClosestParentNode(androidx.ui.core.semantics.SemanticsNode, kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.semantics.SemanticsNode $r0, $r2, r5;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r0 := @parameter0: androidx.ui.core.semantics.SemanticsNode;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selector");

        r5 = virtualinvoke $r0.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsNode getParent()>();

     label1:
        if r5 == null goto label3;

        $z0 = virtualinvoke r5.<androidx.ui.core.semantics.SemanticsNode: boolean isSemanticBoundary()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r4 = (java.lang.Boolean) $r3;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return r5;

     label2:
        r5 = virtualinvoke r5.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsNode getParent()>();

        goto label1;

     label3:
        $r2 = (androidx.ui.core.semantics.SemanticsNode) null;

        return $r2;
    }

    public static final androidx.ui.core.semantics.SemanticsNode findChildById(androidx.ui.core.semantics.SemanticsNode, int)
    {
        androidx.ui.core.semantics.SemanticsNode $r0, r4, r5, $r7;
        int i0, $i1;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.util.List $r6;
        boolean $z2;

        $r0 := @parameter0: androidx.ui.core.semantics.SemanticsNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = virtualinvoke $r0.<androidx.ui.core.semantics.SemanticsNode: int getId()>();

        if $i1 != i0 goto label1;

        return $r0;

     label1:
        $r6 = virtualinvoke $r0.<androidx.ui.core.semantics.SemanticsNode: java.util.List getChildren()>();

        $r1 = (java.lang.Iterable) $r6;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.ui.core.semantics.SemanticsNode) r3;

        r5 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsNode findChildById(androidx.ui.core.semantics.SemanticsNode,int)>(r4, i0);

        if r5 == null goto label3;

        return r5;

     label3:
        goto label2;

     label4:
        $r7 = (androidx.ui.core.semantics.SemanticsNode) null;

        return $r7;
    }

    private static final java.util.List findOneLayerOfSemanticsWrappers(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode $r0, r2;
        java.util.List r1, $r4;
        java.util.ArrayList $r3;
        boolean $z0, z1;
        java.lang.Object $r5;
        java.util.Iterator r6;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        z1 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r3;

        $r4 = virtualinvoke $r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        r6 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.ui.core.ComponentNode) $r5;

        staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: void findOneLayerOfSemanticsWrappersRecursive(androidx.ui.core.ComponentNode,java.util.List,androidx.ui.core.ComponentNode)>($r0, r1, r2);

        goto label1;

     label2:
        return r1;
    }

    private static final void findOneLayerOfSemanticsWrappersRecursive(androidx.ui.core.ComponentNode, java.util.List, androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode $r0, r2, r3;
        java.util.List r1, $r5;
        androidx.ui.core.semantics.SemanticsWrapper $r4, r7;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Iterator r8;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: androidx.ui.core.ComponentNode;

        $r4 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsWrapper getOuterSemantics(androidx.ui.core.ComponentNode)>(r2);

        if $r4 == null goto label1;

        r7 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsWrapper getOuterSemantics(androidx.ui.core.ComponentNode)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r7);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label3;

     label1:
        $r5 = virtualinvoke r2.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        r8 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.ui.core.ComponentNode) $r6;

        staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: void findOneLayerOfSemanticsWrappersRecursive(androidx.ui.core.ComponentNode,java.util.List,androidx.ui.core.ComponentNode)>($r0, r1, r3);

        goto label2;

     label3:
        return;
    }

    private static final androidx.ui.core.LayoutNode findFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode $r0, r1, r2;
        int i0, i1, i2, i3;
        androidx.ui.core.LayoutNode r3, $r5, $r7, $r8;
        boolean $z2, $z3;
        androidx.ui.core.semantics.SemanticsWrapper $r4, $r6;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        $z2 = $r0 instanceof androidx.ui.core.LayoutNode;

        if $z2 == 0 goto label1;

        $r6 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsWrapper getOuterSemantics(androidx.ui.core.ComponentNode)>($r0);

        if $r6 != null goto label1;

        $r7 = (androidx.ui.core.LayoutNode) $r0;

        return $r7;

     label1:
        r1 = $r0;

        i0 = virtualinvoke r1.<androidx.ui.core.ComponentNode: int getCount()>();

        i3 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label5;

        if i3 > i1 goto label5;

     label2:
        i2 = i3;

        i3 = i3 + 1;

        r2 = virtualinvoke r1.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode get(int)>(i2);

        $z3 = r2 instanceof androidx.ui.core.LayoutNode;

        if $z3 == 0 goto label3;

        $r4 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsWrapper getOuterSemantics(androidx.ui.core.ComponentNode)>($r0);

        if $r4 != null goto label3;

        $r5 = (androidx.ui.core.LayoutNode) r2;

        return $r5;

     label3:
        r3 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode findFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>(r2);

        if r3 == null goto label4;

        return r3;

     label4:
        if i3 <= i1 goto label2;

     label5:
        $r8 = (androidx.ui.core.LayoutNode) null;

        return $r8;
    }

    private static final androidx.ui.core.LayoutNode requireFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode $r0;
        androidx.ui.core.LayoutNode r1;
        java.lang.IllegalStateException $r2;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode findFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>($r0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This component has no layout children");

        throw $r2;

     label1:
        return r1;
    }

    public static final androidx.ui.core.LayoutNode access$requireFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode $r0;
        androidx.ui.core.LayoutNode $r1;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        $r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode requireFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>($r0);

        return $r1;
    }

    public static final androidx.ui.core.LayoutNode access$findFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode $r0;
        androidx.ui.core.LayoutNode $r1;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        $r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.LayoutNode findFirstNonSemanticsNodeInTree(androidx.ui.core.ComponentNode)>($r0);

        return $r1;
    }

    public static final java.util.List access$findOneLayerOfSemanticsWrappers(androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        $r1 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: java.util.List findOneLayerOfSemanticsWrappers(androidx.ui.core.ComponentNode)>($r0);

        return $r1;
    }

    public static final androidx.ui.core.ComponentNode access$findHighestConsecutiveAncestor(androidx.ui.core.ComponentNode, kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.ComponentNode $r0, $r2;
        kotlin.jvm.functions.Function1 r1;

        $r0 := @parameter0: androidx.ui.core.ComponentNode;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.ComponentNode findHighestConsecutiveAncestor(androidx.ui.core.ComponentNode,kotlin.jvm.functions.Function1)>($r0, r1);

        return $r2;
    }

