androidx.room.compiler.processing.util.compiler.SourceSet
<androidx.room.compiler.processing.util.compiler.SourceSet: androidx.room.compiler.processing.util.compiler.SourceSet$Companion Companion>
<androidx.room.compiler.processing.util.compiler.SourceSet: java.util.List sources>
<androidx.room.compiler.processing.util.compiler.SourceSet: java.io.File root>
<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy hasJavaSource$delegate>
<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy hasKotlinSource$delegate>
<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy javaSources$delegate>
<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy kotlinSources$delegate>
    public void <init>(java.io.File, java.util.List)
    {
        androidx.room.compiler.processing.util.compiler.SourceSet r0;
        java.io.File r1, $r3;
        java.util.List r2;
        boolean $z0;
        androidx.room.compiler.processing.util.compiler.SourceSet$hasJavaSource$2 $r4;
        kotlin.jvm.functions.Function0 $r5, $r8, $r11, $r14;
        kotlin.Lazy $r6, $r9, $r12, $r15;
        androidx.room.compiler.processing.util.compiler.SourceSet$hasKotlinSource$2 $r7;
        androidx.room.compiler.processing.util.compiler.SourceSet$javaSources$2 $r10;
        androidx.room.compiler.processing.util.compiler.SourceSet$kotlinSources$2 $r13;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.lang.IllegalStateException $r19;
        java.lang.String $r20, $r21;

        r0 := @this: androidx.room.compiler.processing.util.compiler.SourceSet;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "root");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "sources");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.util.compiler.SourceSet: java.util.List sources> = r2;

        $r3 = virtualinvoke r1.<java.io.File: java.io.File getCanonicalFile()>();

        r0.<androidx.room.compiler.processing.util.compiler.SourceSet: java.io.File root> = $r3;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be a directory");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label1:
        $r4 = new androidx.room.compiler.processing.util.compiler.SourceSet$hasJavaSource$2;

        specialinvoke $r4.<androidx.room.compiler.processing.util.compiler.SourceSet$hasJavaSource$2: void <init>(androidx.room.compiler.processing.util.compiler.SourceSet)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r5);

        r0.<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy hasJavaSource$delegate> = $r6;

        $r7 = new androidx.room.compiler.processing.util.compiler.SourceSet$hasKotlinSource$2;

        specialinvoke $r7.<androidx.room.compiler.processing.util.compiler.SourceSet$hasKotlinSource$2: void <init>(androidx.room.compiler.processing.util.compiler.SourceSet)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        $r9 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r8);

        r0.<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy hasKotlinSource$delegate> = $r9;

        $r10 = new androidx.room.compiler.processing.util.compiler.SourceSet$javaSources$2;

        specialinvoke $r10.<androidx.room.compiler.processing.util.compiler.SourceSet$javaSources$2: void <init>(androidx.room.compiler.processing.util.compiler.SourceSet)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        $r12 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r11);

        r0.<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy javaSources$delegate> = $r12;

        $r13 = new androidx.room.compiler.processing.util.compiler.SourceSet$kotlinSources$2;

        specialinvoke $r13.<androidx.room.compiler.processing.util.compiler.SourceSet$kotlinSources$2: void <init>(androidx.room.compiler.processing.util.compiler.SourceSet)>(r0);

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        $r15 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r14);

        r0.<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy kotlinSources$delegate> = $r15;

        return;
    }

    public final java.util.List getSources()
    {
        androidx.room.compiler.processing.util.compiler.SourceSet r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.util.compiler.SourceSet;

        $r1 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: java.util.List sources>;

        return $r1;
    }

    public final java.io.File getRoot()
    {
        androidx.room.compiler.processing.util.compiler.SourceSet r0;
        java.io.File $r1;

        r0 := @this: androidx.room.compiler.processing.util.compiler.SourceSet;

        $r1 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: java.io.File root>;

        return $r1;
    }

    public final boolean getHasJavaSource()
    {
        androidx.room.compiler.processing.util.compiler.SourceSet r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.util.compiler.SourceSet;

        r1 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy hasJavaSource$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final boolean getHasKotlinSource()
    {
        androidx.room.compiler.processing.util.compiler.SourceSet r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.util.compiler.SourceSet;

        r1 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy hasKotlinSource$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final java.util.List getJavaSources()
    {
        androidx.room.compiler.processing.util.compiler.SourceSet r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.util.compiler.SourceSet;

        r1 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy javaSources$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public final java.util.List getKotlinSources()
    {
        androidx.room.compiler.processing.util.compiler.SourceSet r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.util.compiler.SourceSet;

        r1 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: kotlin.Lazy kotlinSources$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public final androidx.room.compiler.processing.util.Source findSourceFile(java.lang.String)
    {
        androidx.room.compiler.processing.util.compiler.SourceSet r0;
        java.lang.String r1, r3, $r9, $r11, $r14, $r16, $r18, $r21;
        java.io.File r2, $r10, $r13, r22;
        java.lang.Iterable $r4;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.room.compiler.processing.util.Source r7, $r20, r24;
        boolean $z2, $z3, $z4;
        java.lang.StringBuilder $r15, $r17, r23;
        java.util.List $r19;

        r0 := @this: androidx.room.compiler.processing.util.compiler.SourceSet;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        r22 = new java.io.File;

        specialinvoke r22.<java.io.File: void <init>(java.lang.String)>(r1);

        r2 = virtualinvoke r22.<java.io.File: java.io.File getCanonicalFile()>();

        $r9 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "file.path");

        $r10 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: java.io.File root>;

        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getPath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "root.path");

        $z2 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r9, $r11, 0, 2, null);

        if $z2 != 0 goto label1;

        return null;

     label1:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: java.io.File root>;

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getCanonicalPath()>();

        $r15 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = <java.io.File: java.lang.String separator>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = staticinvoke <kotlin.text.StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>(r1, $r18, null, 2, null);

        $r19 = r0.<androidx.room.compiler.processing.util.compiler.SourceSet: java.util.List sources>;

        $r4 = (java.lang.Iterable) $r19;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.room.compiler.processing.util.Source) r6;

        $r21 = virtualinvoke r7.<androidx.room.compiler.processing.util.Source: java.lang.String getRelativePath()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r21, r3);

        if $z4 == 0 goto label2;

        r24 = (androidx.room.compiler.processing.util.Source) r6;

        return r24;

     label3:
        $r20 = (androidx.room.compiler.processing.util.Source) null;

        return $r20;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.util.compiler.SourceSet$Companion $r0;

        $r0 = new androidx.room.compiler.processing.util.compiler.SourceSet$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.util.compiler.SourceSet$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.util.compiler.SourceSet: androidx.room.compiler.processing.util.compiler.SourceSet$Companion Companion> = $r0;

        return;
    }

