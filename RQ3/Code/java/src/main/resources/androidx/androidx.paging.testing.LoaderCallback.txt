androidx.paging.testing.LoaderCallback
<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type>
<androidx.paging.testing.LoaderCallback: int position>
<androidx.paging.testing.LoaderCallback: int count>
    public void <init>(androidx.paging.testing.LoaderCallback$CallbackType, int, int)
    {
        androidx.paging.testing.LoaderCallback r0;
        androidx.paging.testing.LoaderCallback$CallbackType r1;
        int i0, i1;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        r1 := @parameter0: androidx.paging.testing.LoaderCallback$CallbackType;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type> = r1;

        r0.<androidx.paging.testing.LoaderCallback: int position> = i0;

        r0.<androidx.paging.testing.LoaderCallback: int count> = i1;

        return;
    }

    public final androidx.paging.testing.LoaderCallback$CallbackType getType()
    {
        androidx.paging.testing.LoaderCallback r0;
        androidx.paging.testing.LoaderCallback$CallbackType $r1;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        $r1 = r0.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type>;

        return $r1;
    }

    public final int getPosition()
    {
        androidx.paging.testing.LoaderCallback r0;
        int $i0;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        $i0 = r0.<androidx.paging.testing.LoaderCallback: int position>;

        return $i0;
    }

    public final int getCount()
    {
        androidx.paging.testing.LoaderCallback r0;
        int $i0;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        $i0 = r0.<androidx.paging.testing.LoaderCallback: int count>;

        return $i0;
    }

    public final androidx.paging.testing.LoaderCallback$CallbackType component1()
    {
        androidx.paging.testing.LoaderCallback r0;
        androidx.paging.testing.LoaderCallback$CallbackType $r1;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        $r1 = r0.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type>;

        return $r1;
    }

    public final int component2()
    {
        androidx.paging.testing.LoaderCallback r0;
        int $i0;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        $i0 = r0.<androidx.paging.testing.LoaderCallback: int position>;

        return $i0;
    }

    public final int component3()
    {
        androidx.paging.testing.LoaderCallback r0;
        int $i0;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        $i0 = r0.<androidx.paging.testing.LoaderCallback: int count>;

        return $i0;
    }

    public final androidx.paging.testing.LoaderCallback copy(androidx.paging.testing.LoaderCallback$CallbackType, int, int)
    {
        androidx.paging.testing.LoaderCallback r0, $r2;
        androidx.paging.testing.LoaderCallback$CallbackType r1;
        int i0, i1;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        r1 := @parameter0: androidx.paging.testing.LoaderCallback$CallbackType;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        $r2 = new androidx.paging.testing.LoaderCallback;

        specialinvoke $r2.<androidx.paging.testing.LoaderCallback: void <init>(androidx.paging.testing.LoaderCallback$CallbackType,int,int)>(r1, i0, i1);

        return $r2;
    }

    public static androidx.paging.testing.LoaderCallback copy$default(androidx.paging.testing.LoaderCallback, androidx.paging.testing.LoaderCallback$CallbackType, int, int, int, java.lang.Object)
    {
        androidx.paging.testing.LoaderCallback r0, $r2;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object r1;
        androidx.paging.testing.LoaderCallback$CallbackType r3;

        r0 := @parameter0: androidx.paging.testing.LoaderCallback;

        r3 := @parameter1: androidx.paging.testing.LoaderCallback$CallbackType;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i4 = r0.<androidx.paging.testing.LoaderCallback: int position>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        i5 = r0.<androidx.paging.testing.LoaderCallback: int count>;

     label3:
        $r2 = virtualinvoke r0.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback copy(androidx.paging.testing.LoaderCallback$CallbackType,int,int)>(r3, i4, i5);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.paging.testing.LoaderCallback r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        androidx.paging.testing.LoaderCallback$CallbackType $r3;
        int $i0, $i1;
        java.lang.String $r10;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LoaderCallback(type=");

        $r3 = r0.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", position=");

        $i0 = r0.<androidx.paging.testing.LoaderCallback: int position>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", count=");

        $i1 = r0.<androidx.paging.testing.LoaderCallback: int count>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public int hashCode()
    {
        androidx.paging.testing.LoaderCallback r0;
        androidx.paging.testing.LoaderCallback$CallbackType $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        $r1 = r0.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type>;

        i6 = virtualinvoke $r1.<androidx.paging.testing.LoaderCallback$CallbackType: int hashCode()>();

        $i1 = i6 * 31;

        $i0 = r0.<androidx.paging.testing.LoaderCallback: int position>;

        $i2 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        i7 = $i1 + $i2;

        $i4 = i7 * 31;

        $i3 = r0.<androidx.paging.testing.LoaderCallback: int count>;

        $i5 = staticinvoke <java.lang.Integer: int hashCode(int)>($i3);

        i8 = $i4 + $i5;

        return i8;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.paging.testing.LoaderCallback r0, r2;
        java.lang.Object r1;
        boolean $z0;
        androidx.paging.testing.LoaderCallback$CallbackType $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.paging.testing.LoaderCallback;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.paging.testing.LoaderCallback;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.paging.testing.LoaderCallback) r1;

        $r4 = r0.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type>;

        $r3 = r2.<androidx.paging.testing.LoaderCallback: androidx.paging.testing.LoaderCallback$CallbackType type>;

        if $r4 == $r3 goto label3;

        return 0;

     label3:
        $i1 = r0.<androidx.paging.testing.LoaderCallback: int position>;

        $i0 = r2.<androidx.paging.testing.LoaderCallback: int position>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i3 = r0.<androidx.paging.testing.LoaderCallback: int count>;

        $i2 = r2.<androidx.paging.testing.LoaderCallback: int count>;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        return 1;
    }

androidx.paging.testing.LoaderCallback$CallbackType
<androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_CHANGED>
<androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_INSERTED>
<androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_REMOVED>
<androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.paging.testing.LoaderCallback$CallbackType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.paging.testing.LoaderCallback$CallbackType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.paging.testing.LoaderCallback$CallbackType[] values()
    {
        androidx.paging.testing.LoaderCallback$CallbackType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.paging.testing.LoaderCallback$CallbackType[]) $r1;

        return $r2;
    }

    public static androidx.paging.testing.LoaderCallback$CallbackType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.paging.testing.LoaderCallback$CallbackType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/paging/testing/LoaderCallback$CallbackType;", r0);

        $r2 = (androidx.paging.testing.LoaderCallback$CallbackType) $r1;

        return $r2;
    }

    private static final androidx.paging.testing.LoaderCallback$CallbackType[] $values()
    {
        androidx.paging.testing.LoaderCallback$CallbackType[] r0;
        androidx.paging.testing.LoaderCallback$CallbackType $r1, $r2, $r3;

        r0 = newarray (androidx.paging.testing.LoaderCallback$CallbackType)[3];

        $r1 = <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_CHANGED>;

        r0[0] = $r1;

        $r2 = <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_INSERTED>;

        r0[1] = $r2;

        $r3 = <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_REMOVED>;

        r0[2] = $r3;

        return r0;
    }

    static void <clinit>()
    {
        androidx.paging.testing.LoaderCallback$CallbackType $r0, $r1, $r2;
        androidx.paging.testing.LoaderCallback$CallbackType[] $r3;

        $r0 = new androidx.paging.testing.LoaderCallback$CallbackType;

        specialinvoke $r0.<androidx.paging.testing.LoaderCallback$CallbackType: void <init>(java.lang.String,int)>("ON_CHANGED", 0);

        <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_CHANGED> = $r0;

        $r1 = new androidx.paging.testing.LoaderCallback$CallbackType;

        specialinvoke $r1.<androidx.paging.testing.LoaderCallback$CallbackType: void <init>(java.lang.String,int)>("ON_INSERTED", 1);

        <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_INSERTED> = $r1;

        $r2 = new androidx.paging.testing.LoaderCallback$CallbackType;

        specialinvoke $r2.<androidx.paging.testing.LoaderCallback$CallbackType: void <init>(java.lang.String,int)>("ON_REMOVED", 2);

        <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType ON_REMOVED> = $r2;

        $r3 = staticinvoke <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType[] $values()>();

        <androidx.paging.testing.LoaderCallback$CallbackType: androidx.paging.testing.LoaderCallback$CallbackType[] $VALUES> = $r3;

        return;
    }

