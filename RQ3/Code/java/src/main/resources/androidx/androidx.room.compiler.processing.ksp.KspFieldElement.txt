androidx.room.compiler.processing.ksp.KspFieldElement
<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspFieldElement$Companion Companion>
<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration declaration>
<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>
<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>
<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy enclosingElement$delegate>
<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy closestMemberContainer$delegate>
<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy name$delegate>
<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy type$delegate>
<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy syntheticAccessors$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSPropertyDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration r2;
        com.google.devtools.ksp.symbol.KSAnnotated $r3, $r8;
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion $r4;
        androidx.room.compiler.processing.XHasModifiers $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $r6;
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion $r7;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r9;
        androidx.room.compiler.processing.ksp.KspAnnotated $r10;
        androidx.room.compiler.processing.ksp.KspFieldElement$enclosingElement$2 $r11;
        kotlin.jvm.functions.Function0 $r12, $r15, $r18, $r21, $r24;
        kotlin.Lazy $r13, $r16, $r19, $r22, $r25;
        androidx.room.compiler.processing.ksp.KspFieldElement$closestMemberContainer$2 $r14;
        androidx.room.compiler.processing.ksp.KspFieldElement$name$2 $r17;
        androidx.room.compiler.processing.ksp.KspFieldElement$type$2 $r20;
        androidx.room.compiler.processing.ksp.KspFieldElement$syntheticAccessors$2 $r23;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "declaration");

        $r3 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspElement: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated)>(r1, $r3);

        r0.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration declaration> = r2;

        $r4 = <androidx.room.compiler.processing.ksp.KspHasModifiers: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspHasModifiers$Companion: androidx.room.compiler.processing.XHasModifiers create(com.google.devtools.ksp.symbol.KSPropertyDeclaration)>(r2);

        r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0> = $r5;

        $r7 = <androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspAnnotated$Companion Companion>;

        $r8 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        $r6 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion Companion>;

        $r9 = virtualinvoke $r6.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE_OR_FIELD()>();

        $r10 = virtualinvoke $r7.<androidx.room.compiler.processing.ksp.KspAnnotated$Companion: androidx.room.compiler.processing.ksp.KspAnnotated create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated,androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)>(r1, $r8, $r9);

        r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1> = $r10;

        $r11 = new androidx.room.compiler.processing.ksp.KspFieldElement$enclosingElement$2;

        specialinvoke $r11.<androidx.room.compiler.processing.ksp.KspFieldElement$enclosingElement$2: void <init>(androidx.room.compiler.processing.ksp.KspFieldElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy enclosingElement$delegate> = $r13;

        $r14 = new androidx.room.compiler.processing.ksp.KspFieldElement$closestMemberContainer$2;

        specialinvoke $r14.<androidx.room.compiler.processing.ksp.KspFieldElement$closestMemberContainer$2: void <init>(androidx.room.compiler.processing.ksp.KspFieldElement)>(r0);

        $r15 = (kotlin.jvm.functions.Function0) $r14;

        $r16 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r15);

        r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy closestMemberContainer$delegate> = $r16;

        $r17 = new androidx.room.compiler.processing.ksp.KspFieldElement$name$2;

        specialinvoke $r17.<androidx.room.compiler.processing.ksp.KspFieldElement$name$2: void <init>(androidx.room.compiler.processing.ksp.KspFieldElement)>(r0);

        $r18 = (kotlin.jvm.functions.Function0) $r17;

        $r19 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r18);

        r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy name$delegate> = $r19;

        $r20 = new androidx.room.compiler.processing.ksp.KspFieldElement$type$2;

        specialinvoke $r20.<androidx.room.compiler.processing.ksp.KspFieldElement$type$2: void <init>(androidx.room.compiler.processing.ksp.KspFieldElement)>(r0);

        $r21 = (kotlin.jvm.functions.Function0) $r20;

        $r22 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r21);

        r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy type$delegate> = $r22;

        $r23 = new androidx.room.compiler.processing.ksp.KspFieldElement$syntheticAccessors$2;

        specialinvoke $r23.<androidx.room.compiler.processing.ksp.KspFieldElement$syntheticAccessors$2: void <init>(androidx.room.compiler.processing.ksp.KspFieldElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r24 = (kotlin.jvm.functions.Function0) $r23;

        $r25 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r24);

        r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy syntheticAccessors$delegate> = $r25;

        return;
    }

    public com.google.devtools.ksp.symbol.KSPropertyDeclaration getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration declaration>;

        return $r1;
    }

    public boolean isAbstract()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isAbstract()>();

        return $z0;
    }

    public boolean isFinal()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isFinal()>();

        return $z0;
    }

    public boolean isPrivate()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isPrivate()>();

        return $z0;
    }

    public boolean isProtected()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isProtected()>();

        return $z0;
    }

    public boolean isPublic()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isPublic()>();

        return $z0;
    }

    public boolean isStatic()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isStatic()>();

        return $z0;
    }

    public boolean isTransient()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isTransient()>();

        return $z0;
    }

    public java.util.List getAllAnnotations()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAllAnnotations()>();

        return $r2;
    }

    public androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.Set $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public transient boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAllAnnotations(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAllAnnotations(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>(r1);

        return $z0;
    }

    public boolean hasAnnotationWithPackage(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        java.lang.String r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pkg");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotationWithPackage(java.lang.String)>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAnyAnnotation(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(java.util.Collection)>(r1);

        return $z0;
    }

    public androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy enclosingElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspMemberContainer) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.ksp.KspMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy closestMemberContainer$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspMemberContainer) $r2;

        return $r3;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy name$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.ksp.KspType getType()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy type$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspType) $r2;

        return $r3;
    }

    public final java.util.List getSyntheticAccessors()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspFieldElement: kotlin.Lazy syntheticAccessors$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public final androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement getSyntheticSetter()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement r4, $r6, r8;
        java.util.List $r5, $r7;
        boolean $z2, $z3;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: java.util.List getSyntheticAccessors()>();

        $r1 = (java.lang.Iterable) $r5;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement) r3;

        $r7 = virtualinvoke r4.<androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement: java.util.List getParameters()>();

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 == 0 goto label1;

        r8 = (androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement) r3;

        return r8;

     label4:
        $r6 = (androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement) null;

        return $r6;
    }

    public androidx.room.compiler.processing.ksp.KspType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XType r1;
        java.lang.String r2, $r9;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r3;
        androidx.room.compiler.processing.ksp.KspType $r4, $r5, $r7, $r10;
        boolean $z0, $z1, $z2;
        com.google.devtools.ksp.symbol.KSType $r6;
        java.lang.IllegalStateException $r8;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r4 = interfaceinvoke $r3.<androidx.room.compiler.processing.ksp.KspMemberContainer: androidx.room.compiler.processing.ksp.KspType getType()>();

        if $r4 == null goto label2;

        $z1 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspType: boolean isSameType(androidx.room.compiler.processing.XType)>(r1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 != 0 goto label4;

        $r10 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspType getType()>();

        return $r10;

     label4:
        $z0 = r1 instanceof androidx.room.compiler.processing.ksp.KspType;

        if $z0 != 0 goto label5;

        r2 = "Check failed.";

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label5:
        $r5 = (androidx.room.compiler.processing.ksp.KspType) r1;

        $r6 = virtualinvoke $r5.<androidx.room.compiler.processing.ksp.KspType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r7 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspType asMemberOf(com.google.devtools.ksp.symbol.KSType)>($r6);

        return $r7;
    }

    private final androidx.room.compiler.processing.ksp.KspType asMemberOf(com.google.devtools.ksp.symbol.KSType)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.google.devtools.ksp.symbol.KSType r1, $r6;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r3, $r5;
        com.google.devtools.ksp.symbol.KSTypeReference $r4;
        androidx.room.compiler.processing.ksp.KspType $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv$room_compiler_processing()>();

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration getDeclaration()>();

        $r4 = interfaceinvoke $r3.<com.google.devtools.ksp.symbol.KSPropertyDeclaration: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration getDeclaration()>();

        $r6 = staticinvoke <androidx.room.compiler.processing.ksp.KSAsMemberOfKt: com.google.devtools.ksp.symbol.KSType typeAsMemberOf(com.google.devtools.ksp.symbol.KSPropertyDeclaration,com.google.devtools.ksp.symbol.KSType)>($r5, r1);

        $r7 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspType wrap(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.symbol.KSType)>($r4, $r6);

        return $r7;
    }

    public volatile com.google.devtools.ksp.symbol.KSAnnotated getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r1;
        com.google.devtools.ksp.symbol.KSAnnotated $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration getDeclaration()>();

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotated) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r1;
        androidx.room.compiler.processing.XElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspMemberContainer getClosestMemberContainer()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType getType()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.ksp.KspType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspType getType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement r0;
        androidx.room.compiler.processing.XType r1, $r3;
        androidx.room.compiler.processing.ksp.KspType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspType asMemberOf(androidx.room.compiler.processing.XType)>(r1);

        $r3 = (androidx.room.compiler.processing.XType) $r2;

        return $r3;
    }

    public static final androidx.room.compiler.processing.ksp.KspType access$asMemberOf(androidx.room.compiler.processing.ksp.KspFieldElement, com.google.devtools.ksp.symbol.KSType)
    {
        androidx.room.compiler.processing.ksp.KspFieldElement $r0;
        com.google.devtools.ksp.symbol.KSType r1;
        androidx.room.compiler.processing.ksp.KspType $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspFieldElement;

        r1 := @parameter1: com.google.devtools.ksp.symbol.KSType;

        $r2 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspType asMemberOf(com.google.devtools.ksp.symbol.KSType)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspFieldElement$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspFieldElement$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspFieldElement$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspFieldElement$Companion Companion> = $r0;

        return;
    }

