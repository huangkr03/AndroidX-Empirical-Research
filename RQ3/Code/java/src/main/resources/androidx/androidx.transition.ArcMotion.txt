androidx.transition.ArcMotion
<androidx.transition.ArcMotion: float DEFAULT_MIN_ANGLE_DEGREES>
<androidx.transition.ArcMotion: float DEFAULT_MAX_ANGLE_DEGREES>
<androidx.transition.ArcMotion: float DEFAULT_MAX_TANGENT>
<androidx.transition.ArcMotion: float mMinimumHorizontalAngle>
<androidx.transition.ArcMotion: float mMinimumVerticalAngle>
<androidx.transition.ArcMotion: float mMaximumAngle>
<androidx.transition.ArcMotion: float mMinimumHorizontalTangent>
<androidx.transition.ArcMotion: float mMinimumVerticalTangent>
<androidx.transition.ArcMotion: float mMaximumTangent>
    public void <init>()
    {
        androidx.transition.ArcMotion r0;
        float $f0;

        r0 := @this: androidx.transition.ArcMotion;

        specialinvoke r0.<androidx.transition.PathMotion: void <init>()>();

        r0.<androidx.transition.ArcMotion: float mMinimumHorizontalAngle> = 0.0F;

        r0.<androidx.transition.ArcMotion: float mMinimumVerticalAngle> = 0.0F;

        r0.<androidx.transition.ArcMotion: float mMaximumAngle> = 70.0F;

        r0.<androidx.transition.ArcMotion: float mMinimumHorizontalTangent> = 0.0F;

        r0.<androidx.transition.ArcMotion: float mMinimumVerticalTangent> = 0.0F;

        $f0 = <androidx.transition.ArcMotion: float DEFAULT_MAX_TANGENT>;

        r0.<androidx.transition.ArcMotion: float mMaximumTangent> = $f0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.transition.ArcMotion r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        org.xmlpull.v1.XmlPullParser r4;
        float f0, f1, f2, $f3;
        int[] $r5;

        r0 := @this: androidx.transition.ArcMotion;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.transition.PathMotion: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<androidx.transition.ArcMotion: float mMinimumHorizontalAngle> = 0.0F;

        r0.<androidx.transition.ArcMotion: float mMinimumVerticalAngle> = 0.0F;

        r0.<androidx.transition.ArcMotion: float mMaximumAngle> = 70.0F;

        r0.<androidx.transition.ArcMotion: float mMinimumHorizontalTangent> = 0.0F;

        r0.<androidx.transition.ArcMotion: float mMinimumVerticalTangent> = 0.0F;

        $f3 = <androidx.transition.ArcMotion: float DEFAULT_MAX_TANGENT>;

        r0.<androidx.transition.ArcMotion: float mMaximumTangent> = $f3;

        $r5 = <androidx.transition.Styleable: int[] ARC_MOTION>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r5);

        r4 = (org.xmlpull.v1.XmlPullParser) r2;

        f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r3, r4, "minimumVerticalAngle", 1, 0.0F);

        virtualinvoke r0.<androidx.transition.ArcMotion: void setMinimumVerticalAngle(float)>(f0);

        f1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r3, r4, "minimumHorizontalAngle", 0, 0.0F);

        virtualinvoke r0.<androidx.transition.ArcMotion: void setMinimumHorizontalAngle(float)>(f1);

        f2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r3, r4, "maximumAngle", 2, 70.0F);

        virtualinvoke r0.<androidx.transition.ArcMotion: void setMaximumAngle(float)>(f2);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setMinimumHorizontalAngle(float)
    {
        androidx.transition.ArcMotion r0;
        float f0, $f1;

        r0 := @this: androidx.transition.ArcMotion;

        f0 := @parameter0: float;

        r0.<androidx.transition.ArcMotion: float mMinimumHorizontalAngle> = f0;

        $f1 = staticinvoke <androidx.transition.ArcMotion: float toTangent(float)>(f0);

        r0.<androidx.transition.ArcMotion: float mMinimumHorizontalTangent> = $f1;

        return;
    }

    public float getMinimumHorizontalAngle()
    {
        androidx.transition.ArcMotion r0;
        float $f0;

        r0 := @this: androidx.transition.ArcMotion;

        $f0 = r0.<androidx.transition.ArcMotion: float mMinimumHorizontalAngle>;

        return $f0;
    }

    public void setMinimumVerticalAngle(float)
    {
        androidx.transition.ArcMotion r0;
        float f0, $f1;

        r0 := @this: androidx.transition.ArcMotion;

        f0 := @parameter0: float;

        r0.<androidx.transition.ArcMotion: float mMinimumVerticalAngle> = f0;

        $f1 = staticinvoke <androidx.transition.ArcMotion: float toTangent(float)>(f0);

        r0.<androidx.transition.ArcMotion: float mMinimumVerticalTangent> = $f1;

        return;
    }

    public float getMinimumVerticalAngle()
    {
        androidx.transition.ArcMotion r0;
        float $f0;

        r0 := @this: androidx.transition.ArcMotion;

        $f0 = r0.<androidx.transition.ArcMotion: float mMinimumVerticalAngle>;

        return $f0;
    }

    public void setMaximumAngle(float)
    {
        androidx.transition.ArcMotion r0;
        float f0, $f1;

        r0 := @this: androidx.transition.ArcMotion;

        f0 := @parameter0: float;

        r0.<androidx.transition.ArcMotion: float mMaximumAngle> = f0;

        $f1 = staticinvoke <androidx.transition.ArcMotion: float toTangent(float)>(f0);

        r0.<androidx.transition.ArcMotion: float mMaximumTangent> = $f1;

        return;
    }

    public float getMaximumAngle()
    {
        androidx.transition.ArcMotion r0;
        float $f0;

        r0 := @this: androidx.transition.ArcMotion;

        $f0 = r0.<androidx.transition.ArcMotion: float mMaximumAngle>;

        return $f0;
    }

    private static float toTangent(float)
    {
        float f0, $f1, $f2;
        byte $b0, $b1;
        java.lang.IllegalArgumentException $r0;
        double $d0, $d1, $d2;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpl 90.0F;

        if $b1 <= 0 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Arc must be between 0 and 90 degrees");

        throw $r0;

     label2:
        $f1 = f0 / 2.0F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d2 = staticinvoke <java.lang.Math: double tan(double)>($d1);

        $f2 = (float) $d2;

        return $f2;
    }

    public android.graphics.Path getPath(float, float, float, float)
    {
        androidx.transition.ArcMotion r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, f38, f39, f40, f41, f42, f43, $f44, $f45, $f46, $f47, $f48, f49, f50, f51, f52, f53;
        android.graphics.Path r1, $r2;
        boolean z0, $z1;
        byte $b0, $b1, $b2, $b3, $b4;
        double $d0, $d1;

        r0 := @this: androidx.transition.ArcMotion;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.graphics.Path: void moveTo(float,float)>(f0, f1);

        f4 = f2 - f0;

        f5 = f3 - f1;

        $f16 = f4 * f4;

        $f15 = f5 * f5;

        f6 = $f16 + $f15;

        $f17 = f0 + f2;

        f7 = $f17 / 2.0F;

        $f18 = f1 + f3;

        f8 = $f18 / 2.0F;

        f9 = f6 * 0.25F;

        $b0 = f1 cmpl f3;

        if $b0 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        $f19 = staticinvoke <java.lang.Math: float abs(float)>(f4);

        $f20 = staticinvoke <java.lang.Math: float abs(float)>(f5);

        $b1 = $f19 cmpg $f20;

        if $b1 >= 0 goto label05;

        $f33 = 2.0F * f5;

        $f34 = f6 / $f33;

        f38 = staticinvoke <java.lang.Math: float abs(float)>($f34);

        if z0 == 0 goto label03;

        f39 = f3 + f38;

        f40 = f2;

        goto label04;

     label03:
        f39 = f1 + f38;

        f40 = f0;

     label04:
        $f35 = r0.<androidx.transition.ArcMotion: float mMinimumVerticalTangent>;

        $f37 = f9 * $f35;

        $f36 = r0.<androidx.transition.ArcMotion: float mMinimumVerticalTangent>;

        f41 = $f37 * $f36;

        goto label08;

     label05:
        $f21 = 2.0F * f4;

        f42 = f6 / $f21;

        if z0 == 0 goto label06;

        f40 = f0 + f42;

        f39 = f1;

        goto label07;

     label06:
        f40 = f2 - f42;

        f39 = f3;

     label07:
        $f22 = r0.<androidx.transition.ArcMotion: float mMinimumHorizontalTangent>;

        $f24 = f9 * $f22;

        $f23 = r0.<androidx.transition.ArcMotion: float mMinimumHorizontalTangent>;

        f41 = $f24 * $f23;

     label08:
        f43 = f7 - f40;

        f10 = f8 - f39;

        $f44 = f43 * f43;

        $f45 = f10 * f10;

        f11 = $f44 + $f45;

        $f46 = r0.<androidx.transition.ArcMotion: float mMaximumTangent>;

        $f47 = f9 * $f46;

        $f48 = r0.<androidx.transition.ArcMotion: float mMaximumTangent>;

        f12 = $f47 * $f48;

        f49 = 0.0F;

        $b3 = f11 cmpg f41;

        if $b3 >= 0 goto label09;

        f49 = f41;

        goto label10;

     label09:
        $b2 = f11 cmpl f12;

        if $b2 <= 0 goto label10;

        f49 = f12;

     label10:
        $b4 = f49 cmpl 0.0F;

        if $b4 == 0 goto label11;

        f50 = f49 / f11;

        $d0 = (double) f50;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f51 = (float) $d1;

        $f29 = f40 - f7;

        $f30 = f51 * $f29;

        f40 = f7 + $f30;

        $f31 = f39 - f8;

        $f32 = f51 * $f31;

        f39 = f8 + $f32;

     label11:
        $f25 = f0 + f40;

        f52 = $f25 / 2.0F;

        $f26 = f1 + f39;

        f53 = $f26 / 2.0F;

        $f27 = f40 + f2;

        f13 = $f27 / 2.0F;

        $f28 = f39 + f3;

        f14 = $f28 / 2.0F;

        virtualinvoke r1.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f52, f53, f13, f14, f2, f3);

        return r1;
    }

    static void <clinit>()
    {
        double $d0, $d1;
        float $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(35.0);

        $d1 = staticinvoke <java.lang.Math: double tan(double)>($d0);

        $f0 = (float) $d1;

        <androidx.transition.ArcMotion: float DEFAULT_MAX_TANGENT> = $f0;

        return;
    }

