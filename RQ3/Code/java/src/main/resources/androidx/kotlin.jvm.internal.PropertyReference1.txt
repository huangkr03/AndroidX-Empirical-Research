kotlin.jvm.internal.PropertyReference1
    public void <init>()
    {
        kotlin.jvm.internal.PropertyReference1 $r0;

        $r0 := @this: kotlin.jvm.internal.PropertyReference1;

        specialinvoke $r0.<kotlin.jvm.internal.PropertyReference: void <init>()>();

        return;
    }

    public void <init>(java.lang.Object)
    {
        kotlin.jvm.internal.PropertyReference1 $r0;
        java.lang.Object $r1;

        $r0 := @this: kotlin.jvm.internal.PropertyReference1;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke $r0.<kotlin.jvm.internal.PropertyReference: void <init>(java.lang.Object)>($r1);

        return;
    }

    public void <init>(java.lang.Object, java.lang.Class, java.lang.String, java.lang.String, int)
    {
        kotlin.jvm.internal.PropertyReference1 $r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;
        int $i0;

        $r0 := @this: kotlin.jvm.internal.PropertyReference1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        specialinvoke $r0.<kotlin.jvm.internal.PropertyReference: void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>($r1, $r2, $r3, $r4, $i0);

        return;
    }

    protected kotlin.reflect.KCallable computeReflected()
    {
        kotlin.jvm.internal.PropertyReference1 $r0;
        kotlin.reflect.KProperty1 $r1;

        $r0 := @this: kotlin.jvm.internal.PropertyReference1;

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r0);

        return $r1;
    }

    public java.lang.Object getDelegate(java.lang.Object)
    {
        kotlin.jvm.internal.PropertyReference1 $r0;
        java.lang.Object $r1;
        kotlin.reflect.KProperty $r2;
        kotlin.reflect.KProperty1 $r3;

        $r0 := @this: kotlin.jvm.internal.PropertyReference1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty getReflected()>();

        $r3 = (kotlin.reflect.KProperty1) $r2;

        $r1 = interfaceinvoke $r3.<kotlin.reflect.KProperty1: java.lang.Object getDelegate(java.lang.Object)>($r1);

        return $r1;
    }

    public volatile kotlin.reflect.KProperty$Getter getGetter()
    {
        kotlin.jvm.internal.PropertyReference1 $r0;
        kotlin.reflect.KProperty1$Getter $r1;

        $r0 := @this: kotlin.jvm.internal.PropertyReference1;

        $r1 = virtualinvoke $r0.<kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()>();

        return $r1;
    }

    public kotlin.reflect.KProperty1$Getter getGetter()
    {
        kotlin.jvm.internal.PropertyReference1 $r0;
        kotlin.reflect.KProperty $r1;
        kotlin.reflect.KProperty1 $r2;
        kotlin.reflect.KProperty1$Getter $r3;

        $r0 := @this: kotlin.jvm.internal.PropertyReference1;

        $r1 = virtualinvoke $r0.<kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty getReflected()>();

        $r2 = (kotlin.reflect.KProperty1) $r1;

        $r3 = interfaceinvoke $r2.<kotlin.reflect.KProperty1: kotlin.reflect.KProperty1$Getter getGetter()>();

        return $r3;
    }

    public java.lang.Object invoke(java.lang.Object)
    {
        kotlin.jvm.internal.PropertyReference1 $r0;
        java.lang.Object $r1;

        $r0 := @this: kotlin.jvm.internal.PropertyReference1;

        $r1 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke $r0.<kotlin.jvm.internal.PropertyReference1: java.lang.Object get(java.lang.Object)>($r1);

        return $r1;
    }

