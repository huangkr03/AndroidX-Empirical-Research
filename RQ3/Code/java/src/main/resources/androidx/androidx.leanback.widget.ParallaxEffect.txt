androidx.leanback.widget.ParallaxEffect
<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues>
<androidx.leanback.widget.ParallaxEffect: java.util.List mWeights>
<androidx.leanback.widget.ParallaxEffect: java.util.List mTotalWeights>
<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>
    void <init>()
    {
        androidx.leanback.widget.ParallaxEffect r0;
        java.util.ArrayList $r1, $r2, $r3, $r4;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(2);

        r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(2);

        r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mWeights> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(2);

        r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTotalWeights> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(4);

        r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets> = $r4;

        return;
    }

    public final java.util.List getPropertyRanges()
    {
        androidx.leanback.widget.ParallaxEffect r0;
        java.util.List $r1;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        $r1 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues>;

        return $r1;
    }

    public final java.util.List getWeights()
    {
        androidx.leanback.widget.ParallaxEffect r0;
        java.util.List $r1;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        $r1 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mWeights>;

        return $r1;
    }

    public final transient void setPropertyRanges(androidx.leanback.widget.Parallax$PropertyMarkerValue[])
    {
        androidx.leanback.widget.ParallaxEffect r0;
        androidx.leanback.widget.Parallax$PropertyMarkerValue[] r1, r2;
        int i0, i1;
        androidx.leanback.widget.Parallax$PropertyMarkerValue r3;
        java.util.List $r4, $r5;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: androidx.leanback.widget.Parallax$PropertyMarkerValue[];

        $r4 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r5 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public final transient void setWeights(float[])
    {
        androidx.leanback.widget.ParallaxEffect r0;
        float[] r1, r9, r10;
        float f0, f1, f2;
        java.util.List $r2, $r3, $r4, $r6;
        java.lang.Float $r5, $r7;
        byte $b0;
        java.lang.IllegalArgumentException $r8;
        int i1, i2, i3, i4;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: float[];

        r9 = r1;

        i1 = lengthof r9;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        f1 = r9[i2];

        $b0 = f1 cmpg 0.0F;

        if $b0 > 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mWeights>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTotalWeights>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        f2 = 0.0F;

        r10 = r1;

        i3 = lengthof r10;

        i4 = 0;

     label4:
        if i4 >= i3 goto label5;

        f0 = r10[i4];

        $r4 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mWeights>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        f2 = f2 + f0;

        $r6 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTotalWeights>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        i4 = i4 + 1;

        goto label4;

     label5:
        return;
    }

    public final transient androidx.leanback.widget.ParallaxEffect weights(float[])
    {
        androidx.leanback.widget.ParallaxEffect r0;
        float[] r1;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: float[];

        virtualinvoke r0.<androidx.leanback.widget.ParallaxEffect: void setWeights(float[])>(r1);

        return r0;
    }

    public final void addTarget(androidx.leanback.widget.ParallaxTarget)
    {
        androidx.leanback.widget.ParallaxEffect r0;
        androidx.leanback.widget.ParallaxTarget r1;
        java.util.List $r2;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: androidx.leanback.widget.ParallaxTarget;

        $r2 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final androidx.leanback.widget.ParallaxEffect target(androidx.leanback.widget.ParallaxTarget)
    {
        androidx.leanback.widget.ParallaxEffect r0;
        androidx.leanback.widget.ParallaxTarget r1;
        java.util.List $r2;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: androidx.leanback.widget.ParallaxTarget;

        $r2 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public final androidx.leanback.widget.ParallaxEffect target(java.lang.Object, android.animation.PropertyValuesHolder)
    {
        androidx.leanback.widget.ParallaxEffect r0;
        java.lang.Object r1;
        android.animation.PropertyValuesHolder r2;
        androidx.leanback.widget.ParallaxTarget$PropertyValuesHolderTarget $r3;
        java.util.List $r4;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.animation.PropertyValuesHolder;

        $r4 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>;

        $r3 = new androidx.leanback.widget.ParallaxTarget$PropertyValuesHolderTarget;

        specialinvoke $r3.<androidx.leanback.widget.ParallaxTarget$PropertyValuesHolderTarget: void <init>(java.lang.Object,android.animation.PropertyValuesHolder)>(r1, r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public final androidx.leanback.widget.ParallaxEffect target(java.lang.Object, android.util.Property)
    {
        androidx.leanback.widget.ParallaxEffect r0;
        java.lang.Object r1;
        android.util.Property r2;
        androidx.leanback.widget.ParallaxTarget$DirectPropertyTarget $r3;
        java.util.List $r4;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.util.Property;

        $r4 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>;

        $r3 = new androidx.leanback.widget.ParallaxTarget$DirectPropertyTarget;

        specialinvoke $r3.<androidx.leanback.widget.ParallaxTarget$DirectPropertyTarget: void <init>(java.lang.Object,android.util.Property)>(r1, r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public final java.util.List getTargets()
    {
        androidx.leanback.widget.ParallaxEffect r0;
        java.util.List $r1;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        $r1 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>;

        return $r1;
    }

    public final void removeTarget(androidx.leanback.widget.ParallaxTarget)
    {
        androidx.leanback.widget.ParallaxEffect r0;
        androidx.leanback.widget.ParallaxTarget r1;
        java.util.List $r2;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: androidx.leanback.widget.ParallaxTarget;

        $r2 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public final void performMapping(androidx.leanback.widget.Parallax)
    {
        androidx.leanback.widget.ParallaxEffect r0;
        androidx.leanback.widget.Parallax r1;
        androidx.leanback.widget.ParallaxTarget r2;
        java.util.List $r3, $r4, $r7;
        int $i0, i1, $i2;
        boolean $z0, $z1, z2;
        java.lang.Object $r5;
        float f0;
        java.lang.Number r6;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        r1 := @parameter0: androidx.leanback.widget.Parallax;

        $r3 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= 2 goto label1;

        return;

     label1:
        $z0 = r0 instanceof androidx.leanback.widget.ParallaxEffect$IntEffect;

        if $z0 == 0 goto label2;

        virtualinvoke r1.<androidx.leanback.widget.Parallax: void verifyIntProperties()>();

        goto label3;

     label2:
        virtualinvoke r1.<androidx.leanback.widget.Parallax: void verifyFloatProperties()>();

     label3:
        z2 = 0;

        f0 = 0.0F;

        r6 = null;

        i1 = 0;

     label4:
        $r7 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i1 >= $i2 goto label9;

        $r4 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTargets>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (androidx.leanback.widget.ParallaxTarget) $r5;

        $z1 = virtualinvoke r2.<androidx.leanback.widget.ParallaxTarget: boolean isDirectMapping()>();

        if $z1 == 0 goto label6;

        if r6 != null goto label5;

        r6 = virtualinvoke r0.<androidx.leanback.widget.ParallaxEffect: java.lang.Number calculateDirectValue(androidx.leanback.widget.Parallax)>(r1);

     label5:
        virtualinvoke r2.<androidx.leanback.widget.ParallaxTarget: void directUpdate(java.lang.Number)>(r6);

        goto label8;

     label6:
        if z2 != 0 goto label7;

        z2 = 1;

        f0 = virtualinvoke r0.<androidx.leanback.widget.ParallaxEffect: float calculateFraction(androidx.leanback.widget.Parallax)>(r1);

     label7:
        virtualinvoke r2.<androidx.leanback.widget.ParallaxTarget: void update(float)>(f0);

     label8:
        i1 = i1 + 1;

        goto label4;

     label9:
        return;
    }

<androidx.leanback.widget.ParallaxEffect: float calculateFraction(androidx.leanback.widget.Parallax)>
<androidx.leanback.widget.ParallaxEffect: java.lang.Number calculateDirectValue(androidx.leanback.widget.Parallax)>
    final float getFractionWithWeightAdjusted(float, int)
    {
        androidx.leanback.widget.ParallaxEffect r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0, $z1;
        java.util.List $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r12;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7, f8;
        java.lang.Object $r7, $r10, $r13;
        java.lang.Float $r8, $r11, $r14;

        r0 := @this: androidx.leanback.widget.ParallaxEffect;

        f6 := @parameter0: float;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 < 3 goto label5;

        $r2 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mWeights>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues>;

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        if $i2 != $i4 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label4;

        $r6 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTotalWeights>;

        $r5 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTotalWeights>;

        $i8 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i9 = $i8 - 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i9);

        $r8 = (java.lang.Float) $r7;

        f7 = virtualinvoke $r8.<java.lang.Float: float floatValue()>();

        $r9 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mWeights>;

        $i10 = i0 - 1;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i10);

        $r11 = (java.lang.Float) $r10;

        $f2 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        $f3 = f6 * $f2;

        f6 = $f3 / f7;

        if i0 < 2 goto label3;

        $r12 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mTotalWeights>;

        $i11 = i0 - 2;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i11);

        $r14 = (java.lang.Float) $r13;

        $f4 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

        $f5 = $f4 / f7;

        f6 = f6 + $f5;

     label3:
        goto label5;

     label4:
        $r4 = r0.<androidx.leanback.widget.ParallaxEffect: java.util.List mMarkerValues>;

        $i5 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        f8 = (float) $i6;

        f6 = f6 / f8;

        if i0 < 2 goto label5;

        $i7 = i0 - 1;

        $f0 = (float) $i7;

        $f1 = $f0 / f8;

        f6 = f6 + $f1;

     label5:
        return f6;
    }

