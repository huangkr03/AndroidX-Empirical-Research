androidx.paging.PageFetcherSnapshotKt
    public static final boolean shouldPrioritizeOver(androidx.paging.GenerationalViewportHint, androidx.paging.GenerationalViewportHint, androidx.paging.LoadType)
    {
        androidx.paging.GenerationalViewportHint $r0, r1;
        androidx.paging.LoadType r2;
        int $i0, $i1, $i2, $i3;
        androidx.paging.ViewportHint $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: androidx.paging.GenerationalViewportHint;

        r1 := @parameter1: androidx.paging.GenerationalViewportHint;

        r2 := @parameter2: androidx.paging.LoadType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "previous");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "loadType");

        $i0 = virtualinvoke $r0.<androidx.paging.GenerationalViewportHint: int getGenerationId()>();

        $i1 = virtualinvoke r1.<androidx.paging.GenerationalViewportHint: int getGenerationId()>();

        if $i0 <= $i1 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $i2 = virtualinvoke $r0.<androidx.paging.GenerationalViewportHint: int getGenerationId()>();

        $i3 = virtualinvoke r1.<androidx.paging.GenerationalViewportHint: int getGenerationId()>();

        if $i2 >= $i3 goto label2;

        $z0 = 0;

        goto label3;

     label2:
        $r3 = virtualinvoke $r0.<androidx.paging.GenerationalViewportHint: androidx.paging.ViewportHint getHint()>();

        $r4 = virtualinvoke r1.<androidx.paging.GenerationalViewportHint: androidx.paging.ViewportHint getHint()>();

        $z0 = staticinvoke <androidx.paging.HintHandlerKt: boolean shouldPrioritizeOver(androidx.paging.ViewportHint,androidx.paging.ViewportHint,androidx.paging.LoadType)>($r3, $r4, r2);

     label3:
        return $z0;
    }

