com.google.common.flogger.context.Tags
<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags EMPTY_TAGS>
<com.google.common.flogger.context.Tags: java.util.Comparator KEY_VALUE_COMPARATOR>
<com.google.common.flogger.context.Tags: java.util.Comparator VALUE_COMPARATOR>
<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>
    static volatile java.util.Comparator '-$$Nest$sfgetVALUE_COMPARATOR'()
    {
        java.util.Comparator r0;

        r0 = <com.google.common.flogger.context.Tags: java.util.Comparator VALUE_COMPARATOR>;

        return r0;
    }

    static void <clinit>()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.util.List $r1;
        com.google.common.flogger.context.Tags$1 $r2;
        com.google.common.flogger.context.Tags$2 $r3;
        com.google.common.flogger.context.Tags $r4;

        $r2 = new com.google.common.flogger.context.Tags$1;

        specialinvoke $r2.<com.google.common.flogger.context.Tags$1: void <init>()>();

        <com.google.common.flogger.context.Tags: java.util.Comparator VALUE_COMPARATOR> = $r2;

        $r3 = new com.google.common.flogger.context.Tags$2;

        specialinvoke $r3.<com.google.common.flogger.context.Tags$2: void <init>()>();

        <com.google.common.flogger.context.Tags: java.util.Comparator KEY_VALUE_COMPARATOR> = $r3;

        $r4 = new com.google.common.flogger.context.Tags;

        $r0 = new com.google.common.flogger.context.Tags$LightweightTagMap;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: void <init>(java.util.List)>($r1);

        specialinvoke $r4.<com.google.common.flogger.context.Tags: void <init>(com.google.common.flogger.context.Tags$LightweightTagMap)>($r0);

        <com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags EMPTY_TAGS> = $r4;

        return;
    }

    private void <init>(com.google.common.flogger.context.Tags$LightweightTagMap)
    {
        com.google.common.flogger.context.Tags $r0;
        com.google.common.flogger.context.Tags$LightweightTagMap $r1;

        $r0 := @this: com.google.common.flogger.context.Tags;

        $r1 := @parameter0: com.google.common.flogger.context.Tags$LightweightTagMap;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map> = $r1;

        return;
    }

    public static com.google.common.flogger.context.Tags empty()
    {
        com.google.common.flogger.context.Tags r0;

        r0 = <com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags EMPTY_TAGS>;

        return r0;
    }

    public java.util.Map asMap()
    {
        com.google.common.flogger.context.Tags $r0;
        com.google.common.flogger.context.Tags$LightweightTagMap r1;
        java.util.Map r2;

        $r0 := @this: com.google.common.flogger.context.Tags;

        r1 = $r0.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>;

        r2 = (java.util.Map) r1;

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.flogger.context.Tags $r0, $r2;
        boolean $z0;
        java.lang.Object $r1;
        com.google.common.flogger.context.Tags$LightweightTagMap $r3, $r4;

        $r0 := @this: com.google.common.flogger.context.Tags;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.flogger.context.Tags;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.flogger.context.Tags) $r1;

        $r3 = $r2.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>;

        $r4 = $r0.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>;

        $z0 = virtualinvoke $r3.<com.google.common.flogger.context.Tags$LightweightTagMap: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        com.google.common.flogger.context.Tags $r0;
        int $i0;
        com.google.common.flogger.context.Tags$LightweightTagMap $r1;

        $r0 := @this: com.google.common.flogger.context.Tags;

        $r1 = $r0.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>;

        $i0 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap: int hashCode()>();

        $i0 = $i0 ^ -1;

        return $i0;
    }

    public boolean isEmpty()
    {
        com.google.common.flogger.context.Tags $r0;
        boolean $z0;
        com.google.common.flogger.context.Tags$LightweightTagMap $r1;

        $r0 := @this: com.google.common.flogger.context.Tags;

        $r1 = $r0.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>;

        $z0 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap: boolean isEmpty()>();

        return $z0;
    }

    public com.google.common.flogger.context.Tags merge(com.google.common.flogger.context.Tags)
    {
        com.google.common.flogger.context.Tags $r0, $r3, $r4;
        com.google.common.flogger.context.Tags$LightweightTagMap $r1, $r2, $r5;
        boolean $z0;

        $r0 := @this: com.google.common.flogger.context.Tags;

        $r3 := @parameter0: com.google.common.flogger.context.Tags;

        $z0 = virtualinvoke $r3.<com.google.common.flogger.context.Tags: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $z0 = virtualinvoke $r0.<com.google.common.flogger.context.Tags: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return $r3;

     label2:
        $r4 = new com.google.common.flogger.context.Tags;

        $r1 = new com.google.common.flogger.context.Tags$LightweightTagMap;

        $r2 = $r0.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>;

        $r5 = $r3.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>;

        specialinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap: void <init>(com.google.common.flogger.context.Tags$LightweightTagMap,com.google.common.flogger.context.Tags$LightweightTagMap)>($r2, $r5);

        specialinvoke $r4.<com.google.common.flogger.context.Tags: void <init>(com.google.common.flogger.context.Tags$LightweightTagMap)>($r1);

        return $r4;
    }

    public java.lang.String toString()
    {
        com.google.common.flogger.context.Tags $r0;
        java.lang.String $r1;
        com.google.common.flogger.context.Tags$LightweightTagMap $r2;

        $r0 := @this: com.google.common.flogger.context.Tags;

        $r2 = $r0.<com.google.common.flogger.context.Tags: com.google.common.flogger.context.Tags$LightweightTagMap map>;

        $r1 = virtualinvoke $r2.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.String toString()>();

        return $r1;
    }

com.google.common.flogger.context.Tags$1
    void <init>()
    {
        com.google.common.flogger.context.Tags$1 $r0;

        $r0 := @this: com.google.common.flogger.context.Tags$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.flogger.context.Tags$1 $r0;
        java.lang.Object $r1, $r2;
        com.google.common.flogger.context.Tags$Type $r3, $r4;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$1;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = staticinvoke <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type '-$$Nest$smof'(java.lang.Object)>($r2);

        $r4 = staticinvoke <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type '-$$Nest$smof'(java.lang.Object)>($r1);

        if $r3 != $r4 goto label1;

        $i0 = virtualinvoke $r3.<com.google.common.flogger.context.Tags$Type: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $i0;

     label1:
        $i0 = virtualinvoke $r3.<com.google.common.flogger.context.Tags$Type: int compareTo(java.lang.Enum)>($r4);

        return $i0;
    }

com.google.common.flogger.context.Tags$2
    void <init>()
    {
        com.google.common.flogger.context.Tags$2 $r0;

        $r0 := @this: com.google.common.flogger.context.Tags$2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.google.common.flogger.context.Tags$KeyValuePair, com.google.common.flogger.context.Tags$KeyValuePair)
    {
        com.google.common.flogger.context.Tags$2 $r0;
        com.google.common.flogger.context.Tags$KeyValuePair $r1, $r2;
        java.lang.String $r3, $r4;
        int $i0;
        java.lang.Object $r5, $r7;
        java.util.Comparator $r6;

        $r0 := @this: com.google.common.flogger.context.Tags$2;

        $r1 := @parameter0: com.google.common.flogger.context.Tags$KeyValuePair;

        $r2 := @parameter1: com.google.common.flogger.context.Tags$KeyValuePair;

        $r3 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.String '-$$Nest$fgetkey'(com.google.common.flogger.context.Tags$KeyValuePair)>($r1);

        $r4 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.String '-$$Nest$fgetkey'(com.google.common.flogger.context.Tags$KeyValuePair)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

        if $i0 != 0 goto label4;

        $r5 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)>($r1);

        if $r5 == null goto label2;

        $r5 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)>($r2);

        if $r5 == null goto label1;

        $r6 = staticinvoke <com.google.common.flogger.context.Tags: java.util.Comparator '-$$Nest$sfgetVALUE_COMPARATOR'()>();

        $r5 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)>($r1);

        $r7 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)>($r2);

        $i0 = interfaceinvoke $r6.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r5, $r7);

        return $i0;

     label1:
        return 1;

     label2:
        $r5 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)>($r2);

        if $r5 == null goto label3;

        return -1;

     label3:
        return 0;

     label4:
        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.flogger.context.Tags$2 $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        com.google.common.flogger.context.Tags$KeyValuePair $r3, $r4;

        $r0 := @this: com.google.common.flogger.context.Tags$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.google.common.flogger.context.Tags$KeyValuePair) $r1;

        $r4 = (com.google.common.flogger.context.Tags$KeyValuePair) $r2;

        $i0 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$2: int compare(com.google.common.flogger.context.Tags$KeyValuePair,com.google.common.flogger.context.Tags$KeyValuePair)>($r3, $r4);

        return $i0;
    }

com.google.common.flogger.context.Tags$KeyValuePair
<com.google.common.flogger.context.Tags$KeyValuePair: java.lang.String key>
<com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object value>
    static volatile java.lang.String '-$$Nest$fgetkey'(com.google.common.flogger.context.Tags$KeyValuePair)
    {
        com.google.common.flogger.context.Tags$KeyValuePair $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.google.common.flogger.context.Tags$KeyValuePair;

        r1 = $r0.<com.google.common.flogger.context.Tags$KeyValuePair: java.lang.String key>;

        return r1;
    }

    static volatile java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)
    {
        com.google.common.flogger.context.Tags$KeyValuePair $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.google.common.flogger.context.Tags$KeyValuePair;

        r1 = $r0.<com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object value>;

        return r1;
    }

com.google.common.flogger.context.Tags$LightweightTagMap$1
    void <init>()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$1 $r0;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$1 $r0;
        java.lang.Object $r1, $r2;
        java.util.Map$Entry $r3;
        java.lang.String $r4, $r5;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Map$Entry) $r1;

        $r1 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.String) $r1;

        $r3 = (java.util.Map$Entry) $r2;

        $r1 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r1;

        $i0 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r5);

        return $i0;
    }

com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1
<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: int n>
<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet this$1>
    void <init>(com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1 $r0;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1;

        $r1 := @parameter0: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: int n> = 0;

        return;
    }

    public boolean hasNext()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1 $r0;
        int $i0, $i1;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1;

        $i1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: int n>;

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet this$1>;

        $i0 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int size()>();

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1 $r0;
        int $i0, $i1;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r1;
        com.google.common.flogger.context.Tags$LightweightTagMap $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.util.NoSuchElementException $r5;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1;

        $i0 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: int n>;

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet this$1>;

        $i1 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int size()>();

        if $i0 >= $i1 goto label1;

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet this$1>;

        $r2 = $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: com.google.common.flogger.context.Tags$LightweightTagMap this$0>;

        $r3 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] '-$$Nest$fgetarray'(com.google.common.flogger.context.Tags$LightweightTagMap)>($r2);

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet this$1>;

        $i1 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getStart()>();

        $i1 = $i1 + $i0;

        $r4 = $r3[$i1];

        $i0 = $i0 + 1;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: int n> = $i0;

        return $r4;

     label1:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;
    }

    public void remove()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1 $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet
<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int index>
<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: com.google.common.flogger.context.Tags$LightweightTagMap this$0>
    void <init>(com.google.common.flogger.context.Tags$LightweightTagMap, int)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        com.google.common.flogger.context.Tags$LightweightTagMap $r1;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $r1 := @parameter0: com.google.common.flogger.context.Tags$LightweightTagMap;

        $i0 := @parameter1: int;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: com.google.common.flogger.context.Tags$LightweightTagMap this$0> = $r1;

        specialinvoke $r0.<java.util.AbstractSet: void <init>()>();

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int index> = $i0;

        return;
    }

    private java.util.Comparator getComparator()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        int $i0;
        java.util.Comparator $r1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $i0 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int index>;

        if $i0 != -1 goto label1;

        $r1 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Comparator '-$$Nest$sfgetENTRY_COMPARATOR'()>();

        return $r1;

     label1:
        $r1 = staticinvoke <com.google.common.flogger.context.Tags: java.util.Comparator '-$$Nest$sfgetVALUE_COMPARATOR'()>();

        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        java.lang.Object $r1;
        com.google.common.flogger.context.Tags$LightweightTagMap $r2;
        java.lang.Object[] $r3;
        int $i0, $i1;
        java.util.Comparator $r4;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: com.google.common.flogger.context.Tags$LightweightTagMap this$0>;

        $r3 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] '-$$Nest$fgetarray'(com.google.common.flogger.context.Tags$LightweightTagMap)>($r2);

        $i0 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getStart()>();

        $i1 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getEnd()>();

        $r4 = specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: java.util.Comparator getComparator()>();

        $i0 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator)>($r3, $i0, $i1, $r1, $r4);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    int getEnd()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        int[] $r1;
        com.google.common.flogger.context.Tags$LightweightTagMap $r2;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $r2 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: com.google.common.flogger.context.Tags$LightweightTagMap this$0>;

        $r1 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: int[] '-$$Nest$fgetoffsets'(com.google.common.flogger.context.Tags$LightweightTagMap)>($r2);

        $i0 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int index>;

        $i0 = $i0 + 1;

        $i0 = $r1[$i0];

        return $i0;
    }

    int getStart()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        int[] $r1;
        int $i0;
        com.google.common.flogger.context.Tags$LightweightTagMap $r2;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $i0 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int index>;

        if $i0 != -1 goto label1;

        return 0;

     label1:
        $r2 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: com.google.common.flogger.context.Tags$LightweightTagMap this$0>;

        $r1 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: int[] '-$$Nest$fgetoffsets'(com.google.common.flogger.context.Tags$LightweightTagMap)>($r2);

        $i0 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int index>;

        $i0 = $r1[$i0];

        return $i0;
    }

    java.lang.Object getValue(int)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        int $i0, $i1;
        com.google.common.flogger.context.Tags$LightweightTagMap $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: com.google.common.flogger.context.Tags$LightweightTagMap this$0>;

        $r2 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] '-$$Nest$fgetarray'(com.google.common.flogger.context.Tags$LightweightTagMap)>($r1);

        $i1 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getStart()>();

        $i0 = $i1 + $i0;

        $r3 = $r2[$i0];

        return $r3;
    }

    java.lang.Object[] getValuesArray()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        java.lang.Object[] $r1;
        com.google.common.flogger.context.Tags$LightweightTagMap $r2;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $r2 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: com.google.common.flogger.context.Tags$LightweightTagMap this$0>;

        $r1 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] '-$$Nest$fgetarray'(com.google.common.flogger.context.Tags$LightweightTagMap)>($r2);

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1 $r1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $r1 = new com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1;

        specialinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet$1: void <init>(com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet)>($r0);

        return $r1;
    }

    public int size()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0;
        int $i0, $i1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $i0 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getEnd()>();

        $i1 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getStart()>();

        $i0 = $i0 - $i1;

        return $i0;
    }

com.google.common.flogger.context.Tags$LightweightTagMap
<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Comparator ENTRY_COMPARATOR>
<com.google.common.flogger.context.Tags$LightweightTagMap: int[] singletonOffsets>
<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] array>
<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Set entrySet>
<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Integer hashCode>
<com.google.common.flogger.context.Tags$LightweightTagMap: int[] offsets>
<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.String toString>
    static volatile java.lang.Object[] '-$$Nest$fgetarray'(com.google.common.flogger.context.Tags$LightweightTagMap)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.lang.Object[] r1;

        $r0 := @parameter0: com.google.common.flogger.context.Tags$LightweightTagMap;

        r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] array>;

        return r1;
    }

    static volatile int[] '-$$Nest$fgetoffsets'(com.google.common.flogger.context.Tags$LightweightTagMap)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        int[] r1;

        $r0 := @parameter0: com.google.common.flogger.context.Tags$LightweightTagMap;

        r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int[] offsets>;

        return r1;
    }

    static volatile java.util.Comparator '-$$Nest$sfgetENTRY_COMPARATOR'()
    {
        java.util.Comparator r0;

        r0 = <com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Comparator ENTRY_COMPARATOR>;

        return r0;
    }

    static void <clinit>()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$1 $r0;
        int[] $r1;

        $r0 = new com.google.common.flogger.context.Tags$LightweightTagMap$1;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$1: void <init>()>();

        <com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Comparator ENTRY_COMPARATOR> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 1;

        $r1[1] = 2;

        <com.google.common.flogger.context.Tags$LightweightTagMap: int[] singletonOffsets> = $r1;

        return;
    }

    void <init>(com.google.common.flogger.context.Tags$LightweightTagMap, com.google.common.flogger.context.Tags$LightweightTagMap)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0, $r1, $r2;
        int $i0, $i1, $i2;
        java.lang.Object[] $r3;
        int[] $r4;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet r5;
        java.util.Set r6;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r2 := @parameter0: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r1 := @parameter1: com.google.common.flogger.context.Tags$LightweightTagMap;

        specialinvoke $r0.<java.util.AbstractMap: void <init>()>();

        r5 = new com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        specialinvoke r5.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: void <init>(com.google.common.flogger.context.Tags$LightweightTagMap,int)>($r0, -1);

        r6 = (java.util.Set) r5;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Set entrySet> = r6;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Integer hashCode> = null;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.String toString> = null;

        $i0 = virtualinvoke $r2.<com.google.common.flogger.context.Tags$LightweightTagMap: int size()>();

        $i1 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap: int size()>();

        $i0 = $i0 + $i1;

        $i1 = specialinvoke $r2.<com.google.common.flogger.context.Tags$LightweightTagMap: int getTotalElementCount()>();

        $i2 = specialinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap: int getTotalElementCount()>();

        $i1 = $i1 + $i2;

        $r3 = newarray (java.lang.Object)[$i1];

        $i1 = $i0 + 1;

        $r4 = newarray (int)[$i1];

        $i0 = specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int mergeTagMaps(com.google.common.flogger.context.Tags$LightweightTagMap,com.google.common.flogger.context.Tags$LightweightTagMap,int,java.lang.Object[],int[])>($r2, $r1, $i0, $r3, $r4);

        $r3 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] adjustOffsetsAndMaybeResize(java.lang.Object[],int[],int)>($r3, $r4, $i0);

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] array> = $r3;

        $r4 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: int[] maybeResizeOffsetsArray(int[])>($r4);

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int[] offsets> = $r4;

        return;
    }

    void <init>(java.util.List)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object[] $r2;
        int[] $r3;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet r4;
        java.util.Set r5;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r1 := @parameter0: java.util.List;

        specialinvoke $r0.<java.util.AbstractMap: void <init>()>();

        r4 = new com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        specialinvoke r4.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: void <init>(com.google.common.flogger.context.Tags$LightweightTagMap,int)>($r0, -1);

        r5 = (java.util.Set) r4;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Set entrySet> = r5;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Integer hashCode> = null;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.String toString> = null;

        $i0 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: int countMapEntries(java.util.List)>($r1);

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i1 + $i0;

        $r2 = newarray (java.lang.Object)[$i1];

        $i1 = $i0 + 1;

        $r3 = newarray (int)[$i1];

        $i0 = specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int makeTagMap(java.util.List,int,java.lang.Object[],int[])>($r1, $i0, $r2, $r3);

        $r2 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] maybeResizeElementArray(java.lang.Object[],int)>($r2, $i0);

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] array> = $r2;

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int[] offsets> = $r3;

        return;
    }

    private static java.lang.Object[] adjustOffsetsAndMaybeResize(java.lang.Object[], int[], int)
    {
        java.lang.Object[] $r0, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        int[] $r1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 = $r1[0];

        $i2 = $i1 - $i0;

        if $i2 != 0 goto label1;

        return $r0;

     label1:
        $i3 = 0;

     label2:
        if $i3 > $i0 goto label3;

        $i4 = $r1[$i3];

        $i4 = $i4 - $i2;

        $r1[$i3] = $i4;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i2 = $r1[$i0];

        $i3 = $i2 - $i0;

        $i4 = lengthof $r0;

        $z0 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: boolean mustResize(int,int)>($i4, $i2);

        if $z0 == 0 goto label4;

        $r2 = newarray (java.lang.Object)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r2, 0, $i0);

        goto label5;

     label4:
        $r2 = $r0;

     label5:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i1, $r2, $i0, $i3);

        return $r2;
    }

    private int copyEntryAndValues(java.util.Map$Entry, int, int, java.lang.Object[], int[])
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.lang.Object[] $r1, $r6;
        int[] $r2;
        java.util.Map$Entry $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r5;
        java.lang.String $r7;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r3 := @parameter0: java.util.Map$Entry;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.Object[];

        $r2 := @parameter4: int[];

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet) $r4;

        $i2 = virtualinvoke $r5.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getEnd()>();

        $i3 = virtualinvoke $r5.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getStart()>();

        $i2 = $i2 - $i3;

        $r6 = virtualinvoke $r5.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: java.lang.Object[] getValuesArray()>();

        $i3 = virtualinvoke $r5.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int getStart()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i3, $r1, $i1, $i2);

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r4;

        $r3 = specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry newEntry(java.lang.String,int)>($r7, $i0);

        $r1[$i0] = $r3;

        $i1 = $i1 + $i2;

        $i0 = $i0 + 1;

        $r2[$i0] = $i1;

        return $i1;
    }

    private static int countMapEntries(java.util.List)
    {
        java.util.List $r0;
        java.util.Iterator $r1;
        java.lang.String $r2, $r5;
        int $i0;
        boolean $z0;
        java.lang.Object $r3;
        com.google.common.flogger.context.Tags$KeyValuePair $r4;

        $r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        $r2 = null;

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.flogger.context.Tags$KeyValuePair) $r3;

        $r5 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.String '-$$Nest$fgetkey'(com.google.common.flogger.context.Tags$KeyValuePair)>($r4);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.String '-$$Nest$fgetkey'(com.google.common.flogger.context.Tags$KeyValuePair)>($r4);

        $i0 = $i0 + 1;

        goto label2;

     label2:
        goto label1;

     label3:
        return $i0;
    }

    private java.util.Map$Entry getEntryOrNull(int)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        int $i0, $i1;
        int[] $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        java.util.Map$Entry $r4;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int[] offsets>;

        $i1 = $r1[0];

        if $i0 >= $i1 goto label1;

        $r2 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Object[] array>;

        $r3 = $r2[$i0];

        $r4 = (java.util.Map$Entry) $r3;

        return $r4;

     label1:
        return null;
    }

    private int getTotalElementCount()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        int $i0;
        int[] $r1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int[] offsets>;

        $i0 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int size()>();

        $i0 = $r1[$i0];

        return $i0;
    }

    private int makeTagMap(java.util.List, int, java.lang.Object[], int[])
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.lang.Object[] $r1;
        int[] $r2;
        java.util.List $r3;
        int $i0, $i1, $i2;
        java.util.Iterator $r4;
        java.lang.String $r5, $r9;
        java.lang.Object $r6, $r7;
        boolean $z0;
        com.google.common.flogger.context.Tags$KeyValuePair $r8;
        java.util.Map$Entry $r10;
        java.util.ConcurrentModificationException $r11;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r3 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object[];

        $r2 := @parameter3: int[];

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        $i1 = 0;

        $i2 = $i0;

        $r5 = null;

        $r6 = null;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.google.common.flogger.context.Tags$KeyValuePair) $r7;

        $r9 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.String '-$$Nest$fgetkey'(com.google.common.flogger.context.Tags$KeyValuePair)>($r8);

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r9 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.String '-$$Nest$fgetkey'(com.google.common.flogger.context.Tags$KeyValuePair)>($r8);

        $r5 = $r9;

        $r10 = specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry newEntry(java.lang.String,int)>($r9, $i1);

        $r1[$i1] = $r10;

        $r2[$i1] = $i2;

        $i1 = $i1 + 1;

        $r6 = null;

        goto label2;

     label2:
        $r7 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)>($r8);

        if $r7 == null goto label3;

        $r7 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)>($r8);

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.google.common.flogger.context.Tags$KeyValuePair: java.lang.Object '-$$Nest$fgetvalue'(com.google.common.flogger.context.Tags$KeyValuePair)>($r8);

        $r6 = $r7;

        $r1[$i2] = $r7;

        $i2 = $i2 + 1;

        goto label3;

     label3:
        goto label1;

     label4:
        if $i1 != $i0 goto label5;

        $r2[$i0] = $i2;

        return $i2;

     label5:
        $r11 = new java.util.ConcurrentModificationException;

        specialinvoke $r11.<java.util.ConcurrentModificationException: void <init>(java.lang.String)>("corrupted tag map");

        goto label6;

     label6:
        throw $r11;
    }

    private static java.lang.Object[] maybeResizeElementArray(java.lang.Object[], int)
    {
        int $i0, $i1;
        java.lang.Object[] $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r0;

        $z0 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: boolean mustResize(int,int)>($i1, $i0);

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r0, $i0);

     label1:
        return $r0;
    }

    private static int[] maybeResizeOffsetsArray(int[])
    {
        int[] $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: int[];

        $i0 = $r0[0];

        $i0 = $i0 + 1;

        $i1 = lengthof $r0;

        $z0 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: boolean mustResize(int,int)>($i1, $i0);

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r0, $i0);

     label1:
        return $r0;
    }

    private int mergeTagMaps(com.google.common.flogger.context.Tags$LightweightTagMap, com.google.common.flogger.context.Tags$LightweightTagMap, int, java.lang.Object[], int[])
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0, $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r3;
        int[] $r4;
        java.util.Map$Entry $r5, $r6, $r10;
        java.lang.Object $r7;
        java.lang.String $r8, $r9;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r11, $r12;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r1 := @parameter0: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r2 := @parameter1: com.google.common.flogger.context.Tags$LightweightTagMap;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.Object[];

        $r4 := @parameter4: int[];

        $r4[0] = $i0;

        $i1 = $i0;

        $r5 = specialinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry getEntryOrNull(int)>(0);

        $r6 = specialinvoke $r2.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry getEntryOrNull(int)>(0);

        $i2 = 0;

        $i0 = 0;

        $i3 = 0;

     label01:
        if $r5 != null goto label03;

        if $r6 == null goto label02;

        goto label03;

     label02:
        return $i2;

     label03:
        if $r5 != null goto label04;

        $i4 = 1;

        goto label06;

     label04:
        if $r6 != null goto label05;

        $i4 = -1;

        goto label06;

     label05:
        $i4 = 0;

     label06:
        if $i4 != 0 goto label08;

        $r7 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r7;

        $i5 = virtualinvoke $r8.<java.lang.String: int compareTo(java.lang.String)>($r9);

        $i4 = $i5;

        if $i5 != 0 goto label07;

        $r7 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r10 = specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry newEntry(java.lang.String,int)>($r8, $i2);

        $r3[$i2] = $r10;

        $i2 = $i2 + 1;

        $r7 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet) $r7;

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet) $r7;

        $i4 = staticinvoke <com.google.common.flogger.context.Tags$LightweightTagMap: int mergeValues(com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet,com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet,java.lang.Object[],int)>($r11, $r12, $r3, $i1);

        $i1 = $i4;

        $r4[$i2] = $i4;

        $i0 = $i0 + 1;

        $r5 = specialinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry getEntryOrNull(int)>($i0);

        $i3 = $i3 + 1;

        $r6 = specialinvoke $r2.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry getEntryOrNull(int)>($i3);

        goto label01;

     label07:
        goto label08;

     label08:
        if $i4 >= 0 goto label09;

        $i4 = $i2 + 1;

        $i1 = specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int copyEntryAndValues(java.util.Map$Entry,int,int,java.lang.Object[],int[])>($r5, $i2, $i1, $r3, $r4);

        $i0 = $i0 + 1;

        $r5 = specialinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry getEntryOrNull(int)>($i0);

        goto label10;

     label09:
        $i4 = $i2 + 1;

        $i1 = specialinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: int copyEntryAndValues(java.util.Map$Entry,int,int,java.lang.Object[],int[])>($r6, $i2, $i1, $r3, $r4);

        $i3 = $i3 + 1;

        $r6 = specialinvoke $r2.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Map$Entry getEntryOrNull(int)>($i3);

     label10:
        $i2 = $i4;

        goto label01;
    }

    private static int mergeValues(com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet, com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet, java.lang.Object[], int)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet $r0, $r1;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Comparator $r3;
        java.lang.Object $r4, $r5;

        $r0 := @parameter0: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $r1 := @parameter1: com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        $r2 := @parameter2: java.lang.Object[];

        $i0 := @parameter3: int;

        $i1 = 0;

        $i2 = 0;

     label01:
        $i3 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int size()>();

        if $i1 < $i3 goto label03;

        $i3 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int size()>();

        if $i2 >= $i3 goto label02;

        goto label03;

     label02:
        return $i0;

     label03:
        $i3 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int size()>();

        if $i1 != $i3 goto label04;

        $i3 = 1;

        goto label06;

     label04:
        $i3 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: int size()>();

        if $i2 != $i3 goto label05;

        $i3 = -1;

        goto label06;

     label05:
        $i3 = 0;

     label06:
        if $i3 != 0 goto label07;

        $r3 = staticinvoke <com.google.common.flogger.context.Tags: java.util.Comparator '-$$Nest$sfgetVALUE_COMPARATOR'()>();

        $r4 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: java.lang.Object getValue(int)>($i1);

        $r5 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: java.lang.Object getValue(int)>($i2);

        $i3 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

     label07:
        if $i3 >= 0 goto label08;

        $i3 = $i1 + 1;

        $r4 = virtualinvoke $r0.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: java.lang.Object getValue(int)>($i1);

        goto label10;

     label08:
        $i4 = $i2 + 1;

        $r4 = virtualinvoke $r1.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: java.lang.Object getValue(int)>($i2);

        if $i3 != 0 goto label09;

        $i1 = $i1 + 1;

     label09:
        $i3 = $i1;

        $i2 = $i4;

     label10:
        $r2[$i0] = $r4;

        $i1 = $i3;

        $i0 = $i0 + 1;

        goto label01;
    }

    private static boolean mustResize(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 <= 16 goto label1;

        $i0 = $i0 * 9;

        $i1 = $i1 * 10;

        if $i0 <= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.util.Map$Entry newEntry(java.lang.String, int)
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.lang.String $r1;
        int $i0;
        com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet r2;
        java.util.AbstractMap$SimpleImmutableEntry r3;
        java.util.Map$Entry r4;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        r3 = new java.util.AbstractMap$SimpleImmutableEntry;

        r2 = new com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet;

        specialinvoke r2.<com.google.common.flogger.context.Tags$LightweightTagMap$SortedArraySet: void <init>(com.google.common.flogger.context.Tags$LightweightTagMap,int)>($r0, $i0);

        specialinvoke r3.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r1, r2);

        r4 = (java.util.Map$Entry) r3;

        return r4;
    }

    public java.util.Set entrySet()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.util.Set r1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.util.Set entrySet>;

        return r1;
    }

    public int hashCode()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.lang.Integer $r1;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Integer hashCode>;

        if $r1 != null goto label1;

        $i0 = specialinvoke $r0.<java.util.AbstractMap: int hashCode()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Integer hashCode> = $r1;

     label1:
        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.Integer hashCode>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.flogger.context.Tags$LightweightTagMap $r0;
        java.lang.String $r1;

        $r0 := @this: com.google.common.flogger.context.Tags$LightweightTagMap;

        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.String toString>;

        if $r1 != null goto label1;

        $r1 = specialinvoke $r0.<java.util.AbstractMap: java.lang.String toString()>();

        $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.String toString> = $r1;

     label1:
        $r1 = $r0.<com.google.common.flogger.context.Tags$LightweightTagMap: java.lang.String toString>;

        return $r1;
    }

com.google.common.flogger.context.Tags$Type$1-IA
com.google.common.flogger.context.Tags$Type$1
    private void <init>(java.lang.String, int)
    {
        com.google.common.flogger.context.Tags$Type$1 $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$1;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type: void <init>(java.lang.String,int,com.google.common.flogger.context.Tags$Type-IA)>($r1, $i0, null);

        return;
    }

    void <init>(java.lang.String, int, com.google.common.flogger.context.Tags$Type$1-IA)
    {
        com.google.common.flogger.context.Tags$Type$1 $r0;
        java.lang.String $r1;
        int $i0;
        com.google.common.flogger.context.Tags$Type$1-IA $r2;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$1;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.common.flogger.context.Tags$Type$1-IA;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type$1: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.flogger.context.Tags$Type$1 $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.Boolean $r3, $r4;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Boolean) $r1;

        $r4 = (java.lang.Boolean) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Boolean: int compareTo(java.lang.Boolean)>($r4);

        return $i0;
    }

com.google.common.flogger.context.Tags$Type$2-IA
com.google.common.flogger.context.Tags$Type$2
    private void <init>(java.lang.String, int)
    {
        com.google.common.flogger.context.Tags$Type$2 $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$2;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type: void <init>(java.lang.String,int,com.google.common.flogger.context.Tags$Type-IA)>($r1, $i0, null);

        return;
    }

    void <init>(java.lang.String, int, com.google.common.flogger.context.Tags$Type$2-IA)
    {
        com.google.common.flogger.context.Tags$Type$2 $r0;
        java.lang.String $r1;
        int $i0;
        com.google.common.flogger.context.Tags$Type$2-IA $r2;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$2;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.common.flogger.context.Tags$Type$2-IA;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type$2: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.flogger.context.Tags$Type$2 $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3, $r4;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r4 = (java.lang.String) $r2;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }

com.google.common.flogger.context.Tags$Type$3-IA
com.google.common.flogger.context.Tags$Type$3
    private void <init>(java.lang.String, int)
    {
        com.google.common.flogger.context.Tags$Type$3 $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$3;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type: void <init>(java.lang.String,int,com.google.common.flogger.context.Tags$Type-IA)>($r1, $i0, null);

        return;
    }

    void <init>(java.lang.String, int, com.google.common.flogger.context.Tags$Type$3-IA)
    {
        com.google.common.flogger.context.Tags$Type$3 $r0;
        java.lang.String $r1;
        int $i0;
        com.google.common.flogger.context.Tags$Type$3-IA $r2;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$3;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.common.flogger.context.Tags$Type$3-IA;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type$3: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.flogger.context.Tags$Type$3 $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.Long $r3, $r4;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Long) $r1;

        $r4 = (java.lang.Long) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Long: int compareTo(java.lang.Long)>($r4);

        return $i0;
    }

com.google.common.flogger.context.Tags$Type$4-IA
com.google.common.flogger.context.Tags$Type$4
    private void <init>(java.lang.String, int)
    {
        com.google.common.flogger.context.Tags$Type$4 $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$4;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type: void <init>(java.lang.String,int,com.google.common.flogger.context.Tags$Type-IA)>($r1, $i0, null);

        return;
    }

    void <init>(java.lang.String, int, com.google.common.flogger.context.Tags$Type$4-IA)
    {
        com.google.common.flogger.context.Tags$Type$4 $r0;
        java.lang.String $r1;
        int $i0;
        com.google.common.flogger.context.Tags$Type$4-IA $r2;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$4;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.common.flogger.context.Tags$Type$4-IA;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type$4: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.flogger.context.Tags$Type$4 $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.Double $r3, $r4;

        $r0 := @this: com.google.common.flogger.context.Tags$Type$4;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Double) $r1;

        $r4 = (java.lang.Double) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Double: int compareTo(java.lang.Double)>($r4);

        return $i0;
    }

com.google.common.flogger.context.Tags$Type-IA
com.google.common.flogger.context.Tags$Type
<com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type[] $VALUES>
<com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type BOOLEAN>
<com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type DOUBLE>
<com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type LONG>
<com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type STRING>
    private static com.google.common.flogger.context.Tags$Type[] $values()
    {
        com.google.common.flogger.context.Tags$Type[] $r0;
        com.google.common.flogger.context.Tags$Type $r1;

        $r0 = newarray (com.google.common.flogger.context.Tags$Type)[4];

        $r1 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type BOOLEAN>;

        $r0[0] = $r1;

        $r1 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type STRING>;

        $r0[1] = $r1;

        $r1 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type LONG>;

        $r0[2] = $r1;

        $r1 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type DOUBLE>;

        $r0[3] = $r1;

        return $r0;
    }

    static volatile com.google.common.flogger.context.Tags$Type '-$$Nest$smof'(java.lang.Object)
    {
        com.google.common.flogger.context.Tags$Type $r0;
        java.lang.Object $r1;

        $r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type of(java.lang.Object)>($r1);

        return $r0;
    }

    static void <clinit>()
    {
        com.google.common.flogger.context.Tags$Type[] $r0;
        com.google.common.flogger.context.Tags$Type$1 $r1;
        com.google.common.flogger.context.Tags$Type$2 $r2;
        com.google.common.flogger.context.Tags$Type$3 $r3;
        com.google.common.flogger.context.Tags$Type$4 $r4;

        $r1 = new com.google.common.flogger.context.Tags$Type$1;

        specialinvoke $r1.<com.google.common.flogger.context.Tags$Type$1: void <init>(java.lang.String,int,com.google.common.flogger.context.Tags$Type$1-IA)>("BOOLEAN", 0, null);

        <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type BOOLEAN> = $r1;

        $r2 = new com.google.common.flogger.context.Tags$Type$2;

        specialinvoke $r2.<com.google.common.flogger.context.Tags$Type$2: void <init>(java.lang.String,int,com.google.common.flogger.context.Tags$Type$2-IA)>("STRING", 1, null);

        <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type STRING> = $r2;

        $r3 = new com.google.common.flogger.context.Tags$Type$3;

        specialinvoke $r3.<com.google.common.flogger.context.Tags$Type$3: void <init>(java.lang.String,int,com.google.common.flogger.context.Tags$Type$3-IA)>("LONG", 2, null);

        <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type LONG> = $r3;

        $r4 = new com.google.common.flogger.context.Tags$Type$4;

        specialinvoke $r4.<com.google.common.flogger.context.Tags$Type$4: void <init>(java.lang.String,int,com.google.common.flogger.context.Tags$Type$4-IA)>("DOUBLE", 3, null);

        <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type DOUBLE> = $r4;

        $r0 = staticinvoke <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type[] $values()>();

        <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        com.google.common.flogger.context.Tags$Type $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.common.flogger.context.Tags$Type;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    void <init>(java.lang.String, int, com.google.common.flogger.context.Tags$Type-IA)
    {
        com.google.common.flogger.context.Tags$Type $r0;
        java.lang.String $r1;
        int $i0;
        com.google.common.flogger.context.Tags$Type-IA $r2;

        $r0 := @this: com.google.common.flogger.context.Tags$Type;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.common.flogger.context.Tags$Type-IA;

        specialinvoke $r0.<com.google.common.flogger.context.Tags$Type: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    private static com.google.common.flogger.context.Tags$Type of(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        java.lang.AssertionError $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.lang.StringBuilder $r4;
        com.google.common.flogger.context.Tags$Type r5;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r5 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type STRING>;

        return r5;

     label1:
        $z0 = $r0 instanceof java.lang.Boolean;

        if $z0 == 0 goto label2;

        r5 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type BOOLEAN>;

        return r5;

     label2:
        $z0 = $r0 instanceof java.lang.Long;

        if $z0 == 0 goto label3;

        r5 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type LONG>;

        return r5;

     label3:
        $z0 = $r0 instanceof java.lang.Double;

        if $z0 == 0 goto label4;

        r5 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type DOUBLE>;

        return r5;

     label4:
        $r1 = new java.lang.AssertionError;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid tag type: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r1;
    }

    public static com.google.common.flogger.context.Tags$Type[] values()
    {
        java.lang.Object $r0;
        com.google.common.flogger.context.Tags$Type[] $r1;

        $r1 = <com.google.common.flogger.context.Tags$Type: com.google.common.flogger.context.Tags$Type[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.common.flogger.context.Tags$Type[]) $r0;

        return $r1;
    }

<com.google.common.flogger.context.Tags$Type: int compare(java.lang.Object,java.lang.Object)>
