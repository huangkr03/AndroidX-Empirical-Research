com.google.protobuf.ByteString
<com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>
<com.google.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR>
<com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteArrayCopier byteArrayCopier>
<com.google.protobuf.ByteString: int hash>
    static volatile int '-$$Nest$smtoInt'(byte)
    {
        int $i0;
        byte $b1;

        $b1 := @parameter0: byte;

        $i0 = staticinvoke <com.google.protobuf.ByteString: int toInt(byte)>($b1);

        return $i0;
    }

    static void <clinit>()
    {
        boolean $z0;
        byte[] $r0;
        com.google.protobuf.ByteString$ByteArrayCopier $r1;
        com.google.protobuf.ByteString$LiteralByteString r2;
        com.google.protobuf.ByteString$SystemByteArrayCopier r3;
        com.google.protobuf.ByteString$ArraysByteArrayCopier r4;
        com.google.protobuf.ByteString$2 r5;

        r2 = new com.google.protobuf.ByteString$LiteralByteString;

        $r0 = <com.google.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        specialinvoke r2.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r0);

        <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY> = r2;

        $z0 = staticinvoke <com.google.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 == 0 goto label1;

        r3 = new com.google.protobuf.ByteString$SystemByteArrayCopier;

        $r1 = r3;

        specialinvoke r3.<com.google.protobuf.ByteString$SystemByteArrayCopier: void <init>(com.google.protobuf.ByteString$SystemByteArrayCopier-IA)>(null);

        goto label2;

     label1:
        r4 = new com.google.protobuf.ByteString$ArraysByteArrayCopier;

        $r1 = r4;

        specialinvoke r4.<com.google.protobuf.ByteString$ArraysByteArrayCopier: void <init>(com.google.protobuf.ByteString$ArraysByteArrayCopier-IA)>(null);

     label2:
        <com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteArrayCopier byteArrayCopier> = $r1;

        r5 = new com.google.protobuf.ByteString$2;

        specialinvoke r5.<com.google.protobuf.ByteString$2: void <init>()>();

        <com.google.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR> = r5;

        return;
    }

    void <init>()
    {
        com.google.protobuf.ByteString $r0;

        $r0 := @this: com.google.protobuf.ByteString;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.protobuf.ByteString: int hash> = 0;

        return;
    }

    static void checkIndex(int, int)
    {
        int $i0, $i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i0 + 1;

        $i2 = $i1 - $i2;

        $i2 = $i2 | $i0;

        if $i2 >= 0 goto label2;

        if $i0 >= 0 goto label1;

        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index < 0: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label1:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index > length: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        return;
    }

    static int checkRange(int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i4 = $i2 - $i1;

        $i0 = $i1 | $i2;

        $i5 = $i0 | $i4;

        $i0 = $i3 - $i2;

        $i0 = $i5 | $i0;

        if $i0 >= 0 goto label3;

        if $i1 < 0 goto label2;

        if $i2 >= $i1 goto label1;

        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning index larger than ending index: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End index: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning index: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label3:
        return $i4;
    }

    public static com.google.protobuf.ByteString copyFrom(byte[])
    {
        int $i0;
        com.google.protobuf.ByteString $r0;
        byte[] $r1;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $r0 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>($r1, 0, $i0);

        return $r0;
    }

    public static com.google.protobuf.ByteString copyFrom(byte[], int, int)
    {
        int $i0, $i1, $i2, $i3;
        byte[] $r0;
        com.google.protobuf.ByteString$LiteralByteString $r1;
        com.google.protobuf.ByteString$ByteArrayCopier $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $i0 + $i1;

        $i3 = lengthof $r0;

        staticinvoke <com.google.protobuf.ByteString: int checkRange(int,int,int)>($i0, $i2, $i3);

        $r1 = new com.google.protobuf.ByteString$LiteralByteString;

        $r2 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteArrayCopier byteArrayCopier>;

        $r0 = interfaceinvoke $r2.<com.google.protobuf.ByteString$ByteArrayCopier: byte[] copyFrom(byte[],int,int)>($r0, $i0, $i1);

        specialinvoke $r1.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r0);

        return $r1;
    }

    public static com.google.protobuf.ByteString copyFromUtf8(java.lang.String)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;
        java.lang.String $r3;

        $r3 := @parameter0: java.lang.String;

        $r0 = new com.google.protobuf.ByteString$LiteralByteString;

        $r1 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        specialinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r2);

        return $r0;
    }

    static com.google.protobuf.ByteString$CodedBuilder newCodedBuilder(int)
    {
        int $i0;
        com.google.protobuf.ByteString$CodedBuilder $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.protobuf.ByteString$CodedBuilder;

        specialinvoke $r0.<com.google.protobuf.ByteString$CodedBuilder: void <init>(int,com.google.protobuf.ByteString$CodedBuilder-IA)>($i0, null);

        return $r0;
    }

    private static int toInt(byte)
    {
        byte $b0;
        short $s1;

        $b0 := @parameter0: byte;

        $s1 = $b0 & 255;

        return $s1;
    }

    private java.lang.String truncateAndEscapeForDisplay()
    {
        com.google.protobuf.ByteString $r0;
        int $i0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $r0 := @this: com.google.protobuf.ByteString;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString: int size()>();

        if $i0 > 50 goto label1;

        $r1 = staticinvoke <com.google.protobuf.TextFormatEscaper: java.lang.String escapeBytes(com.google.protobuf.ByteString)>($r0);

        return $r1;

     label1:
        $r0 = virtualinvoke $r0.<com.google.protobuf.ByteString: com.google.protobuf.ByteString substring(int,int)>(0, 47);

        $r1 = staticinvoke <com.google.protobuf.TextFormatEscaper: java.lang.String escapeBytes(com.google.protobuf.ByteString)>($r0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    static com.google.protobuf.ByteString wrap(byte[])
    {
        byte[] $r0;
        com.google.protobuf.ByteString$LiteralByteString $r1;

        $r0 := @parameter0: byte[];

        $r1 = new com.google.protobuf.ByteString$LiteralByteString;

        specialinvoke $r1.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r0);

        return $r1;
    }

    static com.google.protobuf.ByteString wrap(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        com.google.protobuf.ByteString$BoundedByteString $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new com.google.protobuf.ByteString$BoundedByteString;

        specialinvoke $r1.<com.google.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>($r0, $i0, $i1);

        return $r1;
    }

<com.google.protobuf.ByteString: byte byteAt(int)>
<com.google.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>
<com.google.protobuf.ByteString: boolean equals(java.lang.Object)>
    public final int hashCode()
    {
        com.google.protobuf.ByteString $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.ByteString;

        $i0 = $r0.<com.google.protobuf.ByteString: int hash>;

        if $i0 != 0 goto label2;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString: int size()>();

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString: int partialHash(int,int,int)>($i0, 0, $i0);

        $i1 = $i0;

        if $i0 != 0 goto label1;

        $i1 = 1;

     label1:
        $r0.<com.google.protobuf.ByteString: int hash> = $i1;

        return $i1;

     label2:
        return $i0;
    }

<com.google.protobuf.ByteString: byte internalByteAt(int)>
<com.google.protobuf.ByteString: boolean isValidUtf8()>
    public com.google.protobuf.ByteString$ByteIterator iterator()
    {
        com.google.protobuf.ByteString $r0;
        com.google.protobuf.ByteString$1 $r1;

        $r0 := @this: com.google.protobuf.ByteString;

        $r1 = new com.google.protobuf.ByteString$1;

        specialinvoke $r1.<com.google.protobuf.ByteString$1: void <init>(com.google.protobuf.ByteString)>($r0);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.protobuf.ByteString $r0;
        com.google.protobuf.ByteString$ByteIterator $r1;

        $r0 := @this: com.google.protobuf.ByteString;

        $r1 = virtualinvoke $r0.<com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteIterator iterator()>();

        return $r1;
    }

<com.google.protobuf.ByteString: com.google.protobuf.CodedInputStream newCodedInput()>
<com.google.protobuf.ByteString: int partialHash(int,int,int)>
    protected final int peekCachedHashCode()
    {
        com.google.protobuf.ByteString $r0;
        int i0;

        $r0 := @this: com.google.protobuf.ByteString;

        i0 = $r0.<com.google.protobuf.ByteString: int hash>;

        return i0;
    }

<com.google.protobuf.ByteString: int size()>
<com.google.protobuf.ByteString: com.google.protobuf.ByteString substring(int,int)>
    public final byte[] toByteArray()
    {
        com.google.protobuf.ByteString $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.ByteString;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label1;

        $r1 = <com.google.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        return $r1;

     label1:
        $r1 = newarray (byte)[$i0];

        virtualinvoke $r0.<com.google.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>($r1, 0, 0, $i0);

        return $r1;
    }

    public final java.lang.String toString()
    {
        com.google.protobuf.ByteString $r0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        int $i0;
        java.lang.String $r3;
        java.lang.Integer $r4;

        $r0 := @this: com.google.protobuf.ByteString;

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r2 = newarray (java.lang.Object)[3];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2[0] = $r3;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString: int size()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r4;

        $r3 = specialinvoke $r0.<com.google.protobuf.ByteString: java.lang.String truncateAndEscapeForDisplay()>();

        $r2[2] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "<ByteString@%s size=%d contents=\"%s\">", $r2);

        return $r3;
    }

    public final java.lang.String toString(java.nio.charset.Charset)
    {
        com.google.protobuf.ByteString $r0;
        java.nio.charset.Charset $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: com.google.protobuf.ByteString;

        $r1 := @parameter0: java.nio.charset.Charset;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r2 = virtualinvoke $r0.<com.google.protobuf.ByteString: java.lang.String toStringInternal(java.nio.charset.Charset)>($r1);

        return $r2;
    }

<com.google.protobuf.ByteString: java.lang.String toStringInternal(java.nio.charset.Charset)>
    public final java.lang.String toStringUtf8()
    {
        com.google.protobuf.ByteString $r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        $r0 := @this: com.google.protobuf.ByteString;

        $r2 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r1 = virtualinvoke $r0.<com.google.protobuf.ByteString: java.lang.String toString(java.nio.charset.Charset)>($r2);

        return $r1;
    }

<com.google.protobuf.ByteString: void writeTo(com.google.protobuf.ByteOutput)>
com.google.protobuf.ByteString$1
<com.google.protobuf.ByteString$1: int limit>
<com.google.protobuf.ByteString$1: int position>
<com.google.protobuf.ByteString$1: com.google.protobuf.ByteString this$0>
    void <init>(com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString$1 $r0;
        int $i0;
        com.google.protobuf.ByteString $r1;

        $r0 := @this: com.google.protobuf.ByteString$1;

        $r1 := @parameter0: com.google.protobuf.ByteString;

        $r0.<com.google.protobuf.ByteString$1: com.google.protobuf.ByteString this$0> = $r1;

        specialinvoke $r0.<com.google.protobuf.ByteString$AbstractByteIterator: void <init>()>();

        $r0.<com.google.protobuf.ByteString$1: int position> = 0;

        $i0 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        $r0.<com.google.protobuf.ByteString$1: int limit> = $i0;

        return;
    }

    public boolean hasNext()
    {
        com.google.protobuf.ByteString$1 $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.ByteString$1;

        $i1 = $r0.<com.google.protobuf.ByteString$1: int position>;

        $i0 = $r0.<com.google.protobuf.ByteString$1: int limit>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public byte nextByte()
    {
        com.google.protobuf.ByteString$1 $r0;
        byte $b0;
        int $i1, $i2;
        com.google.protobuf.ByteString $r1;
        java.util.NoSuchElementException $r2;

        $r0 := @this: com.google.protobuf.ByteString$1;

        $i1 = $r0.<com.google.protobuf.ByteString$1: int position>;

        $i2 = $r0.<com.google.protobuf.ByteString$1: int limit>;

        if $i1 >= $i2 goto label1;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.ByteString$1: int position> = $i2;

        $r1 = $r0.<com.google.protobuf.ByteString$1: com.google.protobuf.ByteString this$0>;

        $b0 = virtualinvoke $r1.<com.google.protobuf.ByteString: byte internalByteAt(int)>($i1);

        return $b0;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;
    }

com.google.protobuf.ByteString$2
    void <init>()
    {
        com.google.protobuf.ByteString$2 $r0;

        $r0 := @this: com.google.protobuf.ByteString$2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.google.protobuf.ByteString, com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString$2 $r0;
        com.google.protobuf.ByteString $r1, $r2;
        com.google.protobuf.ByteString$ByteIterator $r3, $r4;
        boolean $z0;
        byte $b0;
        int $i1;
        java.lang.Integer $r5, $r6;

        $r0 := @this: com.google.protobuf.ByteString$2;

        $r1 := @parameter0: com.google.protobuf.ByteString;

        $r2 := @parameter1: com.google.protobuf.ByteString;

        $r3 = virtualinvoke $r1.<com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteIterator iterator()>();

        $r4 = virtualinvoke $r2.<com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<com.google.protobuf.ByteString$ByteIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $z0 = interfaceinvoke $r4.<com.google.protobuf.ByteString$ByteIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $b0 = interfaceinvoke $r3.<com.google.protobuf.ByteString$ByteIterator: byte nextByte()>();

        $i1 = staticinvoke <com.google.protobuf.ByteString: int '-$$Nest$smtoInt'(byte)>($b0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $b0 = interfaceinvoke $r4.<com.google.protobuf.ByteString$ByteIterator: byte nextByte()>();

        $i1 = staticinvoke <com.google.protobuf.ByteString: int '-$$Nest$smtoInt'(byte)>($b0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i1 = virtualinvoke $r5.<java.lang.Integer: int compareTo(java.lang.Integer)>($r6);

        if $i1 == 0 goto label1;

        return $i1;

     label2:
        $i1 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i1 = virtualinvoke $r2.<com.google.protobuf.ByteString: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i1 = virtualinvoke $r5.<java.lang.Integer: int compareTo(java.lang.Integer)>($r6);

        return $i1;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.google.protobuf.ByteString$2 $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        com.google.protobuf.ByteString $r3, $r4;

        $r0 := @this: com.google.protobuf.ByteString$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.google.protobuf.ByteString) $r1;

        $r4 = (com.google.protobuf.ByteString) $r2;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$2: int compare(com.google.protobuf.ByteString,com.google.protobuf.ByteString)>($r3, $r4);

        return $i0;
    }

com.google.protobuf.ByteString$AbstractByteIterator
    void <init>()
    {
        com.google.protobuf.ByteString$AbstractByteIterator $r0;

        $r0 := @this: com.google.protobuf.ByteString$AbstractByteIterator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Byte next()
    {
        com.google.protobuf.ByteString$AbstractByteIterator $r0;
        byte $b0;
        java.lang.Byte $r1;

        $r0 := @this: com.google.protobuf.ByteString$AbstractByteIterator;

        $b0 = virtualinvoke $r0.<com.google.protobuf.ByteString$AbstractByteIterator: byte nextByte()>();

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        com.google.protobuf.ByteString$AbstractByteIterator $r0;
        java.lang.Byte $r1;

        $r0 := @this: com.google.protobuf.ByteString$AbstractByteIterator;

        $r1 = virtualinvoke $r0.<com.google.protobuf.ByteString$AbstractByteIterator: java.lang.Byte next()>();

        return $r1;
    }

    public final void remove()
    {
        com.google.protobuf.ByteString$AbstractByteIterator $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.protobuf.ByteString$AbstractByteIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

com.google.protobuf.ByteString$ArraysByteArrayCopier-IA
com.google.protobuf.ByteString$ArraysByteArrayCopier
    private void <init>()
    {
        com.google.protobuf.ByteString$ArraysByteArrayCopier $r0;

        $r0 := @this: com.google.protobuf.ByteString$ArraysByteArrayCopier;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.google.protobuf.ByteString$ArraysByteArrayCopier-IA)
    {
        com.google.protobuf.ByteString$ArraysByteArrayCopier $r0;
        com.google.protobuf.ByteString$ArraysByteArrayCopier-IA $r1;

        $r0 := @this: com.google.protobuf.ByteString$ArraysByteArrayCopier;

        $r1 := @parameter0: com.google.protobuf.ByteString$ArraysByteArrayCopier-IA;

        specialinvoke $r0.<com.google.protobuf.ByteString$ArraysByteArrayCopier: void <init>()>();

        return;
    }

    public byte[] copyFrom(byte[], int, int)
    {
        com.google.protobuf.ByteString$ArraysByteArrayCopier $r0;
        int $i0, $i1;
        byte[] $r1;

        $r0 := @this: com.google.protobuf.ByteString$ArraysByteArrayCopier;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i1 + $i0;

        $r1 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r1, $i0, $i1);

        return $r1;
    }

com.google.protobuf.ByteString$BoundedByteString
<com.google.protobuf.ByteString$BoundedByteString: long serialVersionUID>
<com.google.protobuf.ByteString$BoundedByteString: int bytesLength>
<com.google.protobuf.ByteString$BoundedByteString: int bytesOffset>
    void <init>(byte[], int, int)
    {
        com.google.protobuf.ByteString$BoundedByteString $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;

        $r0 := @this: com.google.protobuf.ByteString$BoundedByteString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r1);

        $i2 = $i0 + $i1;

        $i3 = lengthof $r1;

        staticinvoke <com.google.protobuf.ByteString$BoundedByteString: int checkRange(int,int,int)>($i0, $i2, $i3);

        $r0.<com.google.protobuf.ByteString$BoundedByteString: int bytesOffset> = $i0;

        $r0.<com.google.protobuf.ByteString$BoundedByteString: int bytesLength> = $i1;

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException
    {
        com.google.protobuf.ByteString$BoundedByteString $r0;
        java.io.ObjectInputStream $r1;
        java.io.InvalidObjectException $r2;

        $r0 := @this: com.google.protobuf.ByteString$BoundedByteString;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = new java.io.InvalidObjectException;

        specialinvoke $r2.<java.io.InvalidObjectException: void <init>(java.lang.String)>("BoundedByteStream instances are not to be serialized directly");

        throw $r2;
    }

    public byte byteAt(int)
    {
        com.google.protobuf.ByteString$BoundedByteString $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;

        $r0 := @this: com.google.protobuf.ByteString$BoundedByteString;

        $i1 := @parameter0: int;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$BoundedByteString: int size()>();

        staticinvoke <com.google.protobuf.ByteString$BoundedByteString: void checkIndex(int,int)>($i1, $i0);

        $r1 = $r0.<com.google.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i0 = $r0.<com.google.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        $i1 = $i0 + $i1;

        $b2 = $r1[$i1];

        return $b2;
    }

    protected void copyToInternal(byte[], int, int, int)
    {
        com.google.protobuf.ByteString$BoundedByteString $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: com.google.protobuf.ByteString$BoundedByteString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = $r0.<com.google.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i3 = virtualinvoke $r0.<com.google.protobuf.ByteString$BoundedByteString: int getOffsetIntoBytes()>();

        $i0 = $i3 + $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2);

        return;
    }

    protected int getOffsetIntoBytes()
    {
        com.google.protobuf.ByteString$BoundedByteString $r0;
        int i0;

        $r0 := @this: com.google.protobuf.ByteString$BoundedByteString;

        i0 = $r0.<com.google.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        return i0;
    }

    byte internalByteAt(int)
    {
        com.google.protobuf.ByteString$BoundedByteString $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;

        $r0 := @this: com.google.protobuf.ByteString$BoundedByteString;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i1 = $r0.<com.google.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        $i0 = $i1 + $i0;

        $b2 = $r1[$i0];

        return $b2;
    }

    public int size()
    {
        com.google.protobuf.ByteString$BoundedByteString $r0;
        int i0;

        $r0 := @this: com.google.protobuf.ByteString$BoundedByteString;

        i0 = $r0.<com.google.protobuf.ByteString$BoundedByteString: int bytesLength>;

        return i0;
    }

    java.lang.Object writeReplace()
    {
        com.google.protobuf.ByteString$BoundedByteString $r0;
        byte[] $r1;
        com.google.protobuf.ByteString $r2;

        $r0 := @this: com.google.protobuf.ByteString$BoundedByteString;

        $r1 = virtualinvoke $r0.<com.google.protobuf.ByteString$BoundedByteString: byte[] toByteArray()>();

        $r2 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString wrap(byte[])>($r1);

        return $r2;
    }

com.google.protobuf.ByteString$ByteArrayCopier
<com.google.protobuf.ByteString$ByteArrayCopier: byte[] copyFrom(byte[],int,int)>
com.google.protobuf.ByteString$ByteIterator
<com.google.protobuf.ByteString$ByteIterator: byte nextByte()>
com.google.protobuf.ByteString$CodedBuilder-IA
com.google.protobuf.ByteString$CodedBuilder
<com.google.protobuf.ByteString$CodedBuilder: byte[] buffer>
<com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.CodedOutputStream output>
    private void <init>(int)
    {
        com.google.protobuf.ByteString$CodedBuilder $r0;
        com.google.protobuf.CodedOutputStream $r1;
        int $i0;
        byte[] $r2;

        $r0 := @this: com.google.protobuf.ByteString$CodedBuilder;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[$i0];

        $r0.<com.google.protobuf.ByteString$CodedBuilder: byte[] buffer> = $r2;

        $r1 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[])>($r2);

        $r0.<com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.CodedOutputStream output> = $r1;

        return;
    }

    void <init>(int, com.google.protobuf.ByteString$CodedBuilder-IA)
    {
        com.google.protobuf.ByteString$CodedBuilder $r0;
        int $i0;
        com.google.protobuf.ByteString$CodedBuilder-IA $r1;

        $r0 := @this: com.google.protobuf.ByteString$CodedBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.ByteString$CodedBuilder-IA;

        specialinvoke $r0.<com.google.protobuf.ByteString$CodedBuilder: void <init>(int)>($i0);

        return;
    }

    public com.google.protobuf.ByteString build()
    {
        com.google.protobuf.ByteString$CodedBuilder $r0;
        byte[] $r1;
        com.google.protobuf.CodedOutputStream $r2;
        com.google.protobuf.ByteString$LiteralByteString $r3;

        $r0 := @this: com.google.protobuf.ByteString$CodedBuilder;

        $r2 = $r0.<com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void checkNoSpaceLeft()>();

        $r3 = new com.google.protobuf.ByteString$LiteralByteString;

        $r1 = $r0.<com.google.protobuf.ByteString$CodedBuilder: byte[] buffer>;

        specialinvoke $r3.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r1);

        return $r3;
    }

    public com.google.protobuf.CodedOutputStream getCodedOutput()
    {
        com.google.protobuf.ByteString$CodedBuilder $r0;
        com.google.protobuf.CodedOutputStream r1;

        $r0 := @this: com.google.protobuf.ByteString$CodedBuilder;

        r1 = $r0.<com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.CodedOutputStream output>;

        return r1;
    }

com.google.protobuf.ByteString$LeafByteString
    void <init>()
    {
        com.google.protobuf.ByteString$LeafByteString $r0;

        $r0 := @this: com.google.protobuf.ByteString$LeafByteString;

        specialinvoke $r0.<com.google.protobuf.ByteString: void <init>()>();

        return;
    }

com.google.protobuf.ByteString$LiteralByteString
<com.google.protobuf.ByteString$LiteralByteString: long serialVersionUID>
<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>
    void <init>(byte[])
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1;
        java.lang.NullPointerException $r2;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<com.google.protobuf.ByteString$LeafByteString: void <init>()>();

        if $r1 == null goto label1;

        $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes> = $r1;

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;
    }

    public byte byteAt(int)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1;
        int $i0;
        byte $b1;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[$i0];

        return $b1;
    }

    protected void copyToInternal(byte[], int, int, int)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2);

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0, $r3;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        com.google.protobuf.ByteString $r2;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.protobuf.ByteString;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = (com.google.protobuf.ByteString) $r1;

        $i1 = virtualinvoke $r2.<com.google.protobuf.ByteString: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        if $i0 != 0 goto label4;

        return 1;

     label4:
        $z0 = $r1 instanceof com.google.protobuf.ByteString$LiteralByteString;

        if $z0 == 0 goto label6;

        $r3 = (com.google.protobuf.ByteString$LiteralByteString) $r1;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int peekCachedHashCode()>();

        $i1 = virtualinvoke $r3.<com.google.protobuf.ByteString$LiteralByteString: int peekCachedHashCode()>();

        if $i0 == 0 goto label5;

        if $i1 == 0 goto label5;

        if $i0 == $i1 goto label5;

        return 0;

     label5:
        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $z0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: boolean equalsRange(com.google.protobuf.ByteString,int,int)>($r3, 0, $i0);

        return $z0;

     label6:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    final boolean equalsRange(com.google.protobuf.ByteString, int, int)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0, $r2;
        byte $b0, $b5;
        com.google.protobuf.ByteString $r1, $r5;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        byte[] $r3, $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: com.google.protobuf.ByteString;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        if $i2 > $i3 goto label6;

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        if $i3 > $i4 goto label5;

        $z0 = $r1 instanceof com.google.protobuf.ByteString$LiteralByteString;

        if $z0 == 0 goto label4;

        $r2 = (com.google.protobuf.ByteString$LiteralByteString) $r1;

        $r3 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $r4 = $r2.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i3 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i2 = $i3 + $i2;

        $i3 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i4 = virtualinvoke $r2.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = $i4 + $i1;

     label1:
        if $i3 >= $i2 goto label3;

        $b5 = $r3[$i3];

        $b0 = $r4[$i1];

        if $b5 == $b0 goto label2;

        return 0;

     label2:
        $i3 = $i3 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        $r1 = virtualinvoke $r1.<com.google.protobuf.ByteString: com.google.protobuf.ByteString substring(int,int)>($i1, $i3);

        $r5 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: com.google.protobuf.ByteString substring(int,int)>(0, $i2);

        $z0 = virtualinvoke $r1.<com.google.protobuf.ByteString: boolean equals(java.lang.Object)>($r5);

        return $z0;

     label5:
        $r6 = new java.lang.IllegalArgumentException;

        $i3 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ran off end of other: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label6:
        $r6 = new java.lang.IllegalArgumentException;

        $i1 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length too large: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        goto label7;

     label7:
        throw $r6;
    }

    protected int getOffsetIntoBytes()
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        return 0;
    }

    byte internalByteAt(int)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1;
        int $i0;
        byte $b1;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[$i0];

        return $b1;
    }

    public final boolean isValidUtf8()
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $r1 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i1 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $i1 = $i1 + $i0;

        $z0 = staticinvoke <com.google.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>($r1, $i0, $i1);

        return $z0;
    }

    public final com.google.protobuf.CodedInputStream newCodedInput()
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1;
        int $i0, $i1;
        com.google.protobuf.CodedInputStream $r2;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)>($r1, $i0, $i1, 1);

        return $r2;
    }

    protected final int partialHash(int, int, int)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i3 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i0 = $i3 + $i0;

        $i2 = staticinvoke <com.google.protobuf.Internal: int partialHash(int,byte[],int,int)>($i2, $r1, $i0, $i1);

        return $i2;
    }

    public int size()
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public final com.google.protobuf.ByteString substring(int, int)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.ByteString$BoundedByteString $r2;
        com.google.protobuf.ByteString r3;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $i1 = staticinvoke <com.google.protobuf.ByteString$LiteralByteString: int checkRange(int,int,int)>($i0, $i1, $i2);

        if $i1 != 0 goto label1;

        r3 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

        return r3;

     label1:
        $r2 = new com.google.protobuf.ByteString$BoundedByteString;

        $r1 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i2 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i0 = $i2 + $i0;

        specialinvoke $r2.<com.google.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>($r1, $i0, $i1);

        return $r2;
    }

    protected final java.lang.String toStringInternal(java.nio.charset.Charset)
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;
        byte[] $r3;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new java.lang.String;

        $r3 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r3, $i0, $i1, $r1);

        return $r2;
    }

    final void writeTo(com.google.protobuf.ByteOutput) throws java.io.IOException
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        com.google.protobuf.ByteOutput $r1;
        byte[] $r2;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: com.google.protobuf.ByteOutput;

        $r2 = $r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke $r1.<com.google.protobuf.ByteOutput: void writeLazy(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

com.google.protobuf.ByteString$SystemByteArrayCopier-IA
com.google.protobuf.ByteString$SystemByteArrayCopier
    private void <init>()
    {
        com.google.protobuf.ByteString$SystemByteArrayCopier $r0;

        $r0 := @this: com.google.protobuf.ByteString$SystemByteArrayCopier;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.google.protobuf.ByteString$SystemByteArrayCopier-IA)
    {
        com.google.protobuf.ByteString$SystemByteArrayCopier $r0;
        com.google.protobuf.ByteString$SystemByteArrayCopier-IA $r1;

        $r0 := @this: com.google.protobuf.ByteString$SystemByteArrayCopier;

        $r1 := @parameter0: com.google.protobuf.ByteString$SystemByteArrayCopier-IA;

        specialinvoke $r0.<com.google.protobuf.ByteString$SystemByteArrayCopier: void <init>()>();

        return;
    }

    public byte[] copyFrom(byte[], int, int)
    {
        com.google.protobuf.ByteString$SystemByteArrayCopier $r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.ByteString$SystemByteArrayCopier;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, $i1);

        return $r2;
    }

