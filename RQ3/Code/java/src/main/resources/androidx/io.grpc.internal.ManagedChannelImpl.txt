io.grpc.internal.ManagedChannelImpl
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig EMPTY_SERVICE_CONFIG>
<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector INITIAL_PENDING_SELECTOR>
<io.grpc.internal.ManagedChannelImpl: io.grpc.ClientCall NOOP_CALL>
<io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_NOW_STATUS>
<io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_STATUS>
<io.grpc.internal.ManagedChannelImpl: io.grpc.Status SUBCHANNEL_SHUTDOWN_STATUS>
<io.grpc.internal.ManagedChannelImpl: java.util.regex.Pattern URI_PATTERN>
<io.grpc.internal.ManagedChannelImpl: java.util.logging.Logger logger>
<io.grpc.internal.ManagedChannelImpl: java.lang.String authorityOverride>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder balancerRpcExecutorHolder>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ObjectPool balancerRpcExecutorPool>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer$Factory callTracerFactory>
<io.grpc.internal.ManagedChannelImpl: long channelBufferLimit>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.RetriableStream$ChannelBufferMeter channelBufferUsed>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer channelCallTracer>
<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager channelStateManager>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ChannelTracer channelTracer>
<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz channelz>
<io.grpc.internal.ManagedChannelImpl: io.grpc.CompressorRegistry compressorRegistry>
<io.grpc.internal.ManagedChannelImpl: io.grpc.DecompressorRegistry decompressorRegistry>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig defaultServiceConfig>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport delayedTransport>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedClientTransport$Listener delayedTransportListener>
<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor executor>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ObjectPool executorPool>
<io.grpc.internal.ManagedChannelImpl: boolean fullStreamDecompression>
<io.grpc.internal.ManagedChannelImpl: long idleTimeoutMillis>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.Rescheduler idleTimer>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator>
<io.grpc.internal.ManagedChannelImpl: io.grpc.Channel interceptorChannel>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState lastResolutionState>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig lastServiceConfig>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory loadBalancerFactory>
<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalLogId logId>
<io.grpc.internal.ManagedChannelImpl: boolean lookUpServiceConfig>
<io.grpc.internal.ManagedChannelImpl: int maxTraceEvents>
<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver>
<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver$Args nameResolverArgs>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy nameResolverBackoffPolicy>
<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver$Factory nameResolverFactory>
<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolverRegistry nameResolverRegistry>
<io.grpc.internal.ManagedChannelImpl: boolean nameResolverStarted>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder offloadExecutorHolder>
<io.grpc.internal.ManagedChannelImpl: java.util.Set oobChannels>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory oobTransportFactory>
<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelCredentials originalChannelCreds>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory originalTransportFactory>
<io.grpc.internal.ManagedChannelImpl: boolean panicMode>
<io.grpc.internal.ManagedChannelImpl: java.util.Collection pendingCalls>
<io.grpc.internal.ManagedChannelImpl: java.lang.Object pendingCallsInUseObject>
<io.grpc.internal.ManagedChannelImpl: long perRpcBufferLimit>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel realChannel>
<io.grpc.internal.ManagedChannelImpl: boolean retryEnabled>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor scheduledExecutor>
<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle scheduledNameResolverRefresh>
<io.grpc.internal.ManagedChannelImpl: boolean serviceConfigUpdated>
<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean shutdown>
<io.grpc.internal.ManagedChannelImpl: boolean shutdownNowed>
<io.grpc.internal.ManagedChannelImpl: com.google.common.base.Supplier stopwatchSupplier>
<io.grpc.internal.ManagedChannelImpl: io.grpc.LoadBalancer$SubchannelPicker subchannelPicker>
<io.grpc.internal.ManagedChannelImpl: java.util.Set subchannels>
<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>
<io.grpc.internal.ManagedChannelImpl: java.lang.String target>
<io.grpc.internal.ManagedChannelImpl: boolean terminated>
<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.CountDownLatch terminatedLatch>
<io.grpc.internal.ManagedChannelImpl: boolean terminating>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.TimeProvider timeProvider>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory transportFactory>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientCallImpl$ClientStreamProvider transportProvider>
<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry uncommittedRetriableStreamsRegistry>
<io.grpc.internal.ManagedChannelImpl: java.lang.String userAgent>
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        java.util.regex.Pattern $r3;
        io.grpc.Status $r4;
        io.grpc.internal.ManagedChannelServiceConfig $r5;
        io.grpc.internal.ManagedChannelImpl$1 $r6;
        io.grpc.internal.ManagedChannelImpl$4 $r7;

        $r0 = class "Lio/grpc/internal/ManagedChannelImpl;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <io.grpc.internal.ManagedChannelImpl: java.util.logging.Logger logger> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z][a-zA-Z0-9+.-]*:/.*");

        <io.grpc.internal.ManagedChannelImpl: java.util.regex.Pattern URI_PATTERN> = $r3;

        $r4 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        $r4 = virtualinvoke $r4.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("Channel shutdownNow invoked");

        <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_NOW_STATUS> = $r4;

        $r4 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        $r4 = virtualinvoke $r4.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("Channel shutdown invoked");

        <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_STATUS> = $r4;

        $r4 = <io.grpc.Status: io.grpc.Status UNAVAILABLE>;

        $r4 = virtualinvoke $r4.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("Subchannel shutdown invoked");

        <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SUBCHANNEL_SHUTDOWN_STATUS> = $r4;

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.ManagedChannelServiceConfig empty()>();

        <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig EMPTY_SERVICE_CONFIG> = $r5;

        $r6 = new io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r6.<io.grpc.internal.ManagedChannelImpl$1: void <init>()>();

        <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector INITIAL_PENDING_SELECTOR> = $r6;

        $r7 = new io.grpc.internal.ManagedChannelImpl$4;

        specialinvoke $r7.<io.grpc.internal.ManagedChannelImpl$4: void <init>()>();

        <io.grpc.internal.ManagedChannelImpl: io.grpc.ClientCall NOOP_CALL> = $r7;

        return;
    }

    void <init>(io.grpc.internal.ManagedChannelImplBuilder, io.grpc.internal.ClientTransportFactory, io.grpc.internal.BackoffPolicy$Provider, io.grpc.internal.ObjectPool, com.google.common.base.Supplier, java.util.List, io.grpc.internal.TimeProvider)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelImplBuilder $r1;
        io.grpc.internal.ClientTransportFactory $r2;
        io.grpc.internal.BackoffPolicy$Provider $r3;
        io.grpc.internal.ObjectPool $r4, $r16;
        com.google.common.base.Supplier $r5, $r43;
        java.util.List $r6;
        io.grpc.internal.TimeProvider $r7, $r15;
        io.grpc.SynchronizationContext $r8, r52;
        java.lang.Object $r9, r55;
        io.grpc.internal.ManagedChannelImpl$ResolutionState $r10;
        io.grpc.internal.ManagedChannelServiceConfig $r11;
        io.grpc.internal.ManagedChannelImpl$DelayedTransportListener $r12, r60;
        java.lang.String $r13, $r27;
        io.grpc.InternalLogId $r14;
        java.util.concurrent.Executor $r17;
        io.grpc.ChannelCredentials $r18;
        io.grpc.internal.ManagedChannelImpl$ExecutorHolder $r19, r63;
        io.grpc.internal.CallCredentialsApplyingTransportFactory $r20, $r22, r64;
        io.grpc.CallCredentials $r21;
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r23, r65;
        java.util.concurrent.ScheduledExecutorService $r24;
        int $i0, $i2;
        io.grpc.internal.ChannelTracer $r25, r67;
        long $l1, $l4;
        java.lang.StringBuilder $r26, r66;
        io.grpc.internal.ChannelLoggerImpl $r28, r68;
        io.grpc.ProxyDetector $r29;
        boolean $z0, $z1;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r30, r69;
        io.grpc.NameResolverRegistry $r31;
        io.grpc.internal.ScParser $r32, r70;
        io.grpc.NameResolver$Args$Builder $r33;
        io.grpc.NameResolver$Args $r34;
        io.grpc.NameResolver$Factory $r35;
        io.grpc.NameResolver $r36;
        io.grpc.internal.DelayedClientTransport $r37, r71;
        java.util.Map $r38;
        io.grpc.NameResolver$ConfigOrError $r39;
        io.grpc.Status $r40;
        io.grpc.Channel $r41;
        io.grpc.BinaryLog $r42;
        byte $b3;
        com.google.common.base.Stopwatch $r44;
        io.grpc.DecompressorRegistry $r45;
        io.grpc.CompressorRegistry $r46;
        io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory $r47, r75;
        io.grpc.internal.CallTracer $r48;
        io.grpc.InternalChannelz $r49;
        io.grpc.ChannelLogger$ChannelLogLevel $r50;
        io.grpc.internal.ManagedChannelImpl$2 r51;
        io.grpc.internal.ConnectivityStateManager r53;
        java.util.HashSet r54;
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry r56;
        java.util.concurrent.atomic.AtomicBoolean r57;
        java.util.concurrent.CountDownLatch r58;
        io.grpc.internal.RetriableStream$ChannelBufferMeter r59;
        io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator r61;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider r62;
        io.grpc.internal.ManagedChannelImpl$RealChannel r72;
        io.grpc.internal.ManagedChannelImpl$IdleModeTimer r73;
        io.grpc.internal.Rescheduler r74;
        java.util.Set r76;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImplBuilder;

        $r2 := @parameter1: io.grpc.internal.ClientTransportFactory;

        $r3 := @parameter2: io.grpc.internal.BackoffPolicy$Provider;

        $r4 := @parameter3: io.grpc.internal.ObjectPool;

        $r5 := @parameter4: com.google.common.base.Supplier;

        $r6 := @parameter5: java.util.List;

        $r7 := @parameter6: io.grpc.internal.TimeProvider;

        specialinvoke $r0.<io.grpc.ManagedChannel: void <init>()>();

        r52 = new io.grpc.SynchronizationContext;

        $r8 = r52;

        r51 = new io.grpc.internal.ManagedChannelImpl$2;

        specialinvoke r51.<io.grpc.internal.ManagedChannelImpl$2: void <init>(io.grpc.internal.ManagedChannelImpl)>($r0);

        specialinvoke r52.<io.grpc.SynchronizationContext: void <init>(java.lang.Thread$UncaughtExceptionHandler)>(r51);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext> = $r8;

        r53 = new io.grpc.internal.ConnectivityStateManager;

        specialinvoke r53.<io.grpc.internal.ConnectivityStateManager: void <init>()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager channelStateManager> = r53;

        r54 = new java.util.HashSet;

        specialinvoke r54.<java.util.HashSet: void <init>(int,float)>(16, 0.75F);

        r76 = (java.util.Set) r54;

        $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Set subchannels> = r76;

        r55 = new java.lang.Object;

        specialinvoke r55.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.Object pendingCallsInUseObject> = r55;

        r54 = new java.util.HashSet;

        specialinvoke r54.<java.util.HashSet: void <init>(int,float)>(1, 0.75F);

        r76 = (java.util.Set) r54;

        $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Set oobChannels> = r76;

        r56 = new io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry;

        specialinvoke r56.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)>($r0, null);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry uncommittedRetriableStreamsRegistry> = r56;

        r57 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke r57.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean shutdown> = r57;

        r58 = new java.util.concurrent.CountDownLatch;

        specialinvoke r58.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.CountDownLatch terminatedLatch> = r58;

        $r10 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState NO_RESOLUTION>;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState lastResolutionState> = $r10;

        $r11 = <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig EMPTY_SERVICE_CONFIG>;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig lastServiceConfig> = $r11;

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean serviceConfigUpdated> = 0;

        r59 = new io.grpc.internal.RetriableStream$ChannelBufferMeter;

        specialinvoke r59.<io.grpc.internal.RetriableStream$ChannelBufferMeter: void <init>()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.RetriableStream$ChannelBufferMeter channelBufferUsed> = r59;

        r60 = new io.grpc.internal.ManagedChannelImpl$DelayedTransportListener;

        $r12 = r60;

        specialinvoke r60.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)>($r0, null);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedClientTransport$Listener delayedTransportListener> = $r12;

        r61 = new io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator;

        specialinvoke r61.<io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)>($r0, null);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator> = r61;

        r62 = new io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider;

        specialinvoke r62.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)>($r0, null);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientCallImpl$ClientStreamProvider transportProvider> = r62;

        $r13 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: java.lang.String target>;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r13, "target");

        $r13 = (java.lang.String) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.String target> = $r13;

        $r14 = staticinvoke <io.grpc.InternalLogId: io.grpc.InternalLogId allocate(java.lang.String,java.lang.String)>("Channel", $r13);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalLogId logId> = $r14;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r7, "timeProvider");

        $r15 = (io.grpc.internal.TimeProvider) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.TimeProvider timeProvider> = $r15;

        $r16 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.internal.ObjectPool executorPool>;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r16, "executorPool");

        $r16 = (io.grpc.internal.ObjectPool) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ObjectPool executorPool> = $r16;

        $r9 = interfaceinvoke $r16.<io.grpc.internal.ObjectPool: java.lang.Object getObject()>();

        $r17 = (java.util.concurrent.Executor) $r9;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r17, "executor");

        $r17 = (java.util.concurrent.Executor) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor executor> = $r17;

        $r18 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.ChannelCredentials channelCredentials>;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelCredentials originalChannelCreds> = $r18;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory originalTransportFactory> = $r2;

        r63 = new io.grpc.internal.ManagedChannelImpl$ExecutorHolder;

        $r19 = r63;

        $r16 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.internal.ObjectPool offloadExecutorPool>;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r16, "offloadExecutorPool");

        $r16 = (io.grpc.internal.ObjectPool) $r9;

        specialinvoke r63.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: void <init>(io.grpc.internal.ObjectPool)>($r16);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder offloadExecutorHolder> = $r19;

        $r22 = new io.grpc.internal.CallCredentialsApplyingTransportFactory;

        $r20 = $r22;

        $r21 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.CallCredentials callCredentials>;

        specialinvoke $r22.<io.grpc.internal.CallCredentialsApplyingTransportFactory: void <init>(io.grpc.internal.ClientTransportFactory,io.grpc.CallCredentials,java.util.concurrent.Executor)>($r2, $r21, $r19);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory transportFactory> = $r20;

        r64 = new io.grpc.internal.CallCredentialsApplyingTransportFactory;

        specialinvoke r64.<io.grpc.internal.CallCredentialsApplyingTransportFactory: void <init>(io.grpc.internal.ClientTransportFactory,io.grpc.CallCredentials,java.util.concurrent.Executor)>($r2, null, $r19);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory oobTransportFactory> = r64;

        r65 = new io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r23 = r65;

        $r24 = interfaceinvoke $r20.<io.grpc.internal.ClientTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>();

        specialinvoke r65.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: void <init>(java.util.concurrent.ScheduledExecutorService,io.grpc.internal.ManagedChannelImpl$1)>($r24, null);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor scheduledExecutor> = $r23;

        $i0 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: int maxTraceEvents>;

        $r0.<io.grpc.internal.ManagedChannelImpl: int maxTraceEvents> = $i0;

        r67 = new io.grpc.internal.ChannelTracer;

        $r25 = r67;

        $i0 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: int maxTraceEvents>;

        $l1 = interfaceinvoke $r7.<io.grpc.internal.TimeProvider: long currentTimeNanos()>();

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Channel for \'");

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r67.<io.grpc.internal.ChannelTracer: void <init>(io.grpc.InternalLogId,int,long,java.lang.String)>($r14, $i0, $l1, $r27);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ChannelTracer channelTracer> = $r25;

        r68 = new io.grpc.internal.ChannelLoggerImpl;

        $r28 = r68;

        specialinvoke r68.<io.grpc.internal.ChannelLoggerImpl: void <init>(io.grpc.internal.ChannelTracer,io.grpc.internal.TimeProvider)>($r25, $r7);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger> = $r28;

        $r29 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.ProxyDetector proxyDetector>;

        if $r29 == null goto label01;

        $r29 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.ProxyDetector proxyDetector>;

        goto label02;

     label01:
        $r29 = <io.grpc.internal.GrpcUtil: io.grpc.ProxyDetector DEFAULT_PROXY_DETECTOR>;

     label02:
        $z0 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: boolean retryEnabled>;

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean retryEnabled> = $z0;

        r69 = new io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        $r30 = r69;

        $r27 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: java.lang.String defaultLbPolicy>;

        specialinvoke r69.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: void <init>(java.lang.String)>($r27);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory loadBalancerFactory> = $r30;

        $r31 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.NameResolverRegistry nameResolverRegistry>;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolverRegistry nameResolverRegistry> = $r31;

        r70 = new io.grpc.internal.ScParser;

        $r32 = r70;

        $i0 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: int maxRetryAttempts>;

        $i2 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: int maxHedgedAttempts>;

        specialinvoke r70.<io.grpc.internal.ScParser: void <init>(boolean,int,int,io.grpc.internal.AutoConfiguredLoadBalancerFactory)>($z0, $i0, $i2, $r30);

        $r27 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: java.lang.String authorityOverride>;

        $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.String authorityOverride> = $r27;

        $r33 = staticinvoke <io.grpc.NameResolver$Args: io.grpc.NameResolver$Args$Builder newBuilder()>();

        $i0 = virtualinvoke $r1.<io.grpc.internal.ManagedChannelImplBuilder: int getDefaultPort()>();

        $r33 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setDefaultPort(int)>($i0);

        $r33 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setProxyDetector(io.grpc.ProxyDetector)>($r29);

        $r33 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setSynchronizationContext(io.grpc.SynchronizationContext)>($r8);

        $r33 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)>($r23);

        $r33 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setServiceConfigParser(io.grpc.NameResolver$ServiceConfigParser)>($r32);

        $r33 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setChannelLogger(io.grpc.ChannelLogger)>($r28);

        $r33 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setOffloadExecutor(java.util.concurrent.Executor)>($r19);

        $r33 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setOverrideAuthority(java.lang.String)>($r27);

        $r34 = virtualinvoke $r33.<io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args build()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver$Args nameResolverArgs> = $r34;

        $r35 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.NameResolver$Factory nameResolverFactory>;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver$Factory nameResolverFactory> = $r35;

        $r36 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver getNameResolver(java.lang.String,java.lang.String,io.grpc.NameResolver$Factory,io.grpc.NameResolver$Args)>($r13, $r27, $r35, $r34);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver> = $r36;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r4, "balancerRpcExecutorPool");

        $r16 = (io.grpc.internal.ObjectPool) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ObjectPool balancerRpcExecutorPool> = $r16;

        r63 = new io.grpc.internal.ManagedChannelImpl$ExecutorHolder;

        specialinvoke r63.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: void <init>(io.grpc.internal.ObjectPool)>($r4);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder balancerRpcExecutorHolder> = r63;

        r71 = new io.grpc.internal.DelayedClientTransport;

        $r37 = r71;

        specialinvoke r71.<io.grpc.internal.DelayedClientTransport: void <init>(java.util.concurrent.Executor,io.grpc.SynchronizationContext)>($r17, $r8);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport delayedTransport> = $r37;

        virtualinvoke $r37.<io.grpc.internal.DelayedClientTransport: java.lang.Runnable start(io.grpc.internal.ManagedClientTransport$Listener)>($r12);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider> = $r3;

        $r38 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: java.util.Map defaultServiceConfig>;

        if $r38 == null goto label05;

        $r38 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: java.util.Map defaultServiceConfig>;

        $r39 = virtualinvoke $r32.<io.grpc.internal.ScParser: io.grpc.NameResolver$ConfigOrError parseServiceConfig(java.util.Map)>($r38);

        $r40 = virtualinvoke $r39.<io.grpc.NameResolver$ConfigOrError: io.grpc.Status getError()>();

        if $r40 != null goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        $r40 = virtualinvoke $r39.<io.grpc.NameResolver$ConfigOrError: io.grpc.Status getError()>();

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>($z0, "Default config is invalid: %s", $r40);

        $r9 = virtualinvoke $r39.<io.grpc.NameResolver$ConfigOrError: java.lang.Object getConfig()>();

        $r11 = (io.grpc.internal.ManagedChannelServiceConfig) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig defaultServiceConfig> = $r11;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig lastServiceConfig> = $r11;

        goto label06;

     label05:
        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig defaultServiceConfig> = null;

     label06:
        $z0 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: boolean lookUpServiceConfig>;

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean lookUpServiceConfig> = $z0;

        r72 = new io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r41 = r72;

        $r36 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver>;

        $r13 = virtualinvoke $r36.<io.grpc.NameResolver: java.lang.String getServiceAuthority()>();

        specialinvoke r72.<io.grpc.internal.ManagedChannelImpl$RealChannel: void <init>(io.grpc.internal.ManagedChannelImpl,java.lang.String,io.grpc.internal.ManagedChannelImpl$1)>($r0, $r13, null);

        r72 = (io.grpc.internal.ManagedChannelImpl$RealChannel) $r41;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel realChannel> = r72;

        $r42 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.BinaryLog binlog>;

        if $r42 == null goto label07;

        $r42 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.BinaryLog binlog>;

        $r41 = virtualinvoke $r42.<io.grpc.BinaryLog: io.grpc.Channel wrapChannel(io.grpc.Channel)>($r41);

     label07:
        $r41 = staticinvoke <io.grpc.ClientInterceptors: io.grpc.Channel intercept(io.grpc.Channel,java.util.List)>($r41, $r6);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.Channel interceptorChannel> = $r41;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r5, "stopwatchSupplier");

        $r43 = (com.google.common.base.Supplier) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: com.google.common.base.Supplier stopwatchSupplier> = $r43;

        $l1 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: long idleTimeoutMillis>;

        $b3 = $l1 cmp -1L;

        if $b3 != 0 goto label08;

        $l1 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: long idleTimeoutMillis>;

        $r0.<io.grpc.internal.ManagedChannelImpl: long idleTimeoutMillis> = $l1;

        goto label11;

     label08:
        $l1 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: long idleTimeoutMillis>;

        $l4 = <io.grpc.internal.ManagedChannelImplBuilder: long IDLE_MODE_MIN_TIMEOUT_MILLIS>;

        $b3 = $l1 cmp $l4;

        if $b3 < 0 goto label09;

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        $l1 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: long idleTimeoutMillis>;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,long)>($z1, "invalid idleTimeoutMillis %s", $l1);

        $l1 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: long idleTimeoutMillis>;

        $r0.<io.grpc.internal.ManagedChannelImpl: long idleTimeoutMillis> = $l1;

     label11:
        r74 = new io.grpc.internal.Rescheduler;

        r73 = new io.grpc.internal.ManagedChannelImpl$IdleModeTimer;

        specialinvoke r73.<io.grpc.internal.ManagedChannelImpl$IdleModeTimer: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)>($r0, null);

        $r24 = interfaceinvoke $r20.<io.grpc.internal.ClientTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>();

        $r9 = interfaceinvoke $r5.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r44 = (com.google.common.base.Stopwatch) $r9;

        specialinvoke r74.<io.grpc.internal.Rescheduler: void <init>(java.lang.Runnable,java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService,com.google.common.base.Stopwatch)>(r73, $r8, $r24, $r44);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.Rescheduler idleTimer> = r74;

        $z1 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: boolean fullStreamDecompression>;

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean fullStreamDecompression> = $z1;

        $r45 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.DecompressorRegistry decompressorRegistry>;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r45, "decompressorRegistry");

        $r45 = (io.grpc.DecompressorRegistry) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.DecompressorRegistry decompressorRegistry> = $r45;

        $r46 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.CompressorRegistry compressorRegistry>;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r46, "compressorRegistry");

        $r46 = (io.grpc.CompressorRegistry) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.CompressorRegistry compressorRegistry> = $r46;

        $r13 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: java.lang.String userAgent>;

        $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.String userAgent> = $r13;

        $l1 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: long retryBufferSize>;

        $r0.<io.grpc.internal.ManagedChannelImpl: long channelBufferLimit> = $l1;

        $l1 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: long perRpcBufferLimit>;

        $r0.<io.grpc.internal.ManagedChannelImpl: long perRpcBufferLimit> = $l1;

        r75 = new io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory;

        $r47 = r75;

        specialinvoke r75.<io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.TimeProvider)>($r0, $r7);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer$Factory callTracerFactory> = $r47;

        $r48 = interfaceinvoke $r47.<io.grpc.internal.CallTracer$Factory: io.grpc.internal.CallTracer create()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer channelCallTracer> = $r48;

        $r49 = $r1.<io.grpc.internal.ManagedChannelImplBuilder: io.grpc.InternalChannelz channelz>;

        $r9 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r49);

        $r49 = (io.grpc.InternalChannelz) $r9;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz channelz> = $r49;

        virtualinvoke $r49.<io.grpc.InternalChannelz: void addRootChannel(io.grpc.InternalInstrumented)>($r0);

        if $z0 != 0 goto label13;

        $r11 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig defaultServiceConfig>;

        if $r11 == null goto label12;

        $r50 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r28.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r50, "Service config look-up disabled, using default service config");

     label12:
        $r0.<io.grpc.internal.ManagedChannelImpl: boolean serviceConfigUpdated> = 1;

     label13:
        return;
    }

    static void access$1000(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void enterIdleMode()>();

        return;
    }

    static io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.SynchronizationContext$ScheduledHandle r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle scheduledNameResolverRefresh>;

        return r1;
    }

    static io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.ManagedChannelImpl, io.grpc.SynchronizationContext$ScheduledHandle)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.SynchronizationContext$ScheduledHandle $r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: io.grpc.SynchronizationContext$ScheduledHandle;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle scheduledNameResolverRefresh> = $r1;

        return $r1;
    }

    static void access$1300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void refreshNameResolution()>();

        return;
    }

    static io.grpc.LoadBalancer$SubchannelPicker access$1400(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.LoadBalancer$SubchannelPicker r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.LoadBalancer$SubchannelPicker subchannelPicker>;

        return r1;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.util.concurrent.atomic.AtomicBoolean r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean shutdown>;

        return r1;
    }

    static io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.DelayedClientTransport r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport delayedTransport>;

        return r1;
    }

    static boolean access$1700(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean retryEnabled>;

        return z0;
    }

    static io.grpc.internal.ManagedChannelServiceConfig access$1800(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelServiceConfig r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig lastServiceConfig>;

        return r1;
    }

    static io.grpc.internal.ManagedChannelServiceConfig access$1802(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelServiceConfig)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelServiceConfig $r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: io.grpc.internal.ManagedChannelServiceConfig;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig lastServiceConfig> = $r1;

        return $r1;
    }

    static io.grpc.internal.RetriableStream$ChannelBufferMeter access$1900(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.RetriableStream$ChannelBufferMeter r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.RetriableStream$ChannelBufferMeter channelBufferUsed>;

        return r1;
    }

    static long access$2000(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        long l0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        l0 = $r0.<io.grpc.internal.ManagedChannelImpl: long perRpcBufferLimit>;

        return l0;
    }

    static long access$2100(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        long l0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        l0 = $r0.<io.grpc.internal.ManagedChannelImpl: long channelBufferLimit>;

        return l0;
    }

    static java.util.concurrent.Executor access$2200(io.grpc.internal.ManagedChannelImpl, io.grpc.CallOptions)
    {
        io.grpc.CallOptions $r0;
        java.util.concurrent.Executor $r1;
        io.grpc.internal.ManagedChannelImpl $r2;

        $r2 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0 := @parameter1: io.grpc.CallOptions;

        $r1 = specialinvoke $r2.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor getCallExecutor(io.grpc.CallOptions)>($r0);

        return $r1;
    }

    static io.grpc.internal.ClientTransportFactory access$2300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ClientTransportFactory r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory transportFactory>;

        return r1;
    }

    static io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry access$2400(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry uncommittedRetriableStreamsRegistry>;

        return r1;
    }

    static io.grpc.internal.CallTracer access$300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.CallTracer r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer channelCallTracer>;

        return r1;
    }

    static io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.ChannelLogger r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger>;

        return r1;
    }

    static void access$3200(io.grpc.internal.ManagedChannelImpl, boolean)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void cancelIdleTimer(boolean)>($z0);

        return;
    }

    static boolean access$3300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean shutdownNowed>;

        return z0;
    }

    static boolean access$3302(io.grpc.internal.ManagedChannelImpl, boolean)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $z0 := @parameter1: boolean;

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean shutdownNowed> = $z0;

        return $z0;
    }

    static void access$3400(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void maybeShutdownNowSubchannels()>();

        return;
    }

    static io.grpc.InternalConfigSelector access$3500()
    {
        io.grpc.InternalConfigSelector r0;

        r0 = <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector INITIAL_PENDING_SELECTOR>;

        return r0;
    }

    static io.grpc.CompressorRegistry access$3600(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.CompressorRegistry r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.CompressorRegistry compressorRegistry>;

        return r1;
    }

    static io.grpc.DecompressorRegistry access$3700(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.DecompressorRegistry r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.DecompressorRegistry decompressorRegistry>;

        return r1;
    }

    static boolean access$3800(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean fullStreamDecompression>;

        return z0;
    }

    static io.grpc.internal.ClientCallImpl$ClientStreamProvider access$3900(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ClientCallImpl$ClientStreamProvider r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientCallImpl$ClientStreamProvider transportProvider>;

        return r1;
    }

    static io.grpc.internal.ChannelTracer access$400(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ChannelTracer r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ChannelTracer channelTracer>;

        return r1;
    }

    static boolean access$4000(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean terminated>;

        return z0;
    }

    static java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.util.Collection r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Collection pendingCalls>;

        return r1;
    }

    static java.util.Collection access$4202(io.grpc.internal.ManagedChannelImpl, java.util.Collection)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.util.Collection $r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: java.util.Collection;

        $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Collection pendingCalls> = $r1;

        return $r1;
    }

    static java.lang.Object access$4300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.lang.Object r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.Object pendingCallsInUseObject>;

        return r1;
    }

    static io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor access$4400(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor scheduledExecutor>;

        return r1;
    }

    static java.util.concurrent.Executor access$4600(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.util.concurrent.Executor r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor executor>;

        return r1;
    }

    static io.grpc.ClientCall access$4700()
    {
        io.grpc.ClientCall r0;

        r0 = <io.grpc.internal.ManagedChannelImpl: io.grpc.ClientCall NOOP_CALL>;

        return r0;
    }

    static io.grpc.internal.ConnectivityStateManager access$500(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ConnectivityStateManager r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager channelStateManager>;

        return r1;
    }

    static void access$5000(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void refreshAndResetNameResolution()>();

        return;
    }

    static boolean access$5100(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean terminating>;

        return z0;
    }

    static boolean access$5102(io.grpc.internal.ManagedChannelImpl, boolean)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $z0 := @parameter1: boolean;

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean terminating> = $z0;

        return $z0;
    }

    static void access$5200(io.grpc.internal.ManagedChannelImpl, io.grpc.LoadBalancer$SubchannelPicker)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.LoadBalancer$SubchannelPicker $r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: io.grpc.LoadBalancer$SubchannelPicker;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void updateSubchannelPicker(io.grpc.LoadBalancer$SubchannelPicker)>($r1);

        return;
    }

    static io.grpc.internal.TimeProvider access$5300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.TimeProvider r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.TimeProvider timeProvider>;

        return r1;
    }

    static int access$5400(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        int i0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        i0 = $r0.<io.grpc.internal.ManagedChannelImpl: int maxTraceEvents>;

        return i0;
    }

    static io.grpc.internal.CallTracer$Factory access$5700(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.CallTracer$Factory r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer$Factory callTracerFactory>;

        return r1;
    }

    static io.grpc.InternalChannelz access$5800(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.InternalChannelz r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz channelz>;

        return r1;
    }

    static void access$5900(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void maybeTerminateChannel()>();

        return;
    }

    static java.lang.String access$6100(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.lang.String r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.String userAgent>;

        return r1;
    }

    static io.grpc.internal.BackoffPolicy$Provider access$6200(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.BackoffPolicy$Provider r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider>;

        return r1;
    }

    static com.google.common.base.Supplier access$6300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        com.google.common.base.Supplier r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: com.google.common.base.Supplier stopwatchSupplier>;

        return r1;
    }

    static java.util.Set access$700(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.util.Set r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Set subchannels>;

        return r1;
    }

    static io.grpc.NameResolver access$7000(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.NameResolver r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver>;

        return r1;
    }

    static io.grpc.internal.ManagedChannelImpl$ResolutionState access$7100(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl$ResolutionState r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState lastResolutionState>;

        return r1;
    }

    static io.grpc.internal.ManagedChannelImpl$ResolutionState access$7102(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$ResolutionState)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl$ResolutionState $r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: io.grpc.internal.ManagedChannelImpl$ResolutionState;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState lastResolutionState> = $r1;

        return $r1;
    }

    static io.grpc.internal.BackoffPolicy access$7200(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.BackoffPolicy r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy nameResolverBackoffPolicy>;

        return r1;
    }

    static io.grpc.internal.BackoffPolicy access$7202(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.BackoffPolicy)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.BackoffPolicy $r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: io.grpc.internal.BackoffPolicy;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy nameResolverBackoffPolicy> = $r1;

        return $r1;
    }

    static boolean access$7300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean lookUpServiceConfig>;

        return z0;
    }

    static io.grpc.internal.ManagedChannelServiceConfig access$7400(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelServiceConfig r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig defaultServiceConfig>;

        return r1;
    }

    static io.grpc.internal.ManagedChannelServiceConfig access$7500()
    {
        io.grpc.internal.ManagedChannelServiceConfig r0;

        r0 = <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig EMPTY_SERVICE_CONFIG>;

        return r0;
    }

    static io.grpc.internal.ManagedChannelImpl$RealChannel access$7600(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel realChannel>;

        return r1;
    }

    static boolean access$7700(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean serviceConfigUpdated>;

        return z0;
    }

    static boolean access$7702(io.grpc.internal.ManagedChannelImpl, boolean)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $z0 := @parameter1: boolean;

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean serviceConfigUpdated> = $z0;

        return $z0;
    }

    static java.lang.String access$8000(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.lang.String r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.String authorityOverride>;

        return r1;
    }

    static void access$8200(io.grpc.internal.ManagedChannelImpl, boolean)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void shutdownNameResolverAndLoadBalancer(boolean)>($z0);

        return;
    }

    static void access$8300(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void rescheduleIdleTimer()>();

        return;
    }

    static io.grpc.internal.ManagedChannelImpl$LbHelperImpl access$900(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper>;

        return r1;
    }

    private void cancelIdleTimer(boolean)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;
        io.grpc.internal.Rescheduler $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.Rescheduler idleTimer>;

        virtualinvoke $r1.<io.grpc.internal.Rescheduler: void cancel(boolean)>($z0);

        return;
    }

    private void cancelNameResolverBackoff()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.SynchronizationContext $r1;
        io.grpc.SynchronizationContext$ScheduledHandle $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle scheduledNameResolverRefresh>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<io.grpc.SynchronizationContext$ScheduledHandle: void cancel()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle scheduledNameResolverRefresh> = null;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy nameResolverBackoffPolicy> = null;

     label1:
        return;
    }

    private void enterIdleMode()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.lang.Object $r1;
        boolean $z0;
        io.grpc.internal.DelayedClientTransport $r2;
        io.grpc.ChannelLogger $r3;
        io.grpc.ChannelLogger$ChannelLogLevel $r4;
        io.grpc.internal.ConnectivityStateManager $r5;
        io.grpc.ConnectivityState $r6;
        io.grpc.internal.InUseStateAggregator $r7;
        java.lang.Object[] $r8;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void shutdownNameResolverAndLoadBalancer(boolean)>(1);

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport delayedTransport>;

        virtualinvoke $r2.<io.grpc.internal.DelayedClientTransport: void reprocess(io.grpc.LoadBalancer$SubchannelPicker)>(null);

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger>;

        $r4 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r3.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r4, "Entering IDLE state");

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager channelStateManager>;

        $r6 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState IDLE>;

        virtualinvoke $r5.<io.grpc.internal.ConnectivityStateManager: void gotoState(io.grpc.ConnectivityState)>($r6);

        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator>;

        $r8 = newarray (java.lang.Object)[2];

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.Object pendingCallsInUseObject>;

        $r8[0] = $r1;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport delayedTransport>;

        $r8[1] = $r2;

        $z0 = virtualinvoke $r7.<io.grpc.internal.InUseStateAggregator: boolean anyObjectInUse(java.lang.Object[])>($r8);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void exitIdleMode()>();

     label1:
        return;
    }

    private java.util.concurrent.Executor getCallExecutor(io.grpc.CallOptions)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.util.concurrent.Executor $r1;
        io.grpc.CallOptions $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter0: io.grpc.CallOptions;

        $r1 = virtualinvoke $r2.<io.grpc.CallOptions: java.util.concurrent.Executor getExecutor()>();

        if $r1 != null goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor executor>;

     label1:
        return $r1;
    }

    private static io.grpc.NameResolver getNameResolver(java.lang.String, io.grpc.NameResolver$Factory, io.grpc.NameResolver$Args)
    {
        java.lang.String $r0, $r6, $r10, $r12;
        io.grpc.NameResolver$Factory $r1;
        io.grpc.NameResolver$Args $r2;
        java.lang.StringBuilder $r3, $r11, r17;
        java.net.URI $r4, r16;
        java.lang.Throwable $r5, $r13;
        io.grpc.NameResolver $r7;
        java.util.regex.Pattern $r8;
        java.util.regex.Matcher $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r14, r18;
        java.lang.Object[] $r15;
        int $i0;
        java.net.URISyntaxException r19;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: io.grpc.NameResolver$Factory;

        $r2 := @parameter2: io.grpc.NameResolver$Args;

        $r11 = new java.lang.StringBuilder;

        $r3 = $r11;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        r16 = new java.net.URI;

        $r4 = r16;

     label01:
        specialinvoke r16.<java.net.URI: void <init>(java.lang.String)>($r0);

     label02:
        goto label04;

     label03:
        $r5 := @caughtexception;

        r19 = (java.net.URISyntaxException) $r5;

        $r6 = virtualinvoke r19.<java.net.URISyntaxException: java.lang.String getMessage()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = null;

     label04:
        if $r4 == null goto label05;

        $r7 = virtualinvoke $r1.<io.grpc.NameResolver$Factory: io.grpc.NameResolver newNameResolver(java.net.URI,io.grpc.NameResolver$Args)>($r4, $r2);

        if $r7 == null goto label05;

        return $r7;

     label05:
        $r8 = <io.grpc.internal.ManagedChannelImpl: java.util.regex.Pattern URI_PATTERN>;

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean matches()>();

        $r6 = "";

        if $z0 != 0 goto label11;

        r16 = new java.net.URI;

     label06:
        $r10 = virtualinvoke $r1.<io.grpc.NameResolver$Factory: java.lang.String getDefaultScheme()>();

     label07:
        r17 = new java.lang.StringBuilder;

        $r11 = r17;

     label08:
        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, "", $r12, null);

     label09:
        $r7 = virtualinvoke $r1.<io.grpc.NameResolver$Factory: io.grpc.NameResolver newNameResolver(java.net.URI,io.grpc.NameResolver$Args)>(r16, $r2);

        if $r7 == null goto label11;

        return $r7;

     label10:
        $r13 := @caughtexception;

        r18 = new java.lang.IllegalArgumentException;

        specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r13);

        throw r18;

     label11:
        r18 = new java.lang.IllegalArgumentException;

        $r14 = r18;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = $r0;

        $i0 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label12;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label12:
        $r15[1] = $r6;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("cannot find a NameResolver for %s%s", $r15);

        specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r14;

        catch java.net.URISyntaxException from label01 to label02 with label03;
        catch java.net.URISyntaxException from label06 to label07 with label10;
        catch java.net.URISyntaxException from label08 to label09 with label10;
    }

    static io.grpc.NameResolver getNameResolver(java.lang.String, java.lang.String, io.grpc.NameResolver$Factory, io.grpc.NameResolver$Args)
    {
        java.lang.String $r0, $r3;
        io.grpc.NameResolver$Args $r1;
        io.grpc.NameResolver $r2;
        io.grpc.NameResolver$Factory $r4;
        io.grpc.internal.ManagedChannelImpl$3 $r5;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r4 := @parameter2: io.grpc.NameResolver$Factory;

        $r1 := @parameter3: io.grpc.NameResolver$Args;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver getNameResolver(java.lang.String,io.grpc.NameResolver$Factory,io.grpc.NameResolver$Args)>($r3, $r4, $r1);

        if $r0 != null goto label1;

        return $r2;

     label1:
        $r5 = new io.grpc.internal.ManagedChannelImpl$3;

        specialinvoke $r5.<io.grpc.internal.ManagedChannelImpl$3: void <init>(io.grpc.NameResolver,java.lang.String)>($r2, $r0);

        return $r5;
    }

    private void maybeShutdownNowSubchannels()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;
        java.util.Set $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        io.grpc.internal.InternalSubchannel $r4;
        io.grpc.Status $r5;
        io.grpc.internal.OobChannel $r6;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean shutdownNowed>;

        if $z0 == 0 goto label4;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Set subchannels>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (io.grpc.internal.InternalSubchannel) $r3;

        $r5 = <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_NOW_STATUS>;

        virtualinvoke $r4.<io.grpc.internal.InternalSubchannel: void shutdownNow(io.grpc.Status)>($r5);

        goto label1;

     label2:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Set oobChannels>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (io.grpc.internal.OobChannel) $r3;

        $r4 = virtualinvoke $r6.<io.grpc.internal.OobChannel: io.grpc.internal.InternalSubchannel getInternalSubchannel()>();

        $r5 = <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_NOW_STATUS>;

        virtualinvoke $r4.<io.grpc.internal.InternalSubchannel: void shutdownNow(io.grpc.Status)>($r5);

        goto label3;

     label4:
        return;
    }

    private void maybeTerminateChannel()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.util.Set $r2;
        io.grpc.ChannelLogger $r3;
        io.grpc.ChannelLogger$ChannelLogLevel $r4;
        io.grpc.InternalChannelz $r5;
        io.grpc.internal.ObjectPool $r6;
        java.util.concurrent.Executor $r7;
        io.grpc.internal.ManagedChannelImpl$ExecutorHolder $r8;
        io.grpc.internal.ClientTransportFactory $r9;
        java.util.concurrent.CountDownLatch $r10;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean terminated>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean shutdown>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label2;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Set subchannels>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.Set oobChannels>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger>;

        $r4 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r3.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r4, "Terminated");

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz channelz>;

        virtualinvoke $r5.<io.grpc.InternalChannelz: void removeRootChannel(io.grpc.InternalInstrumented)>($r0);

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ObjectPool executorPool>;

        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor executor>;

        interfaceinvoke $r6.<io.grpc.internal.ObjectPool: java.lang.Object returnObject(java.lang.Object)>($r7);

        $r8 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder balancerRpcExecutorHolder>;

        virtualinvoke $r8.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: void release()>();

        $r8 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder offloadExecutorHolder>;

        virtualinvoke $r8.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: void release()>();

        $r9 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory transportFactory>;

        interfaceinvoke $r9.<io.grpc.internal.ClientTransportFactory: void close()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean terminated> = 1;

        $r10 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.CountDownLatch terminatedLatch>;

        virtualinvoke $r10.<java.util.concurrent.CountDownLatch: void countDown()>();

     label2:
        return;
    }

    private void refreshAndResetNameResolution()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.SynchronizationContext $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void cancelNameResolverBackoff()>();

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void refreshNameResolution()>();

        return;
    }

    private void refreshNameResolution()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.SynchronizationContext $r1;
        boolean $z0;
        io.grpc.NameResolver $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean nameResolverStarted>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver>;

        virtualinvoke $r2.<io.grpc.NameResolver: void refresh()>();

     label1:
        return;
    }

    private void rescheduleIdleTimer()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        byte $b1;
        io.grpc.internal.Rescheduler $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $l0 = $r0.<io.grpc.internal.ManagedChannelImpl: long idleTimeoutMillis>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.Rescheduler idleTimer>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r2.<io.grpc.internal.Rescheduler: void reschedule(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return;
    }

    private void shutdownNameResolverAndLoadBalancer(boolean)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.NameResolver$Args $r1;
        io.grpc.NameResolver $r2;
        boolean $z0, $z1;
        io.grpc.SynchronizationContext $r3;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r4;
        java.lang.String $r5, $r6;
        io.grpc.NameResolver$Factory $r7;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r8;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $z0 := @parameter0: boolean;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        if $z0 == 0 goto label3;

        $z1 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean nameResolverStarted>;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "nameResolver is not started");

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper>;

        if $r4 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "lbHelper is null");

     label3:
        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver>;

        if $r2 == null goto label5;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void cancelNameResolverBackoff()>();

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver>;

        virtualinvoke $r2.<io.grpc.NameResolver: void shutdown()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean nameResolverStarted> = 0;

        if $z0 == 0 goto label4;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.String target>;

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.String authorityOverride>;

        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver$Factory nameResolverFactory>;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver$Args nameResolverArgs>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver getNameResolver(java.lang.String,java.lang.String,io.grpc.NameResolver$Factory,io.grpc.NameResolver$Args)>($r5, $r6, $r7, $r1);

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver> = $r2;

        goto label5;

     label4:
        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver> = null;

     label5:
        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper>;

        if $r4 == null goto label6;

        $r8 = $r4.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer lb>;

        virtualinvoke $r8.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: void shutdown()>();

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper> = null;

     label6:
        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.LoadBalancer$SubchannelPicker subchannelPicker> = null;

        return;
    }

    private void updateSubchannelPicker(io.grpc.LoadBalancer$SubchannelPicker)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.LoadBalancer$SubchannelPicker $r1;
        io.grpc.internal.DelayedClientTransport $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter0: io.grpc.LoadBalancer$SubchannelPicker;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.LoadBalancer$SubchannelPicker subchannelPicker> = $r1;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport delayedTransport>;

        virtualinvoke $r2.<io.grpc.internal.DelayedClientTransport: void reprocess(io.grpc.LoadBalancer$SubchannelPicker)>($r1);

        return;
    }

    public java.lang.String authority()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.lang.String $r1;
        io.grpc.Channel $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.Channel interceptorChannel>;

        $r1 = virtualinvoke $r2.<io.grpc.Channel: java.lang.String authority()>();

        return $r1;
    }

    public void enterIdle()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.SynchronizationContext $r1;
        io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r2 = new io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable;

        specialinvoke $r2.<io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: void <init>(io.grpc.internal.ManagedChannelImpl)>($r0);

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r2);

        return;
    }

    void exitIdleMode()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.SynchronizationContext $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        io.grpc.internal.InUseStateAggregator $r3;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r4;
        io.grpc.ChannelLogger $r5;
        io.grpc.ChannelLogger$ChannelLogLevel $r6;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r7;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r8;
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r9;
        io.grpc.NameResolver $r10;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r1.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean shutdown>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label5;

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean panicMode>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator>;

        $z0 = virtualinvoke $r3.<io.grpc.internal.InUseStateAggregator: boolean isInUse()>();

        if $z0 == 0 goto label2;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void cancelIdleTimer(boolean)>(0);

        goto label3;

     label2:
        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void rescheduleIdleTimer()>();

     label3:
        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper>;

        if $r4 == null goto label4;

        return;

     label4:
        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger>;

        $r6 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r5.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r6, "Exiting idle mode");

        $r4 = new io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        specialinvoke $r4.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)>($r0, null);

        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory loadBalancerFactory>;

        $r8 = virtualinvoke $r7.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper)>($r4);

        $r4.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer lb> = $r8;

        $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper> = $r4;

        $r9 = new io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r10 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver>;

        specialinvoke $r9.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$LbHelperImpl,io.grpc.NameResolver)>($r0, $r4, $r10);

        $r10 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver>;

        virtualinvoke $r10.<io.grpc.NameResolver: void start(io.grpc.NameResolver$Listener2)>($r9);

        $r0.<io.grpc.internal.ManagedChannelImpl: boolean nameResolverStarted> = 1;

     label5:
        return;
    }

    public io.grpc.InternalLogId getLogId()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.InternalLogId r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalLogId logId>;

        return r1;
    }

    public boolean isTerminated()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean z0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean terminated>;

        return z0;
    }

    public io.grpc.ClientCall newCall(io.grpc.MethodDescriptor, io.grpc.CallOptions)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.CallOptions $r1;
        io.grpc.Channel $r2;
        io.grpc.ClientCall $r3;
        io.grpc.MethodDescriptor $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r4 := @parameter0: io.grpc.MethodDescriptor;

        $r1 := @parameter1: io.grpc.CallOptions;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.Channel interceptorChannel>;

        $r3 = virtualinvoke $r2.<io.grpc.Channel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r4, $r1);

        return $r3;
    }

    void panic(java.lang.Throwable)
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        java.lang.Throwable $r1;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker $r2;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r3;
        io.grpc.ChannelLogger $r4;
        io.grpc.ChannelLogger$ChannelLogLevel $r5;
        io.grpc.internal.ConnectivityStateManager $r6;
        io.grpc.ConnectivityState $r7;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl: boolean panicMode>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0.<io.grpc.internal.ManagedChannelImpl: boolean panicMode> = 1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void cancelIdleTimer(boolean)>(1);

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void shutdownNameResolverAndLoadBalancer(boolean)>(0);

        $r2 = new io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker;

        specialinvoke $r2.<io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: void <init>(io.grpc.internal.ManagedChannelImpl,java.lang.Throwable)>($r0, $r1);

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl: void updateSubchannelPicker(io.grpc.LoadBalancer$SubchannelPicker)>($r2);

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel realChannel>;

        virtualinvoke $r3.<io.grpc.internal.ManagedChannelImpl$RealChannel: void updateConfigSelector(io.grpc.InternalConfigSelector)>(null);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger>;

        $r5 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel ERROR>;

        virtualinvoke $r4.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r5, "PANIC! Entering TRANSIENT_FAILURE");

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager channelStateManager>;

        $r7 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState TRANSIENT_FAILURE>;

        virtualinvoke $r6.<io.grpc.internal.ConnectivityStateManager: void gotoState(io.grpc.ConnectivityState)>($r7);

        return;
    }

    public volatile io.grpc.ManagedChannel shutdown()
    {
        io.grpc.internal.ManagedChannelImpl $r0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r0 = virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl shutdown()>();

        return $r0;
    }

    public io.grpc.internal.ManagedChannelImpl shutdown()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        boolean $z0;
        io.grpc.ChannelLogger $r1;
        io.grpc.ChannelLogger$ChannelLogLevel $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        io.grpc.SynchronizationContext $r4;
        io.grpc.internal.ManagedChannelImpl$1Shutdown $r5;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r6;
        io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer $r7;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger>;

        $r2 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel DEBUG>;

        virtualinvoke $r1.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r2, "shutdown() called");

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean shutdown>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 != 0 goto label1;

        return $r0;

     label1:
        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r5 = new io.grpc.internal.ManagedChannelImpl$1Shutdown;

        specialinvoke $r5.<io.grpc.internal.ManagedChannelImpl$1Shutdown: void <init>(io.grpc.internal.ManagedChannelImpl)>($r0);

        virtualinvoke $r4.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r5);

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel realChannel>;

        virtualinvoke $r6.<io.grpc.internal.ManagedChannelImpl$RealChannel: void shutdown()>();

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r7 = new io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer;

        specialinvoke $r7.<io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer: void <init>(io.grpc.internal.ManagedChannelImpl)>($r0);

        virtualinvoke $r4.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r7);

        return $r0;
    }

    public volatile io.grpc.ManagedChannel shutdownNow()
    {
        io.grpc.internal.ManagedChannelImpl $r0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r0 = virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl shutdownNow()>();

        return $r0;
    }

    public io.grpc.internal.ManagedChannelImpl shutdownNow()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        io.grpc.ChannelLogger $r1;
        io.grpc.ChannelLogger$ChannelLogLevel $r2;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r3;
        io.grpc.SynchronizationContext $r4;
        io.grpc.internal.ManagedChannelImpl$1ShutdownNow $r5;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger>;

        $r2 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel DEBUG>;

        virtualinvoke $r1.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r2, "shutdownNow() called");

        virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl shutdown()>();

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel realChannel>;

        virtualinvoke $r3.<io.grpc.internal.ManagedChannelImpl$RealChannel: void shutdownNow()>();

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r5 = new io.grpc.internal.ManagedChannelImpl$1ShutdownNow;

        specialinvoke $r5.<io.grpc.internal.ManagedChannelImpl$1ShutdownNow: void <init>(io.grpc.internal.ManagedChannelImpl)>($r0);

        virtualinvoke $r4.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r5);

        return $r0;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.ManagedChannelImpl $r0;
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        io.grpc.InternalLogId $r2;
        long $l0;
        java.lang.String $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>($r0);

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalLogId logId>;

        $l0 = virtualinvoke $r2.<io.grpc.InternalLogId: long getId()>();

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long)>("logId", $l0);

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl: java.lang.String target>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("target", $r3);

        $r3 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r3;
    }

io.grpc.internal.ManagedChannelImpl$1
    void <init>()
    {
        io.grpc.internal.ManagedChannelImpl$1 $r0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.InternalConfigSelector: void <init>()>();

        return;
    }

    public io.grpc.InternalConfigSelector$Result selectConfig(io.grpc.LoadBalancer$PickSubchannelArgs)
    {
        io.grpc.internal.ManagedChannelImpl$1 $r0;
        io.grpc.LoadBalancer$PickSubchannelArgs $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1;

        $r1 := @parameter0: io.grpc.LoadBalancer$PickSubchannelArgs;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Resolution is pending");

        throw $r2;
    }

io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer
<io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer: io.grpc.internal.ManagedChannelImpl this$0>
    void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$3200(io.grpc.internal.ManagedChannelImpl,boolean)>($r1, 1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory
<io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory: io.grpc.internal.TimeProvider val$timeProvider>
    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.TimeProvider)
    {
        io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.internal.TimeProvider $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: io.grpc.internal.TimeProvider;

        $r0.<io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory: io.grpc.internal.TimeProvider val$timeProvider> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public io.grpc.internal.CallTracer create()
    {
        io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory $r0;
        io.grpc.internal.CallTracer $r1;
        io.grpc.internal.TimeProvider $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory;

        $r1 = new io.grpc.internal.CallTracer;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory: io.grpc.internal.TimeProvider val$timeProvider>;

        specialinvoke $r1.<io.grpc.internal.CallTracer: void <init>(io.grpc.internal.TimeProvider)>($r2);

        return $r1;
    }

io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker
<io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: io.grpc.LoadBalancer$PickResult panicPickResult>
<io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: java.lang.Throwable val$t>
    void <init>(io.grpc.internal.ManagedChannelImpl, java.lang.Throwable)
    {
        io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker $r0;
        java.lang.Throwable $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.Status $r3;
        io.grpc.LoadBalancer$PickResult $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker;

        $r2 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: java.lang.Throwable;

        $r0.<io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: java.lang.Throwable val$t> = $r1;

        specialinvoke $r0.<io.grpc.LoadBalancer$SubchannelPicker: void <init>()>();

        $r3 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        $r3 = virtualinvoke $r3.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("Panic! This is a bug!");

        $r3 = virtualinvoke $r3.<io.grpc.Status: io.grpc.Status withCause(java.lang.Throwable)>($r1);

        $r4 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withDrop(io.grpc.Status)>($r3);

        $r0.<io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: io.grpc.LoadBalancer$PickResult panicPickResult> = $r4;

        return;
    }

    public io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
    {
        io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker $r0;
        io.grpc.LoadBalancer$PickSubchannelArgs $r1;
        io.grpc.LoadBalancer$PickResult r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker;

        $r1 := @parameter0: io.grpc.LoadBalancer$PickSubchannelArgs;

        r2 = $r0.<io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: io.grpc.LoadBalancer$PickResult panicPickResult>;

        return r2;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker $r0;
        io.grpc.LoadBalancer$PickResult $r1;
        com.google.common.base.MoreObjects$ToStringHelper $r2;
        java.lang.String $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker;

        $r2 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Class)>(class "Lio/grpc/internal/ManagedChannelImpl$1PanicSubchannelPicker;");

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: io.grpc.LoadBalancer$PickResult panicPickResult>;

        $r2 = virtualinvoke $r2.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("panicPickResult", $r1);

        $r3 = virtualinvoke $r2.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r3;
    }

io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable
<io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: io.grpc.internal.ManagedChannelImpl this$0>
    void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)>($r1);

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label2;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl access$900(io.grpc.internal.ManagedChannelImpl)>($r1);

        if $r3 != null goto label1;

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$3200(io.grpc.internal.ManagedChannelImpl,boolean)>($r1, 0);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$1000(io.grpc.internal.ManagedChannelImpl)>($r1);

     label2:
        return;
    }

io.grpc.internal.ManagedChannelImpl$1Shutdown
<io.grpc.internal.ManagedChannelImpl$1Shutdown: io.grpc.internal.ManagedChannelImpl this$0>
    void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$1Shutdown $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1Shutdown;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$1Shutdown: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$1Shutdown $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.ChannelLogger $r2;
        io.grpc.ChannelLogger$ChannelLogLevel $r3;
        io.grpc.internal.ConnectivityStateManager $r4;
        io.grpc.ConnectivityState $r5;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1Shutdown;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1Shutdown: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r1);

        $r3 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r2.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r3, "Entering SHUTDOWN state");

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1Shutdown: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager access$500(io.grpc.internal.ManagedChannelImpl)>($r1);

        $r5 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN>;

        virtualinvoke $r4.<io.grpc.internal.ConnectivityStateManager: void gotoState(io.grpc.ConnectivityState)>($r5);

        return;
    }

io.grpc.internal.ManagedChannelImpl$1ShutdownNow
<io.grpc.internal.ManagedChannelImpl$1ShutdownNow: io.grpc.internal.ManagedChannelImpl this$0>
    void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$1ShutdownNow $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1ShutdownNow;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$1ShutdownNow: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$1ShutdownNow $r0;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$1ShutdownNow;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1ShutdownNow: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$3300(io.grpc.internal.ManagedChannelImpl)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1ShutdownNow: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$3302(io.grpc.internal.ManagedChannelImpl,boolean)>($r1, 1);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$1ShutdownNow: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$3400(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$2
<io.grpc.internal.ManagedChannelImpl$2: io.grpc.internal.ManagedChannelImpl this$0>
    void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$2 $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$2;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$2: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        io.grpc.internal.ManagedChannelImpl$2 $r0;
        java.lang.Throwable $r1;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r3;
        java.lang.Thread $r4;
        java.lang.StringBuilder $r5;
        io.grpc.internal.ManagedChannelImpl $r6;
        io.grpc.InternalLogId $r7;
        java.lang.String $r8;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$2;

        $r4 := @parameter0: java.lang.Thread;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = <io.grpc.internal.ManagedChannelImpl: java.util.logging.Logger logger>;

        $r3 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl$2: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = virtualinvoke $r6.<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalLogId getLogId()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] Uncaught exception in the SynchronizationContext. Panic!");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "io.grpc.internal.ManagedChannelImpl$2", "uncaughtException", $r8, $r1);

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl$2: io.grpc.internal.ManagedChannelImpl this$0>;

        virtualinvoke $r6.<io.grpc.internal.ManagedChannelImpl: void panic(java.lang.Throwable)>($r1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$3
<io.grpc.internal.ManagedChannelImpl$3: java.lang.String val$overrideAuthority>
    void <init>(io.grpc.NameResolver, java.lang.String)
    {
        io.grpc.internal.ManagedChannelImpl$3 $r0;
        io.grpc.NameResolver $r1;
        java.lang.String $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$3;

        $r1 := @parameter0: io.grpc.NameResolver;

        $r2 := @parameter1: java.lang.String;

        $r0.<io.grpc.internal.ManagedChannelImpl$3: java.lang.String val$overrideAuthority> = $r2;

        specialinvoke $r0.<io.grpc.internal.ForwardingNameResolver: void <init>(io.grpc.NameResolver)>($r1);

        return;
    }

    public java.lang.String getServiceAuthority()
    {
        io.grpc.internal.ManagedChannelImpl$3 $r0;
        java.lang.String r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$3;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl$3: java.lang.String val$overrideAuthority>;

        return r1;
    }

io.grpc.internal.ManagedChannelImpl$4
    void <init>()
    {
        io.grpc.internal.ManagedChannelImpl$4 $r0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$4;

        specialinvoke $r0.<io.grpc.ClientCall: void <init>()>();

        return;
    }

    public void cancel(java.lang.String, java.lang.Throwable)
    {
        io.grpc.internal.ManagedChannelImpl$4 $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$4;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public void halfClose()
    {
        io.grpc.internal.ManagedChannelImpl$4 $r0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$4;

        return;
    }

    public void request(int)
    {
        io.grpc.internal.ManagedChannelImpl$4 $r0;
        int $i0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$4;

        $i0 := @parameter0: int;

        return;
    }

    public void sendMessage(java.lang.Object)
    {
        io.grpc.internal.ManagedChannelImpl$4 $r0;
        java.lang.Object $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$4;

        $r1 := @parameter0: java.lang.Object;

        return;
    }

    public void start(io.grpc.ClientCall$Listener, io.grpc.Metadata)
    {
        io.grpc.internal.ManagedChannelImpl$4 $r0;
        io.grpc.ClientCall$Listener $r1;
        io.grpc.Metadata $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$4;

        $r1 := @parameter0: io.grpc.ClientCall$Listener;

        $r2 := @parameter1: io.grpc.Metadata;

        return;
    }

io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1>
    void <init>(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider)
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport $r0;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport $r0;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r1;
        io.grpc.internal.ManagedChannelImpl $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        virtualinvoke $r2.<io.grpc.internal.ManagedChannelImpl: void exitIdleMode()>();

        return;
    }

io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1>
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.CallOptions val$callOptions>
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Context val$context>
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Metadata val$headers>
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.HedgingPolicy val$hedgingPolicy>
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.MethodDescriptor val$method>
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.RetryPolicy val$retryPolicy>
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.RetriableStream$Throttle val$throttle>
    void <init>(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider, io.grpc.MethodDescriptor, io.grpc.Metadata, io.grpc.CallOptions, io.grpc.internal.RetryPolicy, io.grpc.internal.HedgingPolicy, io.grpc.internal.RetriableStream$Throttle, io.grpc.Context)
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream $r0;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r1;
        io.grpc.MethodDescriptor $r2;
        io.grpc.Metadata $r3;
        io.grpc.CallOptions $r4;
        io.grpc.internal.RetryPolicy $r5;
        io.grpc.internal.HedgingPolicy $r6;
        io.grpc.internal.RetriableStream$Throttle $r7;
        io.grpc.Context $r8;
        io.grpc.internal.ManagedChannelImpl $r9;
        io.grpc.internal.RetriableStream$ChannelBufferMeter $r10;
        long $l0, $l1;
        java.util.concurrent.Executor $r11;
        io.grpc.internal.ClientTransportFactory $r12;
        java.util.concurrent.ScheduledExecutorService $r13;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider;

        $r2 := @parameter1: io.grpc.MethodDescriptor;

        $r3 := @parameter2: io.grpc.Metadata;

        $r4 := @parameter3: io.grpc.CallOptions;

        $r5 := @parameter4: io.grpc.internal.RetryPolicy;

        $r6 := @parameter5: io.grpc.internal.HedgingPolicy;

        $r7 := @parameter6: io.grpc.internal.RetriableStream$Throttle;

        $r8 := @parameter7: io.grpc.Context;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.MethodDescriptor val$method> = $r2;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Metadata val$headers> = $r3;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.CallOptions val$callOptions> = $r4;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.RetryPolicy val$retryPolicy> = $r5;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.HedgingPolicy val$hedgingPolicy> = $r6;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.RetriableStream$Throttle val$throttle> = $r7;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Context val$context> = $r8;

        $r9 = $r1.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r10 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.RetriableStream$ChannelBufferMeter access$1900(io.grpc.internal.ManagedChannelImpl)>($r9);

        $r9 = $r1.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $l0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: long access$2000(io.grpc.internal.ManagedChannelImpl)>($r9);

        $r9 = $r1.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $l1 = staticinvoke <io.grpc.internal.ManagedChannelImpl: long access$2100(io.grpc.internal.ManagedChannelImpl)>($r9);

        $r9 = $r1.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r11 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor access$2200(io.grpc.internal.ManagedChannelImpl,io.grpc.CallOptions)>($r9, $r4);

        $r9 = $r1.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r12 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory access$2300(io.grpc.internal.ManagedChannelImpl)>($r9);

        $r13 = interfaceinvoke $r12.<io.grpc.internal.ClientTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>();

        specialinvoke $r0.<io.grpc.internal.RetriableStream: void <init>(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.internal.RetriableStream$ChannelBufferMeter,long,long,java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService,io.grpc.internal.RetryPolicy,io.grpc.internal.HedgingPolicy,io.grpc.internal.RetriableStream$Throttle)>($r2, $r3, $r10, $l0, $l1, $r11, $r13, $r5, $r6, $r7);

        return;
    }

    io.grpc.internal.ClientStream newSubstream(io.grpc.Metadata, io.grpc.ClientStreamTracer$Factory, int, boolean)
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream $r0;
        io.grpc.Metadata $r1;
        io.grpc.ClientStreamTracer$Factory $r2;
        int $i0;
        boolean $z0;
        io.grpc.CallOptions $r3;
        io.grpc.ClientStreamTracer[] $r4;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r5;
        io.grpc.internal.PickSubchannelArgsImpl $r6;
        io.grpc.MethodDescriptor $r7;
        io.grpc.internal.ClientTransport $r8;
        io.grpc.Context $r9, $r11;
        io.grpc.internal.ClientStream $r10;
        java.lang.Throwable $r12;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream;

        $r1 := @parameter0: io.grpc.Metadata;

        $r2 := @parameter1: io.grpc.ClientStreamTracer$Factory;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.CallOptions val$callOptions>;

        $r3 = virtualinvoke $r3.<io.grpc.CallOptions: io.grpc.CallOptions withStreamTracerFactory(io.grpc.ClientStreamTracer$Factory)>($r2);

        $r4 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer[] getClientStreamTracers(io.grpc.CallOptions,io.grpc.Metadata,int,boolean)>($r3, $r1, $i0, $z0);

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1>;

        $r6 = new io.grpc.internal.PickSubchannelArgsImpl;

        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.MethodDescriptor val$method>;

        specialinvoke $r6.<io.grpc.internal.PickSubchannelArgsImpl: void <init>(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions)>($r7, $r1, $r3);

        $r8 = staticinvoke <io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ClientTransport access$2500(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider,io.grpc.LoadBalancer$PickSubchannelArgs)>($r5, $r6);

        $r9 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Context val$context>;

        $r9 = virtualinvoke $r9.<io.grpc.Context: io.grpc.Context attach()>();

        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.MethodDescriptor val$method>;

     label1:
        $r10 = interfaceinvoke $r8.<io.grpc.internal.ClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])>($r7, $r1, $r3, $r4);

     label2:
        $r11 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Context val$context>;

        virtualinvoke $r11.<io.grpc.Context: void detach(io.grpc.Context)>($r9);

        return $r10;

     label3:
        $r12 := @caughtexception;

        $r11 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Context val$context>;

        virtualinvoke $r11.<io.grpc.Context: void detach(io.grpc.Context)>($r9);

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void postCommit()
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream $r0;
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r1;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r2;
        io.grpc.internal.ManagedChannelImpl $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r1 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry access$2400(io.grpc.internal.ManagedChannelImpl)>($r3);

        virtualinvoke $r1.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void remove(io.grpc.internal.RetriableStream)>($r0);

        return;
    }

    io.grpc.Status prestart()
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream $r0;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r3;
        io.grpc.Status $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry access$2400(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r4 = virtualinvoke $r3.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.Status add(io.grpc.internal.RetriableStream)>($r0);

        return $r4;
    }

io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider
<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>
    private void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$1)
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.internal.ManagedChannelImpl$1 $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: void <init>(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

    static io.grpc.internal.ClientTransport access$2500(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider, io.grpc.LoadBalancer$PickSubchannelArgs)
    {
        io.grpc.LoadBalancer$PickSubchannelArgs $r0;
        io.grpc.internal.ClientTransport $r1;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r2;

        $r2 := @parameter0: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider;

        $r0 := @parameter1: io.grpc.LoadBalancer$PickSubchannelArgs;

        $r1 = specialinvoke $r2.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ClientTransport getTransport(io.grpc.LoadBalancer$PickSubchannelArgs)>($r0);

        return $r1;
    }

    private io.grpc.internal.ClientTransport getTransport(io.grpc.LoadBalancer$PickSubchannelArgs)
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r0;
        io.grpc.LoadBalancer$PickSubchannelArgs $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.LoadBalancer$SubchannelPicker $r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;
        io.grpc.internal.DelayedClientTransport $r5;
        io.grpc.SynchronizationContext $r6;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport $r7;
        io.grpc.LoadBalancer$PickResult $r8;
        io.grpc.CallOptions $r9;
        io.grpc.internal.ClientTransport $r10;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider;

        $r1 := @parameter0: io.grpc.LoadBalancer$PickSubchannelArgs;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.LoadBalancer$SubchannelPicker access$1400(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)>($r2);

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)>($r2);

        return $r5;

     label1:
        if $r3 != null goto label2;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r7 = new io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport;

        specialinvoke $r7.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport: void <init>(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider)>($r0);

        virtualinvoke $r6.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r7);

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)>($r2);

        return $r5;

     label2:
        $r8 = virtualinvoke $r3.<io.grpc.LoadBalancer$SubchannelPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)>($r1);

        $r9 = virtualinvoke $r1.<io.grpc.LoadBalancer$PickSubchannelArgs: io.grpc.CallOptions getCallOptions()>();

        $z0 = virtualinvoke $r9.<io.grpc.CallOptions: boolean isWaitForReady()>();

        $r10 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.internal.ClientTransport getTransportFromPickResult(io.grpc.LoadBalancer$PickResult,boolean)>($r8, $z0);

        if $r10 == null goto label3;

        return $r10;

     label3:
        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)>($r2);

        return $r5;
    }

    public io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor, io.grpc.CallOptions, io.grpc.Metadata, io.grpc.Context)
    {
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider $r0;
        io.grpc.CallOptions $r1;
        io.grpc.Metadata $r2;
        io.grpc.Context $r3, $r8;
        io.grpc.MethodDescriptor $r4;
        io.grpc.internal.ManagedChannelImpl $r5;
        boolean $z0;
        io.grpc.internal.PickSubchannelArgsImpl $r6;
        io.grpc.internal.ClientTransport $r7;
        io.grpc.ClientStreamTracer[] $r9;
        io.grpc.internal.ClientStream $r10;
        java.lang.Throwable $r11;
        io.grpc.internal.ManagedChannelServiceConfig $r12;
        io.grpc.internal.RetriableStream$Throttle $r13;
        io.grpc.CallOptions$Key $r14;
        java.lang.Object $r15;
        io.grpc.internal.ManagedChannelServiceConfig$MethodInfo $r16;
        io.grpc.internal.RetryPolicy $r17;
        io.grpc.internal.HedgingPolicy $r18;
        io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream $r19;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider;

        $r4 := @parameter0: io.grpc.MethodDescriptor;

        $r1 := @parameter1: io.grpc.CallOptions;

        $r2 := @parameter2: io.grpc.Metadata;

        $r3 := @parameter3: io.grpc.Context;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$1700(io.grpc.internal.ManagedChannelImpl)>($r5);

        if $z0 != 0 goto label4;

        $r6 = new io.grpc.internal.PickSubchannelArgsImpl;

        specialinvoke $r6.<io.grpc.internal.PickSubchannelArgsImpl: void <init>(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions)>($r4, $r2, $r1);

        $r7 = specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ClientTransport getTransport(io.grpc.LoadBalancer$PickSubchannelArgs)>($r6);

        $r8 = virtualinvoke $r3.<io.grpc.Context: io.grpc.Context attach()>();

        $r9 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer[] getClientStreamTracers(io.grpc.CallOptions,io.grpc.Metadata,int,boolean)>($r1, $r2, 0, 0);

     label1:
        $r10 = interfaceinvoke $r7.<io.grpc.internal.ClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])>($r4, $r2, $r1, $r9);

     label2:
        virtualinvoke $r3.<io.grpc.Context: void detach(io.grpc.Context)>($r8);

        return $r10;

     label3:
        $r11 := @caughtexception;

        virtualinvoke $r3.<io.grpc.Context: void detach(io.grpc.Context)>($r8);

        throw $r11;

     label4:
        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0>;

        $r12 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$1800(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r13 = virtualinvoke $r12.<io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.RetriableStream$Throttle getRetryThrottling()>();

        $r14 = <io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.CallOptions$Key KEY>;

        $r15 = virtualinvoke $r1.<io.grpc.CallOptions: java.lang.Object getOption(io.grpc.CallOptions$Key)>($r14);

        $r16 = (io.grpc.internal.ManagedChannelServiceConfig$MethodInfo) $r15;

        if $r16 != null goto label5;

        $r17 = null;

        goto label6;

     label5:
        $r17 = $r16.<io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.internal.RetryPolicy retryPolicy>;

     label6:
        if $r16 != null goto label7;

        $r18 = null;

        goto label8;

     label7:
        $r18 = $r16.<io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.internal.HedgingPolicy hedgingPolicy>;

     label8:
        $r19 = new io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream;

        specialinvoke $r19.<io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: void <init>(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider,io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.internal.RetryPolicy,io.grpc.internal.HedgingPolicy,io.grpc.internal.RetriableStream$Throttle,io.grpc.Context)>($r0, $r4, $r2, $r1, $r17, $r18, $r13, $r3);

        return $r19;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.ClientCall$Listener val$observer>
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.Status val$status>
    void <init>(io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall, io.grpc.ClientCall$Listener, io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext $r0;
        io.grpc.ClientCall$Listener $r1;
        io.grpc.Status $r2;
        io.grpc.Context $r3;
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext;

        $r4 := @parameter0: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall;

        $r1 := @parameter1: io.grpc.ClientCall$Listener;

        $r2 := @parameter2: io.grpc.Status;

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.ClientCall$Listener val$observer> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.Status val$status> = $r2;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Context access$4800(io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall)>($r4);

        specialinvoke $r0.<io.grpc.internal.ContextRunnable: void <init>(io.grpc.Context)>($r3);

        return;
    }

    public void runInContext()
    {
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext $r0;
        io.grpc.ClientCall$Listener $r1;
        io.grpc.Status $r2;
        io.grpc.Metadata $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.ClientCall$Listener val$observer>;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.Status val$status>;

        $r3 = new io.grpc.Metadata;

        specialinvoke $r3.<io.grpc.Metadata: void <init>()>();

        virtualinvoke $r1.<io.grpc.ClientCall$Listener: void onClose(io.grpc.Status,io.grpc.Metadata)>($r2, $r3);

        return;
    }

io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: java.util.concurrent.Executor callExecutor>
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.CallOptions callOptions>
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Channel channel>
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.InternalConfigSelector configSelector>
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Context context>
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate>
<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.MethodDescriptor method>
    void <init>(io.grpc.InternalConfigSelector, io.grpc.Channel, java.util.concurrent.Executor, io.grpc.MethodDescriptor, io.grpc.CallOptions)
    {
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall $r0;
        io.grpc.Channel $r1;
        io.grpc.MethodDescriptor $r2;
        io.grpc.CallOptions $r3;
        io.grpc.InternalConfigSelector $r4;
        java.util.concurrent.Executor $r5, $r6;
        io.grpc.Context $r7;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall;

        $r4 := @parameter0: io.grpc.InternalConfigSelector;

        $r1 := @parameter1: io.grpc.Channel;

        $r5 := @parameter2: java.util.concurrent.Executor;

        $r2 := @parameter3: io.grpc.MethodDescriptor;

        $r3 := @parameter4: io.grpc.CallOptions;

        specialinvoke $r0.<io.grpc.ForwardingClientCall: void <init>()>();

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.InternalConfigSelector configSelector> = $r4;

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Channel channel> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.MethodDescriptor method> = $r2;

        $r6 = virtualinvoke $r3.<io.grpc.CallOptions: java.util.concurrent.Executor getExecutor()>();

        if $r6 != null goto label1;

        goto label2;

     label1:
        $r5 = virtualinvoke $r3.<io.grpc.CallOptions: java.util.concurrent.Executor getExecutor()>();

     label2:
        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: java.util.concurrent.Executor callExecutor> = $r5;

        $r3 = virtualinvoke $r3.<io.grpc.CallOptions: io.grpc.CallOptions withExecutor(java.util.concurrent.Executor)>($r5);

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.CallOptions callOptions> = $r3;

        $r7 = staticinvoke <io.grpc.Context: io.grpc.Context current()>();

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Context context> = $r7;

        return;
    }

    static io.grpc.Context access$4800(io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall)
    {
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall $r0;
        io.grpc.Context r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Context context>;

        return r1;
    }

    private void executeCloseObserverInContext(io.grpc.ClientCall$Listener, io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall $r0;
        io.grpc.ClientCall$Listener $r1;
        io.grpc.Status $r2;
        java.util.concurrent.Executor $r3;
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall;

        $r1 := @parameter0: io.grpc.ClientCall$Listener;

        $r2 := @parameter1: io.grpc.Status;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: java.util.concurrent.Executor callExecutor>;

        $r4 = new io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext;

        specialinvoke $r4.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: void <init>(io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall,io.grpc.ClientCall$Listener,io.grpc.Status)>($r0, $r1, $r2);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public void cancel(java.lang.String, java.lang.Throwable)
    {
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        io.grpc.ClientCall $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate>;

        if $r3 == null goto label1;

        virtualinvoke $r3.<io.grpc.ClientCall: void cancel(java.lang.String,java.lang.Throwable)>($r1, $r2);

     label1:
        return;
    }

    protected io.grpc.ClientCall delegate()
    {
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall $r0;
        io.grpc.ClientCall r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate>;

        return r1;
    }

    public void start(io.grpc.ClientCall$Listener, io.grpc.Metadata)
    {
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall $r0;
        io.grpc.ClientCall$Listener $r1;
        io.grpc.Metadata $r2;
        io.grpc.internal.PickSubchannelArgsImpl $r3;
        io.grpc.MethodDescriptor $r4;
        io.grpc.CallOptions $r5;
        io.grpc.InternalConfigSelector $r6;
        io.grpc.InternalConfigSelector$Result $r7;
        io.grpc.Status $r8;
        boolean $z0;
        io.grpc.ClientCall $r9;
        io.grpc.ClientInterceptor $r10;
        java.lang.Object $r11;
        io.grpc.internal.ManagedChannelServiceConfig $r12;
        io.grpc.internal.ManagedChannelServiceConfig$MethodInfo $r13;
        io.grpc.CallOptions$Key $r14;
        io.grpc.Channel $r15;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall;

        $r1 := @parameter0: io.grpc.ClientCall$Listener;

        $r2 := @parameter1: io.grpc.Metadata;

        $r3 = new io.grpc.internal.PickSubchannelArgsImpl;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.MethodDescriptor method>;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.CallOptions callOptions>;

        specialinvoke $r3.<io.grpc.internal.PickSubchannelArgsImpl: void <init>(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions)>($r4, $r2, $r5);

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.InternalConfigSelector configSelector>;

        $r7 = virtualinvoke $r6.<io.grpc.InternalConfigSelector: io.grpc.InternalConfigSelector$Result selectConfig(io.grpc.LoadBalancer$PickSubchannelArgs)>($r3);

        $r8 = virtualinvoke $r7.<io.grpc.InternalConfigSelector$Result: io.grpc.Status getStatus()>();

        $z0 = virtualinvoke $r8.<io.grpc.Status: boolean isOk()>();

        if $z0 != 0 goto label1;

        $r8 = staticinvoke <io.grpc.internal.GrpcUtil: io.grpc.Status replaceInappropriateControlPlaneStatus(io.grpc.Status)>($r8);

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: void executeCloseObserverInContext(io.grpc.ClientCall$Listener,io.grpc.Status)>($r1, $r8);

        $r9 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ClientCall access$4700()>();

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate> = $r9;

        return;

     label1:
        $r10 = virtualinvoke $r7.<io.grpc.InternalConfigSelector$Result: io.grpc.ClientInterceptor getInterceptor()>();

        $r11 = virtualinvoke $r7.<io.grpc.InternalConfigSelector$Result: java.lang.Object getConfig()>();

        $r12 = (io.grpc.internal.ManagedChannelServiceConfig) $r11;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.MethodDescriptor method>;

        $r13 = virtualinvoke $r12.<io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.ManagedChannelServiceConfig$MethodInfo getMethodConfig(io.grpc.MethodDescriptor)>($r4);

        if $r13 == null goto label2;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.CallOptions callOptions>;

        $r14 = <io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.CallOptions$Key KEY>;

        $r5 = virtualinvoke $r5.<io.grpc.CallOptions: io.grpc.CallOptions withOption(io.grpc.CallOptions$Key,java.lang.Object)>($r14, $r13);

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.CallOptions callOptions> = $r5;

     label2:
        if $r10 == null goto label3;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.MethodDescriptor method>;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.CallOptions callOptions>;

        $r15 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Channel channel>;

        $r9 = interfaceinvoke $r10.<io.grpc.ClientInterceptor: io.grpc.ClientCall interceptCall(io.grpc.MethodDescriptor,io.grpc.CallOptions,io.grpc.Channel)>($r4, $r5, $r15);

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate> = $r9;

        goto label4;

     label3:
        $r15 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Channel channel>;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.MethodDescriptor method>;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.CallOptions callOptions>;

        $r9 = virtualinvoke $r15.<io.grpc.Channel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r4, $r5);

        $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate> = $r9;

     label4:
        $r9 = $r0.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate>;

        virtualinvoke $r9.<io.grpc.ClientCall: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)>($r1, $r2);

        return;
    }

io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh
<io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh: io.grpc.internal.ManagedChannelImpl this$0>
    void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.ManagedChannelImpl,io.grpc.SynchronizationContext$ScheduledHandle)>($r1, null);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$1300(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$DelayedTransportListener
<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>
    private void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$DelayedTransportListener $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$DelayedTransportListener;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$1)
    {
        io.grpc.internal.ManagedChannelImpl$DelayedTransportListener $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.internal.ManagedChannelImpl$1 $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$DelayedTransportListener;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: void <init>(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

    public void transportInUse(boolean)
    {
        io.grpc.internal.ManagedChannelImpl$DelayedTransportListener $r0;
        boolean $z0;
        io.grpc.internal.DelayedClientTransport $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.internal.InUseStateAggregator $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$DelayedTransportListener;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator>;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r1 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)>($r2);

        virtualinvoke $r3.<io.grpc.internal.InUseStateAggregator: void updateObjectInUse(java.lang.Object,boolean)>($r1, $z0);

        return;
    }

    public void transportReady()
    {
        io.grpc.internal.ManagedChannelImpl$DelayedTransportListener $r0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$DelayedTransportListener;

        return;
    }

    public void transportShutdown(io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$DelayedTransportListener $r0;
        io.grpc.Status $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        boolean $z0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$DelayedTransportListener;

        $r1 := @parameter0: io.grpc.Status;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)>($r2);

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Channel must have been shut down");

        return;
    }

    public void transportTerminated()
    {
        io.grpc.internal.ManagedChannelImpl$DelayedTransportListener $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$DelayedTransportListener;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)>($r1);

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Channel must have been shut down");

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$5102(io.grpc.internal.ManagedChannelImpl,boolean)>($r1, 1);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$8200(io.grpc.internal.ManagedChannelImpl,boolean)>($r1, 0);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$3400(io.grpc.internal.ManagedChannelImpl)>($r1);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$5900(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$ExecutorHolder
<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor executor>
<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: io.grpc.internal.ObjectPool pool>
    void <init>(io.grpc.internal.ObjectPool)
    {
        io.grpc.internal.ManagedChannelImpl$ExecutorHolder $r0;
        java.lang.Object $r1;
        io.grpc.internal.ObjectPool $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ExecutorHolder;

        $r2 := @parameter0: io.grpc.internal.ObjectPool;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "executorPool");

        $r2 = (io.grpc.internal.ObjectPool) $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: io.grpc.internal.ObjectPool pool> = $r2;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        io.grpc.internal.ManagedChannelImpl$ExecutorHolder $r0;
        java.lang.Runnable $r1;
        java.util.concurrent.Executor $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ExecutorHolder;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor getExecutor()>();

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        return;
    }

    java.util.concurrent.Executor getExecutor()
    {
        io.grpc.internal.ManagedChannelImpl$ExecutorHolder $r0;
        java.util.concurrent.Executor $r1, $r4;
        io.grpc.internal.ObjectPool $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r5;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ExecutorHolder;

        entermonitor $r0;

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor executor>;

        if $r1 != null goto label2;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: io.grpc.internal.ObjectPool pool>;

        $r3 = interfaceinvoke $r2.<io.grpc.internal.ObjectPool: java.lang.Object getObject()>();

        $r4 = (java.util.concurrent.Executor) $r3;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor executor>;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)>($r4, "%s.getObject()", $r1);

        $r1 = (java.util.concurrent.Executor) $r3;

        $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor executor> = $r1;

     label2:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor executor>;

     label3:
        exitmonitor $r0;

        return $r1;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    void release()
    {
        io.grpc.internal.ManagedChannelImpl$ExecutorHolder $r0;
        io.grpc.internal.ObjectPool $r1;
        java.lang.Object $r2;
        java.util.concurrent.Executor $r3;
        java.lang.Throwable $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ExecutorHolder;

        entermonitor $r0;

     label1:
        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor executor>;

        if $r3 == null goto label2;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: io.grpc.internal.ObjectPool pool>;

        $r2 = interfaceinvoke $r1.<io.grpc.internal.ObjectPool: java.lang.Object returnObject(java.lang.Object)>($r3);

        $r3 = (java.util.concurrent.Executor) $r2;

        $r0.<io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor executor> = $r3;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator
<io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: io.grpc.internal.ManagedChannelImpl this$0>
    private void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<io.grpc.internal.InUseStateAggregator: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$1)
    {
        io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.internal.ManagedChannelImpl$1 $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: void <init>(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

    protected void handleInUse()
    {
        io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: io.grpc.internal.ManagedChannelImpl this$0>;

        virtualinvoke $r1.<io.grpc.internal.ManagedChannelImpl: void exitIdleMode()>();

        return;
    }

    protected void handleNotInUse()
    {
        io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)>($r1);

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$8300(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$IdleModeTimer
<io.grpc.internal.ManagedChannelImpl$IdleModeTimer: io.grpc.internal.ManagedChannelImpl this$0>
    private void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$IdleModeTimer $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$IdleModeTimer;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeTimer: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$1)
    {
        io.grpc.internal.ManagedChannelImpl$IdleModeTimer $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.internal.ManagedChannelImpl$1 $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$IdleModeTimer;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeTimer: void <init>(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$IdleModeTimer $r0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r1;
        io.grpc.internal.ManagedChannelImpl $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$IdleModeTimer;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeTimer: io.grpc.internal.ManagedChannelImpl this$0>;

        $r1 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl access$900(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$IdleModeTimer: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$1000(io.grpc.internal.ManagedChannelImpl)>($r2);

        return;
    }

io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution
<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1>
    void <init>(io.grpc.internal.ManagedChannelImpl$LbHelperImpl)
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution $r0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution $r0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r1;
        io.grpc.internal.ManagedChannelImpl $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$5000(io.grpc.internal.ManagedChannelImpl)>($r2);

        return;
    }

io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState
<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1>
<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.LoadBalancer$SubchannelPicker val$newPicker>
<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.ConnectivityState val$newState>
    void <init>(io.grpc.internal.ManagedChannelImpl$LbHelperImpl, io.grpc.LoadBalancer$SubchannelPicker, io.grpc.ConnectivityState)
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState $r0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r1;
        io.grpc.LoadBalancer$SubchannelPicker $r2;
        io.grpc.ConnectivityState $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r2 := @parameter1: io.grpc.LoadBalancer$SubchannelPicker;

        $r3 := @parameter2: io.grpc.ConnectivityState;

        $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.LoadBalancer$SubchannelPicker val$newPicker> = $r2;

        $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.ConnectivityState val$newState> = $r3;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState $r0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r1, $r3;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.LoadBalancer$SubchannelPicker $r4;
        io.grpc.ConnectivityState $r5, $r6;
        io.grpc.ChannelLogger $r7;
        io.grpc.ChannelLogger$ChannelLogLevel $r8;
        java.lang.Object[] $r9;
        io.grpc.internal.ConnectivityStateManager $r10;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl access$900(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $r1 == $r3 goto label1;

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.LoadBalancer$SubchannelPicker val$newPicker>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$5200(io.grpc.internal.ManagedChannelImpl,io.grpc.LoadBalancer$SubchannelPicker)>($r2, $r4);

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.ConnectivityState val$newState>;

        $r6 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN>;

        if $r5 == $r6 goto label2;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        $r9 = newarray (java.lang.Object)[2];

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.ConnectivityState val$newState>;

        $r9[0] = $r5;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.LoadBalancer$SubchannelPicker val$newPicker>;

        $r9[1] = $r4;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r8, "Entering {0} state with picker: {1}", $r9);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r10 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager access$500(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.ConnectivityState val$newState>;

        virtualinvoke $r10.<io.grpc.internal.ConnectivityStateManager: void gotoState(io.grpc.ConnectivityState)>($r5);

     label2:
        return;
    }

io.grpc.internal.ManagedChannelImpl$LbHelperImpl
<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer lb>
<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>
    private void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r0;
        io.grpc.internal.ManagedChannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<io.grpc.LoadBalancer$Helper: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$1)
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.internal.ManagedChannelImpl$1 $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: void <init>(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

    public volatile io.grpc.LoadBalancer$Subchannel createSubchannel(io.grpc.LoadBalancer$CreateSubchannelArgs)
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r0;
        io.grpc.internal.AbstractSubchannel $r1;
        io.grpc.LoadBalancer$CreateSubchannelArgs $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r2 := @parameter0: io.grpc.LoadBalancer$CreateSubchannelArgs;

        $r1 = virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.AbstractSubchannel createSubchannel(io.grpc.LoadBalancer$CreateSubchannelArgs)>($r2);

        return $r1;
    }

    public io.grpc.internal.AbstractSubchannel createSubchannel(io.grpc.LoadBalancer$CreateSubchannelArgs)
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r0;
        io.grpc.LoadBalancer$CreateSubchannelArgs $r1;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.SynchronizationContext $r3;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r1 := @parameter0: io.grpc.LoadBalancer$CreateSubchannelArgs;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$5100(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Channel is being terminated");

        $r4 = new io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        specialinvoke $r4.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: void <init>(io.grpc.internal.ManagedChannelImpl,io.grpc.LoadBalancer$CreateSubchannelArgs,io.grpc.internal.ManagedChannelImpl$LbHelperImpl)>($r2, $r1, $r0);

        return $r4;
    }

    public io.grpc.ChannelLogger getChannelLogger()
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r0;
        io.grpc.ChannelLogger $r1;
        io.grpc.internal.ManagedChannelImpl $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r1 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        return $r1;
    }

    public io.grpc.SynchronizationContext getSynchronizationContext()
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.SynchronizationContext r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        r2 = $r1.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        return r2;
    }

    public void refreshNameResolution()
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.SynchronizationContext $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r1 = new io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution;

        specialinvoke $r1.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution: void <init>(io.grpc.internal.ManagedChannelImpl$LbHelperImpl)>($r0);

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r1);

        return;
    }

    public void updateBalancingState(io.grpc.ConnectivityState, io.grpc.LoadBalancer$SubchannelPicker)
    {
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r0;
        io.grpc.ConnectivityState $r1;
        io.grpc.LoadBalancer$SubchannelPicker $r2;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState $r3;
        io.grpc.internal.ManagedChannelImpl $r4;
        io.grpc.SynchronizationContext $r5;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r1 := @parameter0: io.grpc.ConnectivityState;

        $r2 := @parameter1: io.grpc.LoadBalancer$SubchannelPicker;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r5.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "newState");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "newPicker");

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r3 = new io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState;

        specialinvoke $r3.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: void <init>(io.grpc.internal.ManagedChannelImpl$LbHelperImpl,io.grpc.LoadBalancer$SubchannelPicker,io.grpc.ConnectivityState)>($r0, $r2, $r1);

        virtualinvoke $r5.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r3);

        return;
    }

io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler
<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>
<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: io.grpc.Status val$error>
    void <init>(io.grpc.internal.ManagedChannelImpl$NameResolverListener, io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler $r0;
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r1;
        io.grpc.Status $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r2 := @parameter1: io.grpc.Status;

        $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: io.grpc.Status val$error> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler $r0;
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r1;
        io.grpc.Status $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: io.grpc.Status val$error>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl$NameResolverListener: void access$7900(io.grpc.internal.ManagedChannelImpl$NameResolverListener,io.grpc.Status)>($r1, $r2);

        return;
    }

io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved
<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>
<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.NameResolver$ResolutionResult val$resolutionResult>
    void <init>(io.grpc.internal.ManagedChannelImpl$NameResolverListener, io.grpc.NameResolver$ResolutionResult)
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved $r0;
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r1;
        io.grpc.NameResolver$ResolutionResult $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r2 := @parameter1: io.grpc.NameResolver$ResolutionResult;

        $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.NameResolver$ResolutionResult val$resolutionResult> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved $r0;
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.NameResolver $r3, $r4;
        io.grpc.NameResolver$ResolutionResult $r5;
        java.util.List $r6;
        io.grpc.ChannelLogger $r7;
        io.grpc.ChannelLogger$ChannelLogLevel $r8;
        java.lang.Object[] $r9;
        io.grpc.Attributes $r10;
        io.grpc.internal.ManagedChannelImpl$ResolutionState $r11, $r12;
        io.grpc.NameResolver$ConfigOrError $r13;
        io.grpc.Attributes$Key $r14;
        java.lang.Object $r15;
        io.grpc.InternalConfigSelector $r16;
        io.grpc.internal.ManagedChannelServiceConfig $r17, $r20;
        io.grpc.Status $r18;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r19;
        java.lang.String $r21;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r22, $r23;
        io.grpc.Attributes$Builder $r24, $r26;
        java.util.Map $r25;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r27;
        io.grpc.LoadBalancer$ResolvedAddresses$Builder $r28;
        io.grpc.LoadBalancer$ResolvedAddresses $r29;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver access$7000(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r4 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.NameResolver resolver>;

        if $r3 == $r4 goto label01;

        return;

     label01:
        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.NameResolver$ResolutionResult val$resolutionResult>;

        $r6 = virtualinvoke $r5.<io.grpc.NameResolver$ResolutionResult: java.util.List getAddresses()>();

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel DEBUG>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r6;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.NameResolver$ResolutionResult val$resolutionResult>;

        $r10 = virtualinvoke $r5.<io.grpc.NameResolver$ResolutionResult: io.grpc.Attributes getAttributes()>();

        $r9[1] = $r10;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r8, "Resolved address: {0}, config={1}", $r9);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r11 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState access$7100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r12 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState SUCCESS>;

        if $r11 == $r12 goto label02;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = $r6;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r8, "Address resolved: {0}", $r9);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r11 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState SUCCESS>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState access$7102(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$ResolutionState)>($r2, $r11);

     label02:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy access$7202(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.BackoffPolicy)>($r2, null);

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.NameResolver$ResolutionResult val$resolutionResult>;

        $r13 = virtualinvoke $r5.<io.grpc.NameResolver$ResolutionResult: io.grpc.NameResolver$ConfigOrError getServiceConfig()>();

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.NameResolver$ResolutionResult val$resolutionResult>;

        $r10 = virtualinvoke $r5.<io.grpc.NameResolver$ResolutionResult: io.grpc.Attributes getAttributes()>();

        $r14 = <io.grpc.InternalConfigSelector: io.grpc.Attributes$Key KEY>;

        $r15 = virtualinvoke $r10.<io.grpc.Attributes: java.lang.Object get(io.grpc.Attributes$Key)>($r14);

        $r16 = (io.grpc.InternalConfigSelector) $r15;

        if $r13 == null goto label03;

        $r15 = virtualinvoke $r13.<io.grpc.NameResolver$ConfigOrError: java.lang.Object getConfig()>();

        if $r15 == null goto label03;

        $r15 = virtualinvoke $r13.<io.grpc.NameResolver$ConfigOrError: java.lang.Object getConfig()>();

        $r17 = (io.grpc.internal.ManagedChannelServiceConfig) $r15;

        goto label04;

     label03:
        $r17 = null;

     label04:
        if $r13 == null goto label05;

        $r18 = virtualinvoke $r13.<io.grpc.NameResolver$ConfigOrError: io.grpc.Status getError()>();

        goto label06;

     label05:
        $r18 = null;

     label06:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$7300(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $z0 != 0 goto label11;

        if $r17 == null goto label07;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r8, "Service config from name resolver discarded by channel settings");

     label07:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r17 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7400(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $r17 != null goto label08;

        $r17 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7500()>();

        goto label09;

     label08:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r17 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7400(io.grpc.internal.ManagedChannelImpl)>($r2);

     label09:
        if $r16 == null goto label10;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r8, "Config selector from name resolver discarded by channel settings");

     label10:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r19 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel access$7600(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r16 = virtualinvoke $r17.<io.grpc.internal.ManagedChannelServiceConfig: io.grpc.InternalConfigSelector getDefaultConfigSelector()>();

        virtualinvoke $r19.<io.grpc.internal.ManagedChannelImpl$RealChannel: void updateConfigSelector(io.grpc.InternalConfigSelector)>($r16);

        goto label21;

     label11:
        if $r17 == null goto label13;

        if $r16 == null goto label12;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r19 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel access$7600(io.grpc.internal.ManagedChannelImpl)>($r2);

        virtualinvoke $r19.<io.grpc.internal.ManagedChannelImpl$RealChannel: void updateConfigSelector(io.grpc.InternalConfigSelector)>($r16);

        $r16 = virtualinvoke $r17.<io.grpc.internal.ManagedChannelServiceConfig: io.grpc.InternalConfigSelector getDefaultConfigSelector()>();

        if $r16 == null goto label17;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel DEBUG>;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r8, "Method configs in service config will be discarded due to presence ofconfig-selector");

        goto label17;

     label12:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r19 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel access$7600(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r16 = virtualinvoke $r17.<io.grpc.internal.ManagedChannelServiceConfig: io.grpc.InternalConfigSelector getDefaultConfigSelector()>();

        virtualinvoke $r19.<io.grpc.internal.ManagedChannelImpl$RealChannel: void updateConfigSelector(io.grpc.InternalConfigSelector)>($r16);

        goto label17;

     label13:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r17 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7400(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $r17 == null goto label14;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r20 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7400(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r17 = $r20;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r19 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel access$7600(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r16 = virtualinvoke $r20.<io.grpc.internal.ManagedChannelServiceConfig: io.grpc.InternalConfigSelector getDefaultConfigSelector()>();

        virtualinvoke $r19.<io.grpc.internal.ManagedChannelImpl$RealChannel: void updateConfigSelector(io.grpc.InternalConfigSelector)>($r16);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r8, "Received no service config, using default service config");

        goto label17;

     label14:
        if $r18 == null goto label16;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$7700(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $z0 != 0 goto label15;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)>($r8, "Fallback to error due to invalid first service config without default config");

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r18 = virtualinvoke $r13.<io.grpc.NameResolver$ConfigOrError: io.grpc.Status getError()>();

        virtualinvoke $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: void onError(io.grpc.Status)>($r18);

        return;

     label15:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r17 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$1800(io.grpc.internal.ManagedChannelImpl)>($r2);

        goto label17;

     label16:
        $r17 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7500()>();

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r19 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel access$7600(io.grpc.internal.ManagedChannelImpl)>($r2);

        virtualinvoke $r19.<io.grpc.internal.ManagedChannelImpl$RealChannel: void updateConfigSelector(io.grpc.InternalConfigSelector)>(null);

     label17:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r20 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$1800(io.grpc.internal.ManagedChannelImpl)>($r2);

        $z0 = virtualinvoke $r17.<io.grpc.internal.ManagedChannelServiceConfig: boolean equals(java.lang.Object)>($r20);

        if $z0 != 0 goto label20;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        $r9 = newarray (java.lang.Object)[1];

        $r20 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7500()>();

        if $r17 != $r20 goto label18;

        $r21 = " to empty";

        goto label19;

     label18:
        $r21 = "";

     label19:
        $r9[0] = $r21;

        virtualinvoke $r7.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r8, "Service config changed{0}", $r9);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$1802(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelServiceConfig)>($r2, $r17);

     label20:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$7702(io.grpc.internal.ManagedChannelImpl,boolean)>($r2, 1);

        goto label21;

     label21:
        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.NameResolver$ResolutionResult val$resolutionResult>;

        $r10 = virtualinvoke $r5.<io.grpc.NameResolver$ResolutionResult: io.grpc.Attributes getAttributes()>();

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r22 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper>;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r23 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl access$900(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $r22 != $r23 goto label23;

        $r24 = virtualinvoke $r10.<io.grpc.Attributes: io.grpc.Attributes$Builder toBuilder()>();

        $r14 = <io.grpc.InternalConfigSelector: io.grpc.Attributes$Key KEY>;

        $r24 = virtualinvoke $r24.<io.grpc.Attributes$Builder: io.grpc.Attributes$Builder discard(io.grpc.Attributes$Key)>($r14);

        $r25 = virtualinvoke $r17.<io.grpc.internal.ManagedChannelServiceConfig: java.util.Map getHealthCheckingConfig()>();

        if $r25 == null goto label22;

        $r14 = <io.grpc.LoadBalancer: io.grpc.Attributes$Key ATTR_HEALTH_CHECKING_CONFIG>;

        $r26 = virtualinvoke $r24.<io.grpc.Attributes$Builder: io.grpc.Attributes$Builder set(io.grpc.Attributes$Key,java.lang.Object)>($r14, $r25);

        virtualinvoke $r26.<io.grpc.Attributes$Builder: io.grpc.Attributes build()>();

     label22:
        $r10 = virtualinvoke $r24.<io.grpc.Attributes$Builder: io.grpc.Attributes build()>();

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        $r22 = $r1.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper>;

        $r27 = $r22.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer lb>;

        $r28 = staticinvoke <io.grpc.LoadBalancer$ResolvedAddresses: io.grpc.LoadBalancer$ResolvedAddresses$Builder newBuilder()>();

        $r28 = virtualinvoke $r28.<io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setAddresses(java.util.List)>($r6);

        $r28 = virtualinvoke $r28.<io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setAttributes(io.grpc.Attributes)>($r10);

        $r15 = virtualinvoke $r17.<io.grpc.internal.ManagedChannelServiceConfig: java.lang.Object getLoadBalancingConfig()>();

        $r28 = virtualinvoke $r28.<io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setLoadBalancingPolicyConfig(java.lang.Object)>($r15);

        $r29 = virtualinvoke $r28.<io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses build()>();

        $z0 = virtualinvoke $r27.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: boolean tryAcceptResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)>($r29);

        if $z0 != 0 goto label23;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl$NameResolverListener: void access$7800(io.grpc.internal.ManagedChannelImpl$NameResolverListener)>($r1);

     label23:
        return;
    }

io.grpc.internal.ManagedChannelImpl$NameResolverListener
<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper>
<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.NameResolver resolver>
<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>
    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$LbHelperImpl, io.grpc.NameResolver)
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r0;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r1;
        io.grpc.NameResolver $r2;
        io.grpc.internal.ManagedChannelImpl $r3;
        java.lang.Object $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r3 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r2 := @parameter2: io.grpc.NameResolver;

        $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0> = $r3;

        specialinvoke $r0.<io.grpc.NameResolver$Listener2: void <init>()>();

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "helperImpl");

        $r1 = (io.grpc.internal.ManagedChannelImpl$LbHelperImpl) $r4;

        $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper> = $r1;

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "resolver");

        $r2 = (io.grpc.NameResolver) $r4;

        $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.NameResolver resolver> = $r2;

        return;
    }

    static void access$7800(io.grpc.internal.ManagedChannelImpl$NameResolverListener)
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r0;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: void scheduleExponentialBackOffInSyncContext()>();

        return;
    }

    static void access$7900(io.grpc.internal.ManagedChannelImpl$NameResolverListener, io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r0;
        io.grpc.Status $r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r1 := @parameter1: io.grpc.Status;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: void handleErrorInSyncContext(io.grpc.Status)>($r1);

        return;
    }

    private void handleErrorInSyncContext(io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r0;
        io.grpc.Status $r1;
        java.lang.Object[] $r2;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r4;
        io.grpc.internal.ManagedChannelImpl $r5;
        io.grpc.InternalLogId $r6;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r7;
        io.grpc.internal.ManagedChannelImpl$ResolutionState $r8, $r9;
        io.grpc.ChannelLogger $r10;
        io.grpc.ChannelLogger$ChannelLogLevel $r11;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r12, $r13;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r14;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r1 := @parameter0: io.grpc.Status;

        $r3 = <io.grpc.internal.ManagedChannelImpl: java.util.logging.Logger logger>;

        $r4 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r2 = newarray (java.lang.Object)[2];

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = virtualinvoke $r5.<io.grpc.internal.ManagedChannelImpl: io.grpc.InternalLogId getLogId()>();

        $r2[0] = $r6;

        $r2[1] = $r1;

        virtualinvoke $r3.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>($r4, "io.grpc.internal.ManagedChannelImpl$NameResolverListener", "handleErrorInSyncContext", "[{0}] Failed to resolve name. status={1}", $r2);

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel access$7600(io.grpc.internal.ManagedChannelImpl)>($r5);

        virtualinvoke $r7.<io.grpc.internal.ManagedChannelImpl$RealChannel: void onConfigError()>();

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r8 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState access$7100(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r9 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState ERROR>;

        if $r8 == $r9 goto label1;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r10 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r11 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel WARNING>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r1;

        virtualinvoke $r10.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r11, "Failed to resolve name: {0}", $r2);

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r8 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState ERROR>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState access$7102(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$ResolutionState)>($r5, $r8);

     label1:
        $r12 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper>;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r13 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl access$900(io.grpc.internal.ManagedChannelImpl)>($r5);

        if $r12 == $r13 goto label2;

        return;

     label2:
        $r12 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper>;

        $r14 = $r12.<io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer lb>;

        virtualinvoke $r14.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: void handleNameResolutionError(io.grpc.Status)>($r1);

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: void scheduleExponentialBackOffInSyncContext()>();

        return;
    }

    private void scheduleExponentialBackOffInSyncContext()
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r0;
        io.grpc.internal.ManagedChannelImpl $r1, $r11;
        io.grpc.SynchronizationContext$ScheduledHandle $r2;
        boolean $z0;
        io.grpc.internal.BackoffPolicy $r3;
        io.grpc.internal.BackoffPolicy$Provider $r4;
        long $l0;
        io.grpc.ChannelLogger $r5;
        io.grpc.ChannelLogger$ChannelLogLevel $r6;
        java.lang.Object[] $r7;
        java.lang.Long $r8;
        io.grpc.SynchronizationContext $r9;
        io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh $r10;
        java.util.concurrent.TimeUnit $r12;
        io.grpc.internal.ClientTransportFactory $r13;
        java.util.concurrent.ScheduledExecutorService $r14;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.ManagedChannelImpl)>($r1);

        if $r2 == null goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.ManagedChannelImpl)>($r1);

        $z0 = virtualinvoke $r2.<io.grpc.SynchronizationContext$ScheduledHandle: boolean isPending()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy access$7200(io.grpc.internal.ManagedChannelImpl)>($r1);

        if $r3 != null goto label2;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy$Provider access$6200(io.grpc.internal.ManagedChannelImpl)>($r1);

        $r3 = interfaceinvoke $r4.<io.grpc.internal.BackoffPolicy$Provider: io.grpc.internal.BackoffPolicy get()>();

        staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy access$7202(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.BackoffPolicy)>($r1, $r3);

     label2:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy access$7200(io.grpc.internal.ManagedChannelImpl)>($r1);

        $l0 = interfaceinvoke $r3.<io.grpc.internal.BackoffPolicy: long nextBackoffNanos()>();

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl)>($r1);

        $r6 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel DEBUG>;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7[0] = $r8;

        virtualinvoke $r5.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r6, "Scheduling DNS resolution backoff for {0} ns", $r7);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r9 = $r1.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r10 = new io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh;

        $r11 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        specialinvoke $r10.<io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh: void <init>(io.grpc.internal.ManagedChannelImpl)>($r11);

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r11 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r13 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory access$2300(io.grpc.internal.ManagedChannelImpl)>($r11);

        $r14 = interfaceinvoke $r13.<io.grpc.internal.ClientTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>();

        $r2 = virtualinvoke $r9.<io.grpc.SynchronizationContext: io.grpc.SynchronizationContext$ScheduledHandle schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)>($r10, $l0, $r12, $r14);

        staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.ManagedChannelImpl,io.grpc.SynchronizationContext$ScheduledHandle)>($r1, $r2);

        return;
    }

    public void onError(io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r0;
        io.grpc.Status $r1;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.SynchronizationContext $r3;
        io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r1 := @parameter0: io.grpc.Status;

        $z0 = virtualinvoke $r1.<io.grpc.Status: boolean isOk()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "the error status must not be OK");

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r4 = new io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler;

        specialinvoke $r4.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: void <init>(io.grpc.internal.ManagedChannelImpl$NameResolverListener,io.grpc.Status)>($r0, $r1);

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public void onResult(io.grpc.NameResolver$ResolutionResult)
    {
        io.grpc.internal.ManagedChannelImpl$NameResolverListener $r0;
        io.grpc.NameResolver$ResolutionResult $r1;
        io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved $r2;
        io.grpc.internal.ManagedChannelImpl $r3;
        io.grpc.SynchronizationContext $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$NameResolverListener;

        $r1 := @parameter0: io.grpc.NameResolver$ResolutionResult;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = $r3.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r2 = new io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved;

        specialinvoke $r2.<io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: void <init>(io.grpc.internal.ManagedChannelImpl$NameResolverListener,io.grpc.NameResolver$ResolutionResult)>($r0, $r1);

        virtualinvoke $r4.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r2);

        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$1
<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$1 $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$1;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1> = $r1;

        specialinvoke $r0.<io.grpc.Channel: void <init>()>();

        return;
    }

    public java.lang.String authority()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$1 $r0;
        java.lang.String $r1;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$1;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r1 = staticinvoke <io.grpc.internal.ManagedChannelImpl$RealChannel: java.lang.String access$4100(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r2);

        return $r1;
    }

    public io.grpc.ClientCall newCall(io.grpc.MethodDescriptor, io.grpc.CallOptions)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$1 $r0;
        io.grpc.internal.ClientCallImpl $r1;
        io.grpc.MethodDescriptor $r2;
        io.grpc.CallOptions $r3;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r4;
        io.grpc.internal.ManagedChannelImpl $r5;
        java.util.concurrent.Executor $r6;
        io.grpc.internal.ClientCallImpl$ClientStreamProvider $r7;
        boolean $z0;
        java.util.concurrent.ScheduledExecutorService $r8;
        io.grpc.internal.ClientTransportFactory $r9;
        io.grpc.internal.CallTracer $r10;
        io.grpc.DecompressorRegistry $r11;
        io.grpc.CompressorRegistry $r12;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$1;

        $r2 := @parameter0: io.grpc.MethodDescriptor;

        $r3 := @parameter1: io.grpc.CallOptions;

        $r1 = new io.grpc.internal.ClientCallImpl;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor access$2200(io.grpc.internal.ManagedChannelImpl,io.grpc.CallOptions)>($r5, $r3);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientCallImpl$ClientStreamProvider access$3900(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$4000(io.grpc.internal.ManagedChannelImpl)>($r5);

        if $z0 == 0 goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r9 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory access$2300(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r8 = interfaceinvoke $r9.<io.grpc.internal.ClientTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>();

     label2:
        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r10 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer access$300(io.grpc.internal.ManagedChannelImpl)>($r5);

        specialinvoke $r1.<io.grpc.internal.ClientCallImpl: void <init>(io.grpc.MethodDescriptor,java.util.concurrent.Executor,io.grpc.CallOptions,io.grpc.internal.ClientCallImpl$ClientStreamProvider,java.util.concurrent.ScheduledExecutorService,io.grpc.internal.CallTracer,io.grpc.InternalConfigSelector)>($r2, $r6, $r3, $r7, $r8, $r10, null);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$3800(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r1 = virtualinvoke $r1.<io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientCallImpl setFullStreamDecompression(boolean)>($z0);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r11 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.DecompressorRegistry access$3700(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r1 = virtualinvoke $r1.<io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientCallImpl setDecompressorRegistry(io.grpc.DecompressorRegistry)>($r11);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r12 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.CompressorRegistry access$3600(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r1 = virtualinvoke $r1.<io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientCallImpl setCompressorRegistry(io.grpc.CompressorRegistry)>($r12);

        return $r1;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown
<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: io.grpc.internal.ManagedChannelImpl$RealChannel this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        java.util.Collection $r3;
        java.util.concurrent.atomic.AtomicReference $r4;
        java.lang.Object $r5;
        io.grpc.InternalConfigSelector $r6;
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r7;
        io.grpc.Status $r8;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $r3 != null goto label2;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference access$3000(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r1);

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3500()>();

        if $r5 != $r6 goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference access$3000(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r1);

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry access$2400(io.grpc.internal.ManagedChannelImpl)>($r2);

        $r8 = <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_STATUS>;

        virtualinvoke $r7.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void onShutdown(io.grpc.Status)>($r8);

     label2:
        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow
<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: io.grpc.internal.ManagedChannelImpl$RealChannel this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        io.grpc.InternalConfigSelector $r4;
        io.grpc.internal.ManagedChannelImpl $r5;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r8;
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r9;
        io.grpc.Status $r10;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference access$3000(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r1);

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3500()>();

        if $r3 != $r4 goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference access$3000(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r1);

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r5);

        if $r6 == null goto label3;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall) $r3;

        virtualinvoke $r8.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: void cancel(java.lang.String,java.lang.Throwable)>("Channel is forcefully shutdown", null);

        goto label2;

     label3:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r9 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry access$2400(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r10 = <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_NOW_STATUS>;

        virtualinvoke $r9.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void onShutdownNow(io.grpc.Status)>($r10);

        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$2
<io.grpc.internal.ManagedChannelImpl$RealChannel$2: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$2 $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$2;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$2: io.grpc.internal.ManagedChannelImpl$RealChannel this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$2 $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;
        io.grpc.internal.ManagedChannelImpl $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$2;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$2: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        virtualinvoke $r2.<io.grpc.internal.ManagedChannelImpl: void exitIdleMode()>();

        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$3
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$3 $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$3;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        specialinvoke $r0.<io.grpc.ClientCall: void <init>()>();

        return;
    }

    public void cancel(java.lang.String, java.lang.Throwable)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$3 $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$3;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public void halfClose()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$3 $r0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$3;

        return;
    }

    public void request(int)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$3 $r0;
        int $i0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$3;

        $i0 := @parameter0: int;

        return;
    }

    public void sendMessage(java.lang.Object)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$3 $r0;
        java.lang.Object $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$3;

        $r1 := @parameter0: java.lang.Object;

        return;
    }

    public void start(io.grpc.ClientCall$Listener, io.grpc.Metadata)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$3 $r0;
        io.grpc.ClientCall$Listener $r1;
        io.grpc.Metadata $r2;
        io.grpc.Status $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$3;

        $r1 := @parameter0: io.grpc.ClientCall$Listener;

        $r2 := @parameter1: io.grpc.Metadata;

        $r3 = <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_STATUS>;

        $r2 = new io.grpc.Metadata;

        specialinvoke $r2.<io.grpc.Metadata: void <init>()>();

        virtualinvoke $r1.<io.grpc.ClientCall$Listener: void onClose(io.grpc.Status,io.grpc.Metadata)>($r3, $r2);

        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$4
<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>
<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall val$pendingCall>
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel, io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$4 $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$4;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r2 := @parameter1: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall val$pendingCall> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$4 $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        io.grpc.InternalConfigSelector $r4;
        io.grpc.internal.ManagedChannelImpl $r5;
        java.util.Collection $r6;
        io.grpc.internal.InUseStateAggregator $r7;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r8;
        java.util.LinkedHashSet r9;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$4;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference access$3000(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r1);

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3500()>();

        if $r3 != $r4 goto label2;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r5);

        if $r6 != null goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        r9 = new java.util.LinkedHashSet;

        specialinvoke r9.<java.util.LinkedHashSet: void <init>()>();

        $r6 = (java.util.Collection) r9;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4202(io.grpc.internal.ManagedChannelImpl,java.util.Collection)>($r5, $r6);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = $r5.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator>;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.lang.Object access$4300(io.grpc.internal.ManagedChannelImpl)>($r5);

        virtualinvoke $r7.<io.grpc.internal.InUseStateAggregator: void updateObjectInUse(java.lang.Object,boolean)>($r3, 1);

     label1:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r8 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall val$pendingCall>;

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        return;

     label2:
        $r8 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall val$pendingCall>;

        virtualinvoke $r8.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: void reprocess()>();

        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1
<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>
<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: java.lang.Runnable val$toRun>
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall, java.lang.Runnable)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1 $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r1;
        java.lang.Runnable $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall;

        $r2 := @parameter1: java.lang.Runnable;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: java.lang.Runnable val$toRun> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1 $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval $r1;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r2;
        java.lang.Runnable $r3;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r4;
        io.grpc.internal.ManagedChannelImpl $r5;
        io.grpc.SynchronizationContext $r6;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: java.lang.Runnable val$toRun>;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r4 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = $r5.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r1 = new io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        specialinvoke $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)>($r2);

        virtualinvoke $r6.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval
<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r1;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r2;
        io.grpc.internal.ManagedChannelImpl $r3;
        java.util.Collection $r4;
        boolean $z0;
        io.grpc.internal.InUseStateAggregator $r5;
        java.lang.Object $r6;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r8;
        io.grpc.Status $r9;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r3);

        if $r4 == null goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r3);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        interfaceinvoke $r4.<java.util.Collection: boolean remove(java.lang.Object)>($r1);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r5 = $r3.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator>;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.lang.Object access$4300(io.grpc.internal.ManagedChannelImpl)>($r3);

        virtualinvoke $r5.<io.grpc.internal.InUseStateAggregator: void updateObjectInUse(java.lang.Object,boolean)>($r6, 0);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4202(io.grpc.internal.ManagedChannelImpl,java.util.Collection)>($r3, null);

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)>($r3);

        $z0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r8 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry access$2400(io.grpc.internal.ManagedChannelImpl)>($r3);

        $r9 = <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_STATUS>;

        virtualinvoke $r8.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void onShutdown(io.grpc.Status)>($r9);

     label1:
        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall
<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.CallOptions callOptions>
<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.Context context>
<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.MethodDescriptor method>
<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>
    void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel, io.grpc.Context, io.grpc.MethodDescriptor, io.grpc.CallOptions)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r0;
        io.grpc.Context $r1;
        io.grpc.MethodDescriptor $r2;
        io.grpc.CallOptions $r3;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r4;
        io.grpc.internal.ManagedChannelImpl $r5;
        java.util.concurrent.Executor $r6;
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r7;
        io.grpc.Deadline $r8;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall;

        $r4 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r1 := @parameter1: io.grpc.Context;

        $r2 := @parameter2: io.grpc.MethodDescriptor;

        $r3 := @parameter3: io.grpc.CallOptions;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1> = $r4;

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor access$2200(io.grpc.internal.ManagedChannelImpl,io.grpc.CallOptions)>($r5, $r3);

        $r5 = $r4.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r7 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor access$4400(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r8 = virtualinvoke $r3.<io.grpc.CallOptions: io.grpc.Deadline getDeadline()>();

        specialinvoke $r0.<io.grpc.internal.DelayedClientCall: void <init>(java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService,io.grpc.Deadline)>($r6, $r7, $r8);

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.Context context> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.MethodDescriptor method> = $r2;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.CallOptions callOptions> = $r3;

        return;
    }

    protected void callCancelled()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval $r1;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r2;
        io.grpc.internal.ManagedChannelImpl $r3;
        io.grpc.SynchronizationContext $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall;

        specialinvoke $r0.<io.grpc.internal.DelayedClientCall: void callCancelled()>();

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = $r3.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r1 = new io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval;

        specialinvoke $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)>($r0);

        virtualinvoke $r4.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r1);

        return;
    }

    void reprocess()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r0;
        io.grpc.CallOptions $r1;
        io.grpc.Context $r2, $r6;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r3;
        io.grpc.MethodDescriptor $r4;
        io.grpc.ClientCall $r5;
        java.lang.Runnable $r7;
        io.grpc.internal.ManagedChannelImpl $r8;
        io.grpc.SynchronizationContext $r9;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval $r10;
        java.util.concurrent.Executor $r11;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1 $r12;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.Context context>;

        $r2 = virtualinvoke $r2.<io.grpc.Context: io.grpc.Context attach()>();

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.MethodDescriptor method>;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.CallOptions callOptions>;

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.ClientCall access$4500(io.grpc.internal.ManagedChannelImpl$RealChannel,io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r3, $r4, $r1);

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.Context context>;

        virtualinvoke $r6.<io.grpc.Context: void detach(io.grpc.Context)>($r2);

        $r7 = virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: java.lang.Runnable setCall(io.grpc.ClientCall)>($r5);

        if $r7 != null goto label1;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r8 = $r3.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r9 = $r8.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r10 = new io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval;

        specialinvoke $r10.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)>($r0);

        virtualinvoke $r9.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r10);

        return;

     label1:
        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1>;

        $r8 = $r3.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.CallOptions callOptions>;

        $r11 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor access$2200(io.grpc.internal.ManagedChannelImpl,io.grpc.CallOptions)>($r8, $r1);

        $r12 = new io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1;

        specialinvoke $r12.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall,java.lang.Runnable)>($r0, $r7);

        interfaceinvoke $r11.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r12);

        return;
    }

io.grpc.internal.ManagedChannelImpl$RealChannel
<io.grpc.internal.ManagedChannelImpl$RealChannel: java.lang.String authority>
<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.Channel clientCallImplChannel>
<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector>
<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>
    private void <init>(io.grpc.internal.ManagedChannelImpl, java.lang.String)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        java.lang.String $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        io.grpc.InternalConfigSelector $r4;
        io.grpc.internal.ManagedChannelImpl$RealChannel$1 $r5;
        java.lang.Object $r6;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r2 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r1 := @parameter1: java.lang.String;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0> = $r2;

        specialinvoke $r0.<io.grpc.Channel: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicReference;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3500()>();

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r4);

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector> = $r3;

        $r5 = new io.grpc.internal.ManagedChannelImpl$RealChannel$1;

        specialinvoke $r5.<io.grpc.internal.ManagedChannelImpl$RealChannel$1: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r0);

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.Channel clientCallImplChannel> = $r5;

        $r6 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "authority");

        $r1 = (java.lang.String) $r6;

        $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.lang.String authority> = $r1;

        return;
    }

    void <init>(io.grpc.internal.ManagedChannelImpl, java.lang.String, io.grpc.internal.ManagedChannelImpl$1)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        java.lang.String $r2;
        io.grpc.internal.ManagedChannelImpl$1 $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: void <init>(io.grpc.internal.ManagedChannelImpl,java.lang.String)>($r1, $r2);

        return;
    }

    static java.util.concurrent.atomic.AtomicReference access$3000(io.grpc.internal.ManagedChannelImpl$RealChannel)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        java.util.concurrent.atomic.AtomicReference r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector>;

        return r1;
    }

    static java.lang.String access$4100(io.grpc.internal.ManagedChannelImpl$RealChannel)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        java.lang.String r1;

        $r0 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.lang.String authority>;

        return r1;
    }

    static io.grpc.ClientCall access$4500(io.grpc.internal.ManagedChannelImpl$RealChannel, io.grpc.MethodDescriptor, io.grpc.CallOptions)
    {
        io.grpc.MethodDescriptor $r0;
        io.grpc.CallOptions $r1;
        io.grpc.ClientCall $r2;
        io.grpc.internal.ManagedChannelImpl$RealChannel $r3;

        $r3 := @parameter0: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r0 := @parameter1: io.grpc.MethodDescriptor;

        $r1 := @parameter2: io.grpc.CallOptions;

        $r2 = specialinvoke $r3.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.ClientCall newClientCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r0, $r1);

        return $r2;
    }

    private io.grpc.ClientCall newClientCall(io.grpc.MethodDescriptor, io.grpc.CallOptions)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        io.grpc.Channel $r1;
        io.grpc.MethodDescriptor $r2;
        io.grpc.CallOptions $r3;
        java.util.concurrent.atomic.AtomicReference $r4;
        java.lang.Object $r5;
        io.grpc.InternalConfigSelector $r6;
        io.grpc.ClientCall $r7;
        boolean $z0;
        io.grpc.internal.ManagedChannelServiceConfig$ServiceConfigConvertedSelector $r8;
        io.grpc.internal.ManagedChannelServiceConfig $r9;
        io.grpc.internal.ManagedChannelServiceConfig$MethodInfo $r10;
        io.grpc.CallOptions$Key $r11;
        io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall $r12;
        io.grpc.internal.ManagedChannelImpl $r13;
        java.util.concurrent.Executor $r14;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r2 := @parameter0: io.grpc.MethodDescriptor;

        $r3 := @parameter1: io.grpc.CallOptions;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r6 = (io.grpc.InternalConfigSelector) $r5;

        if $r6 != null goto label1;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.Channel clientCallImplChannel>;

        $r7 = virtualinvoke $r1.<io.grpc.Channel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r2, $r3);

        return $r7;

     label1:
        $z0 = $r6 instanceof io.grpc.internal.ManagedChannelServiceConfig$ServiceConfigConvertedSelector;

        if $z0 == 0 goto label3;

        $r8 = (io.grpc.internal.ManagedChannelServiceConfig$ServiceConfigConvertedSelector) $r6;

        $r9 = $r8.<io.grpc.internal.ManagedChannelServiceConfig$ServiceConfigConvertedSelector: io.grpc.internal.ManagedChannelServiceConfig config>;

        $r10 = virtualinvoke $r9.<io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.ManagedChannelServiceConfig$MethodInfo getMethodConfig(io.grpc.MethodDescriptor)>($r2);

        if $r10 == null goto label2;

        $r11 = <io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.CallOptions$Key KEY>;

        $r3 = virtualinvoke $r3.<io.grpc.CallOptions: io.grpc.CallOptions withOption(io.grpc.CallOptions$Key,java.lang.Object)>($r11, $r10);

     label2:
        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.Channel clientCallImplChannel>;

        $r7 = virtualinvoke $r1.<io.grpc.Channel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r2, $r3);

        return $r7;

     label3:
        $r12 = new io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.Channel clientCallImplChannel>;

        $r13 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r14 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor access$4600(io.grpc.internal.ManagedChannelImpl)>($r13);

        specialinvoke $r12.<io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: void <init>(io.grpc.InternalConfigSelector,io.grpc.Channel,java.util.concurrent.Executor,io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r6, $r1, $r14, $r2, $r3);

        return $r12;
    }

    public java.lang.String authority()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        java.lang.String r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.lang.String authority>;

        return r1;
    }

    public io.grpc.ClientCall newCall(io.grpc.MethodDescriptor, io.grpc.CallOptions)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        io.grpc.MethodDescriptor $r1;
        io.grpc.CallOptions $r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        io.grpc.InternalConfigSelector $r5;
        io.grpc.ClientCall $r6;
        io.grpc.internal.ManagedChannelImpl $r7;
        io.grpc.SynchronizationContext $r8;
        io.grpc.internal.ManagedChannelImpl$RealChannel$2 $r9;
        java.util.concurrent.atomic.AtomicBoolean $r10;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$3 $r11;
        io.grpc.Context $r12;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r13;
        io.grpc.internal.ManagedChannelImpl$RealChannel$4 $r14;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r1 := @parameter0: io.grpc.MethodDescriptor;

        $r2 := @parameter1: io.grpc.CallOptions;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3500()>();

        if $r4 == $r5 goto label1;

        $r6 = specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.ClientCall newClientCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r1, $r2);

        return $r6;

     label1:
        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r8 = $r7.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r9 = new io.grpc.internal.ManagedChannelImpl$RealChannel$2;

        specialinvoke $r9.<io.grpc.internal.ManagedChannelImpl$RealChannel$2: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r0);

        virtualinvoke $r8.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r9);

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3500()>();

        if $r4 == $r5 goto label2;

        $r6 = specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.ClientCall newClientCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r1, $r2);

        return $r6;

     label2:
        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r10 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)>($r7);

        $z0 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label3;

        $r11 = new io.grpc.internal.ManagedChannelImpl$RealChannel$3;

        specialinvoke $r11.<io.grpc.internal.ManagedChannelImpl$RealChannel$3: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r0);

        return $r11;

     label3:
        $r12 = staticinvoke <io.grpc.Context: io.grpc.Context current()>();

        $r13 = new io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall;

        specialinvoke $r13.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel,io.grpc.Context,io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r0, $r12, $r1, $r2);

        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r8 = $r7.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r14 = new io.grpc.internal.ManagedChannelImpl$RealChannel$4;

        specialinvoke $r14.<io.grpc.internal.ManagedChannelImpl$RealChannel$4: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel,io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)>($r0, $r13);

        virtualinvoke $r8.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r14);

        return $r13;
    }

    void onConfigError()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.Object $r2;
        io.grpc.InternalConfigSelector $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r3 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3500()>();

        if $r2 != $r3 goto label1;

        virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: void updateConfigSelector(io.grpc.InternalConfigSelector)>(null);

     label1:
        return;
    }

    void shutdown()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.SynchronizationContext $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r1 = new io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown;

        specialinvoke $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r0);

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r1);

        return;
    }

    void shutdownNow()
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.SynchronizationContext $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r1 = new io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow;

        specialinvoke $r1.<io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: void <init>(io.grpc.internal.ManagedChannelImpl$RealChannel)>($r0);

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void execute(java.lang.Runnable)>($r1);

        return;
    }

    void updateConfigSelector(io.grpc.InternalConfigSelector)
    {
        io.grpc.internal.ManagedChannelImpl$RealChannel $r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        io.grpc.InternalConfigSelector $r2, $r4;
        java.lang.Object $r3;
        io.grpc.internal.ManagedChannelImpl $r5;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall $r8;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RealChannel;

        $r2 := @parameter0: io.grpc.InternalConfigSelector;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector>;

        $r3 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = (io.grpc.InternalConfigSelector) $r3;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r2);

        $r2 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3500()>();

        if $r4 != $r2 goto label2;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r5);

        if $r6 == null goto label2;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall) $r3;

        virtualinvoke $r8.<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: void reprocess()>();

        goto label1;

     label2:
        return;
    }

io.grpc.internal.ManagedChannelImpl$ResolutionState
<io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] $VALUES>
<io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState ERROR>
<io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState NO_RESOLUTION>
<io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState SUCCESS>
    private static io.grpc.internal.ManagedChannelImpl$ResolutionState[] $values()
    {
        io.grpc.internal.ManagedChannelImpl$ResolutionState[] $r0;
        io.grpc.internal.ManagedChannelImpl$ResolutionState $r1;

        $r0 = newarray (io.grpc.internal.ManagedChannelImpl$ResolutionState)[3];

        $r1 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState NO_RESOLUTION>;

        $r0[0] = $r1;

        $r1 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState SUCCESS>;

        $r0[1] = $r1;

        $r1 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState ERROR>;

        $r0[2] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        io.grpc.internal.ManagedChannelImpl$ResolutionState[] $r0;
        io.grpc.internal.ManagedChannelImpl$ResolutionState $r1;

        $r1 = new io.grpc.internal.ManagedChannelImpl$ResolutionState;

        specialinvoke $r1.<io.grpc.internal.ManagedChannelImpl$ResolutionState: void <init>(java.lang.String,int)>("NO_RESOLUTION", 0);

        <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState NO_RESOLUTION> = $r1;

        $r1 = new io.grpc.internal.ManagedChannelImpl$ResolutionState;

        specialinvoke $r1.<io.grpc.internal.ManagedChannelImpl$ResolutionState: void <init>(java.lang.String,int)>("SUCCESS", 1);

        <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState SUCCESS> = $r1;

        $r1 = new io.grpc.internal.ManagedChannelImpl$ResolutionState;

        specialinvoke $r1.<io.grpc.internal.ManagedChannelImpl$ResolutionState: void <init>(java.lang.String,int)>("ERROR", 2);

        <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState ERROR> = $r1;

        $r0 = staticinvoke <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] $values()>();

        <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        io.grpc.internal.ManagedChannelImpl$ResolutionState $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$ResolutionState;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static io.grpc.internal.ManagedChannelImpl$ResolutionState[] values()
    {
        java.lang.Object $r0;
        io.grpc.internal.ManagedChannelImpl$ResolutionState[] $r1;

        $r1 = <io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (io.grpc.internal.ManagedChannelImpl$ResolutionState[]) $r0;

        return $r1;
    }

io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor
<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>
    private void <init>(java.util.concurrent.ScheduledExecutorService)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.lang.Object $r1;
        java.util.concurrent.ScheduledExecutorService $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r2 := @parameter0: java.util.concurrent.ScheduledExecutorService;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "delegate");

        $r2 = (java.util.concurrent.ScheduledExecutorService) $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate> = $r2;

        return;
    }

    void <init>(java.util.concurrent.ScheduledExecutorService, io.grpc.internal.ManagedChannelImpl$1)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.util.concurrent.ScheduledExecutorService $r1;
        io.grpc.internal.ManagedChannelImpl$1 $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r1 := @parameter0: java.util.concurrent.ScheduledExecutorService;

        $r2 := @parameter1: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: void <init>(java.util.concurrent.ScheduledExecutorService)>($r1);

        return;
    }

    public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        boolean $z0;
        long $l0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $z0 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return $z0;
    }

    public void execute(java.lang.Runnable)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.lang.Runnable $r1;
        java.util.concurrent.ScheduledExecutorService $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r1);

        return;
    }

    public java.util.List invokeAll(java.util.Collection) throws java.lang.InterruptedException
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.util.concurrent.ScheduledExecutorService $r1;
        java.util.List $r2;
        java.util.Collection $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r3 := @parameter0: java.util.Collection;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: java.util.List invokeAll(java.util.Collection)>($r3);

        return $r2;
    }

    public java.util.List invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.util.List $r3;
        java.util.Collection $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r4 := @parameter0: java.util.Collection;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>($r4, $l0, $r1);

        return $r3;
    }

    public java.lang.Object invokeAny(java.util.Collection) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.util.concurrent.ScheduledExecutorService $r1;
        java.lang.Object $r2;
        java.util.Collection $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r3 := @parameter0: java.util.Collection;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: java.lang.Object invokeAny(java.util.Collection)>($r3);

        return $r2;
    }

    public java.lang.Object invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.lang.Object $r3;
        java.util.Collection $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r4 := @parameter0: java.util.Collection;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)>($r4, $l0, $r1);

        return $r3;
    }

    public boolean isShutdown()
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        boolean $z0;
        java.util.concurrent.ScheduledExecutorService $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: boolean isShutdown()>();

        return $z0;
    }

    public boolean isTerminated()
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        boolean $z0;
        java.util.concurrent.ScheduledExecutorService $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: boolean isTerminated()>();

        return $z0;
    }

    public java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.util.concurrent.ScheduledFuture $r3;
        java.lang.Runnable $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r4 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r4, $l0, $r1);

        return $r3;
    }

    public java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.util.concurrent.ScheduledFuture $r3;
        java.util.concurrent.Callable $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r4 := @parameter0: java.util.concurrent.Callable;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>($r4, $l0, $r1);

        return $r3;
    }

    public java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.util.concurrent.ScheduledFuture $r3;
        java.lang.Runnable $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r4 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r1 := @parameter3: java.util.concurrent.TimeUnit;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r4, $l0, $l1, $r1);

        return $r3;
    }

    public java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.util.concurrent.ScheduledFuture $r3;
        java.lang.Runnable $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r4 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r1 := @parameter3: java.util.concurrent.TimeUnit;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r4, $l0, $l1, $r1);

        return $r3;
    }

    public void shutdown()
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Restricted: shutdown() is not allowed");

        throw $r1;
    }

    public java.util.List shutdownNow()
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Restricted: shutdownNow() is not allowed");

        throw $r1;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.util.concurrent.ScheduledExecutorService $r1;
        java.util.concurrent.Future $r2;
        java.lang.Runnable $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r3 := @parameter0: java.lang.Runnable;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

        return $r2;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.lang.Object $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.util.concurrent.Future $r3;
        java.lang.Runnable $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r4 := @parameter0: java.lang.Runnable;

        $r1 := @parameter1: java.lang.Object;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>($r4, $r1);

        return $r3;
    }

    public java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor $r0;
        java.util.concurrent.ScheduledExecutorService $r1;
        java.util.concurrent.Future $r2;
        java.util.concurrent.Callable $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor;

        $r3 := @parameter0: java.util.concurrent.Callable;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r3);

        return $r2;
    }

io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.LoadBalancer$SubchannelStateListener val$listener>
    void <init>(io.grpc.internal.ManagedChannelImpl$SubchannelImpl, io.grpc.LoadBalancer$SubchannelStateListener)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback $r0;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r1;
        io.grpc.LoadBalancer$SubchannelStateListener $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r2 := @parameter1: io.grpc.LoadBalancer$SubchannelStateListener;

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1> = $r1;

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.LoadBalancer$SubchannelStateListener val$listener> = $r2;

        specialinvoke $r0.<io.grpc.internal.InternalSubchannel$Callback: void <init>()>();

        return;
    }

    void onInUse(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r2;
        io.grpc.internal.ManagedChannelImpl $r3;
        io.grpc.internal.InUseStateAggregator $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = $r3.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator>;

        virtualinvoke $r4.<io.grpc.internal.InUseStateAggregator: void updateObjectInUse(java.lang.Object,boolean)>($r1, 1);

        return;
    }

    void onNotInUse(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r2;
        io.grpc.internal.ManagedChannelImpl $r3;
        io.grpc.internal.InUseStateAggregator $r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = $r3.<io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator>;

        virtualinvoke $r4.<io.grpc.internal.InUseStateAggregator: void updateObjectInUse(java.lang.Object,boolean)>($r1, 0);

        return;
    }

    void onStateChange(io.grpc.internal.InternalSubchannel, io.grpc.ConnectivityStateInfo)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback $r0;
        io.grpc.ConnectivityStateInfo $r1;
        io.grpc.internal.InternalSubchannel $r2;
        io.grpc.LoadBalancer$SubchannelStateListener $r3;
        boolean $z0;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback;

        $r2 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r1 := @parameter1: io.grpc.ConnectivityStateInfo;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.LoadBalancer$SubchannelStateListener val$listener>;

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "listener is null");

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.LoadBalancer$SubchannelStateListener val$listener>;

        interfaceinvoke $r3.<io.grpc.LoadBalancer$SubchannelStateListener: void onSubchannelState(io.grpc.ConnectivityStateInfo)>($r1);

        return;
    }

    void onTerminated(io.grpc.internal.InternalSubchannel)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback $r0;
        io.grpc.internal.InternalSubchannel $r1;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r2;
        io.grpc.internal.ManagedChannelImpl $r3;
        java.util.Set $r4;
        io.grpc.InternalChannelz $r5;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback;

        $r1 := @parameter0: io.grpc.internal.InternalSubchannel;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Set access$700(io.grpc.internal.ManagedChannelImpl)>($r3);

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz access$5800(io.grpc.internal.ManagedChannelImpl)>($r3);

        virtualinvoke $r5.<io.grpc.InternalChannelz: void removeSubchannel(io.grpc.InternalInstrumented)>($r1);

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        staticinvoke <io.grpc.internal.ManagedChannelImpl: void access$5900(io.grpc.internal.ManagedChannelImpl)>($r3);

        return;
    }

io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1>
    void <init>(io.grpc.internal.ManagedChannelImpl$SubchannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel $r0;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel $r0;
        io.grpc.Status $r1;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r2;
        io.grpc.internal.InternalSubchannel $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel>;

        $r1 = <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SUBCHANNEL_SHUTDOWN_STATUS>;

        virtualinvoke $r3.<io.grpc.internal.InternalSubchannel: void shutdown(io.grpc.Status)>($r1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$SubchannelImpl
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List addressGroups>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.LoadBalancer$CreateSubchannelArgs args>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.SynchronizationContext$ScheduledHandle delayedShutdownTask>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean shutdown>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean started>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.InternalLogId subchannelLogId>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ChannelLoggerImpl subchannelLogger>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ChannelTracer subchannelTracer>
<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>
    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.LoadBalancer$CreateSubchannelArgs, io.grpc.internal.ManagedChannelImpl$LbHelperImpl)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.LoadBalancer$CreateSubchannelArgs $r2, $r8;
        io.grpc.internal.ManagedChannelImpl$LbHelperImpl $r3;
        java.util.List $r4;
        java.lang.String $r5;
        io.grpc.LoadBalancer$CreateSubchannelArgs$Builder $r6;
        java.lang.Object $r7;
        io.grpc.InternalLogId $r9;
        io.grpc.internal.ChannelTracer $r10;
        int $i0;
        io.grpc.internal.TimeProvider $r11;
        long $l1;
        java.lang.StringBuilder $r12;
        io.grpc.internal.ChannelLoggerImpl $r13;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: io.grpc.LoadBalancer$CreateSubchannelArgs;

        $r3 := @parameter2: io.grpc.internal.ManagedChannelImpl$LbHelperImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<io.grpc.internal.AbstractSubchannel: void <init>()>();

        $r4 = virtualinvoke $r2.<io.grpc.LoadBalancer$CreateSubchannelArgs: java.util.List getAddresses()>();

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List addressGroups> = $r4;

        $r5 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.lang.String access$8000(io.grpc.internal.ManagedChannelImpl)>($r1);

        if $r5 == null goto label1;

        $r4 = virtualinvoke $r2.<io.grpc.LoadBalancer$CreateSubchannelArgs: java.util.List getAddresses()>();

        $r4 = specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List stripOverrideAuthorityAttributes(java.util.List)>($r4);

        $r6 = virtualinvoke $r2.<io.grpc.LoadBalancer$CreateSubchannelArgs: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder toBuilder()>();

        $r6 = virtualinvoke $r6.<io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder setAddresses(java.util.List)>($r4);

        $r2 = virtualinvoke $r6.<io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs build()>();

     label1:
        $r7 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "args");

        $r8 = (io.grpc.LoadBalancer$CreateSubchannelArgs) $r7;

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.LoadBalancer$CreateSubchannelArgs args> = $r8;

        $r7 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "helper");

        $r3 = (io.grpc.internal.ManagedChannelImpl$LbHelperImpl) $r7;

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper> = $r3;

        $r5 = virtualinvoke $r1.<io.grpc.internal.ManagedChannelImpl: java.lang.String authority()>();

        $r9 = staticinvoke <io.grpc.InternalLogId: io.grpc.InternalLogId allocate(java.lang.String,java.lang.String)>("Subchannel", $r5);

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.InternalLogId subchannelLogId> = $r9;

        $r10 = new io.grpc.internal.ChannelTracer;

        $i0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: int access$5400(io.grpc.internal.ManagedChannelImpl)>($r1);

        $r11 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.TimeProvider access$5300(io.grpc.internal.ManagedChannelImpl)>($r1);

        $l1 = interfaceinvoke $r11.<io.grpc.internal.TimeProvider: long currentTimeNanos()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subchannel for ");

        $r4 = virtualinvoke $r2.<io.grpc.LoadBalancer$CreateSubchannelArgs: java.util.List getAddresses()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<io.grpc.internal.ChannelTracer: void <init>(io.grpc.InternalLogId,int,long,java.lang.String)>($r9, $i0, $l1, $r5);

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ChannelTracer subchannelTracer> = $r10;

        $r13 = new io.grpc.internal.ChannelLoggerImpl;

        $r11 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.TimeProvider access$5300(io.grpc.internal.ManagedChannelImpl)>($r1);

        specialinvoke $r13.<io.grpc.internal.ChannelLoggerImpl: void <init>(io.grpc.internal.ChannelTracer,io.grpc.internal.TimeProvider)>($r10, $r11);

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ChannelLoggerImpl subchannelLogger> = $r13;

        return;
    }

    private java.util.List stripOverrideAuthorityAttributes(java.util.List)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        java.util.ArrayList $r1, r9;
        io.grpc.Attributes$Key $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        io.grpc.EquivalentAddressGroup $r6, r10;
        io.grpc.Attributes $r7;
        io.grpc.Attributes$Builder $r8;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r3 := @parameter0: java.util.List;

        r9 = new java.util.ArrayList;

        $r1 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (io.grpc.EquivalentAddressGroup) $r5;

        r10 = new io.grpc.EquivalentAddressGroup;

        $r3 = virtualinvoke $r6.<io.grpc.EquivalentAddressGroup: java.util.List getAddresses()>();

        $r7 = virtualinvoke $r6.<io.grpc.EquivalentAddressGroup: io.grpc.Attributes getAttributes()>();

        $r8 = virtualinvoke $r7.<io.grpc.Attributes: io.grpc.Attributes$Builder toBuilder()>();

        $r2 = <io.grpc.EquivalentAddressGroup: io.grpc.Attributes$Key ATTR_AUTHORITY_OVERRIDE>;

        $r8 = virtualinvoke $r8.<io.grpc.Attributes$Builder: io.grpc.Attributes$Builder discard(io.grpc.Attributes$Key)>($r2);

        $r7 = virtualinvoke $r8.<io.grpc.Attributes$Builder: io.grpc.Attributes build()>();

        specialinvoke r10.<io.grpc.EquivalentAddressGroup: void <init>(java.util.List,io.grpc.Attributes)>($r3, $r7);

        $r3 = (java.util.List) $r1;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r10);

        goto label1;

     label2:
        $r3 = (java.util.List) $r1;

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r3;
    }

    public java.util.List getAllAddresses()
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.SynchronizationContext $r2;
        boolean $z0;
        java.util.List r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r2.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean started>;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "not started");

        r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List addressGroups>;

        return r3;
    }

    public io.grpc.Attributes getAttributes()
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        io.grpc.Attributes $r1;
        io.grpc.LoadBalancer$CreateSubchannelArgs $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.LoadBalancer$CreateSubchannelArgs args>;

        $r1 = virtualinvoke $r2.<io.grpc.LoadBalancer$CreateSubchannelArgs: io.grpc.Attributes getAttributes()>();

        return $r1;
    }

    public java.lang.Object getInternalSubchannel()
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        boolean $z0;
        io.grpc.internal.InternalSubchannel r1;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean started>;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Subchannel is not started");

        r1 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel>;

        return r1;
    }

    public void requestConnection()
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.SynchronizationContext $r2;
        boolean $z0;
        io.grpc.internal.InternalSubchannel $r3;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = $r1.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r2.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean started>;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "not started");

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel>;

        virtualinvoke $r3.<io.grpc.internal.InternalSubchannel: io.grpc.internal.ClientTransport obtainActiveTransport()>();

        return;
    }

    public void shutdown()
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        io.grpc.internal.LogExceptionRunnable $r1;
        java.util.concurrent.TimeUnit $r2;
        io.grpc.internal.ManagedChannelImpl $r3;
        io.grpc.SynchronizationContext $r4;
        io.grpc.internal.InternalSubchannel $r5;
        boolean $z0;
        io.grpc.SynchronizationContext$ScheduledHandle $r6;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel $r7;
        io.grpc.internal.ClientTransportFactory $r8;
        java.util.concurrent.ScheduledExecutorService $r9;
        io.grpc.Status $r10;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = $r3.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r4.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel>;

        if $r5 != null goto label1;

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean shutdown> = 1;

        return;

     label1:
        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean shutdown>;

        if $z0 == 0 goto label3;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$5100(io.grpc.internal.ManagedChannelImpl)>($r3);

        if $z0 == 0 goto label2;

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.SynchronizationContext$ScheduledHandle delayedShutdownTask>;

        if $r6 == null goto label6;

        virtualinvoke $r6.<io.grpc.SynchronizationContext$ScheduledHandle: void cancel()>();

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.SynchronizationContext$ScheduledHandle delayedShutdownTask> = null;

        goto label4;

     label2:
        return;

     label3:
        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean shutdown> = 1;

     label4:
        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$5100(io.grpc.internal.ManagedChannelImpl)>($r3);

        if $z0 != 0 goto label5;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = $r3.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r1 = new io.grpc.internal.LogExceptionRunnable;

        $r7 = new io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel;

        specialinvoke $r7.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel: void <init>(io.grpc.internal.ManagedChannelImpl$SubchannelImpl)>($r0);

        specialinvoke $r1.<io.grpc.internal.LogExceptionRunnable: void <init>(java.lang.Runnable)>($r7);

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r8 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory access$2300(io.grpc.internal.ManagedChannelImpl)>($r3);

        $r9 = interfaceinvoke $r8.<io.grpc.internal.ClientTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>();

        $r6 = virtualinvoke $r4.<io.grpc.SynchronizationContext: io.grpc.SynchronizationContext$ScheduledHandle schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)>($r1, 5L, $r2, $r9);

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.SynchronizationContext$ScheduledHandle delayedShutdownTask> = $r6;

        return;

     label5:
        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel>;

        $r10 = <io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_STATUS>;

        virtualinvoke $r5.<io.grpc.internal.InternalSubchannel: void shutdown(io.grpc.Status)>($r10);

     label6:
        return;
    }

    public void start(io.grpc.LoadBalancer$SubchannelStateListener)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        io.grpc.LoadBalancer$SubchannelStateListener $r1;
        io.grpc.SynchronizationContext $r2;
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback $r3;
        io.grpc.internal.ManagedChannelImpl $r4;
        boolean $z0, $z1;
        io.grpc.internal.InternalSubchannel $r5;
        io.grpc.LoadBalancer$CreateSubchannelArgs $r6;
        java.util.List $r7;
        java.lang.String $r8, $r9;
        io.grpc.internal.BackoffPolicy$Provider $r10;
        io.grpc.internal.ClientTransportFactory $r11, $r12;
        java.util.concurrent.ScheduledExecutorService $r13;
        com.google.common.base.Supplier $r14;
        io.grpc.InternalChannelz $r15;
        io.grpc.internal.CallTracer$Factory $r16;
        io.grpc.internal.CallTracer $r17;
        io.grpc.internal.ChannelTracer $r18;
        io.grpc.InternalLogId $r19;
        io.grpc.internal.ChannelLoggerImpl $r20;
        io.grpc.InternalChannelz$ChannelTrace$Event$Builder $r21;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r22;
        io.grpc.internal.TimeProvider $r23;
        long $l0;
        io.grpc.InternalChannelz$ChannelTrace$Event $r24;
        java.util.Set $r25;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r1 := @parameter0: io.grpc.LoadBalancer$SubchannelStateListener;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = $r4.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r2.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean started>;

        $z1 = 0;

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "already started");

        $z0 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean shutdown>;

        if $z0 != 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "already shutdown");

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $z0 = staticinvoke <io.grpc.internal.ManagedChannelImpl: boolean access$5100(io.grpc.internal.ManagedChannelImpl)>($r4);

        if $z0 != 0 goto label5;

        $z1 = 1;

        goto label5;

     label5:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "Channel is being terminated");

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean started> = 1;

        $r5 = new io.grpc.internal.InternalSubchannel;

        $r6 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.LoadBalancer$CreateSubchannelArgs args>;

        $r7 = virtualinvoke $r6.<io.grpc.LoadBalancer$CreateSubchannelArgs: java.util.List getAddresses()>();

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r8 = virtualinvoke $r4.<io.grpc.internal.ManagedChannelImpl: java.lang.String authority()>();

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r9 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.lang.String access$6100(io.grpc.internal.ManagedChannelImpl)>($r4);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r10 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy$Provider access$6200(io.grpc.internal.ManagedChannelImpl)>($r4);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r11 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory access$2300(io.grpc.internal.ManagedChannelImpl)>($r4);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r12 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory access$2300(io.grpc.internal.ManagedChannelImpl)>($r4);

        $r13 = interfaceinvoke $r12.<io.grpc.internal.ClientTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>();

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r14 = staticinvoke <io.grpc.internal.ManagedChannelImpl: com.google.common.base.Supplier access$6300(io.grpc.internal.ManagedChannelImpl)>($r4);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r2 = $r4.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        $r3 = new io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback;

        specialinvoke $r3.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: void <init>(io.grpc.internal.ManagedChannelImpl$SubchannelImpl,io.grpc.LoadBalancer$SubchannelStateListener)>($r0, $r1);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r15 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz access$5800(io.grpc.internal.ManagedChannelImpl)>($r4);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r16 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer$Factory access$5700(io.grpc.internal.ManagedChannelImpl)>($r4);

        $r17 = interfaceinvoke $r16.<io.grpc.internal.CallTracer$Factory: io.grpc.internal.CallTracer create()>();

        $r18 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ChannelTracer subchannelTracer>;

        $r19 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.InternalLogId subchannelLogId>;

        $r20 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ChannelLoggerImpl subchannelLogger>;

        specialinvoke $r5.<io.grpc.internal.InternalSubchannel: void <init>(java.util.List,java.lang.String,java.lang.String,io.grpc.internal.BackoffPolicy$Provider,io.grpc.internal.ClientTransportFactory,java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier,io.grpc.SynchronizationContext,io.grpc.internal.InternalSubchannel$Callback,io.grpc.InternalChannelz,io.grpc.internal.CallTracer,io.grpc.internal.ChannelTracer,io.grpc.InternalLogId,io.grpc.ChannelLogger)>($r7, $r8, $r9, $r10, $r11, $r13, $r14, $r2, $r3, $r15, $r17, $r18, $r19, $r20);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r18 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ChannelTracer access$400(io.grpc.internal.ManagedChannelImpl)>($r4);

        $r21 = new io.grpc.InternalChannelz$ChannelTrace$Event$Builder;

        specialinvoke $r21.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: void <init>()>();

        $r21 = virtualinvoke $r21.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setDescription(java.lang.String)>("Child Subchannel started");

        $r22 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_INFO>;

        $r21 = virtualinvoke $r21.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setSeverity(io.grpc.InternalChannelz$ChannelTrace$Event$Severity)>($r22);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r23 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.TimeProvider access$5300(io.grpc.internal.ManagedChannelImpl)>($r4);

        $l0 = interfaceinvoke $r23.<io.grpc.internal.TimeProvider: long currentTimeNanos()>();

        $r21 = virtualinvoke $r21.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setTimestampNanos(long)>($l0);

        $r21 = virtualinvoke $r21.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setSubchannelRef(io.grpc.InternalWithLogId)>($r5);

        $r24 = virtualinvoke $r21.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event build()>();

        virtualinvoke $r18.<io.grpc.internal.ChannelTracer: void reportEvent(io.grpc.InternalChannelz$ChannelTrace$Event)>($r24);

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel> = $r5;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r15 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz access$5800(io.grpc.internal.ManagedChannelImpl)>($r4);

        virtualinvoke $r15.<io.grpc.InternalChannelz: void addSubchannel(io.grpc.InternalInstrumented)>($r5);

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r25 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.util.Set access$700(io.grpc.internal.ManagedChannelImpl)>($r4);

        interfaceinvoke $r25.<java.util.Set: boolean add(java.lang.Object)>($r5);

        return;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        java.lang.String $r1;
        io.grpc.InternalLogId $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.InternalLogId subchannelLogId>;

        $r1 = virtualinvoke $r2.<io.grpc.InternalLogId: java.lang.String toString()>();

        return $r1;
    }

    public void updateAddresses(java.util.List)
    {
        io.grpc.internal.ManagedChannelImpl$SubchannelImpl $r0;
        java.util.List $r1;
        io.grpc.internal.ManagedChannelImpl $r2;
        io.grpc.SynchronizationContext $r3;
        java.lang.String $r4;
        io.grpc.internal.InternalSubchannel $r5;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$SubchannelImpl;

        $r1 := @parameter0: java.util.List;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r3 = $r2.<io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext>;

        virtualinvoke $r3.<io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()>();

        $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List addressGroups> = $r1;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0>;

        $r4 = staticinvoke <io.grpc.internal.ManagedChannelImpl: java.lang.String access$8000(io.grpc.internal.ManagedChannelImpl)>($r2);

        if $r4 == null goto label1;

        $r1 = specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List stripOverrideAuthorityAttributes(java.util.List)>($r1);

     label1:
        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel>;

        virtualinvoke $r5.<io.grpc.internal.InternalSubchannel: void updateAddresses(java.util.List)>($r1);

        return;
    }

io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry
<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.lang.Object lock>
<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.Status shutdownStatus>
<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.internal.ManagedChannelImpl this$0>
<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams>
    private void <init>(io.grpc.internal.ManagedChannelImpl)
    {
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        java.lang.Object r2;
        java.util.HashSet r3;
        java.util.Collection r4;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.internal.ManagedChannelImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r2 = new java.lang.Object;

        specialinvoke r2.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.lang.Object lock> = r2;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        r4 = (java.util.Collection) r3;

        $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams> = r4;

        return;
    }

    void <init>(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$1)
    {
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r0;
        io.grpc.internal.ManagedChannelImpl $r1;
        io.grpc.internal.ManagedChannelImpl$1 $r2;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry;

        $r1 := @parameter0: io.grpc.internal.ManagedChannelImpl;

        $r2 := @parameter1: io.grpc.internal.ManagedChannelImpl$1;

        specialinvoke $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void <init>(io.grpc.internal.ManagedChannelImpl)>($r1);

        return;
    }

    io.grpc.Status add(io.grpc.internal.RetriableStream)
    {
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r0;
        java.lang.Object $r1;
        io.grpc.internal.RetriableStream $r2;
        io.grpc.Status $r3;
        java.util.Collection $r4;
        java.lang.Throwable $r5;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry;

        $r2 := @parameter0: io.grpc.internal.RetriableStream;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.Status shutdownStatus>;

        if $r3 == null goto label3;

     label2:
        exitmonitor $r1;

        return $r3;

     label3:
        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams>;

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label4:
        exitmonitor $r1;

        return null;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r1;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void onShutdown(io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r0;
        io.grpc.Status $r1, $r3;
        java.lang.Object $r2;
        java.util.Collection $r4;
        boolean $z0;
        io.grpc.internal.ManagedChannelImpl $r5;
        io.grpc.internal.DelayedClientTransport $r6;
        java.lang.Throwable $r7;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry;

        $r1 := @parameter0: io.grpc.Status;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.lang.Object lock>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.Status shutdownStatus>;

        if $r3 == null goto label3;

     label2:
        exitmonitor $r2;

        return;

     label3:
        $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.Status shutdownStatus> = $r1;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams>;

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        exitmonitor $r2;

        if $z0 == 0 goto label7;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)>($r5);

        virtualinvoke $r6.<io.grpc.internal.DelayedClientTransport: void shutdown(io.grpc.Status)>($r1);

        return;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r2;

        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
    }

    void onShutdownNow(io.grpc.Status)
    {
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r0;
        java.util.Collection $r1;
        io.grpc.Status $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4, r10;
        java.util.Iterator $r5;
        boolean $z0;
        io.grpc.internal.ClientStream $r6;
        io.grpc.internal.ManagedChannelImpl $r7;
        io.grpc.internal.DelayedClientTransport $r8;
        java.lang.Throwable $r9;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry;

        $r2 := @parameter0: io.grpc.Status;

        virtualinvoke $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void onShutdown(io.grpc.Status)>($r2);

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.lang.Object lock>;

        entermonitor $r3;

     label1:
        r10 = new java.util.ArrayList;

        $r4 = r10;

        $r1 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams>;

        specialinvoke r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

     label2:
        exitmonitor $r3;

        $r1 = (java.util.Collection) $r4;

        $r5 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (io.grpc.internal.ClientStream) $r3;

        interfaceinvoke $r6.<io.grpc.internal.ClientStream: void cancel(io.grpc.Status)>($r2);

        goto label3;

     label4:
        $r7 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.internal.ManagedChannelImpl this$0>;

        $r8 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)>($r7);

        virtualinvoke $r8.<io.grpc.internal.DelayedClientTransport: void shutdownNow(io.grpc.Status)>($r2);

        return;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r3;

        goto label6;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    void remove(io.grpc.internal.RetriableStream)
    {
        io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry $r0;
        io.grpc.internal.RetriableStream $r1;
        java.lang.Object $r2;
        java.util.Collection $r3;
        boolean $z0;
        io.grpc.Status $r4;
        io.grpc.internal.ManagedChannelImpl $r5;
        io.grpc.internal.DelayedClientTransport $r6;
        java.lang.Throwable $r7;
        java.util.HashSet r8;

        $r0 := @this: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry;

        $r1 := @parameter0: io.grpc.internal.RetriableStream;

        $r2 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.lang.Object lock>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams>;

        interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>($r1);

        $r3 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r4 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.Status shutdownStatus>;

        r8 = new java.util.HashSet;

        specialinvoke r8.<java.util.HashSet: void <init>()>();

        $r3 = (java.util.Collection) r8;

        $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams> = $r3;

        goto label3;

     label2:
        $r4 = null;

     label3:
        exitmonitor $r2;

        if $r4 == null goto label5;

        $r5 = $r0.<io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.internal.ManagedChannelImpl this$0>;

        $r6 = staticinvoke <io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)>($r5);

        virtualinvoke $r6.<io.grpc.internal.DelayedClientTransport: void shutdown(io.grpc.Status)>($r4);

        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

