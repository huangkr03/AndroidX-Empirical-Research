androidx.health.services.client.impl.ServiceBackedExerciseClient
<androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.impl.ServiceBackedExerciseClient$Companion Companion>
<androidx.health.services.client.impl.ServiceBackedExerciseClient: android.content.Context context>
<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.Object requestedDataTypesLock>
<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.util.Set requestedDataTypes>
<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>
<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String CLIENT>
<androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>
    public void <init>(android.content.Context, androidx.health.services.client.impl.ipc.internal.ConnectionManager)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        android.content.Context r1, $r9;
        androidx.health.services.client.impl.ipc.internal.ConnectionManager r2;
        androidx.health.services.client.impl.ipc.ClientConfiguration $r3;
        androidx.health.services.client.impl.ipc.Client$ServiceGetter $r4;
        androidx.health.services.client.impl.ipc.RemoteOperation $r5;
        java.lang.Object $r6;
        java.util.LinkedHashSet $r7;
        java.util.Set $r8;
        java.lang.String $r10;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.health.services.client.impl.ipc.internal.ConnectionManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "connectionManager");

        $r3 = <androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>;

        $r4 = dynamicinvoke "getService" <androidx.health.services.client.impl.ipc.Client$ServiceGetter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(android.os.IBinder), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.impl.IExerciseApiService _init_$lambda$0(android.os.IBinder)>, methodtype: androidx.health.services.client.impl.IExerciseApiService __METHODTYPE__(android.os.IBinder));

        $r5 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteOperation ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.Integer _init_$lambda$1(androidx.health.services.client.impl.IExerciseApiService)>, methodtype: java.lang.Integer __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService));

        specialinvoke r0.<androidx.health.services.client.impl.ipc.Client: void <init>(androidx.health.services.client.impl.ipc.ClientConfiguration,androidx.health.services.client.impl.ipc.internal.ConnectionManager,androidx.health.services.client.impl.ipc.Client$ServiceGetter,androidx.health.services.client.impl.ipc.RemoteOperation)>($r3, r2, $r4, $r5);

        r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: android.content.Context context> = r1;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.Object requestedDataTypesLock> = $r6;

        $r7 = new java.util.LinkedHashSet;

        specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>();

        $r8 = (java.util.Set) $r7;

        r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.util.Set requestedDataTypes> = $r8;

        $r9 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: android.content.Context context>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName> = $r10;

        return;
    }

    public void <init>(android.content.Context, androidx.health.services.client.impl.ipc.internal.ConnectionManager, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        android.content.Context r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.health.services.client.impl.ipc.internal.ConnectionManager r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: android.content.Context;

        r3 := @parameter1: androidx.health.services.client.impl.ipc.internal.ConnectionManager;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <androidx.health.services.client.impl.internal.HsConnectionManager: androidx.health.services.client.impl.ipc.internal.ConnectionManager getInstance(android.content.Context)>(r1);

     label1:
        specialinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: void <init>(android.content.Context,androidx.health.services.client.impl.ipc.internal.ConnectionManager)>(r1, r3);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture prepareExerciseAsync(androidx.health.services.client.data.WarmUpConfig)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.WarmUpConfig r1;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: androidx.health.services.client.data.WarmUpConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "configuration");

        $r2 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.WarmUpConfig)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void prepareExerciseAsync$lambda$2(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.WarmUpConfig,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "execute { service, resul\u2026}\n            )\n        }");

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture startExerciseAsync(androidx.health.services.client.data.ExerciseConfig)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.ExerciseConfig r1;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: androidx.health.services.client.data.ExerciseConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "configuration");

        $r2 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseConfig)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void startExerciseAsync$lambda$3(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseConfig,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "execute { service, resul\u2026}\n            )\n        }");

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture pauseExerciseAsync()
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void pauseExerciseAsync$lambda$4(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r2 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "execute { service, resul\u2026back(resultFuture))\n    }");

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture resumeExerciseAsync()
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void resumeExerciseAsync$lambda$5(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r2 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "execute { service, resul\u2026back(resultFuture))\n    }");

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture endExerciseAsync()
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void endExerciseAsync$lambda$6(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r2 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "execute { service, resul\u2026back(resultFuture))\n    }");

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture flushAsync()
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.request.FlushRequest r1, $r2;
        java.lang.String $r3;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r2 = new androidx.health.services.client.impl.request.FlushRequest;

        $r3 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "packageName");

        specialinvoke $r2.<androidx.health.services.client.impl.request.FlushRequest: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        $r4 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.request.FlushRequest)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void flushAsync$lambda$7(androidx.health.services.client.impl.request.FlushRequest,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r5 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "execute { service, resul\u2026(resultFuture))\n        }");

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture markLapAsync()
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void markLapAsync$lambda$8(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r2 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "execute { service, resul\u2026back(resultFuture))\n    }");

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getCurrentExerciseInfoAsync()
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void getCurrentExerciseInfoAsync$lambda$9(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r2 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "execute { service, resul\u2026(resultFuture))\n        }");

        return $r2;
    }

    public void setUpdateCallback(androidx.health.services.client.ExerciseUpdateCallback)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.ExerciseUpdateCallback r1;
        android.content.Context $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: androidx.health.services.client.ExerciseUpdateCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r2 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: android.content.Context context>;

        $r3 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getMainExecutor(context)");

        virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: void setUpdateCallback(java.util.concurrent.Executor,androidx.health.services.client.ExerciseUpdateCallback)>($r3, r1);

        return;
    }

    public void setUpdateCallback(java.util.concurrent.Executor, androidx.health.services.client.ExerciseUpdateCallback)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        java.util.concurrent.Executor r1;
        androidx.health.services.client.ExerciseUpdateCallback r2;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r3;
        com.google.common.util.concurrent.ListenableFuture r4;
        androidx.health.services.client.impl.ServiceBackedExerciseClient$setUpdateCallback$listenerStub$1 $r5;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache $r6;
        kotlin.jvm.functions.Function0 $r7;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r8;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r9;
        androidx.health.services.client.impl.ServiceBackedExerciseClient$setUpdateCallback$1 $r10;
        com.google.common.util.concurrent.FutureCallback $r11;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.health.services.client.ExerciseUpdateCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        $r6 = <androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache INSTANCE>;

        $r5 = new androidx.health.services.client.impl.ServiceBackedExerciseClient$setUpdateCallback$listenerStub$1;

        specialinvoke $r5.<androidx.health.services.client.impl.ServiceBackedExerciseClient$setUpdateCallback$listenerStub$1: void <init>(androidx.health.services.client.impl.ServiceBackedExerciseClient)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r5;

        r3 = virtualinvoke $r6.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: androidx.health.services.client.impl.ExerciseUpdateListenerStub getOrCreate(androidx.health.services.client.ExerciseUpdateCallback,java.util.concurrent.Executor,kotlin.jvm.functions.Function0)>(r2, r1, $r7);

        $r8 = virtualinvoke r3.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.impl.ipc.internal.ListenerKey getListenerKey()>();

        $r9 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.ExerciseUpdateListenerStub)>(r0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void setUpdateCallback$lambda$10(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.ExerciseUpdateListenerStub,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        r4 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture registerListener(androidx.health.services.client.impl.ipc.internal.ListenerKey,androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r8, $r9);

        $r10 = new androidx.health.services.client.impl.ServiceBackedExerciseClient$setUpdateCallback$1;

        specialinvoke $r10.<androidx.health.services.client.impl.ServiceBackedExerciseClient$setUpdateCallback$1: void <init>(androidx.health.services.client.ExerciseUpdateCallback)>(r2);

        $r11 = (com.google.common.util.concurrent.FutureCallback) $r10;

        staticinvoke <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r4, $r11, r1);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture clearUpdateCallbackAsync(androidx.health.services.client.ExerciseUpdateCallback)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.ExerciseUpdateCallback r1;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r2, $r4;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache $r3;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r5;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r6;
        com.google.common.util.concurrent.ListenableFuture $r7, $r10;
        java.lang.IllegalArgumentException $r8;
        java.lang.Throwable $r9;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: androidx.health.services.client.ExerciseUpdateCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r3 = <androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: androidx.health.services.client.impl.ExerciseUpdateListenerStub remove(androidx.health.services.client.ExerciseUpdateCallback)>(r1);

        if $r4 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given listener was not added.");

        $r9 = (java.lang.Throwable) $r8;

        $r10 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>($r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "immediateFailedFuture(\n \u2026dded.\")\n                )");

        return $r10;

     label1:
        r2 = $r4;

        $r5 = virtualinvoke r2.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.impl.ipc.internal.ListenerKey getListenerKey()>();

        $r6 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.ExerciseUpdateListenerStub)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void clearUpdateCallbackAsync$lambda$11(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.ExerciseUpdateListenerStub,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r7 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture unregisterListener(androidx.health.services.client.impl.ipc.internal.ListenerKey,androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r5, $r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "unregisterListener(liste\u2026(resultFuture))\n        }");

        return $r7;
    }

    public com.google.common.util.concurrent.ListenableFuture addGoalToActiveExerciseAsync(androidx.health.services.client.data.ExerciseGoal)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.ExerciseGoal r1;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: androidx.health.services.client.data.ExerciseGoal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "exerciseGoal");

        $r2 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseGoal)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void addGoalToActiveExerciseAsync$lambda$12(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseGoal,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "execute { service, resul\u2026)\n            )\n        }");

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture removeGoalFromActiveExerciseAsync(androidx.health.services.client.data.ExerciseGoal)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.ExerciseGoal r1;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: androidx.health.services.client.data.ExerciseGoal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "exerciseGoal");

        $r2 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseGoal)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void removeGoalFromActiveExerciseAsync$lambda$13(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseGoal,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "execute { service, resul\u2026ltFuture)\n        )\n    }");

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture overrideAutoPauseAndResumeForActiveExerciseAsync(boolean)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        boolean z0;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        z0 := @parameter0: boolean;

        $r1 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient,boolean)>(r0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void overrideAutoPauseAndResumeForActiveExerciseAsync$lambda$14(androidx.health.services.client.impl.ServiceBackedExerciseClient,boolean,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r2 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "execute { service, resul\u2026ltFuture)\n        )\n    }");

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getCapabilitiesAsync()
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        com.google.common.util.concurrent.ListenableFuture r1, $r3;
        androidx.health.services.client.impl.ipc.RemoteOperation $r2;
        androidx.health.services.client.impl.ServiceBackedExerciseClient$getCapabilitiesAsync$2 $r4;
        kotlin.jvm.functions.Function1 $r5;
        com.google.common.base.Function $r6;
        android.content.Context $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r2 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse getCapabilitiesAsync$lambda$15(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.impl.IExerciseApiService)>, methodtype: androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService));

        $r3 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteOperation)>($r2);

        $r4 = <androidx.health.services.client.impl.ServiceBackedExerciseClient$getCapabilitiesAsync$2: androidx.health.services.client.impl.ServiceBackedExerciseClient$getCapabilitiesAsync$2 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = dynamicinvoke "apply" <com.google.common.base.Function (kotlin.jvm.functions.Function1)>($r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.data.ExerciseCapabilities getCapabilitiesAsync$lambda$16(kotlin.jvm.functions.Function1,java.lang.Object)>, methodtype: androidx.health.services.client.data.ExerciseCapabilities __METHODTYPE__(java.lang.Object));

        $r7 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: android.content.Context context>;

        $r8 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r7);

        r1 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)>($r3, $r6, $r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "transform(\n            e\u2026ecutor(context)\n        )");

        return r1;
    }

    public com.google.common.util.concurrent.ListenableFuture updateExerciseTypeConfigAsync(androidx.health.services.client.data.ExerciseTypeConfig)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.ExerciseTypeConfig r1;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter0: androidx.health.services.client.data.ExerciseTypeConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "exerciseTypeConfig");

        $r2 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseTypeConfig)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedExerciseClient: void updateExerciseTypeConfigAsync$lambda$17(androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseTypeConfig,androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IExerciseApiService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(androidx.health.services.client.impl.ipc.RemoteFutureOperation,int)>($r2, 3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "executeWithVersionCheck(\u2026,\n            3\n        )");

        return $r3;
    }

    private static final androidx.health.services.client.impl.IExerciseApiService _init_$lambda$0(android.os.IBinder)
    {
        android.os.IBinder r0;
        androidx.health.services.client.impl.IExerciseApiService $r1;

        r0 := @parameter0: android.os.IBinder;

        $r1 = staticinvoke <androidx.health.services.client.impl.IExerciseApiService$Stub: androidx.health.services.client.impl.IExerciseApiService asInterface(android.os.IBinder)>(r0);

        return $r1;
    }

    private static final java.lang.Integer _init_$lambda$1(androidx.health.services.client.impl.IExerciseApiService)
    {
        androidx.health.services.client.impl.IExerciseApiService r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @parameter0: androidx.health.services.client.impl.IExerciseApiService;

        $i0 = interfaceinvoke r0.<androidx.health.services.client.impl.IExerciseApiService: int getApiVersion()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    private static final void prepareExerciseAsync$lambda$2(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.data.WarmUpConfig, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.WarmUpConfig $r1;
        androidx.health.services.client.impl.IExerciseApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.request.PrepareExerciseRequest $r4;
        java.lang.String $r5;
        androidx.health.services.client.impl.ServiceBackedExerciseClient$prepareExerciseAsync$1$1 $r6;
        androidx.health.services.client.impl.internal.IStatusCallback $r7;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 := @parameter1: androidx.health.services.client.data.WarmUpConfig;

        r2 := @parameter2: androidx.health.services.client.impl.IExerciseApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$configuration");

        $r4 = new androidx.health.services.client.impl.request.PrepareExerciseRequest;

        $r5 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "packageName");

        specialinvoke $r4.<androidx.health.services.client.impl.request.PrepareExerciseRequest: void <init>(java.lang.String,androidx.health.services.client.data.WarmUpConfig)>($r5, $r1);

        $r6 = new androidx.health.services.client.impl.ServiceBackedExerciseClient$prepareExerciseAsync$1$1;

        specialinvoke $r6.<androidx.health.services.client.impl.ServiceBackedExerciseClient$prepareExerciseAsync$1$1: void <init>(com.google.common.util.concurrent.SettableFuture,androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.WarmUpConfig)>(r3, r0, $r1);

        $r7 = (androidx.health.services.client.impl.internal.IStatusCallback) $r6;

        interfaceinvoke r2.<androidx.health.services.client.impl.IExerciseApiService: void prepareExercise(androidx.health.services.client.impl.request.PrepareExerciseRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r7);

        return;
    }

    private static final void startExerciseAsync$lambda$3(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.data.ExerciseConfig, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.ExerciseConfig $r1;
        androidx.health.services.client.impl.IExerciseApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.request.StartExerciseRequest $r4;
        java.lang.String $r5;
        androidx.health.services.client.impl.ServiceBackedExerciseClient$startExerciseAsync$1$1 $r6;
        androidx.health.services.client.impl.internal.IStatusCallback $r7;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 := @parameter1: androidx.health.services.client.data.ExerciseConfig;

        r2 := @parameter2: androidx.health.services.client.impl.IExerciseApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$configuration");

        $r4 = new androidx.health.services.client.impl.request.StartExerciseRequest;

        $r5 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "packageName");

        specialinvoke $r4.<androidx.health.services.client.impl.request.StartExerciseRequest: void <init>(java.lang.String,androidx.health.services.client.data.ExerciseConfig)>($r5, $r1);

        $r6 = new androidx.health.services.client.impl.ServiceBackedExerciseClient$startExerciseAsync$1$1;

        specialinvoke $r6.<androidx.health.services.client.impl.ServiceBackedExerciseClient$startExerciseAsync$1$1: void <init>(com.google.common.util.concurrent.SettableFuture,androidx.health.services.client.impl.ServiceBackedExerciseClient,androidx.health.services.client.data.ExerciseConfig)>(r3, r0, $r1);

        $r7 = (androidx.health.services.client.impl.internal.IStatusCallback) $r6;

        interfaceinvoke r2.<androidx.health.services.client.impl.IExerciseApiService: void startExercise(androidx.health.services.client.impl.request.StartExerciseRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r7);

        return;
    }

    private static final void pauseExerciseAsync$lambda$4(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.IExerciseApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.IStatusCallback $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter1: androidx.health.services.client.impl.IExerciseApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IExerciseApiService: void pauseExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r5);

        return;
    }

    private static final void resumeExerciseAsync$lambda$5(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.IExerciseApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.IStatusCallback $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter1: androidx.health.services.client.impl.IExerciseApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IExerciseApiService: void resumeExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r5);

        return;
    }

    private static final void endExerciseAsync$lambda$6(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.IExerciseApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.IStatusCallback $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter1: androidx.health.services.client.impl.IExerciseApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IExerciseApiService: void endExercise(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r5);

        return;
    }

    private static final void flushAsync$lambda$7(androidx.health.services.client.impl.request.FlushRequest, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.request.FlushRequest $r0;
        androidx.health.services.client.impl.IExerciseApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        androidx.health.services.client.impl.internal.IStatusCallback $r4;

        $r0 := @parameter0: androidx.health.services.client.impl.request.FlushRequest;

        r1 := @parameter1: androidx.health.services.client.impl.IExerciseApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$request");

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r4 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IExerciseApiService: void flushExercise(androidx.health.services.client.impl.request.FlushRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r0, $r4);

        return;
    }

    private static final void markLapAsync$lambda$8(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.IExerciseApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.IStatusCallback $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter1: androidx.health.services.client.impl.IExerciseApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IExerciseApiService: void markLap(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r5);

        return;
    }

    private static final void getCurrentExerciseInfoAsync$lambda$9(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.IExerciseApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.ExerciseInfoCallback $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.IExerciseInfoCallback $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter1: androidx.health.services.client.impl.IExerciseApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        $r3 = new androidx.health.services.client.impl.internal.ExerciseInfoCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.ExerciseInfoCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.services.client.impl.internal.IExerciseInfoCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IExerciseApiService: void getCurrentExerciseInfo(java.lang.String,androidx.health.services.client.impl.internal.IExerciseInfoCallback)>($r4, $r5);

        return;
    }

    private static final void setUpdateCallback$lambda$10(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.impl.ExerciseUpdateListenerStub, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub $r1;
        androidx.health.services.client.impl.IExerciseApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.internal.StatusCallback $r4;
        java.lang.String $r5;
        androidx.health.services.client.impl.IExerciseUpdateListener $r6;
        androidx.health.services.client.impl.internal.IStatusCallback $r7;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 := @parameter1: androidx.health.services.client.impl.ExerciseUpdateListenerStub;

        r2 := @parameter2: androidx.health.services.client.impl.IExerciseApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$listenerStub");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "result");

        $r5 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        $r6 = (androidx.health.services.client.impl.IExerciseUpdateListener) $r1;

        $r4 = new androidx.health.services.client.impl.internal.StatusCallback;

        specialinvoke $r4.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r7 = (androidx.health.services.client.impl.internal.IStatusCallback) $r4;

        interfaceinvoke r2.<androidx.health.services.client.impl.IExerciseApiService: void setUpdateListener(java.lang.String,androidx.health.services.client.impl.IExerciseUpdateListener,androidx.health.services.client.impl.internal.IStatusCallback)>($r5, $r6, $r7);

        return;
    }

    private static final void clearUpdateCallbackAsync$lambda$11(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.impl.ExerciseUpdateListenerStub, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub $r1;
        androidx.health.services.client.impl.IExerciseApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.internal.StatusCallback $r4;
        java.lang.String $r5;
        androidx.health.services.client.impl.IExerciseUpdateListener $r6;
        androidx.health.services.client.impl.internal.IStatusCallback $r7;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 := @parameter1: androidx.health.services.client.impl.ExerciseUpdateListenerStub;

        r2 := @parameter2: androidx.health.services.client.impl.IExerciseApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$listenerStub");

        $r5 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        $r6 = (androidx.health.services.client.impl.IExerciseUpdateListener) $r1;

        $r4 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r4.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r7 = (androidx.health.services.client.impl.internal.IStatusCallback) $r4;

        interfaceinvoke r2.<androidx.health.services.client.impl.IExerciseApiService: void clearUpdateListener(java.lang.String,androidx.health.services.client.impl.IExerciseUpdateListener,androidx.health.services.client.impl.internal.IStatusCallback)>($r5, $r6, $r7);

        return;
    }

    private static final void addGoalToActiveExerciseAsync$lambda$12(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.data.ExerciseGoal, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.ExerciseGoal $r1;
        androidx.health.services.client.impl.IExerciseApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.request.ExerciseGoalRequest $r4;
        java.lang.String $r5;
        androidx.health.services.client.impl.internal.StatusCallback $r6;
        androidx.health.services.client.impl.internal.IStatusCallback $r7;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 := @parameter1: androidx.health.services.client.data.ExerciseGoal;

        r2 := @parameter2: androidx.health.services.client.impl.IExerciseApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$exerciseGoal");

        $r4 = new androidx.health.services.client.impl.request.ExerciseGoalRequest;

        $r5 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "packageName");

        specialinvoke $r4.<androidx.health.services.client.impl.request.ExerciseGoalRequest: void <init>(java.lang.String,androidx.health.services.client.data.ExerciseGoal)>($r5, $r1);

        $r6 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r6.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r7 = (androidx.health.services.client.impl.internal.IStatusCallback) $r6;

        interfaceinvoke r2.<androidx.health.services.client.impl.IExerciseApiService: void addGoalToActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r7);

        return;
    }

    private static final void removeGoalFromActiveExerciseAsync$lambda$13(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.data.ExerciseGoal, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.ExerciseGoal $r1;
        androidx.health.services.client.impl.IExerciseApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.request.ExerciseGoalRequest $r4;
        java.lang.String $r5;
        androidx.health.services.client.impl.internal.StatusCallback $r6;
        androidx.health.services.client.impl.internal.IStatusCallback $r7;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 := @parameter1: androidx.health.services.client.data.ExerciseGoal;

        r2 := @parameter2: androidx.health.services.client.impl.IExerciseApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$exerciseGoal");

        $r4 = new androidx.health.services.client.impl.request.ExerciseGoalRequest;

        $r5 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "packageName");

        specialinvoke $r4.<androidx.health.services.client.impl.request.ExerciseGoalRequest: void <init>(java.lang.String,androidx.health.services.client.data.ExerciseGoal)>($r5, $r1);

        $r6 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r6.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r7 = (androidx.health.services.client.impl.internal.IStatusCallback) $r6;

        interfaceinvoke r2.<androidx.health.services.client.impl.IExerciseApiService: void removeGoalFromActiveExercise(androidx.health.services.client.impl.request.ExerciseGoalRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r7);

        return;
    }

    private static final void overrideAutoPauseAndResumeForActiveExerciseAsync$lambda$14(androidx.health.services.client.impl.ServiceBackedExerciseClient, boolean, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        boolean $z0;
        androidx.health.services.client.impl.IExerciseApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.StatusCallback $r5;
        androidx.health.services.client.impl.internal.IStatusCallback $r6;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $z0 := @parameter1: boolean;

        r1 := @parameter2: androidx.health.services.client.impl.IExerciseApiService;

        r2 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r3 = new androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest;

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "packageName");

        specialinvoke $r3.<androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest: void <init>(java.lang.String,boolean)>($r4, $z0);

        $r5 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r5.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r6 = (androidx.health.services.client.impl.internal.IStatusCallback) $r5;

        interfaceinvoke r1.<androidx.health.services.client.impl.IExerciseApiService: void overrideAutoPauseAndResumeForActiveExercise(androidx.health.services.client.impl.request.AutoPauseAndResumeConfigRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r3, $r6);

        return;
    }

    private static final androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse getCapabilitiesAsync$lambda$15(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.impl.IExerciseApiService)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.impl.IExerciseApiService r1;
        androidx.health.services.client.impl.request.CapabilitiesRequest $r2;
        java.lang.String $r3;
        androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse $r4;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        r1 := @parameter1: androidx.health.services.client.impl.IExerciseApiService;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r2 = new androidx.health.services.client.impl.request.CapabilitiesRequest;

        $r3 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "packageName");

        specialinvoke $r2.<androidx.health.services.client.impl.request.CapabilitiesRequest: void <init>(java.lang.String)>($r3);

        $r4 = interfaceinvoke r1.<androidx.health.services.client.impl.IExerciseApiService: androidx.health.services.client.impl.response.ExerciseCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest)>($r2);

        return $r4;
    }

    private static final androidx.health.services.client.data.ExerciseCapabilities getCapabilitiesAsync$lambda$16(kotlin.jvm.functions.Function1, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object r1, $r2;
        androidx.health.services.client.data.ExerciseCapabilities $r3;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$tmp0");

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r3 = (androidx.health.services.client.data.ExerciseCapabilities) $r2;

        return $r3;
    }

    private static final void updateExerciseTypeConfigAsync$lambda$17(androidx.health.services.client.impl.ServiceBackedExerciseClient, androidx.health.services.client.data.ExerciseTypeConfig, androidx.health.services.client.impl.IExerciseApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient r0;
        androidx.health.services.client.data.ExerciseTypeConfig $r1;
        androidx.health.services.client.impl.IExerciseApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest $r4;
        java.lang.String $r5;
        androidx.health.services.client.impl.internal.StatusCallback $r6;
        androidx.health.services.client.impl.internal.IStatusCallback $r7;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 := @parameter1: androidx.health.services.client.data.ExerciseTypeConfig;

        r2 := @parameter2: androidx.health.services.client.impl.IExerciseApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$exerciseTypeConfig");

        $r4 = new androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest;

        $r5 = r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "packageName");

        specialinvoke $r4.<androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest: void <init>(java.lang.String,androidx.health.services.client.data.ExerciseTypeConfig)>($r5, $r1);

        $r6 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r6.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r7 = (androidx.health.services.client.impl.internal.IStatusCallback) $r6;

        interfaceinvoke r2.<androidx.health.services.client.impl.IExerciseApiService: void updateExerciseTypeConfigForActiveExercise(androidx.health.services.client.impl.request.UpdateExerciseTypeConfigRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r7);

        return;
    }

    public static final java.lang.Object access$getRequestedDataTypesLock$p(androidx.health.services.client.impl.ServiceBackedExerciseClient)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 = $r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.lang.Object requestedDataTypesLock>;

        return $r1;
    }

    public static final java.util.Set access$getRequestedDataTypes$p(androidx.health.services.client.impl.ServiceBackedExerciseClient)
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient $r0;
        java.util.Set $r1;

        $r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedExerciseClient;

        $r1 = $r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient: java.util.Set requestedDataTypes>;

        return $r1;
    }

    public static final androidx.health.services.client.impl.ipc.ClientConfiguration access$getCLIENT_CONFIGURATION$cp()
    {
        androidx.health.services.client.impl.ipc.ClientConfiguration $r0;

        $r0 = <androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.health.services.client.impl.ServiceBackedExerciseClient$Companion $r0;
        androidx.health.services.client.impl.ipc.ClientConfiguration $r1;

        $r0 = new androidx.health.services.client.impl.ServiceBackedExerciseClient$Companion;

        specialinvoke $r0.<androidx.health.services.client.impl.ServiceBackedExerciseClient$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.impl.ServiceBackedExerciseClient$Companion Companion> = $r0;

        $r1 = new androidx.health.services.client.impl.ipc.ClientConfiguration;

        specialinvoke $r1.<androidx.health.services.client.impl.ipc.ClientConfiguration: void <init>(java.lang.String,java.lang.String,java.lang.String)>("HealthServicesExerciseClient", "com.google.android.wearable.healthservices", "hs.exerciseclient.BIND");

        <androidx.health.services.client.impl.ServiceBackedExerciseClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION> = $r1;

        return;
    }

