androidx.media3.extractor.ogg.StreamReader
<androidx.media3.extractor.ogg.StreamReader: int STATE_READ_HEADERS>
<androidx.media3.extractor.ogg.StreamReader: int STATE_SKIP_HEADERS>
<androidx.media3.extractor.ogg.StreamReader: int STATE_READ_PAYLOAD>
<androidx.media3.extractor.ogg.StreamReader: int STATE_END_OF_INPUT>
<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket>
<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.TrackOutput trackOutput>
<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ExtractorOutput extractorOutput>
<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggSeeker oggSeeker>
<androidx.media3.extractor.ogg.StreamReader: long targetGranule>
<androidx.media3.extractor.ogg.StreamReader: long payloadStartPosition>
<androidx.media3.extractor.ogg.StreamReader: long currentGranule>
<androidx.media3.extractor.ogg.StreamReader: int state>
<androidx.media3.extractor.ogg.StreamReader: int sampleRate>
<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.StreamReader$SetupData setupData>
<androidx.media3.extractor.ogg.StreamReader: long lengthOfReadPacket>
<androidx.media3.extractor.ogg.StreamReader: boolean seekMapSet>
<androidx.media3.extractor.ogg.StreamReader: boolean formatSet>
    public void <init>()
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        androidx.media3.extractor.ogg.OggPacket $r1;
        androidx.media3.extractor.ogg.StreamReader$SetupData $r2;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.media3.extractor.ogg.OggPacket;

        specialinvoke $r1.<androidx.media3.extractor.ogg.OggPacket: void <init>()>();

        r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket> = $r1;

        $r2 = new androidx.media3.extractor.ogg.StreamReader$SetupData;

        specialinvoke $r2.<androidx.media3.extractor.ogg.StreamReader$SetupData: void <init>()>();

        r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.StreamReader$SetupData setupData> = $r2;

        return;
    }

    void init(androidx.media3.extractor.ExtractorOutput, androidx.media3.extractor.TrackOutput)
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        androidx.media3.extractor.ExtractorOutput r1;
        androidx.media3.extractor.TrackOutput r2;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r2 := @parameter1: androidx.media3.extractor.TrackOutput;

        r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ExtractorOutput extractorOutput> = r1;

        r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.TrackOutput trackOutput> = r2;

        virtualinvoke r0.<androidx.media3.extractor.ogg.StreamReader: void reset(boolean)>(1);

        return;
    }

    protected void reset(boolean)
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        boolean z0;
        androidx.media3.extractor.ogg.StreamReader$SetupData $r1;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new androidx.media3.extractor.ogg.StreamReader$SetupData;

        specialinvoke $r1.<androidx.media3.extractor.ogg.StreamReader$SetupData: void <init>()>();

        r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.StreamReader$SetupData setupData> = $r1;

        r0.<androidx.media3.extractor.ogg.StreamReader: long payloadStartPosition> = 0L;

        r0.<androidx.media3.extractor.ogg.StreamReader: int state> = 0;

        goto label2;

     label1:
        r0.<androidx.media3.extractor.ogg.StreamReader: int state> = 1;

     label2:
        r0.<androidx.media3.extractor.ogg.StreamReader: long targetGranule> = -1L;

        r0.<androidx.media3.extractor.ogg.StreamReader: long currentGranule> = 0L;

        return;
    }

    final void seek(long, long)
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        long l0, l1, $l4, $l5;
        androidx.media3.extractor.ogg.OggPacket $r1;
        byte $b2;
        int $i3;
        androidx.media3.extractor.ogg.OggSeeker $r2, $r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket>;

        virtualinvoke $r1.<androidx.media3.extractor.ogg.OggPacket: void reset()>();

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label3;

        $z0 = r0.<androidx.media3.extractor.ogg.StreamReader: boolean seekMapSet>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<androidx.media3.extractor.ogg.StreamReader: void reset(boolean)>($z1);

        goto label4;

     label3:
        $i3 = r0.<androidx.media3.extractor.ogg.StreamReader: int state>;

        if $i3 == 0 goto label4;

        $l4 = virtualinvoke r0.<androidx.media3.extractor.ogg.StreamReader: long convertTimeToGranule(long)>(l1);

        r0.<androidx.media3.extractor.ogg.StreamReader: long targetGranule> = $l4;

        $r2 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggSeeker oggSeeker>;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r2);

        $r4 = (androidx.media3.extractor.ogg.OggSeeker) $r3;

        $l5 = r0.<androidx.media3.extractor.ogg.StreamReader: long targetGranule>;

        interfaceinvoke $r4.<androidx.media3.extractor.ogg.OggSeeker: void startSeek(long)>($l5);

        r0.<androidx.media3.extractor.ogg.StreamReader: int state> = 2;

     label4:
        return;
    }

    final int read(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        int $i0, $i1, $i3, $i4;
        androidx.media3.extractor.ogg.OggSeeker $r3;
        long $l2;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        specialinvoke r0.<androidx.media3.extractor.ogg.StreamReader: void assertInitialized()>();

        $i0 = r0.<androidx.media3.extractor.ogg.StreamReader: int state>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        $i4 = specialinvoke r0.<androidx.media3.extractor.ogg.StreamReader: int readHeadersAndUpdateState(androidx.media3.extractor.ExtractorInput)>(r1);

        return $i4;

     label2:
        $l2 = r0.<androidx.media3.extractor.ogg.StreamReader: long payloadStartPosition>;

        $i3 = (int) $l2;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i3);

        r0.<androidx.media3.extractor.ogg.StreamReader: int state> = 2;

        return 0;

     label3:
        $r3 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggSeeker oggSeeker>;

        staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        $i1 = specialinvoke r0.<androidx.media3.extractor.ogg.StreamReader: int readPayload(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder)>(r1, r2);

        return $i1;

     label4:
        return -1;

     label5:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;
    }

    private void assertInitialized()
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        androidx.media3.extractor.TrackOutput $r1;
        androidx.media3.extractor.ExtractorOutput $r3;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        $r1 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.TrackOutput trackOutput>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        return;
    }

    private boolean readHeaders(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.ogg.OggPacket $r2, $r3;
        boolean $z0, $z1;
        long $l0, $l1, $l2, $l3, $l4;
        androidx.media3.common.util.ParsableByteArray $r4;
        androidx.media3.extractor.ogg.StreamReader$SetupData $r5;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

     label1:
        $r2 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket>;

        $z0 = virtualinvoke $r2.<androidx.media3.extractor.ogg.OggPacket: boolean populate(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z0 != 0 goto label2;

        r0.<androidx.media3.extractor.ogg.StreamReader: int state> = 3;

        return 0;

     label2:
        $l0 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l1 = r0.<androidx.media3.extractor.ogg.StreamReader: long payloadStartPosition>;

        $l2 = $l0 - $l1;

        r0.<androidx.media3.extractor.ogg.StreamReader: long lengthOfReadPacket> = $l2;

        $r3 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket>;

        $r4 = virtualinvoke $r3.<androidx.media3.extractor.ogg.OggPacket: androidx.media3.common.util.ParsableByteArray getPayload()>();

        $l3 = r0.<androidx.media3.extractor.ogg.StreamReader: long payloadStartPosition>;

        $r5 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.StreamReader$SetupData setupData>;

        $z1 = virtualinvoke r0.<androidx.media3.extractor.ogg.StreamReader: boolean readHeaders(androidx.media3.common.util.ParsableByteArray,long,androidx.media3.extractor.ogg.StreamReader$SetupData)>($r4, $l3, $r5);

        if $z1 == 0 goto label3;

        $l4 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        r0.<androidx.media3.extractor.ogg.StreamReader: long payloadStartPosition> = $l4;

        goto label1;

     label3:
        return 1;
    }

    private int readHeadersAndUpdateState(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.ogg.OggPageHeader r2;
        boolean z0, $z1, $z2, $z3;
        androidx.media3.extractor.ogg.StreamReader$SetupData $r3, $r5, $r10, $r12;
        androidx.media3.common.Format $r4, $r13;
        int $i0, $i3, $i4, $i7, $i8, $i9;
        androidx.media3.extractor.ogg.OggSeeker $r6, $r11;
        long $l1, $l5, $l6, $l10, $l11;
        byte $b2;
        androidx.media3.extractor.ogg.OggPacket $r7, $r15;
        androidx.media3.extractor.ogg.DefaultOggSeeker $r8;
        androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker $r9;
        androidx.media3.extractor.TrackOutput $r14;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $z1 = specialinvoke r0.<androidx.media3.extractor.ogg.StreamReader: boolean readHeaders(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z1 != 0 goto label1;

        return -1;

     label1:
        $r3 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.StreamReader$SetupData setupData>;

        $r4 = $r3.<androidx.media3.extractor.ogg.StreamReader$SetupData: androidx.media3.common.Format format>;

        $i0 = $r4.<androidx.media3.common.Format: int sampleRate>;

        r0.<androidx.media3.extractor.ogg.StreamReader: int sampleRate> = $i0;

        $z2 = r0.<androidx.media3.extractor.ogg.StreamReader: boolean formatSet>;

        if $z2 != 0 goto label2;

        $r14 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.TrackOutput trackOutput>;

        $r12 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.StreamReader$SetupData setupData>;

        $r13 = $r12.<androidx.media3.extractor.ogg.StreamReader$SetupData: androidx.media3.common.Format format>;

        interfaceinvoke $r14.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r13);

        r0.<androidx.media3.extractor.ogg.StreamReader: boolean formatSet> = 1;

     label2:
        $r5 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.StreamReader$SetupData setupData>;

        $r6 = $r5.<androidx.media3.extractor.ogg.StreamReader$SetupData: androidx.media3.extractor.ogg.OggSeeker oggSeeker>;

        if $r6 == null goto label3;

        $r10 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.StreamReader$SetupData setupData>;

        $r11 = $r10.<androidx.media3.extractor.ogg.StreamReader$SetupData: androidx.media3.extractor.ogg.OggSeeker oggSeeker>;

        r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggSeeker oggSeeker> = $r11;

        goto label7;

     label3:
        $l1 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getLength()>();

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label4;

        $r9 = new androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker;

        specialinvoke $r9.<androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker: void <init>(androidx.media3.extractor.ogg.StreamReader$1)>(null);

        r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggSeeker oggSeeker> = $r9;

        goto label7;

     label4:
        $r7 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket>;

        r2 = virtualinvoke $r7.<androidx.media3.extractor.ogg.OggPacket: androidx.media3.extractor.ogg.OggPageHeader getPageHeader()>();

        $i3 = r2.<androidx.media3.extractor.ogg.OggPageHeader: int type>;

        $i4 = $i3 & 4;

        if $i4 == 0 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        z0 = $z3;

        $r8 = new androidx.media3.extractor.ogg.DefaultOggSeeker;

        $l5 = r0.<androidx.media3.extractor.ogg.StreamReader: long payloadStartPosition>;

        $l6 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getLength()>();

        $i8 = r2.<androidx.media3.extractor.ogg.OggPageHeader: int headerSize>;

        $i7 = r2.<androidx.media3.extractor.ogg.OggPageHeader: int bodySize>;

        $i9 = $i8 + $i7;

        $l11 = (long) $i9;

        $l10 = r2.<androidx.media3.extractor.ogg.OggPageHeader: long granulePosition>;

        specialinvoke $r8.<androidx.media3.extractor.ogg.DefaultOggSeeker: void <init>(androidx.media3.extractor.ogg.StreamReader,long,long,long,long,boolean)>(r0, $l5, $l6, $l11, $l10, z0);

        r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggSeeker oggSeeker> = $r8;

     label7:
        r0.<androidx.media3.extractor.ogg.StreamReader: int state> = 2;

        $r15 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket>;

        virtualinvoke $r15.<androidx.media3.extractor.ogg.OggPacket: void trimPayload()>();

        return 0;
    }

    private int readPayload(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        long l0, l1, l2, $l5, $l8, $l9, $l10, $l12, $l15, $l16, $l17, $l18;
        androidx.media3.extractor.ogg.OggSeeker $r3, $r8;
        byte $b3, $b4, $b6, $b7, $b11;
        boolean $z0, $z1;
        androidx.media3.extractor.ogg.OggPacket $r4, $r7;
        androidx.media3.extractor.TrackOutput $r5, $r6;
        int $i13, $i14;
        androidx.media3.extractor.SeekMap $r9, r12;
        java.lang.Object $r10;
        androidx.media3.extractor.ExtractorOutput $r11;
        androidx.media3.common.util.ParsableByteArray r13;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        $r3 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggSeeker oggSeeker>;

        l0 = interfaceinvoke $r3.<androidx.media3.extractor.ogg.OggSeeker: long read(androidx.media3.extractor.ExtractorInput)>(r1);

        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label1;

        r2.<androidx.media3.extractor.PositionHolder: long position> = l0;

        return 1;

     label1:
        $b4 = l0 cmp -1L;

        if $b4 >= 0 goto label2;

        $l15 = l0 + 2L;

        $l16 = neg $l15;

        virtualinvoke r0.<androidx.media3.extractor.ogg.StreamReader: void onSeekEnd(long)>($l16);

     label2:
        $z0 = r0.<androidx.media3.extractor.ogg.StreamReader: boolean seekMapSet>;

        if $z0 != 0 goto label3;

        $r8 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggSeeker oggSeeker>;

        $r9 = interfaceinvoke $r8.<androidx.media3.extractor.ogg.OggSeeker: androidx.media3.extractor.SeekMap createSeekMap()>();

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r9);

        r12 = (androidx.media3.extractor.SeekMap) $r10;

        $r11 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        interfaceinvoke $r11.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>(r12);

        r0.<androidx.media3.extractor.ogg.StreamReader: boolean seekMapSet> = 1;

     label3:
        $l5 = r0.<androidx.media3.extractor.ogg.StreamReader: long lengthOfReadPacket>;

        $b6 = $l5 cmp 0L;

        if $b6 > 0 goto label4;

        $r7 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket>;

        $z1 = virtualinvoke $r7.<androidx.media3.extractor.ogg.OggPacket: boolean populate(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z1 == 0 goto label6;

     label4:
        r0.<androidx.media3.extractor.ogg.StreamReader: long lengthOfReadPacket> = 0L;

        $r4 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.ogg.OggPacket oggPacket>;

        r13 = virtualinvoke $r4.<androidx.media3.extractor.ogg.OggPacket: androidx.media3.common.util.ParsableByteArray getPayload()>();

        l1 = virtualinvoke r0.<androidx.media3.extractor.ogg.StreamReader: long preparePayload(androidx.media3.common.util.ParsableByteArray)>(r13);

        $b7 = l1 cmp 0L;

        if $b7 < 0 goto label5;

        $l8 = r0.<androidx.media3.extractor.ogg.StreamReader: long currentGranule>;

        $l10 = $l8 + l1;

        $l9 = r0.<androidx.media3.extractor.ogg.StreamReader: long targetGranule>;

        $b11 = $l10 cmp $l9;

        if $b11 < 0 goto label5;

        $l12 = r0.<androidx.media3.extractor.ogg.StreamReader: long currentGranule>;

        l2 = virtualinvoke r0.<androidx.media3.extractor.ogg.StreamReader: long convertGranuleToTime(long)>($l12);

        $r5 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.TrackOutput trackOutput>;

        $i13 = virtualinvoke r13.<androidx.media3.common.util.ParsableByteArray: int limit()>();

        interfaceinvoke $r5.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>(r13, $i13);

        $r6 = r0.<androidx.media3.extractor.ogg.StreamReader: androidx.media3.extractor.TrackOutput trackOutput>;

        $i14 = virtualinvoke r13.<androidx.media3.common.util.ParsableByteArray: int limit()>();

        interfaceinvoke $r6.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>(l2, 1, $i14, 0, null);

        r0.<androidx.media3.extractor.ogg.StreamReader: long targetGranule> = -1L;

     label5:
        $l17 = r0.<androidx.media3.extractor.ogg.StreamReader: long currentGranule>;

        $l18 = $l17 + l1;

        r0.<androidx.media3.extractor.ogg.StreamReader: long currentGranule> = $l18;

        goto label7;

     label6:
        r0.<androidx.media3.extractor.ogg.StreamReader: int state> = 3;

        return -1;

     label7:
        return 0;
    }

    protected long convertGranuleToTime(long)
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        long l0, $l2, $l3, $l4;
        int $i1;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        l0 := @parameter0: long;

        $l3 = l0 * 1000000L;

        $i1 = r0.<androidx.media3.extractor.ogg.StreamReader: int sampleRate>;

        $l2 = (long) $i1;

        $l4 = $l3 / $l2;

        return $l4;
    }

    protected long convertTimeToGranule(long)
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        long l0, $l2, $l3, $l4;
        int $i1;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        l0 := @parameter0: long;

        $i1 = r0.<androidx.media3.extractor.ogg.StreamReader: int sampleRate>;

        $l2 = (long) $i1;

        $l3 = $l2 * l0;

        $l4 = $l3 / 1000000L;

        return $l4;
    }

<androidx.media3.extractor.ogg.StreamReader: long preparePayload(androidx.media3.common.util.ParsableByteArray)>
<androidx.media3.extractor.ogg.StreamReader: boolean readHeaders(androidx.media3.common.util.ParsableByteArray,long,androidx.media3.extractor.ogg.StreamReader$SetupData)>
    protected void onSeekEnd(long)
    {
        androidx.media3.extractor.ogg.StreamReader r0;
        long l0;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader;

        l0 := @parameter0: long;

        r0.<androidx.media3.extractor.ogg.StreamReader: long currentGranule> = l0;

        return;
    }

androidx.media3.extractor.ogg.StreamReader$1
androidx.media3.extractor.ogg.StreamReader$SetupData
<androidx.media3.extractor.ogg.StreamReader$SetupData: androidx.media3.common.Format format>
<androidx.media3.extractor.ogg.StreamReader$SetupData: androidx.media3.extractor.ogg.OggSeeker oggSeeker>
    void <init>()
    {
        androidx.media3.extractor.ogg.StreamReader$SetupData r0;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader$SetupData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker
    private void <init>()
    {
        androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker r0;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long read(androidx.media3.extractor.ExtractorInput)
    {
        androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker r0;
        androidx.media3.extractor.ExtractorInput r1;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        return -1L;
    }

    public void startSeek(long)
    {
        androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker r0;
        long l0;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker;

        l0 := @parameter0: long;

        return;
    }

    public androidx.media3.extractor.SeekMap createSeekMap()
    {
        androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker r0;
        androidx.media3.extractor.SeekMap$Unseekable $r1;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker;

        $r1 = new androidx.media3.extractor.SeekMap$Unseekable;

        specialinvoke $r1.<androidx.media3.extractor.SeekMap$Unseekable: void <init>(long)>(-9223372036854775807L);

        return $r1;
    }

    void <init>(androidx.media3.extractor.ogg.StreamReader$1)
    {
        androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker r0;
        androidx.media3.extractor.ogg.StreamReader$1 r1;

        r0 := @this: androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker;

        r1 := @parameter0: androidx.media3.extractor.ogg.StreamReader$1;

        specialinvoke r0.<androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker: void <init>()>();

        return;
    }

