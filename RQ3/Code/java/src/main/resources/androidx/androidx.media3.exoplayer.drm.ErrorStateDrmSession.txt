androidx.media3.exoplayer.drm.ErrorStateDrmSession
<androidx.media3.exoplayer.drm.ErrorStateDrmSession: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException error>
    public void <init>(androidx.media3.exoplayer.drm.DrmSession$DrmSessionException)
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;
        androidx.media3.exoplayer.drm.DrmSession$DrmSessionException r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.media3.exoplayer.drm.DrmSession$DrmSessionException) $r2;

        r0.<androidx.media3.exoplayer.drm.ErrorStateDrmSession: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException error> = $r3;

        return;
    }

    public int getState()
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        return 1;
    }

    public boolean playClearSamplesWithoutKeys()
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        return 0;
    }

    public androidx.media3.exoplayer.drm.DrmSession$DrmSessionException getError()
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;
        androidx.media3.exoplayer.drm.DrmSession$DrmSessionException $r1;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        $r1 = r0.<androidx.media3.exoplayer.drm.ErrorStateDrmSession: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException error>;

        return $r1;
    }

    public final java.util.UUID getSchemeUuid()
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;
        java.util.UUID $r1;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        $r1 = <androidx.media3.common.C: java.util.UUID UUID_NIL>;

        return $r1;
    }

    public androidx.media3.decoder.CryptoConfig getCryptoConfig()
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        return null;
    }

    public java.util.Map queryKeyStatus()
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        return null;
    }

    public byte[] getOfflineLicenseKeySetId()
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        return null;
    }

    public boolean requiresSecureDecoder(java.lang.String)
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void acquire(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r1;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        return;
    }

    public void release(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)
    {
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r1;

        r0 := @this: androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        return;
    }

