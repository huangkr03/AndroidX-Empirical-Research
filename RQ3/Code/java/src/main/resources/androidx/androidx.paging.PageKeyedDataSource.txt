androidx.paging.PageKeyedDataSource
<androidx.paging.PageKeyedDataSource: boolean supportsPageDropping>
    public void <init>()
    {
        androidx.paging.PageKeyedDataSource r0;
        androidx.paging.DataSource$KeyType $r1;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        $r1 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType PAGE_KEYED>;

        specialinvoke r0.<androidx.paging.DataSource: void <init>(androidx.paging.DataSource$KeyType)>($r1);

        return;
    }

    public final java.lang.Object load$paging_common(androidx.paging.DataSource$Params, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageKeyedDataSource r0;
        androidx.paging.DataSource$Params r1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.LoadType $r3, $r4, $r6, $r7, $r8, $r9, $r11;
        java.lang.Object $r5, $r14, $r15, $r17, $r18, $r22;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r12;
        androidx.paging.PageKeyedDataSource$LoadParams $r13, $r16;
        int $i0, $i1, $i2;
        androidx.paging.DataSource$BaseResult$Companion $r19;
        androidx.paging.DataSource$BaseResult $r20;
        androidx.paging.PageKeyedDataSource$LoadInitialParams $r21;
        boolean $z0;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: androidx.paging.DataSource$Params;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r1.<androidx.paging.DataSource$Params: androidx.paging.LoadType getType$paging_common()>();

        $r4 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if $r3 != $r4 goto label1;

        $r21 = new androidx.paging.PageKeyedDataSource$LoadInitialParams;

        $i2 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getInitialLoadSize()>();

        $z0 = virtualinvoke r1.<androidx.paging.DataSource$Params: boolean getPlaceholdersEnabled()>();

        specialinvoke $r21.<androidx.paging.PageKeyedDataSource$LoadInitialParams: void <init>(int,boolean)>($i2, $z0);

        $r22 = specialinvoke r0.<androidx.paging.PageKeyedDataSource: java.lang.Object loadInitial(androidx.paging.PageKeyedDataSource$LoadInitialParams,kotlin.coroutines.Continuation)>($r21, $r2);

        return $r22;

     label1:
        $r5 = virtualinvoke r1.<androidx.paging.DataSource$Params: java.lang.Object getKey()>();

        if $r5 != null goto label2;

        $r19 = <androidx.paging.DataSource$BaseResult: androidx.paging.DataSource$BaseResult$Companion Companion>;

        $r20 = virtualinvoke $r19.<androidx.paging.DataSource$BaseResult$Companion: androidx.paging.DataSource$BaseResult empty$paging_common()>();

        goto label5;

     label2:
        $r6 = virtualinvoke r1.<androidx.paging.DataSource$Params: androidx.paging.LoadType getType$paging_common()>();

        $r7 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        if $r6 != $r7 goto label3;

        $r16 = new androidx.paging.PageKeyedDataSource$LoadParams;

        $r17 = virtualinvoke r1.<androidx.paging.DataSource$Params: java.lang.Object getKey()>();

        $i1 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getPageSize()>();

        specialinvoke $r16.<androidx.paging.PageKeyedDataSource$LoadParams: void <init>(java.lang.Object,int)>($r17, $i1);

        $r18 = specialinvoke r0.<androidx.paging.PageKeyedDataSource: java.lang.Object loadBefore(androidx.paging.PageKeyedDataSource$LoadParams,kotlin.coroutines.Continuation)>($r16, $r2);

        return $r18;

     label3:
        $r8 = virtualinvoke r1.<androidx.paging.DataSource$Params: androidx.paging.LoadType getType$paging_common()>();

        $r9 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        if $r8 != $r9 goto label4;

        $r13 = new androidx.paging.PageKeyedDataSource$LoadParams;

        $r14 = virtualinvoke r1.<androidx.paging.DataSource$Params: java.lang.Object getKey()>();

        $i0 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getPageSize()>();

        specialinvoke $r13.<androidx.paging.PageKeyedDataSource$LoadParams: void <init>(java.lang.Object,int)>($r14, $i0);

        $r15 = specialinvoke r0.<androidx.paging.PageKeyedDataSource: java.lang.Object loadAfter(androidx.paging.PageKeyedDataSource$LoadParams,kotlin.coroutines.Continuation)>($r13, $r2);

        return $r15;

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke r1.<androidx.paging.DataSource$Params: androidx.paging.LoadType getType$paging_common()>();

        $r12 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Unsupported type ", $r11);

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r10;

     label5:
        return $r20;
    }

    private final java.lang.Object loadInitial(androidx.paging.PageKeyedDataSource$LoadInitialParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageKeyedDataSource r0;
        androidx.paging.PageKeyedDataSource$LoadInitialParams r1;
        kotlin.coroutines.Continuation $r2, r3, $r7;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        androidx.paging.PageKeyedDataSource$loadInitial$2$1 $r8;
        androidx.paging.PageKeyedDataSource$LoadInitialCallback $r9;
        java.lang.Object $r10, $r11;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: androidx.paging.PageKeyedDataSource$LoadInitialParams;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = new androidx.paging.PageKeyedDataSource$loadInitial$2$1;

        specialinvoke $r8.<androidx.paging.PageKeyedDataSource$loadInitial$2$1: void <init>(kotlinx.coroutines.CancellableContinuation)>(r5);

        $r9 = (androidx.paging.PageKeyedDataSource$LoadInitialCallback) $r8;

        virtualinvoke r0.<androidx.paging.PageKeyedDataSource: void loadInitial(androidx.paging.PageKeyedDataSource$LoadInitialParams,androidx.paging.PageKeyedDataSource$LoadInitialCallback)>(r1, $r9);

        $r10 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r11 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r10 != $r11 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        return $r10;
    }

    private final java.lang.Object loadBefore(androidx.paging.PageKeyedDataSource$LoadParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageKeyedDataSource r0;
        androidx.paging.PageKeyedDataSource$LoadParams r1;
        kotlin.coroutines.Continuation $r2, r3, $r7;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        androidx.paging.PageKeyedDataSource$LoadCallback $r8;
        java.lang.Object $r9, $r10;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: androidx.paging.PageKeyedDataSource$LoadParams;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = staticinvoke <androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource$LoadCallback access$continuationAsCallback(androidx.paging.PageKeyedDataSource,kotlinx.coroutines.CancellableContinuation,boolean)>(r0, r5, 0);

        virtualinvoke r0.<androidx.paging.PageKeyedDataSource: void loadBefore(androidx.paging.PageKeyedDataSource$LoadParams,androidx.paging.PageKeyedDataSource$LoadCallback)>(r1, $r8);

        $r9 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r9 != $r10 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        return $r9;
    }

    private final java.lang.Object loadAfter(androidx.paging.PageKeyedDataSource$LoadParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageKeyedDataSource r0;
        androidx.paging.PageKeyedDataSource$LoadParams r1;
        kotlin.coroutines.Continuation $r2, r3, $r7;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        androidx.paging.PageKeyedDataSource$LoadCallback $r8;
        java.lang.Object $r9, $r10;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: androidx.paging.PageKeyedDataSource$LoadParams;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = staticinvoke <androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource$LoadCallback access$continuationAsCallback(androidx.paging.PageKeyedDataSource,kotlinx.coroutines.CancellableContinuation,boolean)>(r0, r5, 1);

        virtualinvoke r0.<androidx.paging.PageKeyedDataSource: void loadAfter(androidx.paging.PageKeyedDataSource$LoadParams,androidx.paging.PageKeyedDataSource$LoadCallback)>(r1, $r8);

        $r9 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r9 != $r10 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        return $r9;
    }

    private final androidx.paging.PageKeyedDataSource$LoadCallback continuationAsCallback(kotlinx.coroutines.CancellableContinuation, boolean)
    {
        androidx.paging.PageKeyedDataSource r0;
        kotlinx.coroutines.CancellableContinuation r1;
        boolean z0;
        androidx.paging.PageKeyedDataSource$continuationAsCallback$1 $r2;
        androidx.paging.PageKeyedDataSource$LoadCallback $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        z0 := @parameter1: boolean;

        $r2 = new androidx.paging.PageKeyedDataSource$continuationAsCallback$1;

        specialinvoke $r2.<androidx.paging.PageKeyedDataSource$continuationAsCallback$1: void <init>(kotlinx.coroutines.CancellableContinuation,boolean)>(r1, z0);

        $r3 = (androidx.paging.PageKeyedDataSource$LoadCallback) $r2;

        return $r3;
    }

<androidx.paging.PageKeyedDataSource: void loadInitial(androidx.paging.PageKeyedDataSource$LoadInitialParams,androidx.paging.PageKeyedDataSource$LoadInitialCallback)>
<androidx.paging.PageKeyedDataSource: void loadBefore(androidx.paging.PageKeyedDataSource$LoadParams,androidx.paging.PageKeyedDataSource$LoadCallback)>
<androidx.paging.PageKeyedDataSource: void loadAfter(androidx.paging.PageKeyedDataSource$LoadParams,androidx.paging.PageKeyedDataSource$LoadCallback)>
    public java.lang.Object getKeyInternal$paging_common(java.lang.Object)
    {
        androidx.paging.PageKeyedDataSource r0;
        java.lang.Object r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "item");

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get key by item in pageKeyedDataSource");

        throw $r2;
    }

    public boolean getSupportsPageDropping$paging_common()
    {
        androidx.paging.PageKeyedDataSource r0;
        boolean $z0;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        $z0 = r0.<androidx.paging.PageKeyedDataSource: boolean supportsPageDropping>;

        return $z0;
    }

    public static void getSupportsPageDropping$paging_common$annotations()
    {
        return;
    }

    public final androidx.paging.PageKeyedDataSource mapByPage(androidx.arch.core.util.Function)
    {
        androidx.paging.PageKeyedDataSource r0, $r3;
        androidx.arch.core.util.Function r1;
        androidx.paging.WrapperPageKeyedDataSource $r2;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.WrapperPageKeyedDataSource;

        specialinvoke $r2.<androidx.paging.WrapperPageKeyedDataSource: void <init>(androidx.paging.PageKeyedDataSource,androidx.arch.core.util.Function)>(r0, r1);

        $r3 = (androidx.paging.PageKeyedDataSource) $r2;

        return $r3;
    }

    public final androidx.paging.PageKeyedDataSource mapByPage(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PageKeyedDataSource r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.PageKeyedDataSource$mapByPage$1 $r2;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.PageKeyedDataSource$mapByPage$1;

        specialinvoke $r2.<androidx.paging.PageKeyedDataSource$mapByPage$1: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public final androidx.paging.PageKeyedDataSource map(androidx.arch.core.util.Function)
    {
        androidx.paging.PageKeyedDataSource r0, $r4;
        androidx.arch.core.util.Function r1, $r3;
        androidx.paging.PageKeyedDataSource$map$1 $r2;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.PageKeyedDataSource$map$1;

        specialinvoke $r2.<androidx.paging.PageKeyedDataSource$map$1: void <init>(androidx.arch.core.util.Function)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public final androidx.paging.PageKeyedDataSource map(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PageKeyedDataSource r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.PageKeyedDataSource$map$2 $r2;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.PageKeyedDataSource$map$2;

        specialinvoke $r2.<androidx.paging.PageKeyedDataSource$map$2: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public volatile androidx.paging.DataSource mapByPage(androidx.arch.core.util.Function)
    {
        androidx.paging.PageKeyedDataSource r0, $r2;
        androidx.arch.core.util.Function r1;
        androidx.paging.DataSource $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        $r2 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource mapByPage(androidx.arch.core.util.Function)>(r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public volatile androidx.paging.DataSource mapByPage(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PageKeyedDataSource r0, $r2;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.DataSource $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource mapByPage(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public volatile androidx.paging.DataSource map(androidx.arch.core.util.Function)
    {
        androidx.paging.PageKeyedDataSource r0, $r2;
        androidx.arch.core.util.Function r1;
        androidx.paging.DataSource $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        $r2 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource map(androidx.arch.core.util.Function)>(r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public volatile androidx.paging.DataSource map(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PageKeyedDataSource r0, $r2;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.DataSource $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource map(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public static final java.lang.Object access$loadInitial(androidx.paging.PageKeyedDataSource, androidx.paging.PageKeyedDataSource$LoadInitialParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageKeyedDataSource $r0;
        androidx.paging.PageKeyedDataSource$LoadInitialParams r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.paging.PageKeyedDataSource;

        r1 := @parameter1: androidx.paging.PageKeyedDataSource$LoadInitialParams;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = specialinvoke $r0.<androidx.paging.PageKeyedDataSource: java.lang.Object loadInitial(androidx.paging.PageKeyedDataSource$LoadInitialParams,kotlin.coroutines.Continuation)>(r1, $r2);

        return $r3;
    }

    public static final java.lang.Object access$loadBefore(androidx.paging.PageKeyedDataSource, androidx.paging.PageKeyedDataSource$LoadParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageKeyedDataSource $r0;
        androidx.paging.PageKeyedDataSource$LoadParams r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.paging.PageKeyedDataSource;

        r1 := @parameter1: androidx.paging.PageKeyedDataSource$LoadParams;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = specialinvoke $r0.<androidx.paging.PageKeyedDataSource: java.lang.Object loadBefore(androidx.paging.PageKeyedDataSource$LoadParams,kotlin.coroutines.Continuation)>(r1, $r2);

        return $r3;
    }

    public static final java.lang.Object access$loadAfter(androidx.paging.PageKeyedDataSource, androidx.paging.PageKeyedDataSource$LoadParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageKeyedDataSource $r0;
        androidx.paging.PageKeyedDataSource$LoadParams r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.paging.PageKeyedDataSource;

        r1 := @parameter1: androidx.paging.PageKeyedDataSource$LoadParams;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = specialinvoke $r0.<androidx.paging.PageKeyedDataSource: java.lang.Object loadAfter(androidx.paging.PageKeyedDataSource$LoadParams,kotlin.coroutines.Continuation)>(r1, $r2);

        return $r3;
    }

    public static final androidx.paging.PageKeyedDataSource$LoadCallback access$continuationAsCallback(androidx.paging.PageKeyedDataSource, kotlinx.coroutines.CancellableContinuation, boolean)
    {
        androidx.paging.PageKeyedDataSource $r0;
        kotlinx.coroutines.CancellableContinuation r1;
        boolean z0;
        androidx.paging.PageKeyedDataSource$LoadCallback $r2;

        $r0 := @parameter0: androidx.paging.PageKeyedDataSource;

        r1 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        z0 := @parameter2: boolean;

        $r2 = specialinvoke $r0.<androidx.paging.PageKeyedDataSource: androidx.paging.PageKeyedDataSource$LoadCallback continuationAsCallback(kotlinx.coroutines.CancellableContinuation,boolean)>(r1, z0);

        return $r2;
    }

androidx.paging.PageKeyedDataSource$continuationAsCallback$1
<androidx.paging.PageKeyedDataSource$continuationAsCallback$1: kotlinx.coroutines.CancellableContinuation $continuation>
<androidx.paging.PageKeyedDataSource$continuationAsCallback$1: boolean $isAppend>
    void <init>(kotlinx.coroutines.CancellableContinuation, boolean)
    {
        androidx.paging.PageKeyedDataSource$continuationAsCallback$1 r0;
        kotlinx.coroutines.CancellableContinuation $r1;
        boolean $z0;

        r0 := @this: androidx.paging.PageKeyedDataSource$continuationAsCallback$1;

        $r1 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $z0 := @parameter1: boolean;

        r0.<androidx.paging.PageKeyedDataSource$continuationAsCallback$1: kotlinx.coroutines.CancellableContinuation $continuation> = $r1;

        r0.<androidx.paging.PageKeyedDataSource$continuationAsCallback$1: boolean $isAppend> = $z0;

        specialinvoke r0.<androidx.paging.PageKeyedDataSource$LoadCallback: void <init>()>();

        return;
    }

    public void onResult(java.util.List, java.lang.Object)
    {
        androidx.paging.PageKeyedDataSource$continuationAsCallback$1 r0;
        java.util.List r1;
        java.lang.Object r2, $r9, $r10, $r11;
        kotlin.coroutines.Continuation r3;
        androidx.paging.DataSource$BaseResult r4, $r7;
        boolean z0, z1, $z2, $z3;
        kotlin.Result$Companion r5;
        kotlinx.coroutines.CancellableContinuation $r6;

        r0 := @this: androidx.paging.PageKeyedDataSource$continuationAsCallback$1;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r6 = r0.<androidx.paging.PageKeyedDataSource$continuationAsCallback$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        r3 = (kotlin.coroutines.Continuation) $r6;

        $r7 = new androidx.paging.DataSource$BaseResult;

        $z2 = r0.<androidx.paging.PageKeyedDataSource$continuationAsCallback$1: boolean $isAppend>;

        if $z2 == 0 goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r9 = r2;

     label2:
        $z3 = r0.<androidx.paging.PageKeyedDataSource$continuationAsCallback$1: boolean $isAppend>;

        if $z3 == 0 goto label3;

        $r10 = r2;

        goto label4;

     label3:
        $r10 = null;

     label4:
        specialinvoke $r7.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, $r9, $r10, 0, 0, 24, null);

        r4 = $r7;

        z0 = 0;

        r5 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z1 = 0;

        $r11 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r4);

        interfaceinvoke r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r11);

        return;
    }

androidx.paging.PageKeyedDataSource$LoadCallback
    public void <init>()
    {
        androidx.paging.PageKeyedDataSource$LoadCallback r0;

        r0 := @this: androidx.paging.PageKeyedDataSource$LoadCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.paging.PageKeyedDataSource$LoadCallback: void onResult(java.util.List,java.lang.Object)>
androidx.paging.PageKeyedDataSource$loadInitial$2$1
<androidx.paging.PageKeyedDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont>
    void <init>(kotlinx.coroutines.CancellableContinuation)
    {
        androidx.paging.PageKeyedDataSource$loadInitial$2$1 r0;
        kotlinx.coroutines.CancellableContinuation $r1;

        r0 := @this: androidx.paging.PageKeyedDataSource$loadInitial$2$1;

        $r1 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        r0.<androidx.paging.PageKeyedDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont> = $r1;

        specialinvoke r0.<androidx.paging.PageKeyedDataSource$LoadInitialCallback: void <init>()>();

        return;
    }

    public void onResult(java.util.List, int, int, java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageKeyedDataSource$loadInitial$2$1 r0;
        java.util.List r1;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r2, r3, $r9;
        kotlin.coroutines.Continuation r4;
        androidx.paging.DataSource$BaseResult r5, $r8;
        boolean z0, z1;
        kotlin.Result$Companion r6;
        kotlinx.coroutines.CancellableContinuation $r7;

        r0 := @this: androidx.paging.PageKeyedDataSource$loadInitial$2$1;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        r3 := @parameter4: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r7 = r0.<androidx.paging.PageKeyedDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont>;

        r4 = (kotlin.coroutines.Continuation) $r7;

        $r8 = new androidx.paging.DataSource$BaseResult;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i3 = i1 - $i2;

        $i4 = $i3 - i0;

        specialinvoke $r8.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r1, r2, r3, i0, $i4);

        r5 = $r8;

        z0 = 0;

        r6 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z1 = 0;

        $r9 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r5);

        interfaceinvoke r4.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r9);

        return;
    }

    public void onResult(java.util.List, java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageKeyedDataSource$loadInitial$2$1 r0;
        java.util.List r1;
        java.lang.Object r2, r3, $r9;
        kotlin.coroutines.Continuation r4;
        androidx.paging.DataSource$BaseResult r5, $r8;
        boolean z0, z1;
        kotlin.Result$Companion r6;
        kotlinx.coroutines.CancellableContinuation $r7;

        r0 := @this: androidx.paging.PageKeyedDataSource$loadInitial$2$1;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r7 = r0.<androidx.paging.PageKeyedDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont>;

        r4 = (kotlin.coroutines.Continuation) $r7;

        $r8 = new androidx.paging.DataSource$BaseResult;

        specialinvoke $r8.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r3, 0, 0, 24, null);

        r5 = $r8;

        z0 = 0;

        r6 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z1 = 0;

        $r9 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r5);

        interfaceinvoke r4.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r9);

        return;
    }

androidx.paging.PageKeyedDataSource$LoadInitialCallback
    public void <init>()
    {
        androidx.paging.PageKeyedDataSource$LoadInitialCallback r0;

        r0 := @this: androidx.paging.PageKeyedDataSource$LoadInitialCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.paging.PageKeyedDataSource$LoadInitialCallback: void onResult(java.util.List,int,int,java.lang.Object,java.lang.Object)>
<androidx.paging.PageKeyedDataSource$LoadInitialCallback: void onResult(java.util.List,java.lang.Object,java.lang.Object)>
androidx.paging.PageKeyedDataSource$LoadInitialParams
<androidx.paging.PageKeyedDataSource$LoadInitialParams: int requestedLoadSize>
<androidx.paging.PageKeyedDataSource$LoadInitialParams: boolean placeholdersEnabled>
    public void <init>(int, boolean)
    {
        androidx.paging.PageKeyedDataSource$LoadInitialParams r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.paging.PageKeyedDataSource$LoadInitialParams;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PageKeyedDataSource$LoadInitialParams: int requestedLoadSize> = i0;

        r0.<androidx.paging.PageKeyedDataSource$LoadInitialParams: boolean placeholdersEnabled> = z0;

        return;
    }

androidx.paging.PageKeyedDataSource$LoadParams
<androidx.paging.PageKeyedDataSource$LoadParams: java.lang.Object key>
<androidx.paging.PageKeyedDataSource$LoadParams: int requestedLoadSize>
    public void <init>(java.lang.Object, int)
    {
        androidx.paging.PageKeyedDataSource$LoadParams r0;
        java.lang.Object r1;
        int i0;

        r0 := @this: androidx.paging.PageKeyedDataSource$LoadParams;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PageKeyedDataSource$LoadParams: java.lang.Object key> = r1;

        r0.<androidx.paging.PageKeyedDataSource$LoadParams: int requestedLoadSize> = i0;

        return;
    }

androidx.paging.PageKeyedDataSource$map$1
<androidx.paging.PageKeyedDataSource$map$1: androidx.arch.core.util.Function $function>
    void <init>(androidx.arch.core.util.Function)
    {
        androidx.paging.PageKeyedDataSource$map$1 r0;
        androidx.arch.core.util.Function $r1;

        r0 := @this: androidx.paging.PageKeyedDataSource$map$1;

        $r1 := @parameter0: androidx.arch.core.util.Function;

        r0.<androidx.paging.PageKeyedDataSource$map$1: androidx.arch.core.util.Function $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.PageKeyedDataSource$map$1 r0;
        java.util.List r1, $r11;
        java.lang.Iterable $r2;
        androidx.arch.core.util.Function r3;
        java.util.Collection r4, r8;
        java.util.Iterator r5;
        java.lang.Object r6, r7, r9;
        java.util.ArrayList $r10;
        int $i0;
        boolean $z3;

        r0 := @this: androidx.paging.PageKeyedDataSource$map$1;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "list");

        $r2 = (java.lang.Iterable) r1;

        r3 = r0.<androidx.paging.PageKeyedDataSource$map$1: androidx.arch.core.util.Function $function>;

        $r10 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r10;

        r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = r6;

        r8 = r4;

        r9 = interfaceinvoke r3.<androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)>(r7);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r9);

        goto label1;

     label2:
        $r11 = (java.util.List) r4;

        return $r11;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.PageKeyedDataSource$map$1 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource$map$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource$map$1: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.PageKeyedDataSource$map$2
<androidx.paging.PageKeyedDataSource$map$2: kotlin.jvm.functions.Function1 $function>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PageKeyedDataSource$map$2 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.paging.PageKeyedDataSource$map$2;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.paging.PageKeyedDataSource$map$2: kotlin.jvm.functions.Function1 $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.PageKeyedDataSource$map$2 r0;
        java.util.List r1, $r8;
        java.lang.Iterable $r2;
        kotlin.jvm.functions.Function1 r3;
        java.util.Collection r4;
        java.util.Iterator r5;
        java.lang.Object r6, $r9;
        java.util.ArrayList $r7;
        int $i0;
        boolean $z2;

        r0 := @this: androidx.paging.PageKeyedDataSource$map$2;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "list");

        $r2 = (java.lang.Iterable) r1;

        r3 = r0.<androidx.paging.PageKeyedDataSource$map$2: kotlin.jvm.functions.Function1 $function>;

        $r7 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r7;

        r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r9 = interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $r8 = (java.util.List) r4;

        return $r8;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.PageKeyedDataSource$map$2 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource$map$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource$map$2: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.PageKeyedDataSource$mapByPage$1
<androidx.paging.PageKeyedDataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PageKeyedDataSource$mapByPage$1 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.paging.PageKeyedDataSource$mapByPage$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.paging.PageKeyedDataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.PageKeyedDataSource$mapByPage$1 r0;
        java.util.List r1, $r4;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource$mapByPage$1;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.paging.PageKeyedDataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.PageKeyedDataSource$mapByPage$1 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.PageKeyedDataSource$mapByPage$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.PageKeyedDataSource$mapByPage$1: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

