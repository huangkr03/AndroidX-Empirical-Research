androidx.appsearch.platformstorage.PlatformStorage
<androidx.appsearch.platformstorage.PlatformStorage: java.util.concurrent.Executor EXECUTOR>
    private void <init>()
    {
        androidx.appsearch.platformstorage.PlatformStorage r0;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture createSearchSessionAsync(androidx.appsearch.platformstorage.PlatformStorage$SearchContext)
    {
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext r0;
        android.app.appsearch.AppSearchManager r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.app.appsearch.AppSearchManager$SearchContext $r6;
        java.util.concurrent.Executor $r7;
        java.util.function.Consumer $r8;

        r0 := @parameter0: androidx.appsearch.platformstorage.PlatformStorage$SearchContext;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r4 = r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/appsearch/AppSearchManager;");

        r1 = (android.app.appsearch.AppSearchManager) $r5;

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r6 = staticinvoke <androidx.appsearch.platformstorage.converter.SearchContextToPlatformConverter: android.app.appsearch.AppSearchManager$SearchContext toPlatformSearchContext(androidx.appsearch.platformstorage.PlatformStorage$SearchContext)>(r0);

        $r7 = r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: java.util.concurrent.Executor mExecutor>;

        $r8 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture,androidx.appsearch.platformstorage.PlatformStorage$SearchContext)>(r2, r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.PlatformStorage: void lambda$createSearchSessionAsync$0(androidx.concurrent.futures.ResolvableFuture,androidx.appsearch.platformstorage.PlatformStorage$SearchContext,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke r1.<android.app.appsearch.AppSearchManager: void createSearchSession(android.app.appsearch.AppSearchManager$SearchContext,java.util.concurrent.Executor,java.util.function.Consumer)>($r6, $r7, $r8);

        return r2;
    }

    public static com.google.common.util.concurrent.ListenableFuture createSearchSession(androidx.appsearch.platformstorage.PlatformStorage$SearchContext)
    {
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @parameter0: androidx.appsearch.platformstorage.PlatformStorage$SearchContext;

        $r1 = staticinvoke <androidx.appsearch.platformstorage.PlatformStorage: com.google.common.util.concurrent.ListenableFuture createSearchSessionAsync(androidx.appsearch.platformstorage.PlatformStorage$SearchContext)>(r0);

        return $r1;
    }

    public static com.google.common.util.concurrent.ListenableFuture createGlobalSearchSessionAsync(androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext)
    {
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext r0;
        android.app.appsearch.AppSearchManager r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        android.content.Context $r4;
        java.lang.Object $r5;
        java.util.concurrent.Executor $r6;
        java.util.function.Consumer $r7;

        r0 := @parameter0: androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r4 = r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/appsearch/AppSearchManager;");

        r1 = (android.app.appsearch.AppSearchManager) $r5;

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r6 = r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: java.util.concurrent.Executor mExecutor>;

        $r7 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture,androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext)>(r2, r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.PlatformStorage: void lambda$createGlobalSearchSessionAsync$1(androidx.concurrent.futures.ResolvableFuture,androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke r1.<android.app.appsearch.AppSearchManager: void createGlobalSearchSession(java.util.concurrent.Executor,java.util.function.Consumer)>($r6, $r7);

        return r2;
    }

    public static com.google.common.util.concurrent.ListenableFuture createGlobalSearchSession(androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext)
    {
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @parameter0: androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext;

        $r1 = staticinvoke <androidx.appsearch.platformstorage.PlatformStorage: com.google.common.util.concurrent.ListenableFuture createGlobalSearchSessionAsync(androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext)>(r0);

        return $r1;
    }

    private static void lambda$createGlobalSearchSessionAsync$1(androidx.concurrent.futures.ResolvableFuture, androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext r1;
        android.app.appsearch.AppSearchResult r2;
        boolean $z0;
        androidx.appsearch.exceptions.AppSearchException $r3;
        int $i0;
        java.lang.String $r4;
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl $r5;
        java.lang.Object $r6;
        androidx.appsearch.platformstorage.FeaturesImpl $r7;
        android.app.appsearch.GlobalSearchSession $r8;
        java.util.concurrent.Executor $r9;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext;

        r2 := @parameter2: android.app.appsearch.AppSearchResult;

        $z0 = virtualinvoke r2.<android.app.appsearch.AppSearchResult: boolean isSuccess()>();

        if $z0 == 0 goto label1;

        $r5 = new androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        $r6 = virtualinvoke r2.<android.app.appsearch.AppSearchResult: java.lang.Object getResultValue()>();

        $r8 = (android.app.appsearch.GlobalSearchSession) $r6;

        $r9 = r1.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: java.util.concurrent.Executor mExecutor>;

        $r7 = new androidx.appsearch.platformstorage.FeaturesImpl;

        specialinvoke $r7.<androidx.appsearch.platformstorage.FeaturesImpl: void <init>()>();

        specialinvoke $r5.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: void <init>(android.app.appsearch.GlobalSearchSession,java.util.concurrent.Executor,androidx.appsearch.app.Features)>($r8, $r9, $r7);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r5);

        goto label2;

     label1:
        $r3 = new androidx.appsearch.exceptions.AppSearchException;

        $i0 = virtualinvoke r2.<android.app.appsearch.AppSearchResult: int getResultCode()>();

        $r4 = virtualinvoke r2.<android.app.appsearch.AppSearchResult: java.lang.String getErrorMessage()>();

        specialinvoke $r3.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>($i0, $r4);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>($r3);

     label2:
        return;
    }

    private static void lambda$createSearchSessionAsync$0(androidx.concurrent.futures.ResolvableFuture, androidx.appsearch.platformstorage.PlatformStorage$SearchContext, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext r1;
        android.app.appsearch.AppSearchResult r2;
        boolean $z0;
        androidx.appsearch.exceptions.AppSearchException $r3;
        int $i0;
        java.lang.String $r4;
        androidx.appsearch.platformstorage.SearchSessionImpl $r5;
        java.lang.Object $r6;
        androidx.appsearch.platformstorage.FeaturesImpl $r7;
        android.app.appsearch.AppSearchSession $r8;
        java.util.concurrent.Executor $r9;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: androidx.appsearch.platformstorage.PlatformStorage$SearchContext;

        r2 := @parameter2: android.app.appsearch.AppSearchResult;

        $z0 = virtualinvoke r2.<android.app.appsearch.AppSearchResult: boolean isSuccess()>();

        if $z0 == 0 goto label1;

        $r5 = new androidx.appsearch.platformstorage.SearchSessionImpl;

        $r6 = virtualinvoke r2.<android.app.appsearch.AppSearchResult: java.lang.Object getResultValue()>();

        $r8 = (android.app.appsearch.AppSearchSession) $r6;

        $r9 = r1.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: java.util.concurrent.Executor mExecutor>;

        $r7 = new androidx.appsearch.platformstorage.FeaturesImpl;

        specialinvoke $r7.<androidx.appsearch.platformstorage.FeaturesImpl: void <init>()>();

        specialinvoke $r5.<androidx.appsearch.platformstorage.SearchSessionImpl: void <init>(android.app.appsearch.AppSearchSession,java.util.concurrent.Executor,androidx.appsearch.app.Features)>($r8, $r9, $r7);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r5);

        goto label2;

     label1:
        $r3 = new androidx.appsearch.exceptions.AppSearchException;

        $i0 = virtualinvoke r2.<android.app.appsearch.AppSearchResult: int getResultCode()>();

        $r4 = virtualinvoke r2.<android.app.appsearch.AppSearchResult: java.lang.String getErrorMessage()>();

        specialinvoke $r3.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>($i0, $r4);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>($r3);

     label2:
        return;
    }

    static void <clinit>()
    {
        java.util.concurrent.ExecutorService $r0;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

        <androidx.appsearch.platformstorage.PlatformStorage: java.util.concurrent.Executor EXECUTOR> = $r0;

        return;
    }

androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder
<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder: android.content.Context mContext>
<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder: java.util.concurrent.Executor mExecutor>
    public void <init>(android.content.Context)
    {
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder r0;
        android.content.Context r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.content.Context) $r2;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder: android.content.Context mContext> = $r3;

        return;
    }

    public androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder setWorkerExecutor(java.util.concurrent.Executor)
    {
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder r0;
        java.util.concurrent.Executor r1;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder;

        r1 := @parameter0: java.util.concurrent.Executor;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder: java.util.concurrent.Executor mExecutor> = r1;

        return r0;
    }

    public androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext build()
    {
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder r0;
        java.util.concurrent.Executor $r1, $r3, $r5;
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext $r2;
        android.content.Context $r4;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder;

        $r1 = r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder: java.util.concurrent.Executor mExecutor>;

        if $r1 != null goto label1;

        $r5 = <androidx.appsearch.platformstorage.PlatformStorage: java.util.concurrent.Executor EXECUTOR>;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder: java.util.concurrent.Executor mExecutor> = $r5;

     label1:
        $r2 = new androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext;

        $r4 = r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder: android.content.Context mContext>;

        $r3 = r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext$Builder: java.util.concurrent.Executor mExecutor>;

        specialinvoke $r2.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: void <init>(android.content.Context,java.util.concurrent.Executor)>($r4, $r3);

        return $r2;
    }

androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext
<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: android.content.Context mContext>
<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: java.util.concurrent.Executor mExecutor>
    void <init>(android.content.Context, java.util.concurrent.Executor)
    {
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext r0;
        android.content.Context r1, $r4;
        java.util.concurrent.Executor r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.content.Context) $r3;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: android.content.Context mContext> = $r4;

        $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (java.util.concurrent.Executor) $r5;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: java.util.concurrent.Executor mExecutor> = $r6;

        return;
    }

    public java.util.concurrent.Executor getWorkerExecutor()
    {
        androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext;

        $r1 = r0.<androidx.appsearch.platformstorage.PlatformStorage$GlobalSearchContext: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder
<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: android.content.Context mContext>
<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: java.lang.String mDatabaseName>
<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: java.util.concurrent.Executor mExecutor>
    public void <init>(android.content.Context, java.lang.String)
    {
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder r0;
        android.content.Context r1, $r4;
        java.lang.String r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.content.Context) $r3;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: android.content.Context mContext> = $r4;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Database name cannot contain \'/\'");

        throw $r6;

     label1:
        r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: java.lang.String mDatabaseName> = r2;

        return;
    }

    public androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder setWorkerExecutor(java.util.concurrent.Executor)
    {
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder r0;
        java.util.concurrent.Executor r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder;

        r1 := @parameter0: java.util.concurrent.Executor;

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.concurrent.Executor) $r2;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: java.util.concurrent.Executor mExecutor> = $r3;

        return r0;
    }

    public androidx.appsearch.platformstorage.PlatformStorage$SearchContext build()
    {
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder r0;
        java.util.concurrent.Executor $r1, $r3, $r6;
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext $r2;
        java.lang.String $r4;
        android.content.Context $r5;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder;

        $r1 = r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: java.util.concurrent.Executor mExecutor>;

        if $r1 != null goto label1;

        $r6 = <androidx.appsearch.platformstorage.PlatformStorage: java.util.concurrent.Executor EXECUTOR>;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: java.util.concurrent.Executor mExecutor> = $r6;

     label1:
        $r2 = new androidx.appsearch.platformstorage.PlatformStorage$SearchContext;

        $r5 = r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: android.content.Context mContext>;

        $r4 = r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: java.lang.String mDatabaseName>;

        $r3 = r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext$Builder: java.util.concurrent.Executor mExecutor>;

        specialinvoke $r2.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: void <init>(android.content.Context,java.lang.String,java.util.concurrent.Executor)>($r5, $r4, $r3);

        return $r2;
    }

androidx.appsearch.platformstorage.PlatformStorage$SearchContext
<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: android.content.Context mContext>
<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: java.lang.String mDatabaseName>
<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: java.util.concurrent.Executor mExecutor>
    void <init>(android.content.Context, java.lang.String, java.util.concurrent.Executor)
    {
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext r0;
        android.content.Context r1, $r5;
        java.lang.String r2, $r7;
        java.util.concurrent.Executor r3, $r9;
        java.lang.Object $r4, $r6, $r8;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$SearchContext;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (android.content.Context) $r4;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: android.content.Context mContext> = $r5;

        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (java.lang.String) $r6;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: java.lang.String mDatabaseName> = $r7;

        $r8 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r9 = (java.util.concurrent.Executor) $r8;

        r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: java.util.concurrent.Executor mExecutor> = $r9;

        return;
    }

    public java.lang.String getDatabaseName()
    {
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext r0;
        java.lang.String $r1;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$SearchContext;

        $r1 = r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: java.lang.String mDatabaseName>;

        return $r1;
    }

    public java.util.concurrent.Executor getWorkerExecutor()
    {
        androidx.appsearch.platformstorage.PlatformStorage$SearchContext r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.appsearch.platformstorage.PlatformStorage$SearchContext;

        $r1 = r0.<androidx.appsearch.platformstorage.PlatformStorage$SearchContext: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

