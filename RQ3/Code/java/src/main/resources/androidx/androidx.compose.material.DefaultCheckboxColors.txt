androidx.compose.material.DefaultCheckboxColors
<androidx.compose.material.DefaultCheckboxColors: long checkedCheckmarkColor>
<androidx.compose.material.DefaultCheckboxColors: long uncheckedCheckmarkColor>
<androidx.compose.material.DefaultCheckboxColors: long checkedBoxColor>
<androidx.compose.material.DefaultCheckboxColors: long uncheckedBoxColor>
<androidx.compose.material.DefaultCheckboxColors: long disabledCheckedBoxColor>
<androidx.compose.material.DefaultCheckboxColors: long disabledUncheckedBoxColor>
<androidx.compose.material.DefaultCheckboxColors: long disabledIndeterminateBoxColor>
<androidx.compose.material.DefaultCheckboxColors: long checkedBorderColor>
<androidx.compose.material.DefaultCheckboxColors: long uncheckedBorderColor>
<androidx.compose.material.DefaultCheckboxColors: long disabledBorderColor>
<androidx.compose.material.DefaultCheckboxColors: long disabledIndeterminateBorderColor>
    private void <init>(long, long, long, long, long, long, long, long, long, long, long)
    {
        androidx.compose.material.DefaultCheckboxColors r0;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10;

        r0 := @this: androidx.compose.material.DefaultCheckboxColors;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        l6 := @parameter6: long;

        l7 := @parameter7: long;

        l8 := @parameter8: long;

        l9 := @parameter9: long;

        l10 := @parameter10: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.material.DefaultCheckboxColors: long checkedCheckmarkColor> = l0;

        r0.<androidx.compose.material.DefaultCheckboxColors: long uncheckedCheckmarkColor> = l1;

        r0.<androidx.compose.material.DefaultCheckboxColors: long checkedBoxColor> = l2;

        r0.<androidx.compose.material.DefaultCheckboxColors: long uncheckedBoxColor> = l3;

        r0.<androidx.compose.material.DefaultCheckboxColors: long disabledCheckedBoxColor> = l4;

        r0.<androidx.compose.material.DefaultCheckboxColors: long disabledUncheckedBoxColor> = l5;

        r0.<androidx.compose.material.DefaultCheckboxColors: long disabledIndeterminateBoxColor> = l6;

        r0.<androidx.compose.material.DefaultCheckboxColors: long checkedBorderColor> = l7;

        r0.<androidx.compose.material.DefaultCheckboxColors: long uncheckedBorderColor> = l8;

        r0.<androidx.compose.material.DefaultCheckboxColors: long disabledBorderColor> = l9;

        r0.<androidx.compose.material.DefaultCheckboxColors: long disabledIndeterminateBorderColor> = l10;

        return;
    }

    public androidx.compose.runtime.State checkmarkColor(androidx.compose.ui.state.ToggleableState, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.material.DefaultCheckboxColors r0;
        androidx.compose.ui.state.ToggleableState r1, $r4, $r5;
        androidx.compose.runtime.Composer $r2;
        int $i0;
        long l1, $l3;
        byte b2, $b4;
        androidx.compose.runtime.State r3;
        boolean $z0, $z1;
        androidx.compose.animation.core.TweenSpec $r6;
        androidx.compose.animation.core.AnimationSpec $r7;

        r0 := @this: androidx.compose.material.DefaultCheckboxColors;

        r1 := @parameter0: androidx.compose.ui.state.ToggleableState;

        $r2 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(544656267);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(checkmarkColor)416@16394L61:Checkbox.kt#jmzs0o");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(544656267, $i0, -1, "androidx.compose.material.DefaultCheckboxColors.checkmarkColor (Checkbox.kt:408)");

     label1:
        $r4 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        if r1 != $r4 goto label2;

        $l3 = r0.<androidx.compose.material.DefaultCheckboxColors: long uncheckedCheckmarkColor>;

        goto label3;

     label2:
        $l3 = r0.<androidx.compose.material.DefaultCheckboxColors: long checkedCheckmarkColor>;

     label3:
        l1 = $l3;

        $r5 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        if r1 != $r5 goto label4;

        $b4 = 100;

        goto label5;

     label4:
        $b4 = 50;

     label5:
        b2 = $b4;

        $r6 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(b2, 0, null, 6, null);

        $r7 = (androidx.compose.animation.core.AnimationSpec) $r6;

        r3 = staticinvoke <androidx.compose.animation.SingleValueAnimationKt: androidx.compose.runtime.State animateColorAsState-KTwxG1Y(long,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int)>(l1, $r7, null, $r2, 0, 4);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label6;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label6:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public androidx.compose.runtime.State boxColor(boolean, androidx.compose.ui.state.ToggleableState, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.material.DefaultCheckboxColors r0;
        boolean z0, $z1, $z2;
        androidx.compose.ui.state.ToggleableState r1, $r6;
        androidx.compose.runtime.Composer $r2;
        int $i0, $i3, $i4, $i5, $i6;
        long l1, $l7;
        androidx.compose.runtime.State r3, r12, $r13, r14;
        byte b2, $b8;
        int[] $r4, $r10;
        androidx.compose.ui.graphics.Color $r5;
        androidx.compose.animation.core.TweenSpec $r7;
        androidx.compose.animation.core.AnimationSpec $r8;
        kotlin.NoWhenBranchMatchedException $r9, $r11;

        r0 := @this: androidx.compose.material.DefaultCheckboxColors;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.compose.ui.state.ToggleableState;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(840901029);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(boxColor):Checkbox.kt#jmzs0o");

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(840901029, $i0, -1, "androidx.compose.material.DefaultCheckboxColors.boxColor (Checkbox.kt:420)");

     label01:
        if z0 == 0 goto label05;

        $r10 = <androidx.compose.material.DefaultCheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i5 = virtualinvoke r1.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i6 = $r10[$i5];

        tableswitch($i6)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label03;
            default: goto label04;
        };

     label02:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long checkedBoxColor>;

        goto label10;

     label03:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long uncheckedBoxColor>;

        goto label10;

     label04:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label05:
        $r4 = <androidx.compose.material.DefaultCheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i3 = virtualinvoke r1.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i4 = $r4[$i3];

        tableswitch($i4)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            default: goto label09;
        };

     label06:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long disabledCheckedBoxColor>;

        goto label10;

     label07:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long disabledIndeterminateBoxColor>;

        goto label10;

     label08:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long disabledUncheckedBoxColor>;

        goto label10;

     label09:
        $r9 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r9.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r9;

     label10:
        l1 = $l7;

        if z0 == 0 goto label13;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-2010643579);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "438@17322L61");

        $r6 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        if r1 != $r6 goto label11;

        $b8 = 100;

        goto label12;

     label11:
        $b8 = 50;

     label12:
        b2 = $b8;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(b2, 0, null, 6, null);

        $r8 = (androidx.compose.animation.core.AnimationSpec) $r7;

        r12 = staticinvoke <androidx.compose.animation.SingleValueAnimationKt: androidx.compose.runtime.State animateColorAsState-KTwxG1Y(long,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int)>(l1, $r8, null, $r2, 0, 4);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r13 = r12;

        goto label14;

     label13:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-2010643393);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "440@17413L28");

        $r5 = staticinvoke <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color box-impl(long)>(l1);

        r14 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State rememberUpdatedState(java.lang.Object,androidx.compose.runtime.Composer,int)>($r5, $r2, 0);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r13 = r14;

     label14:
        r3 = $r13;

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label15;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label15:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public androidx.compose.runtime.State borderColor(boolean, androidx.compose.ui.state.ToggleableState, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.material.DefaultCheckboxColors r0;
        boolean z0, $z1, $z2;
        androidx.compose.ui.state.ToggleableState r1, $r6;
        androidx.compose.runtime.Composer $r2;
        int $i0, $i3, $i4, $i5, $i6;
        long l1, $l7;
        androidx.compose.runtime.State r3, r12, $r13, r14;
        byte b2, $b8;
        int[] $r4, $r10;
        androidx.compose.ui.graphics.Color $r5;
        androidx.compose.animation.core.TweenSpec $r7;
        androidx.compose.animation.core.AnimationSpec $r8;
        kotlin.NoWhenBranchMatchedException $r9, $r11;

        r0 := @this: androidx.compose.material.DefaultCheckboxColors;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.compose.ui.state.ToggleableState;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-1568341342);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(borderColor):Checkbox.kt#jmzs0o");

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1568341342, $i0, -1, "androidx.compose.material.DefaultCheckboxColors.borderColor (Checkbox.kt:445)");

     label01:
        if z0 == 0 goto label05;

        $r10 = <androidx.compose.material.DefaultCheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i5 = virtualinvoke r1.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i6 = $r10[$i5];

        tableswitch($i6)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label03;
            default: goto label04;
        };

     label02:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long checkedBorderColor>;

        goto label09;

     label03:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long uncheckedBorderColor>;

        goto label09;

     label04:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label05:
        $r4 = <androidx.compose.material.DefaultCheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i3 = virtualinvoke r1.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i4 = $r4[$i3];

        tableswitch($i4)
        {
            case 1: goto label07;
            case 2: goto label06;
            case 3: goto label07;
            default: goto label08;
        };

     label06:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long disabledIndeterminateBorderColor>;

        goto label09;

     label07:
        $l7 = r0.<androidx.compose.material.DefaultCheckboxColors: long disabledBorderColor>;

        goto label09;

     label08:
        $r9 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r9.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r9;

     label09:
        l1 = $l7;

        if z0 == 0 goto label12;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-796405338);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "462@18282L61");

        $r6 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        if r1 != $r6 goto label10;

        $b8 = 100;

        goto label11;

     label10:
        $b8 = 50;

     label11:
        b2 = $b8;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(b2, 0, null, 6, null);

        $r8 = (androidx.compose.animation.core.AnimationSpec) $r7;

        r12 = staticinvoke <androidx.compose.animation.SingleValueAnimationKt: androidx.compose.runtime.State animateColorAsState-KTwxG1Y(long,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int)>(l1, $r8, null, $r2, 0, 4);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r13 = r12;

        goto label13;

     label12:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-796405152);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "464@18373L28");

        $r5 = staticinvoke <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color box-impl(long)>(l1);

        r14 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State rememberUpdatedState(java.lang.Object,androidx.compose.runtime.Composer,int)>($r5, $r2, 0);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r13 = r14;

     label13:
        r3 = $r13;

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label14;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label14:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public void <init>(long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.material.DefaultCheckboxColors r0;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.material.DefaultCheckboxColors;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        l6 := @parameter6: long;

        l7 := @parameter7: long;

        l8 := @parameter8: long;

        l9 := @parameter9: long;

        l10 := @parameter10: long;

        $r1 := @parameter11: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.material.DefaultCheckboxColors: void <init>(long,long,long,long,long,long,long,long,long,long,long)>(l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10);

        return;
    }

androidx.compose.material.DefaultCheckboxColors$WhenMappings
<androidx.compose.material.DefaultCheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.ui.state.ToggleableState[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.compose.ui.state.ToggleableState $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState On>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Indeterminate>;

        $i2 = virtualinvoke $r3.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        r0[$i3] = 3;

        <androidx.compose.material.DefaultCheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

