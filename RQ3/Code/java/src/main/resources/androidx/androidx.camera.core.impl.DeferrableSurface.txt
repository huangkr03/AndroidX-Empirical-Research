androidx.camera.core.impl.DeferrableSurface
<androidx.camera.core.impl.DeferrableSurface: android.util.Size SIZE_UNDEFINED>
<androidx.camera.core.impl.DeferrableSurface: java.lang.String TAG>
<androidx.camera.core.impl.DeferrableSurface: boolean DEBUG>
<androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger USED_COUNT>
<androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger TOTAL_COUNT>
<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock>
<androidx.camera.core.impl.DeferrableSurface: int mUseCount>
<androidx.camera.core.impl.DeferrableSurface: boolean mClosed>
<androidx.camera.core.impl.DeferrableSurface: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter>
<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture mTerminationFuture>
<androidx.camera.core.impl.DeferrableSurface: android.util.Size mPrescribedSize>
<androidx.camera.core.impl.DeferrableSurface: int mPrescribedStreamFormat>
<androidx.camera.core.impl.DeferrableSurface: java.lang.Class mContainerClass>
    public void <init>()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        android.util.Size $r1;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        $r1 = <androidx.camera.core.impl.DeferrableSurface: android.util.Size SIZE_UNDEFINED>;

        specialinvoke r0.<androidx.camera.core.impl.DeferrableSurface: void <init>(android.util.Size,int)>($r1, 0);

        return;
    }

    public void <init>(android.util.Size, int)
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        android.util.Size r1;
        int i0, $i1, $i2;
        java.lang.String r2;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r4;
        com.google.common.util.concurrent.ListenableFuture $r5, $r9;
        boolean $z0;
        java.util.concurrent.atomic.AtomicInteger $r6, $r7;
        java.lang.Runnable $r10;
        java.util.concurrent.Executor $r11;
        java.lang.Object r12;
        java.lang.Exception r13;
        java.lang.Throwable r14;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        r1 := @parameter0: android.util.Size;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r12 = new java.lang.Object;

        specialinvoke r12.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock> = r12;

        r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount> = 0;

        r0.<androidx.camera.core.impl.DeferrableSurface: boolean mClosed> = 0;

        r0.<androidx.camera.core.impl.DeferrableSurface: android.util.Size mPrescribedSize> = r1;

        r0.<androidx.camera.core.impl.DeferrableSurface: int mPrescribedStreamFormat> = i0;

        $r4 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.core.impl.DeferrableSurface)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.impl.DeferrableSurface: java.lang.Object lambda$new$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r5 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r4);

        r0.<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture mTerminationFuture> = $r5;

        $z0 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("DeferrableSurface");

        if $z0 == 0 goto label1;

        $r6 = <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger TOTAL_COUNT>;

        $i1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r7 = <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger USED_COUNT>;

        $i2 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        specialinvoke r0.<androidx.camera.core.impl.DeferrableSurface: void printGlobalDebugCounts(java.lang.String,int,int)>("Surface created", $i1, $i2);

        r13 = new java.lang.Exception;

        specialinvoke r13.<java.lang.Exception: void <init>()>();

        r14 = (java.lang.Throwable) r13;

        r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>(r14);

        $r9 = r0.<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture mTerminationFuture>;

        $r10 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.impl.DeferrableSurface,java.lang.String)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.impl.DeferrableSurface: void lambda$new$1(java.lang.String)>, methodtype: void __METHODTYPE__());

        $r11 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke $r9.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r10, $r11);

     label1:
        return;
    }

    private void printGlobalDebugCounts(java.lang.String, int, int)
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.String r1, $r11;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = <androidx.camera.core.impl.DeferrableSurface: boolean DEBUG>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("DeferrableSurface");

        if $z1 == 0 goto label1;

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("DeferrableSurface", "DeferrableSurface usage statistics may be inaccurate since debug logging was not enabled at static initialization time. App restart may be required to enable accurate usage statistics.");

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[total_surfaces=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", used_surfaces=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("](");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("DeferrableSurface", $r11);

        return;
    }

    public final com.google.common.util.concurrent.ListenableFuture getSurface()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7, r9;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r4, $r6;
        androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException r8;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        $r3 = r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<androidx.camera.core.impl.DeferrableSurface: boolean mClosed>;

        if $z0 == 0 goto label3;

        r8 = new androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException;

        specialinvoke r8.<androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException: void <init>(java.lang.String,androidx.camera.core.impl.DeferrableSurface)>("DeferrableSurface already closed.", r0);

        r9 = (java.lang.Throwable) r8;

        $r6 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>(r9);

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r4 = virtualinvoke r0.<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture provideSurface()>();

        exitmonitor r1;

     label4:
        return $r4;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture provideSurface()>
    public com.google.common.util.concurrent.ListenableFuture getTerminationFuture()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r2;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        $r1 = r0.<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture mTerminationFuture>;

        $r2 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)>($r1);

        return $r2;
    }

    public void incrementUseCount() throws androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r14, r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, r16;
        java.lang.String $r9;
        java.util.concurrent.atomic.AtomicInteger $r10, $r11;
        androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException r15;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        $r3 = r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        if $i0 != 0 goto label2;

        $z1 = r0.<androidx.camera.core.impl.DeferrableSurface: boolean mClosed>;

        if $z1 == 0 goto label2;

        r15 = new androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException;

        specialinvoke r15.<androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException: void <init>(java.lang.String,androidx.camera.core.impl.DeferrableSurface)>("Cannot begin use on a closed surface.", r0);

        r17 = (java.lang.Throwable) r15;

        throw r17;

     label2:
        $i1 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        $i2 = $i1 + 1;

        r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount> = $i2;

        $z0 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("DeferrableSurface");

        if $z0 == 0 goto label4;

        $i3 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        if $i3 != 1 goto label3;

        $r10 = <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger TOTAL_COUNT>;

        $i5 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r11 = <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger USED_COUNT>;

        $i6 = virtualinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        specialinvoke r0.<androidx.camera.core.impl.DeferrableSurface: void printGlobalDebugCounts(java.lang.String,int,int)>("New surface in use", $i5, $i6);

     label3:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use count+1, useCount=");

        $i4 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("DeferrableSurface", $r9);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        r2 = $r14;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void close()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r10;
        boolean $z0, $z2;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r11;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        r11 = null;

        $r3 = r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<androidx.camera.core.impl.DeferrableSurface: boolean mClosed>;

        if $z0 != 0 goto label3;

        r0.<androidx.camera.core.impl.DeferrableSurface: boolean mClosed> = 1;

        $i0 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        if $i0 != 0 goto label2;

        r11 = r0.<androidx.camera.core.impl.DeferrableSurface: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter>;

        r0.<androidx.camera.core.impl.DeferrableSurface: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter> = null;

     label2:
        $z2 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("DeferrableSurface");

        if $z2 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("surface closed,  useCount=");

        $i1 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" closed=true ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("DeferrableSurface", $r9);

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        if r11 == null goto label8;

        virtualinvoke r11.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(null);

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void decrementUseCount()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z1, $z2, $z3;
        java.lang.String $r11;
        java.util.concurrent.atomic.AtomicInteger $r12, $r13;
        java.lang.IllegalStateException $r14;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r16;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        r16 = null;

        $r3 = r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        if $i0 != 0 goto label2;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Decrementing use count occurs more times than incrementing");

        throw $r14;

     label2:
        $i1 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        $i2 = $i1 - 1;

        r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount> = $i2;

        $i3 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        if $i3 != 0 goto label3;

        $z2 = r0.<androidx.camera.core.impl.DeferrableSurface: boolean mClosed>;

        if $z2 == 0 goto label3;

        r16 = r0.<androidx.camera.core.impl.DeferrableSurface: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter>;

        r0.<androidx.camera.core.impl.DeferrableSurface: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter> = null;

     label3:
        $z3 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("DeferrableSurface");

        if $z3 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use count-1,  useCount=");

        $i4 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" closed=");

        $z1 = r0.<androidx.camera.core.impl.DeferrableSurface: boolean mClosed>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("DeferrableSurface", $r11);

        $i5 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        if $i5 != 0 goto label4;

        $r12 = <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger TOTAL_COUNT>;

        $i6 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r13 = <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger USED_COUNT>;

        $i7 = virtualinvoke $r13.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        specialinvoke r0.<androidx.camera.core.impl.DeferrableSurface: void printGlobalDebugCounts(java.lang.String,int,int)>("Surface no longer in use", $i6, $i7);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;

        r2 = $r15;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        if r16 == null goto label9;

        virtualinvoke r16.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(null);

     label9:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.util.Size getPrescribedSize()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        android.util.Size $r1;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        $r1 = r0.<androidx.camera.core.impl.DeferrableSurface: android.util.Size mPrescribedSize>;

        return $r1;
    }

    public int getPrescribedStreamFormat()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        int $i0;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        $i0 = r0.<androidx.camera.core.impl.DeferrableSurface: int mPrescribedStreamFormat>;

        return $i0;
    }

    public int getUseCount()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.Object r1, $r2;
        int $i0;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        $r2 = r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $i0 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        exitmonitor r1;

        return $i0;
    }

    public java.lang.Class getContainerClass()
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.Class $r1;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        $r1 = r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Class mContainerClass>;

        return $r1;
    }

    public void setContainerClass(java.lang.Class)
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.Class r1;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        r1 := @parameter0: java.lang.Class;

        r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Class mContainerClass> = r1;

        return;
    }

    private void lambda$new$1(java.lang.String)
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        java.lang.String r1, $r15, $r21;
        java.lang.Throwable r2, r4, $r9, $r22;
        java.lang.Object r3, $r16;
        com.google.common.util.concurrent.ListenableFuture $r5;
        java.util.concurrent.atomic.AtomicInteger $r7, $r8;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        java.lang.IllegalArgumentException $r17;
        java.lang.Object[] $r18;
        boolean $z0;
        java.lang.Boolean $r19;
        java.lang.Integer $r20;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        r1 := @parameter0: java.lang.String;

     label1:
        $r5 = r0.<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture mTerminationFuture>;

        interfaceinvoke $r5.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r7 = <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger TOTAL_COUNT>;

        $i0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        $r8 = <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger USED_COUNT>;

        $i1 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        specialinvoke r0.<androidx.camera.core.impl.DeferrableSurface: void printGlobalDebugCounts(java.lang.String,int,int)>("Surface terminated", $i0, $i1);

     label2:
        goto label7;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected surface termination for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nStack Trace:\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String)>("DeferrableSurface", $r15);

        $r16 = r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock>;

        r3 = $r16;

        entermonitor $r16;

     label4:
        $r17 = new java.lang.IllegalArgumentException;

        $r18 = newarray (java.lang.Object)[3];

        $r18[0] = r0;

        $z0 = r0.<androidx.camera.core.impl.DeferrableSurface: boolean mClosed>;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r18[1] = $r19;

        $i2 = r0.<androidx.camera.core.impl.DeferrableSurface: int mUseCount>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r18[2] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DeferrableSurface %s [closed: %b, use_count: %s] terminated with unexpected exception.", $r18);

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r21, r2);

        throw $r17;

     label5:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    private java.lang.Object lambda$new$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.core.impl.DeferrableSurface r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.lang.Object r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r3 = r0.<androidx.camera.core.impl.DeferrableSurface: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.camera.core.impl.DeferrableSurface: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mTerminationCompleter> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DeferrableSurface-termination(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static void <clinit>()
    {
        android.util.Size $r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicInteger $r1, $r2;

        $r0 = new android.util.Size;

        specialinvoke $r0.<android.util.Size: void <init>(int,int)>(0, 0);

        <androidx.camera.core.impl.DeferrableSurface: android.util.Size SIZE_UNDEFINED> = $r0;

        $z0 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("DeferrableSurface");

        <androidx.camera.core.impl.DeferrableSurface: boolean DEBUG> = $z0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger USED_COUNT> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        <androidx.camera.core.impl.DeferrableSurface: java.util.concurrent.atomic.AtomicInteger TOTAL_COUNT> = $r2;

        return;
    }

androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException
<androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException: androidx.camera.core.impl.DeferrableSurface mDeferrableSurface>
    public void <init>(java.lang.String, androidx.camera.core.impl.DeferrableSurface)
    {
        androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException r0;
        java.lang.String r1;
        androidx.camera.core.impl.DeferrableSurface r2;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.camera.core.impl.DeferrableSurface;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException: androidx.camera.core.impl.DeferrableSurface mDeferrableSurface> = r2;

        return;
    }

    public androidx.camera.core.impl.DeferrableSurface getDeferrableSurface()
    {
        androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException r0;
        androidx.camera.core.impl.DeferrableSurface $r1;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException;

        $r1 = r0.<androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException: androidx.camera.core.impl.DeferrableSurface mDeferrableSurface>;

        return $r1;
    }

androidx.camera.core.impl.DeferrableSurface$SurfaceUnavailableException
    public void <init>(java.lang.String)
    {
        androidx.camera.core.impl.DeferrableSurface$SurfaceUnavailableException r0;
        java.lang.String r1;

        r0 := @this: androidx.camera.core.impl.DeferrableSurface$SurfaceUnavailableException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

