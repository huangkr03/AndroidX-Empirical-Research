androidx.compose.ui.test.SemanticsMatcher
<androidx.compose.ui.test.SemanticsMatcher: androidx.compose.ui.test.SemanticsMatcher$Companion Companion>
<androidx.compose.ui.test.SemanticsMatcher: java.lang.String description>
<androidx.compose.ui.test.SemanticsMatcher: kotlin.jvm.functions.Function1 matcher>
<androidx.compose.ui.test.SemanticsMatcher: int $stable>
    public void <init>(java.lang.String, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.SemanticsMatcher r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function1 r2;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "description");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "matcher");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String description> = r1;

        r0.<androidx.compose.ui.test.SemanticsMatcher: kotlin.jvm.functions.Function1 matcher> = r2;

        return;
    }

    public final java.lang.String getDescription()
    {
        androidx.compose.ui.test.SemanticsMatcher r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher;

        $r1 = r0.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String description>;

        return $r1;
    }

    public final boolean matches(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.test.SemanticsMatcher r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        $r2 = r0.<androidx.compose.ui.test.SemanticsMatcher: kotlin.jvm.functions.Function1 matcher>;

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final boolean matchesAny(java.lang.Iterable)
    {
        androidx.compose.ui.test.SemanticsMatcher r0;
        java.lang.Iterable r1;
        kotlin.jvm.functions.Function1 r3;
        java.util.Iterator r4;
        java.lang.Object r5, $r6;
        boolean $z1, $z2, $z3, $z4, $z5;
        java.lang.Boolean $r7;
        java.util.Collection $r8;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher;

        r1 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nodes");

        r3 = r0.<androidx.compose.ui.test.SemanticsMatcher: kotlin.jvm.functions.Function1 matcher>;

        $z1 = r1 instanceof java.util.Collection;

        if $z1 == 0 goto label1;

        $r8 = (java.util.Collection) r1;

        $z3 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $z4 = 0;

        goto label4;

     label1:
        r4 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r7 = (java.lang.Boolean) $r6;

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label2;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public final androidx.compose.ui.test.SemanticsMatcher and(androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsMatcher r0, r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.String $r5, $r8, $r11;
        androidx.compose.ui.test.SemanticsMatcher$and$1 $r12;
        kotlin.jvm.functions.Function1 $r13;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher;

        r1 := @parameter0: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = new androidx.compose.ui.test.SemanticsMatcher;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r5 = r0.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String description>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") && (");

        $r8 = r1.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String description>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new androidx.compose.ui.test.SemanticsMatcher$and$1;

        specialinvoke $r12.<androidx.compose.ui.test.SemanticsMatcher$and$1: void <init>(androidx.compose.ui.test.SemanticsMatcher,androidx.compose.ui.test.SemanticsMatcher)>(r0, r1);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        specialinvoke $r2.<androidx.compose.ui.test.SemanticsMatcher: void <init>(java.lang.String,kotlin.jvm.functions.Function1)>($r11, $r13);

        return $r2;
    }

    public final androidx.compose.ui.test.SemanticsMatcher or(androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsMatcher r0, r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.String $r5, $r8, $r11;
        androidx.compose.ui.test.SemanticsMatcher$or$1 $r12;
        kotlin.jvm.functions.Function1 $r13;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher;

        r1 := @parameter0: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r2 = new androidx.compose.ui.test.SemanticsMatcher;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r5 = r0.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String description>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") || (");

        $r8 = r1.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String description>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new androidx.compose.ui.test.SemanticsMatcher$or$1;

        specialinvoke $r12.<androidx.compose.ui.test.SemanticsMatcher$or$1: void <init>(androidx.compose.ui.test.SemanticsMatcher,androidx.compose.ui.test.SemanticsMatcher)>(r0, r1);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        specialinvoke $r2.<androidx.compose.ui.test.SemanticsMatcher: void <init>(java.lang.String,kotlin.jvm.functions.Function1)>($r11, $r13);

        return $r2;
    }

    public final androidx.compose.ui.test.SemanticsMatcher not()
    {
        androidx.compose.ui.test.SemanticsMatcher r0, $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        androidx.compose.ui.test.SemanticsMatcher$not$1 $r8;
        kotlin.jvm.functions.Function1 $r9;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher;

        $r1 = new androidx.compose.ui.test.SemanticsMatcher;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT (");

        $r4 = r0.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String description>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new androidx.compose.ui.test.SemanticsMatcher$not$1;

        specialinvoke $r8.<androidx.compose.ui.test.SemanticsMatcher$not$1: void <init>(androidx.compose.ui.test.SemanticsMatcher)>(r0);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsMatcher: void <init>(java.lang.String,kotlin.jvm.functions.Function1)>($r7, $r9);

        return $r1;
    }

    public static final kotlin.jvm.functions.Function1 access$getMatcher$p(androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsMatcher $r0;
        kotlin.jvm.functions.Function1 $r1;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsMatcher;

        $r1 = $r0.<androidx.compose.ui.test.SemanticsMatcher: kotlin.jvm.functions.Function1 matcher>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion $r0;

        $r0 = new androidx.compose.ui.test.SemanticsMatcher$Companion;

        specialinvoke $r0.<androidx.compose.ui.test.SemanticsMatcher$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.test.SemanticsMatcher: androidx.compose.ui.test.SemanticsMatcher$Companion Companion> = $r0;

        return;
    }

androidx.compose.ui.test.SemanticsMatcher$and$1
<androidx.compose.ui.test.SemanticsMatcher$and$1: androidx.compose.ui.test.SemanticsMatcher this$0>
<androidx.compose.ui.test.SemanticsMatcher$and$1: androidx.compose.ui.test.SemanticsMatcher $other>
    void <init>(androidx.compose.ui.test.SemanticsMatcher, androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsMatcher$and$1 r0;
        androidx.compose.ui.test.SemanticsMatcher $r1, $r2;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$and$1;

        $r1 := @parameter0: androidx.compose.ui.test.SemanticsMatcher;

        $r2 := @parameter1: androidx.compose.ui.test.SemanticsMatcher;

        r0.<androidx.compose.ui.test.SemanticsMatcher$and$1: androidx.compose.ui.test.SemanticsMatcher this$0> = $r1;

        r0.<androidx.compose.ui.test.SemanticsMatcher$and$1: androidx.compose.ui.test.SemanticsMatcher $other> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.test.SemanticsMatcher$and$1 r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.test.SemanticsMatcher $r2, $r6;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$and$1;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.ui.test.SemanticsMatcher$and$1: androidx.compose.ui.test.SemanticsMatcher this$0>;

        $r3 = staticinvoke <androidx.compose.ui.test.SemanticsMatcher: kotlin.jvm.functions.Function1 access$getMatcher$p(androidx.compose.ui.test.SemanticsMatcher)>($r2);

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.compose.ui.test.SemanticsMatcher$and$1: androidx.compose.ui.test.SemanticsMatcher $other>;

        $z1 = virtualinvoke $r6.<androidx.compose.ui.test.SemanticsMatcher: boolean matches(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        return $r7;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsMatcher$and$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.semantics.SemanticsNode $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$and$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.semantics.SemanticsNode) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsMatcher$and$1: java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)>($r2);

        return $r3;
    }

androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1
<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1: androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1 r0;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Object invoke()
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1 r0;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1;

        return null;
    }

    static void <clinit>()
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1 $r0;

        $r0 = new androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1;

        specialinvoke $r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1: void <init>()>();

        <androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1: androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1
<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key>
<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1: java.lang.Object $expectedValue>
    void <init>(androidx.compose.ui.semantics.SemanticsPropertyKey, java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1 r0;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1;

        $r1 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyKey;

        $r2 := @parameter1: java.lang.Object;

        r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key> = $r1;

        r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1: java.lang.Object $expectedValue> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1 r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.semantics.SemanticsConfiguration $r2;
        androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1 $r3;
        kotlin.jvm.functions.Function0 $r4;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r5;
        java.lang.Object $r6, $r7;
        boolean $z0;
        java.lang.Boolean $r8;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r5 = r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key>;

        $r3 = <androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1: androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r6 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object getOrElseNullable(androidx.compose.ui.semantics.SemanticsPropertyKey,kotlin.jvm.functions.Function0)>($r5, $r4);

        $r7 = r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1: java.lang.Object $expectedValue>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r8;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.semantics.SemanticsNode $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.semantics.SemanticsNode) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1: java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)>($r2);

        return $r3;
    }

androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1
<androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key>
    void <init>(androidx.compose.ui.semantics.SemanticsPropertyKey)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1 r0;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r1;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1;

        $r1 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyKey;

        r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1 r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.semantics.SemanticsConfiguration $r2;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r3 = r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key>;

        $z0 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.semantics.SemanticsNode $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.semantics.SemanticsNode) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1: java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)>($r2);

        return $r3;
    }

androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1
<androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key>
    void <init>(androidx.compose.ui.semantics.SemanticsPropertyKey)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1 r0;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r1;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1;

        $r1 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyKey;

        r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1 r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.semantics.SemanticsConfiguration $r2;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r3;
        boolean $z0, $z1;
        java.lang.Boolean $r4;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r3 = r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1: androidx.compose.ui.semantics.SemanticsPropertyKey $key>;

        $z0 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r3);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.semantics.SemanticsNode $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.semantics.SemanticsNode) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1: java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)>($r2);

        return $r3;
    }

androidx.compose.ui.test.SemanticsMatcher$Companion
    private void <init>()
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion r0;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.ui.test.SemanticsMatcher expectValue(androidx.compose.ui.semantics.SemanticsPropertyKey, java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion r0;
        androidx.compose.ui.semantics.SemanticsPropertyKey r1;
        java.lang.Object r2;
        androidx.compose.ui.test.SemanticsMatcher $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r5, $r10;
        androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1 $r11;
        kotlin.jvm.functions.Function1 $r12;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyKey;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r3 = new androidx.compose.ui.test.SemanticsMatcher;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsPropertyKey: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1;

        specialinvoke $r11.<androidx.compose.ui.test.SemanticsMatcher$Companion$expectValue$1: void <init>(androidx.compose.ui.semantics.SemanticsPropertyKey,java.lang.Object)>(r1, r2);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        specialinvoke $r3.<androidx.compose.ui.test.SemanticsMatcher: void <init>(java.lang.String,kotlin.jvm.functions.Function1)>($r10, $r12);

        return $r3;
    }

    public final androidx.compose.ui.test.SemanticsMatcher keyIsDefined(androidx.compose.ui.semantics.SemanticsPropertyKey)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion r0;
        androidx.compose.ui.semantics.SemanticsPropertyKey r1;
        androidx.compose.ui.test.SemanticsMatcher $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1 $r8;
        kotlin.jvm.functions.Function1 $r9;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyKey;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = new androidx.compose.ui.test.SemanticsMatcher;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsPropertyKey: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is defined");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1;

        specialinvoke $r8.<androidx.compose.ui.test.SemanticsMatcher$Companion$keyIsDefined$1: void <init>(androidx.compose.ui.semantics.SemanticsPropertyKey)>(r1);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        specialinvoke $r2.<androidx.compose.ui.test.SemanticsMatcher: void <init>(java.lang.String,kotlin.jvm.functions.Function1)>($r7, $r9);

        return $r2;
    }

    public final androidx.compose.ui.test.SemanticsMatcher keyNotDefined(androidx.compose.ui.semantics.SemanticsPropertyKey)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion r0;
        androidx.compose.ui.semantics.SemanticsPropertyKey r1;
        androidx.compose.ui.test.SemanticsMatcher $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1 $r8;
        kotlin.jvm.functions.Function1 $r9;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyKey;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = new androidx.compose.ui.test.SemanticsMatcher;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsPropertyKey: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is NOT defined");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1;

        specialinvoke $r8.<androidx.compose.ui.test.SemanticsMatcher$Companion$keyNotDefined$1: void <init>(androidx.compose.ui.semantics.SemanticsPropertyKey)>(r1);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        specialinvoke $r2.<androidx.compose.ui.test.SemanticsMatcher: void <init>(java.lang.String,kotlin.jvm.functions.Function1)>($r7, $r9);

        return $r2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.test.SemanticsMatcher$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.test.SemanticsMatcher$Companion: void <init>()>();

        return;
    }

androidx.compose.ui.test.SemanticsMatcher$not$1
<androidx.compose.ui.test.SemanticsMatcher$not$1: androidx.compose.ui.test.SemanticsMatcher this$0>
    void <init>(androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsMatcher$not$1 r0;
        androidx.compose.ui.test.SemanticsMatcher $r1;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$not$1;

        $r1 := @parameter0: androidx.compose.ui.test.SemanticsMatcher;

        r0.<androidx.compose.ui.test.SemanticsMatcher$not$1: androidx.compose.ui.test.SemanticsMatcher this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.test.SemanticsMatcher$not$1 r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.test.SemanticsMatcher $r2;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$not$1;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.ui.test.SemanticsMatcher$not$1: androidx.compose.ui.test.SemanticsMatcher this$0>;

        $r3 = staticinvoke <androidx.compose.ui.test.SemanticsMatcher: kotlin.jvm.functions.Function1 access$getMatcher$p(androidx.compose.ui.test.SemanticsMatcher)>($r2);

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsMatcher$not$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.semantics.SemanticsNode $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$not$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.semantics.SemanticsNode) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsMatcher$not$1: java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)>($r2);

        return $r3;
    }

androidx.compose.ui.test.SemanticsMatcher$or$1
<androidx.compose.ui.test.SemanticsMatcher$or$1: androidx.compose.ui.test.SemanticsMatcher this$0>
<androidx.compose.ui.test.SemanticsMatcher$or$1: androidx.compose.ui.test.SemanticsMatcher $other>
    void <init>(androidx.compose.ui.test.SemanticsMatcher, androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsMatcher$or$1 r0;
        androidx.compose.ui.test.SemanticsMatcher $r1, $r2;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$or$1;

        $r1 := @parameter0: androidx.compose.ui.test.SemanticsMatcher;

        $r2 := @parameter1: androidx.compose.ui.test.SemanticsMatcher;

        r0.<androidx.compose.ui.test.SemanticsMatcher$or$1: androidx.compose.ui.test.SemanticsMatcher this$0> = $r1;

        r0.<androidx.compose.ui.test.SemanticsMatcher$or$1: androidx.compose.ui.test.SemanticsMatcher $other> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.test.SemanticsMatcher$or$1 r0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        androidx.compose.ui.test.SemanticsMatcher $r2, $r7;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$or$1;

        r1 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.ui.test.SemanticsMatcher$or$1: androidx.compose.ui.test.SemanticsMatcher this$0>;

        $r3 = staticinvoke <androidx.compose.ui.test.SemanticsMatcher: kotlin.jvm.functions.Function1 access$getMatcher$p(androidx.compose.ui.test.SemanticsMatcher)>($r2);

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<androidx.compose.ui.test.SemanticsMatcher$or$1: androidx.compose.ui.test.SemanticsMatcher $other>;

        $z1 = virtualinvoke $r7.<androidx.compose.ui.test.SemanticsMatcher: boolean matches(androidx.compose.ui.semantics.SemanticsNode)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsMatcher$or$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.semantics.SemanticsNode $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.test.SemanticsMatcher$or$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.semantics.SemanticsNode) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsMatcher$or$1: java.lang.Boolean invoke(androidx.compose.ui.semantics.SemanticsNode)>($r2);

        return $r3;
    }

