androidx.concurrent.futures.ToContinuation
<androidx.concurrent.futures.ToContinuation: com.google.common.util.concurrent.ListenableFuture futureToObserve>
<androidx.concurrent.futures.ToContinuation: kotlinx.coroutines.CancellableContinuation continuation>
    public void run()
    {
        androidx.concurrent.futures.ToContinuation r0;
        boolean z0, z1, $z2, z4;
        kotlin.Result$Companion r1, r14;
        kotlin.coroutines.Continuation r2, r17;
        java.lang.Object r3, r5, $r13, r15;
        kotlinx.coroutines.CancellableContinuation r4, $r9, $r10, $r12;
        com.google.common.util.concurrent.ListenableFuture $r6, $r7;
        java.util.concurrent.Future $r8;
        java.lang.Throwable $r11, r16, r18;

        r0 := @this: androidx.concurrent.futures.ToContinuation;

        $r6 = r0.<androidx.concurrent.futures.ToContinuation: com.google.common.util.concurrent.ListenableFuture futureToObserve>;

        $z2 = interfaceinvoke $r6.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();

        if $z2 == 0 goto label1;

        $r10 = r0.<androidx.concurrent.futures.ToContinuation: kotlinx.coroutines.CancellableContinuation continuation>;

        staticinvoke <kotlinx.coroutines.CancellableContinuation$DefaultImpls: boolean cancel$default(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable,int,java.lang.Object)>($r10, null, 1, null);

        goto label4;

     label1:
        $r9 = r0.<androidx.concurrent.futures.ToContinuation: kotlinx.coroutines.CancellableContinuation continuation>;

        r14 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r7 = r0.<androidx.concurrent.futures.ToContinuation: com.google.common.util.concurrent.ListenableFuture futureToObserve>;

        $r8 = (java.util.concurrent.Future) $r7;

        r15 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>($r8);

        r4 = $r9;

        z4 = 0;

        r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r15);

        interfaceinvoke r4.<kotlinx.coroutines.CancellableContinuation: void resumeWith(java.lang.Object)>(r5);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r16 = $r11;

        $r12 = r0.<androidx.concurrent.futures.ToContinuation: kotlinx.coroutines.CancellableContinuation continuation>;

        r17 = (kotlin.coroutines.Continuation) $r12;

        r18 = staticinvoke <androidx.concurrent.futures.ListenableFutureKt: java.lang.Throwable access$nonNullCause(java.util.concurrent.ExecutionException)>(r16);

        z0 = 0;

        r1 = <kotlin.Result: kotlin.Result$Companion Companion>;

        r2 = r17;

        z1 = 0;

        $r13 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>(r18);

        r3 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r13);

        interfaceinvoke r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>(r3);

     label4:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public final com.google.common.util.concurrent.ListenableFuture getFutureToObserve()
    {
        androidx.concurrent.futures.ToContinuation r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.concurrent.futures.ToContinuation;

        $r1 = r0.<androidx.concurrent.futures.ToContinuation: com.google.common.util.concurrent.ListenableFuture futureToObserve>;

        return $r1;
    }

    public final kotlinx.coroutines.CancellableContinuation getContinuation()
    {
        androidx.concurrent.futures.ToContinuation r0;
        kotlinx.coroutines.CancellableContinuation $r1;

        r0 := @this: androidx.concurrent.futures.ToContinuation;

        $r1 = r0.<androidx.concurrent.futures.ToContinuation: kotlinx.coroutines.CancellableContinuation continuation>;

        return $r1;
    }

    public void <init>(com.google.common.util.concurrent.ListenableFuture, kotlinx.coroutines.CancellableContinuation)
    {
        androidx.concurrent.futures.ToContinuation r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        kotlinx.coroutines.CancellableContinuation r2;

        r0 := @this: androidx.concurrent.futures.ToContinuation;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r2 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "futureToObserve");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r2, "continuation");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.concurrent.futures.ToContinuation: com.google.common.util.concurrent.ListenableFuture futureToObserve> = r1;

        r0.<androidx.concurrent.futures.ToContinuation: kotlinx.coroutines.CancellableContinuation continuation> = r2;

        return;
    }

