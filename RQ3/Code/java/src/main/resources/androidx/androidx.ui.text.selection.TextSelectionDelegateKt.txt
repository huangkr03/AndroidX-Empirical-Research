androidx.ui.text.selection.TextSelectionDelegateKt
    public static final androidx.ui.core.selection.Selection getTextSelectionInfo(androidx.ui.text.TextLayoutResult, kotlin.Pair, androidx.ui.core.selection.Selectable, boolean, androidx.ui.core.selection.Selection, boolean)
    {
        androidx.ui.text.TextLayoutResult r0;
        kotlin.Pair r1;
        androidx.ui.core.selection.Selectable r2;
        boolean z0, z1, z2, z5, z6, z9, z10, z11;
        androidx.ui.core.selection.Selection r3, $r17;
        androidx.ui.geometry.Offset r4, r5, $r15, $r16, r19, r21;
        androidx.ui.geometry.Rect r6, $r9, r18, r20;
        int i0, $i7, $i8, $i9, $i10, $i13, $i14, $i17, $i18, $i21, i22, $i23;
        long l1, l2, l3, l4, l5, l6, $l11, $l12, $l15, $l16, l19, l20;
        float f0, $f1, $f2, f3, f4, f5, $f6, f7, f8;
        java.lang.Object $r7, $r8;
        androidx.ui.unit.IntSize $r10, $r11;
        androidx.ui.text.TextLayoutInput $r12;
        androidx.ui.text.AnnotatedString $r13;
        java.lang.String $r14;

        r0 := @parameter0: androidx.ui.text.TextLayoutResult;

        r1 := @parameter1: kotlin.Pair;

        r2 := @parameter2: androidx.ui.core.selection.Selectable;

        z0 := @parameter3: boolean;

        r3 := @parameter4: androidx.ui.core.selection.Selection;

        z1 := @parameter5: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "textLayoutResult");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selectionCoordinates");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "selectable");

        $r7 = virtualinvoke r1.<kotlin.Pair: java.lang.Object getFirst()>();

        r4 = (androidx.ui.geometry.Offset) $r7;

        $r8 = virtualinvoke r1.<kotlin.Pair: java.lang.Object getSecond()>();

        r5 = (androidx.ui.geometry.Offset) $r8;

        $r9 = new androidx.ui.geometry.Rect;

        $r10 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: androidx.ui.unit.IntSize getSize()>();

        $i7 = virtualinvoke $r10.<androidx.ui.unit.IntSize: int getWidth()>();

        $f1 = (float) $i7;

        $r11 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: androidx.ui.unit.IntSize getSize()>();

        $i8 = virtualinvoke $r11.<androidx.ui.unit.IntSize: int getHeight()>();

        $f2 = (float) $i8;

        specialinvoke $r9.<androidx.ui.geometry.Rect: void <init>(float,float,float,float)>(0.0F, 0.0F, $f1, $f2);

        r6 = $r9;

        $r12 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: androidx.ui.text.TextLayoutInput getLayoutInput()>();

        $r13 = virtualinvoke $r12.<androidx.ui.text.TextLayoutInput: androidx.ui.text.AnnotatedString getText()>();

        $r14 = virtualinvoke $r13.<androidx.ui.text.AnnotatedString: java.lang.String getText()>();

        i0 = virtualinvoke $r14.<java.lang.String: int length()>();

        f3 = virtualinvoke r4.<androidx.ui.geometry.Offset: float getX()>();

        f4 = virtualinvoke r4.<androidx.ui.geometry.Offset: float getY()>();

        r18 = r6;

        z5 = 0;

        $i9 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f3);

        l19 = (long) $i9;

        f0 = f4;

        z6 = 0;

        $i10 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l20 = (long) $i10;

        $l12 = l19 << 32;

        $l11 = l20 & 4294967295L;

        l3 = $l12 | $l11;

        l5 = l3;

        $r15 = new androidx.ui.geometry.Offset;

        specialinvoke $r15.<androidx.ui.geometry.Offset: void <init>(long)>(l5);

        r19 = $r15;

        z2 = virtualinvoke r18.<androidx.ui.geometry.Rect: boolean contains(androidx.ui.geometry.Offset)>(r19);

        f5 = virtualinvoke r5.<androidx.ui.geometry.Offset: float getX()>();

        $f6 = virtualinvoke r5.<androidx.ui.geometry.Offset: float getY()>();

        r20 = r6;

        f7 = f5;

        z9 = 0;

        $i13 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f7);

        l1 = (long) $i13;

        f8 = $f6;

        z10 = 0;

        $i14 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f8);

        l2 = (long) $i14;

        $l16 = l1 << 32;

        $l15 = l2 & 4294967295L;

        l4 = $l16 | $l15;

        l6 = l4;

        $r16 = new androidx.ui.geometry.Offset;

        specialinvoke $r16.<androidx.ui.geometry.Offset: void <init>(long)>(l6);

        r21 = $r16;

        z11 = virtualinvoke r20.<androidx.ui.geometry.Rect: boolean contains(androidx.ui.geometry.Offset)>(r21);

        if z2 == 0 goto label1;

        $i18 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: int getOffsetForPosition(androidx.ui.geometry.Offset)>(r4);

        $i21 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i18, 0, i0);

        goto label2;

     label1:
        $i21 = -1;

     label2:
        i22 = $i21;

        if z11 == 0 goto label3;

        $i17 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: int getOffsetForPosition(androidx.ui.geometry.Offset)>(r5);

        $i23 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i17, 0, i0);

        goto label4;

     label3:
        $i23 = -1;

     label4:
        $r17 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: androidx.ui.core.selection.Selection getRefinedSelectionInfo(int,int,boolean,boolean,androidx.ui.geometry.Offset,androidx.ui.geometry.Offset,androidx.ui.geometry.Rect,androidx.ui.text.TextLayoutResult,int,androidx.ui.core.selection.Selectable,boolean,androidx.ui.core.selection.Selection,boolean)>(i22, $i23, z2, z11, r4, r5, r6, r0, i0, r2, z0, r3, z1);

        return $r17;
    }

    public static androidx.ui.core.selection.Selection getTextSelectionInfo$default(androidx.ui.text.TextLayoutResult, kotlin.Pair, androidx.ui.core.selection.Selectable, boolean, androidx.ui.core.selection.Selection, boolean, int, java.lang.Object)
    {
        androidx.ui.text.TextLayoutResult r0;
        kotlin.Pair r1;
        androidx.ui.core.selection.Selectable r2;
        boolean z0, z1;
        int i0, $i1, $i2;
        java.lang.Object r3;
        androidx.ui.core.selection.Selection $r4, r5;

        r0 := @parameter0: androidx.ui.text.TextLayoutResult;

        r1 := @parameter1: kotlin.Pair;

        r2 := @parameter2: androidx.ui.core.selection.Selectable;

        z0 := @parameter3: boolean;

        r5 := @parameter4: androidx.ui.core.selection.Selection;

        z1 := @parameter5: boolean;

        i0 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        r5 = (androidx.ui.core.selection.Selection) null;

     label1:
        $i2 = i0 & 32;

        if $i2 == 0 goto label2;

        z1 = 1;

     label2:
        $r4 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: androidx.ui.core.selection.Selection getTextSelectionInfo(androidx.ui.text.TextLayoutResult,kotlin.Pair,androidx.ui.core.selection.Selectable,boolean,androidx.ui.core.selection.Selection,boolean)>(r0, r1, r2, z0, r5, z1);

        return $r4;
    }

    private static final androidx.ui.core.selection.Selection getRefinedSelectionInfo(int, int, boolean, boolean, androidx.ui.geometry.Offset, androidx.ui.geometry.Offset, androidx.ui.geometry.Rect, androidx.ui.text.TextLayoutResult, int, androidx.ui.core.selection.Selectable, boolean, androidx.ui.core.selection.Selection, boolean)
    {
        int i0, i1, i2, i3, i4, i5, i6;
        boolean z0, z1, z2, z3, z4, z5, $z6;
        androidx.ui.geometry.Offset r0, r1;
        androidx.ui.geometry.Rect r2;
        androidx.ui.text.TextLayoutResult r3;
        androidx.ui.core.selection.Selectable r4;
        androidx.ui.core.selection.Selection r5, $r14, $r19;
        kotlin.Triple r6, $r20;
        kotlin.Pair r7;
        java.lang.Object $r8, $r10, $r12, $r15, $r17;
        java.lang.Number $r9, $r11, $r16, $r18;
        java.lang.Boolean $r13;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r0 := @parameter4: androidx.ui.geometry.Offset;

        r1 := @parameter5: androidx.ui.geometry.Offset;

        r2 := @parameter6: androidx.ui.geometry.Rect;

        r3 := @parameter7: androidx.ui.text.TextLayoutResult;

        i2 := @parameter8: int;

        r4 := @parameter9: androidx.ui.core.selection.Selectable;

        z2 := @parameter10: boolean;

        r5 := @parameter11: androidx.ui.core.selection.Selection;

        z3 := @parameter12: boolean;

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        z4 = $z6;

        if z4 == 0 goto label3;

        $r20 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: kotlin.Triple processAsSingleComposable(int,int,androidx.ui.core.selection.Selection,boolean,int)>(i0, i1, r5, z3, i2);

        goto label4;

     label3:
        $r20 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: kotlin.Triple processCrossComposable(androidx.ui.geometry.Offset,androidx.ui.geometry.Offset,int,int,int,androidx.ui.geometry.Rect,boolean,boolean)>(r0, r1, i0, i1, i2, r2, z0, z1);

     label4:
        r6 = $r20;

        $r8 = virtualinvoke r6.<kotlin.Triple: java.lang.Object component1()>();

        $r9 = (java.lang.Number) $r8;

        i5 = virtualinvoke $r9.<java.lang.Number: int intValue()>();

        $r10 = virtualinvoke r6.<kotlin.Triple: java.lang.Object component2()>();

        $r11 = (java.lang.Number) $r10;

        i6 = virtualinvoke $r11.<java.lang.Number: int intValue()>();

        $r12 = virtualinvoke r6.<kotlin.Triple: java.lang.Object component3()>();

        $r13 = (java.lang.Boolean) $r12;

        z5 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        if i5 != -1 goto label5;

        if i6 != -1 goto label5;

        $r19 = (androidx.ui.core.selection.Selection) null;

        return $r19;

     label5:
        if z2 == 0 goto label6;

        r7 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: kotlin.Pair updateWordBasedSelection(androidx.ui.text.TextLayoutResult,int,int,boolean)>(r3, i5, i6, z5);

        $r15 = virtualinvoke r7.<kotlin.Pair: java.lang.Object component1()>();

        $r16 = (java.lang.Number) $r15;

        i3 = virtualinvoke $r16.<java.lang.Number: int intValue()>();

        $r17 = virtualinvoke r7.<kotlin.Pair: java.lang.Object component2()>();

        $r18 = (java.lang.Number) $r17;

        i4 = virtualinvoke $r18.<java.lang.Number: int intValue()>();

        i5 = i3;

        i6 = i4;

     label6:
        $r14 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: androidx.ui.core.selection.Selection getAssembledSelectionInfo(int,int,boolean,androidx.ui.core.selection.Selectable,androidx.ui.text.TextLayoutResult)>(i5, i6, z5, r4, r3);

        return $r14;
    }

    static androidx.ui.core.selection.Selection getRefinedSelectionInfo$default(int, int, boolean, boolean, androidx.ui.geometry.Offset, androidx.ui.geometry.Offset, androidx.ui.geometry.Rect, androidx.ui.text.TextLayoutResult, int, androidx.ui.core.selection.Selectable, boolean, androidx.ui.core.selection.Selection, boolean, int, java.lang.Object)
    {
        int i0, i1, i2, i3, $i4, $i5;
        boolean z0, z1, z2, z3;
        androidx.ui.geometry.Offset r0, r1;
        androidx.ui.geometry.Rect r2;
        androidx.ui.text.TextLayoutResult r3;
        androidx.ui.core.selection.Selectable r4;
        java.lang.Object r5;
        androidx.ui.core.selection.Selection $r6, r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r0 := @parameter4: androidx.ui.geometry.Offset;

        r1 := @parameter5: androidx.ui.geometry.Offset;

        r2 := @parameter6: androidx.ui.geometry.Rect;

        r3 := @parameter7: androidx.ui.text.TextLayoutResult;

        i2 := @parameter8: int;

        r4 := @parameter9: androidx.ui.core.selection.Selectable;

        z2 := @parameter10: boolean;

        r7 := @parameter11: androidx.ui.core.selection.Selection;

        z3 := @parameter12: boolean;

        i3 := @parameter13: int;

        r5 := @parameter14: java.lang.Object;

        $i4 = i3 & 2048;

        if $i4 == 0 goto label1;

        r7 = (androidx.ui.core.selection.Selection) null;

     label1:
        $i5 = i3 & 4096;

        if $i5 == 0 goto label2;

        z3 = 1;

     label2:
        $r6 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: androidx.ui.core.selection.Selection getRefinedSelectionInfo(int,int,boolean,boolean,androidx.ui.geometry.Offset,androidx.ui.geometry.Offset,androidx.ui.geometry.Rect,androidx.ui.text.TextLayoutResult,int,androidx.ui.core.selection.Selectable,boolean,androidx.ui.core.selection.Selection,boolean)>(i0, i1, z0, z1, r0, r1, r2, r3, i2, r4, z2, r7, z3);

        return $r6;
    }

    private static final androidx.ui.core.selection.Selection getAssembledSelectionInfo(int, int, boolean, androidx.ui.core.selection.Selectable, androidx.ui.text.TextLayoutResult)
    {
        int i0, i1, i2, i4, i5;
        boolean z0, z1, z2;
        androidx.ui.core.selection.Selectable r0, r4;
        androidx.ui.text.TextLayoutResult r1, r3;
        byte b3;
        androidx.ui.core.selection.Selection$AnchorInfo r2, r6, r7, $r8, $r10;
        androidx.ui.text.style.TextDirection r5, $r9;
        androidx.ui.core.selection.Selection $r11;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r0 := @parameter3: androidx.ui.core.selection.Selectable;

        r1 := @parameter4: androidx.ui.text.TextLayoutResult;

        $r8 = new androidx.ui.core.selection.Selection$AnchorInfo;

        $r9 = virtualinvoke r1.<androidx.ui.text.TextLayoutResult: androidx.ui.text.style.TextDirection getBidiRunDirection(int)>(i0);

        specialinvoke $r8.<androidx.ui.core.selection.Selection$AnchorInfo: void <init>(androidx.ui.text.style.TextDirection,int,androidx.ui.core.selection.Selectable)>($r9, i0, r0);

        i2 = i1 - 1;

        b3 = 0;

        r3 = r1;

        r2 = $r8;

        z1 = 0;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i2, b3);

        r4 = r0;

        i5 = i1;

        r5 = virtualinvoke r3.<androidx.ui.text.TextLayoutResult: androidx.ui.text.style.TextDirection getBidiRunDirection(int)>(i4);

        $r10 = new androidx.ui.core.selection.Selection$AnchorInfo;

        specialinvoke $r10.<androidx.ui.core.selection.Selection$AnchorInfo: void <init>(androidx.ui.text.style.TextDirection,int,androidx.ui.core.selection.Selectable)>(r5, i5, r4);

        z2 = z0;

        r6 = $r10;

        r7 = r2;

        $r11 = new androidx.ui.core.selection.Selection;

        specialinvoke $r11.<androidx.ui.core.selection.Selection: void <init>(androidx.ui.core.selection.Selection$AnchorInfo,androidx.ui.core.selection.Selection$AnchorInfo,boolean)>(r7, r6, z2);

        return $r11;
    }

    private static final kotlin.Triple processAsSingleComposable(int, int, androidx.ui.core.selection.Selection, boolean, int)
    {
        int i0, i1, i2, i3, i4;
        androidx.ui.core.selection.Selection r0;
        boolean z0, $z1, z2;
        kotlin.Triple $r1;
        java.lang.Integer $r2, $r3;
        java.lang.Boolean $r4;
        androidx.ui.text.TextRange r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.ui.core.selection.Selection;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        i3 = i0;

        i4 = i1;

        if i3 != i4 goto label1;

        r5 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: androidx.ui.text.TextRange ensureAtLeastOneChar(int,int,androidx.ui.core.selection.Selection,boolean)>(i0, i2, r0, z0);

        i3 = virtualinvoke r5.<androidx.ui.text.TextRange: int getStart()>();

        i4 = virtualinvoke r5.<androidx.ui.text.TextRange: int getEnd()>();

     label1:
        if i3 <= i4 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z2 = $z1;

        $r1 = new kotlin.Triple;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        specialinvoke $r1.<kotlin.Triple: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        return $r1;
    }

    private static final kotlin.Triple processCrossComposable(androidx.ui.geometry.Offset, androidx.ui.geometry.Offset, int, int, int, androidx.ui.geometry.Rect, boolean, boolean)
    {
        androidx.ui.geometry.Offset r0, r1, $r6, $r7;
        int i0, i1, i2, i3, $i5, $i6, i8;
        androidx.ui.geometry.Rect r2;
        boolean z0, z1, z2, z3, z4, z5;
        androidx.ui.text.selection.SelectionMode $r3, $r4;
        byte b4, b7;
        kotlin.Triple $r8;
        java.lang.Integer $r9, $r10;
        java.lang.Boolean $r11;

        r0 := @parameter0: androidx.ui.geometry.Offset;

        r1 := @parameter1: androidx.ui.geometry.Offset;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: androidx.ui.geometry.Rect;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        $r3 = <androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode Vertical>;

        z2 = virtualinvoke $r3.<androidx.ui.text.selection.SelectionMode: boolean areHandlesCrossed$ui_text_release(androidx.ui.geometry.Rect,androidx.ui.geometry.Offset,androidx.ui.geometry.Offset)>(r2, r0, r1);

        $r4 = <androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode Vertical>;

        if z2 == 0 goto label01;

        $r6 = r1;

        goto label02;

     label01:
        $r6 = r0;

     label02:
        if z2 == 0 goto label03;

        $r7 = r0;

        goto label04;

     label03:
        $r7 = r1;

     label04:
        z3 = virtualinvoke $r4.<androidx.ui.text.selection.SelectionMode: boolean isSelected$ui_text_release(androidx.ui.geometry.Rect,androidx.ui.geometry.Offset,androidx.ui.geometry.Offset)>(r2, $r6, $r7);

        if z3 == 0 goto label06;

        if z0 != 0 goto label06;

        if z2 == 0 goto label05;

        b4 = 0;

        z5 = 0;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i2, b4);

        goto label07;

     label05:
        $i5 = 0;

        goto label07;

     label06:
        $i5 = i0;

     label07:
        i3 = $i5;

        if z3 == 0 goto label10;

        if z1 != 0 goto label10;

        if z2 == 0 goto label08;

        $i6 = 0;

        goto label09;

     label08:
        b7 = 0;

        z4 = 0;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i2, b7);

     label09:
        goto label11;

     label10:
        $i6 = i1;

     label11:
        i8 = $i6;

        $r8 = new kotlin.Triple;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        specialinvoke $r8.<kotlin.Triple: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r10, $r11);

        return $r8;
    }

    private static final kotlin.Pair updateWordBasedSelection(androidx.ui.text.TextLayoutResult, int, int, boolean)
    {
        androidx.ui.text.TextLayoutResult r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0;
        androidx.ui.text.TextRange r1, r2;
        androidx.ui.text.TextLayoutInput $r3;
        androidx.ui.text.AnnotatedString $r4;
        java.lang.String $r5;
        kotlin.Pair $r6;
        java.lang.Integer $r7, $r8;

        r0 := @parameter0: androidx.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: androidx.ui.text.TextLayoutInput getLayoutInput()>();

        $r4 = virtualinvoke $r3.<androidx.ui.text.TextLayoutInput: androidx.ui.text.AnnotatedString getText()>();

        $r5 = virtualinvoke $r4.<androidx.ui.text.AnnotatedString: java.lang.String getText()>();

        $i5 = virtualinvoke $r5.<java.lang.String: int length()>();

        i2 = $i5 - 1;

        $i6 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>(i0, 0, i2);

        r1 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: androidx.ui.text.TextRange getWordBoundary(int)>($i6);

        $i7 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>(i1, 0, i2);

        r2 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: androidx.ui.text.TextRange getWordBoundary(int)>($i7);

        if z0 == 0 goto label1;

        $i8 = virtualinvoke r1.<androidx.ui.text.TextRange: int getEnd()>();

        goto label2;

     label1:
        $i8 = virtualinvoke r1.<androidx.ui.text.TextRange: int getStart()>();

     label2:
        i3 = $i8;

        if z0 == 0 goto label3;

        $i9 = virtualinvoke r2.<androidx.ui.text.TextRange: int getStart()>();

        goto label4;

     label3:
        $i9 = virtualinvoke r2.<androidx.ui.text.TextRange: int getEnd()>();

     label4:
        i4 = $i9;

        $r6 = new kotlin.Pair;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        specialinvoke $r6.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r7, $r8);

        return $r6;
    }

    private static final androidx.ui.text.TextRange ensureAtLeastOneChar(int, int, androidx.ui.core.selection.Selection, boolean)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        androidx.ui.core.selection.Selection r0, r3, r4, r5;
        boolean z0, z1, z2, $z4, $z5;
        kotlin.jvm.internal.Ref$IntRef r1, r2, $r6, $r7;
        androidx.ui.core.selection.Selection$AnchorInfo $r8, $r9, $r10, $r11;
        androidx.ui.text.TextRange $r14;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.ui.core.selection.Selection;

        z0 := @parameter3: boolean;

        $r6 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r6.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        r1 = $r6;

        r1.<kotlin.jvm.internal.Ref$IntRef: int element> = i0;

        $r7 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r7.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        r2 = $r7;

        r2.<kotlin.jvm.internal.Ref$IntRef: int element> = i0;

        r3 = r0;

        if r3 != null goto label01;

        goto label17;

     label01:
        r4 = r3;

        z1 = 0;

        z2 = 0;

        r5 = r4;

        if z0 == 0 goto label09;

        $z5 = virtualinvoke r5.<androidx.ui.core.selection.Selection: boolean getHandlesCrossed()>();

        if $z5 == 0 goto label05;

        $i20 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        if $i20 == 0 goto label02;

        $r11 = virtualinvoke r5.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $i22 = virtualinvoke $r11.<androidx.ui.core.selection.Selection$AnchorInfo: int getOffset()>();

        $i23 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i24 = $i23 + 1;

        if $i22 != $i24 goto label03;

     label02:
        $i21 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i26 = $i21 + 1;

        goto label04;

     label03:
        $i25 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i26 = $i25 - 1;

     label04:
        goto label08;

     label05:
        $i14 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        if $i14 == i1 goto label06;

        $r10 = virtualinvoke r5.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $i16 = virtualinvoke $r10.<androidx.ui.core.selection.Selection$AnchorInfo: int getOffset()>();

        $i17 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i18 = $i17 - 1;

        if $i16 != $i18 goto label07;

     label06:
        $i15 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i26 = $i15 - 1;

        goto label08;

     label07:
        $i19 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i26 = $i19 + 1;

     label08:
        r1.<kotlin.jvm.internal.Ref$IntRef: int element> = $i26;

        goto label17;

     label09:
        $z4 = virtualinvoke r5.<androidx.ui.core.selection.Selection: boolean getHandlesCrossed()>();

        if $z4 == 0 goto label13;

        $i8 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        if $i8 == i1 goto label10;

        $r9 = virtualinvoke r5.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $i10 = virtualinvoke $r9.<androidx.ui.core.selection.Selection$AnchorInfo: int getOffset()>();

        $i11 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i12 = $i11 - 1;

        if $i10 != $i12 goto label11;

     label10:
        $i9 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i27 = $i9 - 1;

        goto label12;

     label11:
        $i13 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i27 = $i13 + 1;

     label12:
        goto label16;

     label13:
        $i2 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        if $i2 == 0 goto label14;

        $r8 = virtualinvoke r5.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $i4 = virtualinvoke $r8.<androidx.ui.core.selection.Selection$AnchorInfo: int getOffset()>();

        $i5 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i6 = $i5 + 1;

        if $i4 != $i6 goto label15;

     label14:
        $i3 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i27 = $i3 + 1;

        goto label16;

     label15:
        $i7 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i27 = $i7 - 1;

     label16:
        r2.<kotlin.jvm.internal.Ref$IntRef: int element> = $i27;

     label17:
        $r14 = new androidx.ui.text.TextRange;

        $i28 = r1.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i29 = r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        specialinvoke $r14.<androidx.ui.text.TextRange: void <init>(int,int)>($i28, $i29);

        return $r14;
    }

    private static final androidx.ui.geometry.Offset getSelectionHandleCoordinates(androidx.ui.text.TextLayoutResult, int, boolean, boolean)
    {
        androidx.ui.text.TextLayoutResult r0;
        int i0, i1, i2, $i7, i8, $i10, $i11;
        boolean z0, z1, z4, z5, z6, $z7;
        float f0, f1, f2, f3;
        long l3, l4, l5, l6, $l12, $l13;
        byte b9;
        androidx.ui.text.style.TextDirection r1, r2;
        androidx.ui.geometry.Offset $r3;

        r0 := @parameter0: androidx.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i1 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: int getLineForOffset(int)>(i0);

        if z0 == 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        if z0 != 0 goto label3;

        if z1 == 0 goto label3;

     label2:
        $i7 = i0;

        goto label4;

     label3:
        i8 = i0 - 1;

        b9 = 0;

        z6 = 0;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(i8, b9);

     label4:
        i2 = $i7;

        r1 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: androidx.ui.text.style.TextDirection getBidiRunDirection(int)>(i2);

        r2 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: androidx.ui.text.style.TextDirection getParagraphDirection(int)>(i0);

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, r2);

        f3 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: float getHorizontalPosition(int,boolean)>(i0, $z7);

        f0 = virtualinvoke r0.<androidx.ui.text.TextLayoutResult: float getLineBottom(int)>(i1);

        f1 = f3;

        z4 = 0;

        $i10 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        l3 = (long) $i10;

        f2 = f0;

        z5 = 0;

        $i11 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2);

        l4 = (long) $i11;

        $l12 = l3 << 32;

        $l13 = l4 & 4294967295L;

        l5 = $l12 | $l13;

        l6 = l5;

        $r3 = new androidx.ui.geometry.Offset;

        specialinvoke $r3.<androidx.ui.geometry.Offset: void <init>(long)>(l6);

        return $r3;
    }

    public static final androidx.ui.geometry.Offset access$getSelectionHandleCoordinates(androidx.ui.text.TextLayoutResult, int, boolean, boolean)
    {
        androidx.ui.text.TextLayoutResult r0;
        int i0;
        boolean z0, z1;
        androidx.ui.geometry.Offset $r1;

        r0 := @parameter0: androidx.ui.text.TextLayoutResult;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = staticinvoke <androidx.ui.text.selection.TextSelectionDelegateKt: androidx.ui.geometry.Offset getSelectionHandleCoordinates(androidx.ui.text.TextLayoutResult,int,boolean,boolean)>(r0, i0, z0, z1);

        return $r1;
    }

