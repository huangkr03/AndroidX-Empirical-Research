androidx.compose.FlowAdapterKt
    public static final androidx.compose.State collectAsState(kotlinx.coroutines.flow.StateFlow, kotlin.coroutines.CoroutineContext, androidx.compose.Composer, int, int, int)
    {
        kotlinx.coroutines.flow.StateFlow $r0;
        kotlin.coroutines.CoroutineContext r1, r3, $r9;
        androidx.compose.Composer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.compose.State r4;
        kotlinx.coroutines.flow.Flow $r5;
        java.lang.Object $r6;
        kotlinx.coroutines.Dispatchers $r7;
        kotlinx.coroutines.MainCoroutineDispatcher $r8;

        $r0 := @parameter0: kotlinx.coroutines.flow.StateFlow;

        r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter2: androidx.compose.Composer;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r2.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $r7 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE>;

        $r8 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r9 = (kotlin.coroutines.CoroutineContext) $r8;

        goto label2;

     label1:
        $r9 = r1;

     label2:
        r3 = $r9;

        $r5 = (kotlinx.coroutines.flow.Flow) $r0;

        $r6 = interfaceinvoke $r0.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        $i4 = $i1 << 2;

        $i5 = 24 & $i4;

        r4 = staticinvoke <androidx.compose.FlowAdapterKt: androidx.compose.State collectAsState(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.coroutines.CoroutineContext,androidx.compose.Composer,int,int,int)>($r5, $r6, r3, $r2, 1567596138, $i5, 0);

        virtualinvoke $r2.<androidx.compose.Composer: void endReplaceableGroup()>();

        return r4;
    }

    public static final androidx.compose.State collectAsState(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext, androidx.compose.Composer, int, int, int)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.CoroutineContext r1, r3, $r7;
        androidx.compose.Composer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.compose.State r4;
        kotlinx.coroutines.Dispatchers $r5;
        kotlinx.coroutines.MainCoroutineDispatcher $r6;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter2: androidx.compose.Composer;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r2.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $r5 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        goto label2;

     label1:
        $r7 = r1;

     label2:
        r3 = $r7;

        $i4 = $i1 << 2;

        $i5 = 24 & $i4;

        $i6 = 6 | $i5;

        r4 = staticinvoke <androidx.compose.FlowAdapterKt: androidx.compose.State collectAsState(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.coroutines.CoroutineContext,androidx.compose.Composer,int,int,int)>($r0, null, r3, $r2, 1567596805, $i6, 0);

        virtualinvoke $r2.<androidx.compose.Composer: void endReplaceableGroup()>();

        return r4;
    }

    public static final androidx.compose.State collectAsState(kotlinx.coroutines.flow.Flow, java.lang.Object, kotlin.coroutines.CoroutineContext, androidx.compose.Composer, int, int, int)
    {
        kotlinx.coroutines.flow.Flow $r0;
        java.lang.Object r1, $r11, r19, r20, r22;
        kotlin.coroutines.CoroutineContext r2, r4, $r17;
        androidx.compose.Composer $r3;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.MutableState r5, r8, r9, r23;
        kotlin.jvm.functions.Function2 r6, $r18;
        androidx.compose.SlotTable$Companion $r10;
        androidx.compose.FlowAdapterKt$collectAsState$1 $r12;
        kotlin.jvm.functions.Function1 $r13;
        androidx.compose.State $r14;
        kotlinx.coroutines.Dispatchers $r15;
        kotlinx.coroutines.MainCoroutineDispatcher $r16;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.coroutines.CoroutineContext;

        $r3 := @parameter3: androidx.compose.Composer;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $i2 := @parameter6: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r3.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $r15 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE>;

        $r16 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r17 = (kotlin.coroutines.CoroutineContext) $r16;

        goto label2;

     label1:
        $r17 = r2;

     label2:
        r4 = $r17;

        virtualinvoke $r3.<androidx.compose.Composer: void startReplaceableGroup(int)>(1567597349);

        if 1 == 0 goto label3;

        $r18 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getReferentiallyEqual()>();

        goto label4;

     label3:
        $r18 = null;

     label4:
        r6 = $r18;

        virtualinvoke $r3.<androidx.compose.Composer: void startReplaceableGroup(int)>(701502689);

        r19 = virtualinvoke $r3.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r10 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r11 = virtualinvoke $r10.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r19 == $r11 goto label5;

        goto label6;

     label5:
        r20 = r1;

        r8 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>(r20, r6);

        virtualinvoke $r3.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r8);

        r19 = r8;

     label6:
        r22 = r19;

        virtualinvoke $r3.<androidx.compose.Composer: void endReplaceableGroup()>();

        r9 = (androidx.compose.MutableState) r22;

        virtualinvoke $r3.<androidx.compose.Composer: void endReplaceableGroup()>();

        r5 = r9;

        $r12 = new androidx.compose.FlowAdapterKt$collectAsState$1;

        specialinvoke $r12.<androidx.compose.FlowAdapterKt$collectAsState$1: void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.flow.Flow,androidx.compose.MutableState)>(r4, $r0, r5);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        $i4 = 24 & $i1;

        staticinvoke <androidx.compose.EffectsKt: void onPreCommit(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1,androidx.compose.Composer,int,int)>($r0, r4, $r13, $r3, 1567597371, $i4);

        r23 = r5;

        virtualinvoke $r3.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r14 = (androidx.compose.State) r23;

        return $r14;
    }

