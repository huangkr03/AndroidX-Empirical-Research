androidx.compose.internal.RestartableFunctionKt
<androidx.compose.internal.RestartableFunctionKt: int SLOTS_PER_INT>
    public static final int bitsForSlot(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i1 % 15;

        $i3 = i2 * 2;

        $i4 = $i3 + 1;

        $i5 = i0 << $i4;

        return $i5;
    }

    public static final int sameBits(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.compose.internal.RestartableFunctionKt: int bitsForSlot(int,int)>(1, i0);

        return $i1;
    }

    public static final int differentBits(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.compose.internal.RestartableFunctionKt: int bitsForSlot(int,int)>(2, i0);

        return $i1;
    }

    private static final boolean replacableWith(androidx.compose.RecomposeScope, androidx.compose.RecomposeScope)
    {
        androidx.compose.RecomposeScope $r0, r1;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.Anchor $r2, $r3;

        $r0 := @parameter0: androidx.compose.RecomposeScope;

        r1 := @parameter1: androidx.compose.RecomposeScope;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<androidx.compose.RecomposeScope: boolean getValid()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, r1);

        if $z1 != 0 goto label1;

        $r2 = virtualinvoke $r0.<androidx.compose.RecomposeScope: androidx.compose.Anchor getAnchor()>();

        $r3 = virtualinvoke r1.<androidx.compose.RecomposeScope: androidx.compose.Anchor getAnchor()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static final androidx.compose.internal.RestartableFunction restartableFunction(androidx.compose.Composer, int, boolean, java.lang.Object)
    {
        androidx.compose.Composer r0;
        int i0;
        boolean z0;
        java.lang.Object r1, r2, $r5, r10;
        androidx.compose.internal.RestartableFunction r3, $r7, r8, $r9;
        androidx.compose.SlotTable$Companion $r4;
        java.lang.NullPointerException $r6;

        r0 := @parameter0: androidx.compose.Composer;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        virtualinvoke r0.<androidx.compose.Composer: void startReplaceableGroup(int)>(i0);

        r2 = virtualinvoke r0.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r4 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r2 != $r5 goto label1;

        $r7 = new androidx.compose.internal.RestartableFunction;

        specialinvoke $r7.<androidx.compose.internal.RestartableFunction: void <init>(int,boolean)>(i0, z0);

        r8 = $r7;

        virtualinvoke r0.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r8);

        $r9 = r8;

        goto label3;

     label1:
        r10 = r2;

        if r10 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type androidx.compose.internal.RestartableFunction<kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any, kotlin.Any>{ androidx.compose.internal.RestartableFunctionKt.RFunction }");

        throw $r6;

     label2:
        $r9 = (androidx.compose.internal.RestartableFunction) r10;

     label3:
        r3 = $r9;

        virtualinvoke r3.<androidx.compose.internal.RestartableFunction: void update(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.compose.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public static final androidx.compose.internal.RestartableFunction restartableFunctionInstance(int, boolean, java.lang.Object)
    {
        int i0;
        boolean z0, z1, z2;
        java.lang.Object r0;
        androidx.compose.internal.RestartableFunction r1, $r2;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "block");

        $r2 = new androidx.compose.internal.RestartableFunction;

        specialinvoke $r2.<androidx.compose.internal.RestartableFunction: void <init>(int,boolean)>(i0, z0);

        r1 = $r2;

        z1 = 0;

        z2 = 0;

        virtualinvoke r1.<androidx.compose.internal.RestartableFunction: void update(java.lang.Object)>(r0);

        return r1;
    }

    private static void RFunction$annotations()
    {
        return;
    }

    public static final boolean access$replacableWith(androidx.compose.RecomposeScope, androidx.compose.RecomposeScope)
    {
        androidx.compose.RecomposeScope $r0, r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.RecomposeScope;

        r1 := @parameter1: androidx.compose.RecomposeScope;

        $z0 = staticinvoke <androidx.compose.internal.RestartableFunctionKt: boolean replacableWith(androidx.compose.RecomposeScope,androidx.compose.RecomposeScope)>($r0, r1);

        return $z0;
    }

