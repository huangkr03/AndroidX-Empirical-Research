androidx.room.compiler.codegen.XAnnotationSpec
<androidx.room.compiler.codegen.XAnnotationSpec: androidx.room.compiler.codegen.XAnnotationSpec$Companion Companion>
    static void <clinit>()
    {
        androidx.room.compiler.codegen.XAnnotationSpec$Companion $r0;

        $r0 = <androidx.room.compiler.codegen.XAnnotationSpec$Companion: androidx.room.compiler.codegen.XAnnotationSpec$Companion $$INSTANCE>;

        <androidx.room.compiler.codegen.XAnnotationSpec: androidx.room.compiler.codegen.XAnnotationSpec$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion
<androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion: androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion $$INSTANCE>
    private void <init>()
    {
        androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion r0;

        r0 := @this: androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final transient androidx.room.compiler.codegen.XAnnotationSpec$Builder addMember(androidx.room.compiler.codegen.XAnnotationSpec$Builder, java.lang.String, java.lang.String, java.lang.Object[])
    {
        androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion r0;
        androidx.room.compiler.codegen.XAnnotationSpec$Builder $r1, $r9;
        java.lang.String r2, r3;
        java.lang.Object[] r4, $r7;
        androidx.room.compiler.codegen.XCodeBlock$Companion $r5;
        androidx.room.compiler.codegen.CodeLanguage $r6;
        int $i0;
        androidx.room.compiler.codegen.XCodeBlock $r8;

        r0 := @this: androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion;

        $r1 := @parameter0: androidx.room.compiler.codegen.XAnnotationSpec$Builder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "format");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "args");

        $r5 = <androidx.room.compiler.codegen.XCodeBlock: androidx.room.compiler.codegen.XCodeBlock$Companion Companion>;

        $r6 = interfaceinvoke $r1.<androidx.room.compiler.codegen.XAnnotationSpec$Builder: androidx.room.compiler.codegen.CodeLanguage getLanguage()>();

        $i0 = lengthof r4;

        $r7 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r4, $i0);

        $r8 = virtualinvoke $r5.<androidx.room.compiler.codegen.XCodeBlock$Companion: androidx.room.compiler.codegen.XCodeBlock of(androidx.room.compiler.codegen.CodeLanguage,java.lang.String,java.lang.Object[])>($r6, r3, $r7);

        $r9 = interfaceinvoke $r1.<androidx.room.compiler.codegen.XAnnotationSpec$Builder: androidx.room.compiler.codegen.XAnnotationSpec$Builder addMember(java.lang.String,androidx.room.compiler.codegen.XCodeBlock)>(r2, $r8);

        return $r9;
    }

    static void <clinit>()
    {
        androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion $r0;

        $r0 = new androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion;

        specialinvoke $r0.<androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion: void <init>()>();

        <androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion: androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion $$INSTANCE> = $r0;

        return;
    }

androidx.room.compiler.codegen.XAnnotationSpec$Builder
<androidx.room.compiler.codegen.XAnnotationSpec$Builder: androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion Companion>
<androidx.room.compiler.codegen.XAnnotationSpec$Builder: androidx.room.compiler.codegen.XAnnotationSpec$Builder addMember(java.lang.String,androidx.room.compiler.codegen.XCodeBlock)>
<androidx.room.compiler.codegen.XAnnotationSpec$Builder: androidx.room.compiler.codegen.XAnnotationSpec build()>
    static void <clinit>()
    {
        androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion $r0;

        $r0 = <androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion: androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion $$INSTANCE>;

        <androidx.room.compiler.codegen.XAnnotationSpec$Builder: androidx.room.compiler.codegen.XAnnotationSpec$Builder$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.codegen.XAnnotationSpec$Companion$WhenMappings
<androidx.room.compiler.codegen.XAnnotationSpec$Companion$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.room.compiler.codegen.CodeLanguage[] $r1;
        int $i0, $i1, $i2;
        androidx.room.compiler.codegen.CodeLanguage $r2, $r3;
        java.lang.Throwable $r4, $r5, r6, r7;

        $r1 = staticinvoke <androidx.room.compiler.codegen.CodeLanguage: androidx.room.compiler.codegen.CodeLanguage[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label1:
        $r2 = <androidx.room.compiler.codegen.CodeLanguage: androidx.room.compiler.codegen.CodeLanguage JAVA>;

        $i1 = virtualinvoke $r2.<androidx.room.compiler.codegen.CodeLanguage: int ordinal()>();

        r0[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

     label4:
        $r3 = <androidx.room.compiler.codegen.CodeLanguage: androidx.room.compiler.codegen.CodeLanguage KOTLIN>;

        $i2 = virtualinvoke $r3.<androidx.room.compiler.codegen.CodeLanguage: int ordinal()>();

        r0[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        r7 = $r4;

     label7:
        <androidx.room.compiler.codegen.XAnnotationSpec$Companion$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

androidx.room.compiler.codegen.XAnnotationSpec$Companion
<androidx.room.compiler.codegen.XAnnotationSpec$Companion: androidx.room.compiler.codegen.XAnnotationSpec$Companion $$INSTANCE>
    private void <init>()
    {
        androidx.room.compiler.codegen.XAnnotationSpec$Companion r0;

        r0 := @this: androidx.room.compiler.codegen.XAnnotationSpec$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.codegen.XAnnotationSpec$Builder builder(androidx.room.compiler.codegen.CodeLanguage, androidx.room.compiler.codegen.XClassName)
    {
        androidx.room.compiler.codegen.XAnnotationSpec$Companion r0;
        androidx.room.compiler.codegen.CodeLanguage r1;
        androidx.room.compiler.codegen.XClassName r2;
        int[] $r3;
        int $i0, $i1;
        androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder $r4;
        com.squareup.kotlinpoet.AnnotationSpec$Companion $r5;
        com.squareup.kotlinpoet.ClassName $r6;
        com.squareup.kotlinpoet.AnnotationSpec$Builder $r7;
        androidx.room.compiler.codegen.java.JavaAnnotationSpec$Builder $r8;
        com.squareup.javapoet.ClassName $r9;
        com.squareup.javapoet.AnnotationSpec$Builder $r10;
        kotlin.NoWhenBranchMatchedException $r11;
        androidx.room.compiler.codegen.XAnnotationSpec$Builder $r12;

        r0 := @this: androidx.room.compiler.codegen.XAnnotationSpec$Companion;

        r1 := @parameter0: androidx.room.compiler.codegen.CodeLanguage;

        r2 := @parameter1: androidx.room.compiler.codegen.XClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "language");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "className");

        $r3 = <androidx.room.compiler.codegen.XAnnotationSpec$Companion$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r1.<androidx.room.compiler.codegen.CodeLanguage: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r8 = new androidx.room.compiler.codegen.java.JavaAnnotationSpec$Builder;

        $r9 = virtualinvoke r2.<androidx.room.compiler.codegen.XClassName: com.squareup.javapoet.ClassName getJava$room_compiler_processing()>();

        $r10 = staticinvoke <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec$Builder builder(com.squareup.javapoet.ClassName)>($r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "builder(className.java)");

        specialinvoke $r8.<androidx.room.compiler.codegen.java.JavaAnnotationSpec$Builder: void <init>(com.squareup.javapoet.AnnotationSpec$Builder)>($r10);

        $r12 = (androidx.room.compiler.codegen.XAnnotationSpec$Builder) $r8;

        goto label4;

     label2:
        $r4 = new androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder;

        $r5 = <com.squareup.kotlinpoet.AnnotationSpec: com.squareup.kotlinpoet.AnnotationSpec$Companion Companion>;

        $r6 = virtualinvoke r2.<androidx.room.compiler.codegen.XClassName: com.squareup.kotlinpoet.ClassName getKotlin$room_compiler_processing()>();

        $r7 = virtualinvoke $r5.<com.squareup.kotlinpoet.AnnotationSpec$Companion: com.squareup.kotlinpoet.AnnotationSpec$Builder builder(com.squareup.kotlinpoet.ClassName)>($r6);

        specialinvoke $r4.<androidx.room.compiler.codegen.kotlin.KotlinAnnotationSpec$Builder: void <init>(com.squareup.kotlinpoet.AnnotationSpec$Builder)>($r7);

        $r12 = (androidx.room.compiler.codegen.XAnnotationSpec$Builder) $r4;

        goto label4;

     label3:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label4:
        return $r12;
    }

    static void <clinit>()
    {
        androidx.room.compiler.codegen.XAnnotationSpec$Companion $r0;

        $r0 = new androidx.room.compiler.codegen.XAnnotationSpec$Companion;

        specialinvoke $r0.<androidx.room.compiler.codegen.XAnnotationSpec$Companion: void <init>()>();

        <androidx.room.compiler.codegen.XAnnotationSpec$Companion: androidx.room.compiler.codegen.XAnnotationSpec$Companion $$INSTANCE> = $r0;

        return;
    }

