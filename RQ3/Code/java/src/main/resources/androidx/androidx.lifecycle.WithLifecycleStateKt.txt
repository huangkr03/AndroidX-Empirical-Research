androidx.lifecycle.WithLifecycleStateKt
    public static final java.lang.Object withStateAtLeast(androidx.lifecycle.Lifecycle, androidx.lifecycle.Lifecycle$State, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        androidx.lifecycle.Lifecycle$State r1, $r6, $r13, $r14, $r15;
        kotlin.jvm.functions.Function0 r2, $r12;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r8;
        boolean z1, $z2;
        java.lang.Enum $r7, $r16;
        int $i0, $i1;
        kotlin.coroutines.CoroutineContext $r9;
        kotlinx.coroutines.CoroutineDispatcher $r11;
        java.lang.StringBuilder $r19, $r20, r25;
        java.lang.String $r22, $r23;
        java.lang.Object $r24;
        java.lang.IllegalArgumentException r26;
        androidx.lifecycle.LifecycleDestroyedException r27;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r28;
        java.lang.Throwable r29;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r6 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r7 = (java.lang.Enum) $r6;

        $i0 = virtualinvoke r1.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r7);

        if $i0 < 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target state must be CREATED or greater, found ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw r26;

     label3:
        $r8 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r8.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r9 = interfaceinvoke $r3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z1 = virtualinvoke r5.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r9);

        if z1 != 0 goto label5;

        $r13 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r14 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r13 != $r14 goto label4;

        r27 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r27.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r29 = (java.lang.Throwable) r27;

        throw r29;

     label4:
        $r15 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r16 = (java.lang.Enum) r1;

        $i1 = virtualinvoke $r15.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r16);

        if $i1 < 0 goto label5;

        $r24 = interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label6;

     label5:
        $r11 = (kotlinx.coroutines.CoroutineDispatcher) r5;

        r28 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r28.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r2);

        $r12 = (kotlin.jvm.functions.Function0) r28;

        $r24 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r0, r1, z1, $r11, $r12, $r3);

     label6:
        return $r24;
    }

    private static final java.lang.Object withStateAtLeast$$forInline(androidx.lifecycle.Lifecycle, androidx.lifecycle.Lifecycle$State, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        androidx.lifecycle.Lifecycle$State r1, $r5, $r12, $r13, $r14;
        kotlin.jvm.functions.Function0 r2, $r11;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.MainCoroutineDispatcher r4, $r7;
        boolean z0, $z1;
        java.lang.Enum $r6, $r15;
        int $i0, $i1;
        kotlin.coroutines.CoroutineContext $r8;
        kotlinx.coroutines.CoroutineDispatcher $r10;
        java.lang.StringBuilder $r18, $r19, r25;
        java.lang.String $r21, $r22;
        java.lang.Object $r24;
        java.lang.IllegalArgumentException r26;
        androidx.lifecycle.LifecycleDestroyedException r27;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r28;
        java.lang.Throwable r29;
        java.lang.NullPointerException r30;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r6 = (java.lang.Enum) $r5;

        $i0 = virtualinvoke r1.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r6);

        if $i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label4;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target state must be CREATED or greater, found ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        goto label3;

     label3:
        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = new java.lang.IllegalArgumentException;

        $r21 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw r26;

     label4:
        goto label5;

     label5:
        $r7 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r4 = virtualinvoke $r7.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r30 = new java.lang.NullPointerException;

        specialinvoke r30.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack15 = interfaceinvoke $stack14.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r30;
    }

    public static final java.lang.Object withCreated(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z2;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r7 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z2 = virtualinvoke r5.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r7);

        if z2 != 0 goto label2;

        $r11 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r12 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r11 != $r12 goto label1;

        r17 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r17.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label1:
        $r13 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r14 = (java.lang.Enum) r4;

        $i0 = virtualinvoke $r13.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r14);

        if $i0 < 0 goto label2;

        $r16 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label3;

     label2:
        $r9 = (kotlinx.coroutines.CoroutineDispatcher) r5;

        r18 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r18.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r1);

        $r10 = (kotlin.jvm.functions.Function0) r18;

        $r16 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r0, r4, z2, $r9, $r10, $r2);

     label3:
        return $r16;
    }

    private static final java.lang.Object withCreated$$forInline(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z0;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;
        java.lang.NullPointerException r20;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r20 = new java.lang.NullPointerException;

        specialinvoke r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack12 = interfaceinvoke $stack11.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r20;
    }

    public static final java.lang.Object withStarted(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z2;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r7 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z2 = virtualinvoke r5.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r7);

        if z2 != 0 goto label2;

        $r11 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r12 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r11 != $r12 goto label1;

        r17 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r17.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label1:
        $r13 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r14 = (java.lang.Enum) r4;

        $i0 = virtualinvoke $r13.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r14);

        if $i0 < 0 goto label2;

        $r16 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label3;

     label2:
        $r9 = (kotlinx.coroutines.CoroutineDispatcher) r5;

        r18 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r18.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r1);

        $r10 = (kotlin.jvm.functions.Function0) r18;

        $r16 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r0, r4, z2, $r9, $r10, $r2);

     label3:
        return $r16;
    }

    private static final java.lang.Object withStarted$$forInline(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z0;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;
        java.lang.NullPointerException r20;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r20 = new java.lang.NullPointerException;

        specialinvoke r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack12 = interfaceinvoke $stack11.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r20;
    }

    public static final java.lang.Object withResumed(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z2;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r7 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z2 = virtualinvoke r5.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r7);

        if z2 != 0 goto label2;

        $r11 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r12 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r11 != $r12 goto label1;

        r17 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r17.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label1:
        $r13 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r14 = (java.lang.Enum) r4;

        $i0 = virtualinvoke $r13.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r14);

        if $i0 < 0 goto label2;

        $r16 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label3;

     label2:
        $r9 = (kotlinx.coroutines.CoroutineDispatcher) r5;

        r18 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r18.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r1);

        $r10 = (kotlin.jvm.functions.Function0) r18;

        $r16 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r0, r4, z2, $r9, $r10, $r2);

     label3:
        return $r16;
    }

    private static final java.lang.Object withResumed$$forInline(androidx.lifecycle.Lifecycle, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z0;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;
        java.lang.NullPointerException r20;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r20 = new java.lang.NullPointerException;

        specialinvoke r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack12 = interfaceinvoke $stack11.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r20;
    }

    public static final java.lang.Object withStateAtLeast(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$State, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        androidx.lifecycle.Lifecycle$State r1, $r7, $r14, $r15, $r16;
        kotlin.jvm.functions.Function0 r2, $r13;
        kotlin.coroutines.Continuation $r3;
        androidx.lifecycle.Lifecycle $r4;
        kotlinx.coroutines.MainCoroutineDispatcher r6, $r9;
        boolean z2, $z3;
        java.lang.Enum $r8, $r17;
        int $i0, $i1;
        kotlin.coroutines.CoroutineContext $r10;
        kotlinx.coroutines.CoroutineDispatcher $r12;
        java.lang.StringBuilder $r20, $r21, r26;
        java.lang.String $r23, $r24;
        java.lang.Object $r25;
        java.lang.IllegalArgumentException r27;
        androidx.lifecycle.LifecycleDestroyedException r28;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r29;
        java.lang.Throwable r30;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r4 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r7 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r8 = (java.lang.Enum) $r7;

        $i0 = virtualinvoke r1.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8);

        if $i0 < 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 != 0 goto label3;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target state must be CREATED or greater, found ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        r27 = new java.lang.IllegalArgumentException;

        $r23 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw r27;

     label3:
        $r9 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r6 = virtualinvoke $r9.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r10 = interfaceinvoke $r3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z2 = virtualinvoke r6.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r10);

        if z2 != 0 goto label5;

        $r14 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r15 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r14 != $r15 goto label4;

        r28 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r28.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r30 = (java.lang.Throwable) r28;

        throw r30;

     label4:
        $r16 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r17 = (java.lang.Enum) r1;

        $i1 = virtualinvoke $r16.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r17);

        if $i1 < 0 goto label5;

        $r25 = interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label6;

     label5:
        $r12 = (kotlinx.coroutines.CoroutineDispatcher) r6;

        r29 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r29.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r2);

        $r13 = (kotlin.jvm.functions.Function0) r29;

        $r25 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r4, r1, z2, $r12, $r13, $r3);

     label6:
        return $r25;
    }

    private static final java.lang.Object withStateAtLeast$$forInline(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$State, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        androidx.lifecycle.Lifecycle$State r1, $r6, $r13, $r14, $r15;
        kotlin.jvm.functions.Function0 r2, $r12;
        kotlin.coroutines.Continuation $r3;
        androidx.lifecycle.Lifecycle $r4;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r8;
        boolean z0, $z1;
        java.lang.Enum $r7, $r16;
        int $i0, $i1;
        kotlin.coroutines.CoroutineContext $r9;
        kotlinx.coroutines.CoroutineDispatcher $r11;
        java.lang.StringBuilder $r19, $r20, r26;
        java.lang.String $r22, $r23;
        java.lang.Object $r25;
        java.lang.IllegalArgumentException r27;
        androidx.lifecycle.LifecycleDestroyedException r28;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r29;
        java.lang.Throwable r30;
        java.lang.NullPointerException r31;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r4 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r6 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r7 = (java.lang.Enum) $r6;

        $i0 = virtualinvoke r1.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r7);

        if $i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label4;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target state must be CREATED or greater, found ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        goto label3;

     label3:
        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r27 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw r27;

     label4:
        goto label5;

     label5:
        $r8 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r8.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r31 = new java.lang.NullPointerException;

        specialinvoke r31.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack18 = interfaceinvoke $stack17.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r31;
    }

    public static final java.lang.Object withCreated(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z2;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r7 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z2 = virtualinvoke r5.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r7);

        if z2 != 0 goto label2;

        $r11 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r12 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r11 != $r12 goto label1;

        r17 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r17.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label1:
        $r13 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r14 = (java.lang.Enum) r4;

        $i0 = virtualinvoke $r13.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r14);

        if $i0 < 0 goto label2;

        $r16 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label3;

     label2:
        $r9 = (kotlinx.coroutines.CoroutineDispatcher) r5;

        r18 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r18.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r1);

        $r10 = (kotlin.jvm.functions.Function0) r18;

        $r16 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r3, r4, z2, $r9, $r10, $r2);

     label3:
        return $r16;
    }

    private static final java.lang.Object withCreated$$forInline(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z0;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;
        java.lang.NullPointerException r20;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r20 = new java.lang.NullPointerException;

        specialinvoke r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack13 = interfaceinvoke $stack12.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r20;
    }

    public static final java.lang.Object withStarted(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z2;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r7 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z2 = virtualinvoke r5.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r7);

        if z2 != 0 goto label2;

        $r11 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r12 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r11 != $r12 goto label1;

        r17 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r17.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label1:
        $r13 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r14 = (java.lang.Enum) r4;

        $i0 = virtualinvoke $r13.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r14);

        if $i0 < 0 goto label2;

        $r16 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label3;

     label2:
        $r9 = (kotlinx.coroutines.CoroutineDispatcher) r5;

        r18 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r18.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r1);

        $r10 = (kotlin.jvm.functions.Function0) r18;

        $r16 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r3, r4, z2, $r9, $r10, $r2);

     label3:
        return $r16;
    }

    private static final java.lang.Object withStarted$$forInline(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z0;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;
        java.lang.NullPointerException r20;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r20 = new java.lang.NullPointerException;

        specialinvoke r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack13 = interfaceinvoke $stack12.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r20;
    }

    public static final java.lang.Object withResumed(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z2;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r7 = interfaceinvoke $r2.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z2 = virtualinvoke r5.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r7);

        if z2 != 0 goto label2;

        $r11 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r12 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r11 != $r12 goto label1;

        r17 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r17.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label1:
        $r13 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r14 = (java.lang.Enum) r4;

        $i0 = virtualinvoke $r13.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r14);

        if $i0 < 0 goto label2;

        $r16 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label3;

     label2:
        $r9 = (kotlinx.coroutines.CoroutineDispatcher) r5;

        r18 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r18.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r1);

        $r10 = (kotlin.jvm.functions.Function0) r18;

        $r16 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r3, r4, z2, $r9, $r10, $r2);

     label3:
        return $r16;
    }

    private static final java.lang.Object withResumed$$forInline(androidx.lifecycle.LifecycleOwner, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LifecycleOwner $r0;
        kotlin.jvm.functions.Function0 r1, $r10;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.Lifecycle$State r4, $r11, $r12, $r13;
        kotlinx.coroutines.MainCoroutineDispatcher r5, $r6;
        boolean z0;
        kotlin.coroutines.CoroutineContext $r7;
        kotlinx.coroutines.CoroutineDispatcher $r9;
        java.lang.Enum $r14;
        int $i0;
        java.lang.Object $r16;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;
        java.lang.NullPointerException r20;

        $r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED>;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r20 = new java.lang.NullPointerException;

        specialinvoke r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack13 = interfaceinvoke $stack12.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r20;
    }

    public static final java.lang.Object withStateAtLeastUnchecked(androidx.lifecycle.Lifecycle, androidx.lifecycle.Lifecycle$State, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        androidx.lifecycle.Lifecycle$State r1, $r11, $r12, $r13;
        kotlin.jvm.functions.Function0 r2, $r9;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.MainCoroutineDispatcher r4, $r5;
        boolean z1;
        kotlin.coroutines.CoroutineContext $r6;
        kotlinx.coroutines.CoroutineDispatcher $r8;
        java.lang.Object $r10, $r15;
        java.lang.Enum $r14;
        int $i0;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r4 = virtualinvoke $r5.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r6 = interfaceinvoke $r3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z1 = virtualinvoke r4.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r6);

        if z1 != 0 goto label2;

        $r11 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r12 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r11 != $r12 goto label1;

        r17 = new androidx.lifecycle.LifecycleDestroyedException;

        specialinvoke r17.<androidx.lifecycle.LifecycleDestroyedException: void <init>()>();

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label1:
        $r13 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r14 = (java.lang.Enum) r1;

        $i0 = virtualinvoke $r13.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r14);

        if $i0 < 0 goto label2;

        $r15 = interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return $r15;

     label2:
        $r8 = (kotlinx.coroutines.CoroutineDispatcher) r4;

        r18 = new androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2;

        specialinvoke r18.<androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2: void <init>(kotlin.jvm.functions.Function0)>(r2);

        $r9 = (kotlin.jvm.functions.Function0) r18;

        $r10 = staticinvoke <androidx.lifecycle.WithLifecycleStateKt: java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,boolean,kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r0, r1, z1, $r8, $r9, $r3);

        return $r10;
    }

    private static final java.lang.Object withStateAtLeastUnchecked$$forInline(androidx.lifecycle.Lifecycle, androidx.lifecycle.Lifecycle$State, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        androidx.lifecycle.Lifecycle$State r1, $r11, $r12, $r13;
        kotlin.jvm.functions.Function0 r2, $r9;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.MainCoroutineDispatcher r4, $r5;
        boolean z0;
        kotlin.coroutines.CoroutineContext $r6;
        kotlinx.coroutines.CoroutineDispatcher $r8;
        java.lang.Object $r10, $r15;
        java.lang.Enum $r14;
        int $i0;
        androidx.lifecycle.LifecycleDestroyedException r17;
        androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 r18;
        java.lang.Throwable r19;
        java.lang.NullPointerException r20;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r4 = virtualinvoke $r5.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r20 = new java.lang.NullPointerException;

        specialinvoke r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack10 = interfaceinvoke $stack9.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r20;
    }

    public static final java.lang.Object suspendWithStateAtLeastUnchecked(androidx.lifecycle.Lifecycle, androidx.lifecycle.Lifecycle$State, boolean, kotlinx.coroutines.CoroutineDispatcher, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.Lifecycle $r0;
        androidx.lifecycle.Lifecycle$State r1;
        boolean z0;
        kotlinx.coroutines.CoroutineDispatcher r2;
        kotlin.jvm.functions.Function0 r3;
        kotlin.coroutines.Continuation $r4, r5, $r10;
        kotlinx.coroutines.CancellableContinuationImpl r6, $r9;
        kotlinx.coroutines.CancellableContinuation r7;
        androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1 r8, $r11;
        androidx.lifecycle.LifecycleObserver $r12;
        androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$2 $r13;
        kotlin.jvm.functions.Function1 $r14;
        java.lang.Object $r15, $r16;
        kotlin.coroutines.EmptyCoroutineContext $r17;
        androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$1 $r18;
        kotlin.coroutines.CoroutineContext $r19;
        java.lang.Runnable $r20;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        z0 := @parameter2: boolean;

        r2 := @parameter3: kotlinx.coroutines.CoroutineDispatcher;

        r3 := @parameter4: kotlin.jvm.functions.Function0;

        $r4 := @parameter5: kotlin.coroutines.Continuation;

        r5 = $r4;

        $r9 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r5);

        specialinvoke $r9.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r10, 1);

        r6 = $r9;

        virtualinvoke r6.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r7 = (kotlinx.coroutines.CancellableContinuation) r6;

        $r11 = new androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1;

        specialinvoke $r11.<androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1: void <init>(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle,kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function0)>(r1, $r0, r7, r3);

        r8 = $r11;

        if z0 == 0 goto label1;

        $r17 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r19 = (kotlin.coroutines.CoroutineContext) $r17;

        $r18 = new androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$1;

        specialinvoke $r18.<androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$1: void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1)>($r0, r8);

        $r20 = (java.lang.Runnable) $r18;

        virtualinvoke r2.<kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>($r19, $r20);

        goto label2;

     label1:
        $r12 = (androidx.lifecycle.LifecycleObserver) r8;

        virtualinvoke $r0.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r12);

     label2:
        $r13 = new androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$2;

        specialinvoke $r13.<androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$2: void <init>(kotlinx.coroutines.CoroutineDispatcher,androidx.lifecycle.Lifecycle,androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1)>(r2, $r0, r8);

        $r14 = (kotlin.jvm.functions.Function1) $r13;

        interfaceinvoke r7.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r14);

        $r15 = virtualinvoke r6.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r16 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r15 != $r16 goto label3;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r4);

     label3:
        return $r15;
    }

