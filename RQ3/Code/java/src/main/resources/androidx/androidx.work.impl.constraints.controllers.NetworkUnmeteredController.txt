androidx.work.impl.constraints.controllers.NetworkUnmeteredController
    public void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)
    {
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController r0;
        androidx.work.impl.constraints.trackers.ConstraintTracker r1;

        r0 := @this: androidx.work.impl.constraints.controllers.NetworkUnmeteredController;

        r1 := @parameter0: androidx.work.impl.constraints.trackers.ConstraintTracker;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tracker");

        specialinvoke r0.<androidx.work.impl.constraints.controllers.ConstraintController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>(r1);

        return;
    }

    public boolean hasConstraint(androidx.work.impl.model.WorkSpec)
    {
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController r0;
        androidx.work.impl.model.WorkSpec r1;
        androidx.work.NetworkType r2, $r4, $r5;
        androidx.work.Constraints $r3;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.work.impl.constraints.controllers.NetworkUnmeteredController;

        r1 := @parameter0: androidx.work.impl.model.WorkSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workSpec");

        $r3 = r1.<androidx.work.impl.model.WorkSpec: androidx.work.Constraints constraints>;

        r2 = virtualinvoke $r3.<androidx.work.Constraints: androidx.work.NetworkType getRequiredNetworkType()>();

        $r4 = <androidx.work.NetworkType: androidx.work.NetworkType UNMETERED>;

        if r2 == $r4 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 30 goto label2;

        $r5 = <androidx.work.NetworkType: androidx.work.NetworkType TEMPORARILY_UNMETERED>;

        if r2 != $r5 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isConstrained(androidx.work.impl.constraints.NetworkState)
    {
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController r0;
        androidx.work.impl.constraints.NetworkState r1;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.work.impl.constraints.controllers.NetworkUnmeteredController;

        r1 := @parameter0: androidx.work.impl.constraints.NetworkState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $z0 = virtualinvoke r1.<androidx.work.impl.constraints.NetworkState: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<androidx.work.impl.constraints.NetworkState: boolean isMetered()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public volatile boolean isConstrained(java.lang.Object)
    {
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController r0;
        java.lang.Object r1;
        androidx.work.impl.constraints.NetworkState $r2;
        boolean $z0;

        r0 := @this: androidx.work.impl.constraints.controllers.NetworkUnmeteredController;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.work.impl.constraints.NetworkState) r1;

        $z0 = virtualinvoke r0.<androidx.work.impl.constraints.controllers.NetworkUnmeteredController: boolean isConstrained(androidx.work.impl.constraints.NetworkState)>($r2);

        return $z0;
    }

