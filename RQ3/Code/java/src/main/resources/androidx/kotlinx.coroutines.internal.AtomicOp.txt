kotlinx.coroutines.internal.AtomicOp
<kotlinx.coroutines.internal.AtomicOp: kotlinx.atomicfu.AtomicRef _consensus>
    public void <init>()
    {
        kotlinx.coroutines.internal.AtomicOp $r0;
        kotlinx.atomicfu.AtomicRef $r1;
        java.lang.Object $r2;

        $r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        specialinvoke $r0.<kotlinx.coroutines.internal.OpDescriptor: void <init>()>();

        $r2 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        $r1 = staticinvoke <kotlinx.atomicfu.AtomicFU: kotlinx.atomicfu.AtomicRef atomic(java.lang.Object)>($r2);

        $r0.<kotlinx.coroutines.internal.AtomicOp: kotlinx.atomicfu.AtomicRef _consensus> = $r1;

        return;
    }

<kotlinx.coroutines.internal.AtomicOp: void complete(java.lang.Object,java.lang.Object)>
    public final java.lang.Object decide(java.lang.Object)
    {
        kotlinx.coroutines.internal.AtomicOp $r0;
        java.lang.Object $r1, $r2, $r5;
        boolean $z0;
        java.lang.AssertionError $r3;
        kotlinx.atomicfu.AtomicRef $r4;

        $r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        $r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label4;

        $r2 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        if $r1 == $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $r4 = $r0.<kotlinx.coroutines.internal.AtomicOp: kotlinx.atomicfu.AtomicRef _consensus>;

        $r2 = virtualinvoke $r4.<kotlinx.atomicfu.AtomicRef: java.lang.Object getValue()>();

        $r5 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        if $r2 == $r5 goto label5;

        return $r2;

     label5:
        $r4 = $r0.<kotlinx.coroutines.internal.AtomicOp: kotlinx.atomicfu.AtomicRef _consensus>;

        $r2 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        $z0 = virtualinvoke $r4.<kotlinx.atomicfu.AtomicRef: boolean compareAndSet(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z0 == 0 goto label6;

        return $r1;

     label6:
        $r4 = $r0.<kotlinx.coroutines.internal.AtomicOp: kotlinx.atomicfu.AtomicRef _consensus>;

        $r1 = virtualinvoke $r4.<kotlinx.atomicfu.AtomicRef: java.lang.Object getValue()>();

        return $r1;
    }

    public kotlinx.coroutines.internal.AtomicOp getAtomicOp()
    {
        kotlinx.coroutines.internal.AtomicOp $r0;

        $r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        return $r0;
    }

    public long getOpSequence()
    {
        kotlinx.coroutines.internal.AtomicOp $r0;

        $r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        return 0L;
    }

    public final java.lang.Object perform(java.lang.Object)
    {
        kotlinx.coroutines.internal.AtomicOp $r0;
        java.lang.Object $r1, $r2, $r4, $r5;
        kotlinx.atomicfu.AtomicRef $r3;

        $r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        $r1 := @parameter0: java.lang.Object;

        $r3 = $r0.<kotlinx.coroutines.internal.AtomicOp: kotlinx.atomicfu.AtomicRef _consensus>;

        $r4 = virtualinvoke $r3.<kotlinx.atomicfu.AtomicRef: java.lang.Object getValue()>();

        $r5 = $r4;

        $r2 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        if $r4 != $r2 goto label1;

        $r2 = virtualinvoke $r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object prepare(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)>($r2);

     label1:
        virtualinvoke $r0.<kotlinx.coroutines.internal.AtomicOp: void complete(java.lang.Object,java.lang.Object)>($r1, $r5);

        return $r5;
    }

<kotlinx.coroutines.internal.AtomicOp: java.lang.Object prepare(java.lang.Object)>
