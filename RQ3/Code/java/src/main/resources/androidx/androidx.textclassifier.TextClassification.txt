androidx.textclassifier.TextClassification
<androidx.textclassifier.TextClassification: java.lang.String LOG_TAG>
<androidx.textclassifier.TextClassification: java.lang.String EXTRA_TEXT>
<androidx.textclassifier.TextClassification: java.lang.String EXTRA_ACTIONS>
<androidx.textclassifier.TextClassification: java.lang.String EXTRA_ENTITY_CONFIDENCE>
<androidx.textclassifier.TextClassification: java.lang.String EXTRA_ID>
<androidx.textclassifier.TextClassification: java.lang.String EXTRA_EXTRAS>
<androidx.textclassifier.TextClassification: androidx.core.graphics.drawable.IconCompat NO_ICON>
<androidx.textclassifier.TextClassification: androidx.textclassifier.TextClassification EMPTY>
<androidx.textclassifier.TextClassification: java.lang.String mText>
<androidx.textclassifier.TextClassification: java.util.List mActions>
<androidx.textclassifier.TextClassification: androidx.textclassifier.EntityConfidence mEntityConfidence>
<androidx.textclassifier.TextClassification: java.lang.String mId>
<androidx.textclassifier.TextClassification: android.os.Bundle mExtras>
    void <init>(java.lang.String, java.util.List, androidx.textclassifier.EntityConfidence, java.lang.String, android.os.Bundle)
    {
        androidx.textclassifier.TextClassification r0;
        java.lang.String r1, r4;
        java.util.List r2;
        androidx.textclassifier.EntityConfidence r3;
        android.os.Bundle r5;

        r0 := @this: androidx.textclassifier.TextClassification;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.textclassifier.EntityConfidence;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.textclassifier.TextClassification: java.lang.String mText> = r1;

        r0.<androidx.textclassifier.TextClassification: java.util.List mActions> = r2;

        r0.<androidx.textclassifier.TextClassification: androidx.textclassifier.EntityConfidence mEntityConfidence> = r3;

        r0.<androidx.textclassifier.TextClassification: java.lang.String mId> = r4;

        r0.<androidx.textclassifier.TextClassification: android.os.Bundle mExtras> = r5;

        return;
    }

    public java.lang.CharSequence getText()
    {
        androidx.textclassifier.TextClassification r0;
        java.lang.String $r1;

        r0 := @this: androidx.textclassifier.TextClassification;

        $r1 = r0.<androidx.textclassifier.TextClassification: java.lang.String mText>;

        return $r1;
    }

    public int getEntityTypeCount()
    {
        androidx.textclassifier.TextClassification r0;
        androidx.textclassifier.EntityConfidence $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: androidx.textclassifier.TextClassification;

        $r1 = r0.<androidx.textclassifier.TextClassification: androidx.textclassifier.EntityConfidence mEntityConfidence>;

        $r2 = virtualinvoke $r1.<androidx.textclassifier.EntityConfidence: java.util.List getEntities()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i0;
    }

    public java.lang.String getEntityType(int)
    {
        androidx.textclassifier.TextClassification r0;
        int i0;
        androidx.textclassifier.EntityConfidence $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: androidx.textclassifier.TextClassification;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.textclassifier.TextClassification: androidx.textclassifier.EntityConfidence mEntityConfidence>;

        $r2 = virtualinvoke $r1.<androidx.textclassifier.EntityConfidence: java.util.List getEntities()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public float getConfidenceScore(java.lang.String)
    {
        androidx.textclassifier.TextClassification r0;
        java.lang.String r1;
        androidx.textclassifier.EntityConfidence $r2;
        float $f0;

        r0 := @this: androidx.textclassifier.TextClassification;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.textclassifier.TextClassification: androidx.textclassifier.EntityConfidence mEntityConfidence>;

        $f0 = virtualinvoke $r2.<androidx.textclassifier.EntityConfidence: float getConfidenceScore(java.lang.String)>(r1);

        return $f0;
    }

    public java.util.List getActions()
    {
        androidx.textclassifier.TextClassification r0;
        java.util.List $r1;

        r0 := @this: androidx.textclassifier.TextClassification;

        $r1 = r0.<androidx.textclassifier.TextClassification: java.util.List mActions>;

        return $r1;
    }

    public java.lang.String getId()
    {
        androidx.textclassifier.TextClassification r0;
        java.lang.String $r1;

        r0 := @this: androidx.textclassifier.TextClassification;

        $r1 = r0.<androidx.textclassifier.TextClassification: java.lang.String mId>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        androidx.textclassifier.TextClassification r0;
        android.os.Bundle $r1, $r2;

        r0 := @this: androidx.textclassifier.TextClassification;

        $r1 = r0.<androidx.textclassifier.TextClassification: android.os.Bundle mExtras>;

        $r2 = staticinvoke <androidx.textclassifier.BundleUtils: android.os.Bundle deepCopy(android.os.Bundle)>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.textclassifier.TextClassification r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r5, $r7;
        androidx.textclassifier.EntityConfidence $r3;
        java.util.List $r4;
        java.util.Locale $r6;

        r0 := @this: androidx.textclassifier.TextClassification;

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r1 = newarray (java.lang.Object)[4];

        $r2 = r0.<androidx.textclassifier.TextClassification: java.lang.String mText>;

        $r1[0] = $r2;

        $r3 = r0.<androidx.textclassifier.TextClassification: androidx.textclassifier.EntityConfidence mEntityConfidence>;

        $r1[1] = $r3;

        $r4 = r0.<androidx.textclassifier.TextClassification: java.util.List mActions>;

        $r1[2] = $r4;

        $r5 = r0.<androidx.textclassifier.TextClassification: java.lang.String mId>;

        $r1[3] = $r5;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "TextClassification {text=%s, entities=%s, actions=%s, id=%s}", $r1);

        return $r7;
    }

    public android.os.Bundle toBundle()
    {
        androidx.textclassifier.TextClassification r0;
        android.os.Bundle r1, $r2, $r8;
        java.lang.String $r3, $r7;
        java.util.List $r4;
        androidx.textclassifier.EntityConfidence $r5;
        java.util.Map $r6;

        r0 := @this: androidx.textclassifier.TextClassification;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.textclassifier.TextClassification: java.lang.String mText>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("text", $r3);

        $r4 = r0.<androidx.textclassifier.TextClassification: java.util.List mActions>;

        staticinvoke <androidx.textclassifier.BundleUtils: void putRemoteActionList(android.os.Bundle,java.lang.String,java.util.List)>(r1, "actions", $r4);

        $r5 = r0.<androidx.textclassifier.TextClassification: androidx.textclassifier.EntityConfidence mEntityConfidence>;

        $r6 = virtualinvoke $r5.<androidx.textclassifier.EntityConfidence: java.util.Map getConfidenceMap()>();

        staticinvoke <androidx.textclassifier.BundleUtils: void putMap(android.os.Bundle,java.lang.String,java.util.Map)>(r1, "entity_conf", $r6);

        $r7 = r0.<androidx.textclassifier.TextClassification: java.lang.String mId>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", $r7);

        $r8 = r0.<androidx.textclassifier.TextClassification: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", $r8);

        return r1;
    }

    public static androidx.textclassifier.TextClassification createFromBundle(android.os.Bundle)
    {
        android.os.Bundle r0, $r7;
        androidx.textclassifier.TextClassification$Builder r1, $r2, $r4, $r6;
        java.lang.String $r3, $r5, $r16;
        java.util.Map $r8;
        java.util.Set $r9;
        boolean $z0, $z1;
        java.util.List $r10;
        androidx.textclassifier.TextClassification $r11;
        java.lang.Object $r12, $r14, $r15, $r17;
        java.lang.Float $r18;
        float $f0;
        java.util.Iterator r20, r22;
        java.util.Map$Entry r21;
        androidx.core.app.RemoteActionCompat r23;

        r0 := @parameter0: android.os.Bundle;

        $r2 = new androidx.textclassifier.TextClassification$Builder;

        specialinvoke $r2.<androidx.textclassifier.TextClassification$Builder: void <init>()>();

        $r3 = virtualinvoke r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("text");

        $r4 = virtualinvoke $r2.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder setText(java.lang.CharSequence)>($r3);

        $r5 = virtualinvoke r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("id");

        $r6 = virtualinvoke $r4.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder setId(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("extras");

        r1 = virtualinvoke $r6.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder setExtras(android.os.Bundle)>($r7);

        $r8 = staticinvoke <androidx.textclassifier.BundleUtils: java.util.Map getFloatStringMapOrThrow(android.os.Bundle,java.lang.String)>(r0, "entity_conf");

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r20 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        $r17 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.Float) $r17;

        $f0 = virtualinvoke $r18.<java.lang.Float: float floatValue()>();

        virtualinvoke r1.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder setEntityType(java.lang.String,float)>($r16, $f0);

        goto label1;

     label2:
        $r10 = staticinvoke <androidx.textclassifier.BundleUtils: java.util.List getRemoteActionListOrThrow(android.os.Bundle,java.lang.String)>(r0, "actions");

        r22 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (androidx.core.app.RemoteActionCompat) $r12;

        virtualinvoke r1.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder addAction(androidx.core.app.RemoteActionCompat)>(r23);

        goto label3;

     label4:
        $r11 = virtualinvoke r1.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification build()>();

        return $r11;
    }

    static androidx.textclassifier.TextClassification fromPlatform(android.content.Context, android.view.textclassifier.TextClassification)
    {
        android.content.Context r0;
        android.view.textclassifier.TextClassification r1;
        androidx.textclassifier.TextClassification$Builder r2, $r5;
        int i0, $i1, $i2, i3;
        android.app.RemoteAction r3;
        java.lang.String $r6, $r15, r17;
        android.content.Intent $r7;
        java.lang.CharSequence $r8;
        boolean $z0, $z1;
        androidx.core.app.RemoteActionCompat $r9, $r12;
        java.lang.Object $r11;
        float $f0;
        java.util.List r18;
        java.util.Iterator r19;
        androidx.textclassifier.TextClassification $r20;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.textclassifier.TextClassification;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = new androidx.textclassifier.TextClassification$Builder;

        specialinvoke $r5.<androidx.textclassifier.TextClassification$Builder: void <init>()>();

        $r6 = virtualinvoke r1.<android.view.textclassifier.TextClassification: java.lang.String getText()>();

        r2 = virtualinvoke $r5.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder setText(java.lang.CharSequence)>($r6);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 28 goto label1;

        $r15 = virtualinvoke r1.<android.view.textclassifier.TextClassification: java.lang.String getId()>();

        virtualinvoke r2.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder setId(java.lang.String)>($r15);

     label1:
        i0 = virtualinvoke r1.<android.view.textclassifier.TextClassification: int getEntityCount()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        r17 = virtualinvoke r1.<android.view.textclassifier.TextClassification: java.lang.String getEntity(int)>(i3);

        $f0 = virtualinvoke r1.<android.view.textclassifier.TextClassification: float getConfidenceScore(java.lang.String)>(r17);

        virtualinvoke r2.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder setEntityType(java.lang.String,float)>(r17, $f0);

        i3 = i3 + 1;

        goto label2;

     label3:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 28 goto label6;

        r18 = virtualinvoke r1.<android.view.textclassifier.TextClassification: java.util.List getActions()>();

        r19 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r11 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.app.RemoteAction) $r11;

        $r12 = staticinvoke <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>(r3);

        virtualinvoke r2.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder addAction(androidx.core.app.RemoteActionCompat)>($r12);

        goto label4;

     label5:
        goto label7;

     label6:
        $r7 = virtualinvoke r1.<android.view.textclassifier.TextClassification: android.content.Intent getIntent()>();

        if $r7 == null goto label7;

        $r8 = virtualinvoke r1.<android.view.textclassifier.TextClassification: java.lang.CharSequence getLabel()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z0 != 0 goto label7;

        $r9 = staticinvoke <androidx.textclassifier.TextClassification: androidx.core.app.RemoteActionCompat createRemoteActionCompat(android.content.Context,android.view.textclassifier.TextClassification)>(r0, r1);

        virtualinvoke r2.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification$Builder addAction(androidx.core.app.RemoteActionCompat)>($r9);

     label7:
        $r20 = virtualinvoke r2.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification build()>();

        return $r20;
    }

    private static androidx.core.app.RemoteActionCompat createRemoteActionCompat(android.content.Context, android.view.textclassifier.TextClassification)
    {
        android.content.Context r0;
        android.view.textclassifier.TextClassification r1;
        android.app.PendingIntent r2;
        android.graphics.drawable.Drawable r3, $r8;
        java.lang.CharSequence r4;
        androidx.core.app.RemoteActionCompat r5, $r9;
        java.lang.String $r6;
        int $i0;
        android.content.Intent $r7;
        androidx.core.graphics.drawable.IconCompat r11;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.textclassifier.TextClassification;

        $r6 = virtualinvoke r1.<android.view.textclassifier.TextClassification: java.lang.String getText()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

        $r7 = virtualinvoke r1.<android.view.textclassifier.TextClassification: android.content.Intent getIntent()>();

        r2 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, $i0, $r7, 134217728);

        r3 = virtualinvoke r1.<android.view.textclassifier.TextClassification: android.graphics.drawable.Drawable getIcon()>();

        r4 = virtualinvoke r1.<android.view.textclassifier.TextClassification: java.lang.CharSequence getLabel()>();

        if r3 != null goto label1;

        r11 = <androidx.textclassifier.TextClassification: androidx.core.graphics.drawable.IconCompat NO_ICON>;

        goto label2;

     label1:
        $r8 = virtualinvoke r1.<android.view.textclassifier.TextClassification: android.graphics.drawable.Drawable getIcon()>();

        r11 = staticinvoke <androidx.textclassifier.ConvertUtils: androidx.core.graphics.drawable.IconCompat createIconFromDrawable(android.graphics.drawable.Drawable)>($r8);

     label2:
        $r9 = new androidx.core.app.RemoteActionCompat;

        specialinvoke $r9.<androidx.core.app.RemoteActionCompat: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>(r11, r4, r4, r2);

        r5 = $r9;

        if r3 == null goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        virtualinvoke r5.<androidx.core.app.RemoteActionCompat: void setShouldShowIcon(boolean)>($z0);

        return r5;
    }

    java.lang.Object toPlatform(android.content.Context)
    {
        androidx.textclassifier.TextClassification r0;
        android.content.Context r1;
        android.view.textclassifier.TextClassification$Builder r2, $r5, $r14, $r17;
        int i0, $i1, $i2, i3;
        androidx.core.app.RemoteActionCompat r3, r30;
        java.lang.CharSequence $r6, $r7, $r12;
        java.util.List $r8, $r10, r28;
        boolean $z0, $z1;
        android.view.textclassifier.TextClassification $r9;
        java.lang.Object $r11, $r20;
        java.lang.String $r13, $r24, $r26, r27;
        androidx.core.graphics.drawable.IconCompat $r15;
        android.graphics.drawable.Drawable $r16;
        androidx.textclassifier.TextClassification$1 $r18;
        android.app.RemoteAction $r21;
        float $f0;
        java.util.Iterator r29;

        r0 := @this: androidx.textclassifier.TextClassification;

        r1 := @parameter0: android.content.Context;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = new android.view.textclassifier.TextClassification$Builder;

        specialinvoke $r5.<android.view.textclassifier.TextClassification$Builder: void <init>()>();

        $r6 = virtualinvoke r0.<androidx.textclassifier.TextClassification: java.lang.CharSequence getText()>();

        if $r6 != null goto label1;

        $r26 = null;

        goto label2;

     label1:
        $r7 = virtualinvoke r0.<androidx.textclassifier.TextClassification: java.lang.CharSequence getText()>();

        $r26 = interfaceinvoke $r7.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        r2 = virtualinvoke $r5.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder setText(java.lang.String)>($r26);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 28 goto label3;

        $r24 = virtualinvoke r0.<androidx.textclassifier.TextClassification: java.lang.String getId()>();

        virtualinvoke r2.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder setId(java.lang.String)>($r24);

     label3:
        i0 = virtualinvoke r0.<androidx.textclassifier.TextClassification: int getEntityTypeCount()>();

        i3 = 0;

     label4:
        if i3 >= i0 goto label5;

        r27 = virtualinvoke r0.<androidx.textclassifier.TextClassification: java.lang.String getEntityType(int)>(i3);

        $f0 = virtualinvoke r0.<androidx.textclassifier.TextClassification: float getConfidenceScore(java.lang.String)>(r27);

        virtualinvoke r2.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder setEntityType(java.lang.String,float)>(r27, $f0);

        i3 = i3 + 1;

        goto label4;

     label5:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 28 goto label7;

        r28 = virtualinvoke r0.<androidx.textclassifier.TextClassification: java.util.List getActions()>();

        r29 = interfaceinvoke r28.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r20 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.core.app.RemoteActionCompat) $r20;

        $r21 = virtualinvoke r3.<androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>();

        virtualinvoke r2.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder addAction(android.app.RemoteAction)>($r21);

        goto label6;

     label7:
        $r8 = virtualinvoke r0.<androidx.textclassifier.TextClassification: java.util.List getActions()>();

        $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        $r10 = virtualinvoke r0.<androidx.textclassifier.TextClassification: java.util.List getActions()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        r30 = (androidx.core.app.RemoteActionCompat) $r11;

        $r12 = virtualinvoke r30.<androidx.core.app.RemoteActionCompat: java.lang.CharSequence getTitle()>();

        $r13 = interfaceinvoke $r12.<java.lang.CharSequence: java.lang.String toString()>();

        $r14 = virtualinvoke r2.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder setLabel(java.lang.String)>($r13);

        $r15 = virtualinvoke r30.<androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat getIcon()>();

        $r16 = virtualinvoke $r15.<androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>(r1);

        $r17 = virtualinvoke $r14.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder setIcon(android.graphics.drawable.Drawable)>($r16);

        $r18 = new androidx.textclassifier.TextClassification$1;

        specialinvoke $r18.<androidx.textclassifier.TextClassification$1: void <init>(androidx.textclassifier.TextClassification,androidx.core.app.RemoteActionCompat)>(r0, r30);

        virtualinvoke $r17.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder setOnClickListener(android.view.View$OnClickListener)>($r18);

     label8:
        $r9 = virtualinvoke r2.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification build()>();

        return $r9;
    }

    static void <clinit>()
    {
        byte[] $r0;
        androidx.core.graphics.drawable.IconCompat $r1;
        androidx.textclassifier.TextClassification$Builder $r2;
        androidx.textclassifier.TextClassification $r3;

        $r0 = newarray (byte)[0];

        $r1 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)>($r0, 0, 0);

        <androidx.textclassifier.TextClassification: androidx.core.graphics.drawable.IconCompat NO_ICON> = $r1;

        $r2 = new androidx.textclassifier.TextClassification$Builder;

        specialinvoke $r2.<androidx.textclassifier.TextClassification$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<androidx.textclassifier.TextClassification$Builder: androidx.textclassifier.TextClassification build()>();

        <androidx.textclassifier.TextClassification: androidx.textclassifier.TextClassification EMPTY> = $r3;

        return;
    }

androidx.textclassifier.TextClassification$1
<androidx.textclassifier.TextClassification$1: androidx.core.app.RemoteActionCompat val$firstAction>
<androidx.textclassifier.TextClassification$1: androidx.textclassifier.TextClassification this$0>
    void <init>(androidx.textclassifier.TextClassification, androidx.core.app.RemoteActionCompat)
    {
        androidx.textclassifier.TextClassification$1 r0;
        androidx.textclassifier.TextClassification r1;
        androidx.core.app.RemoteActionCompat r2;

        r0 := @this: androidx.textclassifier.TextClassification$1;

        r1 := @parameter0: androidx.textclassifier.TextClassification;

        r2 := @parameter1: androidx.core.app.RemoteActionCompat;

        r0.<androidx.textclassifier.TextClassification$1: androidx.textclassifier.TextClassification this$0> = r1;

        r0.<androidx.textclassifier.TextClassification$1: androidx.core.app.RemoteActionCompat val$firstAction> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.textclassifier.TextClassification$1 r0;
        android.view.View r1;
        java.lang.Throwable r2, $r5;
        androidx.core.app.RemoteActionCompat $r3;
        android.app.PendingIntent $r4;

        r0 := @this: androidx.textclassifier.TextClassification$1;

        r1 := @parameter0: android.view.View;

     label1:
        $r3 = r0.<androidx.textclassifier.TextClassification$1: androidx.core.app.RemoteActionCompat val$firstAction>;

        $r4 = virtualinvoke $r3.<androidx.core.app.RemoteActionCompat: android.app.PendingIntent getActionIntent()>();

        virtualinvoke $r4.<android.app.PendingIntent: void send()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidx_tc", "Failed to start action ", r2);

     label4:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

androidx.textclassifier.TextClassification$Builder
<androidx.textclassifier.TextClassification$Builder: java.lang.String mText>
<androidx.textclassifier.TextClassification$Builder: java.util.List mActions>
<androidx.textclassifier.TextClassification$Builder: java.util.Map mEntityConfidence>
<androidx.textclassifier.TextClassification$Builder: java.lang.String mId>
<androidx.textclassifier.TextClassification$Builder: android.os.Bundle mExtras>
    public void <init>()
    {
        androidx.textclassifier.TextClassification$Builder r0;
        java.util.ArrayList $r1;
        androidx.collection.ArrayMap $r2;

        r0 := @this: androidx.textclassifier.TextClassification$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.textclassifier.TextClassification$Builder: java.util.List mActions> = $r1;

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.textclassifier.TextClassification$Builder: java.util.Map mEntityConfidence> = $r2;

        return;
    }

    public androidx.textclassifier.TextClassification$Builder setText(java.lang.CharSequence)
    {
        androidx.textclassifier.TextClassification$Builder r0;
        java.lang.CharSequence r1;
        java.lang.String $r3;

        r0 := @this: androidx.textclassifier.TextClassification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        r0.<androidx.textclassifier.TextClassification$Builder: java.lang.String mText> = $r3;

        return r0;
    }

    public androidx.textclassifier.TextClassification$Builder setEntityType(java.lang.String, float)
    {
        androidx.textclassifier.TextClassification$Builder r0;
        java.lang.String r1;
        float f0;
        java.util.Map $r2;
        java.lang.Float $r3;

        r0 := @this: androidx.textclassifier.TextClassification$Builder;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r2 = r0.<androidx.textclassifier.TextClassification$Builder: java.util.Map mEntityConfidence>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public androidx.textclassifier.TextClassification$Builder addAction(androidx.core.app.RemoteActionCompat)
    {
        androidx.textclassifier.TextClassification$Builder r0;
        androidx.core.app.RemoteActionCompat r1;
        java.util.List $r2;
        boolean $z1;

        r0 := @this: androidx.textclassifier.TextClassification$Builder;

        r1 := @parameter0: androidx.core.app.RemoteActionCompat;

        if r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z1);

        $r2 = r0.<androidx.textclassifier.TextClassification$Builder: java.util.List mActions>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.textclassifier.TextClassification$Builder setId(java.lang.String)
    {
        androidx.textclassifier.TextClassification$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.textclassifier.TextClassification$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.textclassifier.TextClassification$Builder: java.lang.String mId> = r1;

        return r0;
    }

    public androidx.textclassifier.TextClassification$Builder setExtras(android.os.Bundle)
    {
        androidx.textclassifier.TextClassification$Builder r0;
        android.os.Bundle r1;

        r0 := @this: androidx.textclassifier.TextClassification$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<androidx.textclassifier.TextClassification$Builder: android.os.Bundle mExtras> = r1;

        return r0;
    }

    public androidx.textclassifier.TextClassification build()
    {
        androidx.textclassifier.TextClassification$Builder r0;
        androidx.textclassifier.TextClassification $r1;
        androidx.textclassifier.EntityConfidence $r2;
        java.util.Map $r3;
        java.lang.String $r4, $r8;
        java.util.List $r5;
        android.os.Bundle $r6, $r7, $r9;

        r0 := @this: androidx.textclassifier.TextClassification$Builder;

        $r1 = new androidx.textclassifier.TextClassification;

        $r4 = r0.<androidx.textclassifier.TextClassification$Builder: java.lang.String mText>;

        $r5 = r0.<androidx.textclassifier.TextClassification$Builder: java.util.List mActions>;

        $r2 = new androidx.textclassifier.EntityConfidence;

        $r3 = r0.<androidx.textclassifier.TextClassification$Builder: java.util.Map mEntityConfidence>;

        specialinvoke $r2.<androidx.textclassifier.EntityConfidence: void <init>(java.util.Map)>($r3);

        $r8 = r0.<androidx.textclassifier.TextClassification$Builder: java.lang.String mId>;

        $r6 = r0.<androidx.textclassifier.TextClassification$Builder: android.os.Bundle mExtras>;

        if $r6 != null goto label1;

        $r9 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        $r7 = r0.<androidx.textclassifier.TextClassification$Builder: android.os.Bundle mExtras>;

        $r9 = staticinvoke <androidx.textclassifier.BundleUtils: android.os.Bundle deepCopy(android.os.Bundle)>($r7);

     label2:
        specialinvoke $r1.<androidx.textclassifier.TextClassification: void <init>(java.lang.String,java.util.List,androidx.textclassifier.EntityConfidence,java.lang.String,android.os.Bundle)>($r4, $r5, $r2, $r8, $r9);

        return $r1;
    }

androidx.textclassifier.TextClassification$Request$Builder
<androidx.textclassifier.TextClassification$Request$Builder: java.lang.CharSequence mText>
<androidx.textclassifier.TextClassification$Request$Builder: int mStartIndex>
<androidx.textclassifier.TextClassification$Request$Builder: int mEndIndex>
<androidx.textclassifier.TextClassification$Request$Builder: android.os.Bundle mExtras>
<androidx.textclassifier.TextClassification$Request$Builder: androidx.core.os.LocaleListCompat mDefaultLocales>
<androidx.textclassifier.TextClassification$Request$Builder: java.lang.Long mReferenceTime>
    public void <init>(java.lang.CharSequence, int, int)
    {
        androidx.textclassifier.TextClassification$Request$Builder r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.textclassifier.TextClassification$Request$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.textclassifier.TextClassification$Request$Builder: java.lang.Long mReferenceTime> = null;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z0);

        if i0 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z1);

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i1 > $i2 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z2);

        if i1 <= i0 goto label7;

        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z3);

        r0.<androidx.textclassifier.TextClassification$Request$Builder: java.lang.CharSequence mText> = r1;

        r0.<androidx.textclassifier.TextClassification$Request$Builder: int mStartIndex> = i0;

        r0.<androidx.textclassifier.TextClassification$Request$Builder: int mEndIndex> = i1;

        return;
    }

    public androidx.textclassifier.TextClassification$Request$Builder setDefaultLocales(androidx.core.os.LocaleListCompat)
    {
        androidx.textclassifier.TextClassification$Request$Builder r0;
        androidx.core.os.LocaleListCompat r1;

        r0 := @this: androidx.textclassifier.TextClassification$Request$Builder;

        r1 := @parameter0: androidx.core.os.LocaleListCompat;

        r0.<androidx.textclassifier.TextClassification$Request$Builder: androidx.core.os.LocaleListCompat mDefaultLocales> = r1;

        return r0;
    }

    public androidx.textclassifier.TextClassification$Request$Builder setReferenceTime(java.lang.Long)
    {
        androidx.textclassifier.TextClassification$Request$Builder r0;
        java.lang.Long r1;

        r0 := @this: androidx.textclassifier.TextClassification$Request$Builder;

        r1 := @parameter0: java.lang.Long;

        r0.<androidx.textclassifier.TextClassification$Request$Builder: java.lang.Long mReferenceTime> = r1;

        return r0;
    }

    public androidx.textclassifier.TextClassification$Request$Builder setExtras(android.os.Bundle)
    {
        androidx.textclassifier.TextClassification$Request$Builder r0;
        android.os.Bundle r1;

        r0 := @this: androidx.textclassifier.TextClassification$Request$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<androidx.textclassifier.TextClassification$Request$Builder: android.os.Bundle mExtras> = r1;

        return r0;
    }

    public androidx.textclassifier.TextClassification$Request build()
    {
        androidx.textclassifier.TextClassification$Request$Builder r0;
        androidx.textclassifier.TextClassification$Request $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r2, $r3;
        android.os.Bundle $r4, $r5, $r8;
        androidx.core.os.LocaleListCompat $r6;
        java.lang.Long $r7;

        r0 := @this: androidx.textclassifier.TextClassification$Request$Builder;

        $r1 = new androidx.textclassifier.TextClassification$Request;

        $r2 = r0.<androidx.textclassifier.TextClassification$Request$Builder: java.lang.CharSequence mText>;

        $i1 = r0.<androidx.textclassifier.TextClassification$Request$Builder: int mStartIndex>;

        $i0 = r0.<androidx.textclassifier.TextClassification$Request$Builder: int mEndIndex>;

        $r3 = staticinvoke <androidx.textclassifier.TextClassification$Request$Builder: java.lang.CharSequence normalizeIfUri(java.lang.CharSequence,int,int)>($r2, $i1, $i0);

        $i2 = r0.<androidx.textclassifier.TextClassification$Request$Builder: int mStartIndex>;

        $i3 = r0.<androidx.textclassifier.TextClassification$Request$Builder: int mEndIndex>;

        $r6 = r0.<androidx.textclassifier.TextClassification$Request$Builder: androidx.core.os.LocaleListCompat mDefaultLocales>;

        $r7 = r0.<androidx.textclassifier.TextClassification$Request$Builder: java.lang.Long mReferenceTime>;

        $r4 = r0.<androidx.textclassifier.TextClassification$Request$Builder: android.os.Bundle mExtras>;

        if $r4 != null goto label1;

        $r8 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        $r5 = r0.<androidx.textclassifier.TextClassification$Request$Builder: android.os.Bundle mExtras>;

        $r8 = staticinvoke <androidx.textclassifier.BundleUtils: android.os.Bundle deepCopy(android.os.Bundle)>($r5);

     label2:
        specialinvoke $r1.<androidx.textclassifier.TextClassification$Request: void <init>(java.lang.CharSequence,int,int,androidx.core.os.LocaleListCompat,java.lang.Long,android.os.Bundle)>($r3, $i2, $i3, $r6, $r7, $r8);

        return $r1;
    }

    private static java.lang.CharSequence normalizeIfUri(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0, $r4;
        int i0, i1, $i2, $i3;
        java.lang.String r1, r2, r3, $r5, $r15;
        java.util.Locale $r6;
        boolean $z0;
        android.net.Uri$Builder $r7, $r8;
        android.net.Uri $r9, r14;
        android.text.SpannableString $r10;
        android.text.SpannableStringBuilder $r11, $r12;
        java.lang.Throwable $r13, r16;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        r14 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        r1 = virtualinvoke r14.<android.net.Uri: java.lang.String getScheme()>();

        if r1 != null goto label2;

        $r15 = null;

        goto label3;

     label2:
        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

     label3:
        r2 = $r15;

        if r2 == null goto label5;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label5;

        $r7 = virtualinvoke r14.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri build()>();

        r3 = virtualinvoke $r9.<android.net.Uri: java.lang.String toString()>();

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $i3 = i1 - i0;

        if $i2 != $i3 goto label5;

        $r10 = new android.text.SpannableString;

        $r11 = new android.text.SpannableStringBuilder;

        specialinvoke $r11.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r0);

        $r12 = virtualinvoke $r11.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>(i0, i1, r3);

        specialinvoke $r10.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r12);

     label4:
        return $r10;

     label5:
        goto label7;

     label6:
        $r13 := @caughtexception;

        r16 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextClassification", "Error fixing uri scheme", r16);

     label7:
        return r0;

        catch java.lang.Exception from label1 to label4 with label6;
    }

androidx.textclassifier.TextClassification$Request
<androidx.textclassifier.TextClassification$Request: java.lang.String EXTRA_TEXT>
<androidx.textclassifier.TextClassification$Request: java.lang.String EXTRA_START_INDEX>
<androidx.textclassifier.TextClassification$Request: java.lang.String EXTRA_END_INDEX>
<androidx.textclassifier.TextClassification$Request: java.lang.String EXTRA_DEFAULT_LOCALES>
<androidx.textclassifier.TextClassification$Request: java.lang.String EXTRA_REFERENCE_TIME>
<androidx.textclassifier.TextClassification$Request: java.lang.CharSequence mText>
<androidx.textclassifier.TextClassification$Request: int mStartIndex>
<androidx.textclassifier.TextClassification$Request: int mEndIndex>
<androidx.textclassifier.TextClassification$Request: androidx.core.os.LocaleListCompat mDefaultLocales>
<androidx.textclassifier.TextClassification$Request: java.lang.Long mReferenceTime>
<androidx.textclassifier.TextClassification$Request: android.os.Bundle mExtras>
    void <init>(java.lang.CharSequence, int, int, androidx.core.os.LocaleListCompat, java.lang.Long, android.os.Bundle)
    {
        androidx.textclassifier.TextClassification$Request r0;
        java.lang.CharSequence r1;
        int i0, i1;
        androidx.core.os.LocaleListCompat r2;
        java.lang.Long r3;
        android.os.Bundle r4;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.core.os.LocaleListCompat;

        r3 := @parameter4: java.lang.Long;

        r4 := @parameter5: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.textclassifier.TextClassification$Request: java.lang.CharSequence mText> = r1;

        r0.<androidx.textclassifier.TextClassification$Request: int mStartIndex> = i0;

        r0.<androidx.textclassifier.TextClassification$Request: int mEndIndex> = i1;

        r0.<androidx.textclassifier.TextClassification$Request: androidx.core.os.LocaleListCompat mDefaultLocales> = r2;

        r0.<androidx.textclassifier.TextClassification$Request: java.lang.Long mReferenceTime> = r3;

        r0.<androidx.textclassifier.TextClassification$Request: android.os.Bundle mExtras> = r4;

        return;
    }

    public java.lang.CharSequence getText()
    {
        androidx.textclassifier.TextClassification$Request r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        $r1 = r0.<androidx.textclassifier.TextClassification$Request: java.lang.CharSequence mText>;

        return $r1;
    }

    public int getStartIndex()
    {
        androidx.textclassifier.TextClassification$Request r0;
        int $i0;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        $i0 = r0.<androidx.textclassifier.TextClassification$Request: int mStartIndex>;

        return $i0;
    }

    public int getEndIndex()
    {
        androidx.textclassifier.TextClassification$Request r0;
        int $i0;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        $i0 = r0.<androidx.textclassifier.TextClassification$Request: int mEndIndex>;

        return $i0;
    }

    public androidx.core.os.LocaleListCompat getDefaultLocales()
    {
        androidx.textclassifier.TextClassification$Request r0;
        androidx.core.os.LocaleListCompat $r1;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        $r1 = r0.<androidx.textclassifier.TextClassification$Request: androidx.core.os.LocaleListCompat mDefaultLocales>;

        return $r1;
    }

    public java.lang.Long getReferenceTime()
    {
        androidx.textclassifier.TextClassification$Request r0;
        java.lang.Long $r1;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        $r1 = r0.<androidx.textclassifier.TextClassification$Request: java.lang.Long mReferenceTime>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        androidx.textclassifier.TextClassification$Request r0;
        android.os.Bundle $r1, $r2;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        $r1 = r0.<androidx.textclassifier.TextClassification$Request: android.os.Bundle mExtras>;

        $r2 = staticinvoke <androidx.textclassifier.BundleUtils: android.os.Bundle deepCopy(android.os.Bundle)>($r1);

        return $r2;
    }

    static androidx.textclassifier.TextClassification$Request fromPlatform(android.view.textclassifier.TextClassification$Request)
    {
        android.view.textclassifier.TextClassification$Request r0;
        androidx.textclassifier.TextClassification$Request$Builder $r1, $r5, $r8;
        java.lang.CharSequence $r2;
        int $i0, $i1;
        java.time.ZonedDateTime $r3;
        java.lang.Long $r4;
        android.os.LocaleList $r6;
        androidx.core.os.LocaleListCompat $r7;
        androidx.textclassifier.TextClassification$Request $r9;

        r0 := @parameter0: android.view.textclassifier.TextClassification$Request;

        $r1 = new androidx.textclassifier.TextClassification$Request$Builder;

        $r2 = virtualinvoke r0.<android.view.textclassifier.TextClassification$Request: java.lang.CharSequence getText()>();

        $i0 = virtualinvoke r0.<android.view.textclassifier.TextClassification$Request: int getStartIndex()>();

        $i1 = virtualinvoke r0.<android.view.textclassifier.TextClassification$Request: int getEndIndex()>();

        specialinvoke $r1.<androidx.textclassifier.TextClassification$Request$Builder: void <init>(java.lang.CharSequence,int,int)>($r2, $i0, $i1);

        $r3 = virtualinvoke r0.<android.view.textclassifier.TextClassification$Request: java.time.ZonedDateTime getReferenceTime()>();

        $r4 = staticinvoke <androidx.textclassifier.ConvertUtils: java.lang.Long zonedDateTimeToUtcMs(java.time.ZonedDateTime)>($r3);

        $r5 = virtualinvoke $r1.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request$Builder setReferenceTime(java.lang.Long)>($r4);

        $r6 = virtualinvoke r0.<android.view.textclassifier.TextClassification$Request: android.os.LocaleList getDefaultLocales()>();

        $r7 = staticinvoke <androidx.textclassifier.ConvertUtils: androidx.core.os.LocaleListCompat wrapLocalList(android.os.LocaleList)>($r6);

        $r8 = virtualinvoke $r5.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request$Builder setDefaultLocales(androidx.core.os.LocaleListCompat)>($r7);

        $r9 = virtualinvoke $r8.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request build()>();

        return $r9;
    }

    java.lang.Object toPlatform()
    {
        androidx.textclassifier.TextClassification$Request r0;
        android.view.textclassifier.TextClassification$Request$Builder $r1, $r5, $r8;
        int $i0, $i1;
        java.lang.CharSequence $r2;
        androidx.core.os.LocaleListCompat $r3;
        android.os.LocaleList $r4;
        java.lang.Long $r6;
        java.time.ZonedDateTime $r7;
        android.view.textclassifier.TextClassification$Request $r9;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        $r1 = new android.view.textclassifier.TextClassification$Request$Builder;

        $r2 = r0.<androidx.textclassifier.TextClassification$Request: java.lang.CharSequence mText>;

        $i1 = r0.<androidx.textclassifier.TextClassification$Request: int mStartIndex>;

        $i0 = r0.<androidx.textclassifier.TextClassification$Request: int mEndIndex>;

        specialinvoke $r1.<android.view.textclassifier.TextClassification$Request$Builder: void <init>(java.lang.CharSequence,int,int)>($r2, $i1, $i0);

        $r3 = virtualinvoke r0.<androidx.textclassifier.TextClassification$Request: androidx.core.os.LocaleListCompat getDefaultLocales()>();

        $r4 = staticinvoke <androidx.textclassifier.ConvertUtils: android.os.LocaleList unwrapLocalListCompat(androidx.core.os.LocaleListCompat)>($r3);

        $r5 = virtualinvoke $r1.<android.view.textclassifier.TextClassification$Request$Builder: android.view.textclassifier.TextClassification$Request$Builder setDefaultLocales(android.os.LocaleList)>($r4);

        $r6 = r0.<androidx.textclassifier.TextClassification$Request: java.lang.Long mReferenceTime>;

        $r7 = staticinvoke <androidx.textclassifier.ConvertUtils: java.time.ZonedDateTime createZonedDateTimeFromUtc(java.lang.Long)>($r6);

        $r8 = virtualinvoke $r5.<android.view.textclassifier.TextClassification$Request$Builder: android.view.textclassifier.TextClassification$Request$Builder setReferenceTime(java.time.ZonedDateTime)>($r7);

        $r9 = virtualinvoke $r8.<android.view.textclassifier.TextClassification$Request$Builder: android.view.textclassifier.TextClassification$Request build()>();

        return $r9;
    }

    public android.os.Bundle toBundle()
    {
        androidx.textclassifier.TextClassification$Request r0;
        android.os.Bundle r1, $r2, $r6;
        java.lang.CharSequence $r3;
        int $i0, $i1;
        androidx.core.os.LocaleListCompat $r4;
        java.lang.Long $r5;

        r0 := @this: androidx.textclassifier.TextClassification$Request;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.textclassifier.TextClassification$Request: java.lang.CharSequence mText>;

        virtualinvoke r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("text", $r3);

        $i0 = r0.<androidx.textclassifier.TextClassification$Request: int mStartIndex>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("start", $i0);

        $i1 = r0.<androidx.textclassifier.TextClassification$Request: int mEndIndex>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("end", $i1);

        $r4 = r0.<androidx.textclassifier.TextClassification$Request: androidx.core.os.LocaleListCompat mDefaultLocales>;

        staticinvoke <androidx.textclassifier.BundleUtils: void putLocaleList(android.os.Bundle,java.lang.String,androidx.core.os.LocaleListCompat)>(r1, "locales", $r4);

        $r5 = r0.<androidx.textclassifier.TextClassification$Request: java.lang.Long mReferenceTime>;

        staticinvoke <androidx.textclassifier.BundleUtils: void putLong(android.os.Bundle,java.lang.String,java.lang.Long)>(r1, "reftime", $r5);

        $r6 = r0.<androidx.textclassifier.TextClassification$Request: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", $r6);

        return r1;
    }

    public static androidx.textclassifier.TextClassification$Request createFromBundle(android.os.Bundle)
    {
        android.os.Bundle r0, $r8;
        androidx.textclassifier.TextClassification$Request$Builder r1, $r2, $r5, $r7;
        java.lang.CharSequence $r3;
        int $i0, $i1;
        androidx.core.os.LocaleListCompat $r4;
        java.lang.Long $r6;
        androidx.textclassifier.TextClassification$Request $r9;

        r0 := @parameter0: android.os.Bundle;

        $r2 = new androidx.textclassifier.TextClassification$Request$Builder;

        $r3 = virtualinvoke r0.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("text");

        $i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("start");

        $i1 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("end");

        specialinvoke $r2.<androidx.textclassifier.TextClassification$Request$Builder: void <init>(java.lang.CharSequence,int,int)>($r3, $i0, $i1);

        $r4 = staticinvoke <androidx.textclassifier.BundleUtils: androidx.core.os.LocaleListCompat getLocaleList(android.os.Bundle,java.lang.String)>(r0, "locales");

        $r5 = virtualinvoke $r2.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request$Builder setDefaultLocales(androidx.core.os.LocaleListCompat)>($r4);

        $r6 = staticinvoke <androidx.textclassifier.BundleUtils: java.lang.Long getLong(android.os.Bundle,java.lang.String)>(r0, "reftime");

        $r7 = virtualinvoke $r5.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request$Builder setReferenceTime(java.lang.Long)>($r6);

        $r8 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("extras");

        r1 = virtualinvoke $r7.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request$Builder setExtras(android.os.Bundle)>($r8);

        $r9 = virtualinvoke r1.<androidx.textclassifier.TextClassification$Request$Builder: androidx.textclassifier.TextClassification$Request build()>();

        return $r9;
    }

