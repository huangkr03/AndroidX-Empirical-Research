androidx.camera.video.VideoOutput
<androidx.camera.video.VideoOutput: void onSurfaceRequested(androidx.camera.core.SurfaceRequest)>
    public void onSurfaceRequested(androidx.camera.core.SurfaceRequest, androidx.camera.core.impl.Timebase)
    {
        androidx.camera.video.VideoOutput r0;
        androidx.camera.core.SurfaceRequest r1;
        androidx.camera.core.impl.Timebase r2;

        r0 := @this: androidx.camera.video.VideoOutput;

        r1 := @parameter0: androidx.camera.core.SurfaceRequest;

        r2 := @parameter1: androidx.camera.core.impl.Timebase;

        interfaceinvoke r0.<androidx.camera.video.VideoOutput: void onSurfaceRequested(androidx.camera.core.SurfaceRequest)>(r1);

        return;
    }

    public androidx.camera.core.impl.Observable getStreamInfo()
    {
        androidx.camera.video.VideoOutput r0;
        androidx.camera.core.impl.Observable $r1;

        r0 := @this: androidx.camera.video.VideoOutput;

        $r1 = <androidx.camera.video.StreamInfo: androidx.camera.core.impl.Observable ALWAYS_ACTIVE_OBSERVABLE>;

        return $r1;
    }

    public androidx.camera.core.impl.Observable getMediaSpec()
    {
        androidx.camera.video.VideoOutput r0;
        androidx.camera.core.impl.Observable $r1;

        r0 := @this: androidx.camera.video.VideoOutput;

        $r1 = staticinvoke <androidx.camera.core.impl.ConstantObservable: androidx.camera.core.impl.Observable withValue(java.lang.Object)>(null);

        return $r1;
    }

    public void onSourceStateChanged(androidx.camera.video.VideoOutput$SourceState)
    {
        androidx.camera.video.VideoOutput r0;
        androidx.camera.video.VideoOutput$SourceState r1;

        r0 := @this: androidx.camera.video.VideoOutput;

        r1 := @parameter0: androidx.camera.video.VideoOutput$SourceState;

        return;
    }

