androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl
<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>
<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: java.lang.Object mObject>
    void <init>(android.hardware.camera2.CameraCaptureSession, java.lang.Object)
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl r0;
        android.hardware.camera2.CameraCaptureSession r1, $r4;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.hardware.camera2.CameraCaptureSession) $r3;

        r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession> = $r4;

        r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: java.lang.Object mObject> = r2;

        return;
    }

    static androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CameraCaptureSessionCompatImpl create(android.hardware.camera2.CameraCaptureSession, android.os.Handler)
    {
        android.hardware.camera2.CameraCaptureSession r0;
        android.os.Handler r1;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl $r2;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21 $r3;

        r0 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter1: android.os.Handler;

        $r2 = new androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl;

        $r3 = new androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21;

        specialinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21: void <init>(android.os.Handler)>(r1);

        specialinvoke $r2.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: void <init>(android.hardware.camera2.CameraCaptureSession,java.lang.Object)>(r0, $r3);

        return $r2;
    }

    public int captureBurstRequests(java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl r0;
        java.util.List r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper r4, $r6;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21 r5;
        java.lang.Object $r7;
        android.os.Handler $r8;
        android.hardware.camera2.CameraCaptureSession $r9;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r6 = new androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper;

        specialinvoke $r6.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper: void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r2, r3);

        r4 = $r6;

        $r7 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: java.lang.Object mObject>;

        r5 = (androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21) $r7;

        $r9 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        $r8 = r5.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21: android.os.Handler mCompatHandler>;

        $i0 = virtualinvoke $r9.<android.hardware.camera2.CameraCaptureSession: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>(r1, r4, $r8);

        return $i0;
    }

    public int captureSingleRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl r0;
        android.hardware.camera2.CaptureRequest r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper r4, $r6;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21 r5;
        java.lang.Object $r7;
        android.os.Handler $r8;
        android.hardware.camera2.CameraCaptureSession $r9;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r6 = new androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper;

        specialinvoke $r6.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper: void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r2, r3);

        r4 = $r6;

        $r7 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: java.lang.Object mObject>;

        r5 = (androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21) $r7;

        $r9 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        $r8 = r5.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21: android.os.Handler mCompatHandler>;

        $i0 = virtualinvoke $r9.<android.hardware.camera2.CameraCaptureSession: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>(r1, r4, $r8);

        return $i0;
    }

    public int setRepeatingBurstRequests(java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl r0;
        java.util.List r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper r4, $r6;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21 r5;
        java.lang.Object $r7;
        android.os.Handler $r8;
        android.hardware.camera2.CameraCaptureSession $r9;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r6 = new androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper;

        specialinvoke $r6.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper: void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r2, r3);

        r4 = $r6;

        $r7 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: java.lang.Object mObject>;

        r5 = (androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21) $r7;

        $r9 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        $r8 = r5.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21: android.os.Handler mCompatHandler>;

        $i0 = virtualinvoke $r9.<android.hardware.camera2.CameraCaptureSession: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>(r1, r4, $r8);

        return $i0;
    }

    public int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl r0;
        android.hardware.camera2.CaptureRequest r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper r4, $r6;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21 r5;
        java.lang.Object $r7;
        android.os.Handler $r8;
        android.hardware.camera2.CameraCaptureSession $r9;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r6 = new androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper;

        specialinvoke $r6.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper: void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r2, r3);

        r4 = $r6;

        $r7 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: java.lang.Object mObject>;

        r5 = (androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21) $r7;

        $r9 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        $r8 = r5.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21: android.os.Handler mCompatHandler>;

        $i0 = virtualinvoke $r9.<android.hardware.camera2.CameraCaptureSession: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>(r1, r4, $r8);

        return $i0;
    }

    public android.hardware.camera2.CameraCaptureSession unwrap()
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl r0;
        android.hardware.camera2.CameraCaptureSession $r1;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl;

        $r1 = r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl: android.hardware.camera2.CameraCaptureSession mCameraCaptureSession>;

        return $r1;
    }

androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21
<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21: android.os.Handler mCompatHandler>
    void <init>(android.os.Handler)
    {
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21 r0;
        android.os.Handler r1;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21;

        r1 := @parameter0: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompatBaseImpl$CameraCaptureSessionCompatParamsApi21: android.os.Handler mCompatHandler> = r1;

        return;
    }

