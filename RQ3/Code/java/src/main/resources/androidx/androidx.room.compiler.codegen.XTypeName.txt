androidx.room.compiler.codegen.XTypeName
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion>
<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName java>
<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName kotlin>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability nullability>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_BOOLEAN>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_BYTE>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_SHORT>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_INT>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_LONG>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_CHAR>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_FLOAT>
<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_DOUBLE>
<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.ClassName UNAVAILABLE_KTYPE_NAME>
    protected void <init>(com.squareup.javapoet.TypeName, com.squareup.kotlinpoet.TypeName, androidx.room.compiler.processing.XNullability)
    {
        androidx.room.compiler.codegen.XTypeName r0;
        com.squareup.javapoet.TypeName r1;
        com.squareup.kotlinpoet.TypeName r2;
        androidx.room.compiler.processing.XNullability r3;

        r0 := @this: androidx.room.compiler.codegen.XTypeName;

        r1 := @parameter0: com.squareup.javapoet.TypeName;

        r2 := @parameter1: com.squareup.kotlinpoet.TypeName;

        r3 := @parameter2: androidx.room.compiler.processing.XNullability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "java");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "kotlin");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "nullability");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName java> = r1;

        r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName kotlin> = r2;

        r0.<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability nullability> = r3;

        return;
    }

    public com.squareup.javapoet.TypeName getJava$room_compiler_processing()
    {
        androidx.room.compiler.codegen.XTypeName r0;
        com.squareup.javapoet.TypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName;

        $r1 = r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName java>;

        return $r1;
    }

    public com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()
    {
        androidx.room.compiler.codegen.XTypeName r0;
        com.squareup.kotlinpoet.TypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName;

        $r1 = r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName kotlin>;

        return $r1;
    }

    public final androidx.room.compiler.processing.XNullability getNullability$room_compiler_processing()
    {
        androidx.room.compiler.codegen.XTypeName r0;
        androidx.room.compiler.processing.XNullability $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName;

        $r1 = r0.<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability nullability>;

        return $r1;
    }

    public final boolean isPrimitive()
    {
        androidx.room.compiler.codegen.XTypeName r0;
        com.squareup.javapoet.TypeName $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.codegen.XTypeName;

        $r1 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $z0 = virtualinvoke $r1.<com.squareup.javapoet.TypeName: boolean isPrimitive()>();

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.room.compiler.codegen.XTypeName r0, $r3, $r7, $r11;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.squareup.javapoet.TypeName $r2, $r4;
        com.squareup.kotlinpoet.TypeName $r5, $r8, $r10, $r12;
        com.squareup.kotlinpoet.ClassName $r6, $r9;

        r0 := @this: androidx.room.compiler.codegen.XTypeName;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.room.compiler.codegen.XTypeName;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r3 = (androidx.room.compiler.codegen.XTypeName) r1;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r5 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        $r6 = <androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.ClassName UNAVAILABLE_KTYPE_NAME>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 != 0 goto label4;

        $r7 = (androidx.room.compiler.codegen.XTypeName) r1;

        $r8 = virtualinvoke $r7.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        $r9 = <androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.ClassName UNAVAILABLE_KTYPE_NAME>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z3 != 0 goto label4;

        $r10 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        $r11 = (androidx.room.compiler.codegen.XTypeName) r1;

        $r12 = virtualinvoke $r11.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r12);

        if $z4 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        androidx.room.compiler.codegen.XTypeName r0;
        com.squareup.javapoet.TypeName $r1;
        int $i0;

        r0 := @this: androidx.room.compiler.codegen.XTypeName;

        $r1 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $i0 = virtualinvoke $r1.<com.squareup.javapoet.TypeName: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.room.compiler.codegen.XTypeName r0;
        java.lang.StringBuilder r1, $r3;
        com.squareup.javapoet.TypeName $r5;
        com.squareup.kotlinpoet.TypeName $r8, $r13;
        com.squareup.kotlinpoet.ClassName $r9;
        boolean $z1;
        java.lang.String $r12;

        r0 := @this: androidx.room.compiler.codegen.XTypeName;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XTypeName[");

        $r5 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r8 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        $r9 = <androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.ClassName UNAVAILABLE_KTYPE_NAME>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z1 != 0 goto label1;

        $r13 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNAVAILABLE");

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "StringBuilder().apply(builderAction).toString()");

        return $r12;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_BOOLEAN$cp()
    {
        androidx.room.compiler.codegen.XTypeName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_BOOLEAN>;

        return $r0;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_BYTE$cp()
    {
        androidx.room.compiler.codegen.XTypeName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_BYTE>;

        return $r0;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_SHORT$cp()
    {
        androidx.room.compiler.codegen.XTypeName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_SHORT>;

        return $r0;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_INT$cp()
    {
        androidx.room.compiler.codegen.XTypeName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_INT>;

        return $r0;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_LONG$cp()
    {
        androidx.room.compiler.codegen.XTypeName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_LONG>;

        return $r0;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_CHAR$cp()
    {
        androidx.room.compiler.codegen.XTypeName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_CHAR>;

        return $r0;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_FLOAT$cp()
    {
        androidx.room.compiler.codegen.XTypeName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_FLOAT>;

        return $r0;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_DOUBLE$cp()
    {
        androidx.room.compiler.codegen.XTypeName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_DOUBLE>;

        return $r0;
    }

    public static final com.squareup.kotlinpoet.ClassName access$getUNAVAILABLE_KTYPE_NAME$cp()
    {
        com.squareup.kotlinpoet.ClassName $r0;

        $r0 = <androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.ClassName UNAVAILABLE_KTYPE_NAME>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] r0;
        androidx.room.compiler.codegen.XTypeName$Companion $r1;
        java.lang.Class $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23;
        kotlin.reflect.KClass $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24;
        androidx.room.compiler.codegen.XTypeName $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25;
        com.squareup.kotlinpoet.ClassName $r26;

        $r1 = new androidx.room.compiler.codegen.XTypeName$Companion;

        specialinvoke $r1.<androidx.room.compiler.codegen.XTypeName$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion> = $r1;

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r2);

        $r4 = staticinvoke <androidx.room.compiler.codegen.XTypeNameKt: androidx.room.compiler.codegen.XTypeName asPrimitiveTypeName(kotlin.reflect.KClass)>($r3);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_BOOLEAN> = $r4;

        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        $r6 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r5);

        $r7 = staticinvoke <androidx.room.compiler.codegen.XTypeNameKt: androidx.room.compiler.codegen.XTypeName asPrimitiveTypeName(kotlin.reflect.KClass)>($r6);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_BYTE> = $r7;

        $r8 = <java.lang.Short: java.lang.Class TYPE>;

        $r9 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r8);

        $r10 = staticinvoke <androidx.room.compiler.codegen.XTypeNameKt: androidx.room.compiler.codegen.XTypeName asPrimitiveTypeName(kotlin.reflect.KClass)>($r9);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_SHORT> = $r10;

        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        $r12 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r11);

        $r13 = staticinvoke <androidx.room.compiler.codegen.XTypeNameKt: androidx.room.compiler.codegen.XTypeName asPrimitiveTypeName(kotlin.reflect.KClass)>($r12);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_INT> = $r13;

        $r14 = <java.lang.Long: java.lang.Class TYPE>;

        $r15 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r14);

        $r16 = staticinvoke <androidx.room.compiler.codegen.XTypeNameKt: androidx.room.compiler.codegen.XTypeName asPrimitiveTypeName(kotlin.reflect.KClass)>($r15);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_LONG> = $r16;

        $r17 = <java.lang.Character: java.lang.Class TYPE>;

        $r18 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r17);

        $r19 = staticinvoke <androidx.room.compiler.codegen.XTypeNameKt: androidx.room.compiler.codegen.XTypeName asPrimitiveTypeName(kotlin.reflect.KClass)>($r18);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_CHAR> = $r19;

        $r20 = <java.lang.Float: java.lang.Class TYPE>;

        $r21 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r20);

        $r22 = staticinvoke <androidx.room.compiler.codegen.XTypeNameKt: androidx.room.compiler.codegen.XTypeName asPrimitiveTypeName(kotlin.reflect.KClass)>($r21);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_FLOAT> = $r22;

        $r23 = <java.lang.Double: java.lang.Class TYPE>;

        $r24 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r23);

        $r25 = staticinvoke <androidx.room.compiler.codegen.XTypeNameKt: androidx.room.compiler.codegen.XTypeName asPrimitiveTypeName(kotlin.reflect.KClass)>($r24);

        <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName PRIMITIVE_DOUBLE> = $r25;

        $r26 = new com.squareup.kotlinpoet.ClassName;

        r0 = newarray (java.lang.String)[1];

        r0[0] = "Unavailable";

        specialinvoke $r26.<com.squareup.kotlinpoet.ClassName: void <init>(java.lang.String,java.lang.String[])>("androidx.room.compiler.codegen", r0);

        <androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.ClassName UNAVAILABLE_KTYPE_NAME> = $r26;

        return;
    }

androidx.room.compiler.codegen.XTypeName$Companion
    private void <init>()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.codegen.XTypeName getPRIMITIVE_BOOLEAN()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_BOOLEAN$cp()>();

        return $r1;
    }

    public final androidx.room.compiler.codegen.XTypeName getPRIMITIVE_BYTE()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_BYTE$cp()>();

        return $r1;
    }

    public final androidx.room.compiler.codegen.XTypeName getPRIMITIVE_SHORT()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_SHORT$cp()>();

        return $r1;
    }

    public final androidx.room.compiler.codegen.XTypeName getPRIMITIVE_INT()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_INT$cp()>();

        return $r1;
    }

    public final androidx.room.compiler.codegen.XTypeName getPRIMITIVE_LONG()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_LONG$cp()>();

        return $r1;
    }

    public final androidx.room.compiler.codegen.XTypeName getPRIMITIVE_CHAR()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_CHAR$cp()>();

        return $r1;
    }

    public final androidx.room.compiler.codegen.XTypeName getPRIMITIVE_FLOAT()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_FLOAT$cp()>();

        return $r1;
    }

    public final androidx.room.compiler.codegen.XTypeName getPRIMITIVE_DOUBLE()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName access$getPRIMITIVE_DOUBLE$cp()>();

        return $r1;
    }

    public final com.squareup.kotlinpoet.ClassName getUNAVAILABLE_KTYPE_NAME$room_compiler_processing()
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        com.squareup.kotlinpoet.ClassName $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 = staticinvoke <androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.ClassName access$getUNAVAILABLE_KTYPE_NAME$cp()>();

        return $r1;
    }

    public final androidx.room.compiler.codegen.XTypeName invoke(com.squareup.javapoet.TypeName, com.squareup.kotlinpoet.TypeName, androidx.room.compiler.processing.XNullability)
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        com.squareup.javapoet.TypeName r1;
        com.squareup.kotlinpoet.TypeName r2;
        androidx.room.compiler.processing.XNullability r3;
        androidx.room.compiler.codegen.XTypeName $r4;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        r1 := @parameter0: com.squareup.javapoet.TypeName;

        r2 := @parameter1: com.squareup.kotlinpoet.TypeName;

        r3 := @parameter2: androidx.room.compiler.processing.XNullability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "java");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "kotlin");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "nullability");

        $r4 = new androidx.room.compiler.codegen.XTypeName;

        specialinvoke $r4.<androidx.room.compiler.codegen.XTypeName: void <init>(com.squareup.javapoet.TypeName,com.squareup.kotlinpoet.TypeName,androidx.room.compiler.processing.XNullability)>(r1, r2, r3);

        return $r4;
    }

    public static androidx.room.compiler.codegen.XTypeName invoke$default(androidx.room.compiler.codegen.XTypeName$Companion, com.squareup.javapoet.TypeName, com.squareup.kotlinpoet.TypeName, androidx.room.compiler.processing.XNullability, int, java.lang.Object)
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        com.squareup.javapoet.TypeName r1;
        com.squareup.kotlinpoet.TypeName r2;
        int i0, $i1;
        java.lang.Object r3;
        androidx.room.compiler.codegen.XTypeName $r4;
        androidx.room.compiler.processing.XNullability r5;

        r0 := @parameter0: androidx.room.compiler.codegen.XTypeName$Companion;

        r1 := @parameter1: com.squareup.javapoet.TypeName;

        r2 := @parameter2: com.squareup.kotlinpoet.TypeName;

        r5 := @parameter3: androidx.room.compiler.processing.XNullability;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r5 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

     label1:
        $r4 = virtualinvoke r0.<androidx.room.compiler.codegen.XTypeName$Companion: androidx.room.compiler.codegen.XTypeName invoke(com.squareup.javapoet.TypeName,com.squareup.kotlinpoet.TypeName,androidx.room.compiler.processing.XNullability)>(r1, r2, r5);

        return $r4;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.codegen.XTypeName$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.codegen.XTypeName$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.codegen.XTypeName$Companion: void <init>()>();

        return;
    }

