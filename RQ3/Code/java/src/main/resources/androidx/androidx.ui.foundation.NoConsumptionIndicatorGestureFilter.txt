androidx.ui.foundation.NoConsumptionIndicatorGestureFilter
<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function1 onStart>
<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 onStop>
<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 onCancelCallback>
<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter pointerInputFilter>
<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state>
    public void <init>(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function0)
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.jvm.functions.Function0 r2, r3;
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State $r4;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onStart");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "onStop");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "onCancelCallback");

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function1 onStart> = r1;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 onStop> = r2;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 onCancelCallback> = r3;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter pointerInputFilter> = r0;

        $r4 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state> = $r4;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnStart()
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        $r1 = r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function1 onStart>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function0 getOnStop()
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        $r1 = r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 onStop>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function0 getOnCancelCallback()
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        $r1 = r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 onCancelCallback>;

        return $r1;
    }

    public androidx.ui.foundation.NoConsumptionIndicatorGestureFilter getPointerInputFilter()
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0, $r1;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        $r1 = r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter pointerInputFilter>;

        return $r1;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntSize)
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        java.util.List r1;
        androidx.ui.core.PointerEventPass r2, $r7, $r41;
        androidx.ui.unit.IntSize r3;
        int i0, $i1, i2, $i3;
        java.lang.Object r4, r5, $r27, r34, r39;
        androidx.ui.core.PointerInputChange r6, $r28, r35, r40;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, $z16, $z19, $z20, $z22, z24, $z25;
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State $r8, $r9, $r11, $r14, $r15, $r16, $r17, $r18, $r21, $r25;
        java.util.Collection $r10, $r24, $r31;
        kotlin.jvm.functions.Function0 $r12, $r19, $r22;
        kotlin.jvm.functions.Function1 $r26;
        androidx.ui.core.PointerInputData $r29;
        java.lang.Iterable $r32, $r37;
        java.util.Iterator $r33, $r38;
        androidx.ui.geometry.Offset $r36;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        $r7 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r7);

        if $z2 == 0 goto label11;

        $r15 = r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state>;

        $r14 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r15, $r14);

        if $z5 == 0 goto label05;

        $r32 = (java.lang.Iterable) r1;

        $z11 = $r32 instanceof java.util.Collection;

        if $z11 == 0 goto label01;

        $r31 = (java.util.Collection) $r32;

        $z13 = interfaceinvoke $r31.<java.util.Collection: boolean isEmpty()>();

        if $z13 == 0 goto label01;

        $z15 = 1;

        goto label04;

     label01:
        $r33 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z16 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label03;

        r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r35 = (androidx.ui.core.PointerInputChange) r34;

        $z12 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDown(androidx.ui.core.PointerInputChange)>(r35);

        if $z12 != 0 goto label02;

        $z15 = 0;

        goto label04;

     label03:
        $z15 = 1;

     label04:
        if $z15 == 0 goto label05;

        $r25 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Started>;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state> = $r25;

        $r26 = virtualinvoke r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function1 getOnStart()>();

        $r27 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r1);

        $r28 = (androidx.ui.core.PointerInputChange) $r27;

        $r29 = virtualinvoke $r28.<androidx.ui.core.PointerInputChange: androidx.ui.core.PointerInputData getCurrent()>();

        $r36 = virtualinvoke $r29.<androidx.ui.core.PointerInputData: androidx.ui.geometry.Offset getPosition()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r36);

        interfaceinvoke $r26.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r36);

        goto label11;

     label05:
        $r17 = r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state>;

        $r16 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Started>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r17, $r16);

        if $z6 == 0 goto label11;

        $r37 = (java.lang.Iterable) r1;

        $z7 = $r37 instanceof java.util.Collection;

        if $z7 == 0 goto label06;

        $r24 = (java.util.Collection) $r37;

        $z10 = interfaceinvoke $r24.<java.util.Collection: boolean isEmpty()>();

        if $z10 == 0 goto label06;

        $z19 = 1;

        goto label09;

     label06:
        $r38 = interfaceinvoke $r37.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z20 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label08;

        r39 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r40 = (androidx.ui.core.PointerInputChange) r39;

        $z9 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r40);

        if $z9 != 0 goto label07;

        $z19 = 0;

        goto label09;

     label08:
        $z19 = 1;

     label09:
        if $z19 == 0 goto label10;

        $r21 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state> = $r21;

        $r22 = virtualinvoke r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnStop()>();

        interfaceinvoke $r22.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label11;

     label10:
        $z8 = staticinvoke <androidx.ui.core.gesture.GestureUtilsKt: boolean anyPointersInBounds(java.util.List,androidx.ui.unit.IntSize)>(r1, r3);

        if $z8 != 0 goto label11;

        $r18 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state> = $r18;

        $r19 = virtualinvoke r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnCancelCallback()>();

        interfaceinvoke $r19.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label11:
        $r41 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z22 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r41);

        if $z22 == 0 goto label16;

        $r9 = r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state>;

        $r8 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Started>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r8);

        if $z3 == 0 goto label16;

        z24 = 0;

        i2 = 0;

        $r10 = (java.util.Collection) r1;

        $i1 = interfaceinvoke $r10.<java.util.Collection: int size()>();

        $i3 = $i1 + -1;

        if i2 > $i3 goto label14;

     label12:
        i0 = i2;

        i2 = i2 + 1;

        r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = r4;

        r6 = (androidx.ui.core.PointerInputChange) r5;

        $z4 = staticinvoke <androidx.ui.core.PointerInputKt: boolean anyPositionChangeConsumed(androidx.ui.core.PointerInputChange)>(r6);

        if $z4 == 0 goto label13;

        $z25 = 1;

        goto label15;

     label13:
        if i2 <= $i3 goto label12;

     label14:
        $z25 = 0;

     label15:
        if $z25 == 0 goto label16;

        $r11 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state> = $r11;

        $r12 = virtualinvoke r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnCancelCallback()>();

        interfaceinvoke $r12.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label16:
        return r1;
    }

    public void onCancel()
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State $r1, $r2, $r3;
        boolean $z0;
        kotlin.jvm.functions.Function0 $r4;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        $r2 = r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state>;

        $r1 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Started>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z0 == 0 goto label1;

        $r3 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle>;

        r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State state> = $r3;

        $r4 = virtualinvoke r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: kotlin.jvm.functions.Function0 getOnCancelCallback()>();

        interfaceinvoke $r4.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label1:
        return;
    }

    public java.lang.Object foldIn(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;
        androidx.ui.core.Modifier$Element r4;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        r4 = (androidx.ui.core.Modifier$Element) r0;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldIn(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r4, r1, r2);

        return $r3;
    }

    public java.lang.Object foldOut(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;
        androidx.ui.core.Modifier$Element r4;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        r4 = (androidx.ui.core.Modifier$Element) r0;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldOut(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r4, r1, r2);

        return $r3;
    }

    public boolean all(kotlin.jvm.functions.Function1)
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;
        androidx.ui.core.Modifier$Element r2;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = (androidx.ui.core.Modifier$Element) r0;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean all(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r2, r1);

        return $z0;
    }

    public boolean any(kotlin.jvm.functions.Function1)
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;
        androidx.ui.core.Modifier$Element r2;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = (androidx.ui.core.Modifier$Element) r0;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean any(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r2, r1);

        return $z0;
    }

    public androidx.ui.core.Modifier plus(androidx.ui.core.Modifier)
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0;
        androidx.ui.core.Modifier r1, $r2, r3;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        r1 := @parameter0: androidx.ui.core.Modifier;

        r3 = (androidx.ui.core.Modifier) r0;

        $r2 = staticinvoke <androidx.ui.core.Modifier$DefaultImpls: androidx.ui.core.Modifier plus(androidx.ui.core.Modifier,androidx.ui.core.Modifier)>(r3, r1);

        return $r2;
    }

    public volatile androidx.ui.core.pointerinput.PointerInputFilter getPointerInputFilter()
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter r0, $r1;
        androidx.ui.core.pointerinput.PointerInputFilter $r2;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter;

        $r1 = virtualinvoke r0.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter getPointerInputFilter()>();

        $r2 = (androidx.ui.core.pointerinput.PointerInputFilter) $r1;

        return $r2;
    }

androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State
<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle>
<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Started>
<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static final androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State[] values()
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State[] r0, r1;
        int $i0, $i1;

        r0 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State[] $VALUES>;

        $i0 = lengthof r0;

        r1 = newarray (androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static final androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/ui/foundation/NoConsumptionIndicatorGestureFilter$State;", r0);

        $r2 = (androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State) $r1;

        return $r2;
    }

    public static final void <clinit>()
    {
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State[] r0;
        androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State $r1, $r2, $r3, $r4;

        $r1 = new androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State;

        specialinvoke $r1.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: void <init>(java.lang.String,int)>("Idle", 0);

        <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle> = $r1;

        $r2 = new androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State;

        specialinvoke $r2.<androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: void <init>(java.lang.String,int)>("Started", 1);

        <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Started> = $r2;

        r0 = newarray (androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State)[2];

        $r3 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Idle>;

        r0[0] = $r3;

        $r4 = <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State Started>;

        r0[1] = $r4;

        <androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State: androidx.ui.foundation.NoConsumptionIndicatorGestureFilter$State[] $VALUES> = r0;

        return;
    }

