android.databinding.tool.reflection.SdkUtil
<android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil$ApiChecker mApiChecker>
<android.databinding.tool.reflection.SdkUtil: int mMinSdk>
    public void <init>(android.databinding.tool.reflection.SdkUtil$ApiChecker, int)
    {
        android.databinding.tool.reflection.SdkUtil r0;
        android.databinding.tool.reflection.SdkUtil$ApiChecker r1;
        int i0;

        r0 := @this: android.databinding.tool.reflection.SdkUtil;

        r1 := @parameter0: android.databinding.tool.reflection.SdkUtil$ApiChecker;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil$ApiChecker mApiChecker> = r1;

        r0.<android.databinding.tool.reflection.SdkUtil: int mMinSdk> = i0;

        return;
    }

    public static android.databinding.tool.reflection.SdkUtil create(java.io.File, int)
    {
        java.io.File r0, $r3;
        int i0;
        android.databinding.tool.reflection.SdkUtil$ApiChecker r1, $r2;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r5, $r8;
        android.databinding.tool.reflection.SdkUtil $r9;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        $r2 = new android.databinding.tool.reflection.SdkUtil$ApiChecker;

        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/platform-tools/api/api-versions.xml");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r8);

        specialinvoke $r2.<android.databinding.tool.reflection.SdkUtil$ApiChecker: void <init>(java.io.File)>($r3);

        r1 = $r2;

        $r9 = new android.databinding.tool.reflection.SdkUtil;

        specialinvoke $r9.<android.databinding.tool.reflection.SdkUtil: void <init>(android.databinding.tool.reflection.SdkUtil$ApiChecker,int)>(r1, i0);

        return $r9;
    }

    public static android.databinding.tool.reflection.SdkUtil get()
    {
        android.databinding.tool.reflection.SdkUtil $r0;

        $r0 = staticinvoke <android.databinding.tool.Context: android.databinding.tool.reflection.SdkUtil getSdkUtil()>();

        return $r0;
    }

    public int getMinApi(android.databinding.tool.reflection.ModelClass)
    {
        android.databinding.tool.reflection.SdkUtil r0;
        android.databinding.tool.reflection.ModelClass r1;
        android.databinding.tool.reflection.SdkUtil$ApiChecker $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: android.databinding.tool.reflection.SdkUtil;

        r1 := @parameter0: android.databinding.tool.reflection.ModelClass;

        $r2 = r0.<android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil$ApiChecker mApiChecker>;

        $r3 = virtualinvoke r1.<android.databinding.tool.reflection.ModelClass: java.lang.String getJniDescription()>();

        $i0 = virtualinvoke $r2.<android.databinding.tool.reflection.SdkUtil$ApiChecker: int getMinApi(java.lang.String,java.lang.String)>($r3, null);

        return $i0;
    }

    public int getMinApi(android.databinding.tool.reflection.ModelMethod)
    {
        android.databinding.tool.reflection.SdkUtil r0;
        android.databinding.tool.reflection.ModelMethod r1;
        java.lang.String r2, r3, $r8;
        int i0, i1;
        java.lang.Object[] $r4, $r7;
        android.databinding.tool.reflection.SdkUtil$ApiChecker $r5, $r6;
        java.lang.Integer $r9;
        android.databinding.tool.reflection.ModelClass r10;

        r0 := @this: android.databinding.tool.reflection.SdkUtil;

        r1 := @parameter0: android.databinding.tool.reflection.ModelMethod;

        r10 = virtualinvoke r1.<android.databinding.tool.reflection.ModelMethod: android.databinding.tool.reflection.ModelClass getDeclaringClass()>();

        $r5 = r0.<android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil$ApiChecker mApiChecker>;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r5, "should\'ve initialized api checker", $r4);

        i1 = 2147483647;

        r2 = virtualinvoke r1.<android.databinding.tool.reflection.ModelMethod: java.lang.String getJniDescription()>();

     label1:
        if r10 == null goto label3;

        r3 = virtualinvoke r10.<android.databinding.tool.reflection.ModelClass: java.lang.String getJniDescription()>();

        $r6 = r0.<android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil$ApiChecker mApiChecker>;

        i0 = virtualinvoke $r6.<android.databinding.tool.reflection.SdkUtil$ApiChecker: int getMinApi(java.lang.String,java.lang.String)>(r3, r2);

        $r7 = newarray (java.lang.Object)[4];

        $r8 = virtualinvoke r1.<android.databinding.tool.reflection.ModelMethod: java.lang.String getName()>();

        $r7[0] = $r8;

        $r7[1] = r3;

        $r7[2] = r2;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[3] = $r9;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("checking method api for %s, class:%s method:%s. result: %d", $r7);

        if i0 <= 0 goto label2;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i0);

     label2:
        r10 = virtualinvoke r10.<android.databinding.tool.reflection.ModelClass: android.databinding.tool.reflection.ModelClass getSuperclass()>();

        goto label1;

     label3:
        if i1 != 2147483647 goto label4;

        return 1;

     label4:
        return i1;
    }

    public android.databinding.tool.reflection.SdkUtil$ApiChecker getApiChecker()
    {
        android.databinding.tool.reflection.SdkUtil r0;
        android.databinding.tool.reflection.SdkUtil$ApiChecker $r1;

        r0 := @this: android.databinding.tool.reflection.SdkUtil;

        $r1 = r0.<android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil$ApiChecker mApiChecker>;

        return $r1;
    }

    public int getMinSdk()
    {
        android.databinding.tool.reflection.SdkUtil r0;
        int $i0;

        r0 := @this: android.databinding.tool.reflection.SdkUtil;

        $i0 = r0.<android.databinding.tool.reflection.SdkUtil: int mMinSdk>;

        return $i0;
    }

    public void swapApiChecker(android.databinding.tool.reflection.SdkUtil$ApiChecker)
    {
        android.databinding.tool.reflection.SdkUtil r0;
        android.databinding.tool.reflection.SdkUtil$ApiChecker r1;

        r0 := @this: android.databinding.tool.reflection.SdkUtil;

        r1 := @parameter0: android.databinding.tool.reflection.SdkUtil$ApiChecker;

        r0.<android.databinding.tool.reflection.SdkUtil: android.databinding.tool.reflection.SdkUtil$ApiChecker mApiChecker> = r1;

        return;
    }

android.databinding.tool.reflection.SdkUtil$ApiChecker
<android.databinding.tool.reflection.SdkUtil$ApiChecker: java.util.Map mFullLookup>
<android.databinding.tool.reflection.SdkUtil$ApiChecker: org.w3c.dom.Document mDoc>
<android.databinding.tool.reflection.SdkUtil$ApiChecker: javax.xml.xpath.XPath mXPath>
    public void <init>(java.io.File)
    {
        android.databinding.tool.reflection.SdkUtil$ApiChecker r0;
        java.io.File r1;
        javax.xml.parsers.DocumentBuilder r2;
        javax.xml.xpath.XPathFactory r3;
        java.lang.Throwable r4, $r9, $r11, r14;
        java.lang.Class $r5;
        java.lang.ClassLoader $r6;
        org.w3c.dom.Document $r7;
        javax.xml.xpath.XPath $r8;
        boolean $z0;
        java.lang.Object[] $r10;
        java.lang.Object r12;
        javax.xml.parsers.DocumentBuilderFactory r13;
        java.io.InputStream r15, r16, r17, r18;

        r0 := @this: android.databinding.tool.reflection.SdkUtil$ApiChecker;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r12 = null;

     label01:
        if r1 == null goto label02;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

     label02:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r12 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("api-versions.xml");

        goto label04;

     label03:
        r12 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r1);

     label04:
        r13 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        r2 = virtualinvoke r13.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        r15 = (java.io.InputStream) r12;

        $r7 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r15);

        r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: org.w3c.dom.Document mDoc> = $r7;

        r3 = staticinvoke <javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance()>();

        $r8 = virtualinvoke r3.<javax.xml.xpath.XPathFactory: javax.xml.xpath.XPath newXPath()>();

        r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: javax.xml.xpath.XPath mXPath> = $r8;

        specialinvoke r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: void buildFullLookup()>();

     label05:
        r16 = (java.io.InputStream) r12;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r16);

        goto label10;

     label06:
        $r9 := @caughtexception;

        r14 = $r9;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r1;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r14, "cannot load api descriptions from %s", $r10);

     label07:
        r17 = (java.io.InputStream) r12;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r17);

        goto label10;

     label08:
        $r11 := @caughtexception;

        r4 = $r11;

     label09:
        r18 = (java.io.InputStream) r12;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r18);

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void buildFullLookup() throws javax.xml.xpath.XPathExpressionException
    {
        android.databinding.tool.reflection.SdkUtil$ApiChecker r0;
        org.w3c.dom.NodeList r1, r4, $r9;
        org.w3c.dom.Node r2, r5, $r10, $r15, $r19;
        int i0, i1, i2, $i3, $i4, $i5, $i7, i9, i10;
        java.lang.String r3, r6, r7, $r12, $r13, $r16, $r17;
        org.w3c.dom.Document $r8;
        java.util.HashMap $r11;
        short $s6, $s8;
        boolean $z0, $z1;
        org.w3c.dom.NamedNodeMap $r14, $r18;
        java.util.Map $r20;
        java.lang.Integer $r21;

        r0 := @this: android.databinding.tool.reflection.SdkUtil$ApiChecker;

        $r8 = r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: org.w3c.dom.Document mDoc>;

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.NodeList getChildNodes()>();

        $r10 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r1 = interfaceinvoke $r10.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $r11 = new java.util.HashMap;

        $i3 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>();

        $i4 = $i3 * 4;

        specialinvoke $r11.<java.util.HashMap: void <init>(int)>($i4);

        r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: java.util.Map mFullLookup> = $r11;

        i9 = 0;

     label1:
        $i5 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>();

        if i9 >= $i5 goto label7;

        r2 = interfaceinvoke r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i9);

        $s6 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s6 != 1 goto label6;

        $r12 = "class";

        $r13 = interfaceinvoke r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label2;

        goto label6;

     label2:
        i0 = staticinvoke <android.databinding.tool.reflection.SdkUtil$ApiChecker: int getSince(org.w3c.dom.Node)>(r2);

        $r14 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r15 = interfaceinvoke $r14.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("name");

        r3 = interfaceinvoke $r15.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        r4 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i10 = 0;

     label3:
        $i7 = interfaceinvoke r4.<org.w3c.dom.NodeList: int getLength()>();

        if i10 >= $i7 goto label6;

        r5 = interfaceinvoke r4.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i10);

        $s8 = interfaceinvoke r5.<org.w3c.dom.Node: short getNodeType()>();

        if $s8 != 1 goto label5;

        $r16 = "method";

        $r17 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        i1 = staticinvoke <android.databinding.tool.reflection.SdkUtil$ApiChecker: int getSince(org.w3c.dom.Node)>(r5);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $r18 = interfaceinvoke r5.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r19 = interfaceinvoke $r18.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("name");

        r6 = interfaceinvoke $r19.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        r7 = staticinvoke <android.databinding.tool.reflection.SdkUtil$ApiChecker: java.lang.String cacheKey(java.lang.String,java.lang.String)>(r3, r6);

        $r20 = r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: java.util.Map mFullLookup>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r21);

     label5:
        i10 = i10 + 1;

        goto label3;

     label6:
        i9 = i9 + 1;

        goto label1;

     label7:
        return;
    }

    public int getMinApi(java.lang.String, java.lang.String)
    {
        android.databinding.tool.reflection.SdkUtil$ApiChecker r0;
        java.lang.String r1, r2, r3;
        java.lang.Integer r4;
        org.w3c.dom.Document $r5;
        javax.xml.xpath.XPath $r6;
        boolean $z0;
        java.util.Map $r7;
        java.lang.Object $r8;
        int $i0;

        r0 := @this: android.databinding.tool.reflection.SdkUtil$ApiChecker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: org.w3c.dom.Document mDoc>;

        if $r5 == null goto label1;

        $r6 = r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: javax.xml.xpath.XPath mXPath>;

        if $r6 != null goto label2;

     label1:
        return 1;

     label2:
        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label3:
        return 1;

     label4:
        r3 = staticinvoke <android.databinding.tool.reflection.SdkUtil$ApiChecker: java.lang.String cacheKey(java.lang.String,java.lang.String)>(r1, r2);

        $r7 = r0.<android.databinding.tool.reflection.SdkUtil$ApiChecker: java.util.Map mFullLookup>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.Integer) $r8;

        if r4 != null goto label5;

        $i0 = 0;

        goto label6;

     label5:
        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

     label6:
        return $i0;
    }

    private static java.lang.String cacheKey(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("~");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static int getSince(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r1;
        java.lang.String r2;
        java.lang.Throwable r3, $r5;
        org.w3c.dom.NamedNodeMap $r4;
        boolean $z0;
        int $i0;

        r0 := @parameter0: org.w3c.dom.Node;

        $r4 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        r1 = interfaceinvoke $r4.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("since");

        if r1 == null goto label4;

        r2 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if r2 == null goto label4;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        return 1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

