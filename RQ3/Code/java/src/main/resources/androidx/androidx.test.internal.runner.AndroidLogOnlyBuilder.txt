androidx.test.internal.runner.AndroidLogOnlyBuilder
<androidx.test.internal.runner.AndroidLogOnlyBuilder: androidx.test.internal.runner.AndroidRunnerBuilder builder>
<androidx.test.internal.runner.AndroidLogOnlyBuilder: androidx.test.internal.util.AndroidRunnerParams runnerParams>
<androidx.test.internal.runner.AndroidLogOnlyBuilder: int runnerCount>
    public org.junit.runner.Runner runnerForClass(java.lang.Class) throws java.lang.Throwable
    {
        androidx.test.internal.runner.AndroidLogOnlyBuilder r0;
        java.lang.Class r1;
        org.junit.runner.Runner r2;
        java.lang.String r3, $r14;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.test.internal.runner.AndroidRunnerBuilder $r4;
        androidx.test.internal.util.AndroidRunnerParams $r6;
        junit.framework.TestSuite $r9;
        java.lang.StringBuilder $r12, $r13, r22;
        junit.framework.Test r18, r27, r28;
        androidx.test.internal.runner.EmptyTestRunner r19;
        androidx.test.internal.runner.junit3.NonExecutingTestSuite r20, r24;
        androidx.test.internal.runner.junit3.JUnit38ClassRunner r21, r25;
        java.lang.IllegalArgumentException r23;
        androidx.test.internal.runner.NonExecutingRunner r26;

        r0 := @this: androidx.test.internal.runner.AndroidLogOnlyBuilder;

        r1 := @parameter0: java.lang.Class;

        $i0 = r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: int runnerCount>;

        $i1 = $i0 + 1;

        r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: int runnerCount> = $i1;

        $z0 = staticinvoke <androidx.test.internal.util.AndroidRunnerBuilderUtil: boolean isJUnit3Test(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        $z6 = staticinvoke <androidx.test.internal.util.AndroidRunnerBuilderUtil: boolean hasJUnit3TestMethod(java.lang.Class)>(r1);

        if $z6 != 0 goto label1;

        r19 = new androidx.test.internal.runner.EmptyTestRunner;

        specialinvoke r19.<androidx.test.internal.runner.EmptyTestRunner: void <init>(java.lang.Class)>(r1);

        return r19;

     label1:
        r21 = new androidx.test.internal.runner.junit3.JUnit38ClassRunner;

        r20 = new androidx.test.internal.runner.junit3.NonExecutingTestSuite;

        specialinvoke r20.<androidx.test.internal.runner.junit3.NonExecutingTestSuite: void <init>(java.lang.Class)>(r1);

        r27 = (junit.framework.Test) r20;

        specialinvoke r21.<androidx.test.internal.runner.junit3.JUnit38ClassRunner: void <init>(junit.framework.Test)>(r27);

        return r21;

     label2:
        $z1 = staticinvoke <androidx.test.internal.util.AndroidRunnerBuilderUtil: boolean hasSuiteMethod(java.lang.Class)>(r1);

        if $z1 == 0 goto label5;

        $r6 = r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: androidx.test.internal.util.AndroidRunnerParams runnerParams>;

        $z4 = virtualinvoke $r6.<androidx.test.internal.util.AndroidRunnerParams: boolean isIgnoreSuiteMethods()>();

        if $z4 == 0 goto label3;

        return null;

     label3:
        r18 = staticinvoke <org.junit.internal.runners.SuiteMethod: junit.framework.Test testFromSuiteMethod(java.lang.Class)>(r1);

        $z5 = r18 instanceof junit.framework.TestSuite;

        if $z5 != 0 goto label4;

        r23 = new java.lang.IllegalArgumentException;

        r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#suite() did not return a TestSuite");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw r23;

     label4:
        r25 = new androidx.test.internal.runner.junit3.JUnit38ClassRunner;

        r24 = new androidx.test.internal.runner.junit3.NonExecutingTestSuite;

        $r9 = (junit.framework.TestSuite) r18;

        specialinvoke r24.<androidx.test.internal.runner.junit3.NonExecutingTestSuite: void <init>(junit.framework.TestSuite)>($r9);

        r28 = (junit.framework.Test) r24;

        specialinvoke r25.<androidx.test.internal.runner.junit3.JUnit38ClassRunner: void <init>(junit.framework.Test)>(r28);

        return r25;

     label5:
        i3 = r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: int runnerCount>;

        $r4 = r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: androidx.test.internal.runner.AndroidRunnerBuilder builder>;

        r2 = virtualinvoke $r4.<androidx.test.internal.runner.AndroidRunnerBuilder: org.junit.runner.Runner runnerForClass(java.lang.Class)>(r1);

        if null != r2 goto label6;

        return null;

     label6:
        $z2 = r2 instanceof org.junit.internal.runners.ErrorReportingRunner;

        if $z2 != 0 goto label7;

        $z3 = r2 instanceof androidx.test.internal.runner.ErrorReportingRunner;

        if $z3 == 0 goto label8;

     label7:
        return r2;

     label8:
        $i2 = r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: int runnerCount>;

        if $i2 <= i3 goto label9;

        return r2;

     label9:
        r26 = new androidx.test.internal.runner.NonExecutingRunner;

        specialinvoke r26.<androidx.test.internal.runner.NonExecutingRunner: void <init>(org.junit.runner.Runner)>(r2);

        return r26;
    }

    void <init>(androidx.test.internal.util.AndroidRunnerParams, java.util.List)
    {
        androidx.test.internal.runner.AndroidLogOnlyBuilder r0;
        androidx.test.internal.util.AndroidRunnerParams r1, $r4;
        java.util.List r2;
        java.lang.Object $r3;
        androidx.test.internal.runner.AndroidRunnerBuilder $r5;

        r0 := @this: androidx.test.internal.runner.AndroidLogOnlyBuilder;

        r1 := @parameter0: androidx.test.internal.util.AndroidRunnerParams;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<org.junit.runners.model.RunnerBuilder: void <init>()>();

        r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: int runnerCount> = 0;

        $r3 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "runnerParams cannot be null!");

        $r4 = (androidx.test.internal.util.AndroidRunnerParams) $r3;

        r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: androidx.test.internal.util.AndroidRunnerParams runnerParams> = $r4;

        $r5 = new androidx.test.internal.runner.AndroidRunnerBuilder;

        specialinvoke $r5.<androidx.test.internal.runner.AndroidRunnerBuilder: void <init>(org.junit.runners.model.RunnerBuilder,androidx.test.internal.util.AndroidRunnerParams,java.util.List)>(r0, r1, r2);

        r0.<androidx.test.internal.runner.AndroidLogOnlyBuilder: androidx.test.internal.runner.AndroidRunnerBuilder builder> = $r5;

        return;
    }

