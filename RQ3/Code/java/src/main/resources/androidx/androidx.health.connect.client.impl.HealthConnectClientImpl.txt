androidx.health.connect.client.impl.HealthConnectClientImpl
<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.String providerPackageName>
<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>
    public void <init>(java.lang.String, androidx.health.platform.client.HealthDataAsyncClient)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        java.lang.String r1;
        androidx.health.platform.client.HealthDataAsyncClient r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.platform.client.HealthDataAsyncClient;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "providerPackageName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "delegate");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.String providerPackageName> = r1;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate> = r2;

        return;
    }

    public androidx.activity.result.contract.ActivityResultContract createRequestPermissionActivityContract()
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        java.lang.String $r1;
        androidx.activity.result.contract.ActivityResultContract $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r1 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.String providerPackageName>;

        $r2 = staticinvoke <androidx.health.connect.client.permission.HealthDataRequestPermissionsKt: androidx.activity.result.contract.ActivityResultContract createHealthDataRequestPermissions(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.Object getGrantedPermissions(java.util.Set, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        java.util.Set r1, $r10, $r15;
        kotlin.coroutines.Continuation r2, r37;
        java.util.Collection r3, r22, r28, r32;
        java.lang.Object $r4, r5, r24, $r26, r30;
        boolean $z0, $z2, $z9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.List $r8, $r13;
        java.lang.Iterable $r9, $r14, $r20, $r27;
        androidx.health.connect.client.permission.Permission $r11, r25;
        com.google.common.util.concurrent.ListenableFuture $r16;
        androidx.health.platform.client.proto.PermissionProto$Permission $r17, r31;
        androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1 $r19, r33;
        androidx.health.platform.client.HealthDataAsyncClient r21;
        java.util.Iterator r23, r29;
        java.util.ArrayList r34, r35;
        java.lang.IllegalStateException r36;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1;

        if $z0 == 0 goto label01;

        $r19 = (androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1) r2;

        $i2 = $r19.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: int label>;

        $i3 = $i2 & -2147483648;

        if $i3 == 0 goto label01;

        $i4 = $r19.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: int label>;

        $i5 = $i4 - -2147483648;

        $r19.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: int label> = $i5;

        goto label02;

     label01:
        r33 = new androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1;

        specialinvoke r33.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r2);

        $r19 = r33;

     label02:
        $r4 = $r19.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i6 = $r19.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: int label>;

        tableswitch($i6)
        {
            case 0: goto label03;
            case 1: goto label06;
            default: goto label10;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r20 = (java.lang.Iterable) r1;

        r21 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        r34 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r20, 10);

        specialinvoke r34.<java.util.ArrayList: void <init>(int)>($i1);

        r22 = (java.util.Collection) r34;

        r23 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        r24 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r25 = (androidx.health.connect.client.permission.Permission) r24;

        r3 = r22;

        $r17 = staticinvoke <androidx.health.connect.client.impl.converters.permission.PermissionConverterKt: androidx.health.platform.client.proto.PermissionProto$Permission toProtoPermission(androidx.health.connect.client.permission.Permission)>(r25);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r17);

        goto label04;

     label05:
        $r13 = (java.util.List) r22;

        $r14 = (java.lang.Iterable) $r13;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r14);

        $r16 = interfaceinvoke r21.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture getGrantedPermissions(java.util.Set)>($r15);

        $r19.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: int label> = 1;

        r37 = (kotlin.coroutines.Continuation) $r19;

        $r26 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r16, r37);

        if $r26 != r5 goto label07;

        return r5;

     label06:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r26 = $r4;

     label07:
        $r27 = (java.lang.Iterable) $r26;

        r35 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r27, 10);

        specialinvoke r35.<java.util.ArrayList: void <init>(int)>($i0);

        r28 = (java.util.Collection) r35;

        r29 = interfaceinvoke $r27.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z9 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label09;

        r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (androidx.health.platform.client.proto.PermissionProto$Permission) r30;

        r32 = r28;

        $r11 = staticinvoke <androidx.health.connect.client.impl.converters.permission.PermissionConverterKt: androidx.health.connect.client.permission.Permission toJetpackPermission(androidx.health.platform.client.proto.PermissionProto$Permission)>(r31);

        interfaceinvoke r32.<java.util.Collection: boolean add(java.lang.Object)>($r11);

        goto label08;

     label09:
        $r8 = (java.util.List) r28;

        $r9 = (java.lang.Iterable) $r8;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r9);

        return $r10;

     label10:
        r36 = new java.lang.IllegalStateException;

        specialinvoke r36.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r36;
    }

    public java.lang.Object revokeAllPermissions(kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        kotlin.coroutines.Continuation $r1;
        androidx.health.platform.client.HealthDataAsyncClient $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;
        java.lang.Object $r4, $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r3 = interfaceinvoke $r2.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture revokeAllPermissions()>();

        $r4 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r3, $r1);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label1;

        return $r4;

     label1:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;
    }

    public androidx.health.connect.client.PermissionController getPermissionController()
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        androidx.health.connect.client.PermissionController $r1;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r1 = (androidx.health.connect.client.PermissionController) r0;

        return $r1;
    }

    public java.lang.Object insertRecords(java.util.List, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        java.util.List r1, r3, $r16;
        kotlin.coroutines.Continuation r2, r26;
        java.lang.Iterable $r4;
        java.util.Collection r5, r10;
        java.util.Iterator r6;
        java.lang.Object r7, $r11, r12, $r21;
        androidx.health.connect.client.records.Record r8;
        androidx.health.platform.client.HealthDataAsyncClient r9;
        boolean $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.google.common.util.concurrent.ListenableFuture $r17;
        androidx.health.platform.client.proto.DataProto$DataPoint $r18;
        androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1 $r20, r22;
        java.util.ArrayList r23;
        androidx.health.connect.client.response.InsertRecordsResponse r24;
        java.lang.IllegalStateException r25;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z3 = r2 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1;

        if $z3 == 0 goto label1;

        $r20 = (androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1) r2;

        $i1 = $r20.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label1;

        $i3 = $r20.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: int label>;

        $i4 = $i3 - -2147483648;

        $r20.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: int label> = $i4;

        goto label2;

     label1:
        r22 = new androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1;

        specialinvoke r22.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r2);

        $r20 = r22;

     label2:
        $r11 = $r20.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: java.lang.Object result>;

        r12 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r20.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label3;
            case 1: goto label6;
            default: goto label8;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r11);

        $r4 = (java.lang.Iterable) r1;

        r9 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        r23 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r4, 10);

        specialinvoke r23.<java.util.ArrayList: void <init>(int)>($i0);

        r5 = (java.util.Collection) r23;

        r6 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.health.connect.client.records.Record) r7;

        r10 = r5;

        $r18 = staticinvoke <androidx.health.connect.client.impl.converters.records.RecordToProtoConvertersKt: androidx.health.platform.client.proto.DataProto$DataPoint toProto(androidx.health.connect.client.records.Record)>(r8);

        interfaceinvoke r10.<java.util.Collection: boolean add(java.lang.Object)>($r18);

        goto label4;

     label5:
        $r16 = (java.util.List) r5;

        $r17 = interfaceinvoke r9.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture insertData(java.util.List)>($r16);

        $r20.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: int label> = 1;

        r26 = (kotlin.coroutines.Continuation) $r20;

        $r21 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r17, r26);

        if $r21 != r12 goto label7;

        return r12;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r11);

        $r21 = $r11;

     label7:
        r3 = (java.util.List) $r21;

        r24 = new androidx.health.connect.client.response.InsertRecordsResponse;

        specialinvoke r24.<androidx.health.connect.client.response.InsertRecordsResponse: void <init>(java.util.List)>(r3);

        return r24;

     label8:
        r25 = new java.lang.IllegalStateException;

        specialinvoke r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r25;
    }

    public java.lang.Object updateRecords(java.util.List, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        java.util.List r1, $r11;
        kotlin.coroutines.Continuation $r2;
        java.lang.Iterable $r3;
        java.util.Collection r4, r9;
        java.util.Iterator r5;
        java.lang.Object r6, $r13, $r14;
        androidx.health.connect.client.records.Record r7;
        androidx.health.platform.client.HealthDataAsyncClient r8;
        java.util.ArrayList $r10;
        int $i0;
        boolean $z3;
        com.google.common.util.concurrent.ListenableFuture $r12;
        kotlin.Unit $r15;
        androidx.health.platform.client.proto.DataProto$DataPoint $r16;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (java.lang.Iterable) r1;

        r8 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r10 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r10;

        r5 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.health.connect.client.records.Record) r6;

        r9 = r4;

        $r16 = staticinvoke <androidx.health.connect.client.impl.converters.records.RecordToProtoConvertersKt: androidx.health.platform.client.proto.DataProto$DataPoint toProto(androidx.health.connect.client.records.Record)>(r7);

        interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label1;

     label2:
        $r11 = (java.util.List) r4;

        $r12 = interfaceinvoke r8.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture updateData(java.util.List)>($r11);

        $r13 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r12, $r2);

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r14 goto label3;

        return $r13;

     label3:
        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r15;
    }

    public java.lang.Object deleteRecords(kotlin.reflect.KClass, java.util.List, java.util.List, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        kotlin.reflect.KClass r1;
        java.util.List r2, r3, $r6, $r7;
        kotlin.coroutines.Continuation $r4;
        androidx.health.platform.client.HealthDataAsyncClient $r5;
        com.google.common.util.concurrent.ListenableFuture $r8;
        java.lang.Object $r9, $r10;
        kotlin.Unit $r11;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: kotlin.reflect.KClass;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        $r5 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r6 = staticinvoke <androidx.health.connect.client.impl.converters.datatype.DataTypeIdPairConverterKt: java.util.List toDataTypeIdPairProtoList(kotlin.reflect.KClass,java.util.List)>(r1, r2);

        $r7 = staticinvoke <androidx.health.connect.client.impl.converters.datatype.DataTypeIdPairConverterKt: java.util.List toDataTypeIdPairProtoList(kotlin.reflect.KClass,java.util.List)>(r1, r3);

        $r8 = interfaceinvoke $r5.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture deleteData(java.util.List,java.util.List)>($r6, $r7);

        $r9 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r8, $r4);

        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r9 != $r10 goto label1;

        return $r9;

     label1:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r11;
    }

    public java.lang.Object deleteRecords(kotlin.reflect.KClass, androidx.health.connect.client.time.TimeRangeFilter, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        kotlin.reflect.KClass r1;
        androidx.health.connect.client.time.TimeRangeFilter r2;
        kotlin.coroutines.Continuation $r3;
        androidx.health.platform.client.HealthDataAsyncClient $r4;
        androidx.health.platform.client.proto.RequestProto$DeleteDataRangeRequest $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;
        java.lang.Object $r7, $r8;
        kotlin.Unit $r9;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: kotlin.reflect.KClass;

        r2 := @parameter1: androidx.health.connect.client.time.TimeRangeFilter;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r5 = staticinvoke <androidx.health.connect.client.impl.converters.request.DeleteDataRangeRequestToProtoKt: androidx.health.platform.client.proto.RequestProto$DeleteDataRangeRequest toDeleteDataRangeRequestProto(kotlin.reflect.KClass,androidx.health.connect.client.time.TimeRangeFilter)>(r1, r2);

        $r6 = interfaceinvoke $r4.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture deleteDataRange(androidx.health.platform.client.proto.RequestProto$DeleteDataRangeRequest)>($r5);

        $r7 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r6, $r3);

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r7 != $r8 goto label1;

        return $r7;

     label1:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;
    }

    public java.lang.Object readRecord(kotlin.reflect.KClass, java.lang.String, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        kotlin.reflect.KClass r1;
        java.lang.String r2;
        kotlin.coroutines.Continuation r3, r19;
        androidx.health.platform.client.proto.DataProto$DataPoint r4;
        java.lang.Object $r5, r6, $r15;
        boolean $z0;
        androidx.health.connect.client.records.Record $r9;
        androidx.health.platform.client.HealthDataAsyncClient $r10;
        androidx.health.platform.client.proto.RequestProto$ReadDataRequest $r11;
        com.google.common.util.concurrent.ListenableFuture $r12;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1 $r14, r16;
        androidx.health.connect.client.response.ReadRecordResponse r17;
        java.lang.IllegalStateException r18;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: kotlin.reflect.KClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = r3 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1;

        if $z0 == 0 goto label1;

        $r14 = (androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1) r3;

        $i0 = $r14.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r14.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: int label>;

        $i3 = $i2 - -2147483648;

        $r14.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: int label> = $i3;

        goto label2;

     label1:
        r16 = new androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1;

        specialinvoke r16.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r3);

        $r14 = r16;

     label2:
        $r5 = $r14.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: java.lang.Object result>;

        r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r14.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r10 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r11 = staticinvoke <androidx.health.connect.client.impl.converters.request.ReadDataRequestToProtoKt: androidx.health.platform.client.proto.RequestProto$ReadDataRequest toReadDataRequestProto(kotlin.reflect.KClass,java.lang.String)>(r1, r2);

        $r12 = interfaceinvoke $r10.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture readData(androidx.health.platform.client.proto.RequestProto$ReadDataRequest)>($r11);

        $r14.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: int label> = 1;

        r19 = (kotlin.coroutines.Continuation) $r14;

        $r15 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r12, r19);

        if $r15 != r6 goto label5;

        return r6;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r15 = $r5;

     label5:
        r4 = (androidx.health.platform.client.proto.DataProto$DataPoint) $r15;

        r17 = new androidx.health.connect.client.response.ReadRecordResponse;

        $r9 = staticinvoke <androidx.health.connect.client.impl.converters.records.ProtoToRecordConvertersKt: androidx.health.connect.client.records.Record toRecord(androidx.health.platform.client.proto.DataProto$DataPoint)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type T of androidx.health.connect.client.impl.HealthConnectClientImpl.readRecord");

        specialinvoke r17.<androidx.health.connect.client.response.ReadRecordResponse: void <init>(androidx.health.connect.client.records.Record)>($r9);

        return r17;

     label6:
        r18 = new java.lang.IllegalStateException;

        specialinvoke r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r18;
    }

    public java.lang.Object getChangesToken(androidx.health.connect.client.request.ChangesTokenRequest, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        androidx.health.connect.client.request.ChangesTokenRequest r1;
        kotlin.coroutines.Continuation r2, r56;
        androidx.health.platform.client.proto.ResponseProto$GetChangesTokenResponse r3;
        java.lang.Object $r4, r5, r38, r47, $r51;
        boolean $z0, $z1, $z2;
        java.lang.String $r7, $r22, $r27;
        androidx.health.platform.client.HealthDataAsyncClient $r8, r35, r44;
        androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest$Builder $r9, $r13, $r17, r34, r43;
        java.util.Set $r10, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Iterable $r12, $r16, $r33, $r42;
        androidx.health.platform.client.proto.GeneratedMessageLite $r18, $r24, $r29;
        androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest $r19;
        com.google.common.util.concurrent.ListenableFuture $r20;
        androidx.health.platform.client.proto.DataProto$DataOrigin$Builder $r21, $r23;
        androidx.health.platform.client.proto.DataProto$DataOrigin $r25;
        androidx.health.platform.client.proto.DataProto$DataType$Builder $r26, $r28;
        androidx.health.platform.client.proto.DataProto$DataType $r30;
        androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1 $r32, r52;
        java.util.Collection r36, r40, r45, r49;
        java.util.Iterator r37, r46;
        kotlin.reflect.KClass r39;
        java.util.List r41, r50;
        androidx.health.connect.client.records.metadata.DataOrigin r48;
        java.util.ArrayList r53, r54;
        java.lang.IllegalStateException r55;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: androidx.health.connect.client.request.ChangesTokenRequest;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1;

        if $z0 == 0 goto label01;

        $r32 = (androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1) r2;

        $i2 = $r32.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: int label>;

        $i3 = $i2 & -2147483648;

        if $i3 == 0 goto label01;

        $i4 = $r32.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: int label>;

        $i5 = $i4 - -2147483648;

        $r32.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: int label> = $i5;

        goto label02;

     label01:
        r52 = new androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1;

        specialinvoke r52.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r2);

        $r32 = r52;

     label02:
        $r4 = $r32.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i6 = $r32.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: int label>;

        tableswitch($i6)
        {
            case 0: goto label03;
            case 1: goto label08;
            default: goto label10;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r8 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r9 = staticinvoke <androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest: androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest$Builder newBuilder()>();

        $r10 = virtualinvoke r1.<androidx.health.connect.client.request.ChangesTokenRequest: java.util.Set getRecordTypes$health_connect_client_release()>();

        $r33 = (java.lang.Iterable) $r10;

        r34 = $r9;

        r35 = $r8;

        r53 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r33, 10);

        specialinvoke r53.<java.util.ArrayList: void <init>(int)>($i0);

        r36 = (java.util.Collection) r53;

        r37 = interfaceinvoke $r33.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r39 = (kotlin.reflect.KClass) r38;

        r40 = r36;

        $r26 = staticinvoke <androidx.health.platform.client.proto.DataProto$DataType: androidx.health.platform.client.proto.DataProto$DataType$Builder newBuilder()>();

        $r27 = staticinvoke <androidx.health.connect.client.impl.converters.datatype.DataTypeConverterKt: java.lang.String toDataTypeName(kotlin.reflect.KClass)>(r39);

        $r28 = virtualinvoke $r26.<androidx.health.platform.client.proto.DataProto$DataType$Builder: androidx.health.platform.client.proto.DataProto$DataType$Builder setName(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<androidx.health.platform.client.proto.DataProto$DataType$Builder: androidx.health.platform.client.proto.GeneratedMessageLite build()>();

        $r30 = (androidx.health.platform.client.proto.DataProto$DataType) $r29;

        interfaceinvoke r40.<java.util.Collection: boolean add(java.lang.Object)>($r30);

        goto label04;

     label05:
        r41 = (java.util.List) r36;

        $r12 = (java.lang.Iterable) r41;

        $r13 = virtualinvoke r34.<androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest$Builder: androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest$Builder addAllDataType(java.lang.Iterable)>($r12);

        $r14 = virtualinvoke r1.<androidx.health.connect.client.request.ChangesTokenRequest: java.util.Set getDataOriginFilters$health_connect_client_release()>();

        $r42 = (java.lang.Iterable) $r14;

        r43 = $r13;

        r44 = r35;

        r54 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r42, 10);

        specialinvoke r54.<java.util.ArrayList: void <init>(int)>($i1);

        r45 = (java.util.Collection) r54;

        r46 = interfaceinvoke $r42.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r48 = (androidx.health.connect.client.records.metadata.DataOrigin) r47;

        r49 = r45;

        $r21 = staticinvoke <androidx.health.platform.client.proto.DataProto$DataOrigin: androidx.health.platform.client.proto.DataProto$DataOrigin$Builder newBuilder()>();

        $r22 = virtualinvoke r48.<androidx.health.connect.client.records.metadata.DataOrigin: java.lang.String getPackageName()>();

        $r23 = virtualinvoke $r21.<androidx.health.platform.client.proto.DataProto$DataOrigin$Builder: androidx.health.platform.client.proto.DataProto$DataOrigin$Builder setApplicationId(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<androidx.health.platform.client.proto.DataProto$DataOrigin$Builder: androidx.health.platform.client.proto.GeneratedMessageLite build()>();

        $r25 = (androidx.health.platform.client.proto.DataProto$DataOrigin) $r24;

        interfaceinvoke r49.<java.util.Collection: boolean add(java.lang.Object)>($r25);

        goto label06;

     label07:
        r50 = (java.util.List) r45;

        $r16 = (java.lang.Iterable) r50;

        $r17 = virtualinvoke r43.<androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest$Builder: androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest$Builder addAllDataOriginFilters(java.lang.Iterable)>($r16);

        $r18 = virtualinvoke $r17.<androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest$Builder: androidx.health.platform.client.proto.GeneratedMessageLite build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "newBuilder()\n           \u2026                 .build()");

        $r19 = (androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest) $r18;

        $r20 = interfaceinvoke r44.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture getChangesToken(androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest)>($r19);

        $r32.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: int label> = 1;

        r56 = (kotlin.coroutines.Continuation) $r32;

        $r51 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r20, r56);

        if $r51 != r5 goto label09;

        return r5;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r51 = $r4;

     label09:
        r3 = (androidx.health.platform.client.proto.ResponseProto$GetChangesTokenResponse) $r51;

        $r7 = virtualinvoke r3.<androidx.health.platform.client.proto.ResponseProto$GetChangesTokenResponse: java.lang.String getChangesToken()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "proto.changesToken");

        return $r7;

     label10:
        r55 = new java.lang.IllegalStateException;

        specialinvoke r55.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r55;
    }

    public java.lang.Object getChanges(java.lang.String, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        java.lang.String r1;
        kotlin.coroutines.Continuation r2, r19;
        androidx.health.platform.client.proto.ResponseProto$GetChangesResponse r3;
        java.lang.Object $r4, r5, $r16;
        boolean $z0;
        androidx.health.connect.client.response.ChangesResponse $r7;
        androidx.health.platform.client.HealthDataAsyncClient $r8;
        androidx.health.platform.client.proto.RequestProto$GetChangesRequest$Builder $r9, $r10;
        androidx.health.platform.client.proto.GeneratedMessageLite $r11;
        androidx.health.platform.client.proto.RequestProto$GetChangesRequest $r12;
        com.google.common.util.concurrent.ListenableFuture $r13;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1 $r15, r17;
        java.lang.IllegalStateException r18;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1;

        if $z0 == 0 goto label1;

        $r15 = (androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1) r2;

        $i0 = $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: int label>;

        $i3 = $i2 - -2147483648;

        $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: int label> = $i3;

        goto label2;

     label1:
        r17 = new androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1;

        specialinvoke r17.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r2);

        $r15 = r17;

     label2:
        $r4 = $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r8 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r9 = staticinvoke <androidx.health.platform.client.proto.RequestProto$GetChangesRequest: androidx.health.platform.client.proto.RequestProto$GetChangesRequest$Builder newBuilder()>();

        $r10 = virtualinvoke $r9.<androidx.health.platform.client.proto.RequestProto$GetChangesRequest$Builder: androidx.health.platform.client.proto.RequestProto$GetChangesRequest$Builder setChangesToken(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<androidx.health.platform.client.proto.RequestProto$GetChangesRequest$Builder: androidx.health.platform.client.proto.GeneratedMessageLite build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "newBuilder()\n           \u2026                 .build()");

        $r12 = (androidx.health.platform.client.proto.RequestProto$GetChangesRequest) $r11;

        $r13 = interfaceinvoke $r8.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture getChanges(androidx.health.platform.client.proto.RequestProto$GetChangesRequest)>($r12);

        $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: int label> = 1;

        r19 = (kotlin.coroutines.Continuation) $r15;

        $r16 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r13, r19);

        if $r16 != r5 goto label5;

        return r5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r16 = $r4;

     label5:
        r3 = (androidx.health.platform.client.proto.ResponseProto$GetChangesResponse) $r16;

        $r7 = staticinvoke <androidx.health.connect.client.impl.converters.response.ProtoToChangesResponseKt: androidx.health.connect.client.response.ChangesResponse toChangesResponse(androidx.health.platform.client.proto.ResponseProto$GetChangesResponse)>(r3);

        return $r7;

     label6:
        r18 = new java.lang.IllegalStateException;

        specialinvoke r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r18;
    }

    public java.lang.Object readRecords(androidx.health.connect.client.request.ReadRecordsRequest, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        androidx.health.connect.client.request.ReadRecordsRequest r1;
        kotlin.coroutines.Continuation r2, r16;
        androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse r3;
        java.lang.Object $r4, r5, $r13;
        boolean $z0;
        androidx.health.connect.client.response.ReadRecordsResponse $r7;
        androidx.health.platform.client.HealthDataAsyncClient $r8;
        androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest $r9;
        com.google.common.util.concurrent.ListenableFuture $r10;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1 $r12, r14;
        java.lang.IllegalStateException r15;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: androidx.health.connect.client.request.ReadRecordsRequest;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1;

        if $z0 == 0 goto label1;

        $r12 = (androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1) r2;

        $i0 = $r12.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r12.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: int label>;

        $i3 = $i2 - -2147483648;

        $r12.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: int label> = $i3;

        goto label2;

     label1:
        r14 = new androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1;

        specialinvoke r14.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r2);

        $r12 = r14;

     label2:
        $r4 = $r12.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r12.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r8 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r9 = staticinvoke <androidx.health.connect.client.impl.converters.request.ReadDataRangeRequestToProtoKt: androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest toReadDataRangeRequestProto(androidx.health.connect.client.request.ReadRecordsRequest)>(r1);

        $r10 = interfaceinvoke $r8.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture readDataRange(androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest)>($r9);

        $r12.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: int label> = 1;

        r16 = (kotlin.coroutines.Continuation) $r12;

        $r13 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r10, r16);

        if $r13 != r5 goto label5;

        return r5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r13 = $r4;

     label5:
        r3 = (androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse) $r13;

        $r7 = staticinvoke <androidx.health.connect.client.impl.converters.response.ProtoToReadRecordsResponseKt: androidx.health.connect.client.response.ReadRecordsResponse toReadRecordsResponse(androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse)>(r3);

        return $r7;

     label6:
        r15 = new java.lang.IllegalStateException;

        specialinvoke r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r15;
    }

    public java.lang.Object aggregate(androidx.health.connect.client.request.AggregateRequest, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        androidx.health.connect.client.request.AggregateRequest r1;
        kotlin.coroutines.Continuation r2, r19;
        androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse r3;
        java.lang.Object $r4, r5, $r8, $r16;
        boolean $z0;
        java.util.List $r7;
        androidx.health.platform.client.proto.DataProto$AggregateDataRow $r9;
        androidx.health.connect.client.aggregate.AggregationResult $r10;
        androidx.health.platform.client.HealthDataAsyncClient $r11;
        androidx.health.platform.client.proto.RequestProto$AggregateDataRequest $r12;
        com.google.common.util.concurrent.ListenableFuture $r13;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1 $r15, r17;
        java.lang.IllegalStateException r18;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: androidx.health.connect.client.request.AggregateRequest;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1;

        if $z0 == 0 goto label1;

        $r15 = (androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1) r2;

        $i0 = $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: int label>;

        $i3 = $i2 - -2147483648;

        $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: int label> = $i3;

        goto label2;

     label1:
        r17 = new androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1;

        specialinvoke r17.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r2);

        $r15 = r17;

     label2:
        $r4 = $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r11 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r12 = staticinvoke <androidx.health.connect.client.impl.converters.request.AggregateRequestToProtoKt: androidx.health.platform.client.proto.RequestProto$AggregateDataRequest toProto(androidx.health.connect.client.request.AggregateRequest)>(r1);

        $r13 = interfaceinvoke $r11.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture aggregate(androidx.health.platform.client.proto.RequestProto$AggregateDataRequest)>($r12);

        $r15.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: int label> = 1;

        r19 = (kotlin.coroutines.Continuation) $r15;

        $r16 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r13, r19);

        if $r16 != r5 goto label5;

        return r5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r16 = $r4;

     label5:
        r3 = (androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse) $r16;

        $r7 = virtualinvoke r3.<androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse: java.util.List getRowsList()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "responseProto.rowsList");

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "responseProto.rowsList.first()");

        $r9 = (androidx.health.platform.client.proto.DataProto$AggregateDataRow) $r8;

        $r10 = staticinvoke <androidx.health.connect.client.impl.converters.aggregate.ProtoToAggregateDataRowKt: androidx.health.connect.client.aggregate.AggregationResult retrieveAggregateDataRow(androidx.health.platform.client.proto.DataProto$AggregateDataRow)>($r9);

        return $r10;

     label6:
        r18 = new java.lang.IllegalStateException;

        specialinvoke r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r18;
    }

    public java.lang.Object aggregateGroupByDuration(androidx.health.connect.client.request.AggregateGroupByDurationRequest, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        androidx.health.connect.client.request.AggregateGroupByDurationRequest r1;
        kotlin.coroutines.Continuation r2, r28;
        androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse r3;
        java.util.Collection r4, r8;
        java.util.Iterator r5;
        java.lang.Object r6, $r9, r10, $r22;
        androidx.health.platform.client.proto.DataProto$AggregateDataRow r7;
        boolean $z3, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.List $r13, $r15, $r23;
        java.lang.Iterable $r14, $r24;
        androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration $r16;
        androidx.health.platform.client.HealthDataAsyncClient $r17;
        androidx.health.platform.client.proto.RequestProto$AggregateDataRequest $r18;
        com.google.common.util.concurrent.ListenableFuture $r19;
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1 $r21, r25;
        java.util.ArrayList r26;
        java.lang.IllegalStateException r27;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: androidx.health.connect.client.request.AggregateGroupByDurationRequest;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z3 = r2 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1;

        if $z3 == 0 goto label1;

        $r21 = (androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1) r2;

        $i1 = $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label1;

        $i3 = $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: int label>;

        $i4 = $i3 - -2147483648;

        $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: int label> = $i4;

        goto label2;

     label1:
        r25 = new androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1;

        specialinvoke r25.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r2);

        $r21 = r25;

     label2:
        $r9 = $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: java.lang.Object result>;

        r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label8;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r9);

        $r17 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r18 = staticinvoke <androidx.health.connect.client.impl.converters.request.AggregateRequestToProtoKt: androidx.health.platform.client.proto.RequestProto$AggregateDataRequest toProto(androidx.health.connect.client.request.AggregateGroupByDurationRequest)>(r1);

        $r19 = interfaceinvoke $r17.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture aggregate(androidx.health.platform.client.proto.RequestProto$AggregateDataRequest)>($r18);

        $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: int label> = 1;

        r28 = (kotlin.coroutines.Continuation) $r21;

        $r22 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r19, r28);

        if $r22 != r10 goto label5;

        return r10;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r9);

        $r22 = $r9;

     label5:
        r3 = (androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse) $r22;

        $r23 = virtualinvoke r3.<androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse: java.util.List getRowsList()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "responseProto.rowsList");

        $r24 = (java.lang.Iterable) $r23;

        r26 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r24, 10);

        specialinvoke r26.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) r26;

        r5 = interfaceinvoke $r24.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z5 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.health.platform.client.proto.DataProto$AggregateDataRow) r6;

        r8 = r4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "it");

        $r16 = staticinvoke <androidx.health.connect.client.impl.converters.aggregate.ProtoToAggregateDataRowKt: androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration toAggregateDataRowGroupByDuration(androidx.health.platform.client.proto.DataProto$AggregateDataRow)>(r7);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label6;

     label7:
        $r13 = (java.util.List) r4;

        $r14 = (java.lang.Iterable) $r13;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r14);

        return $r15;

     label8:
        r27 = new java.lang.IllegalStateException;

        specialinvoke r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r27;
    }

    public java.lang.Object aggregateGroupByPeriod(androidx.health.connect.client.request.AggregateGroupByPeriodRequest, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl r0;
        androidx.health.connect.client.request.AggregateGroupByPeriodRequest r1;
        kotlin.coroutines.Continuation r2, r28;
        androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse r3;
        java.util.Collection r4, r8;
        java.util.Iterator r5;
        java.lang.Object r6, $r9, r10, $r22;
        androidx.health.platform.client.proto.DataProto$AggregateDataRow r7;
        boolean $z3, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.List $r13, $r15, $r23;
        java.lang.Iterable $r14, $r24;
        androidx.health.connect.client.aggregate.AggregationResultGroupedByPeriod $r16;
        androidx.health.platform.client.HealthDataAsyncClient $r17;
        androidx.health.platform.client.proto.RequestProto$AggregateDataRequest $r18;
        com.google.common.util.concurrent.ListenableFuture $r19;
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1 $r21, r25;
        java.util.ArrayList r26;
        java.lang.IllegalStateException r27;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl;

        r1 := @parameter0: androidx.health.connect.client.request.AggregateGroupByPeriodRequest;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z3 = r2 instanceof androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1;

        if $z3 == 0 goto label1;

        $r21 = (androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1) r2;

        $i1 = $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label1;

        $i3 = $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: int label>;

        $i4 = $i3 - -2147483648;

        $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: int label> = $i4;

        goto label2;

     label1:
        r25 = new androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1;

        specialinvoke r25.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl,kotlin.coroutines.Continuation)>(r0, r2);

        $r21 = r25;

     label2:
        $r9 = $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: java.lang.Object result>;

        r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label8;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r9);

        $r17 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl: androidx.health.platform.client.HealthDataAsyncClient delegate>;

        $r18 = staticinvoke <androidx.health.connect.client.impl.converters.request.AggregateRequestToProtoKt: androidx.health.platform.client.proto.RequestProto$AggregateDataRequest toProto(androidx.health.connect.client.request.AggregateGroupByPeriodRequest)>(r1);

        $r19 = interfaceinvoke $r17.<androidx.health.platform.client.HealthDataAsyncClient: com.google.common.util.concurrent.ListenableFuture aggregate(androidx.health.platform.client.proto.RequestProto$AggregateDataRequest)>($r18);

        $r21.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: int label> = 1;

        r28 = (kotlin.coroutines.Continuation) $r21;

        $r22 = staticinvoke <kotlinx.coroutines.guava.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r19, r28);

        if $r22 != r10 goto label5;

        return r10;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r9);

        $r22 = $r9;

     label5:
        r3 = (androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse) $r22;

        $r23 = virtualinvoke r3.<androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse: java.util.List getRowsList()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "responseProto.rowsList");

        $r24 = (java.lang.Iterable) $r23;

        r26 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r24, 10);

        specialinvoke r26.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) r26;

        r5 = interfaceinvoke $r24.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z5 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.health.platform.client.proto.DataProto$AggregateDataRow) r6;

        r8 = r4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "it");

        $r16 = staticinvoke <androidx.health.connect.client.impl.converters.aggregate.ProtoToAggregateDataRowKt: androidx.health.connect.client.aggregate.AggregationResultGroupedByPeriod toAggregateDataRowGroupByPeriod(androidx.health.platform.client.proto.DataProto$AggregateDataRow)>(r7);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label6;

     label7:
        $r13 = (java.util.List) r4;

        $r14 = (java.lang.Iterable) $r13;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r14);

        return $r15;

     label8:
        r27 = new java.lang.IllegalStateException;

        specialinvoke r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r27;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregate$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object aggregate(androidx.health.connect.client.request.AggregateRequest,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByDuration$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object aggregateGroupByDuration(androidx.health.connect.client.request.AggregateGroupByDurationRequest,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$aggregateGroupByPeriod$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object aggregateGroupByPeriod(androidx.health.connect.client.request.AggregateGroupByPeriodRequest,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: java.lang.Object L$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: java.lang.Object L$1>
<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object deleteRecords(kotlin.reflect.KClass,java.util.List,java.util.List,kotlin.coroutines.Continuation)>(null, null, null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2
<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$deleteRecords$2: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object deleteRecords(kotlin.reflect.KClass,androidx.health.connect.client.time.TimeRangeFilter,kotlin.coroutines.Continuation)>(null, null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChanges$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object getChanges(java.lang.String,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getChangesToken$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object getChangesToken(androidx.health.connect.client.request.ChangesTokenRequest,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$getGrantedPermissions$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object getGrantedPermissions(java.util.Set,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$insertRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object insertRecords(java.util.List,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecord$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object readRecord(kotlin.reflect.KClass,java.lang.String,kotlin.coroutines.Continuation)>(null, null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$readRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object readRecords(androidx.health.connect.client.request.ReadRecordsRequest,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: java.lang.Object L$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$registerForDataNotifications$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object registerForDataNotifications(java.lang.String,java.lang.Iterable,kotlin.coroutines.Continuation)>(null, null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$revokeAllPermissions$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object revokeAllPermissions(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: java.lang.Object L$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$unregisterFromDataNotifications$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object unregisterFromDataNotifications(java.lang.String,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1
<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: java.lang.Object L$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: java.lang.Object result>
<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>
<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: int label>
    void <init>(androidx.health.connect.client.impl.HealthConnectClientImpl, kotlin.coroutines.Continuation)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1 r0;
        androidx.health.connect.client.impl.HealthConnectClientImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1;

        r1 := @parameter0: androidx.health.connect.client.impl.HealthConnectClientImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.health.connect.client.impl.HealthConnectClientImpl $r3;

        r0 := @this: androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: int label> = $i1;

        $r3 = r0.<androidx.health.connect.client.impl.HealthConnectClientImpl$updateRecords$1: androidx.health.connect.client.impl.HealthConnectClientImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.impl.HealthConnectClientImpl: java.lang.Object updateRecords(java.util.List,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

