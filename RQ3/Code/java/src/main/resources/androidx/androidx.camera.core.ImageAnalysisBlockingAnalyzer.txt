androidx.camera.core.ImageAnalysisBlockingAnalyzer
    void <init>()
    {
        androidx.camera.core.ImageAnalysisBlockingAnalyzer r0;

        r0 := @this: androidx.camera.core.ImageAnalysisBlockingAnalyzer;

        specialinvoke r0.<androidx.camera.core.ImageAnalysisAbstractAnalyzer: void <init>()>();

        return;
    }

    androidx.camera.core.ImageProxy acquireImage(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.ImageAnalysisBlockingAnalyzer r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        androidx.camera.core.ImageProxy $r2;

        r0 := @this: androidx.camera.core.ImageAnalysisBlockingAnalyzer;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        $r2 = interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy: androidx.camera.core.ImageProxy acquireNextImage()>();

        return $r2;
    }

    void onValidImageAvailable(androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.ImageAnalysisBlockingAnalyzer r0;
        androidx.camera.core.ImageProxy r1;
        com.google.common.util.concurrent.ListenableFuture r2;
        androidx.camera.core.ImageAnalysisBlockingAnalyzer$1 $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: androidx.camera.core.ImageAnalysisBlockingAnalyzer;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        r2 = virtualinvoke r0.<androidx.camera.core.ImageAnalysisBlockingAnalyzer: com.google.common.util.concurrent.ListenableFuture analyzeImage(androidx.camera.core.ImageProxy)>(r1);

        $r3 = new androidx.camera.core.ImageAnalysisBlockingAnalyzer$1;

        specialinvoke $r3.<androidx.camera.core.ImageAnalysisBlockingAnalyzer$1: void <init>(androidx.camera.core.ImageAnalysisBlockingAnalyzer,androidx.camera.core.ImageProxy)>(r0, r1);

        $r4 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>(r2, $r3, $r4);

        return;
    }

    void clearCache()
    {
        androidx.camera.core.ImageAnalysisBlockingAnalyzer r0;

        r0 := @this: androidx.camera.core.ImageAnalysisBlockingAnalyzer;

        return;
    }

androidx.camera.core.ImageAnalysisBlockingAnalyzer$1
<androidx.camera.core.ImageAnalysisBlockingAnalyzer$1: androidx.camera.core.ImageProxy val$imageProxy>
<androidx.camera.core.ImageAnalysisBlockingAnalyzer$1: androidx.camera.core.ImageAnalysisBlockingAnalyzer this$0>
    void <init>(androidx.camera.core.ImageAnalysisBlockingAnalyzer, androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.ImageAnalysisBlockingAnalyzer$1 r0;
        androidx.camera.core.ImageAnalysisBlockingAnalyzer r1;
        androidx.camera.core.ImageProxy r2;

        r0 := @this: androidx.camera.core.ImageAnalysisBlockingAnalyzer$1;

        r1 := @parameter0: androidx.camera.core.ImageAnalysisBlockingAnalyzer;

        r2 := @parameter1: androidx.camera.core.ImageProxy;

        r0.<androidx.camera.core.ImageAnalysisBlockingAnalyzer$1: androidx.camera.core.ImageAnalysisBlockingAnalyzer this$0> = r1;

        r0.<androidx.camera.core.ImageAnalysisBlockingAnalyzer$1: androidx.camera.core.ImageProxy val$imageProxy> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(java.lang.Void)
    {
        androidx.camera.core.ImageAnalysisBlockingAnalyzer$1 r0;
        java.lang.Void r1;

        r0 := @this: androidx.camera.core.ImageAnalysisBlockingAnalyzer$1;

        r1 := @parameter0: java.lang.Void;

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.camera.core.ImageAnalysisBlockingAnalyzer$1 r0;
        java.lang.Throwable r1;
        androidx.camera.core.ImageProxy $r2;

        r0 := @this: androidx.camera.core.ImageAnalysisBlockingAnalyzer$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.camera.core.ImageAnalysisBlockingAnalyzer$1: androidx.camera.core.ImageProxy val$imageProxy>;

        interfaceinvoke $r2.<androidx.camera.core.ImageProxy: void close()>();

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.camera.core.ImageAnalysisBlockingAnalyzer$1 r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: androidx.camera.core.ImageAnalysisBlockingAnalyzer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<androidx.camera.core.ImageAnalysisBlockingAnalyzer$1: void onSuccess(java.lang.Void)>($r2);

        return;
    }

