androidx.paging.PositionalDataSource
<androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource$Companion Companion>
<androidx.paging.PositionalDataSource: boolean isContiguous>
    public void <init>()
    {
        androidx.paging.PositionalDataSource r0;
        androidx.paging.DataSource$KeyType $r1;

        r0 := @this: androidx.paging.PositionalDataSource;

        $r1 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType POSITIONAL>;

        specialinvoke r0.<androidx.paging.DataSource: void <init>(androidx.paging.DataSource$KeyType)>($r1);

        return;
    }

    public final java.lang.Object load$paging_common(androidx.paging.DataSource$Params, kotlin.coroutines.Continuation)
    {
        androidx.paging.PositionalDataSource r0;
        androidx.paging.DataSource$Params r1;
        kotlin.coroutines.Continuation $r2;
        boolean z0, $z1, z2, z3, $z4, z5;
        androidx.paging.LoadType $r3, $r4, $r7, $r8;
        java.lang.Object $r5, $r10, $r11, $r12, $r16;
        java.lang.Number $r6, $r13;
        androidx.paging.PositionalDataSource$LoadRangeParams $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i13, i15, i17, $i18, i19, i20;
        byte b12, b14, b16;
        androidx.paging.PositionalDataSource$LoadInitialParams $r14, r15;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: androidx.paging.DataSource$Params;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r1.<androidx.paging.DataSource$Params: androidx.paging.LoadType getType$paging_common()>();

        $r4 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if $r3 != $r4 goto label3;

        i8 = 0;

        i9 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getInitialLoadSize()>();

        $r11 = virtualinvoke r1.<androidx.paging.DataSource$Params: java.lang.Object getKey()>();

        if $r11 == null goto label2;

        $r12 = virtualinvoke r1.<androidx.paging.DataSource$Params: java.lang.Object getKey()>();

        $r13 = (java.lang.Number) $r12;

        i10 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        $z1 = virtualinvoke r1.<androidx.paging.DataSource$Params: boolean getPlaceholdersEnabled()>();

        if $z1 == 0 goto label1;

        $i1 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getPageSize()>();

        i11 = i9 / $i1;

        b12 = 2;

        z2 = 0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i11, b12);

        $i3 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getPageSize()>();

        i9 = $i2 * $i3;

        $i4 = i9 / 2;

        i13 = i10 - $i4;

        b14 = 0;

        $i5 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getPageSize()>();

        $i6 = i13 / $i5;

        $i7 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getPageSize()>();

        i15 = $i6 * $i7;

        z0 = 0;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(b14, i15);

        goto label2;

     label1:
        b16 = 0;

        $i0 = i9 / 2;

        i17 = i10 - $i0;

        z3 = 0;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(b16, i17);

     label2:
        $r14 = new androidx.paging.PositionalDataSource$LoadInitialParams;

        $i18 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getPageSize()>();

        $z4 = virtualinvoke r1.<androidx.paging.DataSource$Params: boolean getPlaceholdersEnabled()>();

        specialinvoke $r14.<androidx.paging.PositionalDataSource$LoadInitialParams: void <init>(int,int,int,boolean)>(i8, i9, $i18, $z4);

        r15 = $r14;

        $r16 = virtualinvoke r0.<androidx.paging.PositionalDataSource: java.lang.Object loadInitial$paging_common(androidx.paging.PositionalDataSource$LoadInitialParams,kotlin.coroutines.Continuation)>(r15, $r2);

        return $r16;

     label3:
        $r5 = virtualinvoke r1.<androidx.paging.DataSource$Params: java.lang.Object getKey()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        i19 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        i20 = virtualinvoke r1.<androidx.paging.DataSource$Params: int getPageSize()>();

        $r7 = virtualinvoke r1.<androidx.paging.DataSource$Params: androidx.paging.LoadType getType$paging_common()>();

        $r8 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        if $r7 != $r8 goto label4;

        z5 = 0;

        i20 = staticinvoke <java.lang.Math: int min(int,int)>(i20, i19);

        i19 = i19 - i20;

     label4:
        $r9 = new androidx.paging.PositionalDataSource$LoadRangeParams;

        specialinvoke $r9.<androidx.paging.PositionalDataSource$LoadRangeParams: void <init>(int,int)>(i19, i20);

        $r10 = specialinvoke r0.<androidx.paging.PositionalDataSource: java.lang.Object loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,kotlin.coroutines.Continuation)>($r9, $r2);

        return $r10;
    }

    public final java.lang.Object loadInitial$paging_common(androidx.paging.PositionalDataSource$LoadInitialParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PositionalDataSource r0;
        androidx.paging.PositionalDataSource$LoadInitialParams r1;
        kotlin.coroutines.Continuation $r2, r3, $r7;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        androidx.paging.PositionalDataSource$loadInitial$2$1 $r8;
        androidx.paging.PositionalDataSource$LoadInitialCallback $r9;
        java.lang.Object $r10, $r11;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: androidx.paging.PositionalDataSource$LoadInitialParams;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = new androidx.paging.PositionalDataSource$loadInitial$2$1;

        specialinvoke $r8.<androidx.paging.PositionalDataSource$loadInitial$2$1: void <init>(androidx.paging.PositionalDataSource,kotlinx.coroutines.CancellableContinuation,androidx.paging.PositionalDataSource$LoadInitialParams)>(r0, r5, r1);

        $r9 = (androidx.paging.PositionalDataSource$LoadInitialCallback) $r8;

        virtualinvoke r0.<androidx.paging.PositionalDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>(r1, $r9);

        $r10 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r11 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r10 != $r11 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        return $r10;
    }

    private final java.lang.Object loadRange(androidx.paging.PositionalDataSource$LoadRangeParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PositionalDataSource r0;
        androidx.paging.PositionalDataSource$LoadRangeParams r1;
        kotlin.coroutines.Continuation $r2, r3, $r7;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        androidx.paging.PositionalDataSource$loadRange$2$1 $r8;
        androidx.paging.PositionalDataSource$LoadRangeCallback $r9;
        java.lang.Object $r10, $r11;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: androidx.paging.PositionalDataSource$LoadRangeParams;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = new androidx.paging.PositionalDataSource$loadRange$2$1;

        specialinvoke $r8.<androidx.paging.PositionalDataSource$loadRange$2$1: void <init>(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource,kotlinx.coroutines.CancellableContinuation)>(r1, r0, r5);

        $r9 = (androidx.paging.PositionalDataSource$LoadRangeCallback) $r8;

        virtualinvoke r0.<androidx.paging.PositionalDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>(r1, $r9);

        $r10 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r11 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r10 != $r11 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        return $r10;
    }

<androidx.paging.PositionalDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>
<androidx.paging.PositionalDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>
    public boolean isContiguous$paging_common()
    {
        androidx.paging.PositionalDataSource r0;
        boolean $z0;

        r0 := @this: androidx.paging.PositionalDataSource;

        $z0 = r0.<androidx.paging.PositionalDataSource: boolean isContiguous>;

        return $z0;
    }

    public static void isContiguous$paging_common$annotations()
    {
        return;
    }

    public final java.lang.Integer getKeyInternal$paging_common(java.lang.Object)
    {
        androidx.paging.PositionalDataSource r0;
        java.lang.Object r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "item");

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get key by item in positionalDataSource");

        throw $r2;
    }

    public final androidx.paging.PositionalDataSource mapByPage(androidx.arch.core.util.Function)
    {
        androidx.paging.PositionalDataSource r0, $r3;
        androidx.arch.core.util.Function r1;
        androidx.paging.WrapperPositionalDataSource $r2;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.WrapperPositionalDataSource;

        specialinvoke $r2.<androidx.paging.WrapperPositionalDataSource: void <init>(androidx.paging.PositionalDataSource,androidx.arch.core.util.Function)>(r0, r1);

        $r3 = (androidx.paging.PositionalDataSource) $r2;

        return $r3;
    }

    public final androidx.paging.PositionalDataSource mapByPage(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PositionalDataSource r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.PositionalDataSource$mapByPage$1 $r2;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.PositionalDataSource$mapByPage$1;

        specialinvoke $r2.<androidx.paging.PositionalDataSource$mapByPage$1: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public final androidx.paging.PositionalDataSource map(androidx.arch.core.util.Function)
    {
        androidx.paging.PositionalDataSource r0, $r4;
        androidx.arch.core.util.Function r1, $r3;
        androidx.paging.PositionalDataSource$map$1 $r2;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.PositionalDataSource$map$1;

        specialinvoke $r2.<androidx.paging.PositionalDataSource$map$1: void <init>(androidx.arch.core.util.Function)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public final androidx.paging.PositionalDataSource map(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PositionalDataSource r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.PositionalDataSource$map$2 $r2;
        androidx.arch.core.util.Function $r3;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "function");

        $r2 = new androidx.paging.PositionalDataSource$map$2;

        specialinvoke $r2.<androidx.paging.PositionalDataSource$map$2: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.arch.core.util.Function) $r2;

        $r4 = virtualinvoke r0.<androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource mapByPage(androidx.arch.core.util.Function)>($r3);

        return $r4;
    }

    public static final int computeInitialLoadPosition(androidx.paging.PositionalDataSource$LoadInitialParams, int)
    {
        androidx.paging.PositionalDataSource$LoadInitialParams r0;
        int i0, $i1;
        androidx.paging.PositionalDataSource$Companion $r1;

        r0 := @parameter0: androidx.paging.PositionalDataSource$LoadInitialParams;

        i0 := @parameter1: int;

        $r1 = <androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource$Companion Companion>;

        $i1 = virtualinvoke $r1.<androidx.paging.PositionalDataSource$Companion: int computeInitialLoadPosition(androidx.paging.PositionalDataSource$LoadInitialParams,int)>(r0, i0);

        return $i1;
    }

    public static final int computeInitialLoadSize(androidx.paging.PositionalDataSource$LoadInitialParams, int, int)
    {
        androidx.paging.PositionalDataSource$LoadInitialParams r0;
        int i0, i1, $i2;
        androidx.paging.PositionalDataSource$Companion $r1;

        r0 := @parameter0: androidx.paging.PositionalDataSource$LoadInitialParams;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = <androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource$Companion Companion>;

        $i2 = virtualinvoke $r1.<androidx.paging.PositionalDataSource$Companion: int computeInitialLoadSize(androidx.paging.PositionalDataSource$LoadInitialParams,int,int)>(r0, i0, i1);

        return $i2;
    }

    public volatile java.lang.Object getKeyInternal$paging_common(java.lang.Object)
    {
        androidx.paging.PositionalDataSource r0;
        java.lang.Object r1;
        java.lang.Integer $r2;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.paging.PositionalDataSource: java.lang.Integer getKeyInternal$paging_common(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile androidx.paging.DataSource mapByPage(androidx.arch.core.util.Function)
    {
        androidx.paging.PositionalDataSource r0, $r2;
        androidx.arch.core.util.Function r1;
        androidx.paging.DataSource $r3;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        $r2 = virtualinvoke r0.<androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource mapByPage(androidx.arch.core.util.Function)>(r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public volatile androidx.paging.DataSource mapByPage(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PositionalDataSource r0, $r2;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.DataSource $r3;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 = virtualinvoke r0.<androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource mapByPage(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public volatile androidx.paging.DataSource map(androidx.arch.core.util.Function)
    {
        androidx.paging.PositionalDataSource r0, $r2;
        androidx.arch.core.util.Function r1;
        androidx.paging.DataSource $r3;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: androidx.arch.core.util.Function;

        $r2 = virtualinvoke r0.<androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource map(androidx.arch.core.util.Function)>(r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public volatile androidx.paging.DataSource map(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PositionalDataSource r0, $r2;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.DataSource $r3;

        r0 := @this: androidx.paging.PositionalDataSource;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 = virtualinvoke r0.<androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource map(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (androidx.paging.DataSource) $r2;

        return $r3;
    }

    public static final java.lang.Object access$loadRange(androidx.paging.PositionalDataSource, androidx.paging.PositionalDataSource$LoadRangeParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.PositionalDataSource $r0;
        androidx.paging.PositionalDataSource$LoadRangeParams r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.paging.PositionalDataSource;

        r1 := @parameter1: androidx.paging.PositionalDataSource$LoadRangeParams;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = specialinvoke $r0.<androidx.paging.PositionalDataSource: java.lang.Object loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,kotlin.coroutines.Continuation)>(r1, $r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.paging.PositionalDataSource$Companion $r0;

        $r0 = new androidx.paging.PositionalDataSource$Companion;

        specialinvoke $r0.<androidx.paging.PositionalDataSource$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.PositionalDataSource: androidx.paging.PositionalDataSource$Companion Companion> = $r0;

        return;
    }

androidx.paging.PositionalDataSource$Companion
    private void <init>()
    {
        androidx.paging.PositionalDataSource$Companion r0;

        r0 := @this: androidx.paging.PositionalDataSource$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int computeInitialLoadPosition(androidx.paging.PositionalDataSource$LoadInitialParams, int)
    {
        androidx.paging.PositionalDataSource$Companion r0;
        androidx.paging.PositionalDataSource$LoadInitialParams r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i13;
        boolean z0, z1;
        byte b12;

        r0 := @this: androidx.paging.PositionalDataSource$Companion;

        r1 := @parameter0: androidx.paging.PositionalDataSource$LoadInitialParams;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "params");

        i1 = r1.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedStartPosition>;

        i2 = r1.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedLoadSize>;

        i3 = r1.<androidx.paging.PositionalDataSource$LoadInitialParams: int pageSize>;

        $i5 = i1 / i3;

        i10 = $i5 * i3;

        $i6 = i0 - i2;

        $i7 = $i6 + i3;

        $i8 = $i7 - 1;

        $i9 = $i8 / i3;

        i4 = $i9 * i3;

        z1 = 0;

        i11 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i10);

        b12 = 0;

        z0 = 0;

        i13 = staticinvoke <java.lang.Math: int max(int,int)>(b12, i11);

        return i13;
    }

    public final int computeInitialLoadSize(androidx.paging.PositionalDataSource$LoadInitialParams, int, int)
    {
        androidx.paging.PositionalDataSource$Companion r0;
        androidx.paging.PositionalDataSource$LoadInitialParams r1;
        int i0, i1, i2, i3, $i4;
        boolean z0;

        r0 := @this: androidx.paging.PositionalDataSource$Companion;

        r1 := @parameter0: androidx.paging.PositionalDataSource$LoadInitialParams;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "params");

        i2 = i1 - i0;

        i3 = r1.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedLoadSize>;

        z0 = 0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i3);

        return $i4;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PositionalDataSource$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.PositionalDataSource$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.PositionalDataSource$Companion: void <init>()>();

        return;
    }

androidx.paging.PositionalDataSource$loadInitial$2$1
<androidx.paging.PositionalDataSource$loadInitial$2$1: androidx.paging.PositionalDataSource this$0>
<androidx.paging.PositionalDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont>
<androidx.paging.PositionalDataSource$loadInitial$2$1: androidx.paging.PositionalDataSource$LoadInitialParams $params>
    void <init>(androidx.paging.PositionalDataSource, kotlinx.coroutines.CancellableContinuation, androidx.paging.PositionalDataSource$LoadInitialParams)
    {
        androidx.paging.PositionalDataSource$loadInitial$2$1 r0;
        androidx.paging.PositionalDataSource $r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        androidx.paging.PositionalDataSource$LoadInitialParams $r3;

        r0 := @this: androidx.paging.PositionalDataSource$loadInitial$2$1;

        $r1 := @parameter0: androidx.paging.PositionalDataSource;

        $r2 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        $r3 := @parameter2: androidx.paging.PositionalDataSource$LoadInitialParams;

        r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: androidx.paging.PositionalDataSource this$0> = $r1;

        r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont> = $r2;

        r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: androidx.paging.PositionalDataSource$LoadInitialParams $params> = $r3;

        specialinvoke r0.<androidx.paging.PositionalDataSource$LoadInitialCallback: void <init>()>();

        return;
    }

    public void onResult(java.util.List, int, int)
    {
        androidx.paging.PositionalDataSource$loadInitial$2$1 r0;
        java.util.List r1;
        int i0, i1, $i2, i3, $i4, $i5, $i6;
        androidx.paging.DataSource$BaseResult r2, $r11;
        kotlin.Result$Companion r3;
        androidx.paging.PositionalDataSource $r4;
        boolean $z0;
        kotlinx.coroutines.CancellableContinuation $r5;
        androidx.paging.DataSource$BaseResult$Companion $r6;
        java.lang.Object $r7;
        kotlin.coroutines.Continuation r8;
        androidx.paging.PositionalDataSource$LoadInitialParams $r10;
        java.lang.Integer $r13, $r14;

        r0 := @this: androidx.paging.PositionalDataSource$loadInitial$2$1;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r4 = r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: androidx.paging.PositionalDataSource this$0>;

        $z0 = virtualinvoke $r4.<androidx.paging.PositionalDataSource: boolean isInvalid()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont>;

        r8 = (kotlin.coroutines.Continuation) $r5;

        $r6 = <androidx.paging.DataSource$BaseResult: androidx.paging.DataSource$BaseResult$Companion Companion>;

        r2 = virtualinvoke $r6.<androidx.paging.DataSource$BaseResult$Companion: androidx.paging.DataSource$BaseResult empty$paging_common()>();

        r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r7 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r2);

        interfaceinvoke r8.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r7);

        goto label6;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = i0 + $i2;

        $r10 = r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: androidx.paging.PositionalDataSource$LoadInitialParams $params>;

        $r11 = new androidx.paging.DataSource$BaseResult;

        if i0 != 0 goto label2;

        $r13 = null;

        goto label3;

     label2:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

     label3:
        if i3 != i1 goto label4;

        $r14 = null;

        goto label5;

     label4:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

     label5:
        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        $i5 = i1 - $i4;

        $i6 = $i5 - i0;

        specialinvoke $r11.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r1, $r13, $r14, i0, $i6);

        specialinvoke r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: void resume(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.DataSource$BaseResult)>($r10, $r11);

     label6:
        return;
    }

    public void onResult(java.util.List, int)
    {
        androidx.paging.PositionalDataSource$loadInitial$2$1 r0;
        java.util.List r1;
        int i0, $i1, $i2;
        kotlin.coroutines.Continuation r2;
        androidx.paging.DataSource$BaseResult r3, $r6;
        boolean z0, z1, $z2;
        kotlin.Result$Companion r4;
        androidx.paging.PositionalDataSource $r5;
        androidx.paging.PositionalDataSource$LoadInitialParams $r7;
        java.lang.Integer $r8, $r14;
        kotlinx.coroutines.CancellableContinuation $r11;
        androidx.paging.DataSource$BaseResult$Companion $r12;
        java.lang.Object $r13;

        r0 := @this: androidx.paging.PositionalDataSource$loadInitial$2$1;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r5 = r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: androidx.paging.PositionalDataSource this$0>;

        $z2 = virtualinvoke $r5.<androidx.paging.PositionalDataSource: boolean isInvalid()>();

        if $z2 == 0 goto label1;

        $r11 = r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont>;

        r2 = (kotlin.coroutines.Continuation) $r11;

        $r12 = <androidx.paging.DataSource$BaseResult: androidx.paging.DataSource$BaseResult$Companion Companion>;

        r3 = virtualinvoke $r12.<androidx.paging.DataSource$BaseResult$Companion: androidx.paging.DataSource$BaseResult empty$paging_common()>();

        z0 = 0;

        r4 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z1 = 0;

        $r13 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r3);

        interfaceinvoke r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r13);

        goto label4;

     label1:
        $r7 = r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: androidx.paging.PositionalDataSource$LoadInitialParams $params>;

        $r6 = new androidx.paging.DataSource$BaseResult;

        if i0 != 0 goto label2;

        $r14 = null;

        goto label3;

     label2:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

     label3:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = i0 + $i1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        specialinvoke $r6.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r1, $r14, $r8, i0, -2147483648);

        specialinvoke r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: void resume(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.DataSource$BaseResult)>($r7, $r6);

     label4:
        return;
    }

    private final void resume(androidx.paging.PositionalDataSource$LoadInitialParams, androidx.paging.DataSource$BaseResult)
    {
        androidx.paging.PositionalDataSource$loadInitial$2$1 r0;
        androidx.paging.PositionalDataSource$LoadInitialParams r1;
        androidx.paging.DataSource$BaseResult r2;
        kotlin.coroutines.Continuation r3;
        boolean z0, z1, $z2;
        kotlin.Result$Companion r4;
        kotlinx.coroutines.CancellableContinuation $r5;
        java.lang.Object $r6;
        int $i0;

        r0 := @this: androidx.paging.PositionalDataSource$loadInitial$2$1;

        r1 := @parameter0: androidx.paging.PositionalDataSource$LoadInitialParams;

        r2 := @parameter1: androidx.paging.DataSource$BaseResult;

        $z2 = r1.<androidx.paging.PositionalDataSource$LoadInitialParams: boolean placeholdersEnabled>;

        if $z2 == 0 goto label1;

        $i0 = r1.<androidx.paging.PositionalDataSource$LoadInitialParams: int pageSize>;

        virtualinvoke r2.<androidx.paging.DataSource$BaseResult: void validateForInitialTiling$paging_common(int)>($i0);

     label1:
        $r5 = r0.<androidx.paging.PositionalDataSource$loadInitial$2$1: kotlinx.coroutines.CancellableContinuation $cont>;

        r3 = (kotlin.coroutines.Continuation) $r5;

        z0 = 0;

        r4 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z1 = 0;

        $r6 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r2);

        interfaceinvoke r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r6);

        return;
    }

androidx.paging.PositionalDataSource$LoadInitialCallback
    public void <init>()
    {
        androidx.paging.PositionalDataSource$LoadInitialCallback r0;

        r0 := @this: androidx.paging.PositionalDataSource$LoadInitialCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.paging.PositionalDataSource$LoadInitialCallback: void onResult(java.util.List,int,int)>
<androidx.paging.PositionalDataSource$LoadInitialCallback: void onResult(java.util.List,int)>
androidx.paging.PositionalDataSource$LoadInitialParams
<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedStartPosition>
<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedLoadSize>
<androidx.paging.PositionalDataSource$LoadInitialParams: int pageSize>
<androidx.paging.PositionalDataSource$LoadInitialParams: boolean placeholdersEnabled>
    public void <init>(int, int, int, boolean)
    {
        androidx.paging.PositionalDataSource$LoadInitialParams r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, $z1, z2, z3, z4, $z6, z7, z8, z9, $z11, z12, z13, z14;
        java.lang.Integer $r1, $r5, $r9;
        java.lang.IllegalStateException $r2, $r6, $r10;
        java.lang.String $r3, $r7, $r11, r13, r14, r15;
        java.lang.Throwable $r4, $r8, $r12;

        r0 := @this: androidx.paging.PositionalDataSource$LoadInitialParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedStartPosition> = i0;

        r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedLoadSize> = i1;

        r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int pageSize> = i2;

        r0.<androidx.paging.PositionalDataSource$LoadInitialParams: boolean placeholdersEnabled> = z0;

        $i3 = r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedStartPosition>;

        if $i3 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        z3 = 0;

        z4 = 0;

        if z2 != 0 goto label3;

        $i8 = r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedStartPosition>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        r13 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("invalid start position: ", $r9);

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        $r12 = (java.lang.Throwable) $r10;

        throw $r12;

     label3:
        $i4 = r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedLoadSize>;

        if $i4 < 0 goto label4;

        $z6 = 1;

        goto label5;

     label4:
        $z6 = 0;

     label5:
        z7 = $z6;

        z8 = 0;

        z9 = 0;

        if z7 != 0 goto label6;

        $i7 = r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int requestedLoadSize>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        r14 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("invalid load size: ", $r5);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        $r8 = (java.lang.Throwable) $r6;

        throw $r8;

     label6:
        $i5 = r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int pageSize>;

        if $i5 < 0 goto label7;

        $z11 = 1;

        goto label8;

     label7:
        $z11 = 0;

     label8:
        z12 = $z11;

        z13 = 0;

        z14 = 0;

        if z12 != 0 goto label9;

        $i6 = r0.<androidx.paging.PositionalDataSource$LoadInitialParams: int pageSize>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        r15 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("invalid page size: ", $r1);

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label9:
        return;
    }

androidx.paging.PositionalDataSource$loadRange$2$1
<androidx.paging.PositionalDataSource$loadRange$2$1: androidx.paging.PositionalDataSource$LoadRangeParams $params>
<androidx.paging.PositionalDataSource$loadRange$2$1: androidx.paging.PositionalDataSource this$0>
<androidx.paging.PositionalDataSource$loadRange$2$1: kotlinx.coroutines.CancellableContinuation $cont>
    void <init>(androidx.paging.PositionalDataSource$LoadRangeParams, androidx.paging.PositionalDataSource, kotlinx.coroutines.CancellableContinuation)
    {
        androidx.paging.PositionalDataSource$loadRange$2$1 r0;
        androidx.paging.PositionalDataSource$LoadRangeParams $r1;
        androidx.paging.PositionalDataSource $r2;
        kotlinx.coroutines.CancellableContinuation $r3;

        r0 := @this: androidx.paging.PositionalDataSource$loadRange$2$1;

        $r1 := @parameter0: androidx.paging.PositionalDataSource$LoadRangeParams;

        $r2 := @parameter1: androidx.paging.PositionalDataSource;

        $r3 := @parameter2: kotlinx.coroutines.CancellableContinuation;

        r0.<androidx.paging.PositionalDataSource$loadRange$2$1: androidx.paging.PositionalDataSource$LoadRangeParams $params> = $r1;

        r0.<androidx.paging.PositionalDataSource$loadRange$2$1: androidx.paging.PositionalDataSource this$0> = $r2;

        r0.<androidx.paging.PositionalDataSource$loadRange$2$1: kotlinx.coroutines.CancellableContinuation $cont> = $r3;

        specialinvoke r0.<androidx.paging.PositionalDataSource$LoadRangeCallback: void <init>()>();

        return;
    }

    public void onResult(java.util.List)
    {
        androidx.paging.PositionalDataSource$loadRange$2$1 r0;
        java.util.List r1;
        java.lang.Integer r2, $r9, $r14;
        androidx.paging.PositionalDataSource$LoadRangeParams $r3, $r4, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.paging.PositionalDataSource $r5;
        boolean $z0, z1, z2, z3, z4;
        kotlinx.coroutines.CancellableContinuation $r6, $r11;
        androidx.paging.DataSource$BaseResult $r7, r16, r19;
        java.lang.Object $r10, $r13;
        androidx.paging.DataSource$BaseResult$Companion $r12;
        kotlin.coroutines.Continuation r15, r18;
        kotlin.Result$Companion r17, r20;

        r0 := @this: androidx.paging.PositionalDataSource$loadRange$2$1;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r3 = r0.<androidx.paging.PositionalDataSource$loadRange$2$1: androidx.paging.PositionalDataSource$LoadRangeParams $params>;

        $i0 = $r3.<androidx.paging.PositionalDataSource$LoadRangeParams: int startPosition>;

        if $i0 != 0 goto label1;

        $r14 = null;

        goto label2;

     label1:
        $r4 = r0.<androidx.paging.PositionalDataSource$loadRange$2$1: androidx.paging.PositionalDataSource$LoadRangeParams $params>;

        $i1 = $r4.<androidx.paging.PositionalDataSource$LoadRangeParams: int startPosition>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label2:
        r2 = $r14;

        $r5 = r0.<androidx.paging.PositionalDataSource$loadRange$2$1: androidx.paging.PositionalDataSource this$0>;

        $z0 = virtualinvoke $r5.<androidx.paging.PositionalDataSource: boolean isInvalid()>();

        if $z0 == 0 goto label3;

        $r11 = r0.<androidx.paging.PositionalDataSource$loadRange$2$1: kotlinx.coroutines.CancellableContinuation $cont>;

        r15 = (kotlin.coroutines.Continuation) $r11;

        $r12 = <androidx.paging.DataSource$BaseResult: androidx.paging.DataSource$BaseResult$Companion Companion>;

        r16 = virtualinvoke $r12.<androidx.paging.DataSource$BaseResult$Companion: androidx.paging.DataSource$BaseResult empty$paging_common()>();

        z1 = 0;

        r17 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z2 = 0;

        $r13 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r16);

        interfaceinvoke r15.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r13);

        goto label4;

     label3:
        $r6 = r0.<androidx.paging.PositionalDataSource$loadRange$2$1: kotlinx.coroutines.CancellableContinuation $cont>;

        r18 = (kotlin.coroutines.Continuation) $r6;

        $r7 = new androidx.paging.DataSource$BaseResult;

        $r8 = r0.<androidx.paging.PositionalDataSource$loadRange$2$1: androidx.paging.PositionalDataSource$LoadRangeParams $params>;

        $i2 = $r8.<androidx.paging.PositionalDataSource$LoadRangeParams: int startPosition>;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        $i4 = $i2 + $i3;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        specialinvoke $r7.<androidx.paging.DataSource$BaseResult: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, $r9, 0, 0, 24, null);

        r19 = $r7;

        z3 = 0;

        r20 = <kotlin.Result: kotlin.Result$Companion Companion>;

        z4 = 0;

        $r10 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r19);

        interfaceinvoke r18.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r10);

     label4:
        return;
    }

androidx.paging.PositionalDataSource$LoadRangeCallback
    public void <init>()
    {
        androidx.paging.PositionalDataSource$LoadRangeCallback r0;

        r0 := @this: androidx.paging.PositionalDataSource$LoadRangeCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.paging.PositionalDataSource$LoadRangeCallback: void onResult(java.util.List)>
androidx.paging.PositionalDataSource$LoadRangeParams
<androidx.paging.PositionalDataSource$LoadRangeParams: int startPosition>
<androidx.paging.PositionalDataSource$LoadRangeParams: int loadSize>
    public void <init>(int, int)
    {
        androidx.paging.PositionalDataSource$LoadRangeParams r0;
        int i0, i1;

        r0 := @this: androidx.paging.PositionalDataSource$LoadRangeParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PositionalDataSource$LoadRangeParams: int startPosition> = i0;

        r0.<androidx.paging.PositionalDataSource$LoadRangeParams: int loadSize> = i1;

        return;
    }

androidx.paging.PositionalDataSource$map$1
<androidx.paging.PositionalDataSource$map$1: androidx.arch.core.util.Function $function>
    void <init>(androidx.arch.core.util.Function)
    {
        androidx.paging.PositionalDataSource$map$1 r0;
        androidx.arch.core.util.Function $r1;

        r0 := @this: androidx.paging.PositionalDataSource$map$1;

        $r1 := @parameter0: androidx.arch.core.util.Function;

        r0.<androidx.paging.PositionalDataSource$map$1: androidx.arch.core.util.Function $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.PositionalDataSource$map$1 r0;
        java.util.List r1, $r11;
        java.lang.Iterable $r2;
        androidx.arch.core.util.Function r3;
        java.util.Collection r4, r8;
        java.util.Iterator r5;
        java.lang.Object r6, r7, r9;
        java.util.ArrayList $r10;
        int $i0;
        boolean $z3;

        r0 := @this: androidx.paging.PositionalDataSource$map$1;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "list");

        $r2 = (java.lang.Iterable) r1;

        r3 = r0.<androidx.paging.PositionalDataSource$map$1: androidx.arch.core.util.Function $function>;

        $r10 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r10;

        r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = r6;

        r8 = r4;

        r9 = interfaceinvoke r3.<androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)>(r7);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r9);

        goto label1;

     label2:
        $r11 = (java.util.List) r4;

        return $r11;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.PositionalDataSource$map$1 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.PositionalDataSource$map$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.PositionalDataSource$map$1: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.PositionalDataSource$map$2
<androidx.paging.PositionalDataSource$map$2: kotlin.jvm.functions.Function1 $function>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PositionalDataSource$map$2 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.paging.PositionalDataSource$map$2;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.paging.PositionalDataSource$map$2: kotlin.jvm.functions.Function1 $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.PositionalDataSource$map$2 r0;
        java.util.List r1, $r8;
        java.lang.Iterable $r2;
        kotlin.jvm.functions.Function1 r3;
        java.util.Collection r4;
        java.util.Iterator r5;
        java.lang.Object r6, $r9;
        java.util.ArrayList $r7;
        int $i0;
        boolean $z2;

        r0 := @this: androidx.paging.PositionalDataSource$map$2;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "list");

        $r2 = (java.lang.Iterable) r1;

        r3 = r0.<androidx.paging.PositionalDataSource$map$2: kotlin.jvm.functions.Function1 $function>;

        $r7 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r7;

        r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r9 = interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $r8 = (java.util.List) r4;

        return $r8;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.PositionalDataSource$map$2 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.PositionalDataSource$map$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.PositionalDataSource$map$2: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

androidx.paging.PositionalDataSource$mapByPage$1
<androidx.paging.PositionalDataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PositionalDataSource$mapByPage$1 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.paging.PositionalDataSource$mapByPage$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.paging.PositionalDataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List apply(java.util.List)
    {
        androidx.paging.PositionalDataSource$mapByPage$1 r0;
        java.util.List r1, $r4;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.paging.PositionalDataSource$mapByPage$1;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.paging.PositionalDataSource$mapByPage$1: kotlin.jvm.functions.Function1 $function>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.paging.PositionalDataSource$mapByPage$1 r0;
        java.lang.Object r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.paging.PositionalDataSource$mapByPage$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.paging.PositionalDataSource$mapByPage$1: java.util.List apply(java.util.List)>($r2);

        return $r3;
    }

