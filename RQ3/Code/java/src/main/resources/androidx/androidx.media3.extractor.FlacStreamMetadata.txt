androidx.media3.extractor.FlacStreamMetadata
<androidx.media3.extractor.FlacStreamMetadata: java.lang.String TAG>
<androidx.media3.extractor.FlacStreamMetadata: int NOT_IN_LOOKUP_TABLE>
<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples>
<androidx.media3.extractor.FlacStreamMetadata: int maxBlockSizeSamples>
<androidx.media3.extractor.FlacStreamMetadata: int minFrameSize>
<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize>
<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>
<androidx.media3.extractor.FlacStreamMetadata: int sampleRateLookupKey>
<androidx.media3.extractor.FlacStreamMetadata: int channels>
<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample>
<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSampleLookupKey>
<androidx.media3.extractor.FlacStreamMetadata: long totalSamples>
<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.extractor.FlacStreamMetadata$SeekTable seekTable>
<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata metadata>
    public void <init>(byte[], int)
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        byte[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        androidx.media3.common.util.ParsableBitArray r2, $r3;
        long $l15;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.media3.common.util.ParsableBitArray;

        specialinvoke $r3.<androidx.media3.common.util.ParsableBitArray: void <init>(byte[])>(r1);

        r2 = $r3;

        $i1 = i0 * 8;

        virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: void setPosition(int)>($i1);

        $i2 = virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(16);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples> = $i2;

        $i3 = virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(16);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int maxBlockSizeSamples> = $i3;

        $i4 = virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(24);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int minFrameSize> = $i4;

        $i5 = virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(24);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize> = $i5;

        $i6 = virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(20);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate> = $i6;

        $i7 = r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>;

        $i8 = staticinvoke <androidx.media3.extractor.FlacStreamMetadata: int getSampleRateLookupKey(int)>($i7);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRateLookupKey> = $i8;

        $i9 = virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(3);

        $i10 = $i9 + 1;

        r0.<androidx.media3.extractor.FlacStreamMetadata: int channels> = $i10;

        $i11 = virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(5);

        $i12 = $i11 + 1;

        r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample> = $i12;

        $i13 = r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample>;

        $i14 = staticinvoke <androidx.media3.extractor.FlacStreamMetadata: int getBitsPerSampleLookupKey(int)>($i13);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSampleLookupKey> = $i14;

        $l15 = virtualinvoke r2.<androidx.media3.common.util.ParsableBitArray: long readBitsToLong(int)>(36);

        r0.<androidx.media3.extractor.FlacStreamMetadata: long totalSamples> = $l15;

        r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.extractor.FlacStreamMetadata$SeekTable seekTable> = null;

        r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata metadata> = null;

        return;
    }

    public void <init>(int, int, int, int, int, int, int, long, java.util.ArrayList, java.util.ArrayList)
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        int i0, i1, i2, i3, i4, i5, i6;
        long l7;
        java.util.ArrayList r1, r2;
        androidx.media3.common.Metadata $r3;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        l7 := @parameter7: long;

        r1 := @parameter8: java.util.ArrayList;

        r2 := @parameter9: java.util.ArrayList;

        $r3 = staticinvoke <androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata concatenateVorbisMetadata(java.util.List,java.util.List)>(r1, r2);

        specialinvoke r0.<androidx.media3.extractor.FlacStreamMetadata: void <init>(int,int,int,int,int,int,int,long,androidx.media3.extractor.FlacStreamMetadata$SeekTable,androidx.media3.common.Metadata)>(i0, i1, i2, i3, i4, i5, i6, l7, null, $r3);

        return;
    }

    private void <init>(int, int, int, int, int, int, int, long, androidx.media3.extractor.FlacStreamMetadata$SeekTable, androidx.media3.common.Metadata)
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9;
        long l7;
        androidx.media3.extractor.FlacStreamMetadata$SeekTable r1;
        androidx.media3.common.Metadata r2;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        l7 := @parameter7: long;

        r1 := @parameter8: androidx.media3.extractor.FlacStreamMetadata$SeekTable;

        r2 := @parameter9: androidx.media3.common.Metadata;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples> = i0;

        r0.<androidx.media3.extractor.FlacStreamMetadata: int maxBlockSizeSamples> = i1;

        r0.<androidx.media3.extractor.FlacStreamMetadata: int minFrameSize> = i2;

        r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize> = i3;

        r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate> = i4;

        $i8 = staticinvoke <androidx.media3.extractor.FlacStreamMetadata: int getSampleRateLookupKey(int)>(i4);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRateLookupKey> = $i8;

        r0.<androidx.media3.extractor.FlacStreamMetadata: int channels> = i5;

        r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample> = i6;

        $i9 = staticinvoke <androidx.media3.extractor.FlacStreamMetadata: int getBitsPerSampleLookupKey(int)>(i6);

        r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSampleLookupKey> = $i9;

        r0.<androidx.media3.extractor.FlacStreamMetadata: long totalSamples> = l7;

        r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.extractor.FlacStreamMetadata$SeekTable seekTable> = r1;

        r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata metadata> = r2;

        return;
    }

    public int getMaxDecodedFrameSize()
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        $i1 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxBlockSizeSamples>;

        $i0 = r0.<androidx.media3.extractor.FlacStreamMetadata: int channels>;

        $i4 = $i1 * $i0;

        $i2 = r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample>;

        $i3 = $i2 / 8;

        $i5 = $i4 * $i3;

        return $i5;
    }

    public int getDecodedBitrate()
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        $i1 = r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample>;

        $i0 = r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>;

        $i3 = $i1 * $i0;

        $i2 = r0.<androidx.media3.extractor.FlacStreamMetadata: int channels>;

        $i4 = $i3 * $i2;

        return $i4;
    }

    public long getDurationUs()
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        long $l0, $l2, $l4, $l5, $l6;
        byte $b1;
        int $i3;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        $l0 = r0.<androidx.media3.extractor.FlacStreamMetadata: long totalSamples>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l6 = -9223372036854775807L;

        goto label2;

     label1:
        $l2 = r0.<androidx.media3.extractor.FlacStreamMetadata: long totalSamples>;

        $l5 = $l2 * 1000000L;

        $i3 = r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>;

        $l4 = (long) $i3;

        $l6 = $l5 / $l4;

     label2:
        return $l6;
    }

    public long getSampleNumber(long)
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        long l0, l1, $l3, $l4, $l5, $l6, $l7;
        int $i2;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        l0 := @parameter0: long;

        $i2 = r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>;

        $l3 = (long) $i2;

        $l4 = l0 * $l3;

        l1 = $l4 / 1000000L;

        $l5 = r0.<androidx.media3.extractor.FlacStreamMetadata: long totalSamples>;

        $l6 = $l5 - 1L;

        $l7 = staticinvoke <androidx.media3.common.util.Util: long constrainValue(long,long,long)>(l1, 0L, $l6);

        return $l7;
    }

    public long getApproxBytesPerFrame()
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        long l0, $l8, $l9, $l10, $l11, l12, $l13, $l15, $l16, $l18, $l19, $l20;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i14, $i17;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        $i1 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize>;

        if $i1 <= 0 goto label1;

        $i6 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize>;

        $l9 = (long) $i6;

        $i7 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minFrameSize>;

        $l8 = (long) $i7;

        $l10 = $l9 + $l8;

        $l11 = $l10 / 2L;

        l12 = $l11 + 1L;

        goto label4;

     label1:
        $i3 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples>;

        $i2 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxBlockSizeSamples>;

        if $i3 != $i2 goto label2;

        $i4 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples>;

        if $i4 <= 0 goto label2;

        $i5 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples>;

        $l13 = (long) $i5;

        goto label3;

     label2:
        $l13 = 4096L;

     label3:
        l0 = $l13;

        $i14 = r0.<androidx.media3.extractor.FlacStreamMetadata: int channels>;

        $l15 = (long) $i14;

        $l16 = l0 * $l15;

        $i17 = r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample>;

        $l18 = (long) $i17;

        $l19 = $l16 * $l18;

        $l20 = $l19 / 8L;

        l12 = $l20 + 64L;

     label4:
        return l12;
    }

    public androidx.media3.common.Format getFormat(byte[], androidx.media3.common.Metadata)
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        byte[] r1;
        androidx.media3.common.Metadata r2, r3;
        int i0, $i1, $i2, $i3, $i4;
        androidx.media3.common.Format$Builder $r4, $r5, $r6, $r7, $r8, $r10, $r11;
        java.util.List $r9;
        androidx.media3.common.Format $r12;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        r1 := @parameter0: byte[];

        r2 := @parameter1: androidx.media3.common.Metadata;

        r1[4] = -128;

        $i1 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize>;

        if $i1 <= 0 goto label1;

        $i4 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize>;

        goto label2;

     label1:
        $i4 = -1;

     label2:
        i0 = $i4;

        r3 = virtualinvoke r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata getMetadataCopyWithAppendedEntriesFrom(androidx.media3.common.Metadata)>(r2);

        $r4 = new androidx.media3.common.Format$Builder;

        specialinvoke $r4.<androidx.media3.common.Format$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("audio/flac");

        $r6 = virtualinvoke $r5.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMaxInputSize(int)>(i0);

        $i2 = r0.<androidx.media3.extractor.FlacStreamMetadata: int channels>;

        $r7 = virtualinvoke $r6.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>($i2);

        $i3 = r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>;

        $r8 = virtualinvoke $r7.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleRate(int)>($i3);

        $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r8.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setInitializationData(java.util.List)>($r9);

        $r11 = virtualinvoke $r10.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>(r3);

        $r12 = virtualinvoke $r11.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        return $r12;
    }

    public androidx.media3.common.Metadata getMetadataCopyWithAppendedEntriesFrom(androidx.media3.common.Metadata)
    {
        androidx.media3.extractor.FlacStreamMetadata r0;
        androidx.media3.common.Metadata r1, $r2, $r3, $r4;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        r1 := @parameter0: androidx.media3.common.Metadata;

        $r2 = r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata metadata>;

        if $r2 != null goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata metadata>;

        $r4 = virtualinvoke $r3.<androidx.media3.common.Metadata: androidx.media3.common.Metadata copyWithAppendedEntriesFrom(androidx.media3.common.Metadata)>(r1);

     label2:
        return $r4;
    }

    public androidx.media3.extractor.FlacStreamMetadata copyWithSeekTable(androidx.media3.extractor.FlacStreamMetadata$SeekTable)
    {
        androidx.media3.extractor.FlacStreamMetadata r0, $r2;
        androidx.media3.extractor.FlacStreamMetadata$SeekTable r1;
        androidx.media3.common.Metadata $r3;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        r1 := @parameter0: androidx.media3.extractor.FlacStreamMetadata$SeekTable;

        $r2 = new androidx.media3.extractor.FlacStreamMetadata;

        $i7 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples>;

        $i6 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxBlockSizeSamples>;

        $i5 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minFrameSize>;

        $i4 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize>;

        $i3 = r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>;

        $i2 = r0.<androidx.media3.extractor.FlacStreamMetadata: int channels>;

        $i1 = r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample>;

        $l0 = r0.<androidx.media3.extractor.FlacStreamMetadata: long totalSamples>;

        $r3 = r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata metadata>;

        specialinvoke $r2.<androidx.media3.extractor.FlacStreamMetadata: void <init>(int,int,int,int,int,int,int,long,androidx.media3.extractor.FlacStreamMetadata$SeekTable,androidx.media3.common.Metadata)>($i7, $i6, $i5, $i4, $i3, $i2, $i1, $l0, r1, $r3);

        return $r2;
    }

    public androidx.media3.extractor.FlacStreamMetadata copyWithVorbisComments(java.util.List)
    {
        androidx.media3.extractor.FlacStreamMetadata r0, $r4;
        java.util.List r1;
        androidx.media3.common.Metadata r2, $r3;
        androidx.media3.extractor.FlacStreamMetadata$SeekTable $r5;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        r1 := @parameter0: java.util.List;

        $r3 = staticinvoke <androidx.media3.extractor.VorbisUtil: androidx.media3.common.Metadata parseVorbisComments(java.util.List)>(r1);

        r2 = virtualinvoke r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata getMetadataCopyWithAppendedEntriesFrom(androidx.media3.common.Metadata)>($r3);

        $r4 = new androidx.media3.extractor.FlacStreamMetadata;

        $i7 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples>;

        $i6 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxBlockSizeSamples>;

        $i5 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minFrameSize>;

        $i4 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize>;

        $i3 = r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>;

        $i2 = r0.<androidx.media3.extractor.FlacStreamMetadata: int channels>;

        $i1 = r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample>;

        $l0 = r0.<androidx.media3.extractor.FlacStreamMetadata: long totalSamples>;

        $r5 = r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.extractor.FlacStreamMetadata$SeekTable seekTable>;

        specialinvoke $r4.<androidx.media3.extractor.FlacStreamMetadata: void <init>(int,int,int,int,int,int,int,long,androidx.media3.extractor.FlacStreamMetadata$SeekTable,androidx.media3.common.Metadata)>($i7, $i6, $i5, $i4, $i3, $i2, $i1, $l0, $r5, r2);

        return $r4;
    }

    public androidx.media3.extractor.FlacStreamMetadata copyWithPictureFrames(java.util.List)
    {
        androidx.media3.extractor.FlacStreamMetadata r0, $r4;
        java.util.List r1;
        androidx.media3.common.Metadata r2, $r3;
        androidx.media3.extractor.FlacStreamMetadata$SeekTable $r5;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata;

        r1 := @parameter0: java.util.List;

        $r3 = new androidx.media3.common.Metadata;

        specialinvoke $r3.<androidx.media3.common.Metadata: void <init>(java.util.List)>(r1);

        r2 = virtualinvoke r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.common.Metadata getMetadataCopyWithAppendedEntriesFrom(androidx.media3.common.Metadata)>($r3);

        $r4 = new androidx.media3.extractor.FlacStreamMetadata;

        $i7 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minBlockSizeSamples>;

        $i6 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxBlockSizeSamples>;

        $i5 = r0.<androidx.media3.extractor.FlacStreamMetadata: int minFrameSize>;

        $i4 = r0.<androidx.media3.extractor.FlacStreamMetadata: int maxFrameSize>;

        $i3 = r0.<androidx.media3.extractor.FlacStreamMetadata: int sampleRate>;

        $i2 = r0.<androidx.media3.extractor.FlacStreamMetadata: int channels>;

        $i1 = r0.<androidx.media3.extractor.FlacStreamMetadata: int bitsPerSample>;

        $l0 = r0.<androidx.media3.extractor.FlacStreamMetadata: long totalSamples>;

        $r5 = r0.<androidx.media3.extractor.FlacStreamMetadata: androidx.media3.extractor.FlacStreamMetadata$SeekTable seekTable>;

        specialinvoke $r4.<androidx.media3.extractor.FlacStreamMetadata: void <init>(int,int,int,int,int,int,int,long,androidx.media3.extractor.FlacStreamMetadata$SeekTable,androidx.media3.common.Metadata)>($i7, $i6, $i5, $i4, $i3, $i2, $i1, $l0, $r5, r2);

        return $r4;
    }

    private static androidx.media3.common.Metadata concatenateVorbisMetadata(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        androidx.media3.common.Metadata r2, $r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 = staticinvoke <androidx.media3.extractor.VorbisUtil: androidx.media3.common.Metadata parseVorbisComments(java.util.List)>(r0);

        if r2 != null goto label1;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = new androidx.media3.common.Metadata;

        specialinvoke $r3.<androidx.media3.common.Metadata: void <init>(java.util.List)>(r1);

        $r4 = virtualinvoke $r3.<androidx.media3.common.Metadata: androidx.media3.common.Metadata copyWithAppendedEntriesFrom(androidx.media3.common.Metadata)>(r2);

        return $r4;
    }

    private static int getSampleRateLookupKey(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 8000: goto label04;
            case 16000: goto label05;
            case 22050: goto label06;
            case 24000: goto label07;
            case 32000: goto label08;
            case 44100: goto label09;
            case 48000: goto label10;
            case 88200: goto label01;
            case 96000: goto label11;
            case 176400: goto label02;
            case 192000: goto label03;
            default: goto label12;
        };

     label01:
        return 1;

     label02:
        return 2;

     label03:
        return 3;

     label04:
        return 4;

     label05:
        return 5;

     label06:
        return 6;

     label07:
        return 7;

     label08:
        return 8;

     label09:
        return 9;

     label10:
        return 10;

     label11:
        return 11;

     label12:
        return -1;
    }

    private static int getBitsPerSampleLookupKey(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 8: goto label1;
            case 12: goto label2;
            case 16: goto label3;
            case 20: goto label4;
            case 24: goto label5;
            default: goto label6;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 4;

     label4:
        return 5;

     label5:
        return 6;

     label6:
        return -1;
    }

androidx.media3.extractor.FlacStreamMetadata$SeekTable
<androidx.media3.extractor.FlacStreamMetadata$SeekTable: long[] pointSampleNumbers>
<androidx.media3.extractor.FlacStreamMetadata$SeekTable: long[] pointOffsets>
    public void <init>(long[], long[])
    {
        androidx.media3.extractor.FlacStreamMetadata$SeekTable r0;
        long[] r1, r2;

        r0 := @this: androidx.media3.extractor.FlacStreamMetadata$SeekTable;

        r1 := @parameter0: long[];

        r2 := @parameter1: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.FlacStreamMetadata$SeekTable: long[] pointSampleNumbers> = r1;

        r0.<androidx.media3.extractor.FlacStreamMetadata$SeekTable: long[] pointOffsets> = r2;

        return;
    }

