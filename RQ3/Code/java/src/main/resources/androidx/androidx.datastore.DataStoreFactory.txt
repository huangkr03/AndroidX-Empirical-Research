androidx.datastore.DataStoreFactory
<androidx.datastore.DataStoreFactory: androidx.datastore.DataStoreFactory INSTANCE>
    public final androidx.datastore.DataStore create(kotlin.jvm.functions.Function0, androidx.datastore.Serializer, androidx.datastore.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlinx.coroutines.CoroutineScope)
    {
        androidx.datastore.DataStoreFactory r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.datastore.Serializer r2;
        androidx.datastore.handlers.ReplaceFileCorruptionHandler r3;
        java.util.List r4, r7;
        kotlinx.coroutines.CoroutineScope r5, r6;
        androidx.datastore.CorruptionHandler r8, $r16;
        androidx.datastore.SingleProcessDataStore $r9;
        androidx.datastore.handlers.NoOpCorruptionHandler $r10;
        androidx.datastore.DataMigrationInitializer$Companion $r11;
        kotlin.jvm.functions.Function2 $r12;
        androidx.datastore.DataStore $r13;

        r0 := @this: androidx.datastore.DataStoreFactory;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: androidx.datastore.Serializer;

        r3 := @parameter2: androidx.datastore.handlers.ReplaceFileCorruptionHandler;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "produceFile");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "serializer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "migrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "scope");

        $r9 = new androidx.datastore.SingleProcessDataStore;

        if r3 == null goto label1;

        $r16 = (androidx.datastore.CorruptionHandler) r3;

        goto label2;

     label1:
        $r10 = new androidx.datastore.handlers.NoOpCorruptionHandler;

        specialinvoke $r10.<androidx.datastore.handlers.NoOpCorruptionHandler: void <init>()>();

        $r16 = (androidx.datastore.CorruptionHandler) $r10;

     label2:
        $r11 = <androidx.datastore.DataMigrationInitializer: androidx.datastore.DataMigrationInitializer$Companion Companion>;

        $r12 = virtualinvoke $r11.<androidx.datastore.DataMigrationInitializer$Companion: kotlin.jvm.functions.Function2 getInitializer(java.util.List)>(r4);

        r6 = r5;

        r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r12);

        r8 = $r16;

        specialinvoke $r9.<androidx.datastore.SingleProcessDataStore: void <init>(kotlin.jvm.functions.Function0,androidx.datastore.Serializer,java.util.List,androidx.datastore.CorruptionHandler,kotlinx.coroutines.CoroutineScope)>(r1, r2, r7, r8, r6);

        $r13 = (androidx.datastore.DataStore) $r9;

        return $r13;
    }

    public static androidx.datastore.DataStore create$default(androidx.datastore.DataStoreFactory, kotlin.jvm.functions.Function0, androidx.datastore.Serializer, androidx.datastore.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlinx.coroutines.CoroutineScope, int, java.lang.Object)
    {
        androidx.datastore.DataStoreFactory r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.datastore.Serializer r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r3;
        boolean z0;
        androidx.datastore.DataStore $r4;
        kotlinx.coroutines.CoroutineDispatcher $r5;
        kotlinx.coroutines.CompletableJob $r6;
        kotlin.coroutines.CoroutineContext $r7, $r8;
        androidx.datastore.handlers.ReplaceFileCorruptionHandler r9;
        java.util.List r10;
        kotlinx.coroutines.CoroutineScope r11;

        r0 := @parameter0: androidx.datastore.DataStoreFactory;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        r2 := @parameter2: androidx.datastore.Serializer;

        r9 := @parameter3: androidx.datastore.handlers.ReplaceFileCorruptionHandler;

        r10 := @parameter4: java.util.List;

        r11 := @parameter5: kotlinx.coroutines.CoroutineScope;

        i0 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r9 = (androidx.datastore.handlers.ReplaceFileCorruptionHandler) null;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        z0 = 0;

        r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        $r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        $r6 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        $r8 = virtualinvoke $r5.<kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r7);

        r11 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r8);

     label3:
        $r4 = virtualinvoke r0.<androidx.datastore.DataStoreFactory: androidx.datastore.DataStore create(kotlin.jvm.functions.Function0,androidx.datastore.Serializer,androidx.datastore.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope)>(r1, r2, r9, r10, r11);

        return $r4;
    }

    public final androidx.datastore.DataStore create(kotlin.jvm.functions.Function0, androidx.datastore.Serializer, androidx.datastore.handlers.ReplaceFileCorruptionHandler, java.util.List)
    {
        androidx.datastore.DataStoreFactory r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.datastore.Serializer r2;
        androidx.datastore.handlers.ReplaceFileCorruptionHandler r3;
        java.util.List r4;
        androidx.datastore.DataStore $r5;

        r0 := @this: androidx.datastore.DataStoreFactory;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: androidx.datastore.Serializer;

        r3 := @parameter2: androidx.datastore.handlers.ReplaceFileCorruptionHandler;

        r4 := @parameter3: java.util.List;

        $r5 = staticinvoke <androidx.datastore.DataStoreFactory: androidx.datastore.DataStore create$default(androidx.datastore.DataStoreFactory,kotlin.jvm.functions.Function0,androidx.datastore.Serializer,androidx.datastore.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,int,java.lang.Object)>(r0, r1, r2, r3, r4, null, 16, null);

        return $r5;
    }

    public final androidx.datastore.DataStore create(kotlin.jvm.functions.Function0, androidx.datastore.Serializer, androidx.datastore.handlers.ReplaceFileCorruptionHandler)
    {
        androidx.datastore.DataStoreFactory r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.datastore.Serializer r2;
        androidx.datastore.handlers.ReplaceFileCorruptionHandler r3;
        androidx.datastore.DataStore $r4;

        r0 := @this: androidx.datastore.DataStoreFactory;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: androidx.datastore.Serializer;

        r3 := @parameter2: androidx.datastore.handlers.ReplaceFileCorruptionHandler;

        $r4 = staticinvoke <androidx.datastore.DataStoreFactory: androidx.datastore.DataStore create$default(androidx.datastore.DataStoreFactory,kotlin.jvm.functions.Function0,androidx.datastore.Serializer,androidx.datastore.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,int,java.lang.Object)>(r0, r1, r2, r3, null, null, 24, null);

        return $r4;
    }

    public final androidx.datastore.DataStore create(kotlin.jvm.functions.Function0, androidx.datastore.Serializer)
    {
        androidx.datastore.DataStoreFactory r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.datastore.Serializer r2;
        androidx.datastore.DataStore $r3;

        r0 := @this: androidx.datastore.DataStoreFactory;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 := @parameter1: androidx.datastore.Serializer;

        $r3 = staticinvoke <androidx.datastore.DataStoreFactory: androidx.datastore.DataStore create$default(androidx.datastore.DataStoreFactory,kotlin.jvm.functions.Function0,androidx.datastore.Serializer,androidx.datastore.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,int,java.lang.Object)>(r0, r1, r2, null, null, null, 28, null);

        return $r3;
    }

    private void <init>()
    {
        androidx.datastore.DataStoreFactory r0;

        r0 := @this: androidx.datastore.DataStoreFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.datastore.DataStoreFactory r0, $r1;

        $r1 = new androidx.datastore.DataStoreFactory;

        specialinvoke $r1.<androidx.datastore.DataStoreFactory: void <init>()>();

        r0 = $r1;

        <androidx.datastore.DataStoreFactory: androidx.datastore.DataStoreFactory INSTANCE> = r0;

        return;
    }

