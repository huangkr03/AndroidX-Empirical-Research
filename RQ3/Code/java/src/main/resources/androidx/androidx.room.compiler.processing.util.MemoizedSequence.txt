androidx.room.compiler.processing.util.MemoizedSequence
<androidx.room.compiler.processing.util.MemoizedSequence: kotlin.jvm.functions.Function0 buildSequence>
<androidx.room.compiler.processing.util.MemoizedSequence: java.util.List cache>
<androidx.room.compiler.processing.util.MemoizedSequence: kotlin.Lazy delegateIterator$delegate>
    public void <init>(kotlin.jvm.functions.Function0)
    {
        androidx.room.compiler.processing.util.MemoizedSequence r0;
        kotlin.jvm.functions.Function0 r1, $r5;
        java.util.ArrayList $r2;
        java.util.List $r3;
        androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2 $r4;
        kotlin.Lazy $r6;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buildSequence");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.util.MemoizedSequence: kotlin.jvm.functions.Function0 buildSequence> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.List) $r2;

        r0.<androidx.room.compiler.processing.util.MemoizedSequence: java.util.List cache> = $r3;

        $r4 = new androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2;

        specialinvoke $r4.<androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2: void <init>(androidx.room.compiler.processing.util.MemoizedSequence)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r5);

        r0.<androidx.room.compiler.processing.util.MemoizedSequence: kotlin.Lazy delegateIterator$delegate> = $r6;

        return;
    }

    private final java.util.Iterator getDelegateIterator()
    {
        androidx.room.compiler.processing.util.MemoizedSequence r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.Iterator $r3;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence;

        r1 = r0.<androidx.room.compiler.processing.util.MemoizedSequence: kotlin.Lazy delegateIterator$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.Iterator) $r2;

        return $r3;
    }

    public java.util.Iterator iterator()
    {
        androidx.room.compiler.processing.util.MemoizedSequence r0;
        androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator $r1;
        java.util.Iterator $r2;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence;

        $r1 = new androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator;

        specialinvoke $r1.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: void <init>(androidx.room.compiler.processing.util.MemoizedSequence)>(r0);

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

    public static final java.util.List access$getCache$p(androidx.room.compiler.processing.util.MemoizedSequence)
    {
        androidx.room.compiler.processing.util.MemoizedSequence $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.util.MemoizedSequence;

        $r1 = $r0.<androidx.room.compiler.processing.util.MemoizedSequence: java.util.List cache>;

        return $r1;
    }

    public static final java.util.Iterator access$getDelegateIterator(androidx.room.compiler.processing.util.MemoizedSequence)
    {
        androidx.room.compiler.processing.util.MemoizedSequence $r0;
        java.util.Iterator $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.util.MemoizedSequence;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.util.MemoizedSequence: java.util.Iterator getDelegateIterator()>();

        return $r1;
    }

    public static final kotlin.jvm.functions.Function0 access$getBuildSequence$p(androidx.room.compiler.processing.util.MemoizedSequence)
    {
        androidx.room.compiler.processing.util.MemoizedSequence $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.util.MemoizedSequence;

        $r1 = $r0.<androidx.room.compiler.processing.util.MemoizedSequence: kotlin.jvm.functions.Function0 buildSequence>;

        return $r1;
    }

androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator
<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: int yieldedCount>
<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: androidx.room.compiler.processing.util.MemoizedSequence this$0>
    public void <init>(androidx.room.compiler.processing.util.MemoizedSequence)
    {
        androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator r0;
        androidx.room.compiler.processing.util.MemoizedSequence r1;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator;

        r1 := @parameter0: androidx.room.compiler.processing.util.MemoizedSequence;

        r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: androidx.room.compiler.processing.util.MemoizedSequence this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1, $r3;
        int $i0, $i1;
        java.util.List $r2;
        java.util.Iterator $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator;

        $i0 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: int yieldedCount>;

        $r1 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: androidx.room.compiler.processing.util.MemoizedSequence this$0>;

        $r2 = staticinvoke <androidx.room.compiler.processing.util.MemoizedSequence: java.util.List access$getCache$p(androidx.room.compiler.processing.util.MemoizedSequence)>($r1);

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < $i1 goto label1;

        $r3 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: androidx.room.compiler.processing.util.MemoizedSequence this$0>;

        $r4 = staticinvoke <androidx.room.compiler.processing.util.MemoizedSequence: java.util.Iterator access$getDelegateIterator(androidx.room.compiler.processing.util.MemoizedSequence)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.Object next()
    {
        androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator r0;
        java.lang.Object r1, r2, $r11;
        int i0, $i1, $i2, $i3, $i4;
        androidx.room.compiler.processing.util.MemoizedSequence $r3, $r5, $r7, $r9;
        java.util.List $r4, $r6, $r8;
        java.util.Iterator $r10;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator;

        $r3 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: androidx.room.compiler.processing.util.MemoizedSequence this$0>;

        $r4 = staticinvoke <androidx.room.compiler.processing.util.MemoizedSequence: java.util.List access$getCache$p(androidx.room.compiler.processing.util.MemoizedSequence)>($r3);

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i2 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: int yieldedCount>;

        if $i1 != $i2 goto label1;

        $r7 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: androidx.room.compiler.processing.util.MemoizedSequence this$0>;

        $r8 = staticinvoke <androidx.room.compiler.processing.util.MemoizedSequence: java.util.List access$getCache$p(androidx.room.compiler.processing.util.MemoizedSequence)>($r7);

        $r9 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: androidx.room.compiler.processing.util.MemoizedSequence this$0>;

        $r10 = staticinvoke <androidx.room.compiler.processing.util.MemoizedSequence: java.util.Iterator access$getDelegateIterator(androidx.room.compiler.processing.util.MemoizedSequence)>($r9);

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r11);

     label1:
        $r5 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: androidx.room.compiler.processing.util.MemoizedSequence this$0>;

        $r6 = staticinvoke <androidx.room.compiler.processing.util.MemoizedSequence: java.util.List access$getCache$p(androidx.room.compiler.processing.util.MemoizedSequence)>($r5);

        $i3 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: int yieldedCount>;

        r1 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i3);

        r2 = r1;

        i0 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: int yieldedCount>;

        $i4 = i0 + 1;

        r0.<androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator: int yieldedCount> = $i4;

        return r1;
    }

    public void remove()
    {
        androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence$CachedIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2
<androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2: androidx.room.compiler.processing.util.MemoizedSequence this$0>
    void <init>(androidx.room.compiler.processing.util.MemoizedSequence)
    {
        androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2 r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2;

        $r1 := @parameter0: androidx.room.compiler.processing.util.MemoizedSequence;

        r0.<androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2: androidx.room.compiler.processing.util.MemoizedSequence this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.Iterator invoke()
    {
        androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2 r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1;
        kotlin.jvm.functions.Function0 $r2;
        java.lang.Object $r3;
        kotlin.sequences.Sequence $r4;
        java.util.Iterator $r5;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2;

        $r1 = r0.<androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2: androidx.room.compiler.processing.util.MemoizedSequence this$0>;

        $r2 = staticinvoke <androidx.room.compiler.processing.util.MemoizedSequence: kotlin.jvm.functions.Function0 access$getBuildSequence$p(androidx.room.compiler.processing.util.MemoizedSequence)>($r1);

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r4 = (kotlin.sequences.Sequence) $r3;

        $r5 = interfaceinvoke $r4.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        return $r5;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2 r0;
        java.util.Iterator $r1;

        r0 := @this: androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.util.MemoizedSequence$delegateIterator$2: java.util.Iterator invoke()>();

        return $r1;
    }

