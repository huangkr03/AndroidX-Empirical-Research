com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.channels.Channel channel>
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.atomicfu.AtomicBoolean completed>
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.channel.job.ChannelJob delegate>
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.CompletableJob observerJob>
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope scope>
    public void <init>(kotlinx.coroutines.channels.Channel, com.google.testing.platform.lib.coroutines.scope.JobScope, com.google.testing.platform.lib.coroutines.channel.job.ChannelJob)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.coroutines.channels.Channel $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;
        com.google.testing.platform.lib.coroutines.channel.job.ChannelJob $r3;
        kotlinx.coroutines.CompletableJob $r4;
        kotlinx.atomicfu.AtomicBoolean $r5;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 := @parameter0: kotlinx.coroutines.channels.Channel;

        $r2 := @parameter1: com.google.testing.platform.lib.coroutines.scope.JobScope;

        $r3 := @parameter2: com.google.testing.platform.lib.coroutines.channel.job.ChannelJob;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "channel");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "scope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "delegate");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.channels.Channel channel> = $r1;

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope scope> = $r2;

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.channel.job.ChannelJob delegate> = $r3;

        $r2 = (com.google.testing.platform.lib.coroutines.scope.JobScope) $r3;

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1> = $r2;

        $r4 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.CompletableJob observerJob> = $r4;

        $r5 = staticinvoke <kotlinx.atomicfu.AtomicFU: kotlinx.atomicfu.AtomicBoolean atomic(boolean)>(0);

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.atomicfu.AtomicBoolean completed> = $r5;

        return;
    }

    public void <init>(kotlinx.coroutines.channels.Channel, com.google.testing.platform.lib.coroutines.scope.JobScope, com.google.testing.platform.lib.coroutines.channel.job.ChannelJob, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.coroutines.channels.Channel $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;
        com.google.testing.platform.lib.coroutines.channel.job.ChannelJob $r4;
        int $i0;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 := @parameter0: kotlinx.coroutines.channels.Channel;

        $r2 := @parameter1: com.google.testing.platform.lib.coroutines.scope.JobScope;

        $r4 := @parameter2: com.google.testing.platform.lib.coroutines.channel.job.ChannelJob;

        $i0 := @parameter3: int;

        $r3 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label1;

        $r4 = staticinvoke <com.google.testing.platform.lib.coroutines.channel.job.ChannelJobKt: com.google.testing.platform.lib.coroutines.channel.job.ChannelJob ChannelJob(kotlinx.coroutines.channels.Channel,com.google.testing.platform.lib.coroutines.scope.JobScope)>($r1, $r2);

     label1:
        specialinvoke $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: void <init>(kotlinx.coroutines.channels.Channel,com.google.testing.platform.lib.coroutines.scope.JobScope,com.google.testing.platform.lib.coroutines.channel.job.ChannelJob)>($r1, $r2, $r4);

        return;
    }

    private final void observerComplete(java.lang.Throwable)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        boolean $z0;
        java.lang.Throwable $r1;
        kotlinx.atomicfu.AtomicBoolean $r2;
        kotlinx.coroutines.CompletableJob $r3;
        kotlinx.coroutines.channels.Channel $r4;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.atomicfu.AtomicBoolean completed>;

        $z0 = virtualinvoke $r2.<kotlinx.atomicfu.AtomicBoolean: boolean getAndSet(boolean)>(1);

        if $z0 != 0 goto label2;

        $r3 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.CompletableJob observerJob>;

        interfaceinvoke $r3.<kotlinx.coroutines.CompletableJob: boolean complete()>();

        if $r1 == null goto label1;

        $r4 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.channels.Channel channel>;

        interfaceinvoke $r4.<kotlinx.coroutines.channels.Channel: boolean close(java.lang.Throwable)>($r1);

        virtualinvoke $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: boolean completeExceptionally(java.lang.Throwable)>($r1);

        return;

     label1:
        $r4 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.channels.Channel channel>;

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>($r4, null, 1, null);

        virtualinvoke $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: boolean complete()>();

     label2:
        return;
    }

    static void observerComplete$default(com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver, java.lang.Throwable, int, java.lang.Object)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        int $i0;

        $r0 := @parameter0: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter1: java.lang.Throwable;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = null;

     label1:
        specialinvoke $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: void observerComplete(java.lang.Throwable)>($r2);

        return;
    }

    private final void observerSend(java.lang.Object)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.coroutines.channels.Channel $r1;
        java.lang.Object $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter0: java.lang.Object;

        $r1 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.channels.Channel channel>;

        $r2 = staticinvoke <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object trySendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)>($r1, $r2);

        staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrThrow-impl(java.lang.Object)>($r2);

        return;
    }

    public kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.coroutines.ChildHandle $r1;
        kotlinx.coroutines.ChildJob $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter0: kotlinx.coroutines.ChildJob;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "child");

        $r3 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)>($r2);

        return $r1;
    }

    public void cancel(java.util.concurrent.CancellationException)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        java.util.concurrent.CancellationException $r1;
        boolean $z0;
        kotlinx.atomicfu.AtomicBoolean $r2;
        com.google.testing.platform.lib.coroutines.channel.job.ChannelJob $r3;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 := @parameter0: java.util.concurrent.CancellationException;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.atomicfu.AtomicBoolean completed>;

        $z0 = virtualinvoke $r2.<kotlinx.atomicfu.AtomicBoolean: boolean getValue()>();

        if $z0 == 0 goto label1;

        $r3 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.channel.job.ChannelJob delegate>;

        interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.channel.job.ChannelJob: void cancel(java.util.concurrent.CancellationException)>($r1);

     label1:
        return;
    }

    public boolean complete()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.coroutines.CompletableJob $r1;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.CompletableJob observerJob>;

        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.CompletableJob: boolean isCompleted()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope scope>;

        $z0 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean complete()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean completeExceptionally(java.lang.Throwable)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        boolean $z0;
        java.lang.Throwable $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "exception");

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $z0 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean completeExceptionally(java.lang.Throwable)>($r1);

        return $z0;
    }

    public java.lang.Object fold(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $r3 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r2 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)>($r2, $r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlin.coroutines.CoroutineContext$Element $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "key");

        $r3 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r2);

        return $r1;
    }

    public java.util.concurrent.CancellationException getCancellationException()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        java.util.concurrent.CancellationException $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: java.util.concurrent.CancellationException getCancellationException()>();

        return $r1;
    }

    public kotlin.sequences.Sequence getChildren()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlin.sequences.Sequence $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.sequences.Sequence getChildren()>();

        return $r1;
    }

    public kotlin.coroutines.CoroutineContext getCoroutineContext()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlin.coroutines.CoroutineContext $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        return $r1;
    }

    public kotlin.coroutines.CoroutineContext$Key getKey()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlin.coroutines.CoroutineContext$Key $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext$Key getKey()>();

        return $r1;
    }

    public io.grpc.stub.StreamObserver getObserver()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        return $r0;
    }

    public kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.coroutines.DisposableHandle $r1;
        kotlin.jvm.functions.Function1 $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "handler");

        $r3 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r2);

        return $r1;
    }

    public kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean, boolean, kotlin.jvm.functions.Function1)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        boolean $z0, $z1;
        kotlin.jvm.functions.Function1 $r1;
        kotlinx.coroutines.DisposableHandle $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $z1 := @parameter0: boolean;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "handler");

        $r3 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r2 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)>($z1, $z0, $r1);

        return $r2;
    }

    public boolean isActive()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.atomicfu.AtomicBoolean $r1;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.atomicfu.AtomicBoolean completed>;

        $z0 = virtualinvoke $r1.<kotlinx.atomicfu.AtomicBoolean: boolean getValue()>();

        if $z0 == 0 goto label2;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope scope>;

        $z0 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean isActive()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean isCancelled()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.atomicfu.AtomicBoolean $r1;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.atomicfu.AtomicBoolean completed>;

        $z0 = virtualinvoke $r1.<kotlinx.atomicfu.AtomicBoolean: boolean getValue()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope scope>;

        $z0 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isCompleted()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.atomicfu.AtomicBoolean $r1;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.atomicfu.AtomicBoolean completed>;

        $z0 = virtualinvoke $r1.<kotlinx.atomicfu.AtomicBoolean: boolean getValue()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope scope>;

        $z0 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean isCompleted()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public kotlinx.coroutines.channels.ChannelIterator iterator()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.coroutines.channels.ChannelIterator $r1;
        com.google.testing.platform.lib.coroutines.channel.job.ChannelJob $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.channel.job.ChannelJob delegate>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.channel.job.ChannelJob: kotlinx.coroutines.channels.ChannelIterator iterator()>();

        return $r1;
    }

    public java.lang.Object join(kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlin.coroutines.Continuation $r1;
        boolean $z0;
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1 $r2;
        int $i0;
        java.lang.Object $r3, $r4, $r6;
        java.lang.IllegalStateException $r5;
        kotlinx.coroutines.CompletableJob $r7;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r8;
        kotlin.Unit r9;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1;

        if $z0 == 0 goto label1;

        $r2 = (com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1) $r1;

        $i0 = $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label>;

        $i0 = $i0 - -2147483648;

        $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label> = $i0;

        goto label2;

     label1:
        $r2 = new com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1;

        specialinvoke $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: void <init>(com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver,kotlin.coroutines.Continuation)>($r0, $r1);

     label2:
        $r3 = $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label4;
            default: goto label3;
        };

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        goto label8;

     label5:
        $r6 = $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: java.lang.Object L$0>;

        $r0 = (com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        goto label7;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r7 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.CompletableJob observerJob>;

        $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: java.lang.Object L$0> = $r0;

        $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label> = 1;

        $r3 = interfaceinvoke $r7.<kotlinx.coroutines.CompletableJob: java.lang.Object join(kotlin.coroutines.Continuation)>($r2);

        if $r3 == $r4 goto label9;

     label7:
        $r8 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope scope>;

        $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: java.lang.Object L$0> = null;

        $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label> = 2;

        $r3 = interfaceinvoke $r8.<com.google.testing.platform.lib.coroutines.scope.JobScope: java.lang.Object join(kotlin.coroutines.Continuation)>($r2);

        if $r3 != $r4 goto label8;

        return $r4;

     label8:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r9;

     label9:
        return $r4;
    }

    public kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "key");

        $r3 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)>($r2);

        return $r1;
    }

    public void onCompleted()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        staticinvoke <com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: void observerComplete$default(com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver,java.lang.Throwable,int,java.lang.Object)>($r0, null, 1, null);

        return;
    }

    public void onError(java.lang.Throwable)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        java.lang.Throwable $r1;
        com.google.testing.platform.lib.grpc.stream.inbound.InboundGrpcChannelException $r2;
        java.lang.String $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 := @parameter0: java.lang.Throwable;

        if $r1 != null goto label1;

        staticinvoke <com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: void observerComplete$default(com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver,java.lang.Throwable,int,java.lang.Object)>($r0, null, 1, null);

        return;

     label1:
        $r2 = new com.google.testing.platform.lib.grpc.stream.inbound.InboundGrpcChannelException;

        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            |Remote GRPC connection closed with an error.\n            |Received Message: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            |");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)>($r3, null, 1, null);

        specialinvoke $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundGrpcChannelException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r1);

        specialinvoke $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: void observerComplete(java.lang.Throwable)>($r2);

        return;
    }

    public void onNext(java.lang.Object)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlinx.coroutines.channels.Channel $r1;
        java.lang.Object $r2;
        boolean $z0;
        com.google.testing.platform.lib.grpc.stream.inbound.InboundGrpcChannelException $r3;
        java.lang.Class $r4;
        java.lang.String $r5, $r6, $r7;
        java.lang.StringBuilder $r8;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter0: java.lang.Object;

        $r1 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.channels.Channel channel>;

        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.channels.Channel: boolean isClosedForSend()>();

        if $z0 != 0 goto label1;

        specialinvoke $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: void observerSend(java.lang.Object)>($r2);

        return;

     label1:
        $r3 = new com.google.testing.platform.lib.grpc.stream.inbound.InboundGrpcChannelException;

        $r4 = class "Lcom/google/testing/platform/lib/grpc/stream/inbound/InboundChannelStreamObserver;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = class "Lcom/google/testing/platform/lib/grpc/stream/inbound/InboundGrpcChannel;";

        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r1 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: kotlinx.coroutines.channels.Channel channel>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n          |The Channel this connection pushes to has already been closed, but\n          |");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is still receiving messages.\n          |Possible causes:\n          | 1 - The ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(class "Lcom/google/testing/platform/lib/grpc/stream/inbound/InboundGrpcChannel;");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was closed locally rather than allowing the\n          |   remote connection to complete the connection.\n          | 2 - This ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is being used\n          |   outside of this context and did not stop sending messages (using onNext(...)) after\n          |   this ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was closed.\n          |Channel: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n          ");

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)>($r5, null, 1, null);

        specialinvoke $r3.<com.google.testing.platform.lib.grpc.stream.inbound.InboundGrpcChannelException: void <init>(java.lang.String,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r5, null, 2, null);

        specialinvoke $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: void observerComplete(java.lang.Throwable)>($r3);

        throw $r3;
    }

    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        kotlin.coroutines.CoroutineContext $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r1);

        return $r1;
    }

    public boolean start()
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r0;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r1;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r1 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: com.google.testing.platform.lib.coroutines.scope.JobScope $$delegate_1>;

        $z0 = interfaceinvoke $r1.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean start()>();

        return $z0;
    }

com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: java.lang.Object L$0>
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label>
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: java.lang.Object result>
<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver this$0>
    void <init>(com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1 $r0;
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r1;
        kotlin.coroutines.Continuation $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1;

        $r1 := @parameter0: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver this$0> = $r1;

        specialinvoke $r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1 $r0;
        java.lang.Object $r1;
        int $i0;
        com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver $r2;

        $r0 := @this: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1;

        $r1 := @parameter0: java.lang.Object;

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: java.lang.Object result> = $r1;

        $i0 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label>;

        $i0 = $i0 | -2147483648;

        $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: int label> = $i0;

        $r2 = $r0.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver$join$1: com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver this$0>;

        $r1 = virtualinvoke $r2.<com.google.testing.platform.lib.grpc.stream.inbound.InboundChannelStreamObserver: java.lang.Object join(kotlin.coroutines.Continuation)>($r0);

        return $r1;
    }

