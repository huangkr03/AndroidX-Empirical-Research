androidx.test.ext.truth.view.MotionEventSubject
<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>
    public static androidx.test.ext.truth.view.MotionEventSubject $r8$lambda$i8bsrlxXCcKw5bGlv4cZEgbuwCk(com.google.common.truth.FailureMetadata, android.view.MotionEvent)
    {
        com.google.common.truth.FailureMetadata r0;
        android.view.MotionEvent r1;
        androidx.test.ext.truth.view.MotionEventSubject $r2;

        r0 := @parameter0: com.google.common.truth.FailureMetadata;

        r1 := @parameter1: android.view.MotionEvent;

        $r2 = new androidx.test.ext.truth.view.MotionEventSubject;

        specialinvoke $r2.<androidx.test.ext.truth.view.MotionEventSubject: void <init>(com.google.common.truth.FailureMetadata,android.view.MotionEvent)>(r0, r1);

        return $r2;
    }

    public static androidx.test.ext.truth.view.MotionEventSubject assertThat(android.view.MotionEvent)
    {
        android.view.MotionEvent r0;
        com.google.common.truth.Subject$Factory $r1;
        com.google.common.truth.SimpleSubjectBuilder $r2;
        com.google.common.truth.Subject $r3;
        androidx.test.ext.truth.view.MotionEventSubject $r4;

        r0 := @parameter0: android.view.MotionEvent;

        $r1 = staticinvoke <androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.Subject$Factory motionEvents()>();

        $r2 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.SimpleSubjectBuilder assertAbout(com.google.common.truth.Subject$Factory)>($r1);

        $r3 = virtualinvoke $r2.<com.google.common.truth.SimpleSubjectBuilder: com.google.common.truth.Subject that(java.lang.Object)>(r0);

        $r4 = (androidx.test.ext.truth.view.MotionEventSubject) $r3;

        return $r4;
    }

    public androidx.test.ext.truth.view.PointerCoordsSubject historicalPointerCoords(int, int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, i1;
        android.view.MotionEvent$PointerCoords r1, $r2;
        android.view.MotionEvent $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6;
        com.google.common.truth.StandardSubjectBuilder $r7;
        com.google.common.truth.Subject$Factory $r8;
        com.google.common.truth.SimpleSubjectBuilder $r9;
        com.google.common.truth.Subject $r10;
        androidx.test.ext.truth.view.PointerCoordsSubject $r11;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r2.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        virtualinvoke $r3.<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent$PointerCoords)>(i0, i1, r1);

        $r4 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[1] = $r6;

        $r7 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalPointerCoords(%s, %s)", $r4);

        $r8 = staticinvoke <androidx.test.ext.truth.view.PointerCoordsSubject: com.google.common.truth.Subject$Factory pointerCoords()>();

        $r9 = virtualinvoke $r7.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.SimpleSubjectBuilder about(com.google.common.truth.Subject$Factory)>($r8);

        $r10 = virtualinvoke $r9.<com.google.common.truth.SimpleSubjectBuilder: com.google.common.truth.Subject that(java.lang.Object)>(r1);

        $r11 = (androidx.test.ext.truth.view.PointerCoordsSubject) $r10;

        return $r11;
    }

    public androidx.test.ext.truth.view.PointerCoordsSubject pointerCoords(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        android.view.MotionEvent$PointerCoords r1, $r2;
        android.view.MotionEvent $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        com.google.common.truth.StandardSubjectBuilder $r6;
        com.google.common.truth.Subject$Factory $r7;
        com.google.common.truth.SimpleSubjectBuilder $r8;
        com.google.common.truth.Subject $r9;
        androidx.test.ext.truth.view.PointerCoordsSubject $r10;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r2 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r2.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        virtualinvoke $r3.<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)>(i0, r1);

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getPointerCoords(%s)", $r4);

        $r7 = staticinvoke <androidx.test.ext.truth.view.PointerCoordsSubject: com.google.common.truth.Subject$Factory pointerCoords()>();

        $r8 = virtualinvoke $r6.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.SimpleSubjectBuilder about(com.google.common.truth.Subject$Factory)>($r7);

        $r9 = virtualinvoke $r8.<com.google.common.truth.SimpleSubjectBuilder: com.google.common.truth.Subject that(java.lang.Object)>(r1);

        $r10 = (androidx.test.ext.truth.view.PointerCoordsSubject) $r9;

        return $r10;
    }

    public androidx.test.ext.truth.view.PointerPropertiesSubject pointerProperties(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        android.view.MotionEvent$PointerProperties r1, $r2;
        android.view.MotionEvent $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        com.google.common.truth.StandardSubjectBuilder $r6;
        com.google.common.truth.Subject$Factory $r7;
        com.google.common.truth.SimpleSubjectBuilder $r8;
        com.google.common.truth.Subject $r9;
        androidx.test.ext.truth.view.PointerPropertiesSubject $r10;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r2 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r2.<android.view.MotionEvent$PointerProperties: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        virtualinvoke $r3.<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)>(i0, r1);

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getPointerProperties(%s)", $r4);

        $r7 = staticinvoke <androidx.test.ext.truth.view.PointerPropertiesSubject: com.google.common.truth.Subject$Factory pointerProperties()>();

        $r8 = virtualinvoke $r6.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.SimpleSubjectBuilder about(com.google.common.truth.Subject$Factory)>($r7);

        $r9 = virtualinvoke $r8.<com.google.common.truth.SimpleSubjectBuilder: com.google.common.truth.Subject that(java.lang.Object)>(r1);

        $r10 = (androidx.test.ext.truth.view.PointerPropertiesSubject) $r9;

        return $r10;
    }

    public com.google.common.truth.FloatSubject historicalOrientation(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalOrientation(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalOrientation(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject historicalPressure(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalPressure(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalPressure(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject historicalSize(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalSize(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalSize(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject historicalToolMajor(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalToolMajor(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalToolMajor(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject historicalToolMinor(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalToolMinor(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalToolMinor(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject historicalTouchMajor(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalTouchMajor(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalTouchMajor(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject historicalTouchMinor(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalTouchMinor(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalTouchMinor(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject historicalX(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalX(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalX(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject historicalY(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalY(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getHistoricalY(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject orientation()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getOrientation()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getOrientation()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject orientation(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getOrientation(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getOrientation(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject pressure()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getPressure()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getPressure()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject pressure(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getPressure(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getPressure(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject rawX()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getRawX()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getRawX()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject rawY()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getRawY()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getRawY()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject size()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getSize()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getSize()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject size(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getSize(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getSize()>();

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject toolMajor()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getToolMajor()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getToolMajor()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject toolMajor(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getToolMajor(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getToolMajor(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject toolMinor()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getToolMinor()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getToolMinor()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject toolMinor(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getToolMinor(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getToolMinor(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject touchMajor()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getTouchMajor()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getTouchMajor()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject touchMajor(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getTouchMajor(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getTouchMajor(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject touchMinor()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getTouchMinor()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getTouchMinor()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject touchMinor(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getTouchMinor(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getTouchMinor(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject x()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getX()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getX()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject x(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getX(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getX(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject xPrecision()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getXPrecision()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getXPrecision()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject y()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getY()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject y(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        float $f0;
        java.lang.Float $r5;
        com.google.common.truth.FloatSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getY(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r4.<android.view.MotionEvent: float getY(int)>(i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r5);

        return $r6;
    }

    public com.google.common.truth.FloatSubject yPrecision()
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getYPrecision()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getYPrecision()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.IntegerSubject pointerId(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r5;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        com.google.common.truth.IntegerSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getPointerId(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r4.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r5);

        return $r6;
    }

    public com.google.common.truth.LongSubject historicalEventTime(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.view.MotionEvent $r4;
        long $l1;
        java.lang.Long $r5;
        com.google.common.truth.LongSubject $r6;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistoricalEventTime(%s)", $r1);

        $r4 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $l1 = virtualinvoke $r4.<android.view.MotionEvent: long getHistoricalEventTime(int)>(i0);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.LongSubject that(java.lang.Long)>($r5);

        return $r6;
    }

    public static com.google.common.truth.Subject$Factory motionEvents()
    {
        androidx.test.ext.truth.view.MotionEventSubject$$ExternalSyntheticLambda0 $r0;

        $r0 = <androidx.test.ext.truth.view.MotionEventSubject$$ExternalSyntheticLambda0: androidx.test.ext.truth.view.MotionEventSubject$$ExternalSyntheticLambda0 INSTANCE>;

        return $r0;
    }

    private void <init>(com.google.common.truth.FailureMetadata, android.view.MotionEvent)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        com.google.common.truth.FailureMetadata r1;
        android.view.MotionEvent r2;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        r1 := @parameter0: com.google.common.truth.FailureMetadata;

        r2 := @parameter1: android.view.MotionEvent;

        specialinvoke r0.<com.google.common.truth.Subject: void <init>(com.google.common.truth.FailureMetadata,java.lang.Object)>(r1, r2);

        r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual> = r2;

        return;
    }

    public void hasAction(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getAction()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r3.<android.view.MotionEvent: int getAction()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasActionButton(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1, $i2;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 23 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getActionButton() is only available on Android API 23 and above");

        throw $r7;

     label1:
        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getActionButton()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i2 = virtualinvoke $r3.<android.view.MotionEvent: int getActionButton()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasButtonState(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getButtonState()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r3.<android.view.MotionEvent: int getButtonState()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasDeviceId(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getDeviceId()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r3.<android.view.MotionEvent: int getDeviceId()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasDownTime(long)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        long l0, $l1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Long $r4, $r6;
        com.google.common.truth.LongSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        l0 := @parameter0: long;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getDownTime()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $l1 = virtualinvoke $r3.<android.view.MotionEvent: long getDownTime()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.LongSubject that(java.lang.Long)>($r4);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r5.<com.google.common.truth.LongSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasEdgeFlags(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getEdgeFlags()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r3.<android.view.MotionEvent: int getEdgeFlags()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasEventTime(long)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        long l0, $l1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Long $r4, $r6;
        com.google.common.truth.LongSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        l0 := @parameter0: long;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getEventTime()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $l1 = virtualinvoke $r3.<android.view.MotionEvent: long getEventTime()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.LongSubject that(java.lang.Long)>($r4);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r5.<com.google.common.truth.LongSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasFlags(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getFlags()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r3.<android.view.MotionEvent: int getFlags()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasHistorySize(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getHistorySize()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r3.<android.view.MotionEvent: int getHistorySize()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasMetaState(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getMetaState()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r3.<android.view.MotionEvent: int getMetaState()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

    public void hasPointerCount(int)
    {
        androidx.test.ext.truth.view.MotionEventSubject r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.view.MotionEvent $r3;
        java.lang.Integer $r4, $r6;
        com.google.common.truth.IntegerSubject $r5;

        r0 := @this: androidx.test.ext.truth.view.MotionEventSubject;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.view.MotionEventSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getPointerCount()", $r1);

        $r3 = r0.<androidx.test.ext.truth.view.MotionEventSubject: android.view.MotionEvent actual>;

        $i1 = virtualinvoke $r3.<android.view.MotionEvent: int getPointerCount()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IntegerSubject that(java.lang.Integer)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<com.google.common.truth.IntegerSubject: void isEqualTo(java.lang.Object)>($r6);

        return;
    }

