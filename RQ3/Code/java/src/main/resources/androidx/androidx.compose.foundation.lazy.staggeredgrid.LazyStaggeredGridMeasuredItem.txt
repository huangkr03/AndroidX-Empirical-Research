androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int index>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.lang.Object key>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.util.List placeables>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: boolean isVertical>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: long contentOffset>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int spacing>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int mainAxisSize>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int sizeWithSpacings>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int crossAxisSize>
    private void <init>(int, java.lang.Object, java.util.List, boolean, long, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0, r14, r18;
        int i0, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i13, $i14, $i15, $i16, i17, $i18, $i19;
        java.lang.Object r1, r3, r4, $r7, $r9;
        java.util.List r2, $r12, $r17;
        boolean z0, $z1, $z2, $z3, $z4;
        long l1;
        androidx.compose.ui.layout.Placeable r5, $r20, $r22;
        java.lang.Number $r6, $r11, $r24;
        java.lang.Integer $r8, $r10, r13, r15;
        java.lang.Comparable $r19, $r21, $r23;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        l1 := @parameter4: long;

        i2 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int index> = i0;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.lang.Object key> = r1;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.util.List placeables> = r2;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: boolean isVertical> = z0;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: long contentOffset> = l1;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int spacing> = i2;

        $r12 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.util.List placeables>;

        r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r14 = r0;

        r15 = r13;

        i13 = 0;

        i3 = interfaceinvoke $r12.<java.util.List: int size()>();

     label01:
        if i13 >= i3 goto label04;

        r3 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i13);

        r4 = r3;

        r5 = (androidx.compose.ui.layout.Placeable) r4;

        $r11 = (java.lang.Number) r15;

        i4 = virtualinvoke $r11.<java.lang.Number: int intValue()>();

        $z4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: boolean isVertical>;

        if $z4 == 0 goto label02;

        $i14 = virtualinvoke r5.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        goto label03;

     label02:
        $i14 = virtualinvoke r5.<androidx.compose.ui.layout.Placeable: int getWidth()>();

     label03:
        $i11 = i4 + $i14;

        r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        i13 = i13 + 1;

        goto label01;

     label04:
        $r6 = (java.lang.Number) r15;

        $i5 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        r14.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int mainAxisSize> = $i5;

        $i7 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int mainAxisSize>;

        $i6 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int spacing>;

        $i8 = $i7 + $i6;

        $i9 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i8, 0);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int sizeWithSpacings> = $i9;

        $r17 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.util.List placeables>;

        r18 = r0;

        $z1 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label05;

        $r19 = null;

        goto label13;

     label05:
        $r7 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(0);

        $r20 = (androidx.compose.ui.layout.Placeable) $r7;

        $z2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: boolean isVertical>;

        if $z2 == 0 goto label06;

        $i15 = virtualinvoke $r20.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        goto label07;

     label06:
        $i15 = virtualinvoke $r20.<androidx.compose.ui.layout.Placeable: int getHeight()>();

     label07:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $r21 = (java.lang.Comparable) $r8;

        $i16 = 1;

        i17 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r17);

        if 1 > i17 goto label12;

     label08:
        $r9 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>($i16);

        $r22 = (androidx.compose.ui.layout.Placeable) $r9;

        $z3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: boolean isVertical>;

        if $z3 == 0 goto label09;

        $i18 = virtualinvoke $r22.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        goto label10;

     label09:
        $i18 = virtualinvoke $r22.<androidx.compose.ui.layout.Placeable: int getHeight()>();

     label10:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r23 = (java.lang.Comparable) $r10;

        $i10 = interfaceinvoke $r23.<java.lang.Comparable: int compareTo(java.lang.Object)>($r21);

        if $i10 <= 0 goto label11;

        $r21 = $r23;

     label11:
        if $i16 == i17 goto label12;

        $i16 = $i16 + 1;

        goto label08;

     label12:
        $r19 = $r21;

     label13:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r19);

        $r24 = (java.lang.Number) $r19;

        $i19 = virtualinvoke $r24.<java.lang.Number: int intValue()>();

        r18.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int crossAxisSize> = $i19;

        return;
    }

    public final int getIndex()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int index>;

        return $i0;
    }

    public final java.lang.Object getKey()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.lang.Object key>;

        return $r1;
    }

    public final java.util.List getPlaceables()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.util.List placeables>;

        return $r1;
    }

    public final boolean isVertical()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $z0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: boolean isVertical>;

        return $z0;
    }

    public final long getContentOffset-nOcc-ac()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        long $l0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $l0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: long contentOffset>;

        return $l0;
    }

    public final int getSpacing()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int spacing>;

        return $i0;
    }

    public final int getMainAxisSize()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int mainAxisSize>;

        return $i0;
    }

    public final int getSizeWithSpacings()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int sizeWithSpacings>;

        return $i0;
    }

    public final int getCrossAxisSize()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int crossAxisSize>;

        return $i0;
    }

    public final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridPositionedItem position(int, int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        int i0, i1, i2, i4, $i7, $i8;
        long l3, l5, l6, $l9;
        java.lang.Object r1;
        java.util.List r2;
        boolean z0, $z1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridPositionedItem $r3;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: boolean isVertical>;

        if $z1 == 0 goto label1;

        $l9 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>(i2, i1);

        goto label2;

     label1:
        $l9 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>(i1, i2);

     label2:
        l3 = $l9;

        i4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int index>;

        r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.lang.Object key>;

        $i8 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int sizeWithSpacings>;

        $i7 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int crossAxisSize>;

        l5 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i8, $i7);

        r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: java.util.List placeables>;

        l6 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: long contentOffset>;

        z0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: boolean isVertical>;

        $r3 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridPositionedItem;

        specialinvoke $r3.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridPositionedItem: void <init>(long,int,int,java.lang.Object,long,java.util.List,long,boolean,kotlin.jvm.internal.DefaultConstructorMarker)>(l3, i4, i0, r1, l5, r2, l6, z0, null);

        return $r3;
    }

    public void <init>(int, java.lang.Object, java.util.List, boolean, long, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem r0;
        int i0, i2;
        java.lang.Object r1;
        java.util.List r2;
        boolean z0;
        long l1;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        l1 := @parameter4: long;

        i2 := @parameter5: int;

        $r3 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: void <init>(int,java.lang.Object,java.util.List,boolean,long,int)>(i0, r1, r2, z0, l1, i2);

        return;
    }

