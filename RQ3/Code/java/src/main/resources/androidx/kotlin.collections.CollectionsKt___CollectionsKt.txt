kotlin.collections.CollectionsKt___CollectionsKt
    public void <init>()
    {
        kotlin.collections.CollectionsKt___CollectionsKt $r0;

        $r0 := @this: kotlin.collections.CollectionsKt___CollectionsKt;

        specialinvoke $r0.<kotlin.collections.CollectionsKt___CollectionsJvmKt: void <init>()>();

        return;
    }

    public static final boolean all(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static final boolean any(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        java.util.Iterator $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        return $z0;

     label1:
        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public static final boolean any(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label3:
        return 0;
    }

    private static final java.lang.Iterable asIterable(java.lang.Iterable)
    {
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        return $r0;
    }

    public static final kotlin.sequences.Sequence asSequence(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1 $r1;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1;

        specialinvoke $r1.<kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: void <init>(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static final java.util.Map associate(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        int $i0;
        java.util.LinkedHashMap $r2, r7;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associateBy(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        int $i0;
        java.util.LinkedHashMap $r2, r6;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        java.util.Map r7;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "keySelector");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    public static final java.util.Map associateBy(java.lang.Iterable, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0, $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.LinkedHashMap $r3, r7;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueTransform");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateByTo(java.lang.Iterable, java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Map;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.Map associateByTo(java.lang.Iterable, java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.util.Map $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;

        $r3 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Map;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        $r2 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.Map associateTo(java.lang.Iterable, java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Map;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.Map associateWith(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        java.util.Map r7;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    public static final java.util.Map associateWithTo(java.lang.Iterable, java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Map;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        goto label1;

     label2:
        return $r0;
    }

    public static final double averageOfByte(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        double $d0, $d1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        byte $b1;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $b1 = virtualinvoke $r3.<java.lang.Number: byte byteValue()>();

        $d1 = (double) $b1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label1;

        staticinvoke <kotlin.collections.CollectionsKt: void throwCountOverflow()>();

        goto label1;

     label2:
        if $i0 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfDouble(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        double $d0, $d1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label1;

        staticinvoke <kotlin.collections.CollectionsKt: void throwCountOverflow()>();

        goto label1;

     label2:
        if $i0 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfFloat(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        double $d0, $d1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $d1 = (double) $f0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label1;

        staticinvoke <kotlin.collections.CollectionsKt: void throwCountOverflow()>();

        goto label1;

     label2:
        if $i0 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfInt(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        double $d0, $d1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $d1 = (double) $i1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label1;

        staticinvoke <kotlin.collections.CollectionsKt: void throwCountOverflow()>();

        goto label1;

     label2:
        if $i0 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfLong(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        double $d0, $d1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        long $l1;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $l1 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        $d1 = (double) $l1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label1;

        staticinvoke <kotlin.collections.CollectionsKt: void throwCountOverflow()>();

        goto label1;

     label2:
        if $i0 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfShort(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        double $d0, $d1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        short $s1;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $s1 = virtualinvoke $r3.<java.lang.Number: short shortValue()>();

        $d1 = (double) $s1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label1;

        staticinvoke <kotlin.collections.CollectionsKt: void throwCountOverflow()>();

        goto label1;

     label2:
        if $i0 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final java.util.List chunked(java.lang.Iterable, int)
    {
        int $i0;
        java.util.List $r0;
        java.lang.Iterable $r1;

        $r1 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean)>($r1, $i0, $i0, 1);

        return $r0;
    }

    public static final java.util.List chunked(java.lang.Iterable, int, kotlin.jvm.functions.Function1)
    {
        int $i0;
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.Iterable $r2;

        $r2 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1)>($r2, $i0, $i0, 1, $r0);

        return $r1;
    }

    private static final java.lang.Object component1(java.util.List)
    {
        java.lang.Object $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        return $r0;
    }

    private static final java.lang.Object component2(java.util.List)
    {
        java.lang.Object $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        return $r0;
    }

    private static final java.lang.Object component3(java.util.List)
    {
        java.lang.Object $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(2);

        return $r0;
    }

    private static final java.lang.Object component4(java.util.List)
    {
        java.lang.Object $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(3);

        return $r0;
    }

    private static final java.lang.Object component5(java.util.List)
    {
        java.lang.Object $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(4);

        return $r0;
    }

    public static final boolean contains(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.Collection $r2;
        int $i0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r0);

        return $z0;

     label1:
        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)>($r1, $r0);

        if $i0 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static final int count(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        int $i0;
        java.util.Iterator $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;

     label1:
        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwCountOverflow()>();

        goto label2;

     label3:
        return $i0;
    }

    public static final int count(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        int $i0;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $z0 = $r1 instanceof java.util.Collection;

        $i0 = 0;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwCountOverflow()>();

        goto label2;

     label3:
        return $i0;
    }

    private static final int count(java.util.Collection)
    {
        int $i0;
        java.util.Collection $r0;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        return $i0;
    }

    public static final java.util.List distinct(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        java.util.List $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toMutableSet(java.lang.Iterable)>($r0);

        $r0 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        return $r2;
    }

    public static final java.util.List distinctBy(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, r8;
        java.lang.Iterable $r2;
        java.util.HashSet $r3, r7;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        java.util.List r9;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        r7 = new java.util.HashSet;

        $r3 = r7;

        specialinvoke r7.<java.util.HashSet: void <init>()>();

        r8 = new java.util.ArrayList;

        $r1 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        r9 = (java.util.List) $r1;

        return r9;
    }

    public static final java.util.List drop(java.lang.Iterable, int)
    {
        java.lang.Iterable $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r1;
        java.util.Collection $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4, r9;
        java.util.ListIterator $r5;
        java.util.Iterator $r6;
        java.lang.StringBuilder $r7, r10;
        java.lang.String $r8;
        java.lang.IllegalArgumentException r11;

        $r0 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = 0;

        if $i0 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label15;

        if $i0 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        return $r1;

     label03:
        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label10;

        $r2 = (java.util.Collection) $r0;

        $i2 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $i2 = $i2 - $i0;

        if $i2 > 0 goto label04;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label04:
        if $i2 != 1 goto label05;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.lang.Iterable)>($r0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r1;

     label05:
        r9 = new java.util.ArrayList;

        $r4 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>($i2);

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label11;

        $z0 = $r0 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label07;

        $r2 = (java.util.Collection) $r0;

        $i1 = interfaceinvoke $r2.<java.util.Collection: int size()>();

     label06:
        if $i0 >= $i1 goto label09;

        $r1 = (java.util.List) $r0;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $r1 = (java.util.List) $r0;

        $r5 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label08:
        $r6 = (java.util.Iterator) $r5;

        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r6 = (java.util.Iterator) $r5;

        $r3 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label08;

     label09:
        $r1 = (java.util.List) $r4;

        return $r1;

     label10:
        r9 = new java.util.ArrayList;

        $r4 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

     label11:
        $r6 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r3 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        if $i1 < $i0 goto label13;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label12;

     label13:
        $i1 = $i1 + 1;

        goto label12;

     label14:
        $r1 = (java.util.List) $r4;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)>($r1);

        return $r1;

     label15:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r11 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        goto label16;

     label16:
        throw r11;

     label17:
        $r1 = (java.util.List) $r4;

        return $r1;
    }

    public static final java.util.List dropLast(java.util.List, int)
    {
        java.util.List $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1, r3;
        java.lang.String $r2;
        java.lang.IllegalArgumentException r4;
        java.lang.Iterable r5;

        $r0 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        r5 = (java.lang.Iterable) $r0;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List take(java.lang.Iterable,int)>(r5, $i0);

        return $r0;

     label3:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw r4;
    }

    public static final java.util.List dropLastWhile(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean $z0;
        int $i0;
        java.util.ListIterator $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        java.lang.Iterable r5;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.ListIterator: int nextIndex()>();

        $i0 = $i0 + 1;

        r5 = (java.lang.Iterable) $r0;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List take(java.lang.Iterable,int)>(r5, $i0);

        return $r0;

     label2:
        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r0;
    }

    public static final java.util.List dropWhile(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r7;
        java.util.Iterator $r3;
        boolean $z0, $z1;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        java.util.List r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label1;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $z0 = 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.lang.Object elementAt(java.lang.Iterable, int)
    {
        int $i0;
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2;
        kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1 $r3;

        $r0 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r1 = (java.util.List) $r0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        return $r2;

     label1:
        $r3 = new kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1;

        specialinvoke $r3.<kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: void <init>(int)>($i0);

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object elementAtOrElse(java.lang.Iterable,int,kotlin.jvm.functions.Function1)>($r0, $i0, $r3);

        return $r2;
    }

    private static final java.lang.Object elementAt(java.util.List, int)
    {
        int $i0;
        java.lang.Object $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        return $r0;
    }

    public static final java.lang.Object elementAtOrElse(java.lang.Iterable, int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        java.util.Iterator $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        $z0 = $r1 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r2 = (java.util.List) $r1;

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r2);

        if $i0 > $i1 goto label1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        return $r3;

     label1:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        return $r3;

     label2:
        if $i0 >= 0 goto label3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        return $r3;

     label3:
        $r5 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label4:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        if $i0 == $i2 goto label5;

        $i2 = $i2 + 1;

        goto label4;

     label5:
        return $r3;

     label6:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        return $r3;
    }

    private static final java.lang.Object elementAtOrElse(java.util.List, int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r1);

        if $i0 > $i1 goto label1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        return $r2;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return $r2;
    }

    public static final java.lang.Object elementAtOrNull(java.lang.Iterable, int)
    {
        int $i0, $i1;
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.Iterator $r3;

        $r0 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r1 = (java.util.List) $r0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object getOrNull(java.util.List,int)>($r1, $i0);

        return $r2;

     label1:
        if $i0 >= 0 goto label2;

        return null;

     label2:
        $r3 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i0 == $i1 goto label4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r2;

     label5:
        return null;
    }

    private static final java.lang.Object elementAtOrNull(java.util.List, int)
    {
        int $i0;
        java.lang.Object $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object getOrNull(java.util.List,int)>($r1, $i0);

        return $r0;
    }

    public static final java.util.List filter(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r7;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterIndexed(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r8;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Boolean $r7;
        java.util.Collection r9;
        java.util.List r10;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        r8 = new java.util.ArrayList;

        $r2 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        r9 = (java.util.Collection) $r2;

        interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label3;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        r10 = (java.util.List) $r2;

        return r10;
    }

    public static final java.util.Collection filterIndexedTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Boolean $r7;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label3;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return $r0;
    }

    public static final java.util.List filterIsInstance(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.ArrayList $r1, r4;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.util.Collection r5;
        java.util.List r6;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r4 = new java.util.ArrayList;

        $r1 = r4;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "R");

        $z0 = $r3 instanceof java.lang.Object;

        if $z0 == 0 goto label1;

        r5 = (java.util.Collection) $r1;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        r6 = (java.util.List) $r1;

        return r6;
    }

    public static final java.util.Collection filterIsInstanceTo(java.lang.Iterable, java.util.Collection)
    {
        java.util.Collection $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "R");

        $z0 = $r3 instanceof java.lang.Object;

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.List filterNot(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r7;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterNotNull(java.lang.Iterable)
    {
        java.util.Collection $r0;
        java.lang.Iterable $r1;
        java.util.List $r2;
        java.util.ArrayList r3;

        $r1 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r0 = (java.util.Collection) r3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection filterNotNullTo(java.lang.Iterable,java.util.Collection)>($r1, $r0);

        $r2 = (java.util.List) $r0;

        return $r2;
    }

    public static final java.util.Collection filterNotNullTo(java.lang.Iterable, java.util.Collection)
    {
        java.util.Collection $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r3 == null goto label1;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.Collection filterNotTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.Collection filterTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r0;
    }

    private static final java.lang.Object find(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        return $r3;

     label2:
        return null;
    }

    private static final java.lang.Object findLast(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3, $r4, $r5;
        boolean $z0;
        java.lang.Boolean $r6;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = null;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r3 = $r4;

        goto label1;

     label2:
        return $r3;
    }

    private static final java.lang.Object findLast(java.util.List, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        int $i0;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        return $r3;

     label2:
        return null;
    }

    public static final java.lang.Object first(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.Iterator $r3;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r1 = (java.util.List) $r0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r1);

        return $r2;

     label1:
        $r3 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        return $r2;

     label2:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection is empty.");

        throw $r4;
    }

    public static final java.lang.Object first(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;
        java.util.NoSuchElementException $r6;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        return $r3;

     label2:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection contains no element matching the predicate.");

        goto label3;

     label3:
        throw $r6;
    }

    public static final java.lang.Object first(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        return $r1;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("List is empty.");

        throw $r2;
    }

    private static final java.lang.Object firstNotNullOf(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = $r3;

        if $r3 == null goto label1;

        goto label3;

     label2:
        $r4 = null;

     label3:
        if $r4 == null goto label4;

        return $r4;

     label4:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No element of the collection was transformed to a non-null value.");

        goto label5;

     label5:
        throw $r5;
    }

    private static final java.lang.Object firstNotNullOfOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        if $r3 == null goto label1;

        return $r3;

     label2:
        return null;
    }

    public static final java.lang.Object firstOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.Iterator $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r1 = (java.util.List) $r0;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = (java.util.List) $r0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        return $r2;

     label2:
        $r3 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return null;

     label3:
        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }

    public static final java.lang.Object firstOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        return $r3;

     label2:
        return null;
    }

    public static final java.lang.Object firstOrNull(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        return $r1;
    }

    public static final java.util.List flatMap(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r5;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r1 = (java.lang.Iterable) $r4;

        r6 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r6, $r1);

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    private static final java.util.List flatMapIndexedIterable(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r6;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r1 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r1);

        $i1 = $i0;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r2 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r0, $r2);

        $i1 = $i0;

        goto label1;

     label3:
        return $r0;
    }

    private static final java.util.List flatMapIndexedSequence(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r7;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        kotlin.sequences.Sequence $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r6 = (kotlin.sequences.Sequence) $r4;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>(r8, $r6);

        $i1 = $i0;

        goto label1;

     label3:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.Collection flatMapIndexedSequenceTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        kotlin.sequences.Sequence $r6;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r6 = (kotlin.sequences.Sequence) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>($r0, $r6);

        $i1 = $i0;

        goto label1;

     label3:
        return $r0;
    }

    public static final java.util.List flatMapSequence(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r6;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        kotlin.sequences.Sequence $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r5 = (kotlin.sequences.Sequence) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>(r7, $r5);

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.Collection flatMapSequenceTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        kotlin.sequences.Sequence $r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r5 = (kotlin.sequences.Sequence) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>($r0, $r5);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.Collection flatMapTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r2 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r0, $r2);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.lang.Object fold(java.lang.Iterable, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Iterable $r1;
        java.lang.Object $r2, $r4;
        java.util.Iterator $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r4);

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(java.lang.Iterable, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        int $i0, $i1;
        java.lang.Iterable $r1;
        java.lang.Object $r2, $r4;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Integer $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r4);

        $i1 = $i0;

        goto label1;

     label3:
        return $r2;
    }

    public static final java.lang.Object foldRight(java.util.List, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.List $r1;
        java.lang.Object $r2, $r4;
        boolean $z0;
        int $i0;
        java.util.ListIterator $r3;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r3.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.ListIterator: java.lang.Object previous()>();

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r2);

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(java.util.List, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.util.List $r1;
        java.lang.Object $r2, $r5;
        boolean $z0;
        int $i0;
        java.util.ListIterator $r3;
        java.lang.Integer $r4;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r3.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke $r3.<java.util.ListIterator: int previousIndex()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r3.<java.util.ListIterator: java.lang.Object previous()>();

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r2);

        goto label1;

     label2:
        return $r2;
    }

    public static final void forEach(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "action");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "action");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i0;

        goto label1;

     label3:
        return;
    }

    private static final java.lang.Object getOrElse(java.util.List, int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r1);

        if $i0 > $i1 goto label1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        return $r2;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return $r2;
    }

    public static final java.lang.Object getOrNull(java.util.List, int)
    {
        int $i0, $i1;
        java.util.List $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

        if $i0 > $i1 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        return $r1;

     label1:
        return null;
    }

    public static final java.util.Map groupBy(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.LinkedHashMap $r2, r9;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "keySelector");

        r9 = new java.util.LinkedHashMap;

        $r2 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r2;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r2;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label3:
        r11 = (java.util.Map) $r2;

        return r11;
    }

    public static final java.util.Map groupBy(java.lang.Iterable, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0, $r1;
        java.lang.Iterable $r2;
        java.util.LinkedHashMap $r3, r10;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7, $r8;
        java.util.List $r9;
        java.util.ArrayList r11;
        java.util.Map r12;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueTransform");

        r10 = new java.util.LinkedHashMap;

        $r3 = r10;

        specialinvoke r10.<java.util.LinkedHashMap: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        r12 = (java.util.Map) $r3;

        $r7 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = $r7;

        if $r7 != null goto label2;

        r11 = new java.util.ArrayList;

        $r8 = r11;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

        r12 = (java.util.Map) $r3;

        interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

     label2:
        $r9 = (java.util.List) $r8;

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label3:
        r12 = (java.util.Map) $r3;

        return r12;
    }

    public static final java.util.Map groupByTo(java.lang.Iterable, java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Map;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label3:
        return $r0;
    }

    public static final java.util.Map groupByTo(java.lang.Iterable, java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.util.Map $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7, $r8;
        java.util.List $r9;
        java.util.ArrayList r10;

        $r3 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Map;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        $r2 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = $r7;

        if $r7 != null goto label2;

        r10 = new java.util.ArrayList;

        $r8 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

     label2:
        $r9 = (java.util.List) $r8;

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label3:
        return $r0;
    }

    public static final kotlin.collections.Grouping groupingBy(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1 $r2;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $r2 = new kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1;

        specialinvoke $r2.<kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: void <init>(java.lang.Iterable,kotlin.jvm.functions.Function1)>($r0, $r1);

        return $r2;
    }

    public static final int indexOf(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Object $r0, $r4;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.List $r2;
        int $i0;
        java.util.Iterator $r3;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $z0 = $r1 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r2 = (java.util.List) $r1;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>($r0);

        return $i0;

     label1:
        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i0 >= 0 goto label3;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label3:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, $r4);

        if $z0 == 0 goto label4;

        return $i0;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        return -1;
    }

    public static final int indexOf(java.util.List, java.lang.Object)
    {
        java.lang.Object $r0;
        int $i0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = interfaceinvoke $r1.<java.util.List: int indexOf(java.lang.Object)>($r0);

        return $i0;
    }

    public static final int indexOfFirst(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        int $i0;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        return $i0;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return -1;
    }

    public static final int indexOfFirst(java.util.List, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        int $i0;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = -1;

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        $i0 = $i1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return $i0;
    }

    public static final int indexOfLast(java.util.List, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        int $i0;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.ListIterator: int nextIndex()>();

        return $i0;

     label2:
        return -1;
    }

    public static final java.util.Set intersect(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable $r0, $r2;
        java.util.Set $r1;
        java.util.Collection r3;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toMutableSet(java.lang.Iterable)>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(java.lang.Iterable, java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.Appendable $r0;
        java.lang.CharSequence $r1, $r2, $r3, $r6;
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r4;
        java.lang.Iterable $r5;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;

        $r5 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Appendable;

        $r1 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r2 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r3 := @parameter6: java.lang.CharSequence;

        $r4 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "truncated");

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $r7 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $i1 = $i1 + 1;

        if $i1 <= 1 goto label2;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r1);

     label2:
        if $i0 < 0 goto label3;

        if $i1 > $i0 goto label4;

     label3:
        staticinvoke <kotlin.text.StringsKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)>($r0, $r8, $r4);

        goto label1;

     label4:
        if $i0 < 0 goto label5;

        if $i1 <= $i0 goto label5;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

     label5:
        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

        return $r0;
    }

    public static java.lang.Appendable joinTo$default(java.lang.Iterable, java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Iterable $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static final java.lang.String joinToString(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        java.lang.Iterable $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: java.lang.Iterable;

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static java.lang.String joinToString$default(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        java.lang.Iterable $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: java.lang.Iterable;

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static final java.lang.Object last(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.Iterator $r3;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r1 = (java.util.List) $r0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r1);

        return $r2;

     label1:
        $r3 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        goto label2;

     label3:
        return $r2;

     label4:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection is empty.");

        goto label5;

     label5:
        throw $r4;
    }

    public static final java.lang.Object last(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.Boolean $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = null;

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        $z0 = 1;

        $r3 = $r4;

        goto label1;

     label2:
        if $z0 == 0 goto label3;

        return $r3;

     label3:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r7;
    }

    public static final java.lang.Object last(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;
        int $i0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        return $r1;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("List is empty.");

        throw $r2;
    }

    public static final java.lang.Object last(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;
        java.util.NoSuchElementException $r6;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        return $r3;

     label2:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>(java.lang.String)>("List contains no element matching the predicate.");

        goto label3;

     label3:
        throw $r6;
    }

    public static final int lastIndexOf(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Object $r0, $r4;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.List $r2;
        int $i0, $i1;
        java.util.Iterator $r3;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $z0 = $r1 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r2 = (java.util.List) $r1;

        $i0 = interfaceinvoke $r2.<java.util.List: int lastIndexOf(java.lang.Object)>($r0);

        return $i0;

     label1:
        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = -1;

        $i1 = 0;

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i1 >= 0 goto label3;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label3:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, $r4);

        if $z0 == 0 goto label4;

        $i0 = $i1;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        return $i0;
    }

    public static final int lastIndexOf(java.util.List, java.lang.Object)
    {
        java.lang.Object $r0;
        int $i0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = interfaceinvoke $r1.<java.util.List: int lastIndexOf(java.lang.Object)>($r0);

        return $i0;
    }

    public static final java.lang.Object lastOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.List $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        java.util.Iterator $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r1 = (java.util.List) $r0;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = (java.util.List) $r0;

        $r2 = (java.util.List) $r0;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        return $r3;

     label2:
        $r4 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return null;

     label3:
        $r3 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        goto label4;

     label5:
        return $r3;
    }

    public static final java.lang.Object lastOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3, $r4, $r5;
        boolean $z0;
        java.lang.Boolean $r6;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = null;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r3 = $r4;

        goto label1;

     label2:
        return $r3;
    }

    public static final java.lang.Object lastOrNull(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        return $r1;
    }

    public static final java.lang.Object lastOrNull(java.util.List, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        int $i0;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        return $r3;

     label2:
        return null;
    }

    public static final java.util.List map(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r5;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List mapIndexed(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r6;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i0;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexedNotNull(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r6;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $r4 == null goto label3;

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label3;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.Collection mapIndexedNotNullTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $r4 == null goto label3;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label3;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return $r0;
    }

    public static final java.util.Collection mapIndexedTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r4);

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i0;

        goto label1;

     label3:
        return $r0;
    }

    public static final java.util.List mapNotNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r5;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        if $r4 == null goto label1;

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.Collection mapNotNullTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        if $r4 == null goto label1;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.Collection mapTo(java.lang.Iterable, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Collection $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.lang.Object maxByOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r6;
        java.lang.Comparable $r5, $r7;
        int $i0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = $r3;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r3;

     label2:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Comparable) $r3;

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r7 = (java.lang.Comparable) $r6;

        $i0 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r3;

        $r5 = $r7;

        goto label4;

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        goto label3;

     label5:
        return $r4;
    }

    public static final java.lang.Object maxByOrThrow(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r6;
        java.lang.Comparable $r5, $r7;
        int $i0;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = $r3;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r3;

     label1:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Comparable) $r3;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r7 = (java.lang.Comparable) $r6;

        $i0 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r3;

        $r5 = $r7;

        goto label3;

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        goto label2;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final double maxOf(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        java.util.NoSuchElementException $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label1;

     label2:
        return $d0;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r5;
    }

    private static final float maxOf(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        java.util.NoSuchElementException $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label1;

     label2:
        return $f0;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r5;
    }

    private static final java.lang.Comparable maxOf(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r5;
        int $i0;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Comparable) $r3;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i0 >= 0 goto label1;

        $r4 = $r5;

        goto label1;

     label2:
        return $r4;

     label3:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r6;
    }

    private static final java.lang.Comparable maxOfOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r5;
        int $i0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Comparable) $r3;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i0 >= 0 goto label2;

        $r4 = $r5;

        goto label2;

     label3:
        return $r4;
    }

    private static final java.lang.Double maxOfOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        java.lang.Double $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label2;

     label3:
        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r5;
    }

    private static final java.lang.Float maxOfOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        java.lang.Float $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label2;

     label3:
        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r5;
    }

    private static final java.lang.Object maxOfWith(java.lang.Iterable, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        int $i0;
        java.util.NoSuchElementException $r6;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label1;

        $r4 = $r5;

        goto label1;

     label2:
        return $r4;

     label3:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r6;
    }

    private static final java.lang.Object maxOfWithOrNull(java.lang.Iterable, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        int $i0;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label2;

        $r4 = $r5;

        goto label2;

     label3:
        return $r4;
    }

    public static final java.lang.Comparable maxOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Comparable $r3, $r4;
        int $i0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Comparable) $r2;

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 >= 0 goto label2;

        $r3 = $r4;

        goto label2;

     label3:
        return $r3;
    }

    public static final java.lang.Double maxOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0, $d1;
        java.lang.Double $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label2;

     label3:
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r4;
    }

    public static final java.lang.Float maxOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0, $f1;
        java.lang.Float $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label2;

     label3:
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r4;
    }

    public static final double maxOrThrow(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0, $d1;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label1;

     label2:
        return $d0;

     label3:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r4;
    }

    public static final float maxOrThrow(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0, $f1;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label1;

     label2:
        return $f0;

     label3:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r4;
    }

    public static final java.lang.Comparable maxOrThrow(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Comparable $r3, $r4;
        int $i0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Comparable) $r2;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 >= 0 goto label1;

        $r3 = $r4;

        goto label1;

     label2:
        return $r3;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.lang.Object maxWithOrNull(java.lang.Iterable, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        int $i0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $i0 >= 0 goto label2;

        $r3 = $r4;

        goto label2;

     label3:
        return $r3;
    }

    public static final java.lang.Object maxWithOrThrow(java.lang.Iterable, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        int $i0;
        java.util.NoSuchElementException $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $i0 >= 0 goto label1;

        $r3 = $r4;

        goto label1;

     label2:
        return $r3;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.lang.Object minByOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r6;
        java.lang.Comparable $r5, $r7;
        int $i0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = $r3;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r3;

     label2:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Comparable) $r3;

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r7 = (java.lang.Comparable) $r6;

        $i0 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r3;

        $r5 = $r7;

        goto label4;

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        goto label3;

     label5:
        return $r4;
    }

    public static final java.lang.Object minByOrThrow(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r6;
        java.lang.Comparable $r5, $r7;
        int $i0;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = $r3;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r3;

     label1:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Comparable) $r3;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r7 = (java.lang.Comparable) $r6;

        $i0 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r3;

        $r5 = $r7;

        goto label3;

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        goto label2;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final double minOf(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        java.util.NoSuchElementException $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label1;

     label2:
        return $d0;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r5;
    }

    private static final float minOf(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        java.util.NoSuchElementException $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label1;

     label2:
        return $f0;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r5;
    }

    private static final java.lang.Comparable minOf(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r5;
        int $i0;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Comparable) $r3;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i0 <= 0 goto label1;

        $r4 = $r5;

        goto label1;

     label2:
        return $r4;

     label3:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r6;
    }

    private static final java.lang.Comparable minOfOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r5;
        int $i0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Comparable) $r3;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i0 <= 0 goto label2;

        $r4 = $r5;

        goto label2;

     label3:
        return $r4;
    }

    private static final java.lang.Double minOfOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        java.lang.Double $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label2;

     label3:
        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r5;
    }

    private static final java.lang.Float minOfOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        java.lang.Float $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label2;

     label3:
        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r5;
    }

    private static final java.lang.Object minOfWith(java.lang.Iterable, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        int $i0;
        java.util.NoSuchElementException $r6;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label1;

        $r4 = $r5;

        goto label1;

     label2:
        return $r4;

     label3:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r6;
    }

    private static final java.lang.Object minOfWithOrNull(java.lang.Iterable, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        int $i0;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label2;

        $r4 = $r5;

        goto label2;

     label3:
        return $r4;
    }

    public static final java.lang.Comparable minOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Comparable $r3, $r4;
        int $i0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Comparable) $r2;

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 <= 0 goto label2;

        $r3 = $r4;

        goto label2;

     label3:
        return $r3;
    }

    public static final java.lang.Double minOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0, $d1;
        java.lang.Double $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label2;

     label3:
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r4;
    }

    public static final java.lang.Float minOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0, $f1;
        java.lang.Float $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label2;

     label3:
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r4;
    }

    public static final double minOrThrow(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0, $d1;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label1;

     label2:
        return $d0;

     label3:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r4;
    }

    public static final float minOrThrow(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0, $f1;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label1;

     label2:
        return $f0;

     label3:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r4;
    }

    public static final java.lang.Comparable minOrThrow(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Comparable $r3, $r4;
        int $i0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Comparable) $r2;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 <= 0 goto label1;

        $r3 = $r4;

        goto label1;

     label2:
        return $r3;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.lang.Object minWithOrNull(java.lang.Iterable, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        int $i0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $i0 <= 0 goto label2;

        $r3 = $r4;

        goto label2;

     label3:
        return $r3;
    }

    public static final java.lang.Object minWithOrThrow(java.lang.Iterable, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        int $i0;
        java.util.NoSuchElementException $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $i0 <= 0 goto label1;

        $r3 = $r4;

        goto label1;

     label2:
        return $r3;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.util.List minus(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable $r0, $r1;
        java.util.Collection $r2, r8;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        java.util.Iterator $r5;
        java.lang.Object $r6;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $r2 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable)>($r1, $r0);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        return $r3;

     label1:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        r8 = (java.util.Collection) $r4;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List minus(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Object $r0, $r4;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r5;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0, $z1, $z2;
        java.util.Collection r6;
        java.util.List r7;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = 1;

        if $z0 != 0 goto label2;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r0);

        if $z2 == 0 goto label2;

        $z0 = 1;

        $z1 = 0;

     label2:
        if $z1 == 0 goto label1;

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List minus(java.lang.Iterable, kotlin.sequences.Sequence)
    {
        java.lang.Iterable $r0;
        kotlin.sequences.Sequence $r1;
        java.util.Collection $r2, r8;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        java.util.Iterator $r5;
        java.lang.Object $r6;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $r2 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperation(kotlin.sequences.Sequence)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        return $r3;

     label1:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        r8 = (java.util.Collection) $r4;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List minus(java.lang.Iterable, java.lang.Object[])
    {
        java.lang.Iterable $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.util.List $r2;
        java.util.Collection $r3, r8;
        java.util.ArrayList $r4, r7;
        java.util.Iterator $r5;
        java.lang.Object $r6;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        return $r2;

     label3:
        $r3 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperation(java.lang.Object[])>($r1);

        r7 = new java.util.ArrayList;

        $r4 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label4;

        r8 = (java.util.Collection) $r4;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label4;

     label5:
        $r2 = (java.util.List) $r4;

        return $r2;
    }

    private static final java.util.List minusElement(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.List $r1;
        java.lang.Iterable $r2;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object)>($r2, $r0);

        return $r1;
    }

    public static final boolean none(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        java.util.Iterator $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        return $z0;

     label1:
        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean none(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static final java.lang.Iterable onEach(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.lang.Iterable onEachIndexed(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = $i1 + 1;

        if $i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i0;

        goto label1;

     label3:
        return $r0;
    }

    public static final kotlin.Pair partition(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        java.lang.Iterable $r2;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        java.lang.Boolean $r7;
        kotlin.Pair $r8;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label3:
        $r8 = new kotlin.Pair;

        specialinvoke $r8.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r8;
    }

    public static final java.util.List plus(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable $r0, $r2;
        java.util.List $r1;
        boolean $z0;
        java.util.Collection $r3;
        java.util.ArrayList $r4, r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        $z0 = $r2 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = (java.util.Collection) $r2;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r3, $r0);

        return $r1;

     label1:
        r5 = new java.util.ArrayList;

        $r4 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.Collection) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r3, $r2);

        $r3 = (java.util.Collection) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r3, $r0);

        $r1 = (java.util.List) $r4;

        return $r1;
    }

    public static final java.util.List plus(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.List $r1;
        java.lang.Iterable $r2;
        boolean $z0;
        java.util.Collection $r3;
        java.util.ArrayList $r4, r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        $z0 = $r2 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = (java.util.Collection) $r2;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r3, $r0);

        return $r1;

     label1:
        r5 = new java.util.ArrayList;

        $r4 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.Collection) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r3, $r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $r1 = (java.util.List) $r4;

        return $r1;
    }

    public static final java.util.List plus(java.lang.Iterable, kotlin.sequences.Sequence)
    {
        java.lang.Iterable $r0;
        kotlin.sequences.Sequence $r1;
        java.util.ArrayList $r2, r3;
        java.util.Collection r4;
        java.util.List r5;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r4, $r0);

        r4 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>(r4, $r1);

        r5 = (java.util.List) $r2;

        return r5;
    }

    public static final java.util.List plus(java.lang.Iterable, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.util.List $r1;
        java.lang.Iterable $r2;
        boolean $z0;
        java.util.Collection $r3;
        java.util.ArrayList $r4, r5;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        $z0 = $r2 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = (java.util.Collection) $r2;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object[])>($r3, $r0);

        return $r1;

     label1:
        r5 = new java.util.ArrayList;

        $r4 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.Collection) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r3, $r2);

        $r3 = (java.util.Collection) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])>($r3, $r0);

        $r1 = (java.util.List) $r4;

        return $r1;
    }

    public static final java.util.List plus(java.util.Collection, java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Collection $r1, $r3;
        boolean $z0;
        java.util.ArrayList $r2, r4;
        int $i0, $i1;
        java.util.List r5;

        $r1 := @parameter0: java.util.Collection;

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        r4 = new java.util.ArrayList;

        $r2 = r4;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r3 = (java.util.Collection) $r0;

        $i1 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        $i0 = $i0 + $i1;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r1);

        $r1 = (java.util.Collection) $r0;

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r1);

        r5 = (java.util.List) $r2;

        return r5;

     label1:
        r4 = new java.util.ArrayList;

        $r2 = r4;

        specialinvoke r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        $r1 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r0);

        r5 = (java.util.List) $r2;

        return r5;
    }

    public static final java.util.List plus(java.util.Collection, java.lang.Object)
    {
        java.util.Collection $r0;
        java.lang.Object $r1;
        int $i0;
        java.util.ArrayList $r2, r3;
        java.util.List r4;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $i0 = $i0 + 1;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List plus(java.util.Collection, kotlin.sequences.Sequence)
    {
        java.util.Collection $r0;
        kotlin.sequences.Sequence $r1;
        int $i0;
        java.util.ArrayList $r2, r3;
        java.util.List r4;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $i0 = $i0 + 10;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r0);

        $r0 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>($r0, $r1);

        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List plus(java.util.Collection, java.lang.Object[])
    {
        java.util.Collection $r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r3;
        java.util.List r4;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i1 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $i0 = lengthof $r1;

        $i0 = $i1 + $i0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r0);

        $r0 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])>($r0, $r1);

        r4 = (java.util.List) $r2;

        return r4;
    }

    private static final java.util.List plusElement(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.List $r1;
        java.lang.Iterable $r2;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Object)>($r2, $r0);

        return $r1;
    }

    private static final java.util.List plusElement(java.util.Collection, java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.List $r1;
        java.util.Collection $r2;

        $r2 := @parameter0: java.util.Collection;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r2, $r0);

        return $r1;
    }

    private static final java.lang.Object random(java.util.Collection)
    {
        java.lang.Object $r0;
        java.util.Collection $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object random(java.util.Collection,kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Object random(java.util.Collection, kotlin.random.Random)
    {
        java.util.Collection $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        int $i0;
        java.lang.Object $r2;
        java.util.NoSuchElementException r3;
        java.lang.Iterable r4;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        r4 = (java.lang.Iterable) $r0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object elementAt(java.lang.Iterable,int)>(r4, $i0);

        return $r2;

     label1:
        r3 = new java.util.NoSuchElementException;

        specialinvoke r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection is empty.");

        throw r3;
    }

    private static final java.lang.Object randomOrNull(java.util.Collection)
    {
        java.lang.Object $r0;
        java.util.Collection $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object randomOrNull(java.util.Collection,kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Object randomOrNull(java.util.Collection, kotlin.random.Random)
    {
        java.util.Collection $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        int $i0;
        java.lang.Object $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        r3 = (java.lang.Iterable) $r0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object elementAt(java.lang.Iterable,int)>(r3, $i0);

        return $r2;
    }

    public static final java.lang.Object reduce(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.lang.UnsupportedOperationException $r5;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label1;

     label2:
        return $r3;

     label3:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty collection can\'t be reduced.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.lang.Object reduceIndexed(java.lang.Iterable, kotlin.jvm.functions.Function3)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r5;
        int $i0, $i1;
        java.lang.Integer $r4;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = 1;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i1 = $i0 + 1;

        if $i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r3, $r5);

        $i0 = $i1;

        goto label1;

     label3:
        return $r3;

     label4:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty collection can\'t be reduced.");

        goto label5;

     label5:
        throw $r6;
    }

    public static final java.lang.Object reduceIndexedOrNull(java.lang.Iterable, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r5;
        int $i0, $i1;
        java.lang.Integer $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = 1;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = $i0 + 1;

        if $i0 >= 0 goto label3;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label3:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r3, $r5);

        $i0 = $i1;

        goto label2;

     label4:
        return $r3;
    }

    public static final java.lang.Object reduceOrNull(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label2;

     label3:
        return $r3;
    }

    public static final java.lang.Object reduceRight(java.util.List, kotlin.jvm.functions.Function2)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;
        java.lang.UnsupportedOperationException $r5;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        goto label1;

     label2:
        return $r3;

     label3:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty list can\'t be reduced.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.lang.Object reduceRightIndexed(java.util.List, kotlin.jvm.functions.Function3)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r5;
        java.lang.Integer $r4;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke $r2.<java.util.ListIterator: int previousIndex()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r3);

        goto label1;

     label2:
        return $r3;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty list can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final java.lang.Object reduceRightIndexedOrNull(java.util.List, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.util.List $r1;
        int $i0;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r5;
        java.lang.Integer $r4;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r2.<java.util.ListIterator: int previousIndex()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r3);

        goto label2;

     label3:
        return $r3;
    }

    public static final java.lang.Object reduceRightOrNull(java.util.List, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.List $r1;
        int $i0;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        goto label2;

     label3:
        return $r3;
    }

    public static final java.lang.Iterable requireNoNulls(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r2 == null goto label2;

        goto label1;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null element found in ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label3:
        return $r0;
    }

    public static final java.util.List requireNoNulls(java.util.List)
    {
        java.util.List $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r2 == null goto label2;

        goto label1;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null element found in ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label3:
        return $r0;
    }

    public static final java.util.List reversed(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        int $i0;
        java.util.List $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 > 1 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        return $r2;

     label1:
        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.lang.Iterable)>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r2);

        return $r2;
    }

    public static final java.util.List runningFold(java.lang.Iterable, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.ArrayList $r1, r7;
        java.lang.Iterable $r2;
        java.lang.Object $r3, $r6;
        int $i0;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;

        $r2 := @parameter0: java.lang.Iterable;

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 9);

        if $i0 != 0 goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r4;

     label1:
        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r6);

        $r3 = $r6;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r4 = (java.util.List) $r1;

        return $r4;
    }

    public static final java.util.List runningFoldIndexed(java.lang.Iterable, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.util.ArrayList $r1, r8;
        int $i0, $i1;
        java.lang.Iterable $r2;
        java.lang.Object $r3, $r6;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Integer $r7;

        $r2 := @parameter0: java.lang.Iterable;

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 9);

        if $i0 != 0 goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r4;

     label1:
        r8 = new java.util.ArrayList;

        $r1 = r8;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r3, $r6);

        $r3 = $r6;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r4 = (java.util.List) $r1;

        return $r4;
    }

    public static final java.util.List runningReduce(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.ArrayList $r1, r7;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.util.List $r4;
        java.lang.Object $r5, $r6;
        int $i0;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r4;

     label1:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = $r5;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        $r6 = $r5;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        $r4 = (java.util.List) $r1;

        return $r4;
    }

    public static final java.util.List runningReduceIndexed(java.lang.Iterable, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.util.ArrayList $r1, r8;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.util.List $r4;
        java.lang.Object $r5, $r6;
        int $i0;
        java.lang.Integer $r7;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r4;

     label1:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = $r5;

        r8 = new java.util.ArrayList;

        $r1 = r8;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i0 = 1;

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, $r5);

        $r6 = $r5;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r4 = (java.util.List) $r1;

        return $r4;
    }

    public static final java.util.List scan(java.lang.Iterable, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.ArrayList $r1, r7;
        java.lang.Iterable $r2;
        java.lang.Object $r3, $r6;
        int $i0;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;

        $r2 := @parameter0: java.lang.Iterable;

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 9);

        if $i0 != 0 goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r4;

     label1:
        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r6);

        $r3 = $r6;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r4 = (java.util.List) $r1;

        return $r4;
    }

    public static final java.util.List scanIndexed(java.lang.Iterable, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.util.ArrayList $r1, r8;
        int $i0, $i1;
        java.lang.Iterable $r2;
        java.lang.Object $r3, $r6;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Integer $r7;

        $r2 := @parameter0: java.lang.Iterable;

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 9);

        if $i0 != 0 goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r4;

     label1:
        r8 = new java.util.ArrayList;

        $r1 = r8;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r3, $r6);

        $r3 = $r6;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r4 = (java.util.List) $r1;

        return $r4;
    }

    public static final void shuffle(java.util.List, kotlin.random.Random)
    {
        java.util.List $r0;
        kotlin.random.Random $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

     label1:
        if $i0 <= 0 goto label2;

        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i1);

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r2);

        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    public static final java.lang.Object single(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.Iterator $r3;
        java.lang.IllegalArgumentException $r4;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r1 = (java.util.List) $r0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object single(java.util.List)>($r1);

        return $r2;

     label1:
        $r3 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r2;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Collection has more than one element.");

        throw $r4;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection is empty.");

        throw $r5;
    }

    public static final java.lang.Object single(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.lang.Iterable $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.Boolean $r6;
        java.lang.IllegalArgumentException $r7;
        java.util.NoSuchElementException $r8;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = null;

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        if $z0 != 0 goto label2;

        $z0 = 1;

        $r3 = $r4;

        goto label1;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Collection contains more than one matching element.");

        throw $r7;

     label3:
        if $z0 == 0 goto label4;

        return $r3;

     label4:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection contains no element matching the predicate.");

        goto label5;

     label5:
        throw $r8;
    }

    public static final java.lang.Object single(java.util.List)
    {
        java.util.List $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List has more than one element.");

        throw $r1;

     label2:
        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        return $r2;

     label3:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("List is empty.");

        throw $r3;
    }

    public static final java.lang.Object singleOrNull(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.List $r1;
        int $i0;
        java.lang.Object $r2;
        java.util.Iterator $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r1 = (java.util.List) $r0;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 1 goto label4;

        $r1 = (java.util.List) $r0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        return $r2;

     label1:
        $r3 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        return null;

     label3:
        return $r2;

     label4:
        return null;
    }

    public static final java.lang.Object singleOrNull(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0, $z1;
        java.lang.Object $r3, $r4, $r5;
        java.lang.Boolean $r6;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = 0;

        $r3 = null;

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $z0 = 1;

        $r3 = $r4;

        goto label1;

     label3:
        if $z0 != 0 goto label4;

        return null;

     label4:
        return $r3;
    }

    public static final java.lang.Object singleOrNull(java.util.List)
    {
        java.util.List $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        return $r1;

     label1:
        return null;
    }

    public static final java.util.List slice(java.util.List, java.lang.Iterable)
    {
        java.util.ArrayList $r0, r6;
        java.util.List $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label1:
        r6 = new java.util.ArrayList;

        $r0 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label2;

     label3:
        $r1 = (java.util.List) $r0;

        return $r1;
    }

    public static final java.util.List slice(java.util.List, kotlin.ranges.IntRange)
    {
        java.util.List $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;
        java.lang.Iterable r3;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = interfaceinvoke $r0.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

        r3 = (java.lang.Iterable) $r0;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r0;
    }

    public static final void sortBy(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r2;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $r2 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r2.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r1);

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r0, $r2);

     label1:
        return;
    }

    public static final void sortByDescending(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r2;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $r2 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r2.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r1);

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r0, $r2);

     label1:
        return;
    }

    public static final void sortDescending(java.util.List)
    {
        java.util.List $r0;
        java.util.Comparator $r1;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.util.Comparator reverseOrder()>();

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r0, $r1);

        return;
    }

    public static final java.util.List sorted(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        int $i0;
        java.util.List $r2;
        java.lang.Comparable[] $r3;
        java.lang.Object[] $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label2;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 > 1 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        return $r2;

     label1:
        $r1 = (java.util.Collection) $r0;

        $r3 = newarray (java.lang.Comparable)[0];

        $r4 = interfaceinvoke $r1.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.CollectionsKt___CollectionsKt.sorted>");

        $r3 = (java.lang.Comparable[]) $r4;

        $r4 = (java.lang.Object[]) $r3;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r4);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r4);

        return $r2;

     label2:
        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.lang.Iterable)>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void sort(java.util.List)>($r2);

        return $r2;
    }

    public static final java.util.List sortedBy(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.Iterable $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.Iterable $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedDescending(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Comparator $r1;
        java.util.List $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.util.Comparator reverseOrder()>();

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r0, $r1);

        return $r2;
    }

    public static final java.util.List sortedWith(java.lang.Iterable, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.Collection $r2;
        int $i0;
        java.util.List $r3;
        java.lang.Object[] $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label2;

        $r2 = (java.util.Collection) $r1;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        if $i0 > 1 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r1);

        return $r3;

     label1:
        $r2 = (java.util.Collection) $r1;

        $r4 = newarray (java.lang.Object)[0];

        $r4 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.CollectionsKt___CollectionsKt.sortedWith>");

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r4, $r0);

        $r3 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r4);

        return $r3;

     label2:
        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.lang.Iterable)>($r1);

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r3, $r0);

        return $r3;
    }

    public static final java.util.Set subtract(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable $r0, $r2;
        java.util.Set $r1;
        java.util.Collection r3;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toMutableSet(java.lang.Iterable)>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final int sumBy(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return $i0;
    }

    public static final double sumByDouble(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        double $d0, $d1;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        goto label1;

     label2:
        return $d0;
    }

    public static final int sumOfByte(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        byte $b1;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $b1 = virtualinvoke $r3.<java.lang.Number: byte byteValue()>();

        $i0 = $i0 + $b1;

        goto label1;

     label2:
        return $i0;
    }

    public static final double sumOfDouble(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        double $d0, $d1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        double $d0, $d1;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $d0 = 0.0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        goto label1;

     label2:
        return $d0;
    }

    public static final float sumOfFloat(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        float $f0, $f1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $f0 = 0.0F;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = $f0 + $f1;

        goto label1;

     label2:
        return $f0;
    }

    public static final int sumOfInt(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return $i0;
    }

    private static final int sumOfInt(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return $i0;
    }

    public static final long sumOfLong(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        long $l0, $l1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $l0 = 0L;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $l1 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        $l0 = $l0 + $l1;

        goto label1;

     label2:
        return $l0;
    }

    private static final long sumOfLong(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        long $l0, $l1;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $l0 = 0L;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $l1 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l0 = $l0 + $l1;

        goto label1;

     label2:
        return $l0;
    }

    public static final int sumOfShort(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        short $s1;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Number) $r2;

        $s1 = virtualinvoke $r3.<java.lang.Number: short shortValue()>();

        $i0 = $i0 + $s1;

        goto label1;

     label2:
        return $i0;
    }

    private static final int sumOfUInt(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        int $i0, $i1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (kotlin.UInt) $r3;

        $i1 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i0 = $i0 + $i1;

        $i0 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i0);

        goto label1;

     label2:
        return $i0;
    }

    private static final long sumOfULong(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        long $l0, $l1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (kotlin.ULong) $r3;

        $l1 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l0 = $l0 + $l1;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        goto label1;

     label2:
        return $l0;
    }

    public static final java.util.List take(java.lang.Iterable, int)
    {
        java.lang.Iterable $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r1;
        java.util.Collection $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4, r8;
        java.util.Iterator $r5;
        java.lang.StringBuilder $r6, r9;
        java.lang.String $r7;
        java.lang.IllegalArgumentException r10;

        $r0 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = 0;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label5;

        $r2 = (java.util.Collection) $r0;

        $i2 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        if $i0 < $i2 goto label4;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.lang.Iterable)>($r0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r1;

     label5:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r5 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        if $i1 != $i0 goto label6;

     label7:
        $r1 = (java.util.List) $r4;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)>($r1);

        return $r1;

     label8:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        goto label9;

     label9:
        throw r10;
    }

    public static final java.util.List takeLast(java.util.List, int)
    {
        java.util.List $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r1;
        java.util.ArrayList $r2, r6;
        java.util.ListIterator $r3;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;
        java.lang.Iterable r9;
        java.util.Iterator r10;

        $r0 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label10;

        if $i0 != 0 goto label03;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r0;

     label03:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 < $i1 goto label04;

        r9 = (java.lang.Iterable) $r0;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r9);

        return $r0;

     label04:
        if $i0 != 1 goto label05;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r0);

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r1);

        return $r0;

     label05:
        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $z0 = $r0 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label07;

        $i0 = $i1 - $i0;

     label06:
        if $i0 >= $i1 goto label09;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $i0 = $i1 - $i0;

        $r3 = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label08:
        r10 = (java.util.Iterator) $r3;

        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        r10 = (java.util.Iterator) $r3;

        $r1 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label08;

     label09:
        $r0 = (java.util.List) $r2;

        return $r0;

     label10:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label11;

     label11:
        throw r8;

     label12:
        $r0 = (java.util.List) $r2;

        return $r0;
    }

    public static final java.util.List takeLastWhile(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean $z0;
        int $i0, $i1;
        java.util.ListIterator $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        java.util.ArrayList $r5, r6;
        java.lang.Iterable r7;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r0;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r2.<java.util.ListIterator: int nextIndex()>();

        $i0 = $i0 - $i1;

        if $i0 != 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r0;

     label3:
        r6 = new java.util.ArrayList;

        $r5 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

     label4:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label4;

     label5:
        $r0 = (java.util.List) $r5;

        return $r0;

     label6:
        r7 = (java.lang.Iterable) $r0;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r7);

        return $r0;
    }

    public static final java.util.List takeWhile(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r2, r7;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        java.lang.Boolean $r6;
        java.util.List r8;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r8 = (java.util.List) $r2;

        return r8;

     label2:
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final boolean[] toBooleanArray(java.util.Collection)
    {
        java.util.Collection $r0;
        int $i0;
        boolean[] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = newarray (boolean)[$i0];

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $r1[$i0] = $z0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final byte[] toByteArray(java.util.Collection)
    {
        java.util.Collection $r0;
        int $i0;
        byte[] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        byte $b1;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = newarray (byte)[$i0];

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Number) $r3;

        $b1 = virtualinvoke $r4.<java.lang.Number: byte byteValue()>();

        $r1[$i0] = $b1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final char[] toCharArray(java.util.Collection)
    {
        java.util.Collection $r0;
        int $i0;
        char[] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Character $r4;
        char $c1;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = newarray (char)[$i0];

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Character) $r3;

        $c1 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        $r1[$i0] = $c1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(java.lang.Iterable, java.util.Collection)
    {
        java.util.Collection $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "destination");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r0;
    }

    public static final double[] toDoubleArray(java.util.Collection)
    {
        java.util.Collection $r0;
        int $i0;
        double[] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = newarray (double)[$i0];

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r1[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final float[] toFloatArray(java.util.Collection)
    {
        java.util.Collection $r0;
        int $i0;
        float[] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = newarray (float)[$i0];

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r1[$i0] = $f0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.HashSet toHashSet(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r0, 12);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final int[] toIntArray(java.util.Collection)
    {
        java.util.Collection $r0;
        int $i0, $i1;
        int[] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = newarray (int)[$i0];

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Number) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $r1[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.List toList(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        int $i0;
        java.util.List $r2;
        java.lang.Object $r3;
        java.util.Iterator $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label6;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = (java.util.Collection) $r0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.util.Collection)>($r1);

        return $r2;

     label2:
        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label3;

        $r2 = (java.util.List) $r0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        goto label4;

     label3:
        $r4 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label4:
        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r2;

     label5:
        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label6:
        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.lang.Iterable)>($r0);

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)>($r2);

        return $r2;
    }

    public static final long[] toLongArray(java.util.Collection)
    {
        java.util.Collection $r0;
        int $i0;
        long[] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        long $l1;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = newarray (long)[$i0];

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Number) $r3;

        $l1 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $r1[$i0] = $l1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.List toMutableList(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        java.util.List $r2;
        java.util.ArrayList r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.util.Collection)>($r1);

        return $r2;

     label1:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)>($r0, $r1);

        $r2 = (java.util.List) $r1;

        return $r2;
    }

    public static final java.util.List toMutableList(java.util.Collection)
    {
        java.util.Collection $r0;
        java.util.ArrayList r1;
        java.util.List r2;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        r2 = (java.util.List) r1;

        return r2;
    }

    public static final java.util.Set toMutableSet(java.lang.Iterable)
    {
        java.util.Collection $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.util.LinkedHashSet $r3, r4;
        java.util.Set r5;

        $r1 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = new java.util.LinkedHashSet;

        $r2 = $r3;

        $r0 = (java.util.Collection) $r1;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r0);

        goto label2;

     label1:
        r4 = new java.util.LinkedHashSet;

        specialinvoke r4.<java.util.LinkedHashSet: void <init>()>();

        $r0 = (java.util.Collection) r4;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)>($r1, $r0);

        $r2 = (java.util.Set) $r0;

     label2:
        r5 = (java.util.Set) $r2;

        return r5;
    }

    public static final java.util.Set toSet(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        int $i0;
        java.util.Set $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        java.util.Iterator $r5;
        java.util.LinkedHashSet r6;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label6;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r6 = new java.util.LinkedHashSet;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r6.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r6;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label3;

        $r3 = (java.util.List) $r0;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        goto label4;

     label3:
        $r5 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label4:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r4);

        return $r2;

     label5:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;

     label6:
        r6 = new java.util.LinkedHashSet;

        specialinvoke r6.<java.util.LinkedHashSet: void <init>()>();

        $r1 = (java.util.Collection) r6;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)>($r2);

        return $r2;
    }

    public static final short[] toShortArray(java.util.Collection)
    {
        java.util.Collection $r0;
        int $i0;
        short[] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Number $r4;
        short $s1;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = newarray (short)[$i0];

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Number) $r3;

        $s1 = virtualinvoke $r4.<java.lang.Number: short shortValue()>();

        $r1[$i0] = $s1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Set union(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable $r0, $r2;
        java.util.Set $r1;
        java.util.Collection r3;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toMutableSet(java.lang.Iterable)>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.List windowed(java.lang.Iterable, int, int, boolean)
    {
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        boolean $z0, $z1;
        java.util.ArrayList $r0, $r1, r6;
        java.lang.Iterable $r2;
        java.util.List $r3;
        byte $b5;
        java.lang.Object $r4;
        java.util.Iterator $r5;

        $r2 := @parameter0: java.lang.Iterable;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.collections.SlidingWindowKt: void checkWindowSizeStep(int,int)>($i2, $i0);

        $z1 = $r2 instanceof java.util.RandomAccess;

        if $z1 == 0 goto label10;

        $z1 = $r2 instanceof java.util.List;

        if $z1 == 0 goto label10;

        $r3 = (java.util.List) $r2;

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i4 = $i3 / $i0;

        $i1 = $i3 % $i0;

        if $i1 != 0 goto label01;

        $b5 = 0;

        goto label02;

     label01:
        $b5 = 1;

     label02:
        $r1 = new java.util.ArrayList;

        $r0 = $r1;

        $i4 = $i4 + $b5;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i4);

        $i4 = 0;

     label03:
        if $i4 < 0 goto label04;

        if $i4 >= $i3 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        if $z1 == 0 goto label09;

        $i1 = $i3 - $i4;

        $i6 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i2, $i1);

        if $i6 >= $i2 goto label06;

        if $z0 == 0 goto label13;

     label06:
        r6 = new java.util.ArrayList;

        $r1 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i6);

        $i7 = 0;

     label07:
        if $i7 >= $i6 goto label08;

        $r3 = (java.util.List) $r2;

        $i1 = $i7 + $i4;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i7 = $i7 + 1;

        goto label07;

     label08:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i4 = $i4 + $i0;

        goto label03;

     label09:
        $r3 = (java.util.List) $r0;

        return $r3;

     label10:
        $r1 = new java.util.ArrayList;

        $r0 = $r1;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r5 = staticinvoke <kotlin.collections.SlidingWindowKt: java.util.Iterator windowedIterator(java.util.Iterator,int,int,boolean,boolean)>($r5, $i2, $i0, $z0, 0);

     label11:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r4 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.List) $r4;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label11;

     label12:
        $r3 = (java.util.List) $r0;

        return $r3;

     label13:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List windowed(java.lang.Iterable, int, int, boolean, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, r7;
        java.lang.Iterable $r2;
        java.util.List $r3;
        byte $b5;
        kotlin.collections.MovingSubList $r4, r8;
        java.lang.Object $r5;
        java.util.Iterator $r6;

        $r2 := @parameter0: java.lang.Iterable;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r0 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        staticinvoke <kotlin.collections.SlidingWindowKt: void checkWindowSizeStep(int,int)>($i1, $i0);

        $z1 = $r2 instanceof java.util.RandomAccess;

        if $z1 == 0 goto label08;

        $z1 = $r2 instanceof java.util.List;

        if $z1 == 0 goto label08;

        $r3 = (java.util.List) $r2;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i3 = $i2 / $i0;

        $i4 = $i2 % $i0;

        if $i4 != 0 goto label01;

        $b5 = 0;

        goto label02;

     label01:
        $b5 = 1;

     label02:
        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i3 = $i3 + $b5;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i3);

        r8 = new kotlin.collections.MovingSubList;

        $r4 = r8;

        $r3 = (java.util.List) $r2;

        specialinvoke r8.<kotlin.collections.MovingSubList: void <init>(java.util.List)>($r3);

        $i3 = 0;

     label03:
        if $i3 < 0 goto label04;

        if $i3 >= $i2 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        if $z1 == 0 goto label07;

        $i4 = $i2 - $i3;

        $i4 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i1, $i4);

        if $z0 != 0 goto label06;

        if $i4 < $i1 goto label11;

     label06:
        $i4 = $i4 + $i3;

        virtualinvoke $r4.<kotlin.collections.MovingSubList: void move(int,int)>($i3, $i4);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i3 = $i3 + $i0;

        goto label03;

     label07:
        $r3 = (java.util.List) $r1;

        return $r3;

     label08:
        r7 = new java.util.ArrayList;

        $r1 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r6 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r6 = staticinvoke <kotlin.collections.SlidingWindowKt: java.util.Iterator windowedIterator(java.util.Iterator,int,int,boolean,boolean)>($r6, $i1, $i0, $z0, 1);

     label09:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r5 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.List) $r5;

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label09;

     label10:
        $r3 = (java.util.List) $r1;

        return $r3;

     label11:
        $r3 = (java.util.List) $r1;

        return $r3;
    }

    public static java.util.List windowed$default(java.lang.Iterable, int, int, boolean, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        java.util.List $r0;
        java.lang.Iterable $r1;
        boolean $z0;
        java.lang.Object $r2;

        $r1 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $r2 := @parameter5: java.lang.Object;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $i1 = 1;

     label1:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label2;

        $z0 = 0;

     label2:
        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean)>($r1, $i0, $i1, $z0);

        return $r0;
    }

    public static java.util.List windowed$default(java.lang.Iterable, int, int, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.Iterable $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r2 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r0 := @parameter4: kotlin.jvm.functions.Function1;

        $i2 := @parameter5: int;

        $r3 := @parameter6: java.lang.Object;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $i1 = 1;

     label1:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label2;

        $z0 = 0;

     label2:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1)>($r2, $i0, $i1, $z0, $r0);

        return $r1;
    }

    public static final java.lang.Iterable withIndex(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1;

        specialinvoke $r1.<kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: void <init>(java.lang.Iterable)>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.util.List zip(java.lang.Iterable, java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        java.lang.Iterable $r1, $r2;
        java.util.Iterator $r3, $r4;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r5, $r6;
        kotlin.Pair $r7;
        java.util.List r9;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        r8 = new java.util.ArrayList;

        $r0 = r8;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r6);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        r9 = (java.util.List) $r0;

        return r9;

     label3:
        r9 = (java.util.List) $r0;

        return r9;
    }

    public static final java.util.List zip(java.lang.Iterable, java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.ArrayList $r1, r8;
        java.lang.Iterable $r2, $r3;
        java.util.Iterator $r4, $r5;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r6, $r7;
        java.util.List r9;

        $r2 := @parameter0: java.lang.Iterable;

        $r3 := @parameter1: java.lang.Iterable;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        r8 = new java.util.ArrayList;

        $r1 = r8;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r7);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        r9 = (java.util.List) $r1;

        return r9;

     label3:
        r9 = (java.util.List) $r1;

        return r9;
    }

    public static final java.util.List zip(java.lang.Iterable, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r2 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $r5 = $r0[$i2];

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(java.lang.Iterable, java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        java.util.List r8;

        $r3 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Object[];

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $r6 = $r0[$i2];

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r6);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zipWithNext(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.util.List $r2;
        java.util.ArrayList $r3, r7;
        java.lang.Object $r4, $r5;
        kotlin.Pair $r6;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r2 = (java.util.List) $r3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r4 = $r5;

        goto label2;

     label3:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    public static final java.util.List zipWithNext(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        java.lang.Object $r5, $r6;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        $r3 = (java.util.List) $r4;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = $r5;

        goto label2;

     label3:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

