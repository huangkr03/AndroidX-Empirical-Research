androidx.compose.ui.node.BackwardsCompatNode
<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>
<androidx.compose.ui.node.BackwardsCompatNode: boolean invalidateCache>
<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.focus.FocusPropertiesModifier focusOrderElement>
<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.modifier.BackwardsCompatLocalMap _providedValues>
<androidx.compose.ui.node.BackwardsCompatNode: java.util.HashSet readValues>
<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.layout.LayoutCoordinates lastOnPlacedCoordinates>
    public void <init>(androidx.compose.ui.Modifier$Element)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.Modifier$Element r1;
        int $i0;
        java.util.HashSet $r2;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 := @parameter0: androidx.compose.ui.Modifier$Element;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        specialinvoke r0.<androidx.compose.ui.Modifier$Node: void <init>()>();

        $i0 = staticinvoke <androidx.compose.ui.node.NodeKindKt: int calculateNodeKindSetFrom(androidx.compose.ui.Modifier$Element)>(r1);

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void setKindSet$ui_release(int)>($i0);

        r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element> = r1;

        r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean invalidateCache> = 1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<androidx.compose.ui.node.BackwardsCompatNode: java.util.HashSet readValues> = $r2;

        return;
    }

    public final androidx.compose.ui.Modifier$Element getElement()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.Modifier$Element $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        return $r1;
    }

    public final void setElement(androidx.compose.ui.Modifier$Element)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.Modifier$Element r1;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 := @parameter0: androidx.compose.ui.Modifier$Element;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $z0 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void uninitializeModifier()>();

     label1:
        r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element> = r1;

        $i0 = staticinvoke <androidx.compose.ui.node.NodeKindKt: int calculateNodeKindSetFrom(androidx.compose.ui.Modifier$Element)>(r1);

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void setKindSet$ui_release(int)>($i0);

        $z1 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void initializeModifier(boolean)>(0);

     label2:
        return;
    }

    public void onAttach()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        specialinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void initializeModifier(boolean)>(1);

        return;
    }

    public void onDetach()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        specialinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void uninitializeModifier()>();

        return;
    }

    private final void uninitializeModifier()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.Modifier$Element r1;
        boolean $z0, $z1, $z2, $z3, $z5, $z7;
        androidx.compose.ui.node.Nodes $r2, $r25;
        int $i0, $i1, i2, i3, $i4, $i5;
        androidx.compose.ui.node.DelegatableNode $r3, $r5, $r13;
        androidx.compose.ui.node.Owner $r4, $r6, $r14;
        androidx.compose.ui.modifier.ModifierLocalManager $r7, $r15;
        androidx.compose.ui.modifier.ProvidableModifierLocal $r8, $r17;
        androidx.compose.ui.modifier.ModifierLocal $r9, $r18;
        androidx.compose.ui.modifier.ModifierLocalConsumer $r10;
        androidx.compose.ui.node.BackwardsCompatNodeKt$DetachedModifierLocalReadScope$1 $r11;
        androidx.compose.ui.modifier.ModifierLocalReadScope $r12;
        androidx.compose.ui.modifier.ModifierLocalProvider $r16;
        java.lang.IllegalStateException $r19;
        java.lang.String $r20, r21;
        androidx.compose.ui.Modifier$Node r22, r24;
        androidx.compose.ui.focus.FocusPropertiesModifier r23;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $z0 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        if $z0 != 0 goto label1;

        r21 = "Check failed.";

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke r21.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label1:
        r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        r22 = (androidx.compose.ui.Modifier$Node) r0;

        $r2 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i2 = virtualinvoke $r2.<androidx.compose.ui.node.Nodes: int getLocals-OLwlOKw()>();

        $i0 = virtualinvoke r22.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i1 = $i0 & i2;

        if $i1 == 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 == 0 goto label6;

        $z1 = r1 instanceof androidx.compose.ui.modifier.ModifierLocalProvider;

        if $z1 == 0 goto label4;

        $r13 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r14 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r13);

        $r15 = interfaceinvoke $r14.<androidx.compose.ui.node.Owner: androidx.compose.ui.modifier.ModifierLocalManager getModifierLocalManager()>();

        $r16 = (androidx.compose.ui.modifier.ModifierLocalProvider) r1;

        $r17 = interfaceinvoke $r16.<androidx.compose.ui.modifier.ModifierLocalProvider: androidx.compose.ui.modifier.ProvidableModifierLocal getKey()>();

        $r18 = (androidx.compose.ui.modifier.ModifierLocal) $r17;

        virtualinvoke $r15.<androidx.compose.ui.modifier.ModifierLocalManager: void removedProvider(androidx.compose.ui.node.BackwardsCompatNode,androidx.compose.ui.modifier.ModifierLocal)>(r0, $r18);

     label4:
        $z2 = r1 instanceof androidx.compose.ui.modifier.ModifierLocalConsumer;

        if $z2 == 0 goto label5;

        $r10 = (androidx.compose.ui.modifier.ModifierLocalConsumer) r1;

        $r11 = staticinvoke <androidx.compose.ui.node.BackwardsCompatNodeKt: androidx.compose.ui.node.BackwardsCompatNodeKt$DetachedModifierLocalReadScope$1 access$getDetachedModifierLocalReadScope$p()>();

        $r12 = (androidx.compose.ui.modifier.ModifierLocalReadScope) $r11;

        interfaceinvoke $r10.<androidx.compose.ui.modifier.ModifierLocalConsumer: void onModifierLocalsUpdated(androidx.compose.ui.modifier.ModifierLocalReadScope)>($r12);

     label5:
        $z3 = r1 instanceof androidx.compose.ui.focus.FocusOrderModifier;

        if $z3 == 0 goto label6;

        r23 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.focus.FocusPropertiesModifier focusOrderElement>;

        if r23 == null goto label6;

        $r5 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r6 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r5);

        $r7 = interfaceinvoke $r6.<androidx.compose.ui.node.Owner: androidx.compose.ui.modifier.ModifierLocalManager getModifierLocalManager()>();

        $r8 = virtualinvoke r23.<androidx.compose.ui.focus.FocusPropertiesModifier: androidx.compose.ui.modifier.ProvidableModifierLocal getKey()>();

        $r9 = (androidx.compose.ui.modifier.ModifierLocal) $r8;

        virtualinvoke $r7.<androidx.compose.ui.modifier.ModifierLocalManager: void removedProvider(androidx.compose.ui.node.BackwardsCompatNode,androidx.compose.ui.modifier.ModifierLocal)>(r0, $r9);

     label6:
        r24 = (androidx.compose.ui.Modifier$Node) r0;

        $r25 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i3 = virtualinvoke $r25.<androidx.compose.ui.node.Nodes: int getSemantics-OLwlOKw()>();

        $i4 = virtualinvoke r24.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i5 = $i4 & i3;

        if $i5 == 0 goto label7;

        $z7 = 1;

        goto label8;

     label7:
        $z7 = 0;

     label8:
        if $z7 == 0 goto label9;

        $r3 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r4 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r3);

        interfaceinvoke $r4.<androidx.compose.ui.node.Owner: void onSemanticsChange()>();

     label9:
        return;
    }

    private final void initializeModifier(boolean)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, z12, $z14, $z16, z17, $z18, $z20, z21, $z22, z23, $z25, z26, $z28, $z30;
        androidx.compose.ui.Modifier$Element r1;
        androidx.compose.ui.node.Nodes $r2, $r3, $r64, $r66, $r70, $r72, $r74;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, i8, $i9, $i10, i11, i12, $i13, $i14, i15, $i16, $i17, i18, $i19, $i20;
        androidx.compose.ui.node.DelegatableNode $r4, $r10, $r14, $r16, $r20, $r24, $r28, $r32, $r37;
        androidx.compose.ui.node.Owner $r5, $r21;
        androidx.compose.ui.input.pointer.PointerInputModifier $r6;
        androidx.compose.ui.input.pointer.PointerInputFilter $r7;
        androidx.compose.ui.node.NodeCoordinator $r8, $r39, r67;
        androidx.compose.ui.layout.LayoutCoordinates $r9;
        androidx.compose.ui.node.LayoutNode $r11, $r15, $r17, $r25, $r29, $r33, $r38;
        androidx.compose.ui.node.NodeChain $r12, $r18, $r26, $r34;
        androidx.compose.ui.Modifier$Node $r13, $r19, $r27, $r35, r60, r63, r65, r68, r69, r71, r73;
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4 $r22;
        androidx.compose.ui.node.Owner$OnLayoutCompletedListener $r23;
        androidx.compose.ui.layout.Remeasurement $r30;
        androidx.compose.ui.layout.RemeasurementModifier $r31;
        androidx.compose.ui.node.LayoutModifierNode $r36, $r41, $r43;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator $r40, $r42;
        androidx.compose.ui.focus.FocusOrderModifierToProperties $r44, r61;
        androidx.compose.ui.focus.FocusOrderModifier $r45;
        androidx.compose.ui.focus.FocusPropertiesModifier $r46, $r48;
        kotlin.jvm.functions.Function1 $r47, $r62;
        androidx.compose.ui.modifier.ModifierLocalProvider $r49, $r56;
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3 $r50;
        kotlin.jvm.functions.Function0 $r51, $r55;
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1 $r52;
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1 $r54;
        java.lang.IllegalStateException $r57;
        java.lang.String $r58, r59;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        if $z1 != 0 goto label01;

        r59 = "Check failed.";

        $r57 = new java.lang.IllegalStateException;

        $r58 = virtualinvoke r59.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r57.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r58);

        throw $r57;

     label01:
        r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        r60 = (androidx.compose.ui.Modifier$Node) r0;

        $r2 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i4 = virtualinvoke $r2.<androidx.compose.ui.node.Nodes: int getLocals-OLwlOKw()>();

        $i0 = virtualinvoke r60.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i1 = $i0 & i4;

        if $i1 == 0 goto label02;

        $z10 = 1;

        goto label03;

     label02:
        $z10 = 0;

     label03:
        if $z10 == 0 goto label10;

        $z6 = r1 instanceof androidx.compose.ui.modifier.ModifierLocalProvider;

        if $z6 == 0 goto label04;

        $r56 = (androidx.compose.ui.modifier.ModifierLocalProvider) r1;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void updateModifierLocalProvider(androidx.compose.ui.modifier.ModifierLocalProvider)>($r56);

     label04:
        $z7 = r1 instanceof androidx.compose.ui.modifier.ModifierLocalConsumer;

        if $z7 == 0 goto label06;

        if z0 == 0 goto label05;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void updateModifierLocalConsumer()>();

        goto label06;

     label05:
        $r54 = new androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1;

        specialinvoke $r54.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1: void <init>(androidx.compose.ui.node.BackwardsCompatNode)>(r0);

        $r55 = (kotlin.jvm.functions.Function0) $r54;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void sideEffect(kotlin.jvm.functions.Function0)>($r55);

     label06:
        $z11 = r1 instanceof androidx.compose.ui.focus.FocusOrderModifier;

        if $z11 == 0 goto label10;

        $r44 = new androidx.compose.ui.focus.FocusOrderModifierToProperties;

        $r45 = (androidx.compose.ui.focus.FocusOrderModifier) r1;

        specialinvoke $r44.<androidx.compose.ui.focus.FocusOrderModifierToProperties: void <init>(androidx.compose.ui.focus.FocusOrderModifier)>($r45);

        r61 = $r44;

        $r46 = new androidx.compose.ui.focus.FocusPropertiesModifier;

        $r47 = (kotlin.jvm.functions.Function1) r61;

        z12 = 0;

        $z8 = staticinvoke <androidx.compose.ui.platform.InspectableValueKt: boolean isDebugInspectorInfoEnabled()>();

        if $z8 == 0 goto label07;

        $r52 = new androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1;

        specialinvoke $r52.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1: void <init>(androidx.compose.ui.focus.FocusOrderModifierToProperties)>(r61);

        $r62 = (kotlin.jvm.functions.Function1) $r52;

        goto label08;

     label07:
        $r62 = staticinvoke <androidx.compose.ui.platform.InspectableValueKt: kotlin.jvm.functions.Function1 getNoInspectorInfo()>();

     label08:
        specialinvoke $r46.<androidx.compose.ui.focus.FocusPropertiesModifier: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r47, $r62);

        r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.focus.FocusPropertiesModifier focusOrderElement> = $r46;

        $r48 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.focus.FocusPropertiesModifier focusOrderElement>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r48);

        $r49 = (androidx.compose.ui.modifier.ModifierLocalProvider) $r48;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void updateModifierLocalProvider(androidx.compose.ui.modifier.ModifierLocalProvider)>($r49);

        if z0 == 0 goto label09;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void updateFocusOrderModifierLocalConsumer()>();

        goto label10;

     label09:
        $r50 = new androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3;

        specialinvoke $r50.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3: void <init>(androidx.compose.ui.node.BackwardsCompatNode)>(r0);

        $r51 = (kotlin.jvm.functions.Function0) $r50;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void sideEffect(kotlin.jvm.functions.Function0)>($r51);

     label10:
        r63 = (androidx.compose.ui.Modifier$Node) r0;

        $r64 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i5 = virtualinvoke $r64.<androidx.compose.ui.node.Nodes: int getDraw-OLwlOKw()>();

        $i6 = virtualinvoke r63.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i7 = $i6 & i5;

        if $i7 == 0 goto label11;

        $z14 = 1;

        goto label12;

     label11:
        $z14 = 0;

     label12:
        if $z14 == 0 goto label14;

        $z5 = r1 instanceof androidx.compose.ui.draw.DrawCacheModifier;

        if $z5 == 0 goto label13;

        r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean invalidateCache> = 1;

     label13:
        $r43 = (androidx.compose.ui.node.LayoutModifierNode) r0;

        staticinvoke <androidx.compose.ui.node.LayoutModifierNodeKt: void invalidateLayer(androidx.compose.ui.node.LayoutModifierNode)>($r43);

     label14:
        r65 = (androidx.compose.ui.Modifier$Node) r0;

        $r66 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i8 = virtualinvoke $r66.<androidx.compose.ui.node.Nodes: int getLayout-OLwlOKw()>();

        $i9 = virtualinvoke r65.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i10 = $i9 & i8;

        if $i10 == 0 goto label15;

        $z16 = 1;

        goto label16;

     label15:
        $z16 = 0;

     label16:
        if $z16 == 0 goto label18;

        $r32 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r33 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r32);

        $r34 = virtualinvoke $r33.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r35 = virtualinvoke $r34.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        z17 = virtualinvoke $r35.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if z17 == 0 goto label17;

        $r39 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.node.NodeCoordinator getCoordinator$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r39);

        r67 = $r39;

        $r40 = (androidx.compose.ui.node.LayoutModifierNodeCoordinator) r67;

        $r42 = (androidx.compose.ui.node.LayoutModifierNodeCoordinator) r67;

        $r41 = (androidx.compose.ui.node.LayoutModifierNode) r0;

        virtualinvoke $r42.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: void setLayoutModifierNode$ui_release(androidx.compose.ui.node.LayoutModifierNode)>($r41);

        virtualinvoke r67.<androidx.compose.ui.node.NodeCoordinator: void onLayoutModifierNodeChanged()>();

     label17:
        $r36 = (androidx.compose.ui.node.LayoutModifierNode) r0;

        staticinvoke <androidx.compose.ui.node.LayoutModifierNodeKt: void invalidateLayer(androidx.compose.ui.node.LayoutModifierNode)>($r36);

        $r37 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r38 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r37);

        virtualinvoke $r38.<androidx.compose.ui.node.LayoutNode: void invalidateMeasurements$ui_release()>();

     label18:
        $z18 = r1 instanceof androidx.compose.ui.layout.RemeasurementModifier;

        if $z18 == 0 goto label19;

        $r31 = (androidx.compose.ui.layout.RemeasurementModifier) r1;

        $r30 = (androidx.compose.ui.layout.Remeasurement) r0;

        interfaceinvoke $r31.<androidx.compose.ui.layout.RemeasurementModifier: void onRemeasurementAvailable(androidx.compose.ui.layout.Remeasurement)>($r30);

     label19:
        r68 = (androidx.compose.ui.Modifier$Node) r0;

        $r3 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i11 = virtualinvoke $r3.<androidx.compose.ui.node.Nodes: int getLayoutAware-OLwlOKw()>();

        $i2 = virtualinvoke r68.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i3 = $i2 & i11;

        if $i3 == 0 goto label20;

        $z20 = 1;

        goto label21;

     label20:
        $z20 = 0;

     label21:
        if $z20 == 0 goto label23;

        $z4 = r1 instanceof androidx.compose.ui.layout.OnRemeasuredModifier;

        if $z4 == 0 goto label22;

        $r24 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r25 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r24);

        $r26 = virtualinvoke $r25.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r27 = virtualinvoke $r26.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        z21 = virtualinvoke $r27.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if z21 == 0 goto label22;

        $r28 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r29 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r28);

        virtualinvoke $r29.<androidx.compose.ui.node.LayoutNode: void invalidateMeasurements$ui_release()>();

     label22:
        $z22 = r1 instanceof androidx.compose.ui.layout.OnPlacedModifier;

        if $z22 == 0 goto label23;

        r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.layout.LayoutCoordinates lastOnPlacedCoordinates> = null;

        $r16 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r17 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r16);

        $r18 = virtualinvoke $r17.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r19 = virtualinvoke $r18.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        z23 = virtualinvoke $r19.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if z23 == 0 goto label23;

        $r20 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r21 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r20);

        $r22 = new androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4;

        specialinvoke $r22.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4: void <init>(androidx.compose.ui.node.BackwardsCompatNode)>(r0);

        $r23 = (androidx.compose.ui.node.Owner$OnLayoutCompletedListener) $r22;

        interfaceinvoke $r21.<androidx.compose.ui.node.Owner: void registerOnLayoutCompletedListener(androidx.compose.ui.node.Owner$OnLayoutCompletedListener)>($r23);

     label23:
        r69 = (androidx.compose.ui.Modifier$Node) r0;

        $r70 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i12 = virtualinvoke $r70.<androidx.compose.ui.node.Nodes: int getGlobalPositionAware-OLwlOKw()>();

        $i13 = virtualinvoke r69.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i14 = $i13 & i12;

        if $i14 == 0 goto label24;

        $z25 = 1;

        goto label25;

     label24:
        $z25 = 0;

     label25:
        if $z25 == 0 goto label26;

        $z3 = r1 instanceof androidx.compose.ui.layout.OnGloballyPositionedModifier;

        if $z3 == 0 goto label26;

        $r10 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r11 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r10);

        $r12 = virtualinvoke $r11.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r13 = virtualinvoke $r12.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        z26 = virtualinvoke $r13.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if z26 == 0 goto label26;

        $r14 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r15 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r14);

        virtualinvoke $r15.<androidx.compose.ui.node.LayoutNode: void invalidateMeasurements$ui_release()>();

     label26:
        r71 = (androidx.compose.ui.Modifier$Node) r0;

        $r72 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i15 = virtualinvoke $r72.<androidx.compose.ui.node.Nodes: int getPointerInput-OLwlOKw()>();

        $i16 = virtualinvoke r71.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i17 = $i16 & i15;

        if $i17 == 0 goto label27;

        $z28 = 1;

        goto label28;

     label27:
        $z28 = 0;

     label28:
        if $z28 == 0 goto label29;

        $z2 = r1 instanceof androidx.compose.ui.input.pointer.PointerInputModifier;

        if $z2 == 0 goto label29;

        $r6 = (androidx.compose.ui.input.pointer.PointerInputModifier) r1;

        $r7 = interfaceinvoke $r6.<androidx.compose.ui.input.pointer.PointerInputModifier: androidx.compose.ui.input.pointer.PointerInputFilter getPointerInputFilter()>();

        $r8 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.node.NodeCoordinator getCoordinator$ui_release()>();

        $r9 = (androidx.compose.ui.layout.LayoutCoordinates) $r8;

        virtualinvoke $r7.<androidx.compose.ui.input.pointer.PointerInputFilter: void setLayoutCoordinates$ui_release(androidx.compose.ui.layout.LayoutCoordinates)>($r9);

     label29:
        r73 = (androidx.compose.ui.Modifier$Node) r0;

        $r74 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i18 = virtualinvoke $r74.<androidx.compose.ui.node.Nodes: int getSemantics-OLwlOKw()>();

        $i19 = virtualinvoke r73.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i20 = $i19 & i18;

        if $i20 == 0 goto label30;

        $z30 = 1;

        goto label31;

     label30:
        $z30 = 0;

     label31:
        if $z30 == 0 goto label32;

        $r4 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r5 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r4);

        interfaceinvoke $r5.<androidx.compose.ui.node.Owner: void onSemanticsChange()>();

     label32:
        return;
    }

    public androidx.compose.ui.unit.Density getDensity()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.node.DelegatableNode $r1;
        androidx.compose.ui.node.LayoutNode $r2;
        androidx.compose.ui.unit.Density $r3;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r2 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r1);

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.unit.Density getDensity()>();

        return $r3;
    }

    public androidx.compose.ui.unit.LayoutDirection getLayoutDirection()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.node.DelegatableNode $r1;
        androidx.compose.ui.node.LayoutNode $r2;
        androidx.compose.ui.unit.LayoutDirection $r3;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r2 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r1);

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        return $r3;
    }

    public long getSize-NH-jbRc()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.node.Nodes $r1;
        androidx.compose.ui.node.DelegatableNode $r2;
        int $i0;
        androidx.compose.ui.node.NodeCoordinator $r3;
        long $l1, $l2;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r2 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r1 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.node.Nodes: int getLayoutAware-OLwlOKw()>();

        $r3 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.NodeCoordinator requireCoordinator-64DMado(androidx.compose.ui.node.DelegatableNode,int)>($r2, $i0);

        $l1 = virtualinvoke $r3.<androidx.compose.ui.node.NodeCoordinator: long getSize-YbymL2g()>();

        $l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long toSize-ozmzZPI(long)>($l1);

        return $l2;
    }

    public void onMeasureResultChanged()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.node.DrawModifierNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean invalidateCache> = 1;

        $r1 = (androidx.compose.ui.node.DrawModifierNode) r0;

        staticinvoke <androidx.compose.ui.node.DrawModifierNodeKt: void requestDraw(androidx.compose.ui.node.DrawModifierNode)>($r1);

        return;
    }

    private final void updateDrawCache()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.Modifier$Element r1;
        boolean $z0;
        androidx.compose.ui.node.DelegatableNode $r2;
        androidx.compose.ui.node.Owner $r3;
        androidx.compose.ui.node.OwnerSnapshotObserver $r4;
        androidx.compose.ui.node.OwnerScope $r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1 $r7;
        kotlin.jvm.functions.Function0 $r8;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        $z0 = r1 instanceof androidx.compose.ui.draw.DrawCacheModifier;

        if $z0 == 0 goto label1;

        $r2 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r3 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r2);

        $r4 = interfaceinvoke $r3.<androidx.compose.ui.node.Owner: androidx.compose.ui.node.OwnerSnapshotObserver getSnapshotObserver()>();

        $r5 = (androidx.compose.ui.node.OwnerScope) r0;

        $r6 = staticinvoke <androidx.compose.ui.node.BackwardsCompatNodeKt: kotlin.jvm.functions.Function1 access$getOnDrawCacheReadsChanged$p()>();

        $r7 = new androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1;

        specialinvoke $r7.<androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1: void <init>(androidx.compose.ui.Modifier$Element,androidx.compose.ui.node.BackwardsCompatNode)>(r1, r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        virtualinvoke $r4.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r5, $r6, $r8);

     label1:
        r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean invalidateCache> = 0;

        return;
    }

    public final void onDrawCacheReadsChanged$ui_release()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.node.DrawModifierNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean invalidateCache> = 1;

        $r1 = (androidx.compose.ui.node.DrawModifierNode) r0;

        staticinvoke <androidx.compose.ui.node.DrawModifierNodeKt: void requestDraw(androidx.compose.ui.node.DrawModifierNode)>($r1);

        return;
    }

    public final java.util.HashSet getReadValues()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        java.util.HashSet $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: java.util.HashSet readValues>;

        return $r1;
    }

    public final void setReadValues(java.util.HashSet)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        java.util.HashSet r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 := @parameter0: java.util.HashSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.node.BackwardsCompatNode: java.util.HashSet readValues> = r1;

        return;
    }

    public androidx.compose.ui.modifier.ModifierLocalMap getProvidedValues()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.modifier.BackwardsCompatLocalMap $r1;
        androidx.compose.ui.modifier.ModifierLocalMap $r2;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.modifier.BackwardsCompatLocalMap _providedValues>;

        if $r1 == null goto label1;

        $r2 = (androidx.compose.ui.modifier.ModifierLocalMap) $r1;

        goto label2;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.modifier.ModifierLocalNodeKt: androidx.compose.ui.modifier.ModifierLocalMap modifierLocalMapOf()>();

     label2:
        return $r2;
    }

    public java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.modifier.ModifierLocal $r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        androidx.compose.ui.node.DelegatableNode $r3;
        androidx.compose.ui.Modifier$Node r4, r5, $r9, $r10, r22, $r24;
        androidx.compose.ui.modifier.ModifierLocalNode r6;
        java.util.HashSet $r7;
        androidx.compose.ui.node.Nodes $r8;
        boolean $z5, $z6, $z7;
        kotlin.jvm.functions.Function0 $r11;
        java.lang.Object $r12, $r18;
        androidx.compose.ui.node.NodeChain $r13, $r14;
        androidx.compose.ui.modifier.ModifierLocalMap $r16, $r17;
        java.lang.IllegalStateException $r19;
        java.lang.String $r20, r21;
        androidx.compose.ui.node.LayoutNode r23;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 := @parameter0: androidx.compose.ui.modifier.ModifierLocal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r2 = $r1;

        $r7 = r0.<androidx.compose.ui.node.BackwardsCompatNode: java.util.HashSet readValues>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        $r8 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i0 = virtualinvoke $r8.<androidx.compose.ui.node.Nodes: int getLocals-OLwlOKw()>();

        $r3 = (androidx.compose.ui.node.DelegatableNode) r0;

        i1 = i0;

        $r9 = interfaceinvoke $r3.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z5 = virtualinvoke $r9.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z5 != 0 goto label1;

        r21 = "Check failed.";

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke r21.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label1:
        $r10 = interfaceinvoke $r3.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        r22 = virtualinvoke $r10.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        r23 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r3);

     label2:
        if r23 == null goto label8;

        $r13 = virtualinvoke r23.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        r4 = virtualinvoke $r13.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

        $i2 = virtualinvoke r4.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i3 = $i2 & i1;

        if $i3 == 0 goto label5;

     label3:
        if r22 == null goto label5;

        $i4 = virtualinvoke r22.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label4;

        r5 = r22;

        $z6 = r5 instanceof androidx.compose.ui.modifier.ModifierLocalNode;

        if $z6 == 0 goto label4;

        r6 = (androidx.compose.ui.modifier.ModifierLocalNode) r5;

        $r16 = interfaceinvoke r6.<androidx.compose.ui.modifier.ModifierLocalNode: androidx.compose.ui.modifier.ModifierLocalMap getProvidedValues()>();

        $z7 = virtualinvoke $r16.<androidx.compose.ui.modifier.ModifierLocalMap: boolean contains$ui_release(androidx.compose.ui.modifier.ModifierLocal)>(r2);

        if $z7 == 0 goto label4;

        $r17 = interfaceinvoke r6.<androidx.compose.ui.modifier.ModifierLocalNode: androidx.compose.ui.modifier.ModifierLocalMap getProvidedValues()>();

        $r18 = virtualinvoke $r17.<androidx.compose.ui.modifier.ModifierLocalMap: java.lang.Object get$ui_release(androidx.compose.ui.modifier.ModifierLocal)>(r2);

        return $r18;

     label4:
        r22 = virtualinvoke r22.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getParent$ui_release()>();

        goto label3;

     label5:
        r23 = virtualinvoke r23.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode getParent$ui_release()>();

        if r23 == null goto label6;

        $r14 = virtualinvoke r23.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        if $r14 == null goto label6;

        $r24 = virtualinvoke $r14.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        goto label7;

     label6:
        $r24 = null;

     label7:
        r22 = $r24;

        goto label2;

     label8:
        $r11 = virtualinvoke r2.<androidx.compose.ui.modifier.ModifierLocal: kotlin.jvm.functions.Function0 getDefaultFactory$ui_release()>();

        $r12 = interfaceinvoke $r11.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return $r12;
    }

    public final void updateModifierLocalConsumer()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        boolean $z0;
        java.util.HashSet $r1;
        androidx.compose.ui.node.DelegatableNode $r2;
        androidx.compose.ui.node.Owner $r3;
        androidx.compose.ui.node.OwnerSnapshotObserver $r4;
        androidx.compose.ui.node.OwnerScope $r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1 $r7;
        kotlin.jvm.functions.Function0 $r8;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $z0 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: java.util.HashSet readValues>;

        virtualinvoke $r1.<java.util.HashSet: void clear()>();

        $r2 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r3 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r2);

        $r4 = interfaceinvoke $r3.<androidx.compose.ui.node.Owner: androidx.compose.ui.node.OwnerSnapshotObserver getSnapshotObserver()>();

        $r5 = (androidx.compose.ui.node.OwnerScope) r0;

        $r6 = staticinvoke <androidx.compose.ui.node.BackwardsCompatNodeKt: kotlin.jvm.functions.Function1 access$getUpdateModifierLocalConsumer$p()>();

        $r7 = new androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1;

        specialinvoke $r7.<androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1: void <init>(androidx.compose.ui.node.BackwardsCompatNode)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        virtualinvoke $r4.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r5, $r6, $r8);

     label1:
        return;
    }

    public final void updateFocusOrderModifierLocalConsumer()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        boolean $z0;
        androidx.compose.ui.node.DelegatableNode $r1;
        androidx.compose.ui.node.Owner $r2;
        androidx.compose.ui.node.OwnerSnapshotObserver $r3;
        androidx.compose.ui.node.OwnerScope $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1 $r6;
        kotlin.jvm.functions.Function0 $r7;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $z0 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        if $z0 == 0 goto label1;

        $r1 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r2 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r1);

        $r3 = interfaceinvoke $r2.<androidx.compose.ui.node.Owner: androidx.compose.ui.node.OwnerSnapshotObserver getSnapshotObserver()>();

        $r4 = (androidx.compose.ui.node.OwnerScope) r0;

        $r5 = staticinvoke <androidx.compose.ui.node.BackwardsCompatNodeKt: kotlin.jvm.functions.Function1 access$getUpdateFocusOrderModifierLocalConsumer$p()>();

        $r6 = new androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1;

        specialinvoke $r6.<androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1: void <init>(androidx.compose.ui.node.BackwardsCompatNode)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        virtualinvoke $r3.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r4, $r5, $r7);

     label1:
        return;
    }

    public final void updateModifierLocalProvider(androidx.compose.ui.modifier.ModifierLocalProvider)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.modifier.ModifierLocalProvider r1;
        androidx.compose.ui.modifier.BackwardsCompatLocalMap r2, $r3;
        boolean z0, $z1;
        androidx.compose.ui.node.DelegatableNode $r4, $r8, $r15;
        androidx.compose.ui.node.LayoutNode $r5;
        androidx.compose.ui.node.NodeChain $r6;
        androidx.compose.ui.Modifier$Node $r7;
        androidx.compose.ui.node.Owner $r9, $r16;
        androidx.compose.ui.modifier.ModifierLocalManager $r10, $r17;
        androidx.compose.ui.modifier.ProvidableModifierLocal $r11, $r13, $r18;
        androidx.compose.ui.modifier.ModifierLocal $r12, $r14, $r19;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 := @parameter0: androidx.compose.ui.modifier.ModifierLocalProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.modifier.BackwardsCompatLocalMap _providedValues>;

        if r2 == null goto label1;

        $r13 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalProvider: androidx.compose.ui.modifier.ProvidableModifierLocal getKey()>();

        $r14 = (androidx.compose.ui.modifier.ModifierLocal) $r13;

        $z1 = virtualinvoke r2.<androidx.compose.ui.modifier.BackwardsCompatLocalMap: boolean contains$ui_release(androidx.compose.ui.modifier.ModifierLocal)>($r14);

        if $z1 == 0 goto label1;

        virtualinvoke r2.<androidx.compose.ui.modifier.BackwardsCompatLocalMap: void setElement(androidx.compose.ui.modifier.ModifierLocalProvider)>(r1);

        $r15 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r16 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r15);

        $r17 = interfaceinvoke $r16.<androidx.compose.ui.node.Owner: androidx.compose.ui.modifier.ModifierLocalManager getModifierLocalManager()>();

        $r18 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalProvider: androidx.compose.ui.modifier.ProvidableModifierLocal getKey()>();

        $r19 = (androidx.compose.ui.modifier.ModifierLocal) $r18;

        virtualinvoke $r17.<androidx.compose.ui.modifier.ModifierLocalManager: void updatedProvider(androidx.compose.ui.node.BackwardsCompatNode,androidx.compose.ui.modifier.ModifierLocal)>(r0, $r19);

        goto label2;

     label1:
        $r3 = new androidx.compose.ui.modifier.BackwardsCompatLocalMap;

        specialinvoke $r3.<androidx.compose.ui.modifier.BackwardsCompatLocalMap: void <init>(androidx.compose.ui.modifier.ModifierLocalProvider)>(r1);

        r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.modifier.BackwardsCompatLocalMap _providedValues> = $r3;

        $r4 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r5 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r4);

        $r6 = virtualinvoke $r5.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r7 = virtualinvoke $r6.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getTail$ui_release()>();

        z0 = virtualinvoke $r7.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if z0 == 0 goto label2;

        $r8 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r9 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.DelegatableNode)>($r8);

        $r10 = interfaceinvoke $r9.<androidx.compose.ui.node.Owner: androidx.compose.ui.modifier.ModifierLocalManager getModifierLocalManager()>();

        $r11 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalProvider: androidx.compose.ui.modifier.ProvidableModifierLocal getKey()>();

        $r12 = (androidx.compose.ui.modifier.ModifierLocal) $r11;

        virtualinvoke $r10.<androidx.compose.ui.modifier.ModifierLocalManager: void insertedProvider(androidx.compose.ui.node.BackwardsCompatNode,androidx.compose.ui.modifier.ModifierLocal)>(r0, $r12);

     label2:
        return;
    }

    public boolean isValid()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $z0 = virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        return $z0;
    }

    public long getTargetSize-YbymL2g()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.Modifier$Element $r1;
        androidx.compose.ui.layout.IntermediateLayoutModifier $r2;
        long $l0;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.compose.ui.layout.IntermediateLayoutModifier");

        $r2 = (androidx.compose.ui.layout.IntermediateLayoutModifier) $r1;

        $l0 = interfaceinvoke $r2.<androidx.compose.ui.layout.IntermediateLayoutModifier: long getTargetSize-YbymL2g()>();

        return $l0;
    }

    public void setTargetSize-ozmzZPI(long)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        long l0;
        androidx.compose.ui.Modifier$Element $r1;
        androidx.compose.ui.layout.IntermediateLayoutModifier $r2;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.compose.ui.layout.IntermediateLayoutModifier");

        $r2 = (androidx.compose.ui.layout.IntermediateLayoutModifier) $r1;

        interfaceinvoke $r2.<androidx.compose.ui.layout.IntermediateLayoutModifier: void setTargetSize-ozmzZPI(long)>(l0);

        return;
    }

    public androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope, androidx.compose.ui.layout.Measurable, long)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.layout.MeasureScope $r1;
        androidx.compose.ui.layout.Measurable r2;
        long l0;
        androidx.compose.ui.layout.LayoutModifier $r3;
        androidx.compose.ui.Modifier$Element $r4;
        androidx.compose.ui.layout.MeasureResult $r5;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 := @parameter0: androidx.compose.ui.layout.MeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.Measurable;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$measure");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r4 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.layout.LayoutModifier");

        $r3 = (androidx.compose.ui.layout.LayoutModifier) $r4;

        $r5 = interfaceinvoke $r3.<androidx.compose.ui.layout.LayoutModifier: androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope,androidx.compose.ui.layout.Measurable,long)>($r1, r2, l0);

        return $r5;
    }

    public int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        androidx.compose.ui.layout.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.compose.ui.layout.LayoutModifier $r3;
        androidx.compose.ui.Modifier$Element $r4;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r4 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.layout.LayoutModifier");

        $r3 = (androidx.compose.ui.layout.LayoutModifier) $r4;

        $i1 = interfaceinvoke $r3.<androidx.compose.ui.layout.LayoutModifier: int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r1, r2, i0);

        return $i1;
    }

    public int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        androidx.compose.ui.layout.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.compose.ui.layout.LayoutModifier $r3;
        androidx.compose.ui.Modifier$Element $r4;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r4 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.layout.LayoutModifier");

        $r3 = (androidx.compose.ui.layout.LayoutModifier) $r4;

        $i1 = interfaceinvoke $r3.<androidx.compose.ui.layout.LayoutModifier: int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r1, r2, i0);

        return $i1;
    }

    public int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        androidx.compose.ui.layout.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.compose.ui.layout.LayoutModifier $r3;
        androidx.compose.ui.Modifier$Element $r4;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r4 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.layout.LayoutModifier");

        $r3 = (androidx.compose.ui.layout.LayoutModifier) $r4;

        $i1 = interfaceinvoke $r3.<androidx.compose.ui.layout.LayoutModifier: int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r1, r2, i0);

        return $i1;
    }

    public int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        androidx.compose.ui.layout.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.compose.ui.layout.LayoutModifier $r3;
        androidx.compose.ui.Modifier$Element $r4;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r4 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.layout.LayoutModifier");

        $r3 = (androidx.compose.ui.layout.LayoutModifier) $r4;

        $i1 = interfaceinvoke $r3.<androidx.compose.ui.layout.LayoutModifier: int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r1, r2, i0);

        return $i1;
    }

    public void draw(androidx.compose.ui.graphics.drawscope.ContentDrawScope)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.graphics.drawscope.ContentDrawScope $r1;
        androidx.compose.ui.Modifier$Element r2;
        androidx.compose.ui.draw.DrawModifier $r3;
        boolean $z1, $z2;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.ContentDrawScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type androidx.compose.ui.draw.DrawModifier");

        $r3 = (androidx.compose.ui.draw.DrawModifier) r2;

        $z1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: boolean invalidateCache>;

        if $z1 == 0 goto label1;

        $z2 = r2 instanceof androidx.compose.ui.draw.DrawCacheModifier;

        if $z2 == 0 goto label1;

        specialinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode: void updateDrawCache()>();

     label1:
        interfaceinvoke $r3.<androidx.compose.ui.draw.DrawModifier: void draw(androidx.compose.ui.graphics.drawscope.ContentDrawScope)>($r1);

        return;
    }

    public androidx.compose.ui.semantics.SemanticsConfiguration getSemanticsConfiguration()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.Modifier$Element $r1;
        androidx.compose.ui.semantics.SemanticsModifier $r2;
        androidx.compose.ui.semantics.SemanticsConfiguration $r3;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.compose.ui.semantics.SemanticsModifier");

        $r2 = (androidx.compose.ui.semantics.SemanticsModifier) $r1;

        $r3 = interfaceinvoke $r2.<androidx.compose.ui.semantics.SemanticsModifier: androidx.compose.ui.semantics.SemanticsConfiguration getSemanticsConfiguration()>();

        return $r3;
    }

    public void onPointerEvent-H0pRuoY(androidx.compose.ui.input.pointer.PointerEvent, androidx.compose.ui.input.pointer.PointerEventPass, long)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.input.pointer.PointerEvent r1;
        androidx.compose.ui.input.pointer.PointerEventPass r2;
        long l0;
        androidx.compose.ui.input.pointer.PointerInputModifier $r3;
        androidx.compose.ui.Modifier$Element $r4;
        androidx.compose.ui.input.pointer.PointerInputFilter $r5;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 := @parameter0: androidx.compose.ui.input.pointer.PointerEvent;

        r2 := @parameter1: androidx.compose.ui.input.pointer.PointerEventPass;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pointerEvent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        $r4 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.input.pointer.PointerInputModifier");

        $r3 = (androidx.compose.ui.input.pointer.PointerInputModifier) $r4;

        $r5 = interfaceinvoke $r3.<androidx.compose.ui.input.pointer.PointerInputModifier: androidx.compose.ui.input.pointer.PointerInputFilter getPointerInputFilter()>();

        virtualinvoke $r5.<androidx.compose.ui.input.pointer.PointerInputFilter: void onPointerEvent-H0pRuoY(androidx.compose.ui.input.pointer.PointerEvent,androidx.compose.ui.input.pointer.PointerEventPass,long)>(r1, r2, l0);

        return;
    }

    public void onCancelPointerInput()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.input.pointer.PointerInputModifier $r1;
        androidx.compose.ui.Modifier$Element $r2;
        androidx.compose.ui.input.pointer.PointerInputFilter $r3;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.ui.input.pointer.PointerInputModifier");

        $r1 = (androidx.compose.ui.input.pointer.PointerInputModifier) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.ui.input.pointer.PointerInputModifier: androidx.compose.ui.input.pointer.PointerInputFilter getPointerInputFilter()>();

        virtualinvoke $r3.<androidx.compose.ui.input.pointer.PointerInputFilter: void onCancel()>();

        return;
    }

    public boolean sharePointerInputWithSiblings()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.input.pointer.PointerInputModifier $r1;
        androidx.compose.ui.Modifier$Element $r2;
        androidx.compose.ui.input.pointer.PointerInputFilter $r3;
        boolean $z1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.ui.input.pointer.PointerInputModifier");

        $r1 = (androidx.compose.ui.input.pointer.PointerInputModifier) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.ui.input.pointer.PointerInputModifier: androidx.compose.ui.input.pointer.PointerInputFilter getPointerInputFilter()>();

        $z1 = virtualinvoke $r3.<androidx.compose.ui.input.pointer.PointerInputFilter: boolean getShareWithSiblings()>();

        return $z1;
    }

    public boolean interceptOutOfBoundsChildEvents()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.input.pointer.PointerInputModifier $r1;
        androidx.compose.ui.Modifier$Element $r2;
        androidx.compose.ui.input.pointer.PointerInputFilter $r3;
        boolean $z1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.ui.input.pointer.PointerInputModifier");

        $r1 = (androidx.compose.ui.input.pointer.PointerInputModifier) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.ui.input.pointer.PointerInputModifier: androidx.compose.ui.input.pointer.PointerInputFilter getPointerInputFilter()>();

        $z1 = virtualinvoke $r3.<androidx.compose.ui.input.pointer.PointerInputFilter: boolean getInterceptOutOfBoundsChildEvents()>();

        return $z1;
    }

    public java.lang.Object modifyParentData(androidx.compose.ui.unit.Density, java.lang.Object)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.unit.Density $r1;
        java.lang.Object r2, $r5;
        androidx.compose.ui.layout.ParentDataModifier $r3;
        androidx.compose.ui.Modifier$Element $r4;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 := @parameter0: androidx.compose.ui.unit.Density;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r4 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.layout.ParentDataModifier");

        $r3 = (androidx.compose.ui.layout.ParentDataModifier) $r4;

        $r5 = interfaceinvoke $r3.<androidx.compose.ui.layout.ParentDataModifier: java.lang.Object modifyParentData(androidx.compose.ui.unit.Density,java.lang.Object)>($r1, r2);

        return $r5;
    }

    public void onGloballyPositioned(androidx.compose.ui.layout.LayoutCoordinates)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.layout.LayoutCoordinates r1;
        androidx.compose.ui.Modifier$Element $r2;
        androidx.compose.ui.layout.OnGloballyPositionedModifier $r3;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coordinates");

        $r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.ui.layout.OnGloballyPositionedModifier");

        $r3 = (androidx.compose.ui.layout.OnGloballyPositionedModifier) $r2;

        interfaceinvoke $r3.<androidx.compose.ui.layout.OnGloballyPositionedModifier: void onGloballyPositioned(androidx.compose.ui.layout.LayoutCoordinates)>(r1);

        return;
    }

    public void onLookaheadPlaced(androidx.compose.ui.layout.LookaheadLayoutCoordinates)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.layout.LookaheadLayoutCoordinates r1;
        androidx.compose.ui.Modifier$Element r2;
        boolean $z0;
        androidx.compose.ui.layout.LookaheadOnPlacedModifier $r3;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 := @parameter0: androidx.compose.ui.layout.LookaheadLayoutCoordinates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coordinates");

        r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        $z0 = r2 instanceof androidx.compose.ui.layout.LookaheadOnPlacedModifier;

        if $z0 == 0 goto label1;

        $r3 = (androidx.compose.ui.layout.LookaheadOnPlacedModifier) r2;

        virtualinvoke $r3.<androidx.compose.ui.layout.LookaheadOnPlacedModifier: void onPlaced(androidx.compose.ui.layout.LookaheadLayoutCoordinates)>(r1);

     label1:
        return;
    }

    public void onRemeasured-ozmzZPI(long)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        long l0;
        androidx.compose.ui.Modifier$Element r1;
        boolean $z0;
        androidx.compose.ui.layout.OnRemeasuredModifier $r2;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        l0 := @parameter0: long;

        r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        $z0 = r1 instanceof androidx.compose.ui.layout.OnRemeasuredModifier;

        if $z0 == 0 goto label1;

        $r2 = (androidx.compose.ui.layout.OnRemeasuredModifier) r1;

        interfaceinvoke $r2.<androidx.compose.ui.layout.OnRemeasuredModifier: void onRemeasured-ozmzZPI(long)>(l0);

     label1:
        return;
    }

    public void onPlaced(androidx.compose.ui.layout.LayoutCoordinates)
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.layout.LayoutCoordinates r1;
        androidx.compose.ui.Modifier$Element r2;
        boolean $z0;
        androidx.compose.ui.layout.OnPlacedModifier $r3;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        r1 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coordinates");

        r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.layout.LayoutCoordinates lastOnPlacedCoordinates> = r1;

        r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        $z0 = r2 instanceof androidx.compose.ui.layout.OnPlacedModifier;

        if $z0 == 0 goto label1;

        $r3 = (androidx.compose.ui.layout.OnPlacedModifier) r2;

        interfaceinvoke $r3.<androidx.compose.ui.layout.OnPlacedModifier: void onPlaced(androidx.compose.ui.layout.LayoutCoordinates)>(r1);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.node.BackwardsCompatNode r0;
        androidx.compose.ui.Modifier$Element $r1;
        java.lang.String $r2;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element element>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public static final androidx.compose.ui.layout.LayoutCoordinates access$getLastOnPlacedCoordinates$p(androidx.compose.ui.node.BackwardsCompatNode)
    {
        androidx.compose.ui.node.BackwardsCompatNode $r0;
        androidx.compose.ui.layout.LayoutCoordinates $r1;

        $r0 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = $r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.layout.LayoutCoordinates lastOnPlacedCoordinates>;

        return $r1;
    }

    public static final androidx.compose.ui.focus.FocusPropertiesModifier access$getFocusOrderElement$p(androidx.compose.ui.node.BackwardsCompatNode)
    {
        androidx.compose.ui.node.BackwardsCompatNode $r0;
        androidx.compose.ui.focus.FocusPropertiesModifier $r1;

        $r0 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        $r1 = $r0.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.focus.FocusPropertiesModifier focusOrderElement>;

        return $r1;
    }

androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1
<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1: androidx.compose.ui.focus.FocusOrderModifierToProperties $scope$inlined>
    public void <init>(androidx.compose.ui.focus.FocusOrderModifierToProperties)
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1 r0;
        androidx.compose.ui.focus.FocusOrderModifierToProperties r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1;

        r1 := @parameter0: androidx.compose.ui.focus.FocusOrderModifierToProperties;

        r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1: androidx.compose.ui.focus.FocusOrderModifierToProperties $scope$inlined> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.platform.InspectorInfo)
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1 r0;
        androidx.compose.ui.platform.InspectorInfo $r1;
        androidx.compose.ui.platform.ValueElementSequence $r3;
        androidx.compose.ui.focus.FocusOrderModifierToProperties $r4;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1;

        $r1 := @parameter0: androidx.compose.ui.platform.InspectorInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$null");

        virtualinvoke $r1.<androidx.compose.ui.platform.InspectorInfo: void setName(java.lang.String)>("focusProperties");

        $r3 = virtualinvoke $r1.<androidx.compose.ui.platform.InspectorInfo: androidx.compose.ui.platform.ValueElementSequence getProperties()>();

        $r4 = r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1: androidx.compose.ui.focus.FocusOrderModifierToProperties $scope$inlined>;

        virtualinvoke $r3.<androidx.compose.ui.platform.ValueElementSequence: void set(java.lang.String,java.lang.Object)>("scope", $r4);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.platform.InspectorInfo $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.platform.InspectorInfo) r1;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$$inlined$debugInspectorInfo$1: void invoke(androidx.compose.ui.platform.InspectorInfo)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1
<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1: androidx.compose.ui.node.BackwardsCompatNode this$0>
    void <init>(androidx.compose.ui.node.BackwardsCompatNode)
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1;

        $r1 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1: androidx.compose.ui.node.BackwardsCompatNode this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        virtualinvoke $r1.<androidx.compose.ui.node.BackwardsCompatNode: void updateModifierLocalConsumer()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3
<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3: androidx.compose.ui.node.BackwardsCompatNode this$0>
    void <init>(androidx.compose.ui.node.BackwardsCompatNode)
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3;

        $r1 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3: androidx.compose.ui.node.BackwardsCompatNode this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        virtualinvoke $r1.<androidx.compose.ui.node.BackwardsCompatNode: void updateFocusOrderModifierLocalConsumer()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4
<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4: androidx.compose.ui.node.BackwardsCompatNode this$0>
    void <init>(androidx.compose.ui.node.BackwardsCompatNode)
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4;

        $r1 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4: androidx.compose.ui.node.BackwardsCompatNode this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onLayoutComplete()
    {
        androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1, $r3, $r5;
        androidx.compose.ui.layout.LayoutCoordinates $r2, $r8;
        androidx.compose.ui.node.Nodes $r4;
        androidx.compose.ui.node.DelegatableNode $r6;
        int $i0;
        androidx.compose.ui.node.NodeCoordinator $r7;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        $r2 = staticinvoke <androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.layout.LayoutCoordinates access$getLastOnPlacedCoordinates$p(androidx.compose.ui.node.BackwardsCompatNode)>($r1);

        if $r2 != null goto label1;

        $r5 = r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        $r3 = r0.<androidx.compose.ui.node.BackwardsCompatNode$initializeModifier$4: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        $r6 = (androidx.compose.ui.node.DelegatableNode) $r3;

        $r4 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        $i0 = virtualinvoke $r4.<androidx.compose.ui.node.Nodes: int getLayoutAware-OLwlOKw()>();

        $r7 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.NodeCoordinator requireCoordinator-64DMado(androidx.compose.ui.node.DelegatableNode,int)>($r6, $i0);

        $r8 = (androidx.compose.ui.layout.LayoutCoordinates) $r7;

        virtualinvoke $r5.<androidx.compose.ui.node.BackwardsCompatNode: void onPlaced(androidx.compose.ui.layout.LayoutCoordinates)>($r8);

     label1:
        return;
    }

androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1
<androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1: androidx.compose.ui.Modifier$Element $element>
<androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1: androidx.compose.ui.node.BackwardsCompatNode this$0>
    void <init>(androidx.compose.ui.Modifier$Element, androidx.compose.ui.node.BackwardsCompatNode)
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1 r0;
        androidx.compose.ui.Modifier$Element $r1;
        androidx.compose.ui.node.BackwardsCompatNode $r2;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1;

        $r1 := @parameter0: androidx.compose.ui.Modifier$Element;

        $r2 := @parameter1: androidx.compose.ui.node.BackwardsCompatNode;

        r0.<androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1: androidx.compose.ui.Modifier$Element $element> = $r1;

        r0.<androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1: androidx.compose.ui.node.BackwardsCompatNode this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1 r0;
        androidx.compose.ui.Modifier$Element $r1;
        androidx.compose.ui.node.BackwardsCompatNode $r2;
        androidx.compose.ui.draw.BuildDrawCacheParams $r3;
        androidx.compose.ui.draw.DrawCacheModifier $r4;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1: androidx.compose.ui.Modifier$Element $element>;

        $r4 = (androidx.compose.ui.draw.DrawCacheModifier) $r1;

        $r2 = r0.<androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        $r3 = (androidx.compose.ui.draw.BuildDrawCacheParams) $r2;

        interfaceinvoke $r4.<androidx.compose.ui.draw.DrawCacheModifier: void onBuildCache(androidx.compose.ui.draw.BuildDrawCacheParams)>($r3);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode$updateDrawCache$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1
<androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1: androidx.compose.ui.node.BackwardsCompatNode this$0>
    void <init>(androidx.compose.ui.node.BackwardsCompatNode)
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1;

        $r1 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        r0.<androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1: androidx.compose.ui.node.BackwardsCompatNode this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1, $r3;
        androidx.compose.ui.focus.FocusPropertiesModifier $r2;
        androidx.compose.ui.modifier.ModifierLocalReadScope $r4;
        androidx.compose.ui.modifier.ModifierLocalConsumer $r5;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        $r2 = staticinvoke <androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.focus.FocusPropertiesModifier access$getFocusOrderElement$p(androidx.compose.ui.node.BackwardsCompatNode)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $r5 = (androidx.compose.ui.modifier.ModifierLocalConsumer) $r2;

        $r3 = r0.<androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        $r4 = (androidx.compose.ui.modifier.ModifierLocalReadScope) $r3;

        interfaceinvoke $r5.<androidx.compose.ui.modifier.ModifierLocalConsumer: void onModifierLocalsUpdated(androidx.compose.ui.modifier.ModifierLocalReadScope)>($r4);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode$updateFocusOrderModifierLocalConsumer$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1
<androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1: androidx.compose.ui.node.BackwardsCompatNode this$0>
    void <init>(androidx.compose.ui.node.BackwardsCompatNode)
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1;

        $r1 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        r0.<androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1: androidx.compose.ui.node.BackwardsCompatNode this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1 r0;
        androidx.compose.ui.node.BackwardsCompatNode $r1, $r3;
        androidx.compose.ui.Modifier$Element $r2;
        androidx.compose.ui.modifier.ModifierLocalReadScope $r4;
        androidx.compose.ui.modifier.ModifierLocalConsumer $r5;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1;

        $r1 = r0.<androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element getElement()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.ui.modifier.ModifierLocalConsumer");

        $r5 = (androidx.compose.ui.modifier.ModifierLocalConsumer) $r2;

        $r3 = r0.<androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1: androidx.compose.ui.node.BackwardsCompatNode this$0>;

        $r4 = (androidx.compose.ui.modifier.ModifierLocalReadScope) $r3;

        interfaceinvoke $r5.<androidx.compose.ui.modifier.ModifierLocalConsumer: void onModifierLocalsUpdated(androidx.compose.ui.modifier.ModifierLocalReadScope)>($r4);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1;

        virtualinvoke r0.<androidx.compose.ui.node.BackwardsCompatNode$updateModifierLocalConsumer$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

