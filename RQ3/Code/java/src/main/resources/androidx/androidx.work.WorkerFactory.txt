androidx.work.WorkerFactory
<androidx.work.WorkerFactory: java.lang.String TAG>
    public void <init>()
    {
        androidx.work.WorkerFactory r0;

        r0 := @this: androidx.work.WorkerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.work.WorkerFactory: androidx.work.ListenableWorker createWorker(android.content.Context,java.lang.String,androidx.work.WorkerParameters)>
    public final androidx.work.ListenableWorker createWorkerWithDefaultFallback(android.content.Context, java.lang.String, androidx.work.WorkerParameters)
    {
        androidx.work.WorkerFactory r0;
        android.content.Context r1;
        java.lang.String r2, $r19, $r22, $r26, $r29, r35, r36;
        androidx.work.WorkerParameters r3;
        boolean $z0;
        java.lang.Class $r4, $r12, r31;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r18, $r20, $r21, $r25, $r27, $r28;
        java.lang.IllegalStateException $r11;
        java.lang.Class[] $r13;
        java.lang.Object[] $r14;
        java.lang.Object $r15;
        java.lang.Throwable $r16, $r23, r32, r34;
        androidx.work.Logger $r17, $r24;
        androidx.work.ListenableWorker r30;
        java.lang.reflect.Constructor r33;

        r0 := @this: androidx.work.WorkerFactory;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.work.WorkerParameters;

        r30 = virtualinvoke r0.<androidx.work.WorkerFactory: androidx.work.ListenableWorker createWorker(android.content.Context,java.lang.String,androidx.work.WorkerParameters)>(r1, r2, r3);

        if r30 != null goto label8;

        r31 = null;

     label1:
        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r2);

        r31 = virtualinvoke $r12.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroidx/work/ListenableWorker;");

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

        r32 = $r23;

        $r24 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r26 = <androidx.work.WorkerFactory: java.lang.String TAG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid class: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r26, $r29, r32);

     label4:
        if r31 == null goto label8;

     label5:
        $r13 = newarray (java.lang.Class)[2];

        $r13[0] = class "Landroid/content/Context;";

        $r13[1] = class "Landroidx/work/WorkerParameters;";

        r33 = virtualinvoke r31.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r13);

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r1;

        $r14[1] = r3;

        $r15 = virtualinvoke r33.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14);

        r30 = (androidx.work.ListenableWorker) $r15;

     label6:
        goto label8;

     label7:
        $r16 := @caughtexception;

        r34 = $r16;

        $r17 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r19 = <androidx.work.WorkerFactory: java.lang.String TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instantiate ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r19, $r22, r34);

     label8:
        if r30 == null goto label9;

        $z0 = virtualinvoke r30.<androidx.work.ListenableWorker: boolean isUsed()>();

        if $z0 == 0 goto label9;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r35 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WorkerFactory (");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returned an instance of a ListenableWorker (");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") which has already been invoked. createWorker() must always return a new instance of a ListenableWorker.");

        r36 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r36);

        throw $r11;

     label9:
        return r30;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static androidx.work.WorkerFactory getDefaultWorkerFactory()
    {
        androidx.work.WorkerFactory$1 $r0;

        $r0 = new androidx.work.WorkerFactory$1;

        specialinvoke $r0.<androidx.work.WorkerFactory$1: void <init>()>();

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("WorkerFactory");

        <androidx.work.WorkerFactory: java.lang.String TAG> = $r0;

        return;
    }

androidx.work.WorkerFactory$1
    void <init>()
    {
        androidx.work.WorkerFactory$1 r0;

        r0 := @this: androidx.work.WorkerFactory$1;

        specialinvoke r0.<androidx.work.WorkerFactory: void <init>()>();

        return;
    }

    public androidx.work.ListenableWorker createWorker(android.content.Context, java.lang.String, androidx.work.WorkerParameters)
    {
        androidx.work.WorkerFactory$1 r0;
        android.content.Context r1;
        java.lang.String r2;
        androidx.work.WorkerParameters r3;

        r0 := @this: androidx.work.WorkerFactory$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.work.WorkerParameters;

        return null;
    }

