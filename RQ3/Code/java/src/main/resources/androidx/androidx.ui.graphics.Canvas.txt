androidx.ui.graphics.Canvas
<androidx.ui.graphics.Canvas: android.graphics.Canvas getNativeCanvas()>
<androidx.ui.graphics.Canvas: void save()>
<androidx.ui.graphics.Canvas: void restore()>
<androidx.ui.graphics.Canvas: void saveLayer(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void translate(float,float)>
<androidx.ui.graphics.Canvas: void scale(float,float)>
<androidx.ui.graphics.Canvas: void rotate(float)>
<androidx.ui.graphics.Canvas: void skew(float,float)>
<androidx.ui.graphics.Canvas: void skewRad(float,float)>
<androidx.ui.graphics.Canvas: void concat(androidx.ui.graphics.vectormath.Matrix4)>
<androidx.ui.graphics.Canvas: void clipRect(androidx.ui.geometry.Rect,androidx.ui.graphics.ClipOp)>
<androidx.ui.graphics.Canvas: void clipRect(float,float,float,float,androidx.ui.graphics.ClipOp)>
<androidx.ui.graphics.Canvas: void clipPath(androidx.ui.graphics.Path,androidx.ui.graphics.ClipOp)>
<androidx.ui.graphics.Canvas: void drawLine(androidx.ui.geometry.Offset,androidx.ui.geometry.Offset,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawRect(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawRect(float,float,float,float,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawOval(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawOval(float,float,float,float,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawCircle(androidx.ui.geometry.Offset,float,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawArc(androidx.ui.geometry.Rect,float,float,boolean,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawArc(float,float,float,float,float,float,boolean,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawArcRad(androidx.ui.geometry.Rect,float,float,boolean,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawPath(androidx.ui.graphics.Path,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawImage(androidx.ui.graphics.ImageAsset,androidx.ui.geometry.Offset,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawImageRect(androidx.ui.graphics.ImageAsset,androidx.ui.unit.IntOffset,androidx.ui.unit.IntSize,androidx.ui.unit.IntOffset,androidx.ui.unit.IntSize,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawPoints(androidx.ui.graphics.PointMode,java.util.List,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawRawPoints(androidx.ui.graphics.PointMode,float[],androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void drawVertices(androidx.ui.graphics.Vertices,androidx.ui.graphics.BlendMode,androidx.ui.graphics.Paint)>
<androidx.ui.graphics.Canvas: void enableZ()>
<androidx.ui.graphics.Canvas: void disableZ()>
androidx.ui.graphics.Canvas$DefaultImpls
    public static void scale$default(androidx.ui.graphics.Canvas, float, float, int, java.lang.Object)
    {
        androidx.ui.graphics.Canvas r0;
        float f0, f1;
        int i0, $i1;
        java.lang.Object r1;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        f1 = f0;

     label1:
        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void scale(float,float)>(f0, f1);

        return;
    }

    public static void skewRad(androidx.ui.graphics.Canvas, float, float)
    {
        androidx.ui.graphics.Canvas r0, r1, r2;
        float f0, f1, f2, f3, f4;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        r1 = r0;

        f3 = f0 * 57.295776F;

        f4 = f3;

        r2 = r1;

        f2 = f1 * 57.295776F;

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void skew(float,float)>(f4, f2);

        return;
    }

    public static void clipRect(androidx.ui.graphics.Canvas, androidx.ui.geometry.Rect, androidx.ui.graphics.ClipOp)
    {
        androidx.ui.graphics.Canvas r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.ClipOp r2;
        float $f0, $f1, $f2, $f3;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.geometry.Rect;

        r2 := @parameter2: androidx.ui.graphics.ClipOp;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clipOp");

        $f0 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $f2 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void clipRect(float,float,float,float,androidx.ui.graphics.ClipOp)>($f0, $f1, $f2, $f3, r2);

        return;
    }

    public static void clipRect$default(androidx.ui.graphics.Canvas, androidx.ui.geometry.Rect, androidx.ui.graphics.ClipOp, int, java.lang.Object)
    {
        androidx.ui.graphics.Canvas r0;
        androidx.ui.geometry.Rect r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.ui.graphics.ClipOp r3;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.geometry.Rect;

        r3 := @parameter2: androidx.ui.graphics.ClipOp;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = <androidx.ui.graphics.ClipOp: androidx.ui.graphics.ClipOp intersect>;

     label1:
        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void clipRect(androidx.ui.geometry.Rect,androidx.ui.graphics.ClipOp)>(r1, r3);

        return;
    }

    public static void clipRect$default(androidx.ui.graphics.Canvas, float, float, float, float, androidx.ui.graphics.ClipOp, int, java.lang.Object)
    {
        androidx.ui.graphics.Canvas r0;
        float f0, f1, f2, f3;
        int i0, $i1;
        java.lang.Object r1;
        androidx.ui.graphics.ClipOp r2;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r2 := @parameter5: androidx.ui.graphics.ClipOp;

        i0 := @parameter6: int;

        r1 := @parameter7: java.lang.Object;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        r2 = <androidx.ui.graphics.ClipOp: androidx.ui.graphics.ClipOp intersect>;

     label1:
        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void clipRect(float,float,float,float,androidx.ui.graphics.ClipOp)>(f0, f1, f2, f3, r2);

        return;
    }

    public static void clipPath$default(androidx.ui.graphics.Canvas, androidx.ui.graphics.Path, androidx.ui.graphics.ClipOp, int, java.lang.Object)
    {
        androidx.ui.graphics.Canvas r0;
        androidx.ui.graphics.Path r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.ui.graphics.ClipOp r3;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.graphics.Path;

        r3 := @parameter2: androidx.ui.graphics.ClipOp;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = <androidx.ui.graphics.ClipOp: androidx.ui.graphics.ClipOp intersect>;

     label1:
        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void clipPath(androidx.ui.graphics.Path,androidx.ui.graphics.ClipOp)>(r1, r3);

        return;
    }

    public static void drawRect(androidx.ui.graphics.Canvas, androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.graphics.Canvas r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.Paint r2;
        float $f0, $f1, $f2, $f3;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.geometry.Rect;

        r2 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $f0 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $f2 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void drawRect(float,float,float,float,androidx.ui.graphics.Paint)>($f0, $f1, $f2, $f3, r2);

        return;
    }

    public static void drawOval(androidx.ui.graphics.Canvas, androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.graphics.Canvas r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.Paint r2;
        float $f0, $f1, $f2, $f3;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.geometry.Rect;

        r2 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $f0 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $f2 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void drawOval(float,float,float,float,androidx.ui.graphics.Paint)>($f0, $f1, $f2, $f3, r2);

        return;
    }

    public static void drawArc(androidx.ui.graphics.Canvas, androidx.ui.geometry.Rect, float, float, boolean, androidx.ui.graphics.Paint)
    {
        androidx.ui.graphics.Canvas r0;
        androidx.ui.geometry.Rect r1;
        float f0, f1, $f2, $f3, $f4, $f5;
        boolean z0;
        androidx.ui.graphics.Paint r2;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.geometry.Rect;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        z0 := @parameter4: boolean;

        r2 := @parameter5: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $f2 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $f4 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $f5 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void drawArc(float,float,float,float,float,float,boolean,androidx.ui.graphics.Paint)>($f2, $f3, $f4, $f5, f0, f1, z0, r2);

        return;
    }

    public static void drawArcRad(androidx.ui.graphics.Canvas, androidx.ui.geometry.Rect, float, float, boolean, androidx.ui.graphics.Paint)
    {
        androidx.ui.graphics.Canvas r0, r4, r6;
        androidx.ui.geometry.Rect r1, r3, r5;
        float f0, f1, f2, f3, f4;
        boolean z0;
        androidx.ui.graphics.Paint r2;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.geometry.Rect;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        z0 := @parameter4: boolean;

        r2 := @parameter5: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        r3 = r1;

        r4 = r0;

        f3 = f0 * 57.295776F;

        f4 = f3;

        r5 = r3;

        r6 = r4;

        f2 = f1 * 57.295776F;

        interfaceinvoke r6.<androidx.ui.graphics.Canvas: void drawArc(androidx.ui.geometry.Rect,float,float,boolean,androidx.ui.graphics.Paint)>(r5, f4, f2, z0, r2);

        return;
    }

    public static void drawImageRect$default(androidx.ui.graphics.Canvas, androidx.ui.graphics.ImageAsset, androidx.ui.unit.IntOffset, androidx.ui.unit.IntSize, androidx.ui.unit.IntOffset, androidx.ui.unit.IntSize, androidx.ui.graphics.Paint, int, java.lang.Object)
    {
        androidx.ui.graphics.Canvas r0;
        androidx.ui.graphics.ImageAsset r1;
        androidx.ui.graphics.Paint r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r3;
        androidx.ui.unit.IntOffset$Companion $r4, $r5;
        androidx.ui.unit.IntOffset r6, r8;
        androidx.ui.unit.IntSize r7, r9;

        r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.graphics.ImageAsset;

        r6 := @parameter2: androidx.ui.unit.IntOffset;

        r7 := @parameter3: androidx.ui.unit.IntSize;

        r8 := @parameter4: androidx.ui.unit.IntOffset;

        r9 := @parameter5: androidx.ui.unit.IntSize;

        r2 := @parameter6: androidx.ui.graphics.Paint;

        i0 := @parameter7: int;

        r3 := @parameter8: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r5 = <androidx.ui.unit.IntOffset: androidx.ui.unit.IntOffset$Companion Companion>;

        r6 = virtualinvoke $r5.<androidx.ui.unit.IntOffset$Companion: androidx.ui.unit.IntOffset getOrigin()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $i5 = interfaceinvoke r1.<androidx.ui.graphics.ImageAsset: int getWidth()>();

        $i6 = interfaceinvoke r1.<androidx.ui.graphics.ImageAsset: int getHeight()>();

        r7 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>($i5, $i6);

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        $r4 = <androidx.ui.unit.IntOffset: androidx.ui.unit.IntOffset$Companion Companion>;

        r8 = virtualinvoke $r4.<androidx.ui.unit.IntOffset$Companion: androidx.ui.unit.IntOffset getOrigin()>();

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r9 = r7;

     label4:
        interfaceinvoke r0.<androidx.ui.graphics.Canvas: void drawImageRect(androidx.ui.graphics.ImageAsset,androidx.ui.unit.IntOffset,androidx.ui.unit.IntSize,androidx.ui.unit.IntOffset,androidx.ui.unit.IntSize,androidx.ui.graphics.Paint)>(r1, r6, r7, r8, r9, r2);

        return;
    }

