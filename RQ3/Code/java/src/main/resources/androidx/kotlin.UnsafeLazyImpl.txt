kotlin.UnsafeLazyImpl
<kotlin.UnsafeLazyImpl: java.lang.Object _value>
<kotlin.UnsafeLazyImpl: kotlin.jvm.functions.Function0 initializer>
    public void <init>(kotlin.jvm.functions.Function0)
    {
        kotlin.UnsafeLazyImpl $r0;
        kotlin.jvm.functions.Function0 $r1;
        kotlin.UNINITIALIZED_VALUE $r2;

        $r0 := @this: kotlin.UnsafeLazyImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "initializer");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.UnsafeLazyImpl: kotlin.jvm.functions.Function0 initializer> = $r1;

        $r2 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        $r0.<kotlin.UnsafeLazyImpl: java.lang.Object _value> = $r2;

        return;
    }

    private final java.lang.Object writeReplace()
    {
        kotlin.UnsafeLazyImpl $r0;
        kotlin.InitializedLazyImpl $r1;
        java.lang.Object $r2;

        $r0 := @this: kotlin.UnsafeLazyImpl;

        $r1 = new kotlin.InitializedLazyImpl;

        $r2 = virtualinvoke $r0.<kotlin.UnsafeLazyImpl: java.lang.Object getValue()>();

        specialinvoke $r1.<kotlin.InitializedLazyImpl: void <init>(java.lang.Object)>($r2);

        return $r1;
    }

    public java.lang.Object getValue()
    {
        kotlin.UnsafeLazyImpl $r0;
        kotlin.UNINITIALIZED_VALUE $r1;
        java.lang.Object $r2;
        kotlin.jvm.functions.Function0 $r3;

        $r0 := @this: kotlin.UnsafeLazyImpl;

        $r2 = $r0.<kotlin.UnsafeLazyImpl: java.lang.Object _value>;

        $r1 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        if $r2 != $r1 goto label1;

        $r3 = $r0.<kotlin.UnsafeLazyImpl: kotlin.jvm.functions.Function0 initializer>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $r2 = interfaceinvoke $r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r0.<kotlin.UnsafeLazyImpl: java.lang.Object _value> = $r2;

        $r0.<kotlin.UnsafeLazyImpl: kotlin.jvm.functions.Function0 initializer> = null;

     label1:
        $r2 = $r0.<kotlin.UnsafeLazyImpl: java.lang.Object _value>;

        return $r2;
    }

    public boolean isInitialized()
    {
        kotlin.UnsafeLazyImpl $r0;
        kotlin.UNINITIALIZED_VALUE $r1;
        java.lang.Object $r2;

        $r0 := @this: kotlin.UnsafeLazyImpl;

        $r2 = $r0.<kotlin.UnsafeLazyImpl: java.lang.Object _value>;

        $r1 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        kotlin.UnsafeLazyImpl $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 := @this: kotlin.UnsafeLazyImpl;

        $z0 = virtualinvoke $r0.<kotlin.UnsafeLazyImpl: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<kotlin.UnsafeLazyImpl: java.lang.Object getValue()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        return $r2;

     label1:
        return "Lazy value not initialized yet.";
    }

