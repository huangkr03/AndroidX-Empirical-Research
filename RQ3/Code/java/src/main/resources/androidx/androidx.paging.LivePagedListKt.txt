androidx.paging.LivePagedListKt
    public static final androidx.lifecycle.LiveData toLiveData(androidx.paging.DataSource$Factory, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, java.util.concurrent.Executor)
    {
        androidx.paging.DataSource$Factory $r0;
        androidx.paging.PagedList$Config r1;
        java.lang.Object r2;
        androidx.paging.PagedList$BoundaryCallback r3;
        java.util.concurrent.Executor r4;
        androidx.paging.LivePagedListBuilder $r5, $r6, $r7, $r8;
        androidx.lifecycle.LiveData $r9;

        $r0 := @parameter0: androidx.paging.DataSource$Factory;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter4: java.util.concurrent.Executor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "fetchExecutor");

        $r5 = new androidx.paging.LivePagedListBuilder;

        specialinvoke $r5.<androidx.paging.LivePagedListBuilder: void <init>(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config)>($r0, r1);

        $r6 = virtualinvoke $r5.<androidx.paging.LivePagedListBuilder: androidx.paging.LivePagedListBuilder setInitialLoadKey(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<androidx.paging.LivePagedListBuilder: androidx.paging.LivePagedListBuilder setBoundaryCallback(androidx.paging.PagedList$BoundaryCallback)>(r3);

        $r8 = virtualinvoke $r7.<androidx.paging.LivePagedListBuilder: androidx.paging.LivePagedListBuilder setFetchExecutor(java.util.concurrent.Executor)>(r4);

        $r9 = virtualinvoke $r8.<androidx.paging.LivePagedListBuilder: androidx.lifecycle.LiveData build()>();

        return $r9;
    }

    public static androidx.lifecycle.LiveData toLiveData$default(androidx.paging.DataSource$Factory, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, java.util.concurrent.Executor, int, java.lang.Object)
    {
        androidx.paging.DataSource$Factory r0;
        androidx.paging.PagedList$Config r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2, r5;
        java.util.concurrent.Executor r3, r7;
        androidx.lifecycle.LiveData $r4;
        androidx.paging.PagedList$BoundaryCallback r6;

        r0 := @parameter0: androidx.paging.DataSource$Factory;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r5 := @parameter2: java.lang.Object;

        r6 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r7 := @parameter4: java.util.concurrent.Executor;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r5 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r6 = null;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r3 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "getIOThreadExecutor()");

        r7 = r3;

     label3:
        $r4 = staticinvoke <androidx.paging.LivePagedListKt: androidx.lifecycle.LiveData toLiveData(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,java.util.concurrent.Executor)>(r0, r1, r5, r6, r7);

        return $r4;
    }

    public static final androidx.lifecycle.LiveData toLiveData(androidx.paging.DataSource$Factory, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, java.util.concurrent.Executor)
    {
        androidx.paging.DataSource$Factory $r0;
        int i0;
        java.lang.Object r1;
        androidx.paging.PagedList$BoundaryCallback r2;
        java.util.concurrent.Executor r3;
        androidx.paging.LivePagedListBuilder $r4, $r6, $r7, $r8;
        androidx.paging.PagedList$Config $r5;
        androidx.lifecycle.LiveData $r9;

        $r0 := @parameter0: androidx.paging.DataSource$Factory;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r3 := @parameter4: java.util.concurrent.Executor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "fetchExecutor");

        $r4 = new androidx.paging.LivePagedListBuilder;

        $r5 = staticinvoke <androidx.paging.PagedListConfigKt: androidx.paging.PagedList$Config Config$default(int,int,boolean,int,int,int,java.lang.Object)>(i0, 0, 0, 0, 0, 30, null);

        specialinvoke $r4.<androidx.paging.LivePagedListBuilder: void <init>(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config)>($r0, $r5);

        $r6 = virtualinvoke $r4.<androidx.paging.LivePagedListBuilder: androidx.paging.LivePagedListBuilder setInitialLoadKey(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<androidx.paging.LivePagedListBuilder: androidx.paging.LivePagedListBuilder setBoundaryCallback(androidx.paging.PagedList$BoundaryCallback)>(r2);

        $r8 = virtualinvoke $r7.<androidx.paging.LivePagedListBuilder: androidx.paging.LivePagedListBuilder setFetchExecutor(java.util.concurrent.Executor)>(r3);

        $r9 = virtualinvoke $r8.<androidx.paging.LivePagedListBuilder: androidx.lifecycle.LiveData build()>();

        return $r9;
    }

    public static androidx.lifecycle.LiveData toLiveData$default(androidx.paging.DataSource$Factory, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, java.util.concurrent.Executor, int, java.lang.Object)
    {
        androidx.paging.DataSource$Factory r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r1, r4;
        java.util.concurrent.Executor r2, r6;
        androidx.lifecycle.LiveData $r3;
        androidx.paging.PagedList$BoundaryCallback r5;

        r0 := @parameter0: androidx.paging.DataSource$Factory;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r6 := @parameter4: java.util.concurrent.Executor;

        i1 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r4 = null;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        r5 = null;

     label2:
        $i4 = i1 & 8;

        if $i4 == 0 goto label3;

        r2 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "getIOThreadExecutor()");

        r6 = r2;

     label3:
        $r3 = staticinvoke <androidx.paging.LivePagedListKt: androidx.lifecycle.LiveData toLiveData(androidx.paging.DataSource$Factory,int,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,java.util.concurrent.Executor)>(r0, i0, r4, r5, r6);

        return $r3;
    }

    public static final androidx.lifecycle.LiveData toLiveData(kotlin.jvm.functions.Function0, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CoroutineDispatcher)
    {
        kotlin.jvm.functions.Function0 $r0;
        androidx.paging.PagedList$Config r1;
        java.lang.Object r2;
        androidx.paging.PagedList$BoundaryCallback r3;
        kotlinx.coroutines.CoroutineScope r4;
        kotlinx.coroutines.CoroutineDispatcher r5, $r8;
        java.util.concurrent.Executor r6;
        androidx.paging.LivePagedList $r7;
        androidx.lifecycle.LiveData $r9;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter4: kotlinx.coroutines.CoroutineScope;

        r5 := @parameter5: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "coroutineScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "fetchDispatcher");

        $r7 = new androidx.paging.LivePagedList;

        r6 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "getMainThreadExecutor()");

        $r8 = staticinvoke <kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher 'from'(java.util.concurrent.Executor)>(r6);

        specialinvoke $r7.<androidx.paging.LivePagedList: void <init>(kotlinx.coroutines.CoroutineScope,java.lang.Object,androidx.paging.PagedList$Config,androidx.paging.PagedList$BoundaryCallback,kotlin.jvm.functions.Function0,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r4, r2, r1, r3, $r0, $r8, r5);

        $r9 = (androidx.lifecycle.LiveData) $r7;

        return $r9;
    }

    public static androidx.lifecycle.LiveData toLiveData$default(kotlin.jvm.functions.Function0, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CoroutineDispatcher, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.paging.PagedList$Config r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2, r6;
        java.util.concurrent.Executor r3;
        androidx.lifecycle.LiveData $r4;
        kotlinx.coroutines.GlobalScope $r5;
        androidx.paging.PagedList$BoundaryCallback r7;
        kotlinx.coroutines.CoroutineScope r8;
        kotlinx.coroutines.CoroutineDispatcher r9;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r6 := @parameter2: java.lang.Object;

        r7 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r8 := @parameter4: kotlinx.coroutines.CoroutineScope;

        r9 := @parameter5: kotlinx.coroutines.CoroutineDispatcher;

        i0 := @parameter6: int;

        r2 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r6 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r7 = null;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        $r5 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        r8 = (kotlinx.coroutines.CoroutineScope) $r5;

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r3 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "getIOThreadExecutor()");

        r9 = staticinvoke <kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher 'from'(java.util.concurrent.Executor)>(r3);

     label4:
        $r4 = staticinvoke <androidx.paging.LivePagedListKt: androidx.lifecycle.LiveData toLiveData(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher)>(r0, r1, r6, r7, r8, r9);

        return $r4;
    }

    public static final androidx.lifecycle.LiveData toLiveData(kotlin.jvm.functions.Function0, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CoroutineDispatcher)
    {
        kotlin.jvm.functions.Function0 $r0;
        int i0;
        java.lang.Object r1;
        androidx.paging.PagedList$BoundaryCallback r2;
        kotlinx.coroutines.CoroutineScope r3;
        kotlinx.coroutines.CoroutineDispatcher r4, $r10;
        java.util.concurrent.Executor r5;
        androidx.paging.LivePagedList $r6;
        androidx.paging.PagedList$Config$Builder $r7, $r8;
        androidx.paging.PagedList$Config $r9;
        androidx.lifecycle.LiveData $r11;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r3 := @parameter4: kotlinx.coroutines.CoroutineScope;

        r4 := @parameter5: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "coroutineScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "fetchDispatcher");

        $r6 = new androidx.paging.LivePagedList;

        $r7 = new androidx.paging.PagedList$Config$Builder;

        specialinvoke $r7.<androidx.paging.PagedList$Config$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<androidx.paging.PagedList$Config$Builder: androidx.paging.PagedList$Config$Builder setPageSize(int)>(i0);

        $r9 = virtualinvoke $r8.<androidx.paging.PagedList$Config$Builder: androidx.paging.PagedList$Config build()>();

        r5 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "getMainThreadExecutor()");

        $r10 = staticinvoke <kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher 'from'(java.util.concurrent.Executor)>(r5);

        specialinvoke $r6.<androidx.paging.LivePagedList: void <init>(kotlinx.coroutines.CoroutineScope,java.lang.Object,androidx.paging.PagedList$Config,androidx.paging.PagedList$BoundaryCallback,kotlin.jvm.functions.Function0,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r3, r1, $r9, r2, $r0, $r10, r4);

        $r11 = (androidx.lifecycle.LiveData) $r6;

        return $r11;
    }

    public static androidx.lifecycle.LiveData toLiveData$default(kotlin.jvm.functions.Function0, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CoroutineDispatcher, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1, r5;
        java.util.concurrent.Executor r2;
        androidx.lifecycle.LiveData $r3;
        kotlinx.coroutines.GlobalScope $r4;
        androidx.paging.PagedList$BoundaryCallback r6;
        kotlinx.coroutines.CoroutineScope r7;
        kotlinx.coroutines.CoroutineDispatcher r8;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.Object;

        r6 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r7 := @parameter4: kotlinx.coroutines.CoroutineScope;

        r8 := @parameter5: kotlinx.coroutines.CoroutineDispatcher;

        i1 := @parameter6: int;

        r1 := @parameter7: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r5 = null;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        r6 = null;

     label2:
        $i4 = i1 & 8;

        if $i4 == 0 goto label3;

        $r4 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        r7 = (kotlinx.coroutines.CoroutineScope) $r4;

     label3:
        $i5 = i1 & 16;

        if $i5 == 0 goto label4;

        r2 = staticinvoke <androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "getIOThreadExecutor()");

        r8 = staticinvoke <kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher 'from'(java.util.concurrent.Executor)>(r2);

     label4:
        $r3 = staticinvoke <androidx.paging.LivePagedListKt: androidx.lifecycle.LiveData toLiveData(kotlin.jvm.functions.Function0,int,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher)>(r0, i0, r5, r6, r7, r8);

        return $r3;
    }

