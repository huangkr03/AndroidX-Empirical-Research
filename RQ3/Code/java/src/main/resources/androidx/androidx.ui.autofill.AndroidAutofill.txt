androidx.ui.autofill.AndroidAutofill
<androidx.ui.autofill.AndroidAutofill: android.view.View view>
<androidx.ui.autofill.AndroidAutofill: androidx.ui.autofill.AutofillTree autofillTree>
<androidx.ui.autofill.AndroidAutofill: android.view.autofill.AutofillManager autofillManager>
    public void <init>(android.view.View, androidx.ui.autofill.AutofillTree)
    {
        androidx.ui.autofill.AndroidAutofill r0, r4;
        android.view.View r1, $r5, $r8;
        androidx.ui.autofill.AutofillTree r2;
        android.view.autofill.AutofillManager r3, r13;
        boolean z0;
        android.content.Context $r6;
        java.lang.Object $r7;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10, r12;
        java.lang.Throwable $r11;

        r0 := @this: androidx.ui.autofill.AndroidAutofill;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.ui.autofill.AutofillTree;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "autofillTree");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.autofill.AndroidAutofill: android.view.View view> = r1;

        r0.<androidx.ui.autofill.AndroidAutofill: androidx.ui.autofill.AutofillTree autofillTree> = r2;

        $r5 = virtualinvoke r0.<androidx.ui.autofill.AndroidAutofill: android.view.View getView()>();

        $r6 = virtualinvoke $r5.<android.view.View: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManager;");

        r3 = (android.view.autofill.AutofillManager) $r7;

        if r3 != null goto label1;

        r12 = "Autofill service could not be located.";

        r4 = r0;

        z0 = 0;

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        $r11 = (java.lang.Throwable) $r9;

        throw $r11;

     label1:
        r13 = r3;

        r0.<androidx.ui.autofill.AndroidAutofill: android.view.autofill.AutofillManager autofillManager> = r13;

        $r8 = virtualinvoke r0.<androidx.ui.autofill.AndroidAutofill: android.view.View getView()>();

        virtualinvoke $r8.<android.view.View: void setImportantForAutofill(int)>(1);

        return;
    }

    public final android.view.View getView()
    {
        androidx.ui.autofill.AndroidAutofill r0;
        android.view.View $r1;

        r0 := @this: androidx.ui.autofill.AndroidAutofill;

        $r1 = r0.<androidx.ui.autofill.AndroidAutofill: android.view.View view>;

        return $r1;
    }

    public final androidx.ui.autofill.AutofillTree getAutofillTree()
    {
        androidx.ui.autofill.AndroidAutofill r0;
        androidx.ui.autofill.AutofillTree $r1;

        r0 := @this: androidx.ui.autofill.AndroidAutofill;

        $r1 = r0.<androidx.ui.autofill.AndroidAutofill: androidx.ui.autofill.AutofillTree autofillTree>;

        return $r1;
    }

    public final android.view.autofill.AutofillManager getAutofillManager()
    {
        androidx.ui.autofill.AndroidAutofill r0;
        android.view.autofill.AutofillManager $r1;

        r0 := @this: androidx.ui.autofill.AndroidAutofill;

        $r1 = r0.<androidx.ui.autofill.AndroidAutofill: android.view.autofill.AutofillManager autofillManager>;

        return $r1;
    }

    public void requestAutofillForNode(androidx.ui.autofill.AutofillNode)
    {
        androidx.ui.autofill.AndroidAutofill r0;
        androidx.ui.autofill.AutofillNode r1;
        android.graphics.Rect r2, r3, r4;
        java.lang.String r5, $r11;
        boolean z0;
        android.view.autofill.AutofillManager r6, $r8;
        android.view.View r7, $r9;
        int i0, $i1;
        java.lang.IllegalStateException $r10;
        java.lang.Throwable $r12;

        r0 := @this: androidx.ui.autofill.AndroidAutofill;

        r1 := @parameter0: androidx.ui.autofill.AutofillNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "autofillNode");

        $r8 = virtualinvoke r0.<androidx.ui.autofill.AndroidAutofill: android.view.autofill.AutofillManager getAutofillManager()>();

        $r9 = virtualinvoke r0.<androidx.ui.autofill.AndroidAutofill: android.view.View getView()>();

        $i1 = virtualinvoke r1.<androidx.ui.autofill.AutofillNode: int getId()>();

        r3 = virtualinvoke r1.<androidx.ui.autofill.AutofillNode: android.graphics.Rect getBoundingBox()>();

        if r3 != null goto label1;

        r5 = "requestAutofill called before onChildPositioned()";

        i0 = $i1;

        r7 = $r9;

        r6 = $r8;

        z0 = 0;

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        $r12 = (java.lang.Throwable) $r10;

        throw $r12;

     label1:
        r4 = r3;

        r2 = r4;

        virtualinvoke $r8.<android.view.autofill.AutofillManager: void notifyViewEntered(android.view.View,int,android.graphics.Rect)>($r9, $i1, r2);

        return;
    }

    public void cancelAutofillForNode(androidx.ui.autofill.AutofillNode)
    {
        androidx.ui.autofill.AndroidAutofill r0;
        androidx.ui.autofill.AutofillNode r1;
        android.view.autofill.AutofillManager $r2;
        android.view.View $r3;
        int $i0;

        r0 := @this: androidx.ui.autofill.AndroidAutofill;

        r1 := @parameter0: androidx.ui.autofill.AutofillNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "autofillNode");

        $r2 = virtualinvoke r0.<androidx.ui.autofill.AndroidAutofill: android.view.autofill.AutofillManager getAutofillManager()>();

        $r3 = virtualinvoke r0.<androidx.ui.autofill.AndroidAutofill: android.view.View getView()>();

        $i0 = virtualinvoke r1.<androidx.ui.autofill.AutofillNode: int getId()>();

        virtualinvoke $r2.<android.view.autofill.AutofillManager: void notifyViewExited(android.view.View,int)>($r3, $i0);

        return;
    }

