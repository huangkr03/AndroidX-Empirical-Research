androidx.compose.animation.core.VectorizedRepeatableSpec
<androidx.compose.animation.core.VectorizedRepeatableSpec: int iterations>
<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec animation>
<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.RepeatMode repeatMode>
<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos>
<androidx.compose.animation.core.VectorizedRepeatableSpec: long initialOffsetNanos>
<androidx.compose.animation.core.VectorizedRepeatableSpec: int $stable>
    private void <init>(int, androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, long)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        int i0, $i2, $i3, $i4, $i5;
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec r1, $r3, $r4;
        androidx.compose.animation.core.RepeatMode r2;
        long l1, $l6, $l7, $l8;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec;

        r2 := @parameter2: androidx.compose.animation.core.RepeatMode;

        l1 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: int iterations> = i0;

        r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec animation> = r1;

        r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.RepeatMode repeatMode> = r2;

        $i2 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: int iterations>;

        if $i2 >= 1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Iterations count can\'t be less than 1");

        throw $r5;

     label1:
        $r3 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec animation>;

        $i3 = interfaceinvoke $r3.<androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec: int getDelayMillis()>();

        $r4 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec animation>;

        $i4 = interfaceinvoke $r4.<androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec: int getDurationMillis()>();

        $i5 = $i3 + $i4;

        $l6 = (long) $i5;

        $l7 = $l6 * 1000000L;

        r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos> = $l7;

        $l8 = l1 * 1000000L;

        r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long initialOffsetNanos> = $l8;

        return;
    }

    public void <init>(int, androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, long, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        int i0, i1, $i2, $i3;
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec r1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.compose.animation.core.RepeatMode r3;
        long l4;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec;

        r3 := @parameter2: androidx.compose.animation.core.RepeatMode;

        l4 := @parameter3: long;

        i1 := @parameter4: int;

        r2 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r3 = <androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode Restart>;

     label1:
        $i3 = i1 & 8;

        if $i3 == 0 goto label2;

        l4 = staticinvoke <androidx.compose.animation.core.StartOffset: long constructor-impl$default(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 2, null);

     label2:
        specialinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: void <init>(int,androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, r1, r3, l4, null);

        return;
    }

    public void <init>(int, androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        int i0;
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec r1;
        androidx.compose.animation.core.RepeatMode r2;
        long $l1;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec;

        r2 := @parameter2: androidx.compose.animation.core.RepeatMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "repeatMode");

        $l1 = staticinvoke <androidx.compose.animation.core.StartOffset: long constructor-impl$default(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 2, null);

        specialinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: void <init>(int,androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, r1, r2, $l1, null);

        return;
    }

    public void <init>(int, androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        int i0, i1, $i2;
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec r1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.compose.animation.core.RepeatMode r3;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec;

        r3 := @parameter2: androidx.compose.animation.core.RepeatMode;

        i1 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r3 = <androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode Restart>;

     label1:
        specialinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: void <init>(int,androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode)>(i0, r1, r3);

        return;
    }

    public final long getDurationNanos$animation_core_release()
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        long $l0;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        $l0 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos>;

        return $l0;
    }

    private final long repetitionPlayTimeNanos(long)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        long l0, l1, l2, $l3, $l4, $l6, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18, $l19, $l20, $l21;
        byte $b5, $b17;
        int $i8;
        androidx.compose.animation.core.RepeatMode $r1, $r2;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        l0 := @parameter0: long;

        $l3 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long initialOffsetNanos>;

        $l4 = l0 + $l3;

        $b5 = $l4 cmp 0L;

        if $b5 > 0 goto label1;

        return 0L;

     label1:
        $l6 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long initialOffsetNanos>;

        l1 = l0 + $l6;

        $l7 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos>;

        $l11 = l1 / $l7;

        $i8 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: int iterations>;

        $l9 = (long) $i8;

        $l10 = $l9 - 1L;

        l2 = staticinvoke <java.lang.Math: long min(long,long)>($l11, $l10);

        $r2 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.RepeatMode repeatMode>;

        $r1 = <androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode Restart>;

        if $r2 == $r1 goto label2;

        $l15 = (long) 2;

        $l16 = l2 % $l15;

        $b17 = $l16 cmp 0L;

        if $b17 != 0 goto label3;

     label2:
        $l12 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos>;

        $l13 = l2 * $l12;

        $l14 = l1 - $l13;

        return $l14;

     label3:
        $l19 = l2 + 1L;

        $l18 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos>;

        $l20 = $l19 * $l18;

        $l21 = $l20 - l1;

        return $l21;
    }

    private final androidx.compose.animation.core.AnimationVector repetitionStartVelocity(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        long l0, $l1, $l2, $l3, $l5, $l6, $l7;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r4;
        byte $b4;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        $l1 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long initialOffsetNanos>;

        $l3 = l0 + $l1;

        $l2 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos>;

        $b4 = $l3 cmp $l2;

        if $b4 <= 0 goto label1;

        $l6 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos>;

        $l5 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long initialOffsetNanos>;

        $l7 = $l6 - $l5;

        $r4 = virtualinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($l7, r1, r2, r3);

        goto label2;

     label1:
        $r4 = r2;

     label2:
        return $r4;
    }

    public androidx.compose.animation.core.AnimationVector getValueFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        long l0, $l1;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r5, $r6;
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec animation>;

        $l1 = specialinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long repetitionPlayTimeNanos(long)>(l0);

        $r5 = specialinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.AnimationVector repetitionStartVelocity(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, r1, r3, r2);

        $r6 = interfaceinvoke $r4.<androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec: androidx.compose.animation.core.AnimationVector getValueFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($l1, r1, r2, $r5);

        return $r6;
    }

    public androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        long l0, $l1;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r5, $r6;
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec animation>;

        $l1 = specialinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long repetitionPlayTimeNanos(long)>(l0);

        $r5 = specialinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: androidx.compose.animation.core.AnimationVector repetitionStartVelocity(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, r1, r3, r2);

        $r6 = interfaceinvoke $r4.<androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($l1, r1, r2, $r5);

        return $r6;
    }

    public long getDurationNanos(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3;
        int $i0;
        long $l1, $l2, $l3, $l4, $l5;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter2: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $i0 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: int iterations>;

        $l2 = (long) $i0;

        $l1 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long durationNanos>;

        $l4 = $l2 * $l1;

        $l3 = r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: long initialOffsetNanos>;

        $l5 = $l4 - $l3;

        return $l5;
    }

    public void <init>(int, androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec, androidx.compose.animation.core.RepeatMode, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.VectorizedRepeatableSpec r0;
        int i0;
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec r1;
        androidx.compose.animation.core.RepeatMode r2;
        long l1;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.compose.animation.core.VectorizedRepeatableSpec;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec;

        r2 := @parameter2: androidx.compose.animation.core.RepeatMode;

        l1 := @parameter3: long;

        $r3 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.animation.core.VectorizedRepeatableSpec: void <init>(int,androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec,androidx.compose.animation.core.RepeatMode,long)>(i0, r1, r2, l1);

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.animation.core.VectorizedRepeatableSpec: int $stable> = 8;

        return;
    }

