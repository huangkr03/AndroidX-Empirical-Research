androidx.animation.TransitionSpec
<androidx.animation.TransitionSpec: java.lang.Object nextState>
<androidx.animation.TransitionSpec: androidx.animation.InterruptionHandling interruptionHandling>
<androidx.animation.TransitionSpec: androidx.animation.DefaultTransitionAnimation defaultAnimation>
<androidx.animation.TransitionSpec: java.util.Map propAnimation>
<androidx.animation.TransitionSpec: kotlin.Pair[] fromToPairs>
    public final java.lang.Object getNextState()
    {
        androidx.animation.TransitionSpec r0;
        java.lang.Object $r1;

        r0 := @this: androidx.animation.TransitionSpec;

        $r1 = r0.<androidx.animation.TransitionSpec: java.lang.Object nextState>;

        return $r1;
    }

    public final void setNextState(java.lang.Object)
    {
        androidx.animation.TransitionSpec r0;
        java.lang.Object r1;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.animation.TransitionSpec: java.lang.Object nextState> = r1;

        return;
    }

    public final androidx.animation.InterruptionHandling getInterruptionHandling()
    {
        androidx.animation.TransitionSpec r0;
        androidx.animation.InterruptionHandling $r1;

        r0 := @this: androidx.animation.TransitionSpec;

        $r1 = r0.<androidx.animation.TransitionSpec: androidx.animation.InterruptionHandling interruptionHandling>;

        return $r1;
    }

    public final void setInterruptionHandling(androidx.animation.InterruptionHandling)
    {
        androidx.animation.TransitionSpec r0;
        androidx.animation.InterruptionHandling r1;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: androidx.animation.InterruptionHandling;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.animation.TransitionSpec: androidx.animation.InterruptionHandling interruptionHandling> = r1;

        return;
    }

    public final androidx.animation.DefaultTransitionAnimation getDefaultAnimation$ui_animation_core_release()
    {
        androidx.animation.TransitionSpec r0;
        androidx.animation.DefaultTransitionAnimation $r1;

        r0 := @this: androidx.animation.TransitionSpec;

        $r1 = r0.<androidx.animation.TransitionSpec: androidx.animation.DefaultTransitionAnimation defaultAnimation>;

        return $r1;
    }

    public final void setDefaultAnimation$ui_animation_core_release(androidx.animation.DefaultTransitionAnimation)
    {
        androidx.animation.TransitionSpec r0;
        androidx.animation.DefaultTransitionAnimation r1;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: androidx.animation.DefaultTransitionAnimation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.animation.TransitionSpec: androidx.animation.DefaultTransitionAnimation defaultAnimation> = r1;

        return;
    }

    public final androidx.animation.AnimationSpec getAnimationForProp$ui_animation_core_release(androidx.animation.PropKey)
    {
        androidx.animation.TransitionSpec r0;
        androidx.animation.PropKey r1;
        java.util.Map $r2;
        java.lang.Object r3, $r10;
        androidx.animation.AnimationSpec r4, $r5;
        java.lang.NullPointerException $r6;
        androidx.animation.DefaultTransitionAnimation $r7;
        androidx.animation.TwoWayConverter $r8;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: androidx.animation.PropKey;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "prop");

        $r2 = r0.<androidx.animation.TransitionSpec: java.util.Map propAnimation>;

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label1;

        $r7 = r0.<androidx.animation.TransitionSpec: androidx.animation.DefaultTransitionAnimation defaultAnimation>;

        $r8 = interfaceinvoke r1.<androidx.animation.PropKey: androidx.animation.TwoWayConverter getTypeConverter()>();

        r4 = interfaceinvoke $r7.<androidx.animation.DefaultTransitionAnimation: androidx.animation.AnimationSpec createDefault(androidx.animation.TwoWayConverter)>($r8);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        $r10 = r4;

        goto label2;

     label1:
        $r10 = r3;

     label2:
        if $r10 != null goto label3;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type androidx.animation.AnimationSpec<V>");

        throw $r6;

     label3:
        $r5 = (androidx.animation.AnimationSpec) $r10;

        return $r5;
    }

    public final boolean defines$ui_animation_core_release(java.lang.Object, java.lang.Object)
    {
        androidx.animation.TransitionSpec r0;
        java.lang.Object r1, r2, $r6, $r7;
        kotlin.Pair[] r3;
        int i0, i1;
        kotlin.Pair r4, r5;
        boolean $z2, $z3, $z4, $z5;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r0.<androidx.animation.TransitionSpec: kotlin.Pair[] fromToPairs>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r4 = r3[i1];

        r5 = r4;

        $r6 = virtualinvoke r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r1);

        if $z2 == 0 goto label2;

        $r7 = virtualinvoke r5.<kotlin.Pair: java.lang.Object getSecond()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r2);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 == 0 goto label4;

        $z5 = 1;

        goto label6;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    public final void using(androidx.animation.PropKey, androidx.animation.AnimationBuilder)
    {
        androidx.animation.TransitionSpec r0;
        androidx.animation.PropKey $r1;
        androidx.animation.AnimationBuilder r2;
        java.util.Map $r3;
        androidx.animation.TwoWayConverter $r4;
        androidx.animation.AnimationSpec $r5;

        r0 := @this: androidx.animation.TransitionSpec;

        $r1 := @parameter0: androidx.animation.PropKey;

        r2 := @parameter1: androidx.animation.AnimationBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$using");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "builder");

        $r3 = r0.<androidx.animation.TransitionSpec: java.util.Map propAnimation>;

        $r4 = interfaceinvoke $r1.<androidx.animation.PropKey: androidx.animation.TwoWayConverter getTypeConverter()>();

        $r5 = virtualinvoke r2.<androidx.animation.AnimationBuilder: androidx.animation.AnimationSpec build(androidx.animation.TwoWayConverter)>($r4);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

        return;
    }

    public final androidx.animation.DurationBasedAnimationBuilder tween(kotlin.jvm.functions.Function1)
    {
        androidx.animation.TransitionSpec r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.animation.TweenBuilder r2, $r3;
        boolean z0, z1;
        androidx.animation.DurationBasedAnimationBuilder $r5;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "init");

        $r3 = new androidx.animation.TweenBuilder;

        specialinvoke $r3.<androidx.animation.TweenBuilder: void <init>()>();

        r2 = $r3;

        z0 = 0;

        z1 = 0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r5 = (androidx.animation.DurationBasedAnimationBuilder) r2;

        return $r5;
    }

    public final androidx.animation.AnimationBuilder physics(kotlin.jvm.functions.Function1)
    {
        androidx.animation.TransitionSpec r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.animation.PhysicsBuilder r2, $r3;
        boolean z0, z1;
        androidx.animation.AnimationBuilder $r5;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "init");

        $r3 = new androidx.animation.PhysicsBuilder;

        specialinvoke $r3.<androidx.animation.PhysicsBuilder: void <init>(float,float,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, null, 7, null);

        r2 = $r3;

        z0 = 0;

        z1 = 0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r5 = (androidx.animation.AnimationBuilder) r2;

        return $r5;
    }

    public final androidx.animation.KeyframesBuilder keyframes(kotlin.jvm.functions.Function1)
    {
        androidx.animation.TransitionSpec r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.animation.KeyframesBuilder r2, $r3;
        boolean z0, z1;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "init");

        $r3 = new androidx.animation.KeyframesBuilder;

        specialinvoke $r3.<androidx.animation.KeyframesBuilder: void <init>()>();

        r2 = $r3;

        z0 = 0;

        z1 = 0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        return r2;
    }

    public final androidx.animation.AnimationBuilder repeatable(kotlin.jvm.functions.Function1)
    {
        androidx.animation.TransitionSpec r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.animation.RepeatableBuilder r2, $r3;
        boolean z0, z1;
        androidx.animation.AnimationBuilder $r5;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "init");

        $r3 = new androidx.animation.RepeatableBuilder;

        specialinvoke $r3.<androidx.animation.RepeatableBuilder: void <init>()>();

        r2 = $r3;

        z0 = 0;

        z1 = 0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r5 = (androidx.animation.AnimationBuilder) r2;

        return $r5;
    }

    public final androidx.animation.AnimationBuilder snap()
    {
        androidx.animation.TransitionSpec r0;
        androidx.animation.SnapBuilder $r1;
        androidx.animation.AnimationBuilder $r2;

        r0 := @this: androidx.animation.TransitionSpec;

        $r1 = new androidx.animation.SnapBuilder;

        specialinvoke $r1.<androidx.animation.SnapBuilder: void <init>()>();

        $r2 = (androidx.animation.AnimationBuilder) $r1;

        return $r2;
    }

    public void <init>(kotlin.Pair[])
    {
        androidx.animation.TransitionSpec r0, r2;
        kotlin.Pair[] r1;
        boolean z0;
        java.util.Map r3;
        androidx.animation.InterruptionHandling $r4;
        androidx.animation.SpringTransition $r5;
        androidx.animation.DefaultTransitionAnimation $r6;
        java.util.LinkedHashMap $r7;

        r0 := @this: androidx.animation.TransitionSpec;

        r1 := @parameter0: kotlin.Pair[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fromToPairs");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.TransitionSpec: kotlin.Pair[] fromToPairs> = r1;

        $r4 = <androidx.animation.InterruptionHandling: androidx.animation.InterruptionHandling PHYSICS>;

        r0.<androidx.animation.TransitionSpec: androidx.animation.InterruptionHandling interruptionHandling> = $r4;

        $r5 = new androidx.animation.SpringTransition;

        specialinvoke $r5.<androidx.animation.SpringTransition: void <init>()>();

        $r6 = (androidx.animation.DefaultTransitionAnimation) $r5;

        r0.<androidx.animation.TransitionSpec: androidx.animation.DefaultTransitionAnimation defaultAnimation> = $r6;

        r2 = r0;

        z0 = 0;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r3 = (java.util.Map) $r7;

        r2.<androidx.animation.TransitionSpec: java.util.Map propAnimation> = r3;

        return;
    }

