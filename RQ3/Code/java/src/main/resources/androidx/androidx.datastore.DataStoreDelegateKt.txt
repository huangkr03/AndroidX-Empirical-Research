androidx.datastore.DataStoreDelegateKt
    public static final kotlin.properties.ReadOnlyProperty dataStore(java.lang.String, androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, kotlinx.coroutines.CoroutineScope)
    {
        java.lang.String r0;
        androidx.datastore.core.Serializer r1;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r2;
        kotlin.jvm.functions.Function1 r3;
        kotlinx.coroutines.CoroutineScope r4;
        androidx.datastore.DataStoreSingletonDelegate $r5;
        kotlin.properties.ReadOnlyProperty $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.datastore.core.Serializer;

        r2 := @parameter2: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r3 := @parameter3: kotlin.jvm.functions.Function1;

        r4 := @parameter4: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "fileName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "serializer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "produceMigrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "scope");

        $r5 = new androidx.datastore.DataStoreSingletonDelegate;

        specialinvoke $r5.<androidx.datastore.DataStoreSingletonDelegate: void <init>(java.lang.String,androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,kotlinx.coroutines.CoroutineScope)>(r0, r1, r2, r3, r4);

        $r6 = (kotlin.properties.ReadOnlyProperty) $r5;

        return $r6;
    }

    public static kotlin.properties.ReadOnlyProperty dataStore$default(java.lang.String, androidx.datastore.core.Serializer, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, kotlinx.coroutines.CoroutineScope, int, java.lang.Object)
    {
        java.lang.String r0;
        androidx.datastore.core.Serializer r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        kotlin.properties.ReadOnlyProperty $r3;
        kotlinx.coroutines.Dispatchers $r4;
        kotlinx.coroutines.CoroutineDispatcher $r5;
        kotlinx.coroutines.CompletableJob $r6;
        kotlin.coroutines.CoroutineContext $r7, $r8;
        androidx.datastore.DataStoreDelegateKt$dataStore$1 $r9;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r10;
        kotlin.jvm.functions.Function1 r11;
        kotlinx.coroutines.CoroutineScope r12;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.datastore.core.Serializer;

        r10 := @parameter2: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r11 := @parameter3: kotlin.jvm.functions.Function1;

        r12 := @parameter4: kotlinx.coroutines.CoroutineScope;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r10 = null;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        $r9 = <androidx.datastore.DataStoreDelegateKt$dataStore$1: androidx.datastore.DataStoreDelegateKt$dataStore$1 INSTANCE>;

        r11 = (kotlin.jvm.functions.Function1) $r9;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        $r4 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE>;

        $r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        $r6 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        $r8 = virtualinvoke $r5.<kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r7);

        r12 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r8);

     label3:
        $r3 = staticinvoke <androidx.datastore.DataStoreDelegateKt: kotlin.properties.ReadOnlyProperty dataStore(java.lang.String,androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,kotlinx.coroutines.CoroutineScope)>(r0, r1, r10, r11, r12);

        return $r3;
    }

