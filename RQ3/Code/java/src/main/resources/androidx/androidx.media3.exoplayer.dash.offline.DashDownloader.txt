androidx.media3.exoplayer.dash.offline.DashDownloader
<androidx.media3.exoplayer.dash.offline.DashDownloader: androidx.media3.exoplayer.dash.BaseUrlExclusionList baseUrlExclusionList>
    public void <init>(androidx.media3.common.MediaItem, androidx.media3.datasource.cache.CacheDataSource$Factory)
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.datasource.cache.CacheDataSource$Factory r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r3 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        specialinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor)>(r1, r2, $r3);

        return;
    }

    public void <init>(androidx.media3.common.MediaItem, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor)
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.datasource.cache.CacheDataSource$Factory r2;
        java.util.concurrent.Executor r3;
        androidx.media3.exoplayer.dash.manifest.DashManifestParser $r4;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r3 := @parameter2: java.util.concurrent.Executor;

        $r4 = new androidx.media3.exoplayer.dash.manifest.DashManifestParser;

        specialinvoke $r4.<androidx.media3.exoplayer.dash.manifest.DashManifestParser: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor,long)>(r1, $r4, r2, r3, 20000L);

        return;
    }

    public void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.upstream.ParsingLoadable$Parser, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor)
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r2;
        androidx.media3.datasource.cache.CacheDataSource$Factory r3;
        java.util.concurrent.Executor r4;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r3 := @parameter2: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r4 := @parameter3: java.util.concurrent.Executor;

        specialinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor,long)>(r1, r2, r3, r4, 20000L);

        return;
    }

    public void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.upstream.ParsingLoadable$Parser, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor, long)
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r2;
        androidx.media3.datasource.cache.CacheDataSource$Factory r3;
        java.util.concurrent.Executor r4;
        long l0;
        androidx.media3.exoplayer.dash.BaseUrlExclusionList $r5;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r3 := @parameter2: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r4 := @parameter3: java.util.concurrent.Executor;

        l0 := @parameter4: long;

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor,long)>(r1, r2, r3, r4, l0);

        $r5 = new androidx.media3.exoplayer.dash.BaseUrlExclusionList;

        specialinvoke $r5.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: void <init>()>();

        r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: androidx.media3.exoplayer.dash.BaseUrlExclusionList baseUrlExclusionList> = $r5;

        return;
    }

    protected java.util.List getSegments(androidx.media3.datasource.DataSource, androidx.media3.exoplayer.dash.manifest.DashManifest, boolean) throws java.io.IOException, java.lang.InterruptedException
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.exoplayer.dash.manifest.DashManifest r2;
        boolean z0;
        java.util.ArrayList r3, $r6;
        androidx.media3.exoplayer.dash.manifest.Period r4;
        long l0, l1, $l3;
        java.util.List r5;
        int $i2, $i4, i5, i6;
        java.lang.Object $r7;
        androidx.media3.exoplayer.dash.manifest.AdaptationSet $r8;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.exoplayer.dash.manifest.DashManifest;

        z0 := @parameter2: boolean;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        i5 = 0;

     label1:
        $i2 = virtualinvoke r2.<androidx.media3.exoplayer.dash.manifest.DashManifest: int getPeriodCount()>();

        if i5 >= $i2 goto label4;

        r4 = virtualinvoke r2.<androidx.media3.exoplayer.dash.manifest.DashManifest: androidx.media3.exoplayer.dash.manifest.Period getPeriod(int)>(i5);

        $l3 = r4.<androidx.media3.exoplayer.dash.manifest.Period: long startMs>;

        l0 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l3);

        l1 = virtualinvoke r2.<androidx.media3.exoplayer.dash.manifest.DashManifest: long getPeriodDurationUs(int)>(i5);

        r5 = r4.<androidx.media3.exoplayer.dash.manifest.Period: java.util.List adaptationSets>;

        i6 = 0;

     label2:
        $i4 = interfaceinvoke r5.<java.util.List: int size()>();

        if i6 >= $i4 goto label3;

        $r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i6);

        $r8 = (androidx.media3.exoplayer.dash.manifest.AdaptationSet) $r7;

        specialinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: void addSegmentsForAdaptationSet(androidx.media3.datasource.DataSource,androidx.media3.exoplayer.dash.manifest.AdaptationSet,long,long,boolean,java.util.ArrayList)>(r1, $r8, l0, l1, z0, r3);

        i6 = i6 + 1;

        goto label2;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return r3;
    }

    private void addSegmentsForAdaptationSet(androidx.media3.datasource.DataSource, androidx.media3.exoplayer.dash.manifest.AdaptationSet, long, long, boolean, java.util.ArrayList) throws java.io.IOException, java.lang.InterruptedException
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.exoplayer.dash.manifest.AdaptationSet r2;
        long l0, l1, l2, l3, $l7, $l8, $l9, l11, l12;
        boolean z0;
        java.util.ArrayList r3;
        androidx.media3.exoplayer.dash.manifest.Representation r4;
        androidx.media3.exoplayer.dash.DashSegmentIndex r5;
        java.lang.String r6;
        androidx.media3.exoplayer.dash.manifest.RangedUri r7, r8, $r17;
        java.util.List $r9, $r10;
        int $i4, $i5, i10;
        java.lang.Object $r11, $r15;
        byte $b6, $b13;
        com.google.common.collect.ImmutableList $r12;
        androidx.media3.exoplayer.dash.BaseUrlExclusionList $r13;
        androidx.media3.exoplayer.dash.manifest.BaseUrl $r14, $r16;
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment $r18, $r19, $r20;
        androidx.media3.exoplayer.offline.DownloadException $r21, $r22;
        java.lang.Throwable $r23, r24;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.exoplayer.dash.manifest.AdaptationSet;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        z0 := @parameter4: boolean;

        r3 := @parameter5: java.util.ArrayList;

        i10 = 0;

     label01:
        $r9 = r2.<androidx.media3.exoplayer.dash.manifest.AdaptationSet: java.util.List representations>;

        $i4 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i10 >= $i4 goto label12;

        $r10 = r2.<androidx.media3.exoplayer.dash.manifest.AdaptationSet: java.util.List representations>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i10);

        r4 = (androidx.media3.exoplayer.dash.manifest.Representation) $r11;

     label02:
        $i5 = r2.<androidx.media3.exoplayer.dash.manifest.AdaptationSet: int type>;

        r5 = specialinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: androidx.media3.exoplayer.dash.DashSegmentIndex getSegmentIndex(androidx.media3.datasource.DataSource,int,androidx.media3.exoplayer.dash.manifest.Representation,boolean)>(r1, $i5, r4, z0);

        if r5 != null goto label03;

        $r22 = new androidx.media3.exoplayer.offline.DownloadException;

        specialinvoke $r22.<androidx.media3.exoplayer.offline.DownloadException: void <init>(java.lang.String)>("Missing segment index");

        throw $r22;

     label03:
        goto label06;

     label04:
        $r23 := @caughtexception;

        r24 = $r23;

        if z0 != 0 goto label05;

        throw r24;

     label05:
        goto label11;

     label06:
        l11 = interfaceinvoke r5.<androidx.media3.exoplayer.dash.DashSegmentIndex: long getSegmentCount(long)>(l1);

        $b6 = l11 cmp -1L;

        if $b6 != 0 goto label07;

        $r21 = new androidx.media3.exoplayer.offline.DownloadException;

        specialinvoke $r21.<androidx.media3.exoplayer.offline.DownloadException: void <init>(java.lang.String)>("Unbounded segment index");

        throw $r21;

     label07:
        $r13 = r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: androidx.media3.exoplayer.dash.BaseUrlExclusionList baseUrlExclusionList>;

        $r12 = r4.<androidx.media3.exoplayer.dash.manifest.Representation: com.google.common.collect.ImmutableList baseUrls>;

        $r14 = virtualinvoke $r13.<androidx.media3.exoplayer.dash.BaseUrlExclusionList: androidx.media3.exoplayer.dash.manifest.BaseUrl selectBaseUrl(java.util.List)>($r12);

        $r15 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r14);

        $r16 = (androidx.media3.exoplayer.dash.manifest.BaseUrl) $r15;

        r6 = $r16.<androidx.media3.exoplayer.dash.manifest.BaseUrl: java.lang.String url>;

        r7 = virtualinvoke r4.<androidx.media3.exoplayer.dash.manifest.Representation: androidx.media3.exoplayer.dash.manifest.RangedUri getInitializationUri()>();

        if r7 == null goto label08;

        $r20 = specialinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: androidx.media3.exoplayer.offline.SegmentDownloader$Segment createSegment(androidx.media3.exoplayer.dash.manifest.Representation,java.lang.String,long,androidx.media3.exoplayer.dash.manifest.RangedUri)>(r4, r6, l0, r7);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label08:
        r8 = virtualinvoke r4.<androidx.media3.exoplayer.dash.manifest.Representation: androidx.media3.exoplayer.dash.manifest.RangedUri getIndexUri()>();

        if r8 == null goto label09;

        $r19 = specialinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: androidx.media3.exoplayer.offline.SegmentDownloader$Segment createSegment(androidx.media3.exoplayer.dash.manifest.Representation,java.lang.String,long,androidx.media3.exoplayer.dash.manifest.RangedUri)>(r4, r6, l0, r8);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label09:
        l2 = interfaceinvoke r5.<androidx.media3.exoplayer.dash.DashSegmentIndex: long getFirstSegmentNum()>();

        $l7 = l2 + l11;

        l3 = $l7 - 1L;

        l12 = l2;

     label10:
        $b13 = l12 cmp l3;

        if $b13 > 0 goto label11;

        $l8 = interfaceinvoke r5.<androidx.media3.exoplayer.dash.DashSegmentIndex: long getTimeUs(long)>(l12);

        $l9 = l0 + $l8;

        $r17 = interfaceinvoke r5.<androidx.media3.exoplayer.dash.DashSegmentIndex: androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(long)>(l12);

        $r18 = specialinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: androidx.media3.exoplayer.offline.SegmentDownloader$Segment createSegment(androidx.media3.exoplayer.dash.manifest.Representation,java.lang.String,long,androidx.media3.exoplayer.dash.manifest.RangedUri)>(r4, r6, $l9, $r17);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        l12 = l12 + 1L;

        goto label10;

     label11:
        i10 = i10 + 1;

        goto label01;

     label12:
        return;

        catch java.io.IOException from label02 to label03 with label04;
    }

    private androidx.media3.exoplayer.offline.SegmentDownloader$Segment createSegment(androidx.media3.exoplayer.dash.manifest.Representation, java.lang.String, long, androidx.media3.exoplayer.dash.manifest.RangedUri)
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.exoplayer.dash.manifest.Representation r1;
        java.lang.String r2;
        long l0;
        androidx.media3.exoplayer.dash.manifest.RangedUri r3;
        androidx.media3.datasource.DataSpec r4;
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment $r5;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.exoplayer.dash.manifest.Representation;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: androidx.media3.exoplayer.dash.manifest.RangedUri;

        r4 = staticinvoke <androidx.media3.exoplayer.dash.DashUtil: androidx.media3.datasource.DataSpec buildDataSpec(androidx.media3.exoplayer.dash.manifest.Representation,java.lang.String,androidx.media3.exoplayer.dash.manifest.RangedUri,int)>(r1, r2, r3, 0);

        $r5 = new androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        specialinvoke $r5.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: void <init>(long,androidx.media3.datasource.DataSpec)>(l0, r4);

        return $r5;
    }

    private androidx.media3.exoplayer.dash.DashSegmentIndex getSegmentIndex(androidx.media3.datasource.DataSource, int, androidx.media3.exoplayer.dash.manifest.Representation, boolean) throws java.io.IOException, java.lang.InterruptedException
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.datasource.DataSource r1;
        int i0;
        androidx.media3.exoplayer.dash.manifest.Representation r2;
        boolean z0;
        androidx.media3.exoplayer.dash.DashSegmentIndex r3;
        androidx.media3.exoplayer.dash.offline.DashDownloader$1 r4, $r6;
        androidx.media3.extractor.ChunkIndex r5;
        java.lang.Object $r7;
        long $l1;
        androidx.media3.exoplayer.dash.DashWrappingSegmentIndex $r8;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.exoplayer.dash.manifest.Representation;

        z0 := @parameter3: boolean;

        r3 = virtualinvoke r2.<androidx.media3.exoplayer.dash.manifest.Representation: androidx.media3.exoplayer.dash.DashSegmentIndex getIndex()>();

        if r3 == null goto label1;

        return r3;

     label1:
        $r6 = new androidx.media3.exoplayer.dash.offline.DashDownloader$1;

        specialinvoke $r6.<androidx.media3.exoplayer.dash.offline.DashDownloader$1: void <init>(androidx.media3.exoplayer.dash.offline.DashDownloader,androidx.media3.datasource.DataSource,int,androidx.media3.exoplayer.dash.manifest.Representation)>(r0, r1, i0, r2);

        r4 = $r6;

        $r7 = virtualinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: java.lang.Object execute(androidx.media3.common.util.RunnableFutureTask,boolean)>(r4, z0);

        r5 = (androidx.media3.extractor.ChunkIndex) $r7;

        if r5 != null goto label2;

        $r8 = null;

        goto label3;

     label2:
        $r8 = new androidx.media3.exoplayer.dash.DashWrappingSegmentIndex;

        $l1 = r2.<androidx.media3.exoplayer.dash.manifest.Representation: long presentationTimeOffsetUs>;

        specialinvoke $r8.<androidx.media3.exoplayer.dash.DashWrappingSegmentIndex: void <init>(androidx.media3.extractor.ChunkIndex,long)>(r5, $l1);

     label3:
        return $r8;
    }

    protected volatile java.util.List getSegments(androidx.media3.datasource.DataSource, androidx.media3.exoplayer.offline.FilterableManifest, boolean) throws java.io.IOException, java.lang.InterruptedException
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.exoplayer.offline.FilterableManifest r2;
        boolean z0;
        androidx.media3.exoplayer.dash.manifest.DashManifest $r3;
        java.util.List $r4;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.exoplayer.offline.FilterableManifest;

        z0 := @parameter2: boolean;

        $r3 = (androidx.media3.exoplayer.dash.manifest.DashManifest) r2;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader: java.util.List getSegments(androidx.media3.datasource.DataSource,androidx.media3.exoplayer.dash.manifest.DashManifest,boolean)>(r1, $r3, z0);

        return $r4;
    }

androidx.media3.exoplayer.dash.offline.DashDownloader$1
<androidx.media3.exoplayer.dash.offline.DashDownloader$1: androidx.media3.datasource.DataSource val$dataSource>
<androidx.media3.exoplayer.dash.offline.DashDownloader$1: int val$trackType>
<androidx.media3.exoplayer.dash.offline.DashDownloader$1: androidx.media3.exoplayer.dash.manifest.Representation val$representation>
    void <init>(androidx.media3.exoplayer.dash.offline.DashDownloader, androidx.media3.datasource.DataSource, int, androidx.media3.exoplayer.dash.manifest.Representation)
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader$1 r0;
        androidx.media3.exoplayer.dash.offline.DashDownloader r1;
        androidx.media3.datasource.DataSource r2;
        int i0;
        androidx.media3.exoplayer.dash.manifest.Representation r3;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader$1;

        r1 := @parameter0: androidx.media3.exoplayer.dash.offline.DashDownloader;

        r2 := @parameter1: androidx.media3.datasource.DataSource;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media3.exoplayer.dash.manifest.Representation;

        r0.<androidx.media3.exoplayer.dash.offline.DashDownloader$1: androidx.media3.datasource.DataSource val$dataSource> = r2;

        r0.<androidx.media3.exoplayer.dash.offline.DashDownloader$1: int val$trackType> = i0;

        r0.<androidx.media3.exoplayer.dash.offline.DashDownloader$1: androidx.media3.exoplayer.dash.manifest.Representation val$representation> = r3;

        specialinvoke r0.<androidx.media3.common.util.RunnableFutureTask: void <init>()>();

        return;
    }

    protected androidx.media3.extractor.ChunkIndex doWork() throws java.io.IOException
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader$1 r0;
        androidx.media3.exoplayer.dash.manifest.Representation $r1;
        int $i0;
        androidx.media3.datasource.DataSource $r2;
        androidx.media3.extractor.ChunkIndex $r3;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader$1;

        $r2 = r0.<androidx.media3.exoplayer.dash.offline.DashDownloader$1: androidx.media3.datasource.DataSource val$dataSource>;

        $i0 = r0.<androidx.media3.exoplayer.dash.offline.DashDownloader$1: int val$trackType>;

        $r1 = r0.<androidx.media3.exoplayer.dash.offline.DashDownloader$1: androidx.media3.exoplayer.dash.manifest.Representation val$representation>;

        $r3 = staticinvoke <androidx.media3.exoplayer.dash.DashUtil: androidx.media3.extractor.ChunkIndex loadChunkIndex(androidx.media3.datasource.DataSource,int,androidx.media3.exoplayer.dash.manifest.Representation)>($r2, $i0, $r1);

        return $r3;
    }

    protected volatile java.lang.Object doWork() throws java.lang.Exception
    {
        androidx.media3.exoplayer.dash.offline.DashDownloader$1 r0;
        androidx.media3.extractor.ChunkIndex $r1;

        r0 := @this: androidx.media3.exoplayer.dash.offline.DashDownloader$1;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.dash.offline.DashDownloader$1: androidx.media3.extractor.ChunkIndex doWork()>();

        return $r1;
    }

