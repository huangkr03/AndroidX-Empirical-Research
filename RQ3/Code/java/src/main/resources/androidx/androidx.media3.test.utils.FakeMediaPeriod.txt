androidx.media3.test.utils.FakeMediaPeriod
<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.datasource.DataSpec FAKE_DATA_SPEC>
<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray trackGroupArray>
<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>
<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory trackDataFactory>
<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>
<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.upstream.Allocator allocator>
<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>
<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>
<androidx.media3.test.utils.FakeMediaPeriod: long fakePreparationLoadTaskId>
<androidx.media3.test.utils.FakeMediaPeriod: android.os.Handler playerHandler>
<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback prepareCallback>
<androidx.media3.test.utils.FakeMediaPeriod: boolean deferOnPrepared>
<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared>
<androidx.media3.test.utils.FakeMediaPeriod: long seekOffsetUs>
<androidx.media3.test.utils.FakeMediaPeriod: long discontinuityPositionUs>
<androidx.media3.test.utils.FakeMediaPeriod: long lastSeekPositionUs>
    public void <init>(androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.exoplayer.upstream.Allocator, long, androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r3;
        androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory $r4;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r5;
        androidx.media3.exoplayer.drm.DrmSessionManager $r6;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.TrackGroupArray;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        r3 := @parameter3: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher;

        $r4 = staticinvoke <androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory: androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory singleSampleWithTimeUs(long)>(l0);

        $r6 = <androidx.media3.exoplayer.drm.DrmSessionManager: androidx.media3.exoplayer.drm.DrmSessionManager DRM_UNSUPPORTED>;

        $r5 = new androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        specialinvoke $r5.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void <init>()>();

        specialinvoke r0.<androidx.media3.test.utils.FakeMediaPeriod: void <init>(androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.upstream.Allocator,androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,boolean)>(r1, r2, $r4, r3, $r6, $r5, 0);

        return;
    }

    public void <init>(androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.exoplayer.upstream.Allocator, long, androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, boolean)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r3;
        androidx.media3.exoplayer.drm.DrmSessionManager r4;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r5;
        boolean z0;
        androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory $r6;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.TrackGroupArray;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        r3 := @parameter3: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher;

        r4 := @parameter4: androidx.media3.exoplayer.drm.DrmSessionManager;

        r5 := @parameter5: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        z0 := @parameter6: boolean;

        $r6 = staticinvoke <androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory: androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory singleSampleWithTimeUs(long)>(l0);

        specialinvoke r0.<androidx.media3.test.utils.FakeMediaPeriod: void <init>(androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.upstream.Allocator,androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,boolean)>(r1, r2, $r6, r3, r4, r5, z0);

        return;
    }

    public void <init>(androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.exoplayer.upstream.Allocator, androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory, androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, boolean)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        androidx.media3.exoplayer.source.TrackGroupArray r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory r3;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r4;
        androidx.media3.exoplayer.drm.DrmSessionManager r5;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r6;
        boolean z0;
        java.util.Set $r7;
        long $l0;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.TrackGroupArray;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        r3 := @parameter2: androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory;

        r4 := @parameter3: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher;

        r5 := @parameter4: androidx.media3.exoplayer.drm.DrmSessionManager;

        r6 := @parameter5: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        z0 := @parameter6: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray trackGroupArray> = r1;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher> = r4;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean deferOnPrepared> = z0;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory trackDataFactory> = r3;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.upstream.Allocator allocator> = r2;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager> = r5;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher> = r6;

        $r7 = staticinvoke <com.google.common.collect.Sets: java.util.Set newIdentityHashSet()>();

        r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams> = $r7;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: long discontinuityPositionUs> = -9223372036854775807L;

        $l0 = staticinvoke <androidx.media3.exoplayer.source.LoadEventInfo: long getNewId()>();

        r0.<androidx.media3.test.utils.FakeMediaPeriod: long fakePreparationLoadTaskId> = $l0;

        return;
    }

    public void setDiscontinuityPositionUs(long)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        long l0;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        l0 := @parameter0: long;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: long discontinuityPositionUs> = l0;

        return;
    }

    public synchronized void setPreparationComplete()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        android.os.Handler $r1, $r3;
        androidx.media3.exoplayer.source.MediaPeriod$Callback $r2;
        java.lang.Runnable $r4;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean deferOnPrepared> = 0;

        $r1 = r0.<androidx.media3.test.utils.FakeMediaPeriod: android.os.Handler playerHandler>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback prepareCallback>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: android.os.Handler playerHandler>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.test.utils.FakeMediaPeriod)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.test.utils.FakeMediaPeriod: void finishPreparation()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    public void setSeekToUsOffset(long)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        long l0;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        l0 := @parameter0: long;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: long seekOffsetUs> = l0;

        return;
    }

    public void release()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        java.util.Iterator r1;
        androidx.media3.test.utils.FakeSampleStream r2;
        java.util.Set $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared> = 0;

        $r3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.test.utils.FakeSampleStream) $r5;

        virtualinvoke r2.<androidx.media3.test.utils.FakeSampleStream: void release()>();

        goto label1;

     label2:
        $r4 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        interfaceinvoke $r4.<java.util.Set: void clear()>();

        return;
    }

    public synchronized void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback, long)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod$Callback r1;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.source.LoadEventInfo $r2;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r3;
        androidx.media3.datasource.DataSpec $r4;
        boolean $z0;
        android.os.Handler $r5;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod$Callback;

        l0 := @parameter1: long;

        $r3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r2 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l1 = r0.<androidx.media3.test.utils.FakeMediaPeriod: long fakePreparationLoadTaskId>;

        $r4 = <androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.datasource.DataSpec FAKE_DATA_SPEC>;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r2.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,long)>($l1, $r4, $l2);

        virtualinvoke $r3.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long)>($r2, 1, -1, null, 0, null, 0L, -9223372036854775807L);

        r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback prepareCallback> = r1;

        $z0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean deferOnPrepared>;

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentLooper()>();

        r0.<androidx.media3.test.utils.FakeMediaPeriod: android.os.Handler playerHandler> = $r5;

        goto label2;

     label1:
        specialinvoke r0.<androidx.media3.test.utils.FakeMediaPeriod: void finishPreparation()>();

     label2:
        return;
    }

    public void maybeThrowPrepareError() throws java.io.IOException
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        return;
    }

    public androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        boolean $z0;
        java.lang.Boolean $r1;
        com.google.common.truth.BooleanSubject $r2;
        androidx.media3.exoplayer.source.TrackGroupArray $r3;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        $z0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r1);

        virtualinvoke $r2.<com.google.common.truth.BooleanSubject: void isTrue()>();

        $r3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray trackGroupArray>;

        return $r3;
    }

    public long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[], boolean[], androidx.media3.exoplayer.source.SampleStream[], boolean[], long)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r1;
        boolean[] r2, r4;
        java.lang.Object[] r3;
        long l0, $l3;
        int i1, i2, $i4, $i5, $i6, $i7, i8;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r5, $r12, $r37;
        androidx.media3.common.TrackGroup r6;
        java.util.List r7;
        androidx.media3.test.utils.FakeSampleStream r8, $r39;
        boolean $z0, $z3, $z4;
        java.lang.Boolean $r9, $r17;
        com.google.common.truth.BooleanSubject $r10, $r18;
        java.lang.Object $r11, $r29, $r38, $r40, $r42;
        java.lang.Integer $r13, $r15, $r19, $r21, $r22, $r24;
        com.google.common.truth.IntegerSubject $r14, $r20, $r23;
        androidx.media3.exoplayer.source.TrackGroupArray $r16;
        androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory $r25;
        androidx.media3.common.Format $r26, $r35;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r27, $r32;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r28, $r30;
        androidx.media3.exoplayer.upstream.Allocator $r31;
        androidx.media3.exoplayer.drm.DrmSessionManager $r33;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r34;
        java.util.Set $r36, $r41;
        java.lang.Comparable r43, r44, r45;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection[];

        r2 := @parameter1: boolean[];

        r3 := @parameter2: androidx.media3.exoplayer.source.SampleStream[];

        r4 := @parameter3: boolean[];

        l0 := @parameter4: long;

        $z0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r10 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r9);

        virtualinvoke $r10.<com.google.common.truth.BooleanSubject: void isTrue()>();

        i1 = lengthof r1;

        i8 = 0;

     label1:
        if i8 >= i1 goto label7;

        $r11 = r3[i8];

        if $r11 == null goto label3;

        $r37 = r1[i8];

        if $r37 == null goto label2;

        $z3 = r2[i8];

        if $z3 != 0 goto label3;

     label2:
        $r38 = r3[i8];

        $r39 = (androidx.media3.test.utils.FakeSampleStream) $r38;

        virtualinvoke $r39.<androidx.media3.test.utils.FakeSampleStream: void release()>();

        $r41 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        $r40 = r3[i8];

        interfaceinvoke $r41.<java.util.Set: boolean remove(java.lang.Object)>($r40);

        r3[i8] = null;

     label3:
        $r42 = r3[i8];

        if $r42 != null goto label6;

        $r12 = r1[i8];

        if $r12 == null goto label6;

        r5 = r1[i8];

        $i4 = interfaceinvoke r5.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r14 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r13);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r43 = (java.lang.Comparable) $r15;

        virtualinvoke $r14.<com.google.common.truth.IntegerSubject: void isAtLeast(java.lang.Comparable)>(r43);

        r6 = interfaceinvoke r5.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.TrackGroup getTrackGroup()>();

        $r16 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray trackGroupArray>;

        $i5 = virtualinvoke $r16.<androidx.media3.exoplayer.source.TrackGroupArray: int indexOf(androidx.media3.common.TrackGroup)>(r6);

        if $i5 == -1 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r18 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r17);

        virtualinvoke $r18.<com.google.common.truth.BooleanSubject: void isTrue()>();

        $i6 = interfaceinvoke r5.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectedIndex()>();

        i2 = interfaceinvoke r5.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getIndexInTrackGroup(int)>($i6);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r20 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r19);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r44 = (java.lang.Comparable) $r21;

        virtualinvoke $r20.<com.google.common.truth.IntegerSubject: void isAtLeast(java.lang.Comparable)>(r44);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r23 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r22);

        $i7 = r6.<androidx.media3.common.TrackGroup: int length>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        r45 = (java.lang.Comparable) $r24;

        virtualinvoke $r23.<com.google.common.truth.IntegerSubject: void isLessThan(java.lang.Comparable)>(r45);

        $r25 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory trackDataFactory>;

        $r26 = interfaceinvoke r5.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.Format getSelectedFormat()>();

        $r27 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r28 = $r27.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $r29 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r28);

        $r30 = (androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) $r29;

        r7 = interfaceinvoke $r25.<androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory: java.util.List create(androidx.media3.common.Format,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>($r26, $r30);

        $r31 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.upstream.Allocator allocator>;

        $r32 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r33 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $r34 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        $r35 = interfaceinvoke r5.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.Format getSelectedFormat()>();

        r8 = virtualinvoke r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.test.utils.FakeSampleStream createSampleStream(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format,java.util.List)>($r31, $r32, $r33, $r34, $r35, r7);

        $r36 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        interfaceinvoke $r36.<java.util.Set: boolean add(java.lang.Object)>(r8);

        r3[i8] = r8;

        r4[i8] = 1;

     label6:
        i8 = i8 + 1;

        goto label1;

     label7:
        $l3 = virtualinvoke r0.<androidx.media3.test.utils.FakeMediaPeriod: long seekToUs(long)>(l0);

        return $l3;
    }

    public void discardBuffer(long, boolean)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        long l0;
        boolean z0, $z1;
        java.util.Iterator r1;
        androidx.media3.test.utils.FakeSampleStream r2;
        java.util.Set $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.test.utils.FakeSampleStream) $r4;

        virtualinvoke r2.<androidx.media3.test.utils.FakeSampleStream: void discardTo(long,boolean)>(l0, z0);

        goto label1;

     label2:
        return;
    }

    public void reevaluateBuffer(long)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        long l0;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        l0 := @parameter0: long;

        return;
    }

    public long readDiscontinuity()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        long l0;
        boolean $z0;
        java.lang.Boolean $r1;
        com.google.common.truth.BooleanSubject $r2;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        $z0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r1);

        virtualinvoke $r2.<com.google.common.truth.BooleanSubject: void isTrue()>();

        l0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: long discontinuityPositionUs>;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: long discontinuityPositionUs> = -9223372036854775807L;

        return l0;
    }

    public long getBufferedPositionUs()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        java.util.Iterator r1;
        androidx.media3.test.utils.FakeSampleStream r2;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r3;
        com.google.common.truth.BooleanSubject $r4;
        java.util.Set $r5;
        byte $b0;
        java.lang.Object $r6;
        long $l1, l2, $l3;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        $z0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r3);

        virtualinvoke $r4.<com.google.common.truth.BooleanSubject: void isTrue()>();

        $z1 = specialinvoke r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean isLoadingFinished()>();

        if $z1 == 0 goto label1;

        return -9223372036854775808L;

     label1:
        l2 = 9223372036854775807L;

        $r5 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.test.utils.FakeSampleStream) $r6;

        $l1 = virtualinvoke r2.<androidx.media3.test.utils.FakeSampleStream: long getLargestQueuedTimestampUs()>();

        l2 = staticinvoke <java.lang.Math: long min(long,long)>(l2, $l1);

        goto label2;

     label3:
        $b0 = l2 cmp -9223372036854775808L;

        if $b0 != 0 goto label4;

        $l3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: long lastSeekPositionUs>;

        goto label5;

     label4:
        $l3 = l2;

     label5:
        return $l3;
    }

    public long seekToUs(long)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        long l0, l1, $l2;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Boolean $r1;
        com.google.common.truth.BooleanSubject $r2;
        java.util.Set $r3, $r4;
        java.lang.Object $r5, $r6;
        java.util.Iterator r7, r9;
        androidx.media3.test.utils.FakeSampleStream r8, r10;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        l0 := @parameter0: long;

        $z0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r1);

        virtualinvoke $r2.<com.google.common.truth.BooleanSubject: void isTrue()>();

        $l2 = r0.<androidx.media3.test.utils.FakeMediaPeriod: long seekOffsetUs>;

        l1 = l0 + $l2;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: long lastSeekPositionUs> = l1;

        z4 = 1;

        $r3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        r7 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.media3.test.utils.FakeSampleStream) $r6;

        $z3 = virtualinvoke r8.<androidx.media3.test.utils.FakeSampleStream: boolean seekToUs(long)>(l1);

        z4 = z4 & $z3;

        goto label1;

     label2:
        if z4 != 0 goto label4;

        $r4 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        r9 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r5 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (androidx.media3.test.utils.FakeSampleStream) $r5;

        virtualinvoke r10.<androidx.media3.test.utils.FakeSampleStream: void reset()>();

        goto label3;

     label4:
        return l1;
    }

    public long getAdjustedSeekPositionUs(long, androidx.media3.exoplayer.SeekParameters)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.SeekParameters r1;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.SeekParameters;

        $l1 = r0.<androidx.media3.test.utils.FakeMediaPeriod: long seekOffsetUs>;

        $l2 = l0 + $l1;

        return $l2;
    }

    public long getNextLoadPositionUs()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        boolean $z0;
        java.lang.Boolean $r1;
        com.google.common.truth.BooleanSubject $r2;
        long $l0;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        $z0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r1);

        virtualinvoke $r2.<com.google.common.truth.BooleanSubject: void isTrue()>();

        $l0 = virtualinvoke r0.<androidx.media3.test.utils.FakeMediaPeriod: long getBufferedPositionUs()>();

        return $l0;
    }

    public boolean continueLoading(long)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        long l0;
        java.util.Iterator r1;
        androidx.media3.test.utils.FakeSampleStream r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        l0 := @parameter0: long;

        $r3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.test.utils.FakeSampleStream) $r4;

        virtualinvoke r2.<androidx.media3.test.utils.FakeSampleStream: void writeData(long)>(l0);

        goto label1;

     label2:
        return 1;
    }

    public boolean isLoading()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        return 0;
    }

    protected androidx.media3.test.utils.FakeSampleStream createSampleStream(androidx.media3.exoplayer.upstream.Allocator, androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, androidx.media3.common.Format, java.util.List)
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        androidx.media3.exoplayer.upstream.Allocator r1;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r2;
        androidx.media3.exoplayer.drm.DrmSessionManager r3;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r4;
        androidx.media3.common.Format r5;
        java.util.List r6;
        androidx.media3.test.utils.FakeSampleStream $r7;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Allocator;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher;

        r3 := @parameter2: androidx.media3.exoplayer.drm.DrmSessionManager;

        r4 := @parameter3: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        r5 := @parameter4: androidx.media3.common.Format;

        r6 := @parameter5: java.util.List;

        $r7 = new androidx.media3.test.utils.FakeSampleStream;

        specialinvoke $r7.<androidx.media3.test.utils.FakeSampleStream: void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format,java.util.List)>(r1, r2, r3, r4, r5, r6);

        return $r7;
    }

    private void finishPreparation()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        androidx.media3.exoplayer.source.MediaPeriod$Callback $r1, $r3;
        java.lang.Object $r2;
        androidx.media3.exoplayer.source.LoadEventInfo $r4;
        androidx.media3.datasource.DataSpec $r5, $r7;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r6;
        long $l0, $l1;
        android.net.Uri $r8;
        java.util.Map $r9;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        r0.<androidx.media3.test.utils.FakeMediaPeriod: boolean prepared> = 1;

        $r1 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod$Callback prepareCallback>;

        $r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.source.MediaPeriod$Callback) $r2;

        interfaceinvoke $r3.<androidx.media3.exoplayer.source.MediaPeriod$Callback: void onPrepared(androidx.media3.exoplayer.source.MediaPeriod)>(r0);

        $r6 = r0.<androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r4 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l0 = r0.<androidx.media3.test.utils.FakeMediaPeriod: long fakePreparationLoadTaskId>;

        $r7 = <androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.datasource.DataSpec FAKE_DATA_SPEC>;

        $r5 = <androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.datasource.DataSpec FAKE_DATA_SPEC>;

        $r8 = $r5.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r9 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r4.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l0, $r7, $r8, $r9, $l1, 0L, 100L);

        virtualinvoke $r6.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long)>($r4, 1, -1, null, 0, null, 0L, -9223372036854775807L);

        return;
    }

    private boolean isLoadingFinished()
    {
        androidx.media3.test.utils.FakeMediaPeriod r0;
        java.util.Iterator r1;
        androidx.media3.test.utils.FakeSampleStream r2;
        java.util.Set $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.test.utils.FakeMediaPeriod;

        $r3 = r0.<androidx.media3.test.utils.FakeMediaPeriod: java.util.Set sampleStreams>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.test.utils.FakeSampleStream) $r4;

        $z1 = virtualinvoke r2.<androidx.media3.test.utils.FakeSampleStream: boolean isLoadingFinished()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    static void <clinit>()
    {
        androidx.media3.datasource.DataSpec $r0;
        android.net.Uri $r1;

        $r0 = new androidx.media3.datasource.DataSpec;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("http://fake.test");

        specialinvoke $r0.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri)>($r1);

        <androidx.media3.test.utils.FakeMediaPeriod: androidx.media3.datasource.DataSpec FAKE_DATA_SPEC> = $r0;

        return;
    }

androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory
<androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory: java.util.List create(androidx.media3.common.Format,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>
    public static androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory singleSampleWithTimeUs(long)
    {
        long l0;
        androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory $r0;

        l0 := @parameter0: long;

        $r0 = dynamicinvoke "create" <androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory (long)>(l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.util.List __METHODTYPE__(androidx.media3.common.Format,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.test.utils.FakeMediaPeriod$TrackDataFactory: java.util.List lambda$singleSampleWithTimeUs$0(long,androidx.media3.common.Format,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>, methodtype: java.util.List __METHODTYPE__(androidx.media3.common.Format,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId));

        return $r0;
    }

    private static java.util.List lambda$singleSampleWithTimeUs$0(long, androidx.media3.common.Format, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        long l0;
        androidx.media3.common.Format r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem $r2, $r3;
        com.google.common.collect.ImmutableList $r4;

        l0 := @parameter0: long;

        r0 := @parameter1: androidx.media3.common.Format;

        r1 := @parameter2: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r2 = staticinvoke <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem oneByteSample(long,int)>(l0, 1);

        $r3 = <androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem: androidx.media3.test.utils.FakeSampleStream$FakeSampleStreamItem END_OF_STREAM_ITEM>;

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r4;
    }

