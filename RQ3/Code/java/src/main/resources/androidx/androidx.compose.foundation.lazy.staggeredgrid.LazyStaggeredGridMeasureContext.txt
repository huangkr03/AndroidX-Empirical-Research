androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState state>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider itemProvider>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int[] resolvedSlotSums>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long constraints>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: boolean isVertical>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope measureScope>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int mainAxisAvailableSize>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long contentOffset>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int beforeContentPadding>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int afterContentPadding>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int mainAxisSpacing>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int crossAxisSpacing>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider measuredItemProvider>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>
    private void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider, int[], long, boolean, androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope, int, long, int, int, int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r1, $r11;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider r2, $r7;
        int[] r3, $r9;
        long l0, l2;
        boolean z0, $z1;
        androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope r4, $r8;
        int i1, i3, i4, i5, i6;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider $r5;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext$measuredItemProvider$1 $r6;
        androidx.compose.foundation.lazy.staggeredgrid.MeasuredItemFactory $r10;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r12;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        r1 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r2 := @parameter1: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider;

        r3 := @parameter2: int[];

        l0 := @parameter3: long;

        z0 := @parameter4: boolean;

        r4 := @parameter5: androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope;

        i1 := @parameter6: int;

        l2 := @parameter7: long;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        i5 := @parameter10: int;

        i6 := @parameter11: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState state> = r1;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider itemProvider> = r2;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int[] resolvedSlotSums> = r3;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long constraints> = l0;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: boolean isVertical> = z0;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope measureScope> = r4;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int mainAxisAvailableSize> = i1;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long contentOffset> = l2;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int beforeContentPadding> = i3;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int afterContentPadding> = i4;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int mainAxisSpacing> = i5;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int crossAxisSpacing> = i6;

        $r5 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider;

        $z1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: boolean isVertical>;

        $r7 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider itemProvider>;

        $r8 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope measureScope>;

        $r9 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int[] resolvedSlotSums>;

        $r6 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext$measuredItemProvider$1;

        specialinvoke $r6.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext$measuredItemProvider$1: void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext)>(r0);

        $r10 = (androidx.compose.foundation.lazy.staggeredgrid.MeasuredItemFactory) $r6;

        specialinvoke $r5.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider: void <init>(boolean,androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider,androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope,int[],androidx.compose.foundation.lazy.staggeredgrid.MeasuredItemFactory)>($z1, $r7, $r8, $r9, $r10);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider measuredItemProvider> = $r5;

        $r11 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState state>;

        $r12 = virtualinvoke $r11.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans$foundation_release()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans> = $r12;

        return;
    }

    public final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState getState()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState state>;

        return $r1;
    }

    public final androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider getItemProvider()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider itemProvider>;

        return $r1;
    }

    public final int[] getResolvedSlotSums()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        int[] $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int[] resolvedSlotSums>;

        return $r1;
    }

    public final long getConstraints-msEJaDk()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        long $l0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $l0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long constraints>;

        return $l0;
    }

    public final boolean isVertical()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $z0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: boolean isVertical>;

        return $z0;
    }

    public final androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope getMeasureScope()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope measureScope>;

        return $r1;
    }

    public final int getMainAxisAvailableSize()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int mainAxisAvailableSize>;

        return $i0;
    }

    public final long getContentOffset-nOcc-ac()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        long $l0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $l0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long contentOffset>;

        return $l0;
    }

    public final int getBeforeContentPadding()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int beforeContentPadding>;

        return $i0;
    }

    public final int getAfterContentPadding()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int afterContentPadding>;

        return $i0;
    }

    public final int getMainAxisSpacing()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int mainAxisSpacing>;

        return $i0;
    }

    public final int getCrossAxisSpacing()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int crossAxisSpacing>;

        return $i0;
    }

    public final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider getMeasuredItemProvider()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider measuredItemProvider>;

        return $r1;
    }

    public final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>;

        return $r1;
    }

    public void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider, int[], long, boolean, androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope, int, long, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r1;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider r2;
        int[] r3;
        long l0, l2;
        boolean z0;
        androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope r4;
        int i1, i3, i4, i5, i6;
        kotlin.jvm.internal.DefaultConstructorMarker $r5;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        r1 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r2 := @parameter1: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider;

        r3 := @parameter2: int[];

        l0 := @parameter3: long;

        z0 := @parameter4: boolean;

        r4 := @parameter5: androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope;

        i1 := @parameter6: int;

        l2 := @parameter7: long;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        i5 := @parameter10: int;

        i6 := @parameter11: int;

        $r5 := @parameter12: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider,int[],long,boolean,androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope,int,long,int,int,int,int)>(r1, r2, r3, l0, z0, r4, i1, l2, i3, i4, i5, i6);

        return;
    }

