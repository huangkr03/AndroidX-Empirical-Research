androidx.palette.graphics.ColorCutQuantizer
<androidx.palette.graphics.ColorCutQuantizer: java.lang.String LOG_TAG>
<androidx.palette.graphics.ColorCutQuantizer: boolean LOG_TIMINGS>
<androidx.palette.graphics.ColorCutQuantizer: int COMPONENT_RED>
<androidx.palette.graphics.ColorCutQuantizer: int COMPONENT_GREEN>
<androidx.palette.graphics.ColorCutQuantizer: int COMPONENT_BLUE>
<androidx.palette.graphics.ColorCutQuantizer: int QUANTIZE_WORD_WIDTH>
<androidx.palette.graphics.ColorCutQuantizer: int QUANTIZE_WORD_MASK>
<androidx.palette.graphics.ColorCutQuantizer: int[] mColors>
<androidx.palette.graphics.ColorCutQuantizer: int[] mHistogram>
<androidx.palette.graphics.ColorCutQuantizer: java.util.List mQuantizedColors>
<androidx.palette.graphics.ColorCutQuantizer: android.util.TimingLogger mTimingLogger>
<androidx.palette.graphics.ColorCutQuantizer: androidx.palette.graphics.Palette$Filter[] mFilters>
<androidx.palette.graphics.ColorCutQuantizer: float[] mTempHsl>
<androidx.palette.graphics.ColorCutQuantizer: java.util.Comparator VBOX_COMPARATOR_VOLUME>
    void <init>(int[], int, androidx.palette.graphics.Palette$Filter[])
    {
        androidx.palette.graphics.ColorCutQuantizer r0;
        int[] r1, r3, $r5, $r6, r11, r12;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, $i18, i19, i20, i21;
        androidx.palette.graphics.Palette$Filter[] r2;
        float[] $r4;
        java.util.List $r7, $r10;
        java.util.ArrayList $r8;
        androidx.palette.graphics.Palette$Swatch $r9;
        boolean $z1;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.palette.graphics.Palette$Filter[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = newarray (float)[3];

        r0.<androidx.palette.graphics.ColorCutQuantizer: float[] mTempHsl> = $r4;

        r0.<androidx.palette.graphics.ColorCutQuantizer: android.util.TimingLogger mTimingLogger> = null;

        r0.<androidx.palette.graphics.ColorCutQuantizer: androidx.palette.graphics.Palette$Filter[] mFilters> = r2;

        $r5 = newarray (int)[32768];

        r0.<androidx.palette.graphics.ColorCutQuantizer: int[] mHistogram> = $r5;

        r3 = $r5;

        i14 = 0;

     label01:
        $i3 = lengthof r1;

        if i14 >= $i3 goto label02;

        $i11 = r1[i14];

        i15 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizeFromRgb888(int)>($i11);

        r1[i14] = i15;

        $i12 = r3[i15];

        $i13 = $i12 + 1;

        r3[i15] = $i13;

        i14 = i14 + 1;

        goto label01;

     label02:
        i16 = 0;

        i17 = 0;

     label03:
        $i4 = lengthof r3;

        if i17 >= $i4 goto label06;

        $i10 = r3[i17];

        if $i10 <= 0 goto label04;

        $z1 = specialinvoke r0.<androidx.palette.graphics.ColorCutQuantizer: boolean shouldIgnoreColor(int)>(i17);

        if $z1 == 0 goto label04;

        r3[i17] = 0;

     label04:
        $i18 = r3[i17];

        if $i18 <= 0 goto label05;

        i16 = i16 + 1;

     label05:
        i17 = i17 + 1;

        goto label03;

     label06:
        $r6 = newarray (int)[i16];

        r0.<androidx.palette.graphics.ColorCutQuantizer: int[] mColors> = $r6;

        r11 = $r6;

        i19 = 0;

        i20 = 0;

     label07:
        $i5 = lengthof r3;

        if i20 >= $i5 goto label09;

        $i8 = r3[i20];

        if $i8 <= 0 goto label08;

        $i9 = i19;

        i19 = i19 + 1;

        r11[$i9] = i20;

     label08:
        i20 = i20 + 1;

        goto label07;

     label09:
        if i16 > i0 goto label12;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<androidx.palette.graphics.ColorCutQuantizer: java.util.List mQuantizedColors> = $r8;

        r12 = r11;

        i1 = lengthof r12;

        i21 = 0;

     label10:
        if i21 >= i1 goto label11;

        i2 = r12[i21];

        $r10 = r0.<androidx.palette.graphics.ColorCutQuantizer: java.util.List mQuantizedColors>;

        $r9 = new androidx.palette.graphics.Palette$Swatch;

        $i6 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int approximateToRgb888(int)>(i2);

        $i7 = r3[i2];

        specialinvoke $r9.<androidx.palette.graphics.Palette$Swatch: void <init>(int,int)>($i6, $i7);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        i21 = i21 + 1;

        goto label10;

     label11:
        goto label13;

     label12:
        $r7 = specialinvoke r0.<androidx.palette.graphics.ColorCutQuantizer: java.util.List quantizePixels(int)>(i0);

        r0.<androidx.palette.graphics.ColorCutQuantizer: java.util.List mQuantizedColors> = $r7;

     label13:
        return;
    }

    java.util.List getQuantizedColors()
    {
        androidx.palette.graphics.ColorCutQuantizer r0;
        java.util.List $r1;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer;

        $r1 = r0.<androidx.palette.graphics.ColorCutQuantizer: java.util.List mQuantizedColors>;

        return $r1;
    }

    private java.util.List quantizePixels(int)
    {
        androidx.palette.graphics.ColorCutQuantizer r0;
        int i0, $i1, $i2;
        java.util.PriorityQueue r1, $r2;
        java.util.Comparator $r3;
        androidx.palette.graphics.ColorCutQuantizer$Vbox $r4;
        int[] $r5;
        java.util.List $r6;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer;

        i0 := @parameter0: int;

        $r2 = new java.util.PriorityQueue;

        $r3 = <androidx.palette.graphics.ColorCutQuantizer: java.util.Comparator VBOX_COMPARATOR_VOLUME>;

        specialinvoke $r2.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>(i0, $r3);

        r1 = $r2;

        $r4 = new androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $r5 = r0.<androidx.palette.graphics.ColorCutQuantizer: int[] mColors>;

        $i1 = lengthof $r5;

        $i2 = $i1 - 1;

        specialinvoke $r4.<androidx.palette.graphics.ColorCutQuantizer$Vbox: void <init>(androidx.palette.graphics.ColorCutQuantizer,int,int)>(r0, 0, $i2);

        virtualinvoke r1.<java.util.PriorityQueue: boolean offer(java.lang.Object)>($r4);

        specialinvoke r0.<androidx.palette.graphics.ColorCutQuantizer: void splitBoxes(java.util.PriorityQueue,int)>(r1, i0);

        $r6 = specialinvoke r0.<androidx.palette.graphics.ColorCutQuantizer: java.util.List generateAverageColors(java.util.Collection)>(r1);

        return $r6;
    }

    private void splitBoxes(java.util.PriorityQueue, int)
    {
        androidx.palette.graphics.ColorCutQuantizer r0;
        java.util.PriorityQueue r1;
        int i0, $i1;
        androidx.palette.graphics.ColorCutQuantizer$Vbox r2, $r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer;

        r1 := @parameter0: java.util.PriorityQueue;

        i0 := @parameter1: int;

     label1:
        $i1 = virtualinvoke r1.<java.util.PriorityQueue: int size()>();

        if $i1 >= i0 goto label4;

        $r3 = virtualinvoke r1.<java.util.PriorityQueue: java.lang.Object poll()>();

        r2 = (androidx.palette.graphics.ColorCutQuantizer$Vbox) $r3;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<androidx.palette.graphics.ColorCutQuantizer$Vbox: boolean canSplit()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r2.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer$Vbox splitBox()>();

        virtualinvoke r1.<java.util.PriorityQueue: boolean offer(java.lang.Object)>($r4);

        virtualinvoke r1.<java.util.PriorityQueue: boolean offer(java.lang.Object)>(r2);

        goto label3;

     label2:
        return;

     label3:
        goto label1;

     label4:
        return;
    }

    private java.util.List generateAverageColors(java.util.Collection)
    {
        androidx.palette.graphics.ColorCutQuantizer r0;
        java.util.Collection r1;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        androidx.palette.graphics.ColorCutQuantizer$Vbox r4;
        androidx.palette.graphics.Palette$Swatch r5;
        int $i0;
        boolean $z0, $z1;
        java.lang.Object $r7;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer;

        r1 := @parameter0: java.util.Collection;

        $r6 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = $r6;

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.palette.graphics.ColorCutQuantizer$Vbox) $r7;

        r5 = virtualinvoke r4.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.Palette$Swatch getAverageColor()>();

        $z1 = specialinvoke r0.<androidx.palette.graphics.ColorCutQuantizer: boolean shouldIgnoreColor(androidx.palette.graphics.Palette$Swatch)>(r5);

        if $z1 != 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label2:
        goto label1;

     label3:
        return r2;
    }

    static void modifySignificantOctet(int[], int, int, int)
    {
        int[] r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        tableswitch(i0)
        {
            case -3: goto label1;
            case -2: goto label2;
            case -1: goto label5;
            default: goto label7;
        };

     label1:
        goto label7;

     label2:
        i17 = i1;

     label3:
        if i17 > i2 goto label4;

        i18 = r0[i17];

        $i10 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedGreen(int)>(i18);

        $i11 = $i10 << 10;

        $i12 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedRed(int)>(i18);

        $i13 = $i12 << 5;

        $i14 = $i11 | $i13;

        $i15 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedBlue(int)>(i18);

        $i16 = $i14 | $i15;

        r0[i17] = $i16;

        i17 = i17 + 1;

        goto label3;

     label4:
        goto label7;

     label5:
        i19 = i1;

     label6:
        if i19 > i2 goto label7;

        i20 = r0[i19];

        $i3 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedBlue(int)>(i20);

        $i4 = $i3 << 10;

        $i5 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedGreen(int)>(i20);

        $i6 = $i5 << 5;

        $i7 = $i4 | $i6;

        $i8 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedRed(int)>(i20);

        $i9 = $i7 | $i8;

        r0[i19] = $i9;

        i19 = i19 + 1;

        goto label6;

     label7:
        return;
    }

    private boolean shouldIgnoreColor(int)
    {
        androidx.palette.graphics.ColorCutQuantizer r0;
        int i0, i1;
        float[] $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer;

        i0 := @parameter0: int;

        i1 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int approximateToRgb888(int)>(i0);

        $r1 = r0.<androidx.palette.graphics.ColorCutQuantizer: float[] mTempHsl>;

        staticinvoke <androidx.core.graphics.ColorUtils: void colorToHSL(int,float[])>(i1, $r1);

        $r2 = r0.<androidx.palette.graphics.ColorCutQuantizer: float[] mTempHsl>;

        $z0 = specialinvoke r0.<androidx.palette.graphics.ColorCutQuantizer: boolean shouldIgnoreColor(int,float[])>(i1, $r2);

        return $z0;
    }

    private boolean shouldIgnoreColor(androidx.palette.graphics.Palette$Swatch)
    {
        androidx.palette.graphics.ColorCutQuantizer r0;
        androidx.palette.graphics.Palette$Swatch r1;
        int $i0;
        float[] $r2;
        boolean $z0;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer;

        r1 := @parameter0: androidx.palette.graphics.Palette$Swatch;

        $i0 = virtualinvoke r1.<androidx.palette.graphics.Palette$Swatch: int getRgb()>();

        $r2 = virtualinvoke r1.<androidx.palette.graphics.Palette$Swatch: float[] getHsl()>();

        $z0 = specialinvoke r0.<androidx.palette.graphics.ColorCutQuantizer: boolean shouldIgnoreColor(int,float[])>($i0, $r2);

        return $z0;
    }

    private boolean shouldIgnoreColor(int, float[])
    {
        androidx.palette.graphics.ColorCutQuantizer r0;
        int i0, i1, $i2, i3;
        float[] r1;
        androidx.palette.graphics.Palette$Filter[] $r2, $r3, $r4, $r5;
        androidx.palette.graphics.Palette$Filter $r6;
        boolean $z0;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        $r2 = r0.<androidx.palette.graphics.ColorCutQuantizer: androidx.palette.graphics.Palette$Filter[] mFilters>;

        if $r2 == null goto label3;

        $r3 = r0.<androidx.palette.graphics.ColorCutQuantizer: androidx.palette.graphics.Palette$Filter[] mFilters>;

        $i2 = lengthof $r3;

        if $i2 <= 0 goto label3;

        i3 = 0;

        $r4 = r0.<androidx.palette.graphics.ColorCutQuantizer: androidx.palette.graphics.Palette$Filter[] mFilters>;

        i1 = lengthof $r4;

     label1:
        if i3 >= i1 goto label3;

        $r5 = r0.<androidx.palette.graphics.ColorCutQuantizer: androidx.palette.graphics.Palette$Filter[] mFilters>;

        $r6 = $r5[i3];

        $z0 = interfaceinvoke $r6.<androidx.palette.graphics.Palette$Filter: boolean isAllowed(int,float[])>(i0, r1);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static int quantizeFromRgb888(int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        i0 := @parameter0: int;

        $i4 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        i1 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int modifyWordWidth(int,int,int)>($i4, 8, 5);

        $i5 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        i2 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int modifyWordWidth(int,int,int)>($i5, 8, 5);

        $i6 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        i3 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int modifyWordWidth(int,int,int)>($i6, 8, 5);

        $i8 = i1 << 10;

        $i7 = i2 << 5;

        $i9 = $i8 | $i7;

        $i10 = $i9 | i3;

        return $i10;
    }

    static int approximateToRgb888(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int modifyWordWidth(int,int,int)>(i0, 5, 8);

        $i4 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int modifyWordWidth(int,int,int)>(i1, 5, 8);

        $i5 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int modifyWordWidth(int,int,int)>(i2, 5, 8);

        $i6 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i3, $i4, $i5);

        return $i6;
    }

    private static int approximateToRgb888(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedRed(int)>(i0);

        $i2 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedGreen(int)>(i0);

        $i3 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedBlue(int)>(i0);

        $i4 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int approximateToRgb888(int,int,int)>($i1, $i2, $i3);

        return $i4;
    }

    static int quantizedRed(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 >> 10;

        $i2 = $i1 & 31;

        return $i2;
    }

    static int quantizedGreen(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 >> 5;

        $i2 = $i1 & 31;

        return $i2;
    }

    static int quantizedBlue(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 31;

        return $i1;
    }

    private static int modifyWordWidth(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i2 <= i1 goto label1;

        $i7 = i2 - i1;

        i8 = i0 << $i7;

        goto label2;

     label1:
        $i3 = i1 - i2;

        i8 = i0 >> $i3;

     label2:
        $i4 = 1 << i2;

        $i5 = $i4 - 1;

        $i6 = i8 & $i5;

        return $i6;
    }

    static void <clinit>()
    {
        androidx.palette.graphics.ColorCutQuantizer$1 $r0;

        $r0 = new androidx.palette.graphics.ColorCutQuantizer$1;

        specialinvoke $r0.<androidx.palette.graphics.ColorCutQuantizer$1: void <init>()>();

        <androidx.palette.graphics.ColorCutQuantizer: java.util.Comparator VBOX_COMPARATOR_VOLUME> = $r0;

        return;
    }

androidx.palette.graphics.ColorCutQuantizer$1
    void <init>()
    {
        androidx.palette.graphics.ColorCutQuantizer$1 r0;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(androidx.palette.graphics.ColorCutQuantizer$Vbox, androidx.palette.graphics.ColorCutQuantizer$Vbox)
    {
        androidx.palette.graphics.ColorCutQuantizer$1 r0;
        androidx.palette.graphics.ColorCutQuantizer$Vbox r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$1;

        r1 := @parameter0: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        r2 := @parameter1: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $i0 = virtualinvoke r2.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int getVolume()>();

        $i1 = virtualinvoke r1.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int getVolume()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.palette.graphics.ColorCutQuantizer$1 r0;
        java.lang.Object r1, r2;
        androidx.palette.graphics.ColorCutQuantizer$Vbox $r3, $r4;
        int $i0;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.palette.graphics.ColorCutQuantizer$Vbox) r1;

        $r3 = (androidx.palette.graphics.ColorCutQuantizer$Vbox) r2;

        $i0 = virtualinvoke r0.<androidx.palette.graphics.ColorCutQuantizer$1: int compare(androidx.palette.graphics.ColorCutQuantizer$Vbox,androidx.palette.graphics.ColorCutQuantizer$Vbox)>($r4, $r3);

        return $i0;
    }

androidx.palette.graphics.ColorCutQuantizer$Vbox
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mPopulation>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinRed>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxRed>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinGreen>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxGreen>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinBlue>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxBlue>
<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0>
    void <init>(androidx.palette.graphics.ColorCutQuantizer, int, int)
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0;
        androidx.palette.graphics.ColorCutQuantizer r1;
        int i0, i1;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        r1 := @parameter0: androidx.palette.graphics.ColorCutQuantizer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex> = i0;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex> = i1;

        virtualinvoke r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: void fitBox()>();

        return;
    }

    final int getVolume()
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $i1 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxRed>;

        $i0 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinRed>;

        $i2 = $i1 - $i0;

        $i7 = $i2 + 1;

        $i4 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxGreen>;

        $i3 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinGreen>;

        $i5 = $i4 - $i3;

        $i6 = $i5 + 1;

        $i12 = $i7 * $i6;

        $i9 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxBlue>;

        $i8 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinBlue>;

        $i10 = $i9 - $i8;

        $i11 = $i10 + 1;

        $i13 = $i12 * $i11;

        return $i13;
    }

    final boolean canSplit()
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $i0 = virtualinvoke r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int getColorCount()>();

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    final int getColorCount()
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $i0 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        $i2 = 1 + $i0;

        $i1 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>;

        $i3 = $i2 - $i1;

        return $i3;
    }

    final void fitBox()
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0;
        int[] r1, r2;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13;
        androidx.palette.graphics.ColorCutQuantizer $r3, $r4;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $r3 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0>;

        r1 = $r3.<androidx.palette.graphics.ColorCutQuantizer: int[] mColors>;

        $r4 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0>;

        r2 = $r4.<androidx.palette.graphics.ColorCutQuantizer: int[] mHistogram>;

        i6 = 2147483647;

        i7 = 2147483647;

        i8 = 2147483647;

        i9 = -2147483648;

        i10 = -2147483648;

        i11 = -2147483648;

        i12 = 0;

        i13 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>;

     label1:
        $i4 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        if i13 > $i4 goto label8;

        i0 = r1[i13];

        $i5 = r2[i0];

        i12 = i12 + $i5;

        i1 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedRed(int)>(i0);

        i2 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedGreen(int)>(i0);

        i3 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedBlue(int)>(i0);

        if i1 <= i11 goto label2;

        i11 = i1;

     label2:
        if i1 >= i8 goto label3;

        i8 = i1;

     label3:
        if i2 <= i10 goto label4;

        i10 = i2;

     label4:
        if i2 >= i7 goto label5;

        i7 = i2;

     label5:
        if i3 <= i9 goto label6;

        i9 = i3;

     label6:
        if i3 >= i6 goto label7;

        i6 = i3;

     label7:
        i13 = i13 + 1;

        goto label1;

     label8:
        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinRed> = i8;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxRed> = i11;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinGreen> = i7;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxGreen> = i10;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinBlue> = i6;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxBlue> = i9;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mPopulation> = i12;

        return;
    }

    final androidx.palette.graphics.ColorCutQuantizer$Vbox splitBox()
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0, r1, $r2;
        int i0, $i1, $i2;
        boolean $z0;
        androidx.palette.graphics.ColorCutQuantizer $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $z0 = virtualinvoke r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: boolean canSplit()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not split a box with only 1 color");

        throw $r4;

     label1:
        i0 = virtualinvoke r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int findSplitPoint()>();

        $r2 = new androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $r3 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0>;

        $i2 = i0 + 1;

        $i1 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        specialinvoke $r2.<androidx.palette.graphics.ColorCutQuantizer$Vbox: void <init>(androidx.palette.graphics.ColorCutQuantizer,int,int)>($r3, $i2, $i1);

        r1 = $r2;

        r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex> = i0;

        virtualinvoke r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: void fitBox()>();

        return r1;
    }

    final int getLongestColorDimension()
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $i4 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxRed>;

        $i3 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinRed>;

        i0 = $i4 - $i3;

        $i6 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxGreen>;

        $i5 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinGreen>;

        i1 = $i6 - $i5;

        $i8 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMaxBlue>;

        $i7 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mMinBlue>;

        i2 = $i8 - $i7;

        if i0 < i1 goto label1;

        if i0 < i2 goto label1;

        return -3;

     label1:
        if i1 < i0 goto label2;

        if i1 < i2 goto label2;

        return -2;

     label2:
        return -1;
    }

    final int findSplitPoint()
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        int[] r1, r2;
        androidx.palette.graphics.ColorCutQuantizer $r3, $r4;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        i0 = virtualinvoke r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int getLongestColorDimension()>();

        $r3 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0>;

        r1 = $r3.<androidx.palette.graphics.ColorCutQuantizer: int[] mColors>;

        $r4 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0>;

        r2 = $r4.<androidx.palette.graphics.ColorCutQuantizer: int[] mHistogram>;

        $i3 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>;

        $i2 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        staticinvoke <androidx.palette.graphics.ColorCutQuantizer: void modifySignificantOctet(int[],int,int,int)>(r1, i0, $i3, $i2);

        $i6 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>;

        $i4 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        $i5 = $i4 + 1;

        staticinvoke <java.util.Arrays: void sort(int[],int,int)>(r1, $i6, $i5);

        $i8 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>;

        $i7 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        staticinvoke <androidx.palette.graphics.ColorCutQuantizer: void modifySignificantOctet(int[],int,int,int)>(r1, i0, $i8, $i7);

        $i9 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mPopulation>;

        i1 = $i9 / 2;

        i17 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>;

        i18 = 0;

     label1:
        $i10 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        if i17 > $i10 goto label3;

        $i12 = r1[i17];

        $i13 = r2[$i12];

        i18 = i18 + $i13;

        if i18 < i1 goto label2;

        $i14 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        $i15 = $i14 - 1;

        $i16 = staticinvoke <java.lang.Math: int min(int,int)>($i15, i17);

        return $i16;

     label2:
        i17 = i17 + 1;

        goto label1;

     label3:
        $i11 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>;

        return $i11;
    }

    final androidx.palette.graphics.Palette$Swatch getAverageColor()
    {
        androidx.palette.graphics.ColorCutQuantizer$Vbox r0;
        int[] r1, r2;
        androidx.palette.graphics.ColorCutQuantizer $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        androidx.palette.graphics.Palette$Swatch $r5;

        r0 := @this: androidx.palette.graphics.ColorCutQuantizer$Vbox;

        $r3 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0>;

        r1 = $r3.<androidx.palette.graphics.ColorCutQuantizer: int[] mColors>;

        $r4 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: androidx.palette.graphics.ColorCutQuantizer this$0>;

        r2 = $r4.<androidx.palette.graphics.ColorCutQuantizer: int[] mHistogram>;

        i8 = 0;

        i9 = 0;

        i10 = 0;

        i11 = 0;

        i12 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mLowerIndex>;

     label1:
        $i0 = r0.<androidx.palette.graphics.ColorCutQuantizer$Vbox: int mUpperIndex>;

        if i12 > $i0 goto label2;

        i13 = r1[i12];

        i14 = r2[i13];

        i11 = i11 + i14;

        $i2 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedRed(int)>(i13);

        $i3 = i14 * $i2;

        i8 = i8 + $i3;

        $i4 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedGreen(int)>(i13);

        $i5 = i14 * $i4;

        i9 = i9 + $i5;

        $i6 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int quantizedBlue(int)>(i13);

        $i7 = i14 * $i6;

        i10 = i10 + $i7;

        i12 = i12 + 1;

        goto label1;

     label2:
        $f1 = (float) i8;

        $f0 = (float) i11;

        $f2 = $f1 / $f0;

        i15 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $f4 = (float) i9;

        $f3 = (float) i11;

        $f5 = $f4 / $f3;

        i16 = staticinvoke <java.lang.Math: int round(float)>($f5);

        $f7 = (float) i10;

        $f6 = (float) i11;

        $f8 = $f7 / $f6;

        i17 = staticinvoke <java.lang.Math: int round(float)>($f8);

        $r5 = new androidx.palette.graphics.Palette$Swatch;

        $i1 = staticinvoke <androidx.palette.graphics.ColorCutQuantizer: int approximateToRgb888(int,int,int)>(i15, i16, i17);

        specialinvoke $r5.<androidx.palette.graphics.Palette$Swatch: void <init>(int,int)>($i1, i11);

        return $r5;
    }

