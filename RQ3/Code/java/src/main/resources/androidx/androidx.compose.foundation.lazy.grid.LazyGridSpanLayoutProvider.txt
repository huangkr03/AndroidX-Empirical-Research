androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridItemProvider itemProvider>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineIndex>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineStartItemIndex>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineStartKnownSpan>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int cachedBucketIndex>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List cachedBucket>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List previousDefaultSpans>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>
    public void <init>(androidx.compose.foundation.lazy.grid.LazyGridItemProvider)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0, r3;
        androidx.compose.foundation.lazy.grid.LazyGridItemProvider r1;
        java.util.ArrayList r2, $r4, $r6;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket $r5;
        java.util.List $r7, $r8;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        r1 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridItemProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "itemProvider");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridItemProvider itemProvider> = r1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        r3 = r0;

        $r5 = new androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        specialinvoke $r5.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 2, null);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        r3.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets> = r2;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int cachedBucketIndex> = -1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = (java.util.List) $r6;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List cachedBucket> = $r7;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List previousDefaultSpans> = $r8;

        return;
    }

    private final int getBucketSize()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        $i0 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        $d0 = (double) $i0;

        $d2 = 1.0 * $d0;

        $i1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        $d1 = (double) $i1;

        $d3 = $d2 / $d1;

        $d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d3);

        $i2 = (int) $d4;

        $i3 = $i2 + 1;

        return $i3;
    }

    private final java.util.List getDefaultSpans(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        int i0, i1, $i2, i4;
        java.util.ArrayList r1, $r3, r6;
        java.util.List $r2, $r5, r7, r8;
        long $l3;
        androidx.compose.foundation.lazy.grid.GridItemSpan $r4;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List previousDefaultSpans>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 != $i2 goto label1;

        $r5 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List previousDefaultSpans>;

        goto label4;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        r6 = $r3;

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        i1 = i4;

        r1 = r6;

        $l3 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridSpanKt: long GridItemSpan(int)>(1);

        $r4 = staticinvoke <androidx.compose.foundation.lazy.grid.GridItemSpan: androidx.compose.foundation.lazy.grid.GridItemSpan box-impl(long)>($l3);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label2;

     label3:
        r7 = (java.util.List) r6;

        r8 = r7;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List previousDefaultSpans> = r8;

        $r5 = r7;

     label4:
        return $r5;
    }

    public final int getTotalSize()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        androidx.compose.foundation.lazy.grid.LazyGridItemProvider $r1;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridItemProvider itemProvider>;

        $i0 = interfaceinvoke $r1.<androidx.compose.foundation.lazy.grid.LazyGridItemProvider: int getItemCount()>();

        return $i0;
    }

    public final int getSlotsPerLine()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        $i0 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        return $i0;
    }

    public final void setSlotsPerLine(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        int i0, $i1;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        if i0 == $i1 goto label1;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine> = i0;

        specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: void invalidateCache()>();

     label1:
        return;
    }

    public final androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration getLineConfiguration(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34, i35, i36, i37, $i38, $i39, i40, i41, i42, $i43, $i44, i45, i46, i47, $i48, $i49, i50, i51, i52, $i53, $i54, $i55, i56;
        androidx.compose.foundation.lazy.grid.LazyGridItemProvider $r1;
        boolean $z1, z5, $z6, $z7, $z8, z9, $z10, $z12;
        java.util.ArrayList $r2, $r3, $r6, $r9, $r11, $r13;
        java.lang.Object $r4, $r7, $r23;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket $r5, $r8, $r12;
        long $l11;
        androidx.compose.foundation.lazy.grid.GridItemSpan $r10;
        java.lang.IllegalStateException $r14, $r18;
        java.lang.String $r15, $r19, r27, r28;
        java.util.List $r16, $r20, $r21, $r22, $r26, r29;
        java.lang.Integer $r17;
        java.lang.Number $r24;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration $r25, $r30;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridItemProvider itemProvider>;

        $z1 = interfaceinvoke $r1.<androidx.compose.foundation.lazy.grid.LazyGridItemProvider: boolean getHasCustomSpans()>();

        if $z1 != 0 goto label01;

        $i26 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        i32 = i0 * $i26;

        $r25 = new androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration;

        $i27 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        $i28 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        $i29 = $i28 - i32;

        $i30 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i27, $i29);

        $i31 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i30, 0);

        $r26 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List getDefaultSpans(int)>($i31);

        specialinvoke $r25.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: void <init>(int,java.util.List)>(i32, $r26);

        return $r25;

     label01:
        $i2 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        $i3 = i0 / $i2;

        $r2 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $i4 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i5 = $i4 - 1;

        i33 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i5);

        $i6 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        i34 = i33 * $i6;

        $r3 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i33);

        $r5 = (androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket) $r4;

        i35 = virtualinvoke $r5.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int getFirstItemIndex()>();

        z5 = 0;

        $r6 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i33);

        $r8 = (androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket) $r7;

        i36 = virtualinvoke $r8.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int getFirstItemKnownSpan()>();

        i37 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineIndex>;

        if i34 > i37 goto label03;

        if i37 > i0 goto label02;

        $z6 = 1;

        goto label04;

     label02:
        $z6 = 0;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        if $z6 == 0 goto label05;

        i34 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineIndex>;

        i35 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineStartItemIndex>;

        i36 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineStartKnownSpan>;

        goto label06;

     label05:
        $i7 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int cachedBucketIndex>;

        if i33 != $i7 goto label06;

        $i23 = i0 - i34;

        $r21 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List cachedBucket>;

        $i24 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i23 >= $i24 goto label06;

        $r22 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List cachedBucket>;

        $i25 = i0 - i34;

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>($i25);

        $r24 = (java.lang.Number) $r23;

        i35 = virtualinvoke $r24.<java.lang.Number: int intValue()>();

        i34 = i0;

        i36 = 0;

     label06:
        $i38 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        $i39 = i34 % $i38;

        if $i39 != 0 goto label10;

        i40 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        i41 = i0 - i34;

        if 2 > i41 goto label08;

        if i41 >= i40 goto label07;

        $z7 = 1;

        goto label09;

     label07:
        $z7 = 0;

        goto label09;

     label08:
        $z7 = 0;

     label09:
        if $z7 == 0 goto label10;

        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        z9 = $z8;

        if z9 == 0 goto label12;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int cachedBucketIndex> = i33;

        $r20 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List cachedBucket>;

        interfaceinvoke $r20.<java.util.List: void clear()>();

     label12:
        if i34 > i0 goto label13;

        $z10 = 1;

        goto label14;

     label13:
        $z10 = 0;

     label14:
        if $z10 != 0 goto label15;

        r27 = "Check failed.";

        $r18 = new java.lang.IllegalStateException;

        $r19 = virtualinvoke r27.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label15:
        if i34 >= i0 goto label25;

        $i14 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        if i35 >= $i14 goto label25;

        if z9 == 0 goto label16;

        $r16 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List cachedBucket>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i35);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

     label16:
        i42 = 0;

     label17:
        $i43 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        if i42 >= $i43 goto label21;

        $i18 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        if i35 >= $i18 goto label21;

        if i36 != 0 goto label18;

        $i21 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        $i22 = $i21 - i42;

        $i44 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int spanOf(int,int)>(i35, $i22);

        goto label19;

     label18:
        i45 = i36;

        i46 = i45;

        i36 = 0;

        $i44 = i45;

     label19:
        i47 = $i44;

        $i20 = i42 + i47;

        $i19 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        if $i20 <= $i19 goto label20;

        i36 = i47;

        goto label21;

     label20:
        i35 = i35 + 1;

        i42 = i42 + i47;

        goto label17;

     label21:
        i34 = i34 + 1;

        $i48 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        $i49 = i34 % $i48;

        if $i49 != 0 goto label15;

        $i15 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        if i35 >= $i15 goto label15;

        $i16 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        i50 = i34 / $i16;

        $r11 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $i17 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i17 != i50 goto label22;

        $z12 = 1;

        goto label23;

     label22:
        $z12 = 0;

     label23:
        if $z12 != 0 goto label24;

        r28 = "Check failed.";

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke r28.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label24:
        $r13 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $r12 = new androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        specialinvoke $r12.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: void <init>(int,int)>(i35, i36);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label15;

     label25:
        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineIndex> = i0;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineStartItemIndex> = i35;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineStartKnownSpan> = i36;

        i51 = i35;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r29 = (java.util.List) $r9;

        i52 = 0;

     label26:
        $i53 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        if i52 >= $i53 goto label29;

        $i8 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        if i35 >= $i8 goto label29;

        if i36 != 0 goto label27;

        $i12 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        $i13 = $i12 - i52;

        $i54 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int spanOf(int,int)>(i35, $i13);

        goto label28;

     label27:
        $i55 = i36;

        i1 = i36;

        i36 = 0;

        $i54 = $i55;

     label28:
        i56 = $i54;

        $i10 = i52 + i56;

        $i9 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        if $i10 > $i9 goto label29;

        i35 = i35 + 1;

        $l11 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridSpanKt: long GridItemSpan(int)>(i56);

        $r10 = staticinvoke <androidx.compose.foundation.lazy.grid.GridItemSpan: androidx.compose.foundation.lazy.grid.GridItemSpan box-impl(long)>($l11);

        interfaceinvoke r29.<java.util.List: boolean add(java.lang.Object)>($r10);

        i52 = i52 + i56;

        goto label26;

     label29:
        $r30 = new androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration;

        specialinvoke $r30.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: void <init>(int,java.util.List)>(i51, r29);

        return $r30;
    }

    public final int getLineIndexOfItem--_Ze7BM(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, $i29, i30, i31, $i32, i33, $i34, $i35;
        androidx.compose.foundation.lazy.grid.LazyGridItemProvider $r1;
        boolean $z0, $z2, $z4;
        java.util.ArrayList $r2, $r6, $r9, $r11;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1 $r3;
        java.util.List $r4;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.Object $r7;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket $r8, $r10;
        java.lang.IllegalArgumentException $r12, $r14;
        java.lang.String $r13, $r15, r16, r17;
        byte $b36;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter0: int;

        $i3 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        if $i3 > 0 goto label01;

        $i27 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>(0);

        return $i27;

     label01:
        $i4 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getTotalSize()>();

        if i0 >= $i4 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        if $z2 != 0 goto label04;

        r16 = "Failed requirement.";

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label04:
        $r1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridItemProvider itemProvider>;

        $z0 = interfaceinvoke $r1.<androidx.compose.foundation.lazy.grid.LazyGridItemProvider: boolean getHasCustomSpans()>();

        if $z0 != 0 goto label05;

        $i24 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        $i25 = i0 / $i24;

        $i26 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>($i25);

        return $i26;

     label05:
        $r2 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $r4 = (java.util.List) $r2;

        $r3 = new androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1;

        specialinvoke $r3.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1: void <init>(int)>(i0);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        i28 = staticinvoke <kotlin.collections.CollectionsKt: int binarySearch$default(java.util.List,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r4, 0, 0, $r5, 3, null);

        if i28 < 0 goto label06;

        $i29 = i28;

        goto label07;

     label06:
        $i5 = neg i28;

        $i29 = $i5 - 2;

     label07:
        i1 = $i29;

        $i6 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        i30 = i1 * $i6;

        $r6 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket) $r7;

        i31 = virtualinvoke $r8.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int getFirstItemIndex()>();

        if i31 > i0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        if $z4 != 0 goto label10;

        r17 = "Failed requirement.";

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label10:
        $i32 = 0;

     label11:
        if i31 >= i0 goto label17;

        $i13 = i31;

        i31 = i31 + 1;

        $i14 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        $i15 = $i14 - $i32;

        i33 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int spanOf(int,int)>($i13, $i15);

        $i17 = $i32 + i33;

        $i16 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        if $i17 >= $i16 goto label12;

        $i32 = $i32 + i33;

        goto label14;

     label12:
        $i19 = $i32 + i33;

        $i18 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        if $i19 != $i18 goto label13;

        i30 = i30 + 1;

        $i32 = 0;

        goto label14;

     label13:
        i30 = i30 + 1;

        $i32 = i33;

     label14:
        $i34 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        $i35 = i30 % $i34;

        if $i35 != 0 goto label11;

        $i20 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getBucketSize()>();

        i2 = i30 / $i20;

        $r9 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $i21 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if i2 < $i21 goto label11;

        $r11 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $r10 = new androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        $i23 = i31;

        if $i32 <= 0 goto label15;

        $b36 = 1;

        goto label16;

     label15:
        $b36 = 0;

     label16:
        $i22 = $i23 - $b36;

        specialinvoke $r10.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i22, 0, 2, null);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label11;

     label17:
        $i7 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        $i8 = $i7 - $i32;

        $i9 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int spanOf(int,int)>(i0, $i8);

        $i11 = $i32 + $i9;

        $i10 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        if $i11 <= $i10 goto label18;

        i30 = i30 + 1;

     label18:
        $i12 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>(i30);

        return $i12;
    }

    private final int spanOf(int, int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        int i0, i1, $i2, $i4, $i5, $i6;
        androidx.compose.foundation.lazy.grid.LazyGridItemProvider $r1;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl $r2;
        androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope $r3;
        long $l3;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: androidx.compose.foundation.lazy.grid.LazyGridItemProvider itemProvider>;

        $r2 = <androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl INSTANCE>;

        virtualinvoke $r2.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: void setMaxCurrentLineSpan(int)>(i1);

        $i2 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        virtualinvoke $r2.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: void setMaxLineSpan(int)>($i2);

        $r3 = (androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope) $r2;

        $l3 = interfaceinvoke $r1.<androidx.compose.foundation.lazy.grid.LazyGridItemProvider: long getSpan-_-orMbw(androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope,int)>($r3, i0);

        $i4 = staticinvoke <androidx.compose.foundation.lazy.grid.GridItemSpan: int getCurrentLineSpan-impl(long)>($l3);

        $i5 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int slotsPerLine>;

        $i6 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i4, 1, $i5);

        return $i6;
    }

    private final void invalidateCache()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r0;
        java.util.ArrayList $r1, $r3;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket $r2;
        java.util.List $r4;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r3 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.ArrayList buckets>;

        $r2 = new androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        specialinvoke $r2.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 2, null);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineIndex> = 0;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int lastLineStartItemIndex> = 0;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: int cachedBucketIndex> = -1;

        $r4 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider: java.util.List cachedBucket>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        return;
    }

androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int firstItemIndex>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int firstItemKnownSpan>
    public void <init>(int, int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket r0;
        int i0, i1;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int firstItemIndex> = i0;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int firstItemKnownSpan> = i1;

        return;
    }

    public void <init>(int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket r0;
        int i0, i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        i3 = 0;

     label1:
        specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: void <init>(int,int)>(i0, i3);

        return;
    }

    public final int getFirstItemIndex()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        $i0 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int firstItemIndex>;

        return $i0;
    }

    public final int getFirstItemKnownSpan()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        $i0 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int firstItemKnownSpan>;

        return $i0;
    }

androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1: int $itemIndex>
    void <init>(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1 r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1: int $itemIndex> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1 r0;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1;

        r1 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket: int getFirstItemIndex()>();

        $i1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1: int $itemIndex>;

        $i2 = $i0 - $i1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1 r0;
        java.lang.Object r1;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket) r1;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$getLineIndexOfItem$lowerBoundBucket$1: java.lang.Integer invoke(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$Bucket)>($r2);

        return $r3;
    }

androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl INSTANCE>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: int maxCurrentLineSpan>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: int maxLineSpan>
    private void <init>()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl r0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getMaxCurrentLineSpan()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl;

        $i0 = <androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: int maxCurrentLineSpan>;

        return $i0;
    }

    public void setMaxCurrentLineSpan(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl r0;
        int i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl;

        i0 := @parameter0: int;

        <androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: int maxCurrentLineSpan> = i0;

        return;
    }

    public int getMaxLineSpan()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl;

        $i0 = <androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: int maxLineSpan>;

        return $i0;
    }

    public void setMaxLineSpan(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl r0;
        int i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl;

        i0 := @parameter0: int;

        <androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: int maxLineSpan> = i0;

        return;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl $r0;

        $r0 = new androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl;

        specialinvoke $r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: void <init>()>();

        <androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LazyGridItemSpanScopeImpl INSTANCE> = $r0;

        return;
    }

androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int firstItemIndex>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: java.util.List spans>
<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int $stable>
    public void <init>(int, java.util.List)
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration r0;
        int i0;
        java.util.List r1;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "spans");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int firstItemIndex> = i0;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: java.util.List spans> = r1;

        return;
    }

    public final int getFirstItemIndex()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration;

        $i0 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int firstItemIndex>;

        return $i0;
    }

    public final java.util.List getSpans()
    {
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: java.util.List spans>;

        return $r1;
    }

    static void <clinit>()
    {
        <androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider$LineConfiguration: int $stable> = 8;

        return;
    }

