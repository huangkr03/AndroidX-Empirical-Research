android.databinding.tool.store.ResourceBundle
<android.databinding.tool.store.ResourceBundle: java.lang.String[] ANDROID_VIEW_PACKAGE_VIEWS>
<android.databinding.tool.store.ResourceBundle: java.lang.String mAppPackage>
<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>
<android.databinding.tool.store.ResourceBundle: java.util.Set mLayoutFileBundlesInSource>
<android.databinding.tool.store.ResourceBundle: java.util.Map mDependencyBinders>
<android.databinding.tool.store.ResourceBundle: java.util.List mRemovedFiles>
<android.databinding.tool.store.ResourceBundle: boolean mValidated>
    public void <init>(java.lang.String)
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r4;
        java.util.HashSet $r3;
        java.util.ArrayList $r5;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle: java.util.Set mLayoutFileBundlesInSource> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle: java.util.Map mDependencyBinders> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle: java.util.List mRemovedFiles> = $r5;

        r0.<android.databinding.tool.store.ResourceBundle: boolean mValidated> = 0;

        r0.<android.databinding.tool.store.ResourceBundle: java.lang.String mAppPackage> = r1;

        return;
    }

    public void addLayoutBundle(android.databinding.tool.store.ResourceBundle$LayoutFileBundle, boolean)
    {
        android.databinding.tool.store.ResourceBundle r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r1, r4;
        boolean z0, $z1, $z3, $z5;
        java.util.List r2;
        java.util.Iterator r3;
        java.lang.String $r5, $r6, $r8, $r16;
        java.util.HashMap $r7, $r9, $r15;
        java.lang.Object $r10, $r12;
        java.lang.Object[] $r11, $r13, $r19;
        java.util.ArrayList $r14;
        java.util.Set $r18;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        z0 := @parameter1: boolean;

        $r5 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        if $r5 != null goto label1;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r1;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("File bundle must have a name. %s does not have one.", $r19);

        return;

     label1:
        if z0 == 0 goto label2;

        $r18 = r0.<android.databinding.tool.store.ResourceBundle: java.util.Set mLayoutFileBundlesInSource>;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label2:
        $r7 = r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>;

        $r6 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $z1 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

        $r15 = r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>;

        $r16 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r14);

     label3:
        $r9 = r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>;

        $r8 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r2 = (java.util.List) $r10;

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r12;

        $z3 = virtualinvoke r4.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label5;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r1;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("skipping layout bundle %s because it already exists.", $r13);

        return;

     label5:
        goto label4;

     label6:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r1;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("adding bundle %s", $r11);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addDependencyLayouts(android.databinding.tool.store.GenClassInfoLog)
    {
        android.databinding.tool.store.ResourceBundle r0;
        android.databinding.tool.store.GenClassInfoLog r1;
        java.util.Map $r2;
        java.util.function.BiConsumer $r3;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        r1 := @parameter0: android.databinding.tool.store.GenClassInfoLog;

        $r2 = virtualinvoke r1.<android.databinding.tool.store.GenClassInfoLog: java.util.Map mappings()>();

        $r3 = dynamicinvoke "accept" <java.util.function.BiConsumer (android.databinding.tool.store.ResourceBundle)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <android.databinding.tool.store.ResourceBundle: void lambda$addDependencyLayouts$0(java.lang.String,android.databinding.tool.store.GenClassInfoLog$GenClass)>, methodtype: void __METHODTYPE__(java.lang.String,android.databinding.tool.store.GenClassInfoLog$GenClass));

        interfaceinvoke $r2.<java.util.Map: void forEach(java.util.function.BiConsumer)>($r3);

        return;
    }

    public java.util.Set getLayoutFileBundlesInSource()
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.util.Set $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle: java.util.Set mLayoutFileBundlesInSource>;

        return $r1;
    }

    public java.util.HashMap getLayoutBundles()
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.util.HashMap $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>;

        return $r1;
    }

    public java.lang.String getAppPackage()
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle: java.lang.String mAppPackage>;

        return $r1;
    }

    public static android.databinding.tool.store.GenClassInfoLog loadClassInfoFromFolder(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r4;
        android.databinding.tool.store.GenClassInfoLog r1, $r5, $r7;
        java.util.Collection r2;
        java.util.Iterator r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        java.lang.String $r8;
        java.util.zip.ZipFile $r9, r12;
        java.util.stream.Stream $r10;
        java.util.function.Consumer $r11;
        org.apache.commons.io.filefilter.SuffixFileFilter $r13, r15;
        org.apache.commons.io.IOCase $r14;
        org.apache.commons.io.filefilter.IOFileFilter $r16;

        r0 := @parameter0: java.io.File;

        $r5 = new android.databinding.tool.store.GenClassInfoLog;

        specialinvoke $r5.<android.databinding.tool.store.GenClassInfoLog: void <init>()>();

        r1 = $r5;

        $z0 = virtualinvoke r0.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>(".zip");

        if $z1 == 0 goto label1;

        $r9 = new java.util.zip.ZipFile;

        specialinvoke $r9.<java.util.zip.ZipFile: void <init>(java.io.File)>(r0);

        r12 = $r9;

        $r10 = virtualinvoke r12.<java.util.zip.ZipFile: java.util.stream.Stream stream()>();

        $r11 = dynamicinvoke "accept" <java.util.function.Consumer (android.databinding.tool.store.GenClassInfoLog,java.util.zip.ZipFile)>(r1, r12) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <android.databinding.tool.store.ResourceBundle: void lambda$loadClassInfoFromFolder$1(android.databinding.tool.store.GenClassInfoLog,java.util.zip.ZipFile,java.util.zip.ZipEntry)>, methodtype: void __METHODTYPE__(java.util.zip.ZipEntry));

        interfaceinvoke $r10.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11);

     label1:
        $r13 = new org.apache.commons.io.filefilter.SuffixFileFilter;

        $r14 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        specialinvoke $r13.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>("-binding_classes.json", $r14);

        r15 = $r13;

        $r16 = <org.apache.commons.io.filefilter.TrueFileFilter: org.apache.commons.io.filefilter.IOFileFilter INSTANCE>;

        r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r15, $r16);

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.io.File) $r6;

        $r7 = staticinvoke <android.databinding.tool.store.GenClassInfoLog: android.databinding.tool.store.GenClassInfoLog fromFile(java.io.File)>(r4);

        virtualinvoke r1.<android.databinding.tool.store.GenClassInfoLog: void addAll(android.databinding.tool.store.GenClassInfoLog)>($r7);

        goto label2;

     label3:
        return r1;
    }

    public void validateMultiResLayouts()
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.lang.Throwable r1, $r166, $r167, $r168, r202, r203;
        java.util.HashMap $r2, $r4, $r6, $r35, $r36, $r155, r194, r195;
        java.util.Collection $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z21, $z24, $z25, $z26, $z28, $z29, $z30, $z32, $z34, $z35, $z36, $z37;
        java.util.Set $r5, $r7, $r45, $r124, $r125;
        java.lang.Object $r8, $r9, $r11, $r18, $r19, $r21, $r23, $r25, $r28, $r31, $r38, $r40, $r42, $r44, $r46, $r47, $r52, $r53, $r55, $r56, $r57, $r59, $r60, $r62, $r64, $r66, $r69, $r71, $r73, $r79, $r81, $r90, $r120, $r126, $r128, $r131, $r133, $r136, $r138, $r140, $r145, $r148, $r149, $r150, $r154, $r157, $r160, $r164;
        java.util.List $r10, $r20, $r22, $r24, $r27, $r30, $r32, $r41, $r43, $r70, $r72, $r80, $r127, $r130, $r137, $r152, $r153, r170, r176;
        java.lang.Object[] $r13, $r37, $r49, $r75, $r82, $r92, $r96, $r103, $r112, $r117, $r121, $r132, $r144, $r161;
        java.lang.String $r14, $r15, $r16, $r17, $r48, $r50, $r51, $r54, $r58, $r61, $r63, $r65, $r67, $r74, $r76, $r77, $r83, $r84, $r86, $r87, $r88, $r89, $r91, $r93, $r94, $r97, $r98, $r100, $r101, $r104, $r105, $r106, $r107, $r109, $r110, $r113, $r114, $r115, $r116, $r118, $r119, $r122, $r123, $r129, $r134, $r135, $r139, $r142, $r143, $r146, $r147, $r156, $r159, $r162, $r163, r177, r201, r213, r219, r220;
        int $i0, $i1;
        android.databinding.tool.store.ResourceBundle$1 $r26;
        android.databinding.tool.store.ResourceBundle$2 $r29;
        java.util.HashSet $r33, $r34, $r39, r192, r193, r196;
        android.databinding.tool.processing.scopes.ScopeProvider[] $r78;
        java.lang.Boolean $r85;
        android.databinding.tool.store.Location $r141;
        java.util.ArrayList $r151, r173;
        java.util.Map $r158, r183, r184;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r165, r172, r181, r186, r198, r205, r209, r218;
        java.util.Iterator r169, r171, r174, r178, r180, r185, r187, r190, r197, r199, r204, r206, r208, r210, r215, r217;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r175, r200, r207, r212, r214;
        java.util.Map$Entry r179, r188, r191, r211, r216;
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r189;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r169 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r169.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r149 = interfaceinvoke r169.<java.util.Iterator: java.lang.Object next()>();

        r170 = (java.util.List) $r149;

        r171 = interfaceinvoke r170.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z29 = interfaceinvoke r171.<java.util.Iterator: boolean hasNext()>();

        if $z29 == 0 goto label10;

        $r150 = interfaceinvoke r171.<java.util.Iterator: java.lang.Object next()>();

        r172 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r150;

        $r151 = new java.util.ArrayList;

        specialinvoke $r151.<java.util.ArrayList: void <init>()>();

        r173 = $r151;

        $r152 = virtualinvoke r172.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getBindingTargetBundles()>();

        r174 = interfaceinvoke $r152.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z30 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>();

        if $z30 == 0 goto label09;

        $r154 = interfaceinvoke r174.<java.util.Iterator: java.lang.Object next()>();

        r175 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) $r154;

        $z32 = virtualinvoke r175.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean isBinder()>();

        if $z32 == 0 goto label08;

        $r155 = r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>;

        $r156 = virtualinvoke r175.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getIncludedLayout()>();

        $r157 = virtualinvoke $r155.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r156);

        r176 = (java.util.List) $r157;

        if r176 == null goto label04;

        $z34 = interfaceinvoke r176.<java.util.List: boolean isEmpty()>();

        if $z34 != 0 goto label04;

        $r164 = interfaceinvoke r176.<java.util.List: java.lang.Object get(int)>(0);

        $r165 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r164;

        r177 = virtualinvoke $r165.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFullBindingClass()>();

        goto label05;

     label04:
        $r158 = r0.<android.databinding.tool.store.ResourceBundle: java.util.Map mDependencyBinders>;

        $r159 = virtualinvoke r175.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getIncludedLayout()>();

        $r160 = interfaceinvoke $r158.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r159, null);

        r177 = (java.lang.String) $r160;

     label05:
        if r177 != null goto label07;

        $r161 = newarray (java.lang.Object)[1];

        $r162 = virtualinvoke r175.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getIncludedLayout()>();

        $r161[0] = $r162;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("There is no binding for %s, reverting to plain layout", $r161);

        $r163 = virtualinvoke r175.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        if $r163 != null goto label06;

        interfaceinvoke r173.<java.util.List: boolean add(java.lang.Object)>(r175);

        goto label08;

     label06:
        virtualinvoke r175.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: void setInterfaceType(java.lang.String)>("android.view.View");

        r175.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName> = "android.view.View";

        goto label08;

     label07:
        virtualinvoke r175.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: void setInterfaceType(java.lang.String)>(r177);

     label08:
        goto label03;

     label09:
        $r153 = virtualinvoke r172.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getBindingTargetBundles()>();

        interfaceinvoke $r153.<java.util.List: boolean removeAll(java.util.Collection)>(r173);

        goto label02;

     label10:
        goto label01;

     label11:
        $r4 = r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        r178 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z35 = interfaceinvoke r178.<java.util.Iterator: boolean hasNext()>();

        if $z35 == 0 goto label62;

        $r18 = interfaceinvoke r178.<java.util.Iterator: java.lang.Object next()>();

        r179 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (java.util.List) $r19;

        $i1 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i1 >= 2 goto label13;

        goto label12;

     label13:
        $r21 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (java.util.List) $r21;

        r180 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z5 = interfaceinvoke r180.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r148 = interfaceinvoke r180.<java.util.Iterator: java.lang.Object next()>();

        r181 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r148;

        r181.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mHasVariations> = 1;

        goto label14;

     label15:
        $r23 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.util.List) $r23;

        specialinvoke r0.<android.databinding.tool.store.ResourceBundle: java.lang.String validateAndGetSharedClassName(java.util.List)>($r24);

        $r25 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = (java.util.List) $r25;

        $r26 = new android.databinding.tool.store.ResourceBundle$1;

        specialinvoke $r26.<android.databinding.tool.store.ResourceBundle$1: void <init>(android.databinding.tool.store.ResourceBundle)>(r0);

        r183 = specialinvoke r0.<android.databinding.tool.store.ResourceBundle: java.util.Map validateAndMergeNameTypeLocations(java.util.List,java.lang.String,android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback)>($r27, "Variable declaration (%s - %s) does not match the type defined for layout(%s) in other configurations", $r26);

        $r28 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r30 = (java.util.List) $r28;

        $r29 = new android.databinding.tool.store.ResourceBundle$2;

        specialinvoke $r29.<android.databinding.tool.store.ResourceBundle$2: void <init>(android.databinding.tool.store.ResourceBundle)>(r0);

        r184 = specialinvoke r0.<android.databinding.tool.store.ResourceBundle: java.util.Map validateAndMergeNameTypeLocations(java.util.List,java.lang.String,android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback)>($r30, "Import declaration (%s - %s) does not match the import defined for layout(%s) in other configurations", $r29);

        $r31 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r32 = (java.util.List) $r31;

        r185 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z6 = interfaceinvoke r185.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label23;

        $r120 = interfaceinvoke r185.<java.util.Iterator: java.lang.Object next()>();

        r186 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r120;

        $r121 = newarray (java.lang.Object)[2];

        $r122 = r186.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $r121[0] = $r122;

        $r123 = staticinvoke <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String access$000(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>(r186);

        $r121[1] = $r123;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("checking for missing variables in %s / %s", $r121);

        $r124 = interfaceinvoke r183.<java.util.Map: java.util.Set entrySet()>();

        r187 = interfaceinvoke $r124.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z24 = interfaceinvoke r187.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label19;

        $r136 = interfaceinvoke r187.<java.util.Iterator: java.lang.Object next()>();

        r188 = (java.util.Map$Entry) $r136;

        $r137 = r186.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables>;

        $r138 = interfaceinvoke r188.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r139 = (java.lang.String) $r138;

        $z28 = staticinvoke <android.databinding.tool.store.ResourceBundle$NameTypeLocation: boolean contains(java.util.List,java.lang.String)>($r137, $r139);

        if $z28 != 0 goto label18;

        $r140 = interfaceinvoke r188.<java.util.Map$Entry: java.lang.Object getValue()>();

        r189 = (android.databinding.tool.store.ResourceBundle$NameTypeLocation) $r140;

        $r143 = r189.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $r142 = r189.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        $r141 = r189.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        virtualinvoke r186.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: void addVariable(java.lang.String,java.lang.String,android.databinding.tool.store.Location,boolean)>($r143, $r142, $r141, 0);

        $r144 = newarray (java.lang.Object)[3];

        $r145 = interfaceinvoke r188.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r144[0] = $r145;

        $r146 = r186.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $r144[1] = $r146;

        $r147 = staticinvoke <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String access$000(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>(r186);

        $r144[2] = $r147;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("adding missing variable %s to %s / %s", $r144);

     label18:
        goto label17;

     label19:
        $r125 = interfaceinvoke r184.<java.util.Map: java.util.Set entrySet()>();

        r190 = interfaceinvoke $r125.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z25 = interfaceinvoke r190.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label22;

        $r126 = interfaceinvoke r190.<java.util.Iterator: java.lang.Object next()>();

        r191 = (java.util.Map$Entry) $r126;

        $r127 = r186.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports>;

        $r128 = interfaceinvoke r191.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r129 = (java.lang.String) $r128;

        $z26 = staticinvoke <android.databinding.tool.store.ResourceBundle$NameTypeLocation: boolean contains(java.util.List,java.lang.String)>($r127, $r129);

        if $z26 != 0 goto label21;

        $r130 = r186.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports>;

        $r131 = interfaceinvoke r191.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r130.<java.util.List: boolean add(java.lang.Object)>($r131);

        $r132 = newarray (java.lang.Object)[3];

        $r133 = interfaceinvoke r191.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r132[0] = $r133;

        $r134 = r186.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $r132[1] = $r134;

        $r135 = staticinvoke <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String access$000(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>(r186);

        $r132[2] = $r135;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("adding missing import %s to %s / %s", $r132);

     label21:
        goto label20;

     label22:
        goto label16;

     label23:
        $r33 = new java.util.HashSet;

        specialinvoke $r33.<java.util.HashSet: void <init>()>();

        r192 = $r33;

        $r34 = new java.util.HashSet;

        specialinvoke $r34.<java.util.HashSet: void <init>()>();

        r193 = $r34;

        $r35 = new java.util.HashMap;

        specialinvoke $r35.<java.util.HashMap: void <init>()>();

        r194 = $r35;

        $r36 = new java.util.HashMap;

        specialinvoke $r36.<java.util.HashMap: void <init>()>();

        r195 = $r36;

        $r37 = newarray (java.lang.Object)[1];

        $r38 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r37[0] = $r38;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("validating ids for %s", $r37);

        $r39 = new java.util.HashSet;

        specialinvoke $r39.<java.util.HashSet: void <init>()>();

        r196 = $r39;

        $r40 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r41 = (java.util.List) $r40;

        r197 = interfaceinvoke $r41.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z7 = interfaceinvoke r197.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label44;

        $r79 = interfaceinvoke r197.<java.util.Iterator: java.lang.Object next()>();

        r198 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r79;

     label25:
        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r198);

        $r80 = r198.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles>;

        r199 = interfaceinvoke $r80.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z36 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>();

        if $z36 == 0 goto label40;

        $r81 = interfaceinvoke r199.<java.util.Iterator: java.lang.Object next()>();

        r200 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) $r81;

     label27:
        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r200);

        $r82 = newarray (java.lang.Object)[3];

        $r83 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        $r82[0] = $r83;

        $r84 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getFullClassName()>();

        $r82[1] = $r84;

        $z13 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean isBinder()>();

        $r85 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13);

        $r82[2] = $r85;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("checking %s %s %s", $r82);

        $r86 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        if $r86 == null goto label36;

        $z14 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean isBinder()>();

        if $z14 == 0 goto label30;

        $r115 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $z21 = interfaceinvoke r193.<java.util.Set: boolean contains(java.lang.Object)>($r115);

        if $z21 == 0 goto label29;

        $r117 = newarray (java.lang.Object)[1];

        $r118 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $r117[0] = $r118;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("%s is conflicting", $r117);

        $r119 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        interfaceinvoke r196.<java.util.Set: boolean add(java.lang.Object)>($r119);

     label28:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label26;

     label29:
        $r116 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        interfaceinvoke r192.<java.util.Set: boolean add(java.lang.Object)>($r116);

        goto label33;

     label30:
        $r87 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $z15 = interfaceinvoke r192.<java.util.Set: boolean contains(java.lang.Object)>($r87);

        if $z15 == 0 goto label32;

        $r112 = newarray (java.lang.Object)[1];

        $r113 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $r112[0] = $r113;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("%s is conflicting", $r112);

        $r114 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        interfaceinvoke r196.<java.util.Set: boolean add(java.lang.Object)>($r114);

     label31:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label26;

     label32:
        $r88 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        interfaceinvoke r193.<java.util.Set: boolean add(java.lang.Object)>($r88);

     label33:
        $r89 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $r90 = interfaceinvoke r194.<java.util.Map: java.lang.Object get(java.lang.Object)>($r89);

        r201 = (java.lang.String) $r90;

        if r201 != null goto label34;

        $r103 = newarray (java.lang.Object)[2];

        $r104 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        $r103[0] = $r104;

        $r105 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getFullClassName()>();

        $r103[1] = $r105;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("assigning %s as %s", $r103);

        $r106 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $r107 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getFullClassName()>();

        interfaceinvoke r194.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r106, $r107);

        $z19 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean isBinder()>();

        if $z19 == 0 goto label36;

        $r109 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $r110 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getIncludedLayout()>();

        interfaceinvoke r195.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r109, $r110);

        goto label36;

     label34:
        $r91 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getFullClassName()>();

        $z17 = virtualinvoke r201.<java.lang.String: boolean equals(java.lang.Object)>($r91);

        if $z17 != 0 goto label36;

        $z18 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean isBinder()>();

        if $z18 == 0 goto label35;

        $r96 = newarray (java.lang.Object)[1];

        $r97 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        $r96[0] = $r97;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("overriding %s as base binder", $r96);

        $r98 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        interfaceinvoke r194.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r98, "android.databinding.ViewDataBinding");

        $r100 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $r101 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getIncludedLayout()>();

        interfaceinvoke r195.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r100, $r101);

        goto label36;

     label35:
        $r92 = newarray (java.lang.Object)[1];

        $r93 = virtualinvoke r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getId()>();

        $r92[0] = $r93;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("overriding %s as base view", $r92);

        $r94 = r200.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        interfaceinvoke r194.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r94, "android.view.View");

     label36:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label39;

     label37:
        $r166 := @caughtexception;

        r202 = $r166;

     label38:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r202;

     label39:
        goto label26;

     label40:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label43;

     label41:
        $r168 := @caughtexception;

        r203 = $r168;

     label42:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r203;

     label43:
        goto label24;

     label44:
        $z8 = interfaceinvoke r196.<java.util.Set: boolean isEmpty()>();

        if $z8 != 0 goto label49;

        $r69 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r70 = (java.util.List) $r69;

        r204 = interfaceinvoke $r70.<java.util.List: java.util.Iterator iterator()>();

     label45:
        $z10 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label49;

        $r71 = interfaceinvoke r204.<java.util.Iterator: java.lang.Object next()>();

        r205 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r71;

        $r72 = r205.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles>;

        r206 = interfaceinvoke $r72.<java.util.List: java.util.Iterator iterator()>();

     label46:
        $z11 = interfaceinvoke r206.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label48;

        $r73 = interfaceinvoke r206.<java.util.Iterator: java.lang.Object next()>();

        r207 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) $r73;

        $r74 = r207.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $z12 = interfaceinvoke r196.<java.util.Set: boolean contains(java.lang.Object)>($r74);

        if $z12 == 0 goto label47;

        $r75 = newarray (java.lang.Object)[1];

        $r76 = r207.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $r75[0] = $r76;

        $r77 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot use the same id (%s) for a View and an include tag.", $r75);

        $r78 = newarray (android.databinding.tool.processing.scopes.ScopeProvider)[2];

        $r78[0] = r205;

        $r78[1] = r207;

        staticinvoke <android.databinding.tool.processing.Scope: void registerError(java.lang.String,android.databinding.tool.processing.scopes.ScopeProvider[])>($r77, $r78);

     label47:
        goto label46;

     label48:
        goto label45;

     label49:
        $r42 = interfaceinvoke r179.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r43 = (java.util.List) $r42;

        r208 = interfaceinvoke $r43.<java.util.List: java.util.Iterator iterator()>();

     label50:
        $z37 = interfaceinvoke r208.<java.util.Iterator: boolean hasNext()>();

        if $z37 == 0 goto label61;

        $r44 = interfaceinvoke r208.<java.util.Iterator: java.lang.Object next()>();

        r209 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r44;

     label51:
        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r209);

        $r45 = interfaceinvoke r194.<java.util.Map: java.util.Set entrySet()>();

        r210 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>();

     label52:
        $z9 = interfaceinvoke r210.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label57;

        $r46 = interfaceinvoke r210.<java.util.Iterator: java.lang.Object next()>();

        r211 = (java.util.Map$Entry) $r46;

        $r47 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r48 = (java.lang.String) $r47;

        r212 = virtualinvoke r209.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.ResourceBundle$BindingTargetBundle getBindingTargetById(java.lang.String)>($r48);

        if r212 != null goto label55;

        $r55 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r56 = interfaceinvoke r195.<java.util.Map: java.lang.Object get(java.lang.Object)>($r55);

        r213 = (java.lang.String) $r56;

        if r213 != null goto label53;

        $r64 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r65 = (java.lang.String) $r64;

        $r66 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r67 = (java.lang.String) $r66;

        virtualinvoke r209.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.ResourceBundle$BindingTargetBundle createBindingTarget(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,android.databinding.tool.store.Location)>($r65, $r67, 0, null, null, null);

        goto label54;

     label53:
        $r57 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r58 = (java.lang.String) $r57;

        r214 = virtualinvoke r209.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.ResourceBundle$BindingTargetBundle createBindingTarget(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,android.databinding.tool.store.Location)>($r58, null, 0, null, null, null);

        $r59 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r60 = interfaceinvoke r195.<java.util.Map: java.lang.Object get(java.lang.Object)>($r59);

        $r61 = (java.lang.String) $r60;

        virtualinvoke r214.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: void setIncludedLayout(java.lang.String)>($r61);

        $r62 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r63 = (java.lang.String) $r62;

        virtualinvoke r214.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: void setInterfaceType(java.lang.String)>($r63);

     label54:
        goto label56;

     label55:
        $r49 = newarray (java.lang.Object)[3];

        $r50 = r212.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $r49[0] = $r50;

        $r51 = virtualinvoke r212.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getFullClassName()>();

        $r49[1] = $r51;

        $r52 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r49[2] = $r52;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("setting interface type on %s (%s) as %s", $r49);

        $r53 = interfaceinvoke r211.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r54 = (java.lang.String) $r53;

        virtualinvoke r212.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: void setInterfaceType(java.lang.String)>($r54);

     label56:
        goto label52;

     label57:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label60;

     label58:
        $r167 := @caughtexception;

        r1 = $r167;

     label59:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r1;

     label60:
        goto label50;

     label61:
        goto label12;

     label62:
        $r6 = r0.<android.databinding.tool.store.ResourceBundle: java.util.HashMap mLayoutBundles>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        r215 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label63:
        $z1 = interfaceinvoke r215.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label70;

        $r8 = interfaceinvoke r215.<java.util.Iterator: java.lang.Object next()>();

        r216 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r216.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.util.List) $r9;

        r217 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label64:
        $z2 = interfaceinvoke r217.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label69;

        $r11 = interfaceinvoke r217.<java.util.Iterator: java.lang.Object next()>();

        r218 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r11;

        $z3 = virtualinvoke r218.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean hasVariations()>();

        if $z3 == 0 goto label67;

        r219 = r218.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        $r13 = newarray (java.lang.Object)[2];

        $r14 = virtualinvoke r218.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        $r13[0] = $r14;

        $r13[1] = r219;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("parent file for %s is %s", $r13);

        $r15 = "layout";

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r219);

        if $z4 == 0 goto label65;

        r220 = "";

        goto label66;

     label65:
        $r16 = "layout-";

        $i0 = virtualinvoke $r16.<java.lang.String: int length()>();

        $r17 = virtualinvoke r219.<java.lang.String: java.lang.String substring(int)>($i0);

        r220 = staticinvoke <android.databinding.tool.util.ParserHelper: java.lang.String toClassName(java.lang.String)>($r17);

     label66:
        goto label68;

     label67:
        r220 = "";

     label68:
        staticinvoke <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String access$002(android.databinding.tool.store.ResourceBundle$LayoutFileBundle,java.lang.String)>(r218, r220);

        goto label64;

     label69:
        goto label63;

     label70:
        return;

        catch java.lang.Throwable from label27 to label28 with label37;
        catch java.lang.Throwable from label29 to label31 with label37;
        catch java.lang.Throwable from label32 to label36 with label37;
        catch java.lang.Throwable from label37 to label38 with label37;
        catch java.lang.Throwable from label25 to label40 with label41;
        catch java.lang.Throwable from label41 to label42 with label41;
        catch java.lang.Throwable from label51 to label57 with label58;
        catch java.lang.Throwable from label58 to label59 with label58;
    }

    private java.util.Map validateAndMergeNameTypeLocations(java.util.List, java.lang.String, android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback)
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.util.List r1, $r12, $r30;
        java.lang.String r2, $r14, $r15, $r17, $r20, $r22, $r23, $r28, $r32, $r34, $r36, $r37, $r38, r45;
        android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback r3;
        java.util.HashMap r4, $r8;
        java.util.HashSet r5, $r9;
        java.util.Iterator r6, r39, r41, r44, r46;
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r7, r42, r43, r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8;
        java.lang.Object $r10, $r11, $r27, $r29, $r31, $r33;
        java.lang.Object[] $r13;
        java.lang.StringBuilder $r16, $r18, $r19, $r21;
        android.databinding.tool.processing.scopes.ScopeProvider[] $r24;
        android.databinding.tool.store.Location $r25;
        android.databinding.tool.processing.scopes.LocationScopeProvider $r26;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r40, r47;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r4 = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r5 = $r9;

        r39 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r29 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r29;

        $r30 = interfaceinvoke r3.<android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback: java.util.List get(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>(r40);

        r41 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z7 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label04;

        $r31 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (android.databinding.tool.store.ResourceBundle$NameTypeLocation) $r31;

        $r32 = r42.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $r33 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32);

        r43 = (android.databinding.tool.store.ResourceBundle$NameTypeLocation) $r33;

        if r43 == null goto label03;

        $r37 = r43.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        $r36 = r42.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        $z5 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z5 != 0 goto label03;

        $r38 = r42.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r38);

        goto label02;

     label03:
        $r34 = r42.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r42);

        goto label02;

     label04:
        goto label01;

     label05:
        $z1 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        return r4;

     label06:
        r44 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r10 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (java.lang.String) $r10;

        r46 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z8 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label13;

        $r11 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r11;

        r48 = null;

        $r12 = interfaceinvoke r3.<android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback: java.util.List get(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>(r47);

        r6 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r27 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.databinding.tool.store.ResourceBundle$NameTypeLocation) $r27;

        $r28 = r7.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $z4 = virtualinvoke r45.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z4 == 0 goto label10;

        r48 = r7;

        goto label11;

     label10:
        goto label09;

     label11:
        if r48 != null goto label12;

        goto label08;

     label12:
        $r13 = newarray (java.lang.Object)[3];

        $r14 = r48.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $r13[0] = $r14;

        $r15 = r48.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        $r13[1] = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = r47.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r20 = virtualinvoke r47.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13[2] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r13);

        $r24 = newarray (android.databinding.tool.processing.scopes.ScopeProvider)[2];

        $r24[0] = r47;

        $r25 = r48.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        $r26 = virtualinvoke $r25.<android.databinding.tool.store.Location: android.databinding.tool.processing.scopes.LocationScopeProvider createScope()>();

        $r24[1] = $r26;

        staticinvoke <android.databinding.tool.processing.Scope: void registerError(java.lang.String,android.databinding.tool.processing.scopes.ScopeProvider[])>($r23, $r24);

        goto label08;

     label13:
        goto label07;

     label14:
        return r4;
    }

    private java.lang.String validateAndGetSharedClassName(java.util.List)
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.util.List r1;
        java.lang.String r2, $r5, $r7, $r10, $r12, $r13, r17;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r3, $r16;
        java.lang.Object[] $r4;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        android.databinding.tool.processing.scopes.ScopeProvider[] $r14;
        android.databinding.tool.processing.scopes.LocationScopeProvider $r15;
        java.util.Iterator r18, r20;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r19, r21;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        r1 := @parameter0: java.util.List;

        r17 = null;

        z3 = 0;

        r18 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r16 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r16;

        r19.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mHasVariations> = 1;

        r2 = virtualinvoke r19.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFullBindingClass()>();

        if r17 != null goto label2;

        r17 = r2;

        goto label3;

     label2:
        $z2 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        goto label1;

     label4:
        if z3 != 0 goto label5;

        return r17;

     label5:
        r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r3 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r3;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r21.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFullBindingClass()>();

        $r4[0] = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r21.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r10 = virtualinvoke r21.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4[1] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Classname (%s) does not match the class name defined for layout(%s) in other configurations", $r4);

        $r14 = newarray (android.databinding.tool.processing.scopes.ScopeProvider)[2];

        $r14[0] = r21;

        $r15 = virtualinvoke r21.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.processing.scopes.LocationScopeProvider getClassNameLocationProvider()>();

        $r14[1] = $r15;

        staticinvoke <android.databinding.tool.processing.Scope: void registerError(java.lang.String,android.databinding.tool.processing.scopes.ScopeProvider[])>($r13, $r14);

        goto label6;

     label7:
        return r17;
    }

    public void addRemovedFile(java.io.File)
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.io.File r1;
        java.util.List $r2;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle: java.util.List mRemovedFiles>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getRemovedFiles()
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle: java.util.List mRemovedFiles>;

        return $r1;
    }

    private static void lambda$loadClassInfoFromFolder$1(android.databinding.tool.store.GenClassInfoLog, java.util.zip.ZipFile, java.util.zip.ZipEntry)
    {
        android.databinding.tool.store.GenClassInfoLog r0, $r6;
        java.util.zip.ZipFile r1;
        java.util.zip.ZipEntry r2;
        java.lang.Throwable r3, $r7;
        java.lang.String $r4, $r9;
        boolean $z0;
        java.io.InputStream $r5;
        java.lang.Object[] $r8;

        r0 := @parameter0: android.databinding.tool.store.GenClassInfoLog;

        r1 := @parameter1: java.util.zip.ZipFile;

        r2 := @parameter2: java.util.zip.ZipEntry;

        $r4 = virtualinvoke r2.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("-binding_classes.json");

        if $z0 == 0 goto label4;

     label1:
        $r5 = virtualinvoke r1.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r2);

        $r6 = staticinvoke <android.databinding.tool.store.GenClassInfoLog: android.databinding.tool.store.GenClassInfoLog fromInputStream(java.io.InputStream)>($r5);

        virtualinvoke r0.<android.databinding.tool.store.GenClassInfoLog: void addAll(android.databinding.tool.store.GenClassInfoLog)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke r2.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r8[0] = $r9;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r3, "failed to read gen class info log from entry %s", $r8);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void lambda$addDependencyLayouts$0(java.lang.String, android.databinding.tool.store.GenClassInfoLog$GenClass)
    {
        android.databinding.tool.store.ResourceBundle r0;
        java.lang.String r1, $r4, $r6;
        android.databinding.tool.store.GenClassInfoLog$GenClass r2;
        java.util.Map $r3;
        java.lang.Object $r5;

        r0 := @this: android.databinding.tool.store.ResourceBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.databinding.tool.store.GenClassInfoLog$GenClass;

        $r3 = r0.<android.databinding.tool.store.ResourceBundle: java.util.Map mDependencyBinders>;

        $r4 = virtualinvoke r2.<android.databinding.tool.store.GenClassInfoLog$GenClass: java.lang.String getQName()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r6 = (java.lang.String) $r5;

        return;
    }

    static java.lang.String[] access$100()
    {
        java.lang.String[] $r0;

        $r0 = <android.databinding.tool.store.ResourceBundle: java.lang.String[] ANDROID_VIEW_PACKAGE_VIEWS>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "View";

        $r0[1] = "ViewGroup";

        $r0[2] = "ViewStub";

        $r0[3] = "TextureView";

        $r0[4] = "SurfaceView";

        <android.databinding.tool.store.ResourceBundle: java.lang.String[] ANDROID_VIEW_PACKAGE_VIEWS> = $r0;

        return;
    }

android.databinding.tool.store.ResourceBundle$1
<android.databinding.tool.store.ResourceBundle$1: android.databinding.tool.store.ResourceBundle this$0>
    void <init>(android.databinding.tool.store.ResourceBundle)
    {
        android.databinding.tool.store.ResourceBundle$1 r0;
        android.databinding.tool.store.ResourceBundle r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$1;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle;

        r0.<android.databinding.tool.store.ResourceBundle$1: android.databinding.tool.store.ResourceBundle this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List get(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)
    {
        android.databinding.tool.store.ResourceBundle$1 r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r1;
        java.util.List $r2;

        r0 := @this: android.databinding.tool.store.ResourceBundle$1;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r2 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables>;

        return $r2;
    }

android.databinding.tool.store.ResourceBundle$2
<android.databinding.tool.store.ResourceBundle$2: android.databinding.tool.store.ResourceBundle this$0>
    void <init>(android.databinding.tool.store.ResourceBundle)
    {
        android.databinding.tool.store.ResourceBundle$2 r0;
        android.databinding.tool.store.ResourceBundle r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$2;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle;

        r0.<android.databinding.tool.store.ResourceBundle$2: android.databinding.tool.store.ResourceBundle this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List get(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)
    {
        android.databinding.tool.store.ResourceBundle$2 r0;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r1;
        java.util.List $r2;

        r0 := @this: android.databinding.tool.store.ResourceBundle$2;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r2 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports>;

        return $r2;
    }

android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String mName>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String mExpr>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location mLocation>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location mValueLocation>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: boolean mIsTwoWay>
    public void <init>()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean, android.databinding.tool.store.Location, android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        java.lang.String r1, r2;
        boolean z0;
        android.databinding.tool.store.Location r3, r4;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.databinding.tool.store.Location;

        r4 := @parameter4: android.databinding.tool.store.Location;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String mName> = r1;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String mExpr> = r2;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location mLocation> = r3;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: boolean mIsTwoWay> = z0;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location mValueLocation> = r4;

        return;
    }

    public java.lang.String getName()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String mName>;

        return $r1;
    }

    public java.lang.String getExpr()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String mExpr>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        java.lang.String r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        r1 := @parameter0: java.lang.String;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String mName> = r1;

        return;
    }

    public void setExpr(java.lang.String)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        java.lang.String r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        r1 := @parameter0: java.lang.String;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: java.lang.String mExpr> = r1;

        return;
    }

    public void setTwoWay(boolean)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        boolean z0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        z0 := @parameter0: boolean;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: boolean mIsTwoWay> = z0;

        return;
    }

    public android.databinding.tool.store.Location getLocation()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        android.databinding.tool.store.Location $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location mLocation>;

        return $r1;
    }

    public void setLocation(android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        android.databinding.tool.store.Location r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        r1 := @parameter0: android.databinding.tool.store.Location;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location mLocation> = r1;

        return;
    }

    public android.databinding.tool.store.Location getValueLocation()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        android.databinding.tool.store.Location $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location mValueLocation>;

        return $r1;
    }

    public boolean isTwoWay()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        $z0 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: boolean mIsTwoWay>;

        return $z0;
    }

    public void setValueLocation(android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle r0;
        android.databinding.tool.store.Location r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        r1 := @parameter0: android.databinding.tool.store.Location;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: android.databinding.tool.store.Location mValueLocation> = r1;

        return;
    }

android.databinding.tool.store.ResourceBundle$BindingTargetBundle
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mTag>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mOriginalTag>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean mUsed>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.util.List mBindingBundleList>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mIncludedLayout>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: android.databinding.tool.store.Location mLocation>
<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mInterfaceType>
    public void <init>()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.util.ArrayList $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean mUsed> = 1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.util.List mBindingBundleList> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String r1, r2, r3, r4;
        boolean z0;
        android.databinding.tool.store.Location r5;
        java.util.ArrayList $r6;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.databinding.tool.store.Location;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean mUsed> = 1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.util.List mBindingBundleList> = $r6;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId> = r1;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName> = r2;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean mUsed> = z0;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mTag> = r3;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mOriginalTag> = r4;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: android.databinding.tool.store.Location mLocation> = r5;

        return;
    }

    public void addBinding(java.lang.String, java.lang.String, boolean, android.databinding.tool.store.Location, android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String r1, r2;
        boolean z0;
        android.databinding.tool.store.Location r3, r4;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle $r5;
        java.util.List $r6;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.databinding.tool.store.Location;

        r4 := @parameter4: android.databinding.tool.store.Location;

        $r6 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.util.List mBindingBundleList>;

        $r5 = new android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle;

        specialinvoke $r5.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle$BindingBundle: void <init>(java.lang.String,java.lang.String,boolean,android.databinding.tool.store.Location,android.databinding.tool.store.Location)>(r1, r2, z0, r3, r4);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    public void setIncludedLayout(java.lang.String)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        r1 := @parameter0: java.lang.String;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mIncludedLayout> = r1;

        return;
    }

    public java.lang.String getIncludedLayout()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mIncludedLayout>;

        return $r1;
    }

    public boolean isBinder()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mIncludedLayout>;

        if $r1 == null goto label2;

        $r3 = "android.view.View";

        $r2 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mInterfaceType>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r5 = "android.view.View";

        $r4 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void setInterfaceType(java.lang.String)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        r1 := @parameter0: java.lang.String;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mInterfaceType> = r1;

        return;
    }

    public void setLocation(android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        android.databinding.tool.store.Location r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        r1 := @parameter0: android.databinding.tool.store.Location;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: android.databinding.tool.store.Location mLocation> = r1;

        return;
    }

    public android.databinding.tool.store.Location getLocation()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        android.databinding.tool.store.Location $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: android.databinding.tool.store.Location mLocation>;

        return $r1;
    }

    public java.lang.String getId()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        return $r1;
    }

    public java.lang.String getTag()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mTag>;

        return $r1;
    }

    public java.lang.String getOriginalTag()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mOriginalTag>;

        return $r1;
    }

    public java.lang.String getFullClassName()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r16, $r18, $r21, $r23, $r26, $r28, $r29, $r30;
        java.lang.Object[] $r3;
        boolean $z0, $z1, $z2;
        int $i0;
        java.lang.String[] $r9;
        java.util.List $r10;
        java.lang.StringBuilder $r14, $r15, $r17, $r19, $r20, $r22, $r24, $r25, $r27;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName>;

        if $r1 != null goto label5;

        $z0 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean isBinder()>();

        if $z0 == 0 goto label1;

        $r29 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mInterfaceType>;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName> = $r29;

        goto label5;

     label1:
        $r7 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(46);

        if $i0 != -1 goto label4;

        $r9 = staticinvoke <android.databinding.tool.store.ResourceBundle: java.lang.String[] access$100()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $r11 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        $z1 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>($r11);

        if $z1 == 0 goto label2;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.view.");

        $r26 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName> = $r28;

        goto label5;

     label2:
        $r13 = "WebView";

        $r12 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label3;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.webkit.");

        $r21 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName> = $r23;

        goto label5;

     label3:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.widget.");

        $r16 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName> = $r18;

        goto label5;

     label4:
        $r8 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName> = $r8;

     label5:
        $r30 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName>;

        if $r30 != null goto label6;

        $r3 = newarray (java.lang.Object)[3];

        $r4 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mViewName>;

        $r3[0] = $r4;

        $r5 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mInterfaceType>;

        $r3[1] = $r5;

        $r6 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mIncludedLayout>;

        $r3[2] = $r6;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("Unexpected full class name = null. view = %s, interface = %s, layout = %s", $r3);

     label6:
        $r2 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mFullClassName>;

        return $r2;
    }

    public boolean isUsed()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $z0 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean mUsed>;

        return $z0;
    }

    public java.util.List getBindingBundleList()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.util.List mBindingBundleList>;

        return $r1;
    }

    public java.lang.String getInterfaceType()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mInterfaceType>;

        return $r1;
    }

    public java.util.List provideScopeLocation()
    {
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r0;
        android.databinding.tool.store.Location $r1, $r3;
        android.databinding.tool.store.Location[] $r2;
        java.util.List $r4;

        r0 := @this: android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: android.databinding.tool.store.Location mLocation>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = newarray (android.databinding.tool.store.Location)[1];

        $r3 = r0.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: android.databinding.tool.store.Location mLocation>;

        $r2[0] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

     label2:
        return $r4;
    }

android.databinding.tool.store.ResourceBundle$LayoutFileBundle
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mModulePackage>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mAbsoluteFilePath>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.Location mClassNameLocation>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClassName>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingPackage>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mHasVariations>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mIsMerge>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.processing.scopes.LocationScopeProvider mClassNameLocationProvider>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Marshaller sMarshaller>
<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Unmarshaller sUnmarshaller>
    public void <init>()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles> = $r3;

        return;
    }

    public void inheritConfigurationFrom(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0, r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r2 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName> = $r2;

        $r3 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mModulePackage>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mModulePackage> = $r3;

        $r4 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass> = $r4;

        $r5 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass> = $r5;

        $r6 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClassName>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClassName> = $r6;

        $r7 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingPackage>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingPackage> = $r7;

        $z0 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mHasVariations>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mHasVariations> = $z0;

        $z1 = r1.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mIsMerge>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mIsMerge> = $z1;

        return;
    }

    public void <init>(java.io.File, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.io.File r1;
        java.lang.String r2, r3, r4, $r8;
        boolean z0;
        java.util.ArrayList $r5, $r6, $r7;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles> = $r7;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName> = r2;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory> = r3;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mModulePackage> = r4;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mIsMerge> = z0;

        $r8 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mAbsoluteFilePath> = $r8;

        return;
    }

    public android.databinding.tool.processing.scopes.LocationScopeProvider getClassNameLocationProvider()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        android.databinding.tool.processing.scopes.LocationScopeProvider $r1, $r5, $r6;
        android.databinding.tool.store.Location $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.processing.scopes.LocationScopeProvider mClassNameLocationProvider>;

        if $r1 != null goto label1;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.Location mClassNameLocation>;

        if $r2 == null goto label1;

        $r3 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.Location mClassNameLocation>;

        $z0 = virtualinvoke $r3.<android.databinding.tool.store.Location: boolean isValid()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.Location mClassNameLocation>;

        $r5 = virtualinvoke $r4.<android.databinding.tool.store.Location: android.databinding.tool.processing.scopes.LocationScopeProvider createScope()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.processing.scopes.LocationScopeProvider mClassNameLocationProvider> = $r5;

     label1:
        $r6 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.processing.scopes.LocationScopeProvider mClassNameLocationProvider>;

        return $r6;
    }

    public void addVariable(java.lang.String, java.lang.String, android.databinding.tool.store.Location, boolean)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String r1, r2;
        android.databinding.tool.store.Location r3;
        boolean z0, $z1, $z3;
        java.util.List $r4, $r7;
        java.lang.Object[] $r5;
        android.databinding.tool.store.ResourceBundle$VariableDeclaration $r6;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.databinding.tool.store.Location;

        z0 := @parameter3: boolean;

        $r4 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables>;

        $z1 = staticinvoke <android.databinding.tool.store.ResourceBundle$NameTypeLocation: boolean contains(java.util.List,java.lang.String)>($r4, r1);

        if $z1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = r3;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z3, "Cannot use same variable name twice. %s in %s", $r5);

        $r7 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables>;

        $r6 = new android.databinding.tool.store.ResourceBundle$VariableDeclaration;

        specialinvoke $r6.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: void <init>(java.lang.String,java.lang.String,android.databinding.tool.store.Location,boolean)>(r1, r2, r3, z0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    public void addImport(java.lang.String, java.lang.String, android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String r1, r2;
        android.databinding.tool.store.Location r3;
        java.util.List $r4, $r7;
        boolean $z0, $z2;
        java.lang.Object[] $r5;
        android.databinding.tool.store.ResourceBundle$NameTypeLocation $r6;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.databinding.tool.store.Location;

        $r4 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports>;

        $z0 = staticinvoke <android.databinding.tool.store.ResourceBundle$NameTypeLocation: boolean contains(java.util.List,java.lang.String)>($r4, r1);

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = r3;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z2, "Cannot import same alias twice. %s in %s", $r5);

        $r7 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports>;

        $r6 = new android.databinding.tool.store.ResourceBundle$NameTypeLocation;

        specialinvoke $r6.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: void <init>(java.lang.String,java.lang.String,android.databinding.tool.store.Location)>(r1, r2, r3);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    public android.databinding.tool.store.ResourceBundle$BindingTargetBundle createBindingTarget(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String r1, r2, r3, r4;
        boolean z0;
        android.databinding.tool.store.Location r5;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r6, $r7;
        java.util.List $r8;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.databinding.tool.store.Location;

        $r7 = new android.databinding.tool.store.ResourceBundle$BindingTargetBundle;

        specialinvoke $r7.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: void <init>(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,android.databinding.tool.store.Location)>(r1, r2, z0, r3, r4, r5);

        r6 = $r7;

        $r8 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r6);

        return r6;
    }

    public boolean isEmpty()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.util.List $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles>;

        $z2 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public android.databinding.tool.store.ResourceBundle$BindingTargetBundle getBindingTargetById(java.lang.String)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) $r5;

        $r6 = r3.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String mId>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    public java.lang.String getFileName()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        return $r1;
    }

    public java.lang.String getConfigName()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        return $r1;
    }

    public java.lang.String getDirectory()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        return $r1;
    }

    public boolean hasVariations()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $z0 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mHasVariations>;

        return $z0;
    }

    public java.util.List getVariables()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mVariables>;

        return $r1;
    }

    public java.util.List getImports()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mImports>;

        return $r1;
    }

    public boolean isMerge()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        boolean $z0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $z0 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mIsMerge>;

        return $z0;
    }

    public java.lang.String getBindingClassName()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String r1, $r2, $r3, $r4;
        int i0, $i1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClassName>;

        if $r2 != null goto label1;

        r1 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFullBindingClass()>();

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = i0 + 1;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClassName> = $r4;

     label1:
        $r3 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClassName>;

        return $r3;
    }

    public void setBindingClass(java.lang.String, android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String r1;
        android.databinding.tool.store.Location r2;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.databinding.tool.store.Location;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass> = r1;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.Location mClassNameLocation> = r2;

        return;
    }

    public java.lang.String getBindingClassPackage()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String r1, $r2, $r3, $r4;
        int i0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingPackage>;

        if $r2 != null goto label1;

        r1 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFullBindingClass()>();

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingPackage> = $r4;

     label1:
        $r3 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingPackage>;

        return $r3;
    }

    public java.lang.String getFullBindingClass()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r7, $r10, $r12, $r14, $r16, $r18, $r20, $r23, $r24, $r27, $r28;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r25, $r26;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass>;

        if $r1 != null goto label4;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass>;

        if $r2 != null goto label1;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getModulePackage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".databinding.");

        $r23 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        $r24 = staticinvoke <android.databinding.tool.util.ParserHelper: java.lang.String toClassName(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass> = $r27;

        goto label4;

     label1:
        $r3 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getModulePackage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass> = $r18;

        goto label4;

     label2:
        $r4 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass>;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(46);

        if $i0 >= 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getModulePackage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".databinding.");

        $r10 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass> = $r12;

        goto label4;

     label3:
        $r5 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mBindingClass>;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass> = $r5;

     label4:
        $r28 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFullBindingClass>;

        return $r28;
    }

    public java.lang.String createImplClassNameWithConfig()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r6;
        java.lang.String $r2, $r4, $r7;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getConfigName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Impl");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.util.List getBindingTargetBundles()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List mBindingTargetBundles>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 == null goto label02;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label03;

     label02:
        return 0;

     label03:
        r2 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) r1;

        $r5 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        if $r5 == null goto label04;

        $r16 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        $r15 = r2.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 != 0 goto label06;

        goto label05;

     label04:
        $r6 = r2.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        if $r6 == null goto label06;

     label05:
        return 0;

     label06:
        $r7 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        if $r7 == null goto label07;

        $r14 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        $r13 = r2.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label09;

        goto label08;

     label07:
        $r8 = r2.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        if $r8 == null goto label09;

     label08:
        return 0;

     label09:
        $r9 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        if $r9 == null goto label10;

        $r12 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $r11 = r2.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label11;

        goto label12;

     label10:
        $r10 = r2.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        if $r10 != null goto label12;

     label11:
        $z3 = 1;

        goto label13;

     label12:
        $z3 = 0;

     label13:
        return $z3;
    }

    public int hashCode()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, i7;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        if $r1 == null goto label1;

        $r6 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $i2 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        i3 = $i2;

        $i0 = 31 * i3;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        if $r2 == null goto label3;

        $r5 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        $i4 = virtualinvoke $r5.<java.lang.String: int hashCode()>();

        goto label4;

     label3:
        $i4 = 0;

     label4:
        i5 = $i0 + $i4;

        $i1 = 31 * i5;

        $r3 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        if $r3 == null goto label5;

        $r4 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        $i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        goto label6;

     label5:
        $i6 = 0;

     label6:
        i7 = $i1 + $i6;

        return i7;
    }

    public java.lang.String toString()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20;
        boolean $z0;
        java.lang.String $r5, $r9, $r13, $r17, $r21;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LayoutFileBundle{mHasVariations=");

        $z0 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: boolean mHasVariations>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDirectory=\'");

        $r5 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mDirectory>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mConfigName=\'");

        $r9 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mModulePackage=\'");

        $r13 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mModulePackage>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mFileName=\'");

        $r17 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    public java.lang.String getModulePackage()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mModulePackage>;

        return $r1;
    }

    public java.lang.String getAbsoluteFilePath()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mAbsoluteFilePath>;

        return $r1;
    }

    public java.lang.String provideScopeFilePath()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mAbsoluteFilePath>;

        return $r1;
    }

    public java.lang.String toXML() throws javax.xml.bind.JAXBException
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.io.StringWriter r1, $r4;
        javax.xml.bind.Marshaller r2, $r5, $r6;
        java.lang.Throwable r3, $r9;
        java.lang.StringBuffer $r7;
        java.lang.String $r8;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r4 = new java.io.StringWriter;

        specialinvoke $r4.<java.io.StringWriter: void <init>()>();

        r1 = $r4;

        $r5 = <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Marshaller sMarshaller>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Marshaller sMarshaller>;

        interfaceinvoke $r6.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,java.io.Writer)>(r0, r1);

        $r7 = virtualinvoke r1.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor r2;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.databinding.tool.store.ResourceBundle$LayoutFileBundle fromXML(java.io.InputStream) throws javax.xml.bind.JAXBException
    {
        java.io.InputStream r0;
        javax.xml.bind.Unmarshaller r1, $r3, $r4;
        java.lang.Throwable r2, $r7;
        java.lang.Object $r5;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r6;

        r0 := @parameter0: java.io.InputStream;

        $r3 = <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Unmarshaller sUnmarshaller>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Unmarshaller sUnmarshaller>;

        $r5 = interfaceinvoke $r4.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>(r0);

        $r6 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r5;

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String createTag()
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r0 := @this: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getDirectory()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static java.lang.String access$000(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String $r1;

        r0 := @parameter0: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName>;

        return $r1;
    }

    static java.lang.String access$002(android.databinding.tool.store.ResourceBundle$LayoutFileBundle, java.lang.String)
    {
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r0;
        java.lang.String r1;

        r0 := @parameter0: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        r1 := @parameter1: java.lang.String;

        r0.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mConfigName> = r1;

        return r1;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        javax.xml.bind.Marshaller $r1, $r2;
        javax.xml.bind.Unmarshaller $r3;
        java.lang.Throwable $r4, r7, r9;
        javax.xml.bind.JAXBContext r6;
        java.lang.RuntimeException r8;

     label1:
        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Landroid/databinding/tool/store/ResourceBundle$LayoutFileBundle;";

        r6 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r0);

        $r1 = virtualinvoke r6.<javax.xml.bind.JAXBContext: javax.xml.bind.Marshaller createMarshaller()>();

        <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Marshaller sMarshaller> = $r1;

        $r2 = <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Marshaller sMarshaller>;

        interfaceinvoke $r2.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.encoding", "utf-8");

        $r3 = virtualinvoke r6.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: javax.xml.bind.Unmarshaller sUnmarshaller> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r7 = $r4;

        r8 = new java.lang.RuntimeException;

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot create the xml marshaller", r7);

        r9 = (java.lang.Throwable) r8;

        throw r9;

     label4:
        return;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

android.databinding.tool.store.ResourceBundle$MarshalledMapType
<android.databinding.tool.store.ResourceBundle$MarshalledMapType: java.util.List entries>
    public void <init>()
    {
        android.databinding.tool.store.ResourceBundle$MarshalledMapType r0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$MarshalledMapType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.databinding.tool.store.ResourceBundle$NameTypeLocation
<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>
<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>
<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>
    public void <init>()
    {
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$NameTypeLocation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, android.databinding.tool.store.Location)
    {
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r0;
        java.lang.String r1, r2;
        android.databinding.tool.store.Location r3;

        r0 := @this: android.databinding.tool.store.ResourceBundle$NameTypeLocation;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.databinding.tool.store.Location;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type> = r2;

        r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name> = r1;

        r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location> = r3;

        return;
    }

    public java.lang.String toString()
    {
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13;
        java.lang.String $r3, $r7, $r14;
        android.databinding.tool.store.Location $r11;

        r0 := @this: android.databinding.tool.store.ResourceBundle$NameTypeLocation;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{type=\'");

        $r3 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=\'");

        $r7 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", location=");

        $r11 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public boolean equals(java.lang.Object)
    {
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        android.databinding.tool.store.Location $r5, $r6, $r11, $r12;
        java.lang.String $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: android.databinding.tool.store.ResourceBundle$NameTypeLocation;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (android.databinding.tool.store.ResourceBundle$NameTypeLocation) r1;

        $r5 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        if $r5 == null goto label4;

        $r12 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        $r11 = r2.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        $z2 = virtualinvoke $r12.<android.databinding.tool.store.Location: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label6;

        goto label5;

     label4:
        $r6 = r2.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        if $r6 == null goto label6;

     label5:
        return 0;

     label6:
        $r8 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $r7 = r2.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        $r10 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        $r9 = r2.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        return $z1;
    }

    public int hashCode()
    {
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2, i3, i4, $i5, i6;
        android.databinding.tool.store.Location $r3, $r4;

        r0 := @this: android.databinding.tool.store.ResourceBundle$NameTypeLocation;

        $r1 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String type>;

        i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = 31 * i3;

        $r2 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        i4 = $i0 + $i1;

        $i2 = 31 * i4;

        $r3 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        if $r3 == null goto label1;

        $r4 = r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: android.databinding.tool.store.Location location>;

        $i5 = virtualinvoke $r4.<android.databinding.tool.store.Location: int hashCode()>();

        goto label2;

     label1:
        $i5 = 0;

     label2:
        i6 = $i2 + $i5;

        return i6;
    }

    public static boolean contains(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1, $r5;
        java.util.Iterator r2;
        android.databinding.tool.store.ResourceBundle$NameTypeLocation r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.store.ResourceBundle$NameTypeLocation) $r4;

        $r5 = r3.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: java.lang.String name>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback
<android.databinding.tool.store.ResourceBundle$ValidateAndFilterCallback: java.util.List get(android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>
android.databinding.tool.store.ResourceBundle$VariableDeclaration
<android.databinding.tool.store.ResourceBundle$VariableDeclaration: boolean declared>
    public void <init>()
    {
        android.databinding.tool.store.ResourceBundle$VariableDeclaration r0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$VariableDeclaration;

        specialinvoke r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, android.databinding.tool.store.Location, boolean)
    {
        android.databinding.tool.store.ResourceBundle$VariableDeclaration r0;
        java.lang.String r1, r2;
        android.databinding.tool.store.Location r3;
        boolean z0;

        r0 := @this: android.databinding.tool.store.ResourceBundle$VariableDeclaration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.databinding.tool.store.Location;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.databinding.tool.store.ResourceBundle$NameTypeLocation: void <init>(java.lang.String,java.lang.String,android.databinding.tool.store.Location)>(r1, r2, r3);

        r0.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: boolean declared> = z0;

        return;
    }

