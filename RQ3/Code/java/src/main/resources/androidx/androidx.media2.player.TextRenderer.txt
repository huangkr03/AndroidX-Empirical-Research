androidx.media2.player.TextRenderer
<androidx.media2.player.TextRenderer: int TRACK_TYPE_CEA608>
<androidx.media2.player.TextRenderer: int TRACK_TYPE_CEA708>
<androidx.media2.player.TextRenderer: int TRACK_TYPE_WEBVTT>
<androidx.media2.player.TextRenderer: int TRACK_TYPE_UNSET>
<androidx.media2.player.TextRenderer: int READ_AHEAD_THRESHOLD_US>
<androidx.media2.player.TextRenderer: int PACKET_LENGTH>
<androidx.media2.player.TextRenderer: int CHANNEL_UNSET>
<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$Output mOutput>
<androidx.media2.player.TextRenderer: android.os.Handler mHandler>
<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mCcData>
<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>
<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.FormatHolder mFormatHolder>
<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>
<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mLine21DataBuilder>
<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>
<androidx.media2.player.TextRenderer: int[] mLine21Channels>
<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>
<androidx.media2.player.TextRenderer: boolean mHasPendingInputBuffer>
<androidx.media2.player.TextRenderer: boolean mInputStreamEnded>
<androidx.media2.player.TextRenderer: boolean[] mIsTypeAndChannelAdvertised>
<androidx.media2.player.TextRenderer: int mSelectedType>
<androidx.media2.player.TextRenderer: int mSelectedChannel>
    void <init>(androidx.media2.player.TextRenderer$Output)
    {
        androidx.media2.player.TextRenderer r0;
        androidx.media2.player.TextRenderer$Output r1;
        android.os.Handler $r2;
        android.os.Looper $r3;
        androidx.media2.exoplayer.external.util.ParsableByteArray $r4, $r11;
        java.util.TreeMap $r5;
        androidx.media2.exoplayer.external.FormatHolder $r6;
        androidx.media2.exoplayer.external.text.SubtitleInputBuffer $r7;
        androidx.media2.player.TextRenderer$DataBuilder $r8, $r9;
        int[] $r10;

        r0 := @this: androidx.media2.player.TextRenderer;

        r1 := @parameter0: androidx.media2.player.TextRenderer$Output;

        specialinvoke r0.<androidx.media2.exoplayer.external.BaseRenderer: void <init>(int)>(3);

        r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$Output mOutput> = r1;

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        r0.<androidx.media2.player.TextRenderer: android.os.Handler mHandler> = $r2;

        $r4 = new androidx.media2.exoplayer.external.util.ParsableByteArray;

        specialinvoke $r4.<androidx.media2.exoplayer.external.util.ParsableByteArray: void <init>()>();

        r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mCcData> = $r4;

        $r5 = new java.util.TreeMap;

        specialinvoke $r5.<java.util.TreeMap: void <init>()>();

        r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap> = $r5;

        $r6 = new androidx.media2.exoplayer.external.FormatHolder;

        specialinvoke $r6.<androidx.media2.exoplayer.external.FormatHolder: void <init>()>();

        r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.FormatHolder mFormatHolder> = $r6;

        $r7 = new androidx.media2.exoplayer.external.text.SubtitleInputBuffer;

        specialinvoke $r7.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: void <init>()>();

        r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer> = $r7;

        $r8 = new androidx.media2.player.TextRenderer$DataBuilder;

        specialinvoke $r8.<androidx.media2.player.TextRenderer$DataBuilder: void <init>()>();

        r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mLine21DataBuilder> = $r8;

        $r9 = new androidx.media2.player.TextRenderer$DataBuilder;

        specialinvoke $r9.<androidx.media2.player.TextRenderer$DataBuilder: void <init>()>();

        r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder> = $r9;

        $r10 = newarray (int)[2];

        r0.<androidx.media2.player.TextRenderer: int[] mLine21Channels> = $r10;

        $r11 = new androidx.media2.exoplayer.external.util.ParsableByteArray;

        specialinvoke $r11.<androidx.media2.exoplayer.external.util.ParsableByteArray: void <init>()>();

        r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch> = $r11;

        r0.<androidx.media2.player.TextRenderer: int mSelectedType> = -1;

        r0.<androidx.media2.player.TextRenderer: int mSelectedChannel> = -1;

        return;
    }

    public int supportsFormat(androidx.media2.exoplayer.external.Format)
    {
        androidx.media2.player.TextRenderer r0;
        androidx.media2.exoplayer.external.Format r1;
        java.lang.String r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media2.player.TextRenderer;

        r1 := @parameter0: androidx.media2.exoplayer.external.Format;

        r2 = r1.<androidx.media2.exoplayer.external.Format: java.lang.String sampleMimeType>;

        $r3 = "application/cea-608";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r4 = "application/cea-708";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $r5 = "text/vtt";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

     label1:
        return 4;

     label2:
        return 0;
    }

    protected void onStreamChanged(androidx.media2.exoplayer.external.Format[], long) throws androidx.media2.exoplayer.external.ExoPlaybackException
    {
        androidx.media2.player.TextRenderer r0;
        androidx.media2.exoplayer.external.Format[] r1;
        long l0;
        boolean[] $r2;

        r0 := @this: androidx.media2.player.TextRenderer;

        r1 := @parameter0: androidx.media2.exoplayer.external.Format[];

        l0 := @parameter1: long;

        specialinvoke r0.<androidx.media2.exoplayer.external.BaseRenderer: void onStreamChanged(androidx.media2.exoplayer.external.Format[],long)>(r1, l0);

        $r2 = newarray (boolean)[128];

        r0.<androidx.media2.player.TextRenderer: boolean[] mIsTypeAndChannelAdvertised> = $r2;

        return;
    }

    protected synchronized void onPositionReset(long, boolean)
    {
        androidx.media2.player.TextRenderer r0;
        long l0;
        boolean z0;

        r0 := @this: androidx.media2.player.TextRenderer;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media2.player.TextRenderer: void flush()>();

        return;
    }

    public synchronized void render(long, long)
    {
        androidx.media2.player.TextRenderer r0;
        long l0, l1, $l5, $l6, $l10, $l15, $l22;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte b2, $b7, $b14, $b17, $b18, $b21, b25, b26, b27, b28, b29, $b30, $b31;
        int i3, $i4, $i8, $i9, $i11, $i12, $i13, $i16, $i19, $i20, i23, $i24, $i32;
        androidx.media2.exoplayer.external.text.SubtitleInputBuffer $r1, $r2, $r6, $r10, $r16, $r24, $r26, $r27, $r29, $r30;
        java.nio.ByteBuffer $r3, $r7;
        androidx.media2.exoplayer.external.util.ParsableByteArray $r4, $r12, $r13, $r14, $r31;
        byte[] $r5;
        androidx.media2.player.TextRenderer$DataBuilder $r8, $r9, $r11, $r15, $r17, $r18, $r20, $r21, $r22, $r23, $r25;
        int[] $r19, $r32;
        androidx.media2.exoplayer.external.FormatHolder $r28;

        r0 := @this: androidx.media2.player.TextRenderer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i4 = virtualinvoke r0.<androidx.media2.player.TextRenderer: int getState()>();

        if $i4 == 2 goto label01;

        return;

     label01:
        specialinvoke r0.<androidx.media2.player.TextRenderer: void display(long)>(l0);

        $z1 = r0.<androidx.media2.player.TextRenderer: boolean mHasPendingInputBuffer>;

        if $z1 != 0 goto label05;

        $r26 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        virtualinvoke $r26.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: void clear()>();

        $r28 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.FormatHolder mFormatHolder>;

        $r27 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        i23 = virtualinvoke r0.<androidx.media2.player.TextRenderer: int readSource(androidx.media2.exoplayer.external.FormatHolder,androidx.media2.exoplayer.external.decoder.DecoderInputBuffer,boolean)>($r28, $r27, 0);

        if i23 == -3 goto label02;

        if i23 != -5 goto label03;

     label02:
        return;

     label03:
        $r29 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        $z5 = virtualinvoke $r29.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: boolean isEndOfStream()>();

        if $z5 == 0 goto label04;

        r0.<androidx.media2.player.TextRenderer: boolean mInputStreamEnded> = 1;

        return;

     label04:
        r0.<androidx.media2.player.TextRenderer: boolean mHasPendingInputBuffer> = 1;

        $r30 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        virtualinvoke $r30.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: void flip()>();

     label05:
        $r1 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        $l5 = $r1.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: long timeUs>;

        $l6 = $l5 - l0;

        $b7 = $l6 cmp 110000L;

        if $b7 <= 0 goto label06;

        return;

     label06:
        r0.<androidx.media2.player.TextRenderer: boolean mHasPendingInputBuffer> = 0;

        $r4 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mCcData>;

        $r2 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        $r3 = $r2.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: java.nio.ByteBuffer data>;

        $r5 = virtualinvoke $r3.<java.nio.ByteBuffer: byte[] array()>();

        $r6 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        $r7 = $r6.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: java.nio.ByteBuffer data>;

        $i8 = virtualinvoke $r7.<java.nio.ByteBuffer: int limit()>();

        virtualinvoke $r4.<androidx.media2.exoplayer.external.util.ParsableByteArray: void reset(byte[],int)>($r5, $i8);

        $r8 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mLine21DataBuilder>;

        virtualinvoke $r8.<androidx.media2.player.TextRenderer$DataBuilder: void clear()>();

     label07:
        $r31 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mCcData>;

        $i24 = virtualinvoke $r31.<androidx.media2.exoplayer.external.util.ParsableByteArray: int bytesLeft()>();

        if $i24 < 3 goto label23;

        $r12 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mCcData>;

        $i11 = virtualinvoke $r12.<androidx.media2.exoplayer.external.util.ParsableByteArray: int readUnsignedByte()>();

        b25 = (byte) $i11;

        $r13 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mCcData>;

        $i12 = virtualinvoke $r13.<androidx.media2.exoplayer.external.util.ParsableByteArray: int readUnsignedByte()>();

        b26 = (byte) $i12;

        $r14 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mCcData>;

        $i13 = virtualinvoke $r14.<androidx.media2.exoplayer.external.util.ParsableByteArray: int readUnsignedByte()>();

        b27 = (byte) $i13;

        $b14 = b25 & 4;

        if $b14 == 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        z0 = $z6;

        b2 = b25 & 3;

        if z0 == 0 goto label20;

        if b2 != 3 goto label11;

        $r22 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>;

        $z4 = virtualinvoke $r22.<androidx.media2.player.TextRenderer$DataBuilder: boolean hasData()>();

        if $z4 == 0 goto label10;

        $r25 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>;

        $r24 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        $l22 = $r24.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: long timeUs>;

        specialinvoke r0.<androidx.media2.player.TextRenderer: void handleDtvPacket(androidx.media2.player.TextRenderer$DataBuilder,long)>($r25, $l22);

     label10:
        $r23 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>;

        virtualinvoke $r23.<androidx.media2.player.TextRenderer$DataBuilder: void append(byte,byte)>(b26, b27);

        goto label22;

     label11:
        $r18 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>;

        $i16 = $r18.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        if $i16 <= 0 goto label12;

        if b2 != 2 goto label12;

        $r21 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>;

        virtualinvoke $r21.<androidx.media2.player.TextRenderer$DataBuilder: void append(byte,byte)>(b26, b27);

        goto label22;

     label12:
        if b2 == 0 goto label13;

        if b2 != 1 goto label22;

     label13:
        $b17 = b26 & 127;

        b28 = (byte) $b17;

        $b18 = b27 & 127;

        b29 = (byte) $b18;

        if b28 >= 16 goto label14;

        if b29 >= 16 goto label14;

        goto label07;

     label14:
        if b28 < 16 goto label19;

        if b28 > 31 goto label19;

        if b28 < 24 goto label15;

        $b30 = 1;

        goto label16;

     label15:
        $b30 = 0;

     label16:
        if b25 == 0 goto label17;

        $b31 = 2;

        goto label18;

     label17:
        $b31 = 0;

     label18:
        i3 = $b30 + $b31;

        $r32 = r0.<androidx.media2.player.TextRenderer: int[] mLine21Channels>;

        $r32[b2] = i3;

        specialinvoke r0.<androidx.media2.player.TextRenderer: void maybeAdvertiseChannel(int,int)>(0, i3);

     label19:
        $i32 = r0.<androidx.media2.player.TextRenderer: int mSelectedType>;

        if $i32 != 0 goto label22;

        $i20 = r0.<androidx.media2.player.TextRenderer: int mSelectedChannel>;

        $r19 = r0.<androidx.media2.player.TextRenderer: int[] mLine21Channels>;

        $i19 = $r19[b2];

        if $i20 != $i19 goto label22;

        $r20 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mLine21DataBuilder>;

        $b21 = (byte) b2;

        virtualinvoke $r20.<androidx.media2.player.TextRenderer$DataBuilder: void append(byte,byte,byte)>($b21, b28, b29);

        goto label22;

     label20:
        if b2 == 3 goto label21;

        if b2 != 2 goto label22;

     label21:
        $r15 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>;

        $z3 = virtualinvoke $r15.<androidx.media2.player.TextRenderer$DataBuilder: boolean hasData()>();

        if $z3 == 0 goto label22;

        $r17 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>;

        $r16 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        $l15 = $r16.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: long timeUs>;

        specialinvoke r0.<androidx.media2.player.TextRenderer: void handleDtvPacket(androidx.media2.player.TextRenderer$DataBuilder,long)>($r17, $l15);

     label22:
        goto label07;

     label23:
        $i9 = r0.<androidx.media2.player.TextRenderer: int mSelectedType>;

        if $i9 != 0 goto label24;

        $r9 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mLine21DataBuilder>;

        $z2 = virtualinvoke $r9.<androidx.media2.player.TextRenderer$DataBuilder: boolean hasData()>();

        if $z2 == 0 goto label24;

        $r11 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mLine21DataBuilder>;

        $r10 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer mInputBuffer>;

        $l10 = $r10.<androidx.media2.exoplayer.external.text.SubtitleInputBuffer: long timeUs>;

        specialinvoke r0.<androidx.media2.player.TextRenderer: void handleLine21Packet(androidx.media2.player.TextRenderer$DataBuilder,long)>($r11, $l10);

     label24:
        return;
    }

    public boolean isEnded()
    {
        androidx.media2.player.TextRenderer r0;
        boolean $z0, $z1, $z2;
        java.util.SortedMap $r1;

        r0 := @this: androidx.media2.player.TextRenderer;

        $z0 = r0.<androidx.media2.player.TextRenderer: boolean mInputStreamEnded>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        $z1 = interfaceinvoke $r1.<java.util.SortedMap: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isReady()
    {
        androidx.media2.player.TextRenderer r0;

        r0 := @this: androidx.media2.player.TextRenderer;

        return 1;
    }

    public synchronized void clearSelection()
    {
        androidx.media2.player.TextRenderer r0;

        r0 := @this: androidx.media2.player.TextRenderer;

        virtualinvoke r0.<androidx.media2.player.TextRenderer: void select(int,int)>(-1, -1);

        return;
    }

    public synchronized void select(int, int)
    {
        androidx.media2.player.TextRenderer r0;
        int i0, i1;

        r0 := @this: androidx.media2.player.TextRenderer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<androidx.media2.player.TextRenderer: int mSelectedType> = i0;

        r0.<androidx.media2.player.TextRenderer: int mSelectedChannel> = i1;

        specialinvoke r0.<androidx.media2.player.TextRenderer: void flush()>();

        return;
    }

    private void flush()
    {
        androidx.media2.player.TextRenderer r0;
        java.util.SortedMap $r1;
        androidx.media2.player.TextRenderer$DataBuilder $r2, $r3;

        r0 := @this: androidx.media2.player.TextRenderer;

        $r1 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        interfaceinvoke $r1.<java.util.SortedMap: void clear()>();

        $r2 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mLine21DataBuilder>;

        virtualinvoke $r2.<androidx.media2.player.TextRenderer$DataBuilder: void clear()>();

        $r3 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$DataBuilder mDtvDataBuilder>;

        virtualinvoke $r3.<androidx.media2.player.TextRenderer$DataBuilder: void clear()>();

        r0.<androidx.media2.player.TextRenderer: boolean mInputStreamEnded> = 0;

        r0.<androidx.media2.player.TextRenderer: boolean mHasPendingInputBuffer> = 0;

        return;
    }

    private void maybeAdvertiseChannel(int, int)
    {
        androidx.media2.player.TextRenderer r0;
        int i0, i1, i2, $i3;
        boolean[] $r1, $r2;
        boolean $z0;
        androidx.media2.player.TextRenderer$1 $r3;
        android.os.Handler $r4;

        r0 := @this: androidx.media2.player.TextRenderer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i0 << 6;

        i2 = $i3 + i1;

        $r1 = r0.<androidx.media2.player.TextRenderer: boolean[] mIsTypeAndChannelAdvertised>;

        $z0 = $r1[i2];

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.media2.player.TextRenderer: boolean[] mIsTypeAndChannelAdvertised>;

        $r2[i2] = 1;

        $r4 = r0.<androidx.media2.player.TextRenderer: android.os.Handler mHandler>;

        $r3 = new androidx.media2.player.TextRenderer$1;

        specialinvoke $r3.<androidx.media2.player.TextRenderer$1: void <init>(androidx.media2.player.TextRenderer,int,int)>(r0, i0, i1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void handleDtvPacket(androidx.media2.player.TextRenderer$DataBuilder, long)
    {
        androidx.media2.player.TextRenderer r0;
        androidx.media2.player.TextRenderer$DataBuilder r1;
        long l0;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, i14;
        byte[] r2, $r3;
        androidx.media2.exoplayer.external.util.ParsableByteArray $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r15;
        java.util.SortedMap $r11;
        java.lang.Long $r12;

        r0 := @this: androidx.media2.player.TextRenderer;

        r1 := @parameter0: androidx.media2.player.TextRenderer$DataBuilder;

        l0 := @parameter1: long;

        $r4 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        $r3 = r1.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i3 = r1.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        virtualinvoke $r4.<androidx.media2.exoplayer.external.util.ParsableByteArray: void reset(byte[],int)>($r3, $i3);

        virtualinvoke r1.<androidx.media2.player.TextRenderer$DataBuilder: void clear()>();

        $r5 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        $i4 = virtualinvoke $r5.<androidx.media2.exoplayer.external.util.ParsableByteArray: int readUnsignedByte()>();

        i12 = $i4 & 31;

        if i12 != 0 goto label1;

        i12 = 64;

     label1:
        $r6 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        $i5 = virtualinvoke $r6.<androidx.media2.exoplayer.external.util.ParsableByteArray: int limit()>();

        $i6 = i12 * 2;

        if $i5 == $i6 goto label2;

        return;

     label2:
        $r15 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        $i13 = virtualinvoke $r15.<androidx.media2.exoplayer.external.util.ParsableByteArray: int bytesLeft()>();

        if $i13 < 2 goto label7;

        $r7 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        i1 = virtualinvoke $r7.<androidx.media2.exoplayer.external.util.ParsableByteArray: int readUnsignedByte()>();

        $i7 = i1 & 224;

        i14 = $i7 >> 5;

        i2 = i1 & 31;

        if i14 != 7 goto label3;

        $r14 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        $i11 = virtualinvoke $r14.<androidx.media2.exoplayer.external.util.ParsableByteArray: int readUnsignedByte()>();

        i14 = $i11 & 63;

        if i14 >= 7 goto label3;

        return;

     label3:
        $r8 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        $i8 = virtualinvoke $r8.<androidx.media2.exoplayer.external.util.ParsableByteArray: int bytesLeft()>();

        if $i8 >= i2 goto label4;

        return;

     label4:
        if i2 <= 0 goto label6;

        specialinvoke r0.<androidx.media2.player.TextRenderer: void maybeAdvertiseChannel(int,int)>(1, i14);

        $i9 = r0.<androidx.media2.player.TextRenderer: int mSelectedType>;

        if $i9 != 1 goto label5;

        $i10 = r0.<androidx.media2.player.TextRenderer: int mSelectedChannel>;

        if $i10 != i14 goto label5;

        r2 = newarray (byte)[i2];

        $r10 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        virtualinvoke $r10.<androidx.media2.exoplayer.external.util.ParsableByteArray: void readBytes(byte[],int,int)>(r2, 0, i2);

        $r11 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r11.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r2);

        goto label2;

     label5:
        $r9 = r0.<androidx.media2.player.TextRenderer: androidx.media2.exoplayer.external.util.ParsableByteArray mScratch>;

        virtualinvoke $r9.<androidx.media2.exoplayer.external.util.ParsableByteArray: void skipBytes(int)>(i2);

     label6:
        goto label2;

     label7:
        return;
    }

    private void handleLine21Packet(androidx.media2.player.TextRenderer$DataBuilder, long)
    {
        androidx.media2.player.TextRenderer r0;
        androidx.media2.player.TextRenderer$DataBuilder r1;
        long l0;
        java.util.SortedMap $r2;
        java.lang.Long $r3;
        int $i1;
        byte[] $r4, $r5;

        r0 := @this: androidx.media2.player.TextRenderer;

        r1 := @parameter0: androidx.media2.player.TextRenderer$DataBuilder;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r4 = r1.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i1 = r1.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        $r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r4, $i1);

        interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        virtualinvoke r1.<androidx.media2.player.TextRenderer$DataBuilder: void clear()>();

        return;
    }

    private void display(long)
    {
        androidx.media2.player.TextRenderer r0;
        long l0, l1, l10;
        byte[] r1, $r10, r16;
        int i2, $i3, $i4, $i5, $i7, $i8, $i9;
        java.util.SortedMap $r2, $r4, $r7, $r12, $r13;
        boolean $z0;
        androidx.media2.player.TextRenderer$Output $r3;
        java.lang.Object $r5, $r9, $r11, $r14;
        java.lang.Long $r6, $r8;
        byte $b6;

        r0 := @this: androidx.media2.player.TextRenderer;

        l0 := @parameter0: long;

        $i3 = r0.<androidx.media2.player.TextRenderer: int mSelectedType>;

        if $i3 == -1 goto label1;

        $i4 = r0.<androidx.media2.player.TextRenderer: int mSelectedChannel>;

        if $i4 != -1 goto label2;

     label1:
        return;

     label2:
        r16 = newarray (byte)[0];

        l10 = -9223372036854775807L;

     label3:
        $r2 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        $z0 = interfaceinvoke $r2.<java.util.SortedMap: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r4 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.lang.Object firstKey()>();

        $r6 = (java.lang.Long) $r5;

        l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        $b6 = l0 cmp l1;

        if $b6 >= 0 goto label4;

        goto label5;

     label4:
        $r7 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r9 = interfaceinvoke $r7.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (byte[]) $r9;

        $r11 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r10);

        r1 = (byte[]) $r11;

        l10 = l1;

        i2 = lengthof r16;

        $i7 = lengthof r1;

        $i8 = i2 + $i7;

        r16 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r16, $i8);

        $i9 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r16, i2, $i9);

        $r13 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        $r12 = r0.<androidx.media2.player.TextRenderer: java.util.SortedMap mCcMap>;

        $r14 = interfaceinvoke $r12.<java.util.SortedMap: java.lang.Object firstKey()>();

        interfaceinvoke $r13.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>($r14);

        goto label3;

     label5:
        $i5 = lengthof r16;

        if $i5 <= 0 goto label6;

        $r3 = r0.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$Output mOutput>;

        interfaceinvoke $r3.<androidx.media2.player.TextRenderer$Output: void onCcData(byte[],long)>(r16, l10);

     label6:
        return;
    }

androidx.media2.player.TextRenderer$1
<androidx.media2.player.TextRenderer$1: int val$type>
<androidx.media2.player.TextRenderer$1: int val$channel>
<androidx.media2.player.TextRenderer$1: androidx.media2.player.TextRenderer this$0>
    void <init>(androidx.media2.player.TextRenderer, int, int)
    {
        androidx.media2.player.TextRenderer$1 r0;
        androidx.media2.player.TextRenderer r1;
        int i0, i1;

        r0 := @this: androidx.media2.player.TextRenderer$1;

        r1 := @parameter0: androidx.media2.player.TextRenderer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<androidx.media2.player.TextRenderer$1: androidx.media2.player.TextRenderer this$0> = r1;

        r0.<androidx.media2.player.TextRenderer$1: int val$type> = i0;

        r0.<androidx.media2.player.TextRenderer$1: int val$channel> = i1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.media2.player.TextRenderer$1 r0;
        androidx.media2.player.TextRenderer $r1;
        int $i0, $i1;
        androidx.media2.player.TextRenderer$Output $r2;

        r0 := @this: androidx.media2.player.TextRenderer$1;

        $r1 = r0.<androidx.media2.player.TextRenderer$1: androidx.media2.player.TextRenderer this$0>;

        $r2 = $r1.<androidx.media2.player.TextRenderer: androidx.media2.player.TextRenderer$Output mOutput>;

        $i1 = r0.<androidx.media2.player.TextRenderer$1: int val$type>;

        $i0 = r0.<androidx.media2.player.TextRenderer$1: int val$channel>;

        interfaceinvoke $r2.<androidx.media2.player.TextRenderer$Output: void onChannelAvailable(int,int)>($i1, $i0);

        return;
    }

androidx.media2.player.TextRenderer$DataBuilder
<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>
<androidx.media2.player.TextRenderer$DataBuilder: int mLength>
    void <init>()
    {
        androidx.media2.player.TextRenderer$DataBuilder r0;
        byte[] $r1;

        r0 := @this: androidx.media2.player.TextRenderer$DataBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[3];

        r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData> = $r1;

        return;
    }

    public void append(byte, byte)
    {
        androidx.media2.player.TextRenderer$DataBuilder r0;
        byte b0, b1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: androidx.media2.player.TextRenderer$DataBuilder;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        $i2 = r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        $i4 = $i2 + 2;

        $r1 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i3 = lengthof $r1;

        if $i4 <= $i3 goto label1;

        $r5 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $r4 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i9 = lengthof $r4;

        $i10 = $i9 * 2;

        $r6 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r5, $i10);

        r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData> = $r6;

     label1:
        $r2 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i5 = r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        $i6 = $i5 + 1;

        r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength> = $i6;

        $r2[$i5] = b0;

        $r3 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i7 = r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        $i8 = $i7 + 1;

        r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength> = $i8;

        $r3[$i7] = b1;

        return;
    }

    public void append(byte, byte, byte)
    {
        androidx.media2.player.TextRenderer$DataBuilder r0;
        byte b0, b1, b2;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: androidx.media2.player.TextRenderer$DataBuilder;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        b2 := @parameter2: byte;

        $i3 = r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        $i5 = $i3 + 3;

        $r1 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i4 = lengthof $r1;

        if $i5 <= $i4 goto label1;

        $r6 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $r5 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i12 = lengthof $r5;

        $i13 = $i12 * 2;

        $r7 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r6, $i13);

        r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData> = $r7;

     label1:
        $r2 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i6 = r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        $i7 = $i6 + 1;

        r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength> = $i7;

        $r2[$i6] = b0;

        $r3 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i8 = r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        $i9 = $i8 + 1;

        r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength> = $i9;

        $r3[$i8] = b1;

        $r4 = r0.<androidx.media2.player.TextRenderer$DataBuilder: byte[] mData>;

        $i10 = r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        $i11 = $i10 + 1;

        r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength> = $i11;

        $r4[$i10] = b2;

        return;
    }

    public boolean hasData()
    {
        androidx.media2.player.TextRenderer$DataBuilder r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media2.player.TextRenderer$DataBuilder;

        $i0 = r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clear()
    {
        androidx.media2.player.TextRenderer$DataBuilder r0;

        r0 := @this: androidx.media2.player.TextRenderer$DataBuilder;

        r0.<androidx.media2.player.TextRenderer$DataBuilder: int mLength> = 0;

        return;
    }

androidx.media2.player.TextRenderer$Output
<androidx.media2.player.TextRenderer$Output: void onChannelAvailable(int,int)>
<androidx.media2.player.TextRenderer$Output: void onCcData(byte[],long)>
androidx.media2.player.TextRenderer$TextTrackType
