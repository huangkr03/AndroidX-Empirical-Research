androidx.core.widget.TextViewCompat
<androidx.core.widget.TextViewCompat: java.lang.String LOG_TAG>
<androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_NONE>
<androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_UNIFORM>
<androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaximumField>
<androidx.core.widget.TextViewCompat: boolean sMaximumFieldFetched>
<androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaxModeField>
<androidx.core.widget.TextViewCompat: boolean sMaxModeFieldFetched>
<androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinimumField>
<androidx.core.widget.TextViewCompat: boolean sMinimumFieldFetched>
<androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinModeField>
<androidx.core.widget.TextViewCompat: boolean sMinModeFieldFetched>
<androidx.core.widget.TextViewCompat: int LINES>
    private void <init>()
    {
        androidx.core.widget.TextViewCompat r0;

        r0 := @this: androidx.core.widget.TextViewCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.reflect.Field retrieveField(java.lang.String)
    {
        java.lang.String r0, $r8;
        java.lang.Throwable r1, $r3;
        java.lang.Class $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.reflect.Field r9;

        r0 := @parameter0: java.lang.String;

        r9 = null;

     label1:
        $r2 = class "Landroid/widget/TextView;";

        r9 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r0);

        virtualinvoke r9.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not retrieve ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextViewCompat", $r8);

     label4:
        return r9;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
    }

    private static int retrieveIntFromField(java.lang.reflect.Field, android.widget.TextView)
    {
        java.lang.reflect.Field r0;
        android.widget.TextView r1;
        java.lang.Throwable r2, $r3;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        java.lang.String $r6, $r9;

        r0 := @parameter0: java.lang.reflect.Field;

        r1 := @parameter1: android.widget.TextView;

     label1:
        $i0 = virtualinvoke r0.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r1);

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not retrieve value of ");

        $r6 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TextViewCompat", $r9);

        return -1;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public static void setCompoundDrawablesRelative(android.widget.TextView, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4, $r6, $r8;
        boolean z0, $z1;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        r2 := @parameter2: android.graphics.drawable.Drawable;

        r3 := @parameter3: android.graphics.drawable.Drawable;

        r4 := @parameter4: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r0, r1, r2, r3, r4);

        goto label9;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label8;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)>(r0);

        if $i2 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if z0 == 0 goto label4;

        $r6 = r3;

        goto label5;

     label4:
        $r6 = r1;

     label5:
        if z0 == 0 goto label6;

        $r8 = r1;

        goto label7;

     label6:
        $r8 = r3;

     label7:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r6, r2, $r8, r4);

        goto label9;

     label8:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2, r3, r4);

     label9:
        return;
    }

    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4, $r6, $r8;
        boolean z0, $z1;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        r2 := @parameter2: android.graphics.drawable.Drawable;

        r3 := @parameter3: android.graphics.drawable.Drawable;

        r4 := @parameter4: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r0, r1, r2, r3, r4);

        goto label9;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label8;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)>(r0);

        if $i2 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if z0 == 0 goto label4;

        $r6 = r3;

        goto label5;

     label4:
        $r6 = r1;

     label5:
        if z0 == 0 goto label6;

        $r8 = r1;

        goto label7;

     label6:
        $r8 = r3;

     label7:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r6, r2, $r8, r4);

        goto label9;

     label8:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2, r3, r4);

     label9:
        return;
    }

    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView, int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i9;
        boolean z0, $z1;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 18 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)>(r0, i0, i1, i2, i3);

        goto label9;

     label1:
        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 < 17 goto label8;

        $i6 = staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)>(r0);

        if $i6 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if z0 == 0 goto label4;

        $i7 = i2;

        goto label5;

     label4:
        $i7 = i0;

     label5:
        if z0 == 0 goto label6;

        $i9 = i0;

        goto label7;

     label6:
        $i9 = i2;

     label7:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>($i7, i1, $i9, i3);

        goto label9;

     label8:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>(i0, i1, i2, i3);

     label9:
        return;
    }

    public static int getMaxLines(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.reflect.Field $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $i3 = staticinvoke <androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)>(r0);

        return $i3;

     label1:
        $z0 = <androidx.core.widget.TextViewCompat: boolean sMaxModeFieldFetched>;

        if $z0 != 0 goto label2;

        $r6 = staticinvoke <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>("mMaxMode");

        <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaxModeField> = $r6;

        <androidx.core.widget.TextViewCompat: boolean sMaxModeFieldFetched> = 1;

     label2:
        $r1 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaxModeField>;

        if $r1 == null goto label4;

        $r2 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaxModeField>;

        $i1 = staticinvoke <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>($r2, r0);

        if $i1 != 1 goto label4;

        $z1 = <androidx.core.widget.TextViewCompat: boolean sMaximumFieldFetched>;

        if $z1 != 0 goto label3;

        $r5 = staticinvoke <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>("mMaximum");

        <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaximumField> = $r5;

        <androidx.core.widget.TextViewCompat: boolean sMaximumFieldFetched> = 1;

     label3:
        $r3 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaximumField>;

        if $r3 == null goto label4;

        $r4 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaximumField>;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>($r4, r0);

        return $i2;

     label4:
        return -1;
    }

    public static int getMinLines(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.reflect.Field $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $i3 = staticinvoke <androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)>(r0);

        return $i3;

     label1:
        $z0 = <androidx.core.widget.TextViewCompat: boolean sMinModeFieldFetched>;

        if $z0 != 0 goto label2;

        $r6 = staticinvoke <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>("mMinMode");

        <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinModeField> = $r6;

        <androidx.core.widget.TextViewCompat: boolean sMinModeFieldFetched> = 1;

     label2:
        $r1 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinModeField>;

        if $r1 == null goto label4;

        $r2 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinModeField>;

        $i1 = staticinvoke <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>($r2, r0);

        if $i1 != 1 goto label4;

        $z1 = <androidx.core.widget.TextViewCompat: boolean sMinimumFieldFetched>;

        if $z1 != 0 goto label3;

        $r5 = staticinvoke <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>("mMinimum");

        <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinimumField> = $r5;

        <androidx.core.widget.TextViewCompat: boolean sMinimumFieldFetched> = 1;

     label3:
        $r3 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinimumField>;

        if $r3 == null goto label4;

        $r4 = <androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinimumField>;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>($r4, r0);

        return $i2;

     label4:
        return -1;
    }

    public static void setTextAppearance(android.widget.TextView, int)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setTextAppearance(int)>(i0);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        virtualinvoke r0.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r1, i0);

     label2:
        return;
    }

    public static android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.graphics.drawable.Drawable[] r1, $r4, $r5;
        android.graphics.drawable.Drawable r2, r3;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        $r5 = staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)>(r0);

        return $r5;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label5;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)>(r0);

        if $i2 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        r1 = virtualinvoke r0.<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>();

        if z0 == 0 goto label4;

        r2 = r1[2];

        r3 = r1[0];

        r1[0] = r2;

        r1[2] = r3;

     label4:
        return r1;

     label5:
        $r4 = virtualinvoke r0.<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>();

        return $r4;
    }

    public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView, int)
    {
        android.widget.TextView r0;
        int i0, $i1;
        boolean $z0;
        androidx.core.widget.AutoSizeableTextView $r1;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 27 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api26Impl: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)>(r0, i0);

        goto label2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.AutoSizeableTextView;

        if $z0 == 0 goto label2;

        $r1 = (androidx.core.widget.AutoSizeableTextView) r0;

        interfaceinvoke $r1.<androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeWithDefaults(int)>(i0);

     label2:
        return;
    }

    public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView, int, int, int, int) throws java.lang.IllegalArgumentException
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4;
        boolean $z0;
        androidx.core.widget.AutoSizeableTextView $r1;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 27 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)>(r0, i0, i1, i2, i3);

        goto label2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.AutoSizeableTextView;

        if $z0 == 0 goto label2;

        $r1 = (androidx.core.widget.AutoSizeableTextView) r0;

        interfaceinvoke $r1.<androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        return;
    }

    public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView, int[], int) throws java.lang.IllegalArgumentException
    {
        android.widget.TextView r0;
        int[] r1;
        int i0, $i1;
        boolean $z0;
        androidx.core.widget.AutoSizeableTextView $r2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 27 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)>(r0, r1, i0);

        goto label2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.AutoSizeableTextView;

        if $z0 == 0 goto label2;

        $r2 = (androidx.core.widget.AutoSizeableTextView) r0;

        interfaceinvoke $r2.<androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>(r1, i0);

     label2:
        return;
    }

    public static int getAutoSizeTextType(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;
        boolean $z0;
        androidx.core.widget.AutoSizeableTextView $r1;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 27 goto label1;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat$Api26Impl: int getAutoSizeTextType(android.widget.TextView)>(r0);

        return $i2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.AutoSizeableTextView;

        if $z0 == 0 goto label2;

        $r1 = (androidx.core.widget.AutoSizeableTextView) r0;

        $i1 = interfaceinvoke $r1.<androidx.core.widget.AutoSizeableTextView: int getAutoSizeTextType()>();

        return $i1;

     label2:
        return 0;
    }

    public static int getAutoSizeStepGranularity(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;
        boolean $z0;
        androidx.core.widget.AutoSizeableTextView $r1;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 27 goto label1;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)>(r0);

        return $i2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.AutoSizeableTextView;

        if $z0 == 0 goto label2;

        $r1 = (androidx.core.widget.AutoSizeableTextView) r0;

        $i1 = interfaceinvoke $r1.<androidx.core.widget.AutoSizeableTextView: int getAutoSizeStepGranularity()>();

        return $i1;

     label2:
        return -1;
    }

    public static int getAutoSizeMinTextSize(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;
        boolean $z0;
        androidx.core.widget.AutoSizeableTextView $r1;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 27 goto label1;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat$Api26Impl: int getAutoSizeMinTextSize(android.widget.TextView)>(r0);

        return $i2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.AutoSizeableTextView;

        if $z0 == 0 goto label2;

        $r1 = (androidx.core.widget.AutoSizeableTextView) r0;

        $i1 = interfaceinvoke $r1.<androidx.core.widget.AutoSizeableTextView: int getAutoSizeMinTextSize()>();

        return $i1;

     label2:
        return -1;
    }

    public static int getAutoSizeMaxTextSize(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;
        boolean $z0;
        androidx.core.widget.AutoSizeableTextView $r1;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 27 goto label1;

        $i2 = staticinvoke <androidx.core.widget.TextViewCompat$Api26Impl: int getAutoSizeMaxTextSize(android.widget.TextView)>(r0);

        return $i2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.AutoSizeableTextView;

        if $z0 == 0 goto label2;

        $r1 = (androidx.core.widget.AutoSizeableTextView) r0;

        $i1 = interfaceinvoke $r1.<androidx.core.widget.AutoSizeableTextView: int getAutoSizeMaxTextSize()>();

        return $i1;

     label2:
        return -1;
    }

    public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0;
        boolean $z0;
        int[] $r1, $r3, $r4;
        androidx.core.widget.AutoSizeableTextView $r2;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 27 goto label1;

        $r4 = staticinvoke <androidx.core.widget.TextViewCompat$Api26Impl: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)>(r0);

        return $r4;

     label1:
        $z0 = r0 instanceof androidx.core.widget.AutoSizeableTextView;

        if $z0 == 0 goto label2;

        $r2 = (androidx.core.widget.AutoSizeableTextView) r0;

        $r3 = interfaceinvoke $r2.<androidx.core.widget.AutoSizeableTextView: int[] getAutoSizeTextAvailableSizes()>();

        return $r3;

     label2:
        $r1 = newarray (int)[0];

        return $r1;
    }

    public static void setCustomSelectionActionModeCallback(android.widget.TextView, android.view.ActionMode$Callback)
    {
        android.widget.TextView r0;
        android.view.ActionMode$Callback r1, $r2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.view.ActionMode$Callback;

        $r2 = staticinvoke <androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)>(r0, r1);

        virtualinvoke r0.<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>($r2);

        return;
    }

    public static android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView, android.view.ActionMode$Callback)
    {
        android.widget.TextView r0;
        android.view.ActionMode$Callback r1;
        int $i0, $i1;
        boolean $z0;
        androidx.core.widget.TextViewCompat$OreoCallback $r2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.view.ActionMode$Callback;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 > 27 goto label1;

        $z0 = r1 instanceof androidx.core.widget.TextViewCompat$OreoCallback;

        if $z0 != 0 goto label1;

        if r1 != null goto label2;

     label1:
        return r1;

     label2:
        $r2 = new androidx.core.widget.TextViewCompat$OreoCallback;

        specialinvoke $r2.<androidx.core.widget.TextViewCompat$OreoCallback: void <init>(android.view.ActionMode$Callback,android.widget.TextView)>(r1, r0);

        return $r2;
    }

    public static android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
    {
        android.view.ActionMode$Callback r0, $r2;
        boolean $z0;
        int $i0;
        androidx.core.widget.TextViewCompat$OreoCallback $r1;

        r0 := @parameter0: android.view.ActionMode$Callback;

        $z0 = r0 instanceof androidx.core.widget.TextViewCompat$OreoCallback;

        if $z0 == 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r1 = (androidx.core.widget.TextViewCompat$OreoCallback) r0;

        $r2 = virtualinvoke $r1.<androidx.core.widget.TextViewCompat$OreoCallback: android.view.ActionMode$Callback getWrappedCallback()>();

        return $r2;

     label1:
        return r0;
    }

    public static void setFirstBaselineToTopHeight(android.widget.TextView, int)
    {
        android.widget.TextView r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.graphics.Paint$FontMetricsInt r1;
        android.text.TextPaint $r2;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        staticinvoke <androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 28 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)>(r0, i0);

        return;

     label1:
        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        r1 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 16 goto label2;

        $z0 = staticinvoke <androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)>(r0);

        if $z0 == 0 goto label3;

     label2:
        i9 = r1.<android.graphics.Paint$FontMetricsInt: int top>;

        goto label4;

     label3:
        i9 = r1.<android.graphics.Paint$FontMetricsInt: int ascent>;

     label4:
        $i5 = staticinvoke <java.lang.Math: int abs(int)>(i9);

        if i0 <= $i5 goto label5;

        i1 = i0 + i9;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getPaddingLeft()>();

        $i7 = virtualinvoke r0.<android.widget.TextView: int getPaddingRight()>();

        $i8 = virtualinvoke r0.<android.widget.TextView: int getPaddingBottom()>();

        virtualinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i6, i1, $i7, $i8);

     label5:
        return;
    }

    public static void setLastBaselineToBottomHeight(android.widget.TextView, int)
    {
        android.widget.TextView r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, i8;
        android.graphics.Paint$FontMetricsInt r1;
        android.text.TextPaint $r2;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        staticinvoke <androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        r1 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 16 goto label1;

        $z0 = staticinvoke <androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)>(r0);

        if $z0 == 0 goto label2;

     label1:
        i8 = r1.<android.graphics.Paint$FontMetricsInt: int bottom>;

        goto label3;

     label2:
        i8 = r1.<android.graphics.Paint$FontMetricsInt: int descent>;

     label3:
        $i4 = staticinvoke <java.lang.Math: int abs(int)>(i8);

        if i0 <= $i4 goto label4;

        i1 = i0 - i8;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getPaddingLeft()>();

        $i6 = virtualinvoke r0.<android.widget.TextView: int getPaddingTop()>();

        $i7 = virtualinvoke r0.<android.widget.TextView: int getPaddingRight()>();

        virtualinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i5, $i6, $i7, i1);

     label4:
        return;
    }

    public static int getFirstBaselineToTopHeight(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;
        android.text.TextPaint $r1;
        android.graphics.Paint$FontMetricsInt $r2;

        r0 := @parameter0: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getPaddingTop()>();

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $i1 = $r2.<android.graphics.Paint$FontMetricsInt: int top>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public static int getLastBaselineToBottomHeight(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;
        android.text.TextPaint $r1;
        android.graphics.Paint$FontMetricsInt $r2;

        r0 := @parameter0: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getPaddingBottom()>();

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $i1 = $r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public static void setLineHeight(android.widget.TextView, int)
    {
        android.widget.TextView r0;
        int i0, i1, $i3;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        staticinvoke <androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        i1 = virtualinvoke $r1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        if i0 == i1 goto label1;

        $i3 = i0 - i1;

        $f0 = (float) $i3;

        virtualinvoke r0.<android.widget.TextView: void setLineSpacing(float,float)>($f0, 1.0F);

     label1:
        return;
    }

    public static androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
    {
        android.widget.TextView r0;
        androidx.core.text.PrecomputedTextCompat$Params$Builder r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.TextPaint $r3, $r4;
        androidx.core.text.PrecomputedTextCompat$Params $r5, $r10;
        android.text.TextDirectionHeuristic $r6;
        android.text.PrecomputedText$Params $r11;

        r0 := @parameter0: android.widget.TextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r10 = new androidx.core.text.PrecomputedTextCompat$Params;

        $r11 = staticinvoke <androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)>(r0);

        specialinvoke $r10.<androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>($r11);

        return $r10;

     label1:
        $r2 = new androidx.core.text.PrecomputedTextCompat$Params$Builder;

        $r3 = new android.text.TextPaint;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        specialinvoke $r3.<android.text.TextPaint: void <init>(android.graphics.Paint)>($r4);

        specialinvoke $r2.<androidx.core.text.PrecomputedTextCompat$Params$Builder: void <init>(android.text.TextPaint)>($r3);

        r1 = $r2;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label2;

        $i3 = staticinvoke <androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)>(r0);

        virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)>($i3);

        $i4 = staticinvoke <androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)>(r0);

        virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)>($i4);

     label2:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 18 goto label3;

        $r6 = staticinvoke <androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)>(r0);

        virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>($r6);

     label3:
        $r5 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()>();

        return $r5;
    }

    public static void setTextMetricsParams(android.widget.TextView, androidx.core.text.PrecomputedTextCompat$Params)
    {
        android.widget.TextView r0;
        androidx.core.text.PrecomputedTextCompat$Params r1;
        float f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3, $i5;
        android.text.TextPaint $r2, $r3, $r4, $r5, $r6;
        byte $b4;
        android.text.TextDirectionHeuristic $r7;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: androidx.core.text.PrecomputedTextCompat$Params;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        $r7 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()>();

        $i5 = staticinvoke <androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)>($r7);

        staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)>(r0, $i5);

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 23 goto label3;

        $r4 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()>();

        f0 = virtualinvoke $r4.<android.text.TextPaint: float getTextScaleX()>();

        $r5 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r6 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()>();

        virtualinvoke $r5.<android.text.TextPaint: void set(android.text.TextPaint)>($r6);

        $f1 = virtualinvoke r0.<android.widget.TextView: float getTextScaleX()>();

        $b4 = f0 cmpl $f1;

        if $b4 != 0 goto label2;

        $f2 = f0 / 2.0F;

        $f3 = $f2 + 1.0F;

        virtualinvoke r0.<android.widget.TextView: void setTextScaleX(float)>($f3);

     label2:
        virtualinvoke r0.<android.widget.TextView: void setTextScaleX(float)>(f0);

        goto label4;

     label3:
        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r3 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()>();

        virtualinvoke $r2.<android.text.TextPaint: void set(android.text.TextPaint)>($r3);

        $i2 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()>();

        staticinvoke <androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)>(r0, $i2);

        $i3 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()>();

        staticinvoke <androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)>(r0, $i3);

     label4:
        return;
    }

    public static void setPrecomputedText(android.widget.TextView, androidx.core.text.PrecomputedTextCompat)
    {
        android.widget.TextView r0;
        androidx.core.text.PrecomputedTextCompat r1;
        androidx.core.text.PrecomputedTextCompat$Params r2, $r3;
        int $i0;
        boolean $z0;
        android.text.PrecomputedText $r5;
        java.lang.IllegalArgumentException r6;
        java.lang.CharSequence r7;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: androidx.core.text.PrecomputedTextCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $r5 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()>();

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

        goto label3;

     label1:
        r2 = staticinvoke <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>(r0);

        $r3 = virtualinvoke r1.<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()>();

        $z0 = virtualinvoke r2.<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>($r3);

        if $z0 != 0 goto label2;

        r6 = new java.lang.IllegalArgumentException;

        specialinvoke r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given text can not be applied to TextView.");

        throw r6;

     label2:
        r7 = (java.lang.CharSequence) r1;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>(r7);

     label3:
        return;
    }

    private static android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        int i0, $i2, $i3, $i4, $i5, $i6;
        byte b1;
        android.text.method.TransformationMethod $r2;
        boolean $z0, $z1, z2;
        android.text.TextDirectionHeuristic $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r15;
        java.util.Locale $r9;
        java.lang.String[] $r10;
        android.icu.text.DecimalFormatSymbols r14;

        r0 := @parameter0: android.widget.TextView;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>();

        $z0 = $r2 instanceof android.text.method.PasswordTransformationMethod;

        if $z0 == 0 goto label01;

        $r13 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r13;

     label01:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 28 goto label04;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        $i6 = $i5 & 15;

        if $i6 != 3 goto label04;

        $r9 = staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)>(r0);

        r14 = staticinvoke <androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>($r9);

        $r10 = staticinvoke <androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)>(r14);

        r1 = $r10[0];

        i0 = virtualinvoke r1.<java.lang.String: int codePointAt(int)>(0);

        b1 = staticinvoke <java.lang.Character: byte getDirectionality(int)>(i0);

        if b1 == 1 goto label02;

        if b1 != 2 goto label03;

     label02:
        $r11 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        return $r11;

     label03:
        $r12 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r12;

     label04:
        $i3 = staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)>(r0);

        if $i3 != 1 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        z2 = $z1;

        $i4 = staticinvoke <androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)>(r0);

        tableswitch($i4)
        {
            case 1: goto label07;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label12;
            case 5: goto label13;
            case 6: goto label14;
            case 7: goto label15;
            default: goto label07;
        };

     label07:
        if z2 == 0 goto label08;

        $r15 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        goto label09;

     label08:
        $r15 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

     label09:
        return $r15;

     label10:
        $r8 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        return $r8;

     label11:
        $r7 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r7;

     label12:
        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        return $r6;

     label13:
        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LOCALE>;

        return $r5;

     label14:
        $r4 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        return $r4;

     label15:
        $r3 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        return $r3;
    }

    private static int getTextDirection(android.text.TextDirectionHeuristic)
    {
        android.text.TextDirectionHeuristic r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: android.text.TextDirectionHeuristic;

        $r1 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $r2 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        if r0 != $r2 goto label2;

        return 1;

     label2:
        $r3 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        if r0 != $r3 goto label3;

        return 2;

     label3:
        $r4 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        if r0 != $r4 goto label4;

        return 3;

     label4:
        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        if r0 != $r5 goto label5;

        return 4;

     label5:
        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LOCALE>;

        if r0 != $r6 goto label6;

        return 5;

     label6:
        $r7 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        if r0 != $r7 goto label7;

        return 6;

     label7:
        $r8 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        if r0 != $r8 goto label8;

        return 7;

     label8:
        return 1;
    }

    public static void setCompoundDrawableTintList(android.widget.TextView, android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;
        int $i0;
        boolean $z0;
        androidx.core.widget.TintableCompoundDrawablesView $r3;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.content.res.ColorStateList;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)>(r0, r1);

        goto label2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.TintableCompoundDrawablesView;

        if $z0 == 0 goto label2;

        $r3 = (androidx.core.widget.TintableCompoundDrawablesView) r0;

        interfaceinvoke $r3.<androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)>(r1);

     label2:
        return;
    }

    public static android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0;
        boolean $z0;
        androidx.core.widget.TintableCompoundDrawablesView $r2;
        android.content.res.ColorStateList $r3, $r4;

        r0 := @parameter0: android.widget.TextView;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r4 = staticinvoke <androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)>(r0);

        return $r4;

     label1:
        $z0 = r0 instanceof androidx.core.widget.TintableCompoundDrawablesView;

        if $z0 == 0 goto label2;

        $r2 = (androidx.core.widget.TintableCompoundDrawablesView) r0;

        $r3 = interfaceinvoke $r2.<androidx.core.widget.TintableCompoundDrawablesView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()>();

        return $r3;

     label2:
        return null;
    }

    public static void setCompoundDrawableTintMode(android.widget.TextView, android.graphics.PorterDuff$Mode)
    {
        android.widget.TextView r0;
        android.graphics.PorterDuff$Mode r1;
        int $i0;
        boolean $z0;
        androidx.core.widget.TintableCompoundDrawablesView $r3;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        staticinvoke <androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)>(r0, r1);

        goto label2;

     label1:
        $z0 = r0 instanceof androidx.core.widget.TintableCompoundDrawablesView;

        if $z0 == 0 goto label2;

        $r3 = (androidx.core.widget.TintableCompoundDrawablesView) r0;

        interfaceinvoke $r3.<androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)>(r1);

     label2:
        return;
    }

    public static android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0;
        boolean $z0;
        androidx.core.widget.TintableCompoundDrawablesView $r2;
        android.graphics.PorterDuff$Mode $r3, $r4;

        r0 := @parameter0: android.widget.TextView;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r4 = staticinvoke <androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)>(r0);

        return $r4;

     label1:
        $z0 = r0 instanceof androidx.core.widget.TintableCompoundDrawablesView;

        if $z0 == 0 goto label2;

        $r2 = (androidx.core.widget.TintableCompoundDrawablesView) r0;

        $r3 = interfaceinvoke $r2.<androidx.core.widget.TintableCompoundDrawablesView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()>();

        return $r3;

     label2:
        return null;
    }

