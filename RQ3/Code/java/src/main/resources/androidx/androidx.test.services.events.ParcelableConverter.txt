androidx.test.services.events.ParcelableConverter
<androidx.test.services.events.ParcelableConverter: java.lang.String TAG>
    public static androidx.test.services.events.AnnotationInfo getAnnotation(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r0;
        java.util.ArrayList r1, $r5;
        java.lang.reflect.Method[] r2;
        int i0, i1;
        java.lang.reflect.Method r3;
        androidx.test.services.events.AnnotationValue r4;
        java.lang.Class $r6, $r8;
        androidx.test.services.events.AnnotationInfo $r7;
        java.lang.String $r9;

        r0 := @parameter0: java.lang.'annotation'.Annotation;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = interfaceinvoke r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        r4 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.AnnotationValue getAnnotationValue(java.lang.'annotation'.Annotation,java.lang.reflect.Method)>(r0, r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = new androidx.test.services.events.AnnotationInfo;

        $r8 = interfaceinvoke r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r7.<androidx.test.services.events.AnnotationInfo: void <init>(java.lang.String,java.util.List)>($r9, r1);

        return $r7;
    }

    private static androidx.test.services.events.AnnotationValue getAnnotationValue(java.lang.'annotation'.Annotation, java.lang.reflect.Method)
    {
        java.lang.'annotation'.Annotation r0;
        java.lang.reflect.Method r1;
        java.lang.String r2, r3, r4, $r14, r16;
        java.lang.Object[] $r5;
        java.lang.Throwable $r7, r19;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, r20;
        java.lang.Object r17, r18;
        java.util.ArrayList r21;
        androidx.test.services.events.AnnotationValue r22;
        java.util.List r23;

        r0 := @parameter0: java.lang.'annotation'.Annotation;

        r1 := @parameter1: java.lang.reflect.Method;

        r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        r16 = "NULL";

     label1:
        $r5 = (java.lang.Object[]) null;

        r17 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

        r16 = staticinvoke <androidx.test.services.events.ParcelableConverter: java.lang.String getFieldValuesType(java.lang.Object)>(r17);

        r18 = staticinvoke <androidx.test.services.events.ParcelableConverter: java.util.List getArrayElements(java.lang.Object)>(r17);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r19 = $r7;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        r3 = r2;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get annotation values for field \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': [");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ParcelableConverter", $r14, r19);

        r21 = new java.util.ArrayList;

        specialinvoke r21.<java.util.ArrayList: void <init>()>();

        r18 = r21;

     label4:
        r22 = new androidx.test.services.events.AnnotationValue;

        r23 = (java.util.List) r18;

        specialinvoke r22.<androidx.test.services.events.AnnotationValue: void <init>(java.lang.String,java.util.List,java.lang.String)>(r2, r23, r16);

        return r22;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static androidx.test.services.events.FailureInfo getFailure(org.junit.runner.notification.Failure) throws androidx.test.services.events.TestEventException
    {
        org.junit.runner.notification.Failure r0;
        androidx.test.services.events.FailureInfo $r1;
        java.lang.String $r2, $r3, $r4;
        org.junit.runner.Description $r5;
        androidx.test.services.events.TestCaseInfo $r6;

        r0 := @parameter0: org.junit.runner.notification.Failure;

        $r1 = new androidx.test.services.events.FailureInfo;

        $r2 = virtualinvoke r0.<org.junit.runner.notification.Failure: java.lang.String getMessage()>();

        $r3 = virtualinvoke r0.<org.junit.runner.notification.Failure: java.lang.String getTestHeader()>();

        $r4 = staticinvoke <androidx.test.services.events.internal.StackTrimmer: java.lang.String getTrimmedStackTrace(org.junit.runner.notification.Failure)>(r0);

        $r5 = virtualinvoke r0.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        $r6 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description)>($r5);

        specialinvoke $r1.<androidx.test.services.events.FailureInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,androidx.test.services.events.TestCaseInfo)>($r2, $r3, $r4, $r6);

        return $r1;
    }

    public static androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description) throws androidx.test.services.events.TestEventException
    {
        org.junit.runner.Description r0;
        java.util.List r1, r2, $r16;
        java.lang.String r3, $r7, $r8, $r15, $r17;
        boolean $z0;
        java.util.Collection $r4;
        java.lang.Class $r5, $r9;
        java.lang.'annotation'.Annotation[] $r10;
        java.lang.StringBuilder $r13, $r14, r18;
        androidx.test.services.events.TestEventException r19;
        androidx.test.services.events.TestCaseInfo r20;
        java.lang.Throwable r21;

        r0 := @parameter0: org.junit.runner.Description;

        $z0 = staticinvoke <androidx.test.services.events.ParcelableConverter: boolean isValidJUnitDescription(org.junit.runner.Description)>(r0);

        if $z0 != 0 goto label1;

        r19 = new androidx.test.services.events.TestEventException;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected description instance: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<androidx.test.services.events.TestEventException: void <init>(java.lang.String)>($r15);

        r21 = (java.lang.Throwable) r19;

        throw r21;

     label1:
        $r4 = virtualinvoke r0.<org.junit.runner.Description: java.util.Collection getAnnotations()>();

        r1 = staticinvoke <androidx.test.services.events.ParcelableConverter: java.util.List getAnnotationsFromCollection(java.util.Collection)>($r4);

        $r5 = virtualinvoke r0.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        if $r5 == null goto label2;

        $r9 = virtualinvoke r0.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r16 = staticinvoke <androidx.test.services.events.ParcelableConverter: java.util.List getAnnotationsFromArray(java.lang.'annotation'.Annotation[])>($r10);

        goto label3;

     label2:
        $r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label3:
        r2 = $r16;

        r20 = new androidx.test.services.events.TestCaseInfo;

        $r7 = virtualinvoke r0.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r8 = virtualinvoke r0.<org.junit.runner.Description: java.lang.String getMethodName()>();

        if $r8 == null goto label4;

        $r17 = virtualinvoke r0.<org.junit.runner.Description: java.lang.String getMethodName()>();

        goto label5;

     label4:
        $r17 = "";

     label5:
        specialinvoke r20.<androidx.test.services.events.TestCaseInfo: void <init>(java.lang.String,java.lang.String,java.util.List,java.util.List)>($r7, $r17, r1, r2);

        return r20;
    }

    private static java.lang.String getFieldValuesType(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[", "");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("]", "");

        return $r4;
    }

    public static java.util.List getAnnotationsFromArray(java.lang.'annotation'.Annotation[])
    {
        java.lang.'annotation'.Annotation[] r0, r2;
        java.util.ArrayList r1, $r4;
        int i0, $i1, i2;
        java.lang.'annotation'.Annotation r3;
        androidx.test.services.events.AnnotationInfo $r5;

        r0 := @parameter0: java.lang.'annotation'.Annotation[];

        $r4 = new java.util.ArrayList;

        $i1 = lengthof r0;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        r1 = $r4;

        r2 = r0;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r3 = r2[i2];

        $r5 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.AnnotationInfo getAnnotation(java.lang.'annotation'.Annotation)>(r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.util.List getAnnotationsFromCollection(java.util.Collection)
    {
        java.util.Collection r0;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        java.lang.'annotation'.Annotation r3;
        int $i0;
        boolean $z0;
        java.lang.Object $r5;
        androidx.test.services.events.AnnotationInfo $r6;

        r0 := @parameter0: java.util.Collection;

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r1 = $r4;

        r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.'annotation'.Annotation) $r5;

        $r6 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.AnnotationInfo getAnnotation(java.lang.'annotation'.Annotation)>(r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return r1;
    }

    static java.util.List getArrayElements(java.lang.Object)
    {
        java.lang.Object r0, r2, $r8;
        java.util.ArrayList r1, $r3;
        java.lang.Class $r4;
        boolean $z0, $z1, $z3;
        java.lang.String $r5, $r7, $r9;
        java.lang.Iterable $r6;
        int $i0, i1;
        java.util.Iterator r10;

        r0 := @parameter0: java.lang.Object;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        if r0 != null goto label1;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("<null>");

        goto label8;

     label1:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label4;

        i1 = 0;

     label2:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        if i1 >= $i0 goto label3;

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label8;

     label4:
        $z1 = r0 instanceof java.lang.Iterable;

        if $z1 == 0 goto label7;

        $r6 = (java.lang.Iterable) r0;

        r10 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        r2 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label5;

     label6:
        goto label8;

     label7:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

     label8:
        return r1;
    }

    public static java.util.List getFailuresFromList(java.util.List) throws androidx.test.services.events.TestEventException
    {
        java.util.List r0;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        org.junit.runner.notification.Failure r3;
        boolean $z0;
        java.lang.Object $r5;
        androidx.test.services.events.FailureInfo $r6;

        r0 := @parameter0: java.util.List;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.junit.runner.notification.Failure) $r5;

        $r6 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.FailureInfo getFailure(org.junit.runner.notification.Failure)>(r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return r1;
    }

    private void <init>()
    {
        androidx.test.services.events.ParcelableConverter r0;

        r0 := @this: androidx.test.services.events.ParcelableConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isValidJUnitDescription(org.junit.runner.Description)
    {
        org.junit.runner.Description r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.junit.runner.Description;

        $r1 = <org.junit.runner.Description: org.junit.runner.Description TEST_MECHANISM>;

        $z0 = virtualinvoke r0.<org.junit.runner.Description: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

