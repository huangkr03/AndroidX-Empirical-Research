androidx.test.espresso.action.KeyEventActionBase
<androidx.test.espresso.action.KeyEventActionBase: java.lang.String TAG>
<androidx.test.espresso.action.KeyEventActionBase: int BACK_ACTIVITY_TRANSITION_MILLIS_DELAY>
<androidx.test.espresso.action.KeyEventActionBase: int CLEAR_TRANSITIONING_ACTIVITIES_ATTEMPTS>
<androidx.test.espresso.action.KeyEventActionBase: int CLEAR_TRANSITIONING_ACTIVITIES_MILLIS_DELAY>
<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>
    static android.app.Activity getCurrentActivity()
    {
        androidx.test.runner.lifecycle.ActivityLifecycleMonitor $r0;
        androidx.test.runner.lifecycle.Stage $r1;
        java.util.Collection $r2;
        java.lang.Object $r3;
        android.app.Activity $r4;
        java.lang.Iterable r5;

        $r0 = staticinvoke <androidx.test.runner.lifecycle.ActivityLifecycleMonitorRegistry: androidx.test.runner.lifecycle.ActivityLifecycleMonitor getInstance()>();

        $r1 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESUMED>;

        $r2 = interfaceinvoke $r0.<androidx.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(androidx.test.runner.lifecycle.Stage)>($r1);

        r5 = (java.lang.Iterable) $r2;

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>(r5);

        $r4 = (android.app.Activity) $r3;

        return $r4;
    }

    public java.lang.String getDescription()
    {
        androidx.test.espresso.action.KeyEventActionBase r0;
        java.util.Locale r1;
        java.lang.Object[] r2;
        androidx.test.espresso.action.EspressoKey $r3;
        java.lang.String $r4;

        r0 := @this: androidx.test.espresso.action.KeyEventActionBase;

        r1 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>;

        r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, "send %s key event", r2);

        return $r4;
    }

    public org.hamcrest.Matcher getConstraints()
    {
        androidx.test.espresso.action.KeyEventActionBase r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: androidx.test.espresso.action.KeyEventActionBase;

        $r1 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayed()>();

        return $r1;
    }

    void <init>(androidx.test.espresso.action.EspressoKey)
    {
        androidx.test.espresso.action.KeyEventActionBase r0;
        androidx.test.espresso.action.EspressoKey r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.action.KeyEventActionBase;

        r1 := @parameter0: androidx.test.espresso.action.EspressoKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.test.espresso.action.EspressoKey) $r2;

        r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey> = $r3;

        return;
    }

    public void perform(androidx.test.espresso.UiController, android.view.View)
    {
        androidx.test.espresso.action.KeyEventActionBase r0;
        android.view.View r1;
        java.lang.StringBuilder r2, $r3, $r4, $r7, $r8, $r13, $r14, r25, r36, r38, r40, r42;
        java.lang.String $r5, $r6, $r9, $r15, $r16, $r18, r24, r28, r32, r35;
        androidx.test.espresso.PerformException$Builder $r10, $r17, $r19, $r20, r26, r27, r29, r37, r39, r43;
        androidx.test.espresso.PerformException $r11, $r21;
        androidx.test.espresso.InjectEventSecurityException $r12, r33;
        androidx.test.espresso.UiController r22;
        boolean z0;
        androidx.test.espresso.action.EspressoKey r23, r31, r34;
        java.lang.RuntimeException r30, r41;
        java.lang.Throwable r44;

        r0 := @this: androidx.test.espresso.action.KeyEventActionBase;

        r22 := @parameter0: androidx.test.espresso.UiController;

        r1 := @parameter1: android.view.View;

     label1:
        z0 = specialinvoke r0.<androidx.test.espresso.action.KeyEventActionBase: boolean sendKeyEvent(androidx.test.espresso.UiController)>(r22);

     label2:
        if z0 != 0 goto label6;

     label3:
        r23 = r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>;

        r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r23);

        r38 = new java.lang.StringBuilder;

        r25 = r38;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to inject espressoKey event: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyEventActionBase", $r5);

        r39 = new androidx.test.espresso.PerformException$Builder;

        r26 = r39;

        specialinvoke r39.<androidx.test.espresso.PerformException$Builder: void <init>()>();

        $r6 = virtualinvoke r0.<androidx.test.espresso.action.KeyEventActionBase: java.lang.String getDescription()>();

        r27 = virtualinvoke r26.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r6);

     label4:
        r28 = staticinvoke <androidx.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r1);

        r29 = virtualinvoke r27.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>(r28);

        r41 = new java.lang.RuntimeException;

        r30 = r41;

        r31 = r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>;

        r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r31);

        r40 = new java.lang.StringBuilder;

        r2 = r40;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to inject espressoKey event ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r41.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        r44 = (java.lang.Throwable) r30;

        $r10 = virtualinvoke r29.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r44);

        $r11 = virtualinvoke $r10.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException build()>();

        throw $r11;

     label5:
        $r12 := @caughtexception;

        r33 = $r12;

        r34 = r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>;

        r35 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r34);

        r42 = new java.lang.StringBuilder;

        r36 = r42;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to inject espressoKey event: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyEventActionBase", $r15);

        r43 = new androidx.test.espresso.PerformException$Builder;

        r37 = r43;

        specialinvoke r43.<androidx.test.espresso.PerformException$Builder: void <init>()>();

        $r16 = virtualinvoke r0.<androidx.test.espresso.action.KeyEventActionBase: java.lang.String getDescription()>();

        $r17 = virtualinvoke r37.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r16);

        $r18 = staticinvoke <androidx.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r1);

        $r19 = virtualinvoke $r17.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r33);

        $r21 = virtualinvoke $r20.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException build()>();

        throw $r21;

     label6:
        return;

        catch androidx.test.espresso.InjectEventSecurityException from label1 to label2 with label5;
        catch androidx.test.espresso.InjectEventSecurityException from label3 to label4 with label5;
        catch androidx.test.espresso.InjectEventSecurityException from label4 to label5 with label5;
    }

    static void waitForPendingForegroundActivities(androidx.test.espresso.UiController, boolean)
    {
        boolean z0, $z1, z2, z3;
        androidx.test.runner.lifecycle.ActivityLifecycleMonitor r0;
        androidx.test.espresso.UiController r1;
        int i2;
        androidx.test.espresso.NoActivityResumedException r2, r3;
        java.lang.Throwable r4;

        r1 := @parameter0: androidx.test.espresso.UiController;

        z0 := @parameter1: boolean;

        r0 = staticinvoke <androidx.test.runner.lifecycle.ActivityLifecycleMonitorRegistry: androidx.test.runner.lifecycle.ActivityLifecycleMonitor getInstance()>();

        z2 = 0;

        i2 = 0;

     label1:
        if i2 >= 4 goto label7;

        interfaceinvoke r1.<androidx.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        z2 = staticinvoke <androidx.test.espresso.util.ActivityLifecycles: boolean hasTransitioningActivities(androidx.test.runner.lifecycle.ActivityLifecycleMonitor)>(r0);

        if z2 == 0 goto label2;

        interfaceinvoke r1.<androidx.test.espresso.UiController: void loopMainThreadForAtLeast(long)>(150L);

        i2 = i2 + 1;

        goto label1;

     label2:
        z3 = z2;

     label3:
        $z1 = staticinvoke <androidx.test.espresso.util.ActivityLifecycles: boolean hasForegroundActivities(androidx.test.runner.lifecycle.ActivityLifecycleMonitor)>(r0);

        if $z1 != 0 goto label5;

        if z0 == 0 goto label4;

        r3 = new androidx.test.espresso.NoActivityResumedException;

        r2 = r3;

        specialinvoke r3.<androidx.test.espresso.NoActivityResumedException: void <init>(java.lang.String)>("Pressed back and killed the app");

        r4 = (java.lang.Throwable) r2;

        throw r4;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("KeyEventActionBase", "Pressed back and hopped to a different process or potentially killed the app");

     label5:
        if z3 == 0 goto label6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("KeyEventActionBase", "Back was pressed and left the application in an inconsistent state even after 600ms.");

        return;

     label6:
        return;

     label7:
        z3 = z2;

        goto label3;
    }

    static void waitForStageChangeInitialActivity(androidx.test.espresso.UiController, android.app.Activity)
    {
        androidx.test.espresso.UiController r0;
        android.app.Activity r1;
        boolean $z0, $z1;

        r0 := @parameter0: androidx.test.espresso.UiController;

        r1 := @parameter1: android.app.Activity;

        $z0 = staticinvoke <androidx.test.espresso.action.KeyEventActionBase: boolean isActivityResumed(android.app.Activity)>(r1);

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<androidx.test.espresso.UiController: void loopMainThreadForAtLeast(long)>(150L);

        $z1 = staticinvoke <androidx.test.espresso.action.KeyEventActionBase: boolean isActivityResumed(android.app.Activity)>(r1);

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("KeyEventActionBase", "Back was pressed but there was no Activity stage transition in 150ms. Pressing back may trigger an activity stage transition if the activity is finished as a result. However, the activity may handle the back behavior in any number of other ways internally as well, such as popping the fragment back stack, dismissing a dialog, otherwise manually transacting fragments, etc.");

        return;

     label1:
        return;
    }

    private static boolean isActivityResumed(android.app.Activity)
    {
        androidx.test.runner.lifecycle.ActivityLifecycleMonitor $r0;
        androidx.test.runner.lifecycle.Stage $r1, $r2;
        android.app.Activity r3;
        boolean z0;

        r3 := @parameter0: android.app.Activity;

        $r0 = staticinvoke <androidx.test.runner.lifecycle.ActivityLifecycleMonitorRegistry: androidx.test.runner.lifecycle.ActivityLifecycleMonitor getInstance()>();

        $r1 = interfaceinvoke $r0.<androidx.test.runner.lifecycle.ActivityLifecycleMonitor: androidx.test.runner.lifecycle.Stage getLifecycleStageOf(android.app.Activity)>(r3);

        $r2 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESUMED>;

        if $r1 != $r2 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    private boolean sendKeyEvent(androidx.test.espresso.UiController) throws androidx.test.espresso.InjectEventSecurityException
    {
        androidx.test.espresso.action.KeyEventActionBase r0;
        androidx.test.espresso.UiController r1;
        long l0, l1;
        androidx.test.espresso.action.EspressoKey $r2, $r3, $r4, $r5;
        int $i2, $i3, $i4, $i5, i6, i7;
        boolean z0, z1;
        android.view.KeyEvent r6, r7;

        r0 := @this: androidx.test.espresso.action.KeyEventActionBase;

        r1 := @parameter0: androidx.test.espresso.UiController;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        z0 = 0;

        i6 = 0;

     label1:
        if z0 != 0 goto label2;

        if i6 >= 4 goto label2;

        r6 = new android.view.KeyEvent;

        $r4 = r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>;

        $i4 = virtualinvoke $r4.<androidx.test.espresso.action.EspressoKey: int getKeyCode()>();

        $r5 = r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>;

        $i5 = virtualinvoke $r5.<androidx.test.espresso.action.EspressoKey: int getMetaState()>();

        specialinvoke r6.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>(l0, l0, 0, $i4, 0, $i5);

        z0 = interfaceinvoke r1.<androidx.test.espresso.UiController: boolean injectKeyEvent(android.view.KeyEvent)>(r6);

        i6 = i6 + 1;

        goto label1;

     label2:
        if z0 != 0 goto label3;

        return 0;

     label3:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        z1 = 0;

        i7 = 0;

     label4:
        if z1 != 0 goto label5;

        if i7 >= 4 goto label5;

        r7 = new android.view.KeyEvent;

        $r2 = r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>;

        $i2 = virtualinvoke $r2.<androidx.test.espresso.action.EspressoKey: int getKeyCode()>();

        $r3 = r0.<androidx.test.espresso.action.KeyEventActionBase: androidx.test.espresso.action.EspressoKey espressoKey>;

        $i3 = virtualinvoke $r3.<androidx.test.espresso.action.EspressoKey: int getMetaState()>();

        specialinvoke r7.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>(l1, l1, 1, $i2, 0, $i3);

        z1 = interfaceinvoke r1.<androidx.test.espresso.UiController: boolean injectKeyEvent(android.view.KeyEvent)>(r7);

        i7 = i7 + 1;

        goto label4;

     label5:
        return z1;
    }

