androidx.media3.exoplayer.source.ConcatenatingMediaSource
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int MSG_ADD>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int MSG_REMOVE>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int MSG_MOVE>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int MSG_SET_SHUFFLE_ORDER>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int MSG_UPDATE_TIMELINE>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int MSG_ON_COMPLETION>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set pendingOnCompletionActions>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.IdentityHashMap mediaSourceByMediaPeriod>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Map mediaSourceByUid>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set enabledMediaSourceHolders>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean isAtomic>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean useLazyPreparation>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean timelineUpdateScheduled>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set nextTimelineUpdateOnCompletionActions>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>
    public transient void <init>(androidx.media3.exoplayer.source.MediaSource[])
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource[] r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource[];

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void <init>(boolean,androidx.media3.exoplayer.source.MediaSource[])>(0, r1);

        return;
    }

    public transient void <init>(boolean, androidx.media3.exoplayer.source.MediaSource[])
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        boolean z0;
        androidx.media3.exoplayer.source.MediaSource[] r1;
        androidx.media3.exoplayer.source.ShuffleOrder$DefaultShuffleOrder $r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource[];

        $r2 = new androidx.media3.exoplayer.source.ShuffleOrder$DefaultShuffleOrder;

        specialinvoke $r2.<androidx.media3.exoplayer.source.ShuffleOrder$DefaultShuffleOrder: void <init>(int)>(0);

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void <init>(boolean,androidx.media3.exoplayer.source.ShuffleOrder,androidx.media3.exoplayer.source.MediaSource[])>(z0, $r2, r1);

        return;
    }

    public transient void <init>(boolean, androidx.media3.exoplayer.source.ShuffleOrder, androidx.media3.exoplayer.source.MediaSource[])
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        boolean z0;
        androidx.media3.exoplayer.source.ShuffleOrder r1;
        androidx.media3.exoplayer.source.MediaSource[] r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.exoplayer.source.ShuffleOrder;

        r2 := @parameter2: androidx.media3.exoplayer.source.MediaSource[];

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void <init>(boolean,boolean,androidx.media3.exoplayer.source.ShuffleOrder,androidx.media3.exoplayer.source.MediaSource[])>(z0, 0, r1, r2);

        return;
    }

    public transient void <init>(boolean, boolean, androidx.media3.exoplayer.source.ShuffleOrder, androidx.media3.exoplayer.source.MediaSource[])
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        boolean z0, z1;
        androidx.media3.exoplayer.source.ShuffleOrder r1, $r15;
        androidx.media3.exoplayer.source.MediaSource[] r2, r3;
        int i0, $i1, i2;
        androidx.media3.exoplayer.source.MediaSource r4;
        java.util.IdentityHashMap $r5;
        java.util.HashMap $r6;
        java.util.ArrayList $r7, $r8;
        java.util.HashSet $r9, $r10, $r11;
        java.util.List $r12;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: androidx.media3.exoplayer.source.ShuffleOrder;

        r2 := @parameter3: androidx.media3.exoplayer.source.MediaSource[];

        specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void <init>()>();

        r3 = r2;

        i0 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r4 = r3[i2];

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke r1.<androidx.media3.exoplayer.source.ShuffleOrder: int getLength()>();

        if $i1 <= 0 goto label3;

        $r15 = interfaceinvoke r1.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndClear()>();

        goto label4;

     label3:
        $r15 = r1;

     label4:
        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r15;

        $r5 = new java.util.IdentityHashMap;

        specialinvoke $r5.<java.util.IdentityHashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.IdentityHashMap mediaSourceByMediaPeriod> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Map mediaSourceByUid> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders> = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set nextTimelineUpdateOnCompletionActions> = $r9;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set pendingOnCompletionActions> = $r10;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set enabledMediaSourceHolders> = $r11;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean isAtomic> = z0;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean useLazyPreparation> = z1;

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addMediaSources(java.util.Collection)>($r12);

        return;
    }

    public synchronized androidx.media3.common.Timeline getInitialTimeline()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ShuffleOrder r1, $r2, $r6, $r7, $r9;
        int $i0, $i1, $i2;
        java.util.List $r3, $r5, $r8;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline $r4;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $i0 = interfaceinvoke $r2.<androidx.media3.exoplayer.source.ShuffleOrder: int getLength()>();

        $r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        $r6 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $r7 = interfaceinvoke $r6.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndClear()>();

        $r8 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = interfaceinvoke $r7.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndInsert(int,int)>(0, $i2);

        goto label2;

     label1:
        $r9 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

     label2:
        r1 = $r9;

        $r4 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        $r5 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $z0 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean isAtomic>;

        specialinvoke $r4.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: void <init>(java.util.Collection,androidx.media3.exoplayer.source.ShuffleOrder,boolean)>($r5, r1, $z0);

        return $r4;
    }

    public boolean isSingleWindow()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        return 0;
    }

    public synchronized void addMediaSource(androidx.media3.exoplayer.source.MediaSource)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource;

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addMediaSource(int,androidx.media3.exoplayer.source.MediaSource)>($i0, r1);

        return;
    }

    public synchronized void addMediaSource(androidx.media3.exoplayer.source.MediaSource, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource r1;
        android.os.Handler r2;
        java.lang.Runnable r3;
        java.util.List $r4;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.lang.Runnable;

        $r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addMediaSource(int,androidx.media3.exoplayer.source.MediaSource,android.os.Handler,java.lang.Runnable)>($i0, r1, r2, r3);

        return;
    }

    public synchronized void addMediaSource(int, androidx.media3.exoplayer.source.MediaSource)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource r1;
        java.util.List $r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addPublicMediaSources(int,java.util.Collection,android.os.Handler,java.lang.Runnable)>(i0, $r2, null, null);

        return;
    }

    public synchronized void addMediaSource(int, androidx.media3.exoplayer.source.MediaSource, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource r1;
        android.os.Handler r2;
        java.lang.Runnable r3;
        java.util.List $r4;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: java.lang.Runnable;

        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addPublicMediaSources(int,java.util.Collection,android.os.Handler,java.lang.Runnable)>(i0, $r4, r2, r3);

        return;
    }

    public synchronized void addMediaSources(java.util.Collection)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.Collection r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addPublicMediaSources(int,java.util.Collection,android.os.Handler,java.lang.Runnable)>($i0, r1, null, null);

        return;
    }

    public synchronized void addMediaSources(java.util.Collection, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.Collection r1;
        android.os.Handler r2;
        java.lang.Runnable r3;
        java.util.List $r4;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.lang.Runnable;

        $r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addPublicMediaSources(int,java.util.Collection,android.os.Handler,java.lang.Runnable)>($i0, r1, r2, r3);

        return;
    }

    public synchronized void addMediaSources(int, java.util.Collection)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0;
        java.util.Collection r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addPublicMediaSources(int,java.util.Collection,android.os.Handler,java.lang.Runnable)>(i0, r1, null, null);

        return;
    }

    public synchronized void addMediaSources(int, java.util.Collection, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0;
        java.util.Collection r1;
        android.os.Handler r2;
        java.lang.Runnable r3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: java.lang.Runnable;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addPublicMediaSources(int,java.util.Collection,android.os.Handler,java.lang.Runnable)>(i0, r1, r2, r3);

        return;
    }

    public synchronized androidx.media3.exoplayer.source.MediaSource removeMediaSource(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, $i1;
        androidx.media3.exoplayer.source.MediaSource r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.MediaSource getMediaSource(int)>(i0);

        $i1 = i0 + 1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void removePublicMediaSources(int,int,android.os.Handler,java.lang.Runnable)>(i0, $i1, null, null);

        return r1;
    }

    public synchronized androidx.media3.exoplayer.source.MediaSource removeMediaSource(int, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, $i1;
        android.os.Handler r1;
        java.lang.Runnable r2;
        androidx.media3.exoplayer.source.MediaSource r3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: java.lang.Runnable;

        r3 = virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.MediaSource getMediaSource(int)>(i0);

        $i1 = i0 + 1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void removePublicMediaSources(int,int,android.os.Handler,java.lang.Runnable)>(i0, $i1, r1, r2);

        return r3;
    }

    public synchronized void removeMediaSourceRange(int, int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void removePublicMediaSources(int,int,android.os.Handler,java.lang.Runnable)>(i0, i1, null, null);

        return;
    }

    public synchronized void removeMediaSourceRange(int, int, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, i1;
        android.os.Handler r1;
        java.lang.Runnable r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Handler;

        r2 := @parameter3: java.lang.Runnable;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void removePublicMediaSources(int,int,android.os.Handler,java.lang.Runnable)>(i0, i1, r1, r2);

        return;
    }

    public synchronized void moveMediaSource(int, int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void movePublicMediaSource(int,int,android.os.Handler,java.lang.Runnable)>(i0, i1, null, null);

        return;
    }

    public synchronized void moveMediaSource(int, int, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, i1;
        android.os.Handler r1;
        java.lang.Runnable r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Handler;

        r2 := @parameter3: java.lang.Runnable;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void movePublicMediaSource(int,int,android.os.Handler,java.lang.Runnable)>(i0, i1, r1, r2);

        return;
    }

    public synchronized void clear()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int getSize()>();

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void removeMediaSourceRange(int,int)>(0, $i0);

        return;
    }

    public synchronized void clear(android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        android.os.Handler r1;
        java.lang.Runnable r2;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: java.lang.Runnable;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int getSize()>();

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void removeMediaSourceRange(int,int,android.os.Handler,java.lang.Runnable)>(0, $i0, r1, r2);

        return;
    }

    public synchronized int getSize()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public synchronized androidx.media3.exoplayer.source.MediaSource getMediaSource(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder $r3;
        androidx.media3.exoplayer.source.MaskingMediaSource $r4;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r2;

        $r4 = $r3.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        return $r4;
    }

    public synchronized void setShuffleOrder(androidx.media3.exoplayer.source.ShuffleOrder)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ShuffleOrder r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ShuffleOrder;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void setPublicShuffleOrder(androidx.media3.exoplayer.source.ShuffleOrder,android.os.Handler,java.lang.Runnable)>(r1, null, null);

        return;
    }

    public synchronized void setShuffleOrder(androidx.media3.exoplayer.source.ShuffleOrder, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ShuffleOrder r1;
        android.os.Handler r2;
        java.lang.Runnable r3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ShuffleOrder;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.lang.Runnable;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void setPublicShuffleOrder(androidx.media3.exoplayer.source.ShuffleOrder,android.os.Handler,java.lang.Runnable)>(r1, r2, r3);

        return;
    }

    public androidx.media3.common.MediaItem getMediaItem()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        $r1 = <androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM>;

        return $r1;
    }

    protected synchronized void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.datasource.TransferListener r1;
        android.os.Handler $r2;
        android.os.Handler$Callback $r3;
        java.util.List $r4, $r5, $r8;
        boolean $z0;
        androidx.media3.exoplayer.source.ShuffleOrder $r6, $r7;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void prepareSourceInternal(androidx.media3.datasource.TransferListener)>(r1);

        $r2 = new android.os.Handler;

        $r3 = dynamicinvoke "handleMessage" <android.os.Handler$Callback (androidx.media3.exoplayer.source.ConcatenatingMediaSource)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(android.os.Message), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean handleMessage(android.os.Message)>, methodtype: boolean __METHODTYPE__(android.os.Message));

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Handler$Callback)>($r3);

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler> = $r2;

        $r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void updateTimelineAndScheduleOnCompletionActions()>();

        goto label2;

     label1:
        $r6 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $r5 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r7 = interfaceinvoke $r6.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndInsert(int,int)>(0, $i0);

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r7;

        $r8 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addMediaSourcesInternal(int,java.util.Collection)>(0, $r8);

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void scheduleTimelineUpdate()>();

     label2:
        return;
    }

    protected void enableInternal()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1, r4;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0;
        java.lang.Object r3, $r6, $r7, $r8, $r10;
        androidx.media3.exoplayer.source.MaskingMediaPeriod r5;
        java.util.Map $r9;
        java.util.List $r11;
        androidx.media3.exoplayer.source.MaskingMediaSource $r12, $r17;
        java.util.IdentityHashMap $r13;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder $r15, r18;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource $r16;
        boolean $z1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        $r6 = r1.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        r3 = staticinvoke <androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.lang.Object getMediaSourceHolderUid(java.lang.Object)>($r6);

        $r7 = r1.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        $r8 = staticinvoke <androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.lang.Object getChildPeriodUid(java.lang.Object)>($r7);

        r4 = virtualinvoke r1.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId copyWithPeriodUid(java.lang.Object)>($r8);

        $r9 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Map mediaSourceByUid>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r18 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r10;

        if r18 != null goto label1;

        $r15 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        $r16 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        specialinvoke $r16.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource: void <init>(androidx.media3.exoplayer.source.ConcatenatingMediaSource$1)>(null);

        $z1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean useLazyPreparation>;

        specialinvoke $r15.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: void <init>(androidx.media3.exoplayer.source.MediaSource,boolean)>($r16, $z1);

        r18 = $r15;

        r18.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: boolean isRemoved> = 1;

        $r17 = r18.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void prepareChildSource(java.lang.Object,androidx.media3.exoplayer.source.MediaSource)>(r18, $r17);

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void enableMediaSource(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder)>(r18);

        $r11 = r18.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r12 = r18.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        r5 = virtualinvoke $r12.<androidx.media3.exoplayer.source.MaskingMediaSource: androidx.media3.exoplayer.source.MaskingMediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long)>(r4, r2, l0);

        $r13 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.IdentityHashMap mediaSourceByMediaPeriod>;

        virtualinvoke $r13.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r18);

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void disableUnusedMediaSources()>();

        return r5;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r2, $r5;
        java.util.IdentityHashMap $r3, $r11;
        java.lang.Object $r4, $r6;
        androidx.media3.exoplayer.source.MaskingMediaSource $r7;
        androidx.media3.exoplayer.source.MaskingMediaPeriod $r8;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r9;
        java.util.List $r10;
        boolean $z1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.IdentityHashMap mediaSourceByMediaPeriod>;

        $r4 = virtualinvoke $r3.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r5 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r4;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r2 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r6;

        $r7 = r2.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        virtualinvoke $r7.<androidx.media3.exoplayer.source.MaskingMediaSource: void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)>(r1);

        $r10 = r2.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds>;

        $r8 = (androidx.media3.exoplayer.source.MaskingMediaPeriod) r1;

        $r9 = $r8.<androidx.media3.exoplayer.source.MaskingMediaPeriod: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId id>;

        interfaceinvoke $r10.<java.util.List: boolean remove(java.lang.Object)>($r9);

        $r11 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.IdentityHashMap mediaSourceByMediaPeriod>;

        $z1 = virtualinvoke $r11.<java.util.IdentityHashMap: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void disableUnusedMediaSources()>();

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void maybeReleaseChildSource(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder)>(r2);

        return;
    }

    protected void disableInternal()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.Set $r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void disableInternal()>();

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set enabledMediaSourceHolders>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

        return;
    }

    protected synchronized void releaseSourceInternal()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.List $r1;
        java.util.Set $r2, $r7, $r8;
        java.util.Map $r3;
        androidx.media3.exoplayer.source.ShuffleOrder $r4, $r5;
        android.os.Handler $r6, $r9;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void releaseSourceInternal()>();

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set enabledMediaSourceHolders>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        $r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Map mediaSourceByUid>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        $r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $r5 = interfaceinvoke $r4.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndClear()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r5;

        $r6 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler>;

        if $r6 == null goto label1;

        $r9 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler>;

        virtualinvoke $r9.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler> = null;

     label1:
        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean timelineUpdateScheduled> = 0;

        $r7 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set nextTimelineUpdateOnCompletionActions>;

        interfaceinvoke $r7.<java.util.Set: void clear()>();

        $r8 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set pendingOnCompletionActions>;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void dispatchOnCompletionActions(java.util.Set)>($r8);

        return;
    }

    protected void onChildSourceInfoRefreshed(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder, androidx.media3.exoplayer.source.MediaSource, androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1;
        androidx.media3.exoplayer.source.MediaSource r2;
        androidx.media3.common.Timeline r3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        r3 := @parameter2: androidx.media3.common.Timeline;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void updateMediaSourceInternal(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder,androidx.media3.common.Timeline)>(r1, r3);

        return;
    }

    protected androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r2, $r7, $r9;
        java.lang.Object r3, $r6, $r8;
        java.util.List $r4, $r5;
        int $i0, i4;
        long $l1, $l2;
        byte $b3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        i4 = 0;

     label1:
        $r4 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i4 >= $i0 goto label3;

        $r5 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i4);

        $r7 = (androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) $r6;

        $l2 = $r7.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: long windowSequenceNumber>;

        $l1 = r2.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: long windowSequenceNumber>;

        $b3 = $l2 cmp $l1;

        if $b3 != 0 goto label2;

        $r8 = r2.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        r3 = staticinvoke <androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.lang.Object getPeriodUid(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder,java.lang.Object)>(r1, $r8);

        $r9 = virtualinvoke r2.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId copyWithPeriodUid(java.lang.Object)>(r3);

        return $r9;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return null;
    }

    protected int getWindowIndexForChildWindowIndex(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder, int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1;
        int i0, $i1, $i2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        i0 := @parameter1: int;

        $i1 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild>;

        $i2 = i0 + $i1;

        return $i2;
    }

    private void addPublicMediaSources(int, java.util.Collection, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, $i1;
        java.util.Collection r1;
        android.os.Handler r2, r4;
        java.lang.Runnable r3;
        androidx.media3.exoplayer.source.MediaSource r5, r15;
        java.util.ArrayList $r6, r16;
        boolean $z0, $z3, $z4, $z6, $z7, $z8, $z9;
        java.util.List $r7;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData $r8;
        android.os.Message $r9;
        java.lang.Object $r10, $r12;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder $r11;
        java.util.Iterator r14, r17;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r18;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: java.lang.Runnable;

        if r2 != null goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        if r3 != null goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        if $z6 != $z7 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z8);

        r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler>;

        r14 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z9 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label08;

        $r12 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (androidx.media3.exoplayer.source.MediaSource) $r12;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r15);

        goto label07;

     label08:
        $r6 = new java.util.ArrayList;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        r16 = $r6;

        r17 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r10 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.media3.exoplayer.source.MediaSource) $r10;

        $r11 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        $z4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean useLazyPreparation>;

        specialinvoke $r11.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: void <init>(androidx.media3.exoplayer.source.MediaSource,boolean)>(r5, $z4);

        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label09;

     label10:
        $r7 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        interfaceinvoke $r7.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, r16);

        if r4 == null goto label11;

        $z3 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label11;

        r18 = specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable createOnCompletionAction(android.os.Handler,java.lang.Runnable)>(r2, r3);

        $r8 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData;

        specialinvoke $r8.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: void <init>(int,java.lang.Object,androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>(i0, r16, r18);

        $r9 = virtualinvoke r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, $r8);

        virtualinvoke $r9.<android.os.Message: void sendToTarget()>();

        goto label12;

     label11:
        if r3 == null goto label12;

        if r2 == null goto label12;

        virtualinvoke r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r3);

     label12:
        return;
    }

    private void removePublicMediaSources(int, int, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, i1;
        android.os.Handler r1, r3;
        java.lang.Runnable r2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r4;
        java.util.List $r5;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData $r6;
        java.lang.Integer $r7;
        android.os.Message $r8;
        boolean $z1, $z2, $z3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Handler;

        r2 := @parameter3: java.lang.Runnable;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if r2 != null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        if $z1 != $z2 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z3);

        r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler>;

        $r5 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        staticinvoke <androidx.media3.common.util.Util: void removeRange(java.util.List,int,int)>($r5, i0, i1);

        if r3 == null goto label7;

        r4 = specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable createOnCompletionAction(android.os.Handler,java.lang.Runnable)>(r1, r2);

        $r6 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r6.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: void <init>(int,java.lang.Object,androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>(i0, $r7, r4);

        $r8 = virtualinvoke r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r6);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

        goto label8;

     label7:
        if r2 == null goto label8;

        if r1 == null goto label8;

        virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>(r2);

     label8:
        return;
    }

    private void movePublicMediaSource(int, int, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, i1;
        android.os.Handler r1, r3;
        java.lang.Runnable r2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r4;
        java.util.List $r5, $r6;
        java.lang.Object $r7;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder $r8;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData $r9;
        java.lang.Integer $r10;
        android.os.Message $r11;
        boolean $z1, $z2, $z3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Handler;

        r2 := @parameter3: java.lang.Runnable;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if r2 != null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        if $z1 != $z2 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z3);

        r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler>;

        $r6 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $r5 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourcesPublic>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(i0);

        $r8 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r7;

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>(i1, $r8);

        if r3 == null goto label7;

        r4 = specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable createOnCompletionAction(android.os.Handler,java.lang.Runnable)>(r1, r2);

        $r9 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r9.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: void <init>(int,java.lang.Object,androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>(i0, $r10, r4);

        $r11 = virtualinvoke r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r9);

        virtualinvoke $r11.<android.os.Message: void sendToTarget()>();

        goto label8;

     label7:
        if r2 == null goto label8;

        if r1 == null goto label8;

        virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>(r2);

     label8:
        return;
    }

    private void setPublicShuffleOrder(androidx.media3.exoplayer.source.ShuffleOrder, android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        android.os.Handler r1, r3;
        java.lang.Runnable r2;
        int i0, $i1, $i2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r4;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData $r6;
        android.os.Message $r7;
        androidx.media3.exoplayer.source.ShuffleOrder $r8, r9, $r10;
        boolean $z1, $z2, $z3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r9 := @parameter0: androidx.media3.exoplayer.source.ShuffleOrder;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: java.lang.Runnable;

        if r1 != null goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        if r2 != null goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        if $z1 != $z2 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z3);

        r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler>;

        if r3 == null goto label08;

        i0 = virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int getSize()>();

        $i2 = interfaceinvoke r9.<androidx.media3.exoplayer.source.ShuffleOrder: int getLength()>();

        if $i2 == i0 goto label07;

        $r8 = interfaceinvoke r9.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndClear()>();

        r9 = interfaceinvoke $r8.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndInsert(int,int)>(0, i0);

     label07:
        r4 = specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable createOnCompletionAction(android.os.Handler,java.lang.Runnable)>(r1, r2);

        $r6 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData;

        specialinvoke $r6.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: void <init>(int,java.lang.Object,androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>(0, r9, r4);

        $r7 = virtualinvoke r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r6);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        goto label11;

     label08:
        $i1 = interfaceinvoke r9.<androidx.media3.exoplayer.source.ShuffleOrder: int getLength()>();

        if $i1 <= 0 goto label09;

        $r10 = interfaceinvoke r9.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndClear()>();

        goto label10;

     label09:
        $r10 = r9;

     label10:
        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r10;

        if r2 == null goto label11;

        if r1 == null goto label11;

        virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>(r2);

     label11:
        return;
    }

    private androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable createOnCompletionAction(android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        android.os.Handler r1;
        java.lang.Runnable r2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r3, $r4;
        java.util.Set $r5;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: java.lang.Runnable;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable;

        specialinvoke $r4.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable: void <init>(android.os.Handler,java.lang.Runnable)>(r1, r2);

        r3 = $r4;

        $r5 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set pendingOnCompletionActions>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3);

        return r3;
    }

    private boolean handleMessage(android.os.Message)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        android.os.Message r1;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData r2, r3, r4, r44;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        java.util.Set r5;
        java.lang.Object $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r17, $r21, $r24, $r25, $r26, $r34, $r35, $r36, $r40;
        androidx.media3.exoplayer.source.ShuffleOrder $r11, $r15, $r16, $r19, $r20, $r28, $r29, $r31, $r32, $r33, $r38, $r39;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable $r12, $r23, $r30, $r42;
        java.lang.Integer $r18, $r22, $r27;
        java.util.Collection $r37, $r41;
        java.lang.IllegalStateException $r43;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: android.os.Message;

        $i2 = r1.<android.os.Message: int what>;

        tableswitch($i2)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label10;
            default: goto label11;
        };

     label01:
        $r34 = r1.<android.os.Message: java.lang.Object obj>;

        $r35 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r34);

        r2 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData) $r35;

        $r38 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $i10 = r2.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: int index>;

        $r36 = r2.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: java.lang.Object customData>;

        $r37 = (java.util.Collection) $r36;

        $i11 = interfaceinvoke $r37.<java.util.Collection: int size()>();

        $r39 = interfaceinvoke $r38.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndInsert(int,int)>($i10, $i11);

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r39;

        $i12 = r2.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: int index>;

        $r40 = r2.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: java.lang.Object customData>;

        $r41 = (java.util.Collection) $r40;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addMediaSourcesInternal(int,java.util.Collection)>($i12, $r41);

        $r42 = r2.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable onCompletionAction>;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void scheduleTimelineUpdate(androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>($r42);

        goto label12;

     label02:
        $r24 = r1.<android.os.Message: java.lang.Object obj>;

        $r25 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r24);

        r3 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData) $r25;

        i0 = r3.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: int index>;

        $r26 = r3.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: java.lang.Object customData>;

        $r27 = (java.lang.Integer) $r26;

        i1 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        if i0 != 0 goto label03;

        $r31 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $i9 = interfaceinvoke $r31.<androidx.media3.exoplayer.source.ShuffleOrder: int getLength()>();

        if i1 != $i9 goto label03;

        $r32 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $r33 = interfaceinvoke $r32.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndClear()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r33;

        goto label04;

     label03:
        $r28 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $r29 = interfaceinvoke $r28.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndRemove(int,int)>(i0, i1);

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r29;

     label04:
        i13 = i1 - 1;

     label05:
        if i13 < i0 goto label06;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void removeMediaSourceInternal(int)>(i13);

        i13 = i13 + -1;

        goto label05;

     label06:
        $r30 = r3.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable onCompletionAction>;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void scheduleTimelineUpdate(androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>($r30);

        goto label12;

     label07:
        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        $r14 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r13);

        r44 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData) $r14;

        $r15 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $i5 = r44.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: int index>;

        $i3 = r44.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: int index>;

        $i4 = $i3 + 1;

        $r16 = interfaceinvoke $r15.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndRemove(int,int)>($i5, $i4);

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r16;

        $r19 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $r17 = r44.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: java.lang.Object customData>;

        $r18 = (java.lang.Integer) $r17;

        $i6 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $r20 = interfaceinvoke $r19.<androidx.media3.exoplayer.source.ShuffleOrder: androidx.media3.exoplayer.source.ShuffleOrder cloneAndInsert(int,int)>($i6, 1);

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r20;

        $i7 = r44.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: int index>;

        $r21 = r44.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: java.lang.Object customData>;

        $r22 = (java.lang.Integer) $r21;

        $i8 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void moveMediaSourceInternal(int,int)>($i7, $i8);

        $r23 = r44.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable onCompletionAction>;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void scheduleTimelineUpdate(androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>($r23);

        goto label12;

     label08:
        $r8 = r1.<android.os.Message: java.lang.Object obj>;

        $r9 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r8);

        r4 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData) $r9;

        $r10 = r4.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: java.lang.Object customData>;

        $r11 = (androidx.media3.exoplayer.source.ShuffleOrder) $r10;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = $r11;

        $r12 = r4.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable onCompletionAction>;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void scheduleTimelineUpdate(androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>($r12);

        goto label12;

     label09:
        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void updateTimelineAndScheduleOnCompletionActions()>();

        goto label12;

     label10:
        $r6 = r1.<android.os.Message: java.lang.Object obj>;

        $r7 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r6);

        r5 = (java.util.Set) $r7;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void dispatchOnCompletionActions(java.util.Set)>(r5);

        goto label12;

     label11:
        $r43 = new java.lang.IllegalStateException;

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>()>();

        throw $r43;

     label12:
        return 1;
    }

    private void scheduleTimelineUpdate()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void scheduleTimelineUpdate(androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)>(null);

        return;
    }

    private void scheduleTimelineUpdate(androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r1;
        boolean $z0;
        java.util.Set $r2;
        android.os.Handler $r3;
        android.os.Message $r4;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable;

        $z0 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean timelineUpdateScheduled>;

        if $z0 != 0 goto label1;

        $r3 = specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler getPlaybackThreadHandlerOnPlaybackThread()>();

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean timelineUpdateScheduled> = 1;

     label1:
        if r1 == null goto label2;

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set nextTimelineUpdateOnCompletionActions>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    private void updateTimelineAndScheduleOnCompletionActions()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.Set r1;
        java.util.HashSet $r2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline $r3;
        boolean $z0;
        androidx.media3.exoplayer.source.ShuffleOrder $r4;
        java.util.List $r5;
        android.os.Handler $r6;
        android.os.Message $r7;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean timelineUpdateScheduled> = 0;

        r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set nextTimelineUpdateOnCompletionActions>;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set nextTimelineUpdateOnCompletionActions> = $r2;

        $r3 = new androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        $r5 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $z0 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean isAtomic>;

        specialinvoke $r3.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: void <init>(java.util.Collection,androidx.media3.exoplayer.source.ShuffleOrder,boolean)>($r5, $r4, $z0);

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void refreshSourceInfo(androidx.media3.common.Timeline)>($r3);

        $r6 = specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler getPlaybackThreadHandlerOnPlaybackThread()>();

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(5, r1);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        return;
    }

    private android.os.Handler getPlaybackThreadHandlerOnPlaybackThread()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        android.os.Handler $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: android.os.Handler playbackThreadHandler>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (android.os.Handler) $r2;

        return $r3;
    }

    private synchronized void dispatchOnCompletionActions(java.util.Set)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.Set r1, $r4;
        java.util.Iterator r2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r3;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: java.util.Set;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable) $r5;

        virtualinvoke r3.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable: void dispatch()>();

        goto label1;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set pendingOnCompletionActions>;

        interfaceinvoke $r4.<java.util.Set: boolean removeAll(java.util.Collection)>(r1);

        return;
    }

    private void addMediaSourcesInternal(int, java.util.Collection)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0, i1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i1 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r4;

        $i0 = i1;

        i1 = i1 + 1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void addMediaSourceInternal(int,androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder)>($i0, r3);

        goto label1;

     label2:
        return;
    }

    private void addMediaSourceInternal(int, androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1, r14;
        androidx.media3.common.Timeline r2, r15;
        androidx.media3.exoplayer.source.MaskingMediaSource $r3, $r8, $r13;
        java.util.List $r4, $r11;
        java.lang.Object $r5, $r12;
        java.util.Map $r6;
        boolean $z0, $z1;
        java.util.IdentityHashMap $r9;
        java.util.Set $r10;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        if i0 <= 0 goto label1;

        $r11 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $i2 = i0 - 1;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i2);

        r14 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r12;

        $r13 = r14.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        r2 = virtualinvoke $r13.<androidx.media3.exoplayer.source.MaskingMediaSource: androidx.media3.common.Timeline getTimeline()>();

        $i3 = r14.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild>;

        $i4 = virtualinvoke r2.<androidx.media3.common.Timeline: int getWindowCount()>();

        $i5 = $i3 + $i4;

        virtualinvoke r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: void reset(int,int)>(i0, $i5);

        goto label2;

     label1:
        virtualinvoke r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: void reset(int,int)>(i0, 0);

     label2:
        $r3 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        r15 = virtualinvoke $r3.<androidx.media3.exoplayer.source.MaskingMediaSource: androidx.media3.common.Timeline getTimeline()>();

        $i1 = virtualinvoke r15.<androidx.media3.common.Timeline: int getWindowCount()>();

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void correctOffsets(int,int,int)>(i0, 1, $i1);

        $r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        $r6 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Map mediaSourceByUid>;

        $r5 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.lang.Object uid>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        $r8 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void prepareChildSource(java.lang.Object,androidx.media3.exoplayer.source.MediaSource)>(r1, $r8);

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $r9 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.IdentityHashMap mediaSourceByMediaPeriod>;

        $z1 = virtualinvoke $r9.<java.util.IdentityHashMap: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $r10 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set enabledMediaSourceHolders>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r1);

        goto label4;

     label3:
        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void disableChildSource(java.lang.Object)>(r1);

     label4:
        return;
    }

    private void updateMediaSourceInternal(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder, androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1, r3;
        androidx.media3.common.Timeline r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.List $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        r2 := @parameter1: androidx.media3.common.Timeline;

        $i1 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int childIndex>;

        $i2 = $i1 + 1;

        $r4 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $i3 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i2 >= $i3 goto label1;

        $r5 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $i4 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int childIndex>;

        $i5 = $i4 + 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i5);

        r3 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r6;

        $i6 = virtualinvoke r2.<androidx.media3.common.Timeline: int getWindowCount()>();

        $i8 = r3.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild>;

        $i7 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild>;

        $i9 = $i8 - $i7;

        i0 = $i6 - $i9;

        if i0 == 0 goto label1;

        $i10 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int childIndex>;

        $i11 = $i10 + 1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void correctOffsets(int,int,int)>($i11, 0, i0);

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void scheduleTimelineUpdate()>();

        return;
    }

    private void removeMediaSourceInternal(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, $i1, $i2;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1;
        androidx.media3.common.Timeline r2;
        java.util.List $r3;
        java.lang.Object $r4, $r5;
        java.util.Map $r6;
        androidx.media3.exoplayer.source.MaskingMediaSource $r8;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(i0);

        r1 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r4;

        $r6 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Map mediaSourceByUid>;

        $r5 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.lang.Object uid>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        $r8 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        r2 = virtualinvoke $r8.<androidx.media3.exoplayer.source.MaskingMediaSource: androidx.media3.common.Timeline getTimeline()>();

        $i1 = virtualinvoke r2.<androidx.media3.common.Timeline: int getWindowCount()>();

        $i2 = neg $i1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void correctOffsets(int,int,int)>(i0, -1, $i2);

        r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: boolean isRemoved> = 1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void maybeReleaseChildSource(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder)>(r1);

        return;
    }

    private void moveMediaSourceInternal(int, int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, i1, i2, i3, $i4, i5, i6;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1, $r4, $r8;
        java.util.List $r2, $r5, $r6, $r9;
        java.lang.Object $r3, $r7, $r10;
        androidx.media3.exoplayer.source.MaskingMediaSource $r11;
        androidx.media3.common.Timeline $r12;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r4 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r3;

        i5 = $r4.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild>;

        $r6 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $r5 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(i0);

        $r8 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r7;

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>(i1, $r8);

        i6 = i2;

     label1:
        if i6 > i3 goto label2;

        $r9 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i6);

        r1 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r10;

        r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int childIndex> = i6;

        r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild> = i5;

        $r11 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        $r12 = virtualinvoke $r11.<androidx.media3.exoplayer.source.MaskingMediaSource: androidx.media3.common.Timeline getTimeline()>();

        $i4 = virtualinvoke $r12.<androidx.media3.common.Timeline: int getWindowCount()>();

        i5 = i5 + $i4;

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    private void correctOffsets(int, int, int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i8 = i0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i8 >= $i3 goto label2;

        $r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.List mediaSourceHolders>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i8);

        r1 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r4;

        $i4 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int childIndex>;

        $i5 = $i4 + i1;

        r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int childIndex> = $i5;

        $i6 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild>;

        $i7 = $i6 + i2;

        r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild> = $i7;

        i8 = i8 + 1;

        goto label1;

     label2:
        return;
    }

    private void maybeReleaseChildSource(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1;
        boolean $z0, $z1;
        java.util.List $r2;
        java.util.Set $r3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        $z0 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: boolean isRemoved>;

        if $z0 == 0 goto label1;

        $r2 = r1.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set enabledMediaSourceHolders>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void releaseChildSource(java.lang.Object)>(r1);

     label1:
        return;
    }

    private void enableMediaSource(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r1;
        java.util.Set $r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set enabledMediaSourceHolders>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void enableChildSource(java.lang.Object)>(r1);

        return;
    }

    private void disableUnusedMediaSources()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.util.Iterator r1;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r2;
        java.util.Set $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.util.List $r5;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        $r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: java.util.Set enabledMediaSourceHolders>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r4;

        $r5 = r2.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds>;

        $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void disableChildSource(java.lang.Object)>(r2);

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private static java.lang.Object getMediaSourceHolderUid(java.lang.Object)
    {
        java.lang.Object r0, $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.lang.Object getChildTimelineUidFromConcatenatedUid(java.lang.Object)>(r0);

        return $r1;
    }

    private static java.lang.Object getChildPeriodUid(java.lang.Object)
    {
        java.lang.Object r0, $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.lang.Object getChildPeriodUidFromConcatenatedUid(java.lang.Object)>(r0);

        return $r1;
    }

    private static java.lang.Object getPeriodUid(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder, java.lang.Object)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r0;
        java.lang.Object r1, $r2, $r3;

        r0 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.lang.Object uid>;

        $r3 = staticinvoke <androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.lang.Object getConcatenatedUid(java.lang.Object,java.lang.Object)>($r2, r1);

        return $r3;
    }

    protected volatile androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Object, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.lang.Object r1;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r2, $r4;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder $r3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r3 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) r1;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>($r3, r2);

        return $r4;
    }

    protected volatile int getWindowIndexForChildWindowIndex(java.lang.Object, int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.lang.Object r1;
        int i0, $i1;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder $r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) r1;

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: int getWindowIndexForChildWindowIndex(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder,int)>($r2, i0);

        return $i1;
    }

    protected volatile void onChildSourceInfoRefreshed(java.lang.Object, androidx.media3.exoplayer.source.MediaSource, androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource r0;
        java.lang.Object r1;
        androidx.media3.exoplayer.source.MediaSource r2;
        androidx.media3.common.Timeline r3;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder $r4;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        r3 := @parameter2: androidx.media3.common.Timeline;

        $r4 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource: void onChildSourceInfoRefreshed(androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline)>($r4, r2, r3);

        return;
    }

    static androidx.media3.common.MediaItem access$100()
    {
        androidx.media3.common.MediaItem $r0;

        $r0 = <androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.media3.common.MediaItem$Builder $r0, $r2;
        android.net.Uri $r1;
        androidx.media3.common.MediaItem $r3;

        $r0 = new androidx.media3.common.MediaItem$Builder;

        specialinvoke $r0.<androidx.media3.common.MediaItem$Builder: void <init>()>();

        $r1 = <android.net.Uri: android.net.Uri EMPTY>;

        $r2 = virtualinvoke $r0.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setUri(android.net.Uri)>($r1);

        $r3 = virtualinvoke $r2.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        <androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM> = $r3;

        return;
    }

androidx.media3.exoplayer.source.ConcatenatingMediaSource$1
androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int windowCount>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int periodCount>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstPeriodInChildIndices>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstWindowInChildIndices>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: androidx.media3.common.Timeline[] timelines>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.lang.Object[] uids>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.util.HashMap childIndexByUid>
    public void <init>(java.util.Collection, androidx.media3.exoplayer.source.ShuffleOrder, boolean)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        java.util.Collection r1;
        androidx.media3.exoplayer.source.ShuffleOrder r2;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        java.util.Iterator r3;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r4;
        int[] $r5, $r6, $r14, $r15;
        androidx.media3.common.Timeline[] $r7, $r12, $r16, $r18;
        java.lang.Object[] $r8, $r21, $r22;
        java.util.HashMap $r9, $r24;
        java.lang.Object $r10, $r20, $r23;
        androidx.media3.exoplayer.source.MaskingMediaSource $r11;
        androidx.media3.common.Timeline $r13, $r17, $r19;
        java.lang.Integer $r25;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: androidx.media3.exoplayer.source.ShuffleOrder;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.media3.exoplayer.AbstractConcatenatedTimeline: void <init>(boolean,androidx.media3.exoplayer.source.ShuffleOrder)>(z0, r2);

        i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $r5 = newarray (int)[i0];

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstPeriodInChildIndices> = $r5;

        $r6 = newarray (int)[i0];

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstWindowInChildIndices> = $r6;

        $r7 = newarray (androidx.media3.common.Timeline)[i0];

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: androidx.media3.common.Timeline[] timelines> = $r7;

        $r8 = newarray (java.lang.Object)[i0];

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.lang.Object[] uids> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.util.HashMap childIndexByUid> = $r9;

        i4 = 0;

        i5 = 0;

        i6 = 0;

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder) $r10;

        $r12 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: androidx.media3.common.Timeline[] timelines>;

        $r11 = r4.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>;

        $r13 = virtualinvoke $r11.<androidx.media3.exoplayer.source.MaskingMediaSource: androidx.media3.common.Timeline getTimeline()>();

        $r12[i4] = $r13;

        $r14 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstWindowInChildIndices>;

        $r14[i4] = i5;

        $r15 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstPeriodInChildIndices>;

        $r15[i4] = i6;

        $r16 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: androidx.media3.common.Timeline[] timelines>;

        $r17 = $r16[i4];

        $i1 = virtualinvoke $r17.<androidx.media3.common.Timeline: int getWindowCount()>();

        i5 = i5 + $i1;

        $r18 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: androidx.media3.common.Timeline[] timelines>;

        $r19 = $r18[i4];

        $i2 = virtualinvoke $r19.<androidx.media3.common.Timeline: int getPeriodCount()>();

        i6 = i6 + $i2;

        $r21 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.lang.Object[] uids>;

        $r20 = r4.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.lang.Object uid>;

        $r21[i4] = $r20;

        $r24 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.util.HashMap childIndexByUid>;

        $r22 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.lang.Object[] uids>;

        $r23 = $r22[i4];

        $i3 = i4;

        i4 = i4 + 1;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r25);

        goto label1;

     label2:
        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int windowCount> = i5;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int periodCount> = i6;

        return;
    }

    protected int getChildIndexByPeriodIndex(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstPeriodInChildIndices>;

        $i1 = i0 + 1;

        $i2 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(int[],int,boolean,boolean)>($r1, $i1, 0, 0);

        return $i2;
    }

    protected int getChildIndexByWindowIndex(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstWindowInChildIndices>;

        $i1 = i0 + 1;

        $i2 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(int[],int,boolean,boolean)>($r1, $i1, 0, 0);

        return $i2;
    }

    protected int getChildIndexByChildUid(java.lang.Object)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        java.lang.Object r1, $r4;
        java.lang.Integer r2;
        java.util.HashMap $r3;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.util.HashMap childIndexByUid>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 != null goto label1;

        $i0 = -1;

        goto label2;

     label1:
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;
    }

    protected androidx.media3.common.Timeline getTimelineByChildIndex(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        int i0;
        androidx.media3.common.Timeline[] $r1;
        androidx.media3.common.Timeline $r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: androidx.media3.common.Timeline[] timelines>;

        $r2 = $r1[i0];

        return $r2;
    }

    protected int getFirstPeriodIndexByChildIndex(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstPeriodInChildIndices>;

        $i1 = $r1[i0];

        return $i1;
    }

    protected int getFirstWindowIndexByChildIndex(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int[] firstWindowInChildIndices>;

        $i1 = $r1[i0];

        return $i1;
    }

    protected java.lang.Object getChildUidByChildIndex(int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: java.lang.Object[] uids>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getWindowCount()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        $i0 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int windowCount>;

        return $i0;
    }

    public int getPeriodCount()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline;

        $i0 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$ConcatenatedTimeline: int periodCount>;

        return $i0;
    }

androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource
    private void <init>()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        specialinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void <init>()>();

        return;
    }

    protected void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource r0;
        androidx.media3.datasource.TransferListener r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        return;
    }

    public androidx.media3.common.MediaItem getMediaItem()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource r0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        $r1 = staticinvoke <androidx.media3.exoplayer.source.ConcatenatingMediaSource: androidx.media3.common.MediaItem access$100()>();

        return $r1;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        return;
    }

    public void maybeThrowSourceInfoRefreshError()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        return;
    }

    void <init>(androidx.media3.exoplayer.source.ConcatenatingMediaSource$1)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource r0;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$1 r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.ConcatenatingMediaSource$1;

        specialinvoke r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$FakeMediaSource: void <init>()>();

        return;
    }

androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable: android.os.Handler handler>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable: java.lang.Runnable runnable>
    public void <init>(android.os.Handler, java.lang.Runnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r0;
        android.os.Handler r1;
        java.lang.Runnable r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable: android.os.Handler handler> = r1;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable: java.lang.Runnable runnable> = r2;

        return;
    }

    public void dispatch()
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable;

        $r2 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable: android.os.Handler handler>;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable: java.lang.Runnable runnable>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.lang.Object uid>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int childIndex>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: boolean isRemoved>
    public void <init>(androidx.media3.exoplayer.source.MediaSource, boolean)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r0;
        androidx.media3.exoplayer.source.MediaSource r1;
        boolean z0;
        androidx.media3.exoplayer.source.MaskingMediaSource $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.media3.exoplayer.source.MaskingMediaSource;

        specialinvoke $r2.<androidx.media3.exoplayer.source.MaskingMediaSource: void <init>(androidx.media3.exoplayer.source.MediaSource,boolean)>(r1, z0);

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: androidx.media3.exoplayer.source.MaskingMediaSource mediaSource> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.lang.Object uid> = $r4;

        return;
    }

    public void reset(int, int)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder r0;
        int i0, i1;
        java.util.List $r1;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int childIndex> = i0;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: int firstWindowIndexInChild> = i1;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: boolean isRemoved> = 0;

        $r1 = r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MediaSourceHolder: java.util.List activeMediaPeriodIds>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: int index>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: java.lang.Object customData>
<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable onCompletionAction>
    public void <init>(int, java.lang.Object, androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable)
    {
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData r0;
        int i0;
        java.lang.Object r1;
        androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable r2;

        r0 := @this: androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: int index> = i0;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: java.lang.Object customData> = r1;

        r0.<androidx.media3.exoplayer.source.ConcatenatingMediaSource$MessageData: androidx.media3.exoplayer.source.ConcatenatingMediaSource$HandlerAndRunnable onCompletionAction> = r2;

        return;
    }

