androidx.compose.compiler.plugins.kotlin.lower.FunctionContext
<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.Set locals>
<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors>
<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: org.jetbrains.kotlin.ir.declarations.IrFunction declaration>
<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: boolean composable>
<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: boolean canRemember>
    public org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r1;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: org.jetbrains.kotlin.ir.declarations.IrFunction declaration>;

        $r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        return $r2;
    }

    public volatile org.jetbrains.kotlin.ir.symbols.IrSymbol getSymbol()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r1;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        $r1 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r2 = (org.jetbrains.kotlin.ir.symbols.IrSymbol) $r1;

        return $r2;
    }

    public androidx.compose.compiler.plugins.kotlin.lower.FunctionContext getFunctionContext()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        return r0;
    }

    public final java.util.Set getLocals()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        java.util.Set $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.Set locals>;

        return $r1;
    }

    public final java.util.List getCollectors()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors>;

        return $r1;
    }

    public final void setCollectors(java.util.List)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        java.util.List r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors> = r1;

        return;
    }

    public void declareLocal(org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration r1;
        java.util.Set $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration;

        if r1 == null goto label1;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.Set locals>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void recordCapture(org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration r1;
        java.util.List $r2, $r4;
        boolean $z0, $z1, $z2, z3, $z4;
        java.util.Set $r3;
        java.lang.Object $r5;
        java.util.Collection r6;
        java.util.Iterator r7;
        androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector r8;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration;

        if r1 == null goto label4;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors>;

        r6 = (java.util.Collection) $r2;

        z3 = 0;

        $z0 = interfaceinvoke r6.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label4;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.Set locals>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors>;

        r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r5 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector) $r5;

        virtualinvoke r8.<androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector: void recordCapture(org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>(r1);

        goto label3;

     label4:
        return;
    }

    public void pushCollector(androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "collector");

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void popCollector(androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector r1, $r4;
        boolean z0, z1, z2, z3, z4, z5;
        java.util.List $r2, $r5, $r6;
        java.lang.Object $r3;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, r11;
        java.lang.Throwable $r10;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "collector");

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors>;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object lastOrNull(java.util.List)>($r2);

        $r4 = (androidx.compose.compiler.plugins.kotlin.lower.CaptureCollector) $r3;

        z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, r1);

        z1 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        if z0 != 0 goto label1;

        z2 = 0;

        r11 = "Failed requirement.";

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        $r10 = (java.lang.Throwable) $r8;

        throw $r10;

     label1:
        $r6 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors>;

        $r5 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>($i1);

        return;
    }

    public final org.jetbrains.kotlin.ir.declarations.IrFunction getDeclaration()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: org.jetbrains.kotlin.ir.declarations.IrFunction declaration>;

        return $r1;
    }

    public boolean getComposable()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        boolean $z0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        $z0 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: boolean composable>;

        return $z0;
    }

    public final boolean getCanRemember()
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        boolean $z0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        $z0 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: boolean canRemember>;

        return $z0;
    }

    public void <init>(org.jetbrains.kotlin.ir.declarations.IrFunction, boolean, boolean)
    {
        androidx.compose.compiler.plugins.kotlin.lower.FunctionContext r0;
        org.jetbrains.kotlin.ir.declarations.IrFunction r1, $r9;
        boolean z0, z1, $z4;
        java.util.Iterator r2;
        java.lang.Object r3;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r4;
        java.util.LinkedHashSet $r5;
        java.util.Set $r6;
        java.util.ArrayList $r7;
        java.util.List $r8, $r10;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration $r11;
        java.lang.Iterable $r12;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.FunctionContext;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.DeclarationContext: void <init>()>();

        r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: org.jetbrains.kotlin.ir.declarations.IrFunction declaration> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: boolean composable> = z0;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: boolean canRemember> = z1;

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        $r6 = (java.util.Set) $r5;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.Set locals> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = (java.util.List) $r7;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: java.util.List collectors> = $r8;

        $r9 = r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: org.jetbrains.kotlin.ir.declarations.IrFunction declaration>;

        $r10 = interfaceinvoke $r9.<org.jetbrains.kotlin.ir.declarations.IrFunction: java.util.List getValueParameters()>();

        $r12 = (java.lang.Iterable) $r10;

        r2 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jetbrains.kotlin.ir.declarations.IrValueParameter) r3;

        $r11 = (org.jetbrains.kotlin.ir.declarations.IrValueDeclaration) r4;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.FunctionContext: void declareLocal(org.jetbrains.kotlin.ir.declarations.IrValueDeclaration)>($r11);

        goto label1;

     label2:
        return;
    }

