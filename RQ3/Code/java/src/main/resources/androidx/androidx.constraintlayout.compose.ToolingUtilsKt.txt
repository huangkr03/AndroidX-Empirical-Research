androidx.constraintlayout.compose.ToolingUtilsKt
<androidx.constraintlayout.compose.ToolingUtilsKt: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.constraintlayout.compose.ToolingUtilsKt: androidx.compose.ui.semantics.SemanticsPropertyKey DesignInfoDataKey>
<androidx.constraintlayout.compose.ToolingUtilsKt: androidx.compose.ui.semantics.SemanticsPropertyKey designInfoProvider$delegate>
<androidx.constraintlayout.compose.ToolingUtilsKt: int CONSTRAINTS_JSON_VERSION>
<androidx.constraintlayout.compose.ToolingUtilsKt: int CONSTRAINTS>
<androidx.constraintlayout.compose.ToolingUtilsKt: int BOUNDS>
    public static final androidx.compose.ui.semantics.SemanticsPropertyKey getDesignInfoDataKey()
    {
        androidx.compose.ui.semantics.SemanticsPropertyKey $r0;

        $r0 = <androidx.constraintlayout.compose.ToolingUtilsKt: androidx.compose.ui.semantics.SemanticsPropertyKey DesignInfoDataKey>;

        return $r0;
    }

    public static final androidx.constraintlayout.compose.DesignInfoProvider getDesignInfoProvider(androidx.compose.ui.semantics.SemanticsPropertyReceiver)
    {
        androidx.compose.ui.semantics.SemanticsPropertyReceiver $r0;
        kotlin.reflect.KProperty[] $r1;
        kotlin.reflect.KProperty $r2;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r3;
        java.lang.Object $r4;
        androidx.constraintlayout.compose.DesignInfoProvider $r5;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyReceiver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r3 = <androidx.constraintlayout.compose.ToolingUtilsKt: androidx.compose.ui.semantics.SemanticsPropertyKey designInfoProvider$delegate>;

        $r1 = <androidx.constraintlayout.compose.ToolingUtilsKt: kotlin.reflect.KProperty[] $$delegatedProperties>;

        $r2 = $r1[0];

        $r4 = virtualinvoke $r3.<androidx.compose.ui.semantics.SemanticsPropertyKey: java.lang.Object getValue(androidx.compose.ui.semantics.SemanticsPropertyReceiver,kotlin.reflect.KProperty)>($r0, $r2);

        $r5 = (androidx.constraintlayout.compose.DesignInfoProvider) $r4;

        return $r5;
    }

    public static final void setDesignInfoProvider(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.constraintlayout.compose.DesignInfoProvider)
    {
        androidx.compose.ui.semantics.SemanticsPropertyReceiver $r0;
        androidx.constraintlayout.compose.DesignInfoProvider r1;
        kotlin.reflect.KProperty[] $r2;
        kotlin.reflect.KProperty $r3;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r4;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyReceiver;

        r1 := @parameter1: androidx.constraintlayout.compose.DesignInfoProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        $r4 = <androidx.constraintlayout.compose.ToolingUtilsKt: androidx.compose.ui.semantics.SemanticsPropertyKey designInfoProvider$delegate>;

        $r2 = <androidx.constraintlayout.compose.ToolingUtilsKt: kotlin.reflect.KProperty[] $$delegatedProperties>;

        $r3 = $r2[0];

        virtualinvoke $r4.<androidx.compose.ui.semantics.SemanticsPropertyKey: void setValue(androidx.compose.ui.semantics.SemanticsPropertyReceiver,kotlin.reflect.KProperty,java.lang.Object)>($r0, $r3, r1);

        return;
    }

    public static void getDesignInfoProvider$annotations(androidx.compose.ui.semantics.SemanticsPropertyReceiver)
    {
        androidx.compose.ui.semantics.SemanticsPropertyReceiver $r0;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsPropertyReceiver;

        return;
    }

    public static final java.lang.String parseConstraintsToJson(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer, androidx.constraintlayout.compose.State, int, int, java.lang.String)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.compose.State r1;
        int i0, i1, $i2, $i3, i4, $i5;
        java.lang.String r2, r3, r7, r12, $r20, $r35;
        org.json.JSONObject r4, $r15, $r36, $r38, $r40, $r41, $r42, $r43, $r44;
        org.json.JSONArray r5, $r19, $r21;
        java.util.List r6, $r18;
        java.util.Iterator r8, r31;
        java.lang.Object r9, r32;
        androidx.constraintlayout.core.widgets.ConstraintAnchor r10, r13, $r23;
        androidx.constraintlayout.core.widgets.ConstraintWidget r11, $r17, r33;
        boolean z2, z3, $z4, $z5, z6, z7, z8, z9, z10, z11, $z13, $z14, $z16, z18, z19, $z20;
        java.lang.Integer $r14, $r28;
        java.lang.Number $r16;
        java.util.ArrayList $r22, $r29, $r34;
        androidx.constraintlayout.core.widgets.HelperWidget $r25;
        java.lang.Iterable $r26, $r30;
        java.lang.NullPointerException $r27;
        androidx.constraintlayout.core.widgets.ConstraintAnchor$Type $r37, $r39;

        r0 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter1: androidx.constraintlayout.compose.State;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "root");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "args");

        $r14 = <androidx.constraintlayout.core.state.State: java.lang.Integer PARENT>;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14);

        $r15 = new org.json.JSONObject;

        specialinvoke $r15.<org.json.JSONObject: void <init>()>();

        r4 = $r15;

        z6 = 0;

        z7 = 1;

        z8 = 0;

        z9 = 1;

        $r28 = staticinvoke <kotlin.text.StringsKt: java.lang.Integer toIntOrNull(java.lang.String)>(r2);

        if $r28 != null goto label01;

        goto label06;

     label01:
        z10 = 0;

        z11 = 0;

        $r16 = (java.lang.Number) $r28;

        i4 = virtualinvoke $r16.<java.lang.Number: int intValue()>();

        $i2 = i4 >> 1;

        if $i2 != 1 goto label02;

        $z13 = 1;

        goto label03;

     label02:
        $z13 = 0;

     label03:
        z9 = $z13;

        $i3 = i4 >> 0;

        if $i3 != 1 goto label04;

        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        z7 = $z14;

     label06:
        $r29 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList getChildren()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "root.children");

        $r30 = (java.lang.Iterable) $r29;

        r31 = interfaceinvoke $r30.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z16 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label16;

        r32 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r33 = (androidx.constraintlayout.core.widgets.ConstraintWidget) r32;

        $r21 = new org.json.JSONArray;

        specialinvoke $r21.<org.json.JSONArray: void <init>()>();

        r5 = $r21;

        z18 = 0;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r6 = (java.util.List) $r22;

        z19 = r33 instanceof androidx.constraintlayout.core.widgets.HelperWidget;

        r7 = r33.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.String stringId>;

        if z19 == 0 goto label09;

        if r33 != null goto label08;

        $r27 = new java.lang.NullPointerException;

        specialinvoke $r27.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type androidx.constraintlayout.core.widgets.HelperWidget");

        throw $r27;

     label08:
        $r25 = (androidx.constraintlayout.core.widgets.HelperWidget) r33;

        staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: void addReferencesIds(androidx.constraintlayout.core.widgets.HelperWidget,java.util.List,androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,java.lang.String)>($r25, r6, r0, r3);

     label09:
        $r34 = virtualinvoke r33.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.util.ArrayList getAnchors()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r34, "constraintWidget.anchors");

        $r26 = (java.lang.Iterable) $r34;

        r8 = interfaceinvoke $r26.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z20 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label15;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) r9;

        $z5 = virtualinvoke r10.<androidx.constraintlayout.core.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z5 == 0 goto label14;

        $r23 = virtualinvoke r10.<androidx.constraintlayout.core.widgets.ConstraintAnchor: androidx.constraintlayout.core.widgets.ConstraintAnchor getTarget()>();

        r11 = virtualinvoke $r23.<androidx.constraintlayout.core.widgets.ConstraintAnchor: androidx.constraintlayout.core.widgets.ConstraintWidget getOwner()>();

        z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r0, r11);

        z3 = r11 instanceof androidx.constraintlayout.core.widgets.HelperWidget;

        if z2 == 0 goto label11;

        $r35 = r3;

        goto label13;

     label11:
        if z3 == 0 goto label12;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r11, "targetWidget");

        $r35 = staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: java.lang.String getHelperId(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.compose.State)>(r11, r1);

        goto label13;

     label12:
        $r35 = staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: java.lang.String getRefId(androidx.constraintlayout.core.widgets.ConstraintWidget)>(r11);

     label13:
        r12 = $r35;

        $r36 = new org.json.JSONObject;

        specialinvoke $r36.<org.json.JSONObject: void <init>()>();

        $r37 = virtualinvoke r10.<androidx.constraintlayout.core.widgets.ConstraintAnchor: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type getType()>();

        $r38 = virtualinvoke $r36.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("originAnchor", $r37);

        r13 = virtualinvoke r10.<androidx.constraintlayout.core.widgets.ConstraintAnchor: androidx.constraintlayout.core.widgets.ConstraintAnchor getTarget()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r13);

        $r39 = virtualinvoke r13.<androidx.constraintlayout.core.widgets.ConstraintAnchor: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type getType()>();

        $r40 = virtualinvoke $r38.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("targetAnchor", $r39);

        $r41 = virtualinvoke $r40.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("target", r12);

        $i5 = virtualinvoke r10.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getMargin()>();

        $r42 = virtualinvoke $r41.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("margin", $i5);

        virtualinvoke r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r42);

     label14:
        goto label10;

     label15:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "widgetId");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r33, "constraintWidget");

        $r43 = staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: org.json.JSONObject boundsToJson(androidx.constraintlayout.core.widgets.ConstraintWidget,int,int)>(r33, i0, i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r43, "constraintWidget.boundsToJson(startX, startY)");

        $z4 = r33 instanceof androidx.constraintlayout.core.widgets.HelperWidget;

        staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: void putViewIdToBoundsAndConstraints(org.json.JSONObject,java.lang.String,org.json.JSONObject,boolean,boolean,java.util.List,org.json.JSONArray,boolean,boolean)>(r4, r7, $r43, $z4, 0, r6, r5, z7, z9);

        goto label07;

     label16:
        $r17 = (androidx.constraintlayout.core.widgets.ConstraintWidget) r0;

        $r44 = staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: org.json.JSONObject boundsToJson(androidx.constraintlayout.core.widgets.ConstraintWidget,int,int)>($r17, i0, i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r44, "root.boundsToJson(startX, startY)");

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r19 = new org.json.JSONArray;

        specialinvoke $r19.<org.json.JSONArray: void <init>()>();

        staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: void putViewIdToBoundsAndConstraints(org.json.JSONObject,java.lang.String,org.json.JSONObject,boolean,boolean,java.util.List,org.json.JSONArray,boolean,boolean)>(r4, r3, $r44, 0, 1, $r18, $r19, z7, z9);

        $r20 = staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: java.lang.String createDesignInfoJson(org.json.JSONObject)>(r4);

        return $r20;
    }

    private static final void addReferencesIds(androidx.constraintlayout.core.widgets.HelperWidget, java.util.List, androidx.constraintlayout.core.widgets.ConstraintWidgetContainer, java.lang.String)
    {
        androidx.constraintlayout.core.widgets.HelperWidget r0;
        java.util.List r1;
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r2;
        java.lang.String r3, r5, $r7;
        int i0, i1, i2;
        androidx.constraintlayout.core.widgets.ConstraintWidget r4;
        androidx.constraintlayout.core.widgets.ConstraintWidget[] $r6;
        boolean $z0;

        r0 := @parameter0: androidx.constraintlayout.core.widgets.HelperWidget;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r3 := @parameter3: java.lang.String;

        i2 = 0;

        i0 = r0.<androidx.constraintlayout.core.widgets.HelperWidget: int mWidgetsCount>;

        if i2 >= i0 goto label4;

     label1:
        i1 = i2;

        i2 = i2 + 1;

        $r6 = r0.<androidx.constraintlayout.core.widgets.HelperWidget: androidx.constraintlayout.core.widgets.ConstraintWidget[] mWidgets>;

        r4 = $r6[i1];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, r2);

        if $z0 == 0 goto label2;

        $r7 = r3;

        goto label3;

     label2:
        $r7 = staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: java.lang.String getRefId(androidx.constraintlayout.core.widgets.ConstraintWidget)>(r4);

     label3:
        r5 = $r7;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);

        if i2 < i0 goto label1;

     label4:
        return;
    }

    private static final java.lang.String getHelperId(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.compose.State)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidget $r0;
        androidx.constraintlayout.compose.State r1;
        androidx.constraintlayout.core.widgets.HelperWidget $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        $r0 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget;

        r1 := @parameter1: androidx.constraintlayout.compose.State;

        $r2 = (androidx.constraintlayout.core.widgets.HelperWidget) $r0;

        $r3 = virtualinvoke r1.<androidx.constraintlayout.compose.State: java.lang.Object getKeyId$compose_release(androidx.constraintlayout.core.widgets.HelperWidget)>($r2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        return $r4;
    }

    private static final java.lang.String getRefId(androidx.constraintlayout.core.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidget $r0, r2, r9;
        java.lang.String r1, $r7, $r10, $r11;
        boolean $z0;
        java.lang.Object $r3, r4, r8;
        androidx.compose.ui.layout.Measurable $r5, r6;

        $r0 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget;

        r2 = $r0;

        if r2 != null goto label01;

        $r3 = null;

        goto label02;

     label01:
        $r3 = virtualinvoke r2.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.Object getCompanionWidget()>();

     label02:
        r4 = $r3;

        $z0 = r4 instanceof androidx.compose.ui.layout.Measurable;

        if $z0 == 0 goto label03;

        $r5 = (androidx.compose.ui.layout.Measurable) r4;

        goto label04;

     label03:
        $r5 = null;

     label04:
        r6 = $r5;

        if r6 != null goto label05;

        $r7 = null;

        goto label07;

     label05:
        r8 = staticinvoke <androidx.compose.ui.layout.LayoutIdKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.Measurable)>(r6);

        if r8 != null goto label06;

        $r7 = null;

        goto label07;

     label06:
        $r7 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

     label07:
        r1 = $r7;

        if r1 != null goto label10;

        r9 = $r0;

        if r9 != null goto label08;

        $r10 = null;

        goto label09;

     label08:
        $r10 = r9.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.String stringId>;

     label09:
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        goto label11;

     label10:
        $r11 = r1;

     label11:
        return $r11;
    }

    private static final java.lang.String createDesignInfoJson(org.json.JSONObject)
    {
        org.json.JSONObject r0, $r2, $r3, $r4, $r5;
        java.lang.String r1;

        r0 := @parameter0: org.json.JSONObject;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("type", "CONSTRAINTS");

        $r4 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("version", 1);

        $r5 = virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("content", r0);

        r1 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "JSONObject()\n    .put(\"type\", \"CONSTRAINTS\")\n    .put(\"version\", CONSTRAINTS_JSON_VERSION)\n    .put(\"content\", content).toString()");

        return r1;
    }

    private static final org.json.JSONObject boundsToJson(androidx.constraintlayout.core.widgets.ConstraintWidget, int, int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidget $r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.json.JSONObject $r1, $r2, $r3, $r4, $r5;

        $r0 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $i2 = virtualinvoke $r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getLeft()>();

        $i3 = $i2 + i0;

        $r2 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("left", $i3);

        $i4 = virtualinvoke $r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getTop()>();

        $i5 = $i4 + i1;

        $r3 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("top", $i5);

        $i6 = virtualinvoke $r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getRight()>();

        $i7 = $i6 + i0;

        $r4 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("right", $i7);

        $i8 = virtualinvoke $r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getBottom()>();

        $i9 = $i8 + i1;

        $r5 = virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("bottom", $i9);

        return $r5;
    }

    private static final void putViewIdToBoundsAndConstraints(org.json.JSONObject, java.lang.String, org.json.JSONObject, boolean, boolean, java.util.List, org.json.JSONArray, boolean, boolean)
    {
        org.json.JSONObject $r0, r2, r5, $r10;
        java.lang.String r1;
        boolean z0, z1, z2, z3, $z5;
        java.util.List r3;
        org.json.JSONArray r4, r6, $r14;
        java.util.Iterator r7;
        java.lang.Object r8, r9;
        java.lang.Iterable $r20;

        $r0 := @parameter0: org.json.JSONObject;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.json.JSONObject;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r3 := @parameter5: java.util.List;

        r4 := @parameter6: org.json.JSONArray;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        $r10 = new org.json.JSONObject;

        specialinvoke $r10.<org.json.JSONObject: void <init>()>();

        r5 = $r10;

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("viewId", r1);

        if z3 == 0 goto label1;

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("box", r2);

     label1:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("isHelper", z0);

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("isRoot", z1);

        $r14 = new org.json.JSONArray;

        specialinvoke $r14.<org.json.JSONArray: void <init>()>();

        r6 = $r14;

        $r20 = (java.lang.Iterable) r3;

        r7 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label3;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = r8;

        virtualinvoke r6.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(r9);

        goto label2;

     label3:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("helperReferences", r6);

        if z2 == 0 goto label4;

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("constraints", r4);

     label4:
        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(r1, r5);

        return;
    }

    static void putViewIdToBoundsAndConstraints$default(org.json.JSONObject, java.lang.String, org.json.JSONObject, boolean, boolean, java.util.List, org.json.JSONArray, boolean, boolean, int, java.lang.Object)
    {
        org.json.JSONObject r0, r2;
        java.lang.String r1;
        boolean z0, z1, z2, z3;
        java.util.List r3;
        org.json.JSONArray r4;
        int i0, $i1, $i2;
        java.lang.Object r5;

        r0 := @parameter0: org.json.JSONObject;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.json.JSONObject;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r3 := @parameter5: java.util.List;

        r4 := @parameter6: org.json.JSONArray;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        i0 := @parameter9: int;

        r5 := @parameter10: java.lang.Object;

        $i1 = i0 & 64;

        if $i1 == 0 goto label1;

        z2 = 1;

     label1:
        $i2 = i0 & 128;

        if $i2 == 0 goto label2;

        z3 = 1;

     label2:
        staticinvoke <androidx.constraintlayout.compose.ToolingUtilsKt: void putViewIdToBoundsAndConstraints(org.json.JSONObject,java.lang.String,org.json.JSONObject,boolean,boolean,java.util.List,org.json.JSONArray,boolean,boolean)>(r0, r1, r2, z0, z1, r3, r4, z2, z3);

        return;
    }

    static void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.MutablePropertyReference1Impl $r1;
        kotlin.reflect.KDeclarationContainer $r2;
        kotlin.jvm.internal.MutablePropertyReference1 $r3;
        kotlin.reflect.KMutableProperty1 $r4;
        kotlin.reflect.KProperty $r5;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r6, $r7;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)>(class "Landroidx/constraintlayout/compose/ToolingUtilsKt;", "compose_release");

        specialinvoke $r1.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r2, "designInfoProvider", "getDesignInfoProvider(Landroidx/compose/ui/semantics/SemanticsPropertyReceiver;)Landroidx/constraintlayout/compose/DesignInfoProvider;");

        $r3 = (kotlin.jvm.internal.MutablePropertyReference1) $r1;

        $r4 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r3);

        $r5 = (kotlin.reflect.KProperty) $r4;

        r0[0] = $r5;

        <androidx.constraintlayout.compose.ToolingUtilsKt: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        $r6 = new androidx.compose.ui.semantics.SemanticsPropertyKey;

        specialinvoke $r6.<androidx.compose.ui.semantics.SemanticsPropertyKey: void <init>(java.lang.String,kotlin.jvm.functions.Function2,int,kotlin.jvm.internal.DefaultConstructorMarker)>("DesignInfoProvider", null, 2, null);

        <androidx.constraintlayout.compose.ToolingUtilsKt: androidx.compose.ui.semantics.SemanticsPropertyKey DesignInfoDataKey> = $r6;

        $r7 = <androidx.constraintlayout.compose.ToolingUtilsKt: androidx.compose.ui.semantics.SemanticsPropertyKey DesignInfoDataKey>;

        <androidx.constraintlayout.compose.ToolingUtilsKt: androidx.compose.ui.semantics.SemanticsPropertyKey designInfoProvider$delegate> = $r7;

        return;
    }

