androidx.ui.core.gesture.RawScaleGestureFilter
<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active>
<androidx.ui.core.gesture.RawScaleGestureFilter: androidx.ui.core.gesture.RawScaleObserver scaleObserver>
<androidx.ui.core.gesture.RawScaleGestureFilter: kotlin.jvm.functions.Function0 canStartScaling>
    public void <init>()
    {
        androidx.ui.core.gesture.RawScaleGestureFilter r0;

        r0 := @this: androidx.ui.core.gesture.RawScaleGestureFilter;

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        return;
    }

    public final androidx.ui.core.gesture.RawScaleObserver getScaleObserver()
    {
        androidx.ui.core.gesture.RawScaleGestureFilter r0;
        androidx.ui.core.gesture.RawScaleObserver r1;

        r0 := @this: androidx.ui.core.gesture.RawScaleGestureFilter;

        r1 = r0.<androidx.ui.core.gesture.RawScaleGestureFilter: androidx.ui.core.gesture.RawScaleObserver scaleObserver>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("scaleObserver");

        throw null;
    }

    public final void setScaleObserver(androidx.ui.core.gesture.RawScaleObserver)
    {
        androidx.ui.core.gesture.RawScaleGestureFilter r0;
        androidx.ui.core.gesture.RawScaleObserver r1;

        r0 := @this: androidx.ui.core.gesture.RawScaleGestureFilter;

        r1 := @parameter0: androidx.ui.core.gesture.RawScaleObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.RawScaleGestureFilter: androidx.ui.core.gesture.RawScaleObserver scaleObserver> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function0 getCanStartScaling()
    {
        androidx.ui.core.gesture.RawScaleGestureFilter r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.core.gesture.RawScaleGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.RawScaleGestureFilter: kotlin.jvm.functions.Function0 canStartScaling>;

        return $r1;
    }

    public final void setCanStartScaling(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.gesture.RawScaleGestureFilter r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.core.gesture.RawScaleGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r0.<androidx.ui.core.gesture.RawScaleGestureFilter: kotlin.jvm.functions.Function0 canStartScaling> = r1;

        return;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.gesture.RawScaleGestureFilter r0;
        java.util.List r1, r27, $r42, $r43, $r48;
        androidx.ui.core.PointerEventPass r2, $r6, $r34;
        androidx.ui.unit.IntPxSize r3;
        int i0, i1, $i4, $i5, i6;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9, f10, f11;
        java.util.Collection r4, $r13, r29, $r49;
        androidx.ui.core.PointerInputChange r5, $r19, $r20, r32, $r33, r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z12, $z13, $z14, $z15, $z17, $z21, $z24, z25, $z26, $z27, z28;
        java.util.ArrayList $r7, $r8, $r12, $r26, r36;
        kotlin.Pair $r9;
        java.lang.Object $r10, $r11, $r18, $r21, r31, r39;
        byte $b2, $b3;
        androidx.ui.core.gesture.DimensionData $r14, $r15, $r16, $r17;
        java.lang.Boolean $r22, $r23, $r47;
        androidx.ui.core.PointerInputData $r24, $r25;
        java.lang.Iterable $r28, $r35, $r50;
        java.util.Iterator r30, r38;
        androidx.ui.core.gesture.RawScaleObserver r44;
        androidx.ui.core.gesture.AllDimensionData $r45;
        kotlin.jvm.functions.Function0 r46;

        r0 := @this: androidx.ui.core.gesture.RawScaleGestureFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        r27 = r1;

        $r6 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass InitialDown>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z0 == 0 goto label06;

        $z13 = r0.<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active>;

        if $z13 == 0 goto label06;

        $r28 = (java.lang.Iterable) r27;

        $r26 = new java.util.ArrayList;

        $i5 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r28, 10);

        specialinvoke $r26.<java.util.ArrayList: void <init>(int)>($i5);

        r29 = (java.util.Collection) $r26;

        r30 = interfaceinvoke $r28.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z14 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label05;

        r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r32 = (androidx.ui.core.PointerInputChange) r31;

        r4 = r29;

        $z15 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDown(androidx.ui.core.PointerInputChange)>(r32);

        if $z15 != 0 goto label02;

        $z17 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUp(androidx.ui.core.PointerInputChange)>(r32);

        if $z17 == 0 goto label03;

     label02:
        $r33 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.core.PointerInputChange consumeDownChange(androidx.ui.core.PointerInputChange)>(r32);

        goto label04;

     label03:
        $r33 = r32;

     label04:
        r5 = $r33;

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r5);

        goto label01;

     label05:
        r27 = (java.util.List) r29;

     label06:
        $r34 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z21 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r34);

        if $z21 == 0 goto label22;

        $r35 = (java.lang.Iterable) r27;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r36 = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r38 = interfaceinvoke $r35.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r40 = (androidx.ui.core.PointerInputChange) r39;

        $r24 = virtualinvoke r40.<androidx.ui.core.PointerInputChange: androidx.ui.core.PointerInputData getCurrent()>();

        $z9 = virtualinvoke $r24.<androidx.ui.core.PointerInputData: boolean getDown()>();

        if $z9 == 0 goto label08;

        $r25 = virtualinvoke r40.<androidx.ui.core.PointerInputChange: androidx.ui.core.PointerInputData getPrevious()>();

        $z12 = virtualinvoke $r25.<androidx.ui.core.PointerInputData: boolean getDown()>();

        if $z12 == 0 goto label08;

        $z24 = 1;

        goto label09;

     label08:
        $z24 = 0;

     label09:
        if $z24 == 0 goto label10;

        virtualinvoke r36.<java.util.ArrayList: boolean add(java.lang.Object)>(r39);

        goto label11;

     label10:
        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r39);

     label11:
        goto label07;

     label12:
        $r9 = new kotlin.Pair;

        specialinvoke $r9.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>(r36, $r8);

        $r10 = virtualinvoke $r9.<kotlin.Pair: java.lang.Object component1()>();

        $r42 = (java.util.List) $r10;

        $r11 = virtualinvoke $r9.<kotlin.Pair: java.lang.Object component2()>();

        $r43 = (java.util.List) $r11;

        r44 = virtualinvoke r0.<androidx.ui.core.gesture.RawScaleGestureFilter: androidx.ui.core.gesture.RawScaleObserver getScaleObserver()>();

        $z2 = interfaceinvoke $r42.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label13;

        $z8 = r0.<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active>;

        if $z8 == 0 goto label21;

        r0.<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active> = 0;

        interfaceinvoke r44.<androidx.ui.core.gesture.RawScaleObserver: void onStop()>();

        goto label21;

     label13:
        $r45 = staticinvoke <androidx.ui.core.gesture.ScaleUtilKt: androidx.ui.core.gesture.AllDimensionData calculateAllDimensionInformation(java.util.List)>($r42);

        f8 = staticinvoke <androidx.ui.core.gesture.ScaleUtilKt: float calculateScaleFactor(androidx.ui.core.gesture.AllDimensionData)>($r45);

        f9 = f8;

        z25 = 0;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f9);

        if $z3 != 0 goto label21;

        $b2 = f8 cmpg 1.0F;

        if $b2 != 0 goto label14;

        $z26 = 1;

        goto label15;

     label14:
        $z26 = 0;

     label15:
        if $z26 != 0 goto label21;

        $z4 = r0.<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active>;

        if $z4 != 0 goto label18;

        r46 = virtualinvoke r0.<androidx.ui.core.gesture.RawScaleGestureFilter: kotlin.jvm.functions.Function0 getCanStartScaling()>();

        if r46 != null goto label16;

        $r47 = (java.lang.Boolean) null;

        goto label17;

     label16:
        $r21 = interfaceinvoke r46.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r22 = (java.lang.Boolean) $r21;

        $z6 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        $r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

     label17:
        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r47, $r23);

        if $z7 != 0 goto label18;

        r0.<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active> = 1;

        interfaceinvoke r44.<androidx.ui.core.gesture.RawScaleObserver: void onStart()>();

     label18:
        $z27 = r0.<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active>;

        if $z27 == 0 goto label21;

        f10 = interfaceinvoke r44.<androidx.ui.core.gesture.RawScaleObserver: float onScale(float)>(f8);

        $f2 = (float) 1;

        $f5 = f10 - $f2;

        $f3 = (float) 1;

        $f4 = f8 - $f3;

        f11 = $f5 / $f4;

        $b3 = f11 cmpl 0.0F;

        if $b3 <= 0 goto label21;

        z28 = 0;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r48 = (java.util.List) $r12;

        i6 = 0;

        $r13 = (java.util.Collection) $r42;

        $i4 = interfaceinvoke $r13.<java.util.Collection: int size()>();

        i0 = $i4 + -1;

        if i6 > i0 goto label20;

     label19:
        i1 = i6;

        i6 = i6 + 1;

        $r14 = virtualinvoke $r45.<androidx.ui.core.gesture.AllDimensionData: androidx.ui.core.gesture.DimensionData getPreviousX()>();

        $r15 = virtualinvoke $r45.<androidx.ui.core.gesture.AllDimensionData: androidx.ui.core.gesture.DimensionData getCurrentX()>();

        $f6 = staticinvoke <androidx.ui.core.gesture.ScaleUtilKt: float getVectorToAverageChange(androidx.ui.core.gesture.DimensionData,androidx.ui.core.gesture.DimensionData,int)>($r14, $r15, i1);

        f0 = $f6 * f11;

        $r16 = virtualinvoke $r45.<androidx.ui.core.gesture.AllDimensionData: androidx.ui.core.gesture.DimensionData getPreviousY()>();

        $r17 = virtualinvoke $r45.<androidx.ui.core.gesture.AllDimensionData: androidx.ui.core.gesture.DimensionData getCurrentY()>();

        $f7 = staticinvoke <androidx.ui.core.gesture.ScaleUtilKt: float getVectorToAverageChange(androidx.ui.core.gesture.DimensionData,androidx.ui.core.gesture.DimensionData,int)>($r16, $r17, i1);

        f1 = $f7 * f11;

        $r18 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(i1);

        $r19 = (androidx.ui.core.PointerInputChange) $r18;

        $r20 = staticinvoke <androidx.ui.testutils.PointerInputTestUtilKt: androidx.ui.core.PointerInputChange consume$default(androidx.ui.core.PointerInputChange,float,float,boolean,int,java.lang.Object)>($r19, f0, f1, 0, 4, null);

        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r20);

        if i6 <= i0 goto label19;

     label20:
        $r42 = $r48;

     label21:
        $r49 = (java.util.Collection) $r42;

        $r50 = (java.lang.Iterable) $r43;

        r27 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r49, $r50);

     label22:
        return r27;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.RawScaleGestureFilter r0;
        boolean $z0;
        androidx.ui.core.gesture.RawScaleObserver $r1;

        r0 := @this: androidx.ui.core.gesture.RawScaleGestureFilter;

        $z0 = r0.<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.ui.core.gesture.RawScaleGestureFilter: androidx.ui.core.gesture.RawScaleObserver getScaleObserver()>();

        interfaceinvoke $r1.<androidx.ui.core.gesture.RawScaleObserver: void onCancel()>();

        r0.<androidx.ui.core.gesture.RawScaleGestureFilter: boolean active> = 0;

     label1:
        return;
    }

