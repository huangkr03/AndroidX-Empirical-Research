androidx.media3.session.MediaControllerImplBase
<androidx.media3.session.MediaControllerImplBase: java.lang.String TAG>
<androidx.media3.session.MediaControllerImplBase: long RELEASE_TIMEOUT_MS>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController instance>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>
<androidx.media3.session.MediaControllerImplBase: android.content.Context context>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>
<androidx.media3.session.MediaControllerImplBase: android.os.Bundle connectionHints>
<androidx.media3.session.MediaControllerImplBase: android.os.IBinder$DeathRecipient deathRecipient>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SurfaceCallback surfaceCallback>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler flushCommandQueueHandler>
<androidx.media3.session.MediaControllerImplBase: androidx.collection.ArraySet pendingMaskingSequencedFutureNumbers>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken connectedToken>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection serviceConnection>
<androidx.media3.session.MediaControllerImplBase: boolean released>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>
<androidx.media3.session.MediaControllerImplBase: android.app.PendingIntent sessionActivity>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromSession>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromPlayer>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>
<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface>
<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder>
<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.Size surfaceSize>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>
<androidx.media3.session.MediaControllerImplBase: long currentPositionMs>
<androidx.media3.session.MediaControllerImplBase: long lastSetPlayWhenReadyCalledTimeMs>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo pendingPlayerInfo>
<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo$BundlingExclusions pendingBundlingExclusions>
    public void <init>(android.content.Context, androidx.media3.session.MediaController, androidx.media3.session.SessionToken, android.os.Bundle, android.os.Looper)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.content.Context r1;
        androidx.media3.session.MediaController r2;
        androidx.media3.session.SessionToken r3, $r22;
        android.os.Bundle r4;
        android.os.Looper r5;
        androidx.media3.session.PlayerInfo $r6;
        androidx.media3.common.util.Size $r7;
        androidx.media3.session.SessionCommands $r8;
        androidx.media3.common.Player$Commands $r9, $r10, $r11;
        androidx.media3.common.util.ListenerSet $r12;
        androidx.media3.common.util.Clock $r13;
        androidx.media3.common.util.ListenerSet$IterationFinishedEvent $r14;
        androidx.media3.session.SequencedFutureManager $r17;
        androidx.media3.session.MediaControllerStub $r18;
        androidx.collection.ArraySet $r19;
        android.os.IBinder$DeathRecipient $r20;
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback $r21;
        int $i0;
        androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler $r23;
        androidx.media3.session.MediaControllerImplBase$SessionServiceConnection $r25;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.MediaController;

        r3 := @parameter2: androidx.media3.session.SessionToken;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = <androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo DEFAULT>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r6;

        $r7 = <androidx.media3.common.util.Size: androidx.media3.common.util.Size UNKNOWN>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.Size surfaceSize> = $r7;

        $r8 = <androidx.media3.session.SessionCommands: androidx.media3.session.SessionCommands EMPTY>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands> = $r8;

        $r9 = <androidx.media3.common.Player$Commands: androidx.media3.common.Player$Commands EMPTY>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromSession> = $r9;

        $r10 = <androidx.media3.common.Player$Commands: androidx.media3.common.Player$Commands EMPTY>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromPlayer> = $r10;

        $r11 = <androidx.media3.common.Player$Commands: androidx.media3.common.Player$Commands EMPTY>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands> = $r11;

        $r12 = new androidx.media3.common.util.ListenerSet;

        $r13 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        $r14 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$IterationFinishedEvent (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,androidx.media3.common.FlagSet), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$new$0(androidx.media3.common.Player$Listener,androidx.media3.common.FlagSet)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener,androidx.media3.common.FlagSet));

        specialinvoke $r12.<androidx.media3.common.util.ListenerSet: void <init>(android.os.Looper,androidx.media3.common.util.Clock,androidx.media3.common.util.ListenerSet$IterationFinishedEvent)>(r5, $r13, $r14);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners> = $r12;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController instance> = r2;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "context must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "token must not be null");

        r0.<androidx.media3.session.MediaControllerImplBase: android.content.Context context> = r1;

        $r17 = new androidx.media3.session.SequencedFutureManager;

        specialinvoke $r17.<androidx.media3.session.SequencedFutureManager: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager> = $r17;

        $r18 = new androidx.media3.session.MediaControllerStub;

        specialinvoke $r18.<androidx.media3.session.MediaControllerStub: void <init>(androidx.media3.session.MediaControllerImplBase)>(r0);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub> = $r18;

        $r19 = new androidx.collection.ArraySet;

        specialinvoke $r19.<androidx.collection.ArraySet: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.collection.ArraySet pendingMaskingSequencedFutureNumbers> = $r19;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token> = r3;

        r0.<androidx.media3.session.MediaControllerImplBase: android.os.Bundle connectionHints> = r4;

        $r20 = dynamicinvoke "binderDied" <android.os.IBinder$DeathRecipient (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$new$1()>, methodtype: void __METHODTYPE__());

        r0.<androidx.media3.session.MediaControllerImplBase: android.os.IBinder$DeathRecipient deathRecipient> = $r20;

        $r21 = new androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        specialinvoke $r21.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: void <init>(androidx.media3.session.MediaControllerImplBase,androidx.media3.session.MediaControllerImplBase$1)>(r0, null);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SurfaceCallback surfaceCallback> = $r21;

        $r22 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        $i0 = virtualinvoke $r22.<androidx.media3.session.SessionToken: int getType()>();

        if $i0 != 0 goto label1;

        $r25 = null;

        goto label2;

     label1:
        $r25 = new androidx.media3.session.MediaControllerImplBase$SessionServiceConnection;

        specialinvoke $r25.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: void <init>(androidx.media3.session.MediaControllerImplBase,android.os.Bundle)>(r0, r4);

     label2:
        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection serviceConnection> = $r25;

        $r23 = new androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler;

        specialinvoke $r23.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: void <init>(androidx.media3.session.MediaControllerImplBase,android.os.Looper)>(r0, r5);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler flushCommandQueueHandler> = $r23;

        r0.<androidx.media3.session.MediaControllerImplBase: long currentPositionMs> = -9223372036854775807L;

        r0.<androidx.media3.session.MediaControllerImplBase: long lastSetPlayWhenReadyCalledTimeMs> = -9223372036854775807L;

        return;
    }

    androidx.media3.session.MediaController getInstance()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.MediaController $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController instance>;

        return $r1;
    }

    public void connect()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionToken $r1;
        int $i0;
        androidx.media3.session.MediaControllerImplBase$SessionServiceConnection $r2;
        android.os.Bundle $r3, $r8;
        androidx.media3.session.MediaController $r4, $r5;
        java.lang.Runnable $r7;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        $i0 = virtualinvoke $r1.<androidx.media3.session.SessionToken: int getType()>();

        if $i0 != 0 goto label1;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection serviceConnection> = null;

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: android.os.Bundle connectionHints>;

        z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean requestConnectToSession(android.os.Bundle)>($r8);

        goto label2;

     label1:
        $r2 = new androidx.media3.session.MediaControllerImplBase$SessionServiceConnection;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: android.os.Bundle connectionHints>;

        specialinvoke $r2.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: void <init>(androidx.media3.session.MediaControllerImplBase,android.os.Bundle)>(r0, $r3);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection serviceConnection> = $r2;

        z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean requestConnectToService()>();

     label2:
        if z0 != 0 goto label3;

        $r4 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r5 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r5);

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r4.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r7);

     label3:
        return;
    }

    public void addListener(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.util.ListenerSet $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.util.ListenerSet $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void remove(java.lang.Object)>(r1);

        return;
    }

    public void stop()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        androidx.media3.session.SessionPositionInfo $r2, $r4, $r6, $r10, $r12, $r15, $r18, $r20, $r22, $r24;
        androidx.media3.session.PlayerInfo $r3, $r5, $r7, $r9, $r11, $r14, $r17, $r19, $r21, $r23, $r26, $r27, $r28, $r30, $r31;
        androidx.media3.common.Player$PositionInfo $r8, $r13, $r16, $r25;
        long $l0, $l1, $l2, $l3, $l4, $l6, $l7, $l8;
        int $i5, $i9;
        androidx.media3.common.PlaybackException $r29;
        androidx.media3.common.util.ListenerSet $r32, $r34;
        androidx.media3.common.util.ListenerSet$Event $r33;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$stop$2(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = new androidx.media3.session.SessionPositionInfo;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r8 = $r4.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $z1 = $r6.<androidx.media3.session.SessionPositionInfo: boolean isPlayingAd>;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r10 = $r9.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l3 = $r10.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        $r11 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r12 = $r11.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r13 = $r12.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l4 = $r13.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $r14 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r15 = $r14.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r16 = $r15.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l2 = $r16.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $r17 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r18 = $r17.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l1 = $r18.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        $i5 = staticinvoke <androidx.media3.session.MediaUtils: int calculateBufferedPercentage(long,long)>($l2, $l1);

        $r19 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r20 = $r19.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l8 = $r20.<androidx.media3.session.SessionPositionInfo: long currentLiveOffsetMs>;

        $r21 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r22 = $r21.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l7 = $r22.<androidx.media3.session.SessionPositionInfo: long contentDurationMs>;

        $r23 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r24 = $r23.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r25 = $r24.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l6 = $r25.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        specialinvoke $r2.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>($r8, $z1, $l0, $l3, $l4, $i5, 0L, $l8, $l7, $l6);

        $r26 = virtualinvoke $r7.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithSessionPositionInfo(androidx.media3.session.SessionPositionInfo)>($r2);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r26;

        $r27 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i9 = $r27.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i9 == 1 goto label2;

        $r30 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r28 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r29 = $r28.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        $r31 = virtualinvoke $r30.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>(1, $r29);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r31;

        $r32 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r33 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$stop$3(androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r32.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(4, $r33);

        $r34 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r34.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public void release()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        java.lang.Throwable r2, $r8;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler $r3;
        androidx.media3.session.SequencedFutureManager $r4, $r10;
        android.os.IBinder $r5;
        android.os.IBinder$DeathRecipient $r6;
        androidx.media3.session.MediaControllerStub $r7;
        androidx.media3.common.util.ListenerSet $r9;
        java.lang.Runnable $r11;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        $z0 = r0.<androidx.media3.session.MediaControllerImplBase: boolean released>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.media3.session.MediaControllerImplBase: boolean released> = 1;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken connectedToken> = null;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler flushCommandQueueHandler>;

        virtualinvoke $r3.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: void release()>();

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession> = null;

        if r1 == null goto label5;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        i0 = virtualinvoke $r4.<androidx.media3.session.SequencedFutureManager: int obtainNextSequenceNumber()>();

     label2:
        $r5 = interfaceinvoke r1.<androidx.media3.session.IMediaSession: android.os.IBinder asBinder()>();

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: android.os.IBinder$DeathRecipient deathRecipient>;

        interfaceinvoke $r5.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r6, 0);

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void release(androidx.media3.session.IMediaController,int)>($r7, i0);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

     label5:
        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r9.<androidx.media3.common.util.ListenerSet: void release()>();

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        $r11 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$release$4()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r10.<androidx.media3.session.SequencedFutureManager: void lazyRelease(long,java.lang.Runnable)>(30000L, $r11);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public androidx.media3.session.SessionToken getConnectedToken()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionToken $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken connectedToken>;

        return $r1;
    }

    public boolean isConnected()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isReleased()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = r0.<androidx.media3.session.MediaControllerImplBase: boolean released>;

        return $z0;
    }

    private void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask r1;
        androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler $r2;
        androidx.media3.session.IMediaSession $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplBase$RemoteSessionTask;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler flushCommandQueueHandler>;

        virtualinvoke $r2.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: void sendFlushCommandQueueMessage()>();

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTask(androidx.media3.session.IMediaSession,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask,boolean)>($r3, r1, 1);

        return;
    }

    private void dispatchRemoteSessionTaskWithPlayerCommandAndWaitForFuture(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask r1;
        com.google.common.util.concurrent.ListenableFuture r2;
        int i0;
        androidx.media3.session.IMediaSession $r3;
        java.lang.Throwable $r5, $r11, r13, r14;
        boolean $z0;
        androidx.media3.session.SequencedFutureManager$SequencedFuture $r6;
        androidx.collection.ArraySet $r7;
        java.lang.Integer $r8;
        androidx.media3.session.SessionResult $r9;
        androidx.media3.session.SequencedFutureManager $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplBase$RemoteSessionTask;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        r2 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTask(androidx.media3.session.IMediaSession,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask,boolean)>($r3, r1, 1);

     label1:
        staticinvoke <androidx.media3.session.MediaUtils: java.lang.Object getFutureResult(java.util.concurrent.Future,long)>(r2, 3000L);

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

        r13 = $r11;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r13);

        throw $r12;

     label4:
        $r5 := @caughtexception;

        r14 = $r5;

        $z0 = r2 instanceof androidx.media3.session.SequencedFutureManager$SequencedFuture;

        if $z0 == 0 goto label5;

        $r6 = (androidx.media3.session.SequencedFutureManager$SequencedFuture) r2;

        i0 = virtualinvoke $r6.<androidx.media3.session.SequencedFutureManager$SequencedFuture: int getSequenceNumber()>();

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.collection.ArraySet pendingMaskingSequencedFutureNumbers>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r7.<androidx.collection.ArraySet: boolean remove(java.lang.Object)>($r8);

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        $r9 = new androidx.media3.session.SessionResult;

        specialinvoke $r9.<androidx.media3.session.SessionResult: void <init>(int)>(-1);

        virtualinvoke $r10.<androidx.media3.session.SequencedFutureManager: void setFutureResult(int,java.lang.Object)>(i0, $r9);

     label5:
        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MCImplBase", "Synchronous command takes too long on the session side.", r14);

     label6:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.util.concurrent.TimeoutException from label1 to label2 with label4;
    }

    private com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTaskWithSessionCommand(int, androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplBase$RemoteSessionTask;

        $r2 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTaskWithSessionCommandInternal(int,androidx.media3.session.SessionCommand,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>(i0, null, r1);

        return $r2;
    }

    private com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTaskWithSessionCommand(androidx.media3.session.SessionCommand, androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionCommand r1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: androidx.media3.session.MediaControllerImplBase$RemoteSessionTask;

        $r3 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTaskWithSessionCommandInternal(int,androidx.media3.session.SessionCommand,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>(0, r1, r2);

        return $r3;
    }

    private com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTaskWithSessionCommandInternal(int, androidx.media3.session.SessionCommand, androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.session.SessionCommand r1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask r2;
        com.google.common.util.concurrent.ListenableFuture $r3;
        androidx.media3.session.IMediaSession $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionCommand;

        r2 := @parameter2: androidx.media3.session.MediaControllerImplBase$RemoteSessionTask;

        if r1 == null goto label1;

        $r5 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession getSessionInterfaceWithSessionCommandIfAble(androidx.media3.session.SessionCommand)>(r1);

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession getSessionInterfaceWithSessionCommandIfAble(int)>(i0);

     label2:
        $r3 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTask(androidx.media3.session.IMediaSession,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask,boolean)>($r5, r2, 0);

        return $r3;
    }

    private com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTask(androidx.media3.session.IMediaSession, androidx.media3.session.MediaControllerImplBase$RemoteSessionTask, boolean)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask r2;
        boolean z0;
        androidx.media3.session.SequencedFutureManager$SequencedFuture r3;
        int i0;
        java.lang.Throwable r4, $r11;
        com.google.common.util.concurrent.ListenableFuture $r6, r19;
        androidx.media3.session.SequencedFutureManager $r8, $r15;
        androidx.collection.ArraySet $r9, $r12;
        java.lang.Integer $r10, $r13;
        androidx.media3.session.SessionResult r16, r17, r18;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        r2 := @parameter1: androidx.media3.session.MediaControllerImplBase$RemoteSessionTask;

        z0 := @parameter2: boolean;

        if r1 == null goto label5;

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        r16 = new androidx.media3.session.SessionResult;

        specialinvoke r16.<androidx.media3.session.SessionResult: void <init>(int)>(1);

        r3 = virtualinvoke $r8.<androidx.media3.session.SequencedFutureManager: androidx.media3.session.SequencedFutureManager$SequencedFuture createSequencedFuture(java.lang.Object)>(r16);

        i0 = virtualinvoke r3.<androidx.media3.session.SequencedFutureManager$SequencedFuture: int getSequenceNumber()>();

        if z0 == 0 goto label1;

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.collection.ArraySet pendingMaskingSequencedFutureNumbers>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r9.<androidx.collection.ArraySet: boolean add(java.lang.Object)>($r10);

     label1:
        interfaceinvoke r2.<androidx.media3.session.MediaControllerImplBase$RemoteSessionTask: void run(androidx.media3.session.IMediaSession,int)>(r1, i0);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MCImplBase", "Cannot connect to the service or the session is gone", r4);

        $r12 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.collection.ArraySet pendingMaskingSequencedFutureNumbers>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r12.<androidx.collection.ArraySet: boolean remove(java.lang.Object)>($r13);

        $r15 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        r17 = new androidx.media3.session.SessionResult;

        specialinvoke r17.<androidx.media3.session.SessionResult: void <init>(int)>(-100);

        virtualinvoke $r15.<androidx.media3.session.SequencedFutureManager: void setFutureResult(int,java.lang.Object)>(i0, r17);

     label4:
        r19 = (com.google.common.util.concurrent.ListenableFuture) r3;

        return r19;

     label5:
        r18 = new androidx.media3.session.SessionResult;

        specialinvoke r18.<androidx.media3.session.SessionResult: void <init>(int)>(-4);

        $r6 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(r18);

        return $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void play()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$play$5(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setPlayWhenReady(boolean,int,int)>(1, 0, 1);

        return;
    }

    public void pause()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$pause$6(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setPlayWhenReady(boolean,int,int)>(0, 0, 1);

        return;
    }

    public void prepare()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo r1, $r3, $r4, $r6;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        int $i0;
        androidx.media3.common.Timeline $r5;
        byte $b1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$prepare$7(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r3.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i0 != 1 goto label4;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r5 = $r4.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z1 = virtualinvoke $r5.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $b1 = 4;

        goto label3;

     label2:
        $b1 = 2;

     label3:
        r1 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>($b1, null);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void updatePlayerInfo(androidx.media3.session.PlayerInfo,int,int,boolean,int,boolean,int)>(r1, 0, 1, 0, 5, 0, 0);

     label4:
        return;
    }

    public void seekToDefaultPosition()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(4);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekToDefaultPosition$8(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i0, -9223372036854775807L);

        return;
    }

    public void seekToDefaultPosition(int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(10);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekToDefaultPosition$9(int,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>(i0, -9223372036854775807L);

        return;
    }

    public void seekTo(long)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        long l0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        int $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        l0 := @parameter0: long;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(5);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,long)>(r0, l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekTo$10(long,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $i1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i1, l0);

        return;
    }

    public void seekTo(int, long)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        long l1;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(10);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int,long)>(r0, i0, l1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekTo$11(int,long,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>(i0, l1);

        return;
    }

    public long getSeekBackIncrement()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $l0 = $r1.<androidx.media3.session.PlayerInfo: long seekBackIncrementMs>;

        return $l0;
    }

    public void seekBack()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        long $l0, $l1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(11);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekBack$12(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $l0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: long getSeekBackIncrement()>();

        $l1 = neg $l0;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternalByOffset(long)>($l1);

        return;
    }

    public long getSeekForwardIncrement()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $l0 = $r1.<androidx.media3.session.PlayerInfo: long seekForwardIncrementMs>;

        return $l0;
    }

    public void seekForward()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(12);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekForward$13(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $l0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: long getSeekForwardIncrement()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternalByOffset(long)>($l0);

        return;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.app.PendingIntent $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: android.app.PendingIntent sessionActivity>;

        return $r1;
    }

    public void setPlayWhenReady(boolean)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(1);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,boolean)>(r0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setPlayWhenReady$14(boolean,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setPlayWhenReady(boolean,int,int)>(z0, 0, 1);

        return;
    }

    public boolean getPlayWhenReady()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r1.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        return $z0;
    }

    public int getPlaybackSuppressionReason()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r1.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        return $i0;
    }

    public androidx.media3.common.PlaybackException getPlayerError()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.PlaybackException $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        return $r2;
    }

    public int getPlaybackState()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r1.<androidx.media3.session.PlayerInfo: int playbackState>;

        return $i0;
    }

    public boolean isPlaying()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r1.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        return $z0;
    }

    public boolean isLoading()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r1.<androidx.media3.session.PlayerInfo: boolean isLoading>;

        return $z0;
    }

    public long getDuration()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r2.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        return $l0;
    }

    public long getCurrentPosition()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeUpdateCurrentPositionMs()>();

        $l0 = r0.<androidx.media3.session.MediaControllerImplBase: long currentPositionMs>;

        return $l0;
    }

    public long getBufferedPosition()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r2.<androidx.media3.session.SessionPositionInfo: long bufferedPositionMs>;

        return $l0;
    }

    public int getBufferedPercentage()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $i0 = $r2.<androidx.media3.session.SessionPositionInfo: int bufferedPercentage>;

        return $i0;
    }

    public long getTotalBufferedDuration()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r2.<androidx.media3.session.SessionPositionInfo: long totalBufferedDurationMs>;

        return $l0;
    }

    public long getCurrentLiveOffset()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r2.<androidx.media3.session.SessionPositionInfo: long currentLiveOffsetMs>;

        return $l0;
    }

    public long getContentDuration()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r2.<androidx.media3.session.SessionPositionInfo: long contentDurationMs>;

        return $l0;
    }

    public long getContentPosition()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1, $r3;
        androidx.media3.session.SessionPositionInfo $r2, $r4;
        boolean $z0;
        androidx.media3.common.Player$PositionInfo $r5;
        long $l0, $l1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $z0 = $r2.<androidx.media3.session.SessionPositionInfo: boolean isPlayingAd>;

        if $z0 != 0 goto label1;

        $l1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: long getCurrentPosition()>();

        return $l1;

     label1:
        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r5 = $r4.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l0 = $r5.<androidx.media3.common.Player$PositionInfo: long contentPositionMs>;

        return $l0;
    }

    public long getContentBufferedPosition()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r2.<androidx.media3.session.SessionPositionInfo: long contentBufferedPositionMs>;

        return $l0;
    }

    public boolean isPlayingAd()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $z0 = $r2.<androidx.media3.session.SessionPositionInfo: boolean isPlayingAd>;

        return $z0;
    }

    public int getCurrentAdGroupIndex()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        androidx.media3.common.Player$PositionInfo $r3;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r3 = $r2.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i0 = $r3.<androidx.media3.common.Player$PositionInfo: int adGroupIndex>;

        return $i0;
    }

    public int getCurrentAdIndexInAdGroup()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        androidx.media3.common.Player$PositionInfo $r3;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r3 = $r2.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i0 = $r3.<androidx.media3.common.Player$PositionInfo: int adIndexInAdGroup>;

        return $i0;
    }

    public void setPlaybackParameters(androidx.media3.common.PlaybackParameters)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.PlaybackParameters r1, $r4;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        androidx.media3.session.PlayerInfo $r3, $r5, $r6;
        androidx.media3.common.util.ListenerSet $r7, $r9;
        androidx.media3.common.util.ListenerSet$Event $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.PlaybackParameters;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(13);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.common.PlaybackParameters)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setPlaybackParameters$15(androidx.media3.common.PlaybackParameters,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        $z1 = virtualinvoke $r4.<androidx.media3.common.PlaybackParameters: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackParameters(androidx.media3.common.PlaybackParameters)>(r1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r6;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r8 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.common.PlaybackParameters)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$setPlaybackParameters$16(androidx.media3.common.PlaybackParameters,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(12, $r8);

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r9.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public androidx.media3.common.PlaybackParameters getPlaybackParameters()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.PlaybackParameters $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        return $r2;
    }

    public void setPlaybackSpeed(float)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        float f0, $f1;
        androidx.media3.common.PlaybackParameters r1, $r4, $r6;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        androidx.media3.session.PlayerInfo $r3, $r5, $r7, $r8;
        byte $b0;
        androidx.media3.common.util.ListenerSet $r9, $r11;
        androidx.media3.common.util.ListenerSet$Event $r10;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        f0 := @parameter0: float;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(13);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,float)>(r0, f0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setPlaybackSpeed$17(float,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        $f1 = $r4.<androidx.media3.common.PlaybackParameters: float speed>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = $r5.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        r1 = virtualinvoke $r6.<androidx.media3.common.PlaybackParameters: androidx.media3.common.PlaybackParameters withSpeed(float)>(f0);

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = virtualinvoke $r7.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackParameters(androidx.media3.common.PlaybackParameters)>(r1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r8;

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r10 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.common.PlaybackParameters)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$setPlaybackSpeed$18(androidx.media3.common.PlaybackParameters,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r9.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(12, $r10);

        $r11 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r11.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public androidx.media3.common.AudioAttributes getAudioAttributes()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.AudioAttributes $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.AudioAttributes audioAttributes>;

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture setRating(java.lang.String, androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.lang.String r1;
        androidx.media3.common.Rating r2;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.common.Rating;

        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,java.lang.String,androidx.media3.common.Rating)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setRating$19(java.lang.String,androidx.media3.common.Rating,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        $r4 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTaskWithSessionCommand(int,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>(40010, $r3);

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture setRating(androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Rating r1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Rating;

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.common.Rating)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setRating$20(androidx.media3.common.Rating,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        $r3 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTaskWithSessionCommand(int,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>(40010, $r2);

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.session.SessionCommand,android.os.Bundle)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$sendCustomCommand$21(androidx.media3.session.SessionCommand,android.os.Bundle,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        $r4 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: com.google.common.util.concurrent.ListenableFuture dispatchRemoteSessionTaskWithSessionCommand(androidx.media3.session.SessionCommand,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>(r1, $r3);

        return $r4;
    }

    public androidx.media3.common.Timeline getCurrentTimeline()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.Timeline $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        return $r2;
    }

    public void setMediaItem(androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaItem r1;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        java.util.List $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(31);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.common.MediaItem)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setMediaItem$22(androidx.media3.common.MediaItem,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setMediaItemsInternal(java.util.List,int,long,boolean)>($r3, -1, -9223372036854775807L, 1);

        return;
    }

    public void setMediaItem(androidx.media3.common.MediaItem, long)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaItem r1;
        long l0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        java.util.List $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        l0 := @parameter1: long;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(31);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.common.MediaItem,long)>(r0, r1, l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setMediaItem$23(androidx.media3.common.MediaItem,long,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setMediaItemsInternal(java.util.List,int,long,boolean)>($r3, -1, l0, 0);

        return;
    }

    public void setMediaItem(androidx.media3.common.MediaItem, boolean)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaItem r1;
        boolean z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        java.util.List $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(31);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.common.MediaItem,boolean)>(r0, r1, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setMediaItem$24(androidx.media3.common.MediaItem,boolean,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setMediaItemsInternal(java.util.List,int,long,boolean)>($r3, -1, -9223372036854775807L, z0);

        return;
    }

    public void setMediaItems(java.util.List)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,java.util.List)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setMediaItems$25(java.util.List,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setMediaItemsInternal(java.util.List,int,long,boolean)>(r1, -1, -9223372036854775807L, 1);

        return;
    }

    public void setMediaItems(java.util.List, boolean)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        boolean z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,java.util.List,boolean)>(r0, r1, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setMediaItems$26(java.util.List,boolean,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setMediaItemsInternal(java.util.List,int,long,boolean)>(r1, -1, -9223372036854775807L, z0);

        return;
    }

    public void setMediaItems(java.util.List, int, long)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        int i0;
        long l1;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,java.util.List,int,long)>(r0, r1, i0, l1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setMediaItems$27(java.util.List,int,long,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setMediaItemsInternal(java.util.List,int,long,boolean)>(r1, i0, l1, 0);

        return;
    }

    public void setPlaylistMetadata(androidx.media3.common.MediaMetadata)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaMetadata r1, $r4;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        androidx.media3.session.PlayerInfo $r3, $r5, $r6;
        androidx.media3.common.util.ListenerSet $r7, $r9;
        androidx.media3.common.util.ListenerSet$Event $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaMetadata;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(19);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.common.MediaMetadata)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setPlaylistMetadata$28(androidx.media3.common.MediaMetadata,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata playlistMetadata>;

        $z1 = virtualinvoke $r4.<androidx.media3.common.MediaMetadata: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaylistMetadata(androidx.media3.common.MediaMetadata)>(r1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r6;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r8 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.common.MediaMetadata)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$setPlaylistMetadata$29(androidx.media3.common.MediaMetadata,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(15, $r8);

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r9.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public androidx.media3.common.MediaMetadata getPlaylistMetadata()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.MediaMetadata $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata playlistMetadata>;

        return $r2;
    }

    public void addMediaItem(androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaItem r1;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        androidx.media3.common.Timeline $r3;
        int $i0;
        java.util.List $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.common.MediaItem)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$addMediaItem$30(androidx.media3.common.MediaItem,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline getCurrentTimeline()>();

        $i0 = virtualinvoke $r3.<androidx.media3.common.Timeline: int getWindowCount()>();

        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void addMediaItemsInternal(int,java.util.List)>($i0, $r4);

        return;
    }

    public void addMediaItem(int, androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.common.MediaItem r1;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        java.util.List $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int,androidx.media3.common.MediaItem)>(r0, i0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$addMediaItem$31(int,androidx.media3.common.MediaItem,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void addMediaItemsInternal(int,java.util.List)>(i0, $r3);

        return;
    }

    public void addMediaItems(java.util.List)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        androidx.media3.common.Timeline $r3;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,java.util.List)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$addMediaItems$32(java.util.List,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline getCurrentTimeline()>();

        $i0 = virtualinvoke $r3.<androidx.media3.common.Timeline: int getWindowCount()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void addMediaItemsInternal(int,java.util.List)>($i0, r1);

        return;
    }

    public void addMediaItems(int, java.util.List)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        java.util.List r1;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int,java.util.List)>(r0, i0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$addMediaItems$33(int,java.util.List,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void addMediaItemsInternal(int,java.util.List)>(i0, r1);

        return;
    }

    private void addMediaItemsInternal(int, java.util.List)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        androidx.media3.common.Timeline r2, $r7, $r12, r36;
        java.util.ArrayList r3, r4, $r9, $r10;
        androidx.media3.session.PlayerInfo r5, $r6, $r8, $r11, $r13, $r16, $r19, $r22, $r25, $r28, $r37;
        boolean $z0, $z1, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, $i16, $i17;
        androidx.media3.session.SessionPositionInfo $r14, $r17, $r20, $r23, $r26, $r29;
        androidx.media3.common.Player$PositionInfo $r15, $r18, $r21, $r24, $r27, $r30;
        java.lang.Object $r31;
        androidx.media3.common.MediaItem $r32;
        androidx.media3.common.Timeline$Window $r33, $r34, $r35;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i10 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = $r6.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $i0 = virtualinvoke $r7.<androidx.media3.common.Timeline: int getWindowCount()>();

        i11 = staticinvoke <java.lang.Math: int min(int,int)>(i10, $i0);

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r2 = $r8.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r4 = $r10;

        i12 = 0;

     label02:
        $i1 = virtualinvoke r2.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i12 >= $i1 goto label03;

        $r34 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r34.<androidx.media3.common.Timeline$Window: void <init>()>();

        $r35 = virtualinvoke r2.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i12, $r34);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r35);

        i12 = i12 + 1;

        goto label02;

     label03:
        i13 = 0;

     label04:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i13 >= $i2 goto label05;

        $i9 = i13 + i11;

        $r31 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i13);

        $r32 = (androidx.media3.common.MediaItem) $r31;

        $r33 = staticinvoke <androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline$Window createNewWindow(androidx.media3.common.MediaItem)>($r32);

        interfaceinvoke r3.<java.util.List: void add(int,java.lang.Object)>($i9, $r33);

        i13 = i13 + 1;

        goto label04;

     label05:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void rebuildPeriods(androidx.media3.common.Timeline,java.util.List,java.util.List)>(r2, r3, r4);

        r36 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline createMaskingTimeline(java.util.List,java.util.List)>(r3, r4);

        $r11 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r12 = $r11.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z1 = virtualinvoke $r12.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        i14 = 0;

        i15 = 0;

        goto label11;

     label06:
        $r13 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r14 = $r13.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r15 = $r14.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i3 = $r15.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        if $i3 < i11 goto label07;

        $r28 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r29 = $r28.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r30 = $r29.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i7 = $r30.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        $i8 = interfaceinvoke r1.<java.util.List: int size()>();

        $i16 = $i7 + $i8;

        goto label08;

     label07:
        $r16 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r17 = $r16.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r18 = $r17.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i16 = $r18.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

     label08:
        i14 = $i16;

        $r19 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r20 = $r19.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r21 = $r20.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i4 = $r21.<androidx.media3.common.Player$PositionInfo: int periodIndex>;

        if $i4 < i11 goto label09;

        $r25 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r26 = $r25.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r27 = $r26.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i5 = $r27.<androidx.media3.common.Player$PositionInfo: int periodIndex>;

        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        $i17 = $i5 + $i6;

        goto label10;

     label09:
        $r22 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r23 = $r22.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r24 = $r23.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i17 = $r24.<androidx.media3.common.Player$PositionInfo: int periodIndex>;

     label10:
        i15 = $i17;

     label11:
        $r37 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r5 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,int,int,int)>($r37, r36, i14, i15, 5);

        $z3 = virtualinvoke r2.<androidx.media3.common.Timeline: boolean isEmpty()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void updatePlayerInfo(androidx.media3.session.PlayerInfo,int,int,boolean,int,boolean,int)>(r5, 0, 1, 0, 5, $z3, 3);

        return;
    }

    public void removeMediaItem(int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, $i1;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$removeMediaItem$34(int,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $i1 = i0 + 1;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void removeMediaItemsInternal(int,int)>(i0, $i1);

        return;
    }

    public void removeMediaItems(int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        if i1 < i0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int,int)>(r0, i0, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$removeMediaItems$35(int,int,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void removeMediaItemsInternal(int,int)>(i0, i1);

        return;
    }

    public void clearMediaItems()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$clearMediaItems$36(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void removeMediaItemsInternal(int,int)>(0, 2147483647);

        return;
    }

    private void removeMediaItemsInternal(int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25;
        androidx.media3.common.Timeline r1, $r8, r30;
        java.util.ArrayList r2, r3, $r9, $r10;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7, z8, $z10;
        androidx.media3.common.Timeline$Window r4, r5, $r21, $r28, $r29, $r31, $r32;
        long l4, l5, $l14;
        androidx.media3.session.PlayerInfo $r6, $r7, $r11, $r14, $r15, $r18, $r25, $r27, r34, $r37;
        androidx.media3.session.SessionPositionInfo $r12, $r16, $r19, $r24, $r26;
        androidx.media3.common.Player$PositionInfo $r13, $r17, $r20, $r22, r33, r35;
        androidx.media3.common.MediaItem $r23;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i20 := @parameter1: int;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r1 = $r6.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = $r7.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        i1 = virtualinvoke $r8.<androidx.media3.common.Timeline: int getWindowCount()>();

        i21 = staticinvoke <java.lang.Math: int min(int,int)>(i20, i1);

        if i0 >= i1 goto label01;

        if i0 != i21 goto label02;

     label01:
        return;

     label02:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r2 = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = $r10;

        i22 = 0;

     label03:
        $i6 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i22 >= $i6 goto label06;

        if i22 < i0 goto label04;

        if i22 < i21 goto label05;

     label04:
        $r28 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r28.<androidx.media3.common.Timeline$Window: void <init>()>();

        $r29 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i22, $r28);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r29);

     label05:
        i22 = i22 + 1;

        goto label03;

     label06:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void rebuildPeriods(androidx.media3.common.Timeline,java.util.List,java.util.List)>(r1, r2, r3);

        r30 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline createMaskingTimeline(java.util.List,java.util.List)>(r2, r3);

        i2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        i23 = i2;

        $r11 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r12 = $r11.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r13 = $r12.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        i3 = $r13.<androidx.media3.common.Player$PositionInfo: int periodIndex>;

        i24 = i3;

        $i7 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        if $i7 < i0 goto label07;

        $i19 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        if $i19 >= i21 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z0 = $z5;

        $r31 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r31.<androidx.media3.common.Timeline$Window: void <init>()>();

        r4 = $r31;

        $z6 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z6 == 0 goto label09;

        goto label25;

     label09:
        $z1 = virtualinvoke r30.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z1 == 0 goto label10;

        i23 = -1;

        i24 = 0;

        goto label15;

     label10:
        if z0 == 0 goto label14;

        $i17 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getRepeatMode()>();

        $z2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean getShuffleModeEnabled()>();

        i25 = staticinvoke <androidx.media3.session.MediaControllerImplBase: int resolveSubsequentMediaItemIndex(int,boolean,int,androidx.media3.common.Timeline,int,int)>($i17, $z2, i2, r1, i0, i21);

        if i25 != -1 goto label11;

        $z3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean getShuffleModeEnabled()>();

        i23 = virtualinvoke r30.<androidx.media3.common.Timeline: int getFirstWindowIndex(boolean)>($z3);

        goto label13;

     label11:
        if i25 < i21 goto label12;

        $i18 = i21 - i0;

        i23 = i25 - $i18;

        goto label13;

     label12:
        i23 = i25;

     label13:
        $r32 = virtualinvoke r30.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i23, r4);

        i24 = $r32.<androidx.media3.common.Timeline$Window: int firstPeriodIndex>;

        goto label15;

     label14:
        if i2 < i21 goto label15;

        $i16 = i21 - i0;

        i23 = i23 - $i16;

        i24 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getNewPeriodIndexWithoutRemovedPeriods(androidx.media3.common.Timeline,int,int,int)>(r1, i3, i0, i21);

     label15:
        if z0 == 0 goto label18;

        if i23 != -1 goto label16;

        r33 = <androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo DEFAULT_POSITION_INFO>;

        $r27 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r26 = <androidx.media3.session.SessionPositionInfo: androidx.media3.session.SessionPositionInfo DEFAULT>;

        r34 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,androidx.media3.common.Player$PositionInfo,androidx.media3.session.SessionPositionInfo,int)>($r27, r30, r33, $r26, 4);

        goto label17;

     label16:
        $r21 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r21.<androidx.media3.common.Timeline$Window: void <init>()>();

        r5 = virtualinvoke r30.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i23, $r21);

        l4 = virtualinvoke r5.<androidx.media3.common.Timeline$Window: long getDefaultPositionMs()>();

        l5 = virtualinvoke r5.<androidx.media3.common.Timeline$Window: long getDurationMs()>();

        $r22 = new androidx.media3.common.Player$PositionInfo;

        $r23 = r5.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        specialinvoke $r22.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, i23, $r23, null, i24, l4, l4, -1, -1);

        r35 = $r22;

        $r25 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r24 = new androidx.media3.session.SessionPositionInfo;

        $l14 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i15 = staticinvoke <androidx.media3.session.MediaUtils: int calculateBufferedPercentage(long,long)>(l4, l5);

        specialinvoke $r24.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>(r35, 0, $l14, l5, l4, $i15, 0L, -9223372036854775807L, l5, l4);

        r34 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,androidx.media3.common.Player$PositionInfo,androidx.media3.session.SessionPositionInfo,int)>($r25, r30, r35, $r24, 4);

     label17:
        goto label19;

     label18:
        $r14 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r34 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,int,int,int)>($r14, r30, i23, i24, 4);

     label19:
        $i8 = r34.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i8 == 1 goto label20;

        $i11 = r34.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i11 == 4 goto label20;

        if i0 >= i21 goto label20;

        $i12 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i21 != $i12 goto label20;

        $i13 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        if $i13 < i0 goto label20;

        $z7 = 1;

        goto label21;

     label20:
        $z7 = 0;

     label21:
        z8 = $z7;

        if z8 == 0 goto label22;

        r34 = virtualinvoke r34.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>(4, null);

     label22:
        $r37 = r34;

        $r15 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r16 = $r15.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r17 = $r16.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i9 = $r17.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        if $i9 < i0 goto label23;

        $r18 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r19 = $r18.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r20 = $r19.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i10 = $r20.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        if $i10 >= i21 goto label23;

        $z10 = 1;

        goto label24;

     label23:
        $z10 = 0;

     label24:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void updatePlayerInfo(androidx.media3.session.PlayerInfo,int,int,boolean,int,boolean,int)>($r37, 0, 1, z0, 4, $z10, 3);

     label25:
        return;
    }

    public void moveMediaItem(int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1, $i2;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        if i1 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int,int)>(r0, i0, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$moveMediaItem$37(int,int,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $i2 = i0 + 1;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void moveMediaItemsInternal(int,int,int)>(i0, $i2, i1);

        return;
    }

    public void moveMediaItems(int, int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1, i2;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(20);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        if i0 > i1 goto label2;

        if i2 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int,int,int)>(r0, i0, i1, i2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$moveMediaItems$38(int,int,int,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void moveMediaItemsInternal(int,int,int)>(i0, i1, i2);

        return;
    }

    public int getCurrentPeriodIndex()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.session.SessionPositionInfo $r2;
        androidx.media3.common.Player$PositionInfo $r3;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r3 = $r2.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i0 = $r3.<androidx.media3.common.Player$PositionInfo: int periodIndex>;

        return $i0;
    }

    public int getCurrentMediaItemIndex()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1, $r4;
        androidx.media3.session.SessionPositionInfo $r2, $r5;
        androidx.media3.common.Player$PositionInfo $r3, $r6;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r3 = $r2.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i0 = $r3.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        if $i0 != -1 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r5 = $r4.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r6 = $r5.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i1 = $r6.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

     label2:
        return $i1;
    }

    public int getPreviousMediaItemIndex()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1, $r3, $r5, $r6;
        androidx.media3.common.Timeline $r2, $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z0 = virtualinvoke $r2.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $i3 = -1;

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i1 = $r5.<androidx.media3.session.PlayerInfo: int repeatMode>;

        $i2 = staticinvoke <androidx.media3.session.MediaControllerImplBase: int convertRepeatModeForNavigation(int)>($i1);

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z1 = $r6.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        $i3 = virtualinvoke $r4.<androidx.media3.common.Timeline: int getPreviousWindowIndex(int,int,boolean)>($i0, $i2, $z1);

     label2:
        return $i3;
    }

    public int getNextMediaItemIndex()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1, $r3, $r5, $r6;
        androidx.media3.common.Timeline $r2, $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z0 = virtualinvoke $r2.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $i3 = -1;

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i1 = $r5.<androidx.media3.session.PlayerInfo: int repeatMode>;

        $i2 = staticinvoke <androidx.media3.session.MediaControllerImplBase: int convertRepeatModeForNavigation(int)>($i1);

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z1 = $r6.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        $i3 = virtualinvoke $r4.<androidx.media3.common.Timeline: int getNextWindowIndex(int,int,boolean)>($i0, $i2, $z1);

     label2:
        return $i3;
    }

    public boolean hasPreviousMediaItem()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getPreviousMediaItemIndex()>();

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasNextMediaItem()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getNextMediaItemIndex()>();

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void seekToPreviousMediaItem()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(6);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekToPreviousMediaItem$39(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getPreviousMediaItemIndex()>();

        if $i0 == -1 goto label2;

        $i1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getPreviousMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i1, -9223372036854775807L);

     label2:
        return;
    }

    public void seekToNextMediaItem()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(8);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekToNextMediaItem$40(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getNextMediaItemIndex()>();

        if $i0 == -1 goto label2;

        $i1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getNextMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i1, -9223372036854775807L);

     label2:
        return;
    }

    public void seekToPrevious()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        androidx.media3.common.Timeline$Window r2, $r4;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r3;
        int $i0, $i1, $i5, $i6;
        long $l2, $l3;
        byte $b4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(7);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekToPrevious$41(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r3);

        r1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline getCurrentTimeline()>();

        $z2 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayingAd()>();

        if $z3 == 0 goto label3;

     label2:
        return;

     label3:
        z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean hasPreviousMediaItem()>();

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        $r4 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r4.<androidx.media3.common.Timeline$Window: void <init>()>();

        r2 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>($i0, $r4);

        $z4 = r2.<androidx.media3.common.Timeline$Window: boolean isDynamic>;

        if $z4 == 0 goto label4;

        $z5 = virtualinvoke r2.<androidx.media3.common.Timeline$Window: boolean isLive()>();

        if $z5 == 0 goto label4;

        if z0 == 0 goto label6;

        $i6 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getPreviousMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i6, -9223372036854775807L);

        goto label6;

     label4:
        if z0 == 0 goto label5;

        $l2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: long getCurrentPosition()>();

        $l3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: long getMaxSeekToPreviousPosition()>();

        $b4 = $l2 cmp $l3;

        if $b4 > 0 goto label5;

        $i5 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getPreviousMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i5, -9223372036854775807L);

        goto label6;

     label5:
        $i1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i1, 0L);

     label6:
        return;
    }

    public long getMaxSeekToPreviousPosition()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $l0 = $r1.<androidx.media3.session.PlayerInfo: long maxSeekToPreviousPositionMs>;

        return $l0;
    }

    public void seekToNext()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        androidx.media3.common.Timeline$Window r2, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r3;
        int $i0, $i1, $i2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(9);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$seekToNext$42(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r3);

        r1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline getCurrentTimeline()>();

        $z1 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayingAd()>();

        if $z2 == 0 goto label3;

     label2:
        return;

     label3:
        $z3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean hasNextMediaItem()>();

        if $z3 == 0 goto label4;

        $i2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getNextMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i2, -9223372036854775807L);

        goto label5;

     label4:
        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        $r4 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r4.<androidx.media3.common.Timeline$Window: void <init>()>();

        r2 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>($i0, $r4);

        $z4 = r2.<androidx.media3.common.Timeline$Window: boolean isDynamic>;

        if $z4 == 0 goto label5;

        $z5 = virtualinvoke r2.<androidx.media3.common.Timeline$Window: boolean isLive()>();

        if $z5 == 0 goto label5;

        $i1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i1, -9223372036854775807L);

     label5:
        return;
    }

    public int getRepeatMode()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r1.<androidx.media3.session.PlayerInfo: int repeatMode>;

        return $i0;
    }

    public void setRepeatMode(int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, $i1;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        androidx.media3.session.PlayerInfo $r2, $r3, $r4;
        androidx.media3.common.util.ListenerSet $r5, $r7;
        androidx.media3.common.util.ListenerSet$Event $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(15);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setRepeatMode$43(int,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i1 = $r2.<androidx.media3.session.PlayerInfo: int repeatMode>;

        if $i1 == i0 goto label2;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithRepeatMode(int)>(i0);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r4;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r6 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (int)>(i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$setRepeatMode$44(int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r5.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(8, $r6);

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public boolean getShuffleModeEnabled()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r1.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        return $z0;
    }

    public void setShuffleModeEnabled(boolean)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0, $z1, $z2;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        androidx.media3.session.PlayerInfo $r2, $r3, $r4;
        androidx.media3.common.util.ListenerSet $r5, $r7;
        androidx.media3.common.util.ListenerSet$Event $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(14);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,boolean)>(r0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setShuffleModeEnabled$45(boolean,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z2 = $r2.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        if $z2 == z0 goto label2;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithShuffleModeEnabled(boolean)>(z0);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r4;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r6 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (boolean)>(z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$setShuffleModeEnabled$46(boolean,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r5.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(9, $r6);

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public androidx.media3.common.text.CueGroup getCurrentCues()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.text.CueGroup $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.text.CueGroup cueGroup>;

        return $r2;
    }

    public float getVolume()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        float $f0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $f0 = $r1.<androidx.media3.session.PlayerInfo: float volume>;

        return $f0;
    }

    public void setVolume(float)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        float f0, $f1;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        androidx.media3.session.PlayerInfo $r2, $r3, $r4;
        byte $b0;
        androidx.media3.common.util.ListenerSet $r5, $r7;
        androidx.media3.common.util.ListenerSet$Event $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        f0 := @parameter0: float;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(24);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,float)>(r0, f0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setVolume$47(float,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $f1 = $r2.<androidx.media3.session.PlayerInfo: float volume>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithVolume(float)>(f0);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r4;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r6 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (float)>(f0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$setVolume$48(float,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r5.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(22, $r6);

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public androidx.media3.common.DeviceInfo getDeviceInfo()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.DeviceInfo $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        return $r2;
    }

    public int getDeviceVolume()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r1.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        return $i0;
    }

    public boolean isDeviceMuted()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r1.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        return $z0;
    }

    public void setDeviceVolume(int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, $i1;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        androidx.media3.session.PlayerInfo $r2, $r3, $r4, $r5;
        androidx.media3.common.util.ListenerSet $r6, $r8;
        androidx.media3.common.util.ListenerSet$Event $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(25);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setDeviceVolume$49(int,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i1 = $r2.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        if $i1 == i0 goto label2;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z1 = $r3.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>(i0, $z1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r5;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r7 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplBase,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setDeviceVolume$50(int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r6.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(30, $r7);

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r8.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public void increaseDeviceVolume()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        androidx.media3.session.PlayerInfo $r2, $r4, $r5, $r6;
        androidx.media3.common.DeviceInfo $r3;
        androidx.media3.common.util.ListenerSet $r7, $r9;
        androidx.media3.common.util.ListenerSet$Event $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(26);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$increaseDeviceVolume$51(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i1 = $r2.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        i0 = $i1 + 1;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        $i2 = $r3.<androidx.media3.common.DeviceInfo: int maxVolume>;

        if i0 > $i2 goto label2;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z1 = $r4.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>(i0, $z1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r6;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r8 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplBase,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$increaseDeviceVolume$52(int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(30, $r8);

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r9.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public void decreaseDeviceVolume()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        androidx.media3.session.PlayerInfo $r2, $r4, $r5, $r6;
        androidx.media3.common.DeviceInfo $r3;
        androidx.media3.common.util.ListenerSet $r7, $r9;
        androidx.media3.common.util.ListenerSet$Event $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(26);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$decreaseDeviceVolume$53(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i1 = $r2.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        i0 = $i1 - 1;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        $i2 = $r3.<androidx.media3.common.DeviceInfo: int minVolume>;

        if i0 < $i2 goto label2;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z1 = $r4.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>(i0, $z1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r6;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r8 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplBase,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$decreaseDeviceVolume$54(int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(30, $r8);

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r9.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public void setDeviceMuted(boolean)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0, $z1, $z2;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;
        androidx.media3.session.PlayerInfo $r2, $r3, $r4, $r5;
        int $i0;
        androidx.media3.common.util.ListenerSet $r6, $r8;
        androidx.media3.common.util.ListenerSet$Event $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(26);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,boolean)>(r0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setDeviceMuted$55(boolean,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z2 = $r2.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        if $z2 == z0 goto label2;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r3.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>($i0, z0);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r5;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r7 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplBase,boolean)>(r0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setDeviceMuted$56(boolean,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r6.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(30, $r7);

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r8.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public androidx.media3.common.VideoSize getVideoSize()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.VideoSize $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.VideoSize videoSize>;

        return $r2;
    }

    public androidx.media3.common.util.Size getSurfaceSize()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.util.Size $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.Size surfaceSize>;

        return $r1;
    }

    public void clearVideoSurface()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearSurfacesAndCallbacks()>();

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$clearVideoSurface$57(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommandAndWaitForFuture(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r1);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeNotifySurfaceSizeChanged(int,int)>(0, 0);

        return;
    }

    public void clearVideoSurface(android.view.Surface)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.Surface r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.Surface;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r1 == null goto label2;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface>;

        if $r2 == r1 goto label3;

     label2:
        return;

     label3:
        virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearVideoSurface()>();

        return;
    }

    public void setVideoSurface(android.view.Surface)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.Surface r1;
        byte b0, $b1;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.Surface;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearSurfacesAndCallbacks()>();

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface> = r1;

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,android.view.Surface)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setVideoSurface$58(android.view.Surface,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommandAndWaitForFuture(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        if r1 != null goto label2;

        $b1 = 0;

        goto label3;

     label2:
        $b1 = -1;

     label3:
        b0 = $b1;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeNotifySurfaceSizeChanged(int,int)>(b0, b0);

        return;
    }

    public void setVideoSurfaceHolder(android.view.SurfaceHolder)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.SurfaceHolder r1, $r4, $r6;
        android.view.Surface r2;
        android.graphics.Rect r3;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback $r5;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r7, $r8;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r1 != null goto label2;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearVideoSurface()>();

        return;

     label2:
        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder>;

        if $r4 != r1 goto label3;

        return;

     label3:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearSurfacesAndCallbacks()>();

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder> = r1;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SurfaceCallback surfaceCallback>;

        interfaceinvoke $r6.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>($r5);

        r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        if r2 == null goto label4;

        $z1 = virtualinvoke r2.<android.view.Surface: boolean isValid()>();

        if $z1 == 0 goto label4;

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface> = r2;

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,android.view.Surface)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setVideoSurfaceHolder$59(android.view.Surface,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommandAndWaitForFuture(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r8);

        r3 = interfaceinvoke r1.<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>();

        $i0 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeNotifySurfaceSizeChanged(int,int)>($i0, $i1);

        goto label5;

     label4:
        r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface> = null;

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setVideoSurfaceHolder$60(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommandAndWaitForFuture(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r7);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeNotifySurfaceSizeChanged(int,int)>(0, 0);

     label5:
        return;
    }

    public void clearVideoSurfaceHolder(android.view.SurfaceHolder)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.SurfaceHolder r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r1 == null goto label2;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder>;

        if $r2 == r1 goto label3;

     label2:
        return;

     label3:
        virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearVideoSurface()>();

        return;
    }

    public void setVideoSurfaceView(android.view.SurfaceView)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.SurfaceView r1;
        android.view.SurfaceHolder r2, $r3;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.SurfaceView;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r1 != null goto label2;

        $r3 = null;

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

     label3:
        r2 = $r3;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: void setVideoSurfaceHolder(android.view.SurfaceHolder)>(r2);

        return;
    }

    public void clearVideoSurfaceView(android.view.SurfaceView)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.SurfaceView r1;
        android.view.SurfaceHolder r2, $r3;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.SurfaceView;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r1 != null goto label2;

        $r3 = null;

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

     label3:
        r2 = $r3;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearVideoSurfaceHolder(android.view.SurfaceHolder)>(r2);

        return;
    }

    public void setVideoTextureView(android.view.TextureView)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.TextureView r1, $r3, $r5;
        android.graphics.SurfaceTexture r2;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback $r4;
        android.view.Surface $r6;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r7, $r8;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.TextureView;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r1 != null goto label2;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearVideoSurface()>();

        return;

     label2:
        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView>;

        if $r3 != r1 goto label3;

        return;

     label3:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearSurfacesAndCallbacks()>();

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView> = r1;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SurfaceCallback surfaceCallback>;

        virtualinvoke $r5.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>($r4);

        r2 = virtualinvoke r1.<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>();

        if r2 != null goto label4;

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setVideoTextureView$61(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommandAndWaitForFuture(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r8);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeNotifySurfaceSizeChanged(int,int)>(0, 0);

        goto label5;

     label4:
        $r6 = new android.view.Surface;

        specialinvoke $r6.<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>(r2);

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface> = $r6;

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setVideoTextureView$62(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommandAndWaitForFuture(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r7);

        $i0 = virtualinvoke r1.<android.view.TextureView: int getWidth()>();

        $i1 = virtualinvoke r1.<android.view.TextureView: int getHeight()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeNotifySurfaceSizeChanged(int,int)>($i0, $i1);

     label5:
        return;
    }

    public void clearVideoTextureView(android.view.TextureView)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.TextureView r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.TextureView;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(27);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r1 == null goto label2;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView>;

        if $r2 == r1 goto label3;

     label2:
        return;

     label3:
        virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: void clearVideoSurface()>();

        return;
    }

    public androidx.media3.common.MediaMetadata getMediaMetadata()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.MediaMetadata $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata mediaMetadata>;

        return $r2;
    }

    public androidx.media3.common.Player$Commands getAvailableCommands()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Player$Commands $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        return $r1;
    }

    public androidx.media3.common.Tracks getCurrentTracks()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.Tracks $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Tracks currentTracks>;

        return $r2;
    }

    public androidx.media3.common.TrackSelectionParameters getTrackSelectionParameters()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.TrackSelectionParameters $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.TrackSelectionParameters trackSelectionParameters>;

        return $r2;
    }

    public void setTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.TrackSelectionParameters r1, $r4;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r2;
        androidx.media3.session.PlayerInfo $r3, $r5, $r6;
        androidx.media3.common.util.ListenerSet $r7, $r9;
        androidx.media3.common.util.ListenerSet$Event $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayerCommandAvailable(int)>(29);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase,androidx.media3.common.TrackSelectionParameters)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setTrackSelectionParameters$63(androidx.media3.common.TrackSelectionParameters,androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommand(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r2);

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.TrackSelectionParameters trackSelectionParameters>;

        if r1 == $r4 goto label2;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)>(r1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r6;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r8 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.common.TrackSelectionParameters)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$setTrackSelectionParameters$64(androidx.media3.common.TrackSelectionParameters,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r7.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(19, $r8);

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r9.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

     label2:
        return;
    }

    public androidx.media3.session.SessionCommands getAvailableSessionCommands()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionCommands $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands>;

        return $r1;
    }

    public android.content.Context getContext()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.content.Context $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: android.content.Context context>;

        return $r1;
    }

    public android.support.v4.media.MediaBrowserCompat getBrowserCompat()
    {
        androidx.media3.session.MediaControllerImplBase r0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        return null;
    }

    private androidx.media3.common.Timeline createMaskingTimeline(java.util.List, java.util.List)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1, r2;
        androidx.media3.common.Timeline$RemotableTimeline $r3;
        com.google.common.collect.ImmutableList$Builder $r4, $r5, $r7, $r8;
        com.google.common.collect.ImmutableList $r6, $r9;
        int $i0;
        int[] $r10;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $r3 = new androidx.media3.common.Timeline$RemotableTimeline;

        $r4 = new com.google.common.collect.ImmutableList$Builder;

        specialinvoke $r4.<com.google.common.collect.ImmutableList$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r1);

        $r6 = virtualinvoke $r5.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        $r7 = new com.google.common.collect.ImmutableList$Builder;

        specialinvoke $r7.<com.google.common.collect.ImmutableList$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r2);

        $r9 = virtualinvoke $r8.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r10 = staticinvoke <androidx.media3.session.MediaUtils: int[] generateUnshuffledIndices(int)>($i0);

        specialinvoke $r3.<androidx.media3.common.Timeline$RemotableTimeline: void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,int[])>($r6, $r9, $r10);

        return $r3;
    }

    private void setMediaItemsInternal(java.util.List, int, long, boolean)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, $z10;
        java.util.ArrayList r2, r3, $r5, $r6;
        androidx.media3.session.MediaControllerImplBase$PeriodInfo r4;
        int $i0, $i1, $i11, $i15, $i16, i17, i19, $i20, i27;
        androidx.media3.common.Player$PositionInfo $r7, $r17, $r20, $r29, r30, $r32;
        java.lang.Object $r8, $r24;
        androidx.media3.common.MediaItem $r9, $r25;
        long $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, l18, $l21, $l22, $l23, $l25, $l26;
        androidx.media3.session.SessionPositionInfo $r10, $r16, $r19, $r31, r33;
        androidx.media3.session.PlayerInfo $r11, $r12, $r15, $r18, $r21, $r22, r34, $r35, r37, $r40;
        androidx.media3.common.Timeline $r13, $r14, r28, $r41;
        byte $b12, $b13, $b14, $b24;
        androidx.media3.common.IllegalSeekPositionException $r23;
        androidx.media3.common.Timeline$Window $r26;
        androidx.media3.common.Timeline$Period $r27;
        androidx.media3.common.PlaybackException $r36;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        i17 := @parameter1: int;

        l18 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        i19 = 0;

     label01:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i19 >= $i0 goto label02;

        $r24 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i19);

        $r25 = (androidx.media3.common.MediaItem) $r24;

        $r26 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.Timeline$Window convertToWindow(androidx.media3.common.MediaItem,int)>($r25, i19);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r27 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.Timeline$Period convertToPeriod(int)>(i19);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r27);

        i19 = i19 + 1;

        goto label01;

     label02:
        r28 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline createMaskingTimeline(java.util.List,java.util.List)>(r2, r3);

        $z1 = virtualinvoke r28.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z1 != 0 goto label03;

        $i16 = virtualinvoke r28.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i17 < $i16 goto label03;

        $r23 = new androidx.media3.common.IllegalSeekPositionException;

        specialinvoke $r23.<androidx.media3.common.IllegalSeekPositionException: void <init>(androidx.media3.common.Timeline,int,long)>(r28, i17, l18);

        throw $r23;

     label03:
        z7 = 0;

        if z0 == 0 goto label04;

        $r22 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z6 = $r22.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        i17 = virtualinvoke r28.<androidx.media3.common.Timeline: int getFirstWindowIndex(boolean)>($z6);

        l18 = -9223372036854775807L;

        goto label05;

     label04:
        if i17 != -1 goto label05;

        $r15 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r16 = $r15.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r17 = $r16.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        i17 = $r17.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        $r18 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r19 = $r18.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r20 = $r19.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        l18 = $r20.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $i15 = virtualinvoke r28.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i17 < $i15 goto label05;

        z7 = 1;

        $r21 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z5 = $r21.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        i17 = virtualinvoke r28.<androidx.media3.common.Timeline: int getFirstWindowIndex(boolean)>($z5);

        l18 = -9223372036854775807L;

     label05:
        r4 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$PeriodInfo getPeriodInfo(androidx.media3.common.Timeline,int,long)>(r28, i17, l18);

        if r4 != null goto label14;

        $r29 = new androidx.media3.common.Player$PositionInfo;

        $i20 = i17;

        $b12 = l18 cmp -9223372036854775807L;

        if $b12 != 0 goto label06;

        $l21 = 0L;

        goto label07;

     label06:
        $l21 = l18;

     label07:
        $b13 = l18 cmp -9223372036854775807L;

        if $b13 != 0 goto label08;

        $l22 = 0L;

        goto label09;

     label08:
        $l22 = l18;

     label09:
        specialinvoke $r29.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, $i20, null, null, 0, $l21, $l22, -1, -1);

        r30 = $r29;

        $r31 = new androidx.media3.session.SessionPositionInfo;

        $r32 = r30;

        $l23 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b24 = l18 cmp -9223372036854775807L;

        if $b24 != 0 goto label10;

        $l25 = 0L;

        goto label11;

     label10:
        $l25 = l18;

     label11:
        $b14 = l18 cmp -9223372036854775807L;

        if $b14 != 0 goto label12;

        $l26 = 0L;

        goto label13;

     label12:
        $l26 = l18;

     label13:
        specialinvoke $r31.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>($r32, 0, $l23, -9223372036854775807L, $l25, 0, 0L, -9223372036854775807L, -9223372036854775807L, $l26);

        r33 = $r31;

        goto label15;

     label14:
        $r7 = new androidx.media3.common.Player$PositionInfo;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i17);

        $r9 = (androidx.media3.common.MediaItem) $r8;

        $i1 = staticinvoke <androidx.media3.session.MediaControllerImplBase$PeriodInfo: int access$100(androidx.media3.session.MediaControllerImplBase$PeriodInfo)>(r4);

        $l2 = staticinvoke <androidx.media3.session.MediaControllerImplBase$PeriodInfo: long access$200(androidx.media3.session.MediaControllerImplBase$PeriodInfo)>(r4);

        $l3 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l2);

        $l4 = staticinvoke <androidx.media3.session.MediaControllerImplBase$PeriodInfo: long access$200(androidx.media3.session.MediaControllerImplBase$PeriodInfo)>(r4);

        $l5 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l4);

        specialinvoke $r7.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, i17, $r9, null, $i1, $l3, $l5, -1, -1);

        r30 = $r7;

        $r10 = new androidx.media3.session.SessionPositionInfo;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l7 = staticinvoke <androidx.media3.session.MediaControllerImplBase$PeriodInfo: long access$200(androidx.media3.session.MediaControllerImplBase$PeriodInfo)>(r4);

        $l8 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l7);

        $l9 = staticinvoke <androidx.media3.session.MediaControllerImplBase$PeriodInfo: long access$200(androidx.media3.session.MediaControllerImplBase$PeriodInfo)>(r4);

        $l10 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l9);

        specialinvoke $r10.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>(r30, 0, $l6, -9223372036854775807L, $l8, 0, 0L, -9223372036854775807L, -9223372036854775807L, $l10);

        r33 = $r10;

     label15:
        $r11 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r34 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,androidx.media3.common.Player$PositionInfo,androidx.media3.session.SessionPositionInfo,int)>($r11, r28, r30, r33, 4);

        i27 = r34.<androidx.media3.session.PlayerInfo: int playbackState>;

        if i17 == -1 goto label18;

        $i11 = r34.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i11 == 1 goto label18;

        $z4 = virtualinvoke r28.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z4 != 0 goto label16;

        if z7 == 0 goto label17;

     label16:
        i27 = 4;

        goto label18;

     label17:
        i27 = 2;

     label18:
        $r35 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r36 = $r35.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        r37 = virtualinvoke r34.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>(i27, $r36);

        $r40 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r41 = $r40.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z8 = virtualinvoke $r41.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z8 != 0 goto label19;

        $z9 = 1;

        goto label20;

     label19:
        $z9 = 0;

     label20:
        $r12 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r13 = $r12.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z2 = virtualinvoke $r13.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z2 == 0 goto label21;

        $r14 = r37.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z3 = virtualinvoke $r14.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z3 != 0 goto label22;

     label21:
        $z10 = 1;

        goto label23;

     label22:
        $z10 = 0;

     label23:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void updatePlayerInfo(androidx.media3.session.PlayerInfo,int,int,boolean,int,boolean,int)>(r37, 0, 1, $z9, 4, $z10, 3);

        return;
    }

    private void moveMediaItemsInternal(int, int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, $i17, $i18;
        androidx.media3.common.Timeline r1, $r8, r13;
        java.util.ArrayList r2, r3, $r9, $r10;
        androidx.media3.common.Timeline$Window r4, $r11, $r12, $r14, $r18, $r19;
        androidx.media3.session.PlayerInfo r5, $r6, $r7, $r15, $r20;
        boolean $z0;
        androidx.media3.session.SessionPositionInfo $r16;
        androidx.media3.common.Player$PositionInfo $r17;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i11 := @parameter1: int;

        i12 := @parameter2: int;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r1 = $r6.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = $r7.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        i1 = virtualinvoke $r8.<androidx.media3.common.Timeline: int getWindowCount()>();

        i13 = staticinvoke <java.lang.Math: int min(int,int)>(i11, i1);

        $i6 = i13 - i0;

        $i7 = i1 - $i6;

        i14 = staticinvoke <java.lang.Math: int min(int,int)>(i12, $i7);

        if i0 >= i1 goto label1;

        if i0 == i13 goto label1;

        if i0 != i14 goto label2;

     label1:
        return;

     label2:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r2 = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = $r10;

        i15 = 0;

     label3:
        if i15 >= i1 goto label4;

        $r11 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r11.<androidx.media3.common.Timeline$Window: void <init>()>();

        $r12 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i15, $r11);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

        i15 = i15 + 1;

        goto label3;

     label4:
        staticinvoke <androidx.media3.common.util.Util: void moveItems(java.util.List,int,int,int)>(r2, i0, i13, i14);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void rebuildPeriods(androidx.media3.common.Timeline,java.util.List,java.util.List)>(r1, r2, r3);

        r13 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline createMaskingTimeline(java.util.List,java.util.List)>(r2, r3);

        $z0 = virtualinvoke r13.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        i2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        i16 = i2;

        if i2 < i0 goto label5;

        if i2 >= i13 goto label5;

        $i10 = i2 - i0;

        i16 = $i10 + i14;

        goto label7;

     label5:
        if i13 > i2 goto label6;

        if i14 <= i2 goto label6;

        $i9 = i13 - i0;

        i16 = i2 - $i9;

        goto label7;

     label6:
        if i13 <= i2 goto label7;

        if i14 > i2 goto label7;

        $i8 = i13 - i0;

        i16 = i2 + $i8;

     label7:
        $r14 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r14.<androidx.media3.common.Timeline$Window: void <init>()>();

        r4 = $r14;

        $r15 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r16 = $r15.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r17 = $r16.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        i3 = $r17.<androidx.media3.common.Player$PositionInfo: int periodIndex>;

        $r18 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i2, r4);

        $i17 = $r18.<androidx.media3.common.Timeline$Window: int firstPeriodIndex>;

        i4 = i3 - $i17;

        $r19 = virtualinvoke r13.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i16, r4);

        $i18 = $r19.<androidx.media3.common.Timeline$Window: int firstPeriodIndex>;

        i5 = $i18 + i4;

        $r20 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r5 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,int,int,int)>($r20, r13, i16, i5, 5);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void updatePlayerInfo(androidx.media3.session.PlayerInfo,int,int,boolean,int,boolean,int)>(r5, 0, 1, 0, 5, 0, 0);

     label8:
        return;
    }

    private void seekToInternalByOffset(long)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        long l0, l1, $l2, l5, l6;
        byte $b3;
        int $i4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        l0 := @parameter0: long;

        $l2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: long getCurrentPosition()>();

        l5 = $l2 + l0;

        l1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: long getDuration()>();

        $b3 = l1 cmp -9223372036854775807L;

        if $b3 == 0 goto label1;

        l5 = staticinvoke <java.lang.Math: long min(long,long)>(l5, l1);

     label1:
        l6 = staticinvoke <java.lang.Math: long max(long,long)>(l5, 0L);

        $i4 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getCurrentMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void seekToInternal(int,long)>($i4, l6);

        return;
    }

    private void seekToInternal(int, long)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, $i3, $i7, $i8, $i12;
        long l1, $l4, $l5, $l15, $l16, $l17, $l18, $l20, $l21, $l22, $l23;
        androidx.media3.common.Timeline r1, $r8, $r29;
        byte b2, $b6, $b9, $b10, $b11, $b13, $b19;
        androidx.media3.session.MediaControllerImplBase$PeriodInfo r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        androidx.media3.session.PlayerInfo $r3, $r4, $r6, $r7, $r11, $r16, $r19, $r21, r23, $r27, $r28, $r33, $r35, r37;
        androidx.media3.common.PlaybackException $r5;
        androidx.media3.session.SessionPositionInfo $r9, $r12, $r14, $r17, $r20, $r22, $r31, $r34, $r36;
        androidx.media3.common.Player$PositionInfo $r10, $r13, $r15, $r18, $r24, r25;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r1 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z1 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        $i12 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i0 >= $i12 goto label02;

     label01:
        $z2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isPlayingAd()>();

        if $z2 == 0 goto label03;

     label02:
        return;

     label03:
        $i3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: int getPlaybackState()>();

        if $i3 != 1 goto label04;

        $b13 = 1;

        goto label05;

     label04:
        $b13 = 2;

     label05:
        b2 = $b13;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r5 = $r4.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        r23 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>(b2, $r5);

        r2 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$PeriodInfo getPeriodInfo(androidx.media3.common.Timeline,int,long)>(r1, i0, l1);

        if r2 != null goto label14;

        $r24 = new androidx.media3.common.Player$PositionInfo;

        $b9 = l1 cmp -9223372036854775807L;

        if $b9 != 0 goto label06;

        $l15 = 0L;

        goto label07;

     label06:
        $l15 = l1;

     label07:
        $b10 = l1 cmp -9223372036854775807L;

        if $b10 != 0 goto label08;

        $l16 = 0L;

        goto label09;

     label08:
        $l16 = l1;

     label09:
        specialinvoke $r24.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, i0, null, null, 0, $l15, $l16, -1, -1);

        r25 = $r24;

        $r27 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r28 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r29 = $r28.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r31 = new androidx.media3.session.SessionPositionInfo;

        $r33 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r34 = $r33.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $z4 = $r34.<androidx.media3.session.SessionPositionInfo: boolean isPlayingAd>;

        $l17 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r35 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r36 = $r35.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l18 = $r36.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        $b19 = l1 cmp -9223372036854775807L;

        if $b19 != 0 goto label10;

        $l20 = 0L;

        goto label11;

     label10:
        $l20 = l1;

     label11:
        $r19 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r20 = $r19.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l21 = $r20.<androidx.media3.session.SessionPositionInfo: long currentLiveOffsetMs>;

        $r21 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r22 = $r21.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l22 = $r22.<androidx.media3.session.SessionPositionInfo: long contentDurationMs>;

        $b11 = l1 cmp -9223372036854775807L;

        if $b11 != 0 goto label12;

        $l23 = 0L;

        goto label13;

     label12:
        $l23 = l1;

     label13:
        specialinvoke $r31.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>(r25, $z4, $l17, $l18, $l20, 0, 0L, $l21, $l22, $l23);

        r37 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,androidx.media3.common.Player$PositionInfo,androidx.media3.session.SessionPositionInfo,int)>($r27, $r29, r25, $r31, 1);

        goto label15;

     label14:
        r37 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,androidx.media3.session.MediaControllerImplBase$PeriodInfo)>(r23, r1, r2);

     label15:
        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = $r7.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z3 = virtualinvoke $r8.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z3 != 0 goto label16;

        $r14 = r37.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r15 = $r14.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i8 = $r15.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        $r16 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r17 = $r16.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r18 = $r17.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i7 = $r18.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        if $i8 == $i7 goto label16;

        $z5 = 1;

        goto label17;

     label16:
        $z5 = 0;

     label17:
        z6 = $z5;

        if z6 != 0 goto label18;

        $r9 = r37.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r10 = $r9.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l5 = $r10.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $r11 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r12 = $r11.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r13 = $r12.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l4 = $r13.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $b6 = $l5 cmp $l4;

        if $b6 == 0 goto label19;

     label18:
        $z7 = 1;

        goto label20;

     label19:
        $z7 = 0;

     label20:
        z0 = $z7;

        if z0 != 0 goto label21;

        return;

     label21:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void updatePlayerInfo(androidx.media3.session.PlayerInfo,int,int,boolean,int,boolean,int)>(r37, 0, 1, z0, 1, z6, 2);

        return;
    }

    private void setPlayWhenReady(boolean, int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0, $z1;
        int i0, i1, $i3;
        androidx.media3.session.PlayerInfo r1, $r2, $r3, $r4;
        long $l2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z1 = $r2.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z1 != z0 goto label1;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i3 = $r4.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        if $i3 != i0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeUpdateCurrentPositionMs()>();

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<androidx.media3.session.MediaControllerImplBase: long lastSetPlayWhenReadyCalledTimeMs> = $l2;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r1 = virtualinvoke $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlayWhenReady(boolean,int,int)>(z0, i1, i0);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void updatePlayerInfo(androidx.media3.session.PlayerInfo,int,int,boolean,int,boolean,int)>(r1, 0, i1, 0, 5, 0, 0);

        return;
    }

    private void updatePlayerInfo(androidx.media3.session.PlayerInfo, int, int, boolean, int, boolean, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        androidx.media3.common.Timeline $r3, $r4;
        androidx.media3.common.util.ListenerSet $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        androidx.media3.common.util.ListenerSet$Event $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.PlayerInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        z1 := @parameter5: boolean;

        i3 := @parameter6: int;

        r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = r1;

        if z1 == 0 goto label1;

        $r18 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r19 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo,int)>(r1, i3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$updatePlayerInfo$65(androidx.media3.session.PlayerInfo,int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r18.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(1, $r19);

     label1:
        if z0 == 0 goto label2;

        $r16 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r17 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo,int)>(r1, i2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$updatePlayerInfo$66(androidx.media3.session.PlayerInfo,int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r16.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(11, $r17);

     label2:
        $r4 = r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r3 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z2 = virtualinvoke $r4.<androidx.media3.common.Timeline: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label3;

        $r14 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r15 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo,int)>(r1, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$updatePlayerInfo$67(androidx.media3.session.PlayerInfo,int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r14.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(0, $r15);

     label3:
        $i5 = r2.<androidx.media3.session.PlayerInfo: int playbackState>;

        $i4 = r1.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i5 == $i4 goto label4;

        $r12 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r13 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$updatePlayerInfo$68(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r12.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(4, $r13);

     label4:
        $z4 = r2.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        $z3 = r1.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z4 == $z3 goto label5;

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r11 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo,int)>(r1, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$updatePlayerInfo$69(androidx.media3.session.PlayerInfo,int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r10.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(5, $r11);

     label5:
        $i7 = r2.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        $i6 = r1.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        if $i7 == $i6 goto label6;

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r9 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$updatePlayerInfo$70(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r8.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(6, $r9);

     label6:
        $z6 = r2.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        $z5 = r1.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        if $z6 == $z5 goto label7;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r7 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$updatePlayerInfo$71(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r6.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(7, $r7);

     label7:
        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r5.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

        return;
    }

    private boolean requestConnectToService()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        short s0, $s2;
        android.content.Intent r1, $r2;
        boolean z0;
        int $i1;
        androidx.media3.session.SessionToken $r3, $r5, $r12;
        java.lang.String $r4, $r6, $r15;
        androidx.media3.session.MediaControllerImplBase$SessionServiceConnection $r8;
        android.content.Context $r9;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 29 goto label1;

        $s2 = 4097;

        goto label2;

     label1:
        $s2 = 1;

     label2:
        s0 = $s2;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("androidx.media3.session.MediaSessionService");

        r1 = $r2;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.SessionToken: java.lang.String getPackageName()>();

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.SessionToken: java.lang.String getServiceName()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r4, $r6);

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: android.content.Context context>;

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection serviceConnection>;

        z0 = virtualinvoke $r9.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r1, $r8, s0);

        if z0 != 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bind to ");

        $r12 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplBase", $r15);

        return 0;

     label3:
        return 1;
    }

    private boolean requestConnectToSession(android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.os.Bundle r1, $r14;
        androidx.media3.session.IMediaSession r2;
        int i0, $i1;
        androidx.media3.session.ConnectionRequest r3, $r10;
        java.lang.Throwable r4, $r15;
        androidx.media3.session.SessionToken $r5;
        java.lang.Object $r6, $r7;
        android.os.IBinder $r8;
        androidx.media3.session.SequencedFutureManager $r9;
        android.content.Context $r11;
        java.lang.String $r12;
        androidx.media3.session.MediaControllerStub $r13;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.os.Bundle;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.SessionToken: java.lang.Object getBinder()>();

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r6);

        $r8 = (android.os.IBinder) $r7;

        r2 = staticinvoke <androidx.media3.session.IMediaSession$Stub: androidx.media3.session.IMediaSession asInterface(android.os.IBinder)>($r8);

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        i0 = virtualinvoke $r9.<androidx.media3.session.SequencedFutureManager: int obtainNextSequenceNumber()>();

        $r10 = new androidx.media3.session.ConnectionRequest;

        $r11 = r0.<androidx.media3.session.MediaControllerImplBase: android.content.Context context>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getPackageName()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        specialinvoke $r10.<androidx.media3.session.ConnectionRequest: void <init>(java.lang.String,int,android.os.Bundle)>($r12, $i1, r1);

        r3 = $r10;

     label1:
        $r13 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r14 = virtualinvoke r3.<androidx.media3.session.ConnectionRequest: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void connect(androidx.media3.session.IMediaController,int,android.os.Bundle)>($r13, i0, $r14);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r4 = $r15;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MCImplBase", "Failed to call connection request.", r4);

        return 0;

     label4:
        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void clearSurfacesAndCallbacks()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.TextureView $r1, $r6;
        android.view.SurfaceHolder $r2, $r5;
        android.view.Surface $r3;
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView>;

        if $r1 == null goto label1;

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView>;

        virtualinvoke $r6.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>(null);

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView> = null;

     label1:
        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder>;

        if $r2 == null goto label2;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SurfaceCallback surfaceCallback>;

        interfaceinvoke $r5.<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder$Callback)>($r4);

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder> = null;

     label2:
        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface>;

        if $r3 == null goto label3;

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface> = null;

     label3:
        return;
    }

    private void maybeNotifySurfaceSizeChanged(int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1, $i2, $i3;
        androidx.media3.common.util.Size $r1, $r2, $r5;
        androidx.media3.common.util.ListenerSet $r3;
        androidx.media3.common.util.ListenerSet$Event $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.Size surfaceSize>;

        $i2 = virtualinvoke $r1.<androidx.media3.common.util.Size: int getWidth()>();

        if $i2 != i0 goto label1;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.Size surfaceSize>;

        $i3 = virtualinvoke $r5.<androidx.media3.common.util.Size: int getHeight()>();

        if $i3 == i1 goto label2;

     label1:
        $r2 = new androidx.media3.common.util.Size;

        specialinvoke $r2.<androidx.media3.common.util.Size: void <init>(int,int)>(i0, i1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.Size surfaceSize> = $r2;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r4 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (int,int)>(i0, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$maybeNotifySurfaceSizeChanged$72(int,int,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r3.<androidx.media3.common.util.ListenerSet: void sendEvent(int,androidx.media3.common.util.ListenerSet$Event)>(24, $r4);

     label2:
        return;
    }

    androidx.media3.session.IMediaSession getSessionInterfaceWithSessionCommandIfAble(int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.session.SessionCommands $r1;
        boolean $z0, $z1;
        androidx.media3.session.IMediaSession $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands>;

        $z0 = virtualinvoke $r1.<androidx.media3.session.SessionCommands: boolean contains(int)>(i0);

        if $z0 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Controller isn\'t allowed to call command, commandCode=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplBase", $r6);

        return null;

     label3:
        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        return $r2;
    }

    androidx.media3.session.IMediaSession getSessionInterfaceWithSessionCommandIfAble(androidx.media3.session.SessionCommand)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionCommand r1;
        int $i0;
        androidx.media3.session.SessionCommands $r2;
        boolean $z0, $z1;
        androidx.media3.session.IMediaSession $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        $i0 = r1.<androidx.media3.session.SessionCommand: int commandCode>;

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands>;

        $z0 = virtualinvoke $r2.<androidx.media3.session.SessionCommands: boolean contains(androidx.media3.session.SessionCommand)>(r1);

        if $z0 != 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Controller isn\'t allowed to call custom session command:");

        $r6 = r1.<androidx.media3.session.SessionCommand: java.lang.String customAction>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplBase", $r8);

        return null;

     label3:
        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        return $r3;
    }

    void notifyPeriodicSessionPositionInfoChanged(androidx.media3.session.SessionPositionInfo)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionPositionInfo r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionPositionInfo;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void updateSessionPositionInfoIfNeeded(androidx.media3.session.SessionPositionInfo)>(r1);

        return;
    }

    void setFutureResult(int, java.lang.Object)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        java.lang.Object r1;
        androidx.media3.session.SequencedFutureManager $r2;
        androidx.media3.session.MediaController $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SequencedFutureManager sequencedFutureManager>;

        virtualinvoke $r2.<androidx.media3.session.SequencedFutureManager: void setFutureResult(int,java.lang.Object)>(i0, r1);

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerImplBase,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$setFutureResult$73(int)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r3.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r4);

        return;
    }

    void onConnected(androidx.media3.session.ConnectionState)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.ConnectionState r1;
        java.lang.Throwable r2, $r24;
        androidx.media3.session.IMediaSession $r3, $r4, $r13, $r21;
        android.app.PendingIntent $r5;
        androidx.media3.session.SessionCommands $r6;
        androidx.media3.common.Player$Commands $r7, $r8, $r9, $r10, $r11;
        androidx.media3.session.PlayerInfo $r12;
        android.os.IBinder $r14;
        android.os.IBinder$DeathRecipient $r15;
        androidx.media3.session.SessionToken $r16, $r17, $r18;
        int $i0, $i1, $i2;
        java.lang.String $r19;
        android.os.Bundle $r20;
        androidx.media3.session.MediaController $r22, $r23, $r25;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.ConnectionState;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        if $r3 == null goto label1;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("MCImplBase", "Cannot be notified about the connection result many times. Probably a bug or malicious app.");

        $r23 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        virtualinvoke $r23.<androidx.media3.session.MediaController: void release()>();

        return;

     label1:
        $r4 = r1.<androidx.media3.session.ConnectionState: androidx.media3.session.IMediaSession sessionBinder>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession> = $r4;

        $r5 = r1.<androidx.media3.session.ConnectionState: android.app.PendingIntent sessionActivity>;

        r0.<androidx.media3.session.MediaControllerImplBase: android.app.PendingIntent sessionActivity> = $r5;

        $r6 = r1.<androidx.media3.session.ConnectionState: androidx.media3.session.SessionCommands sessionCommands>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands> = $r6;

        $r7 = r1.<androidx.media3.session.ConnectionState: androidx.media3.common.Player$Commands playerCommandsFromSession>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromSession> = $r7;

        $r8 = r1.<androidx.media3.session.ConnectionState: androidx.media3.common.Player$Commands playerCommandsFromPlayer>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromPlayer> = $r8;

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromSession>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromPlayer>;

        $r11 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.Player$Commands intersect(androidx.media3.common.Player$Commands,androidx.media3.common.Player$Commands)>($r10, $r9);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands> = $r11;

        $r12 = r1.<androidx.media3.session.ConnectionState: androidx.media3.session.PlayerInfo playerInfo>;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r12;

     label2:
        $r13 = r1.<androidx.media3.session.ConnectionState: androidx.media3.session.IMediaSession sessionBinder>;

        $r14 = interfaceinvoke $r13.<androidx.media3.session.IMediaSession: android.os.IBinder asBinder()>();

        $r15 = r0.<androidx.media3.session.MediaControllerImplBase: android.os.IBinder$DeathRecipient deathRecipient>;

        interfaceinvoke $r14.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r15, 0);

     label3:
        goto label5;

     label4:
        $r24 := @caughtexception;

        r2 = $r24;

        $r25 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        virtualinvoke $r25.<androidx.media3.session.MediaController: void release()>();

        return;

     label5:
        $r16 = new androidx.media3.session.SessionToken;

        $r17 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        $i0 = virtualinvoke $r17.<androidx.media3.session.SessionToken: int getUid()>();

        $i1 = r1.<androidx.media3.session.ConnectionState: int libraryVersion>;

        $i2 = r1.<androidx.media3.session.ConnectionState: int sessionInterfaceVersion>;

        $r18 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        $r19 = virtualinvoke $r18.<androidx.media3.session.SessionToken: java.lang.String getPackageName()>();

        $r21 = r1.<androidx.media3.session.ConnectionState: androidx.media3.session.IMediaSession sessionBinder>;

        $r20 = r1.<androidx.media3.session.ConnectionState: android.os.Bundle tokenExtras>;

        specialinvoke $r16.<androidx.media3.session.SessionToken: void <init>(int,int,int,int,java.lang.String,androidx.media3.session.IMediaSession,android.os.Bundle)>($i0, 0, $i1, $i2, $r19, $r21, $r20);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken connectedToken> = $r16;

        $r22 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        virtualinvoke $r22.<androidx.media3.session.MediaController: void notifyAccepted()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void sendControllerResult(int, androidx.media3.session.SessionResult)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.session.SessionResult r1;
        androidx.media3.session.IMediaSession r2;
        java.lang.Throwable r3, $r6;
        androidx.media3.session.MediaControllerStub $r4;
        android.os.Bundle $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionResult;

        r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        if r2 != null goto label1;

        return;

     label1:
        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r5 = virtualinvoke r1.<androidx.media3.session.SessionResult: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void onControllerResult(androidx.media3.session.IMediaController,int,android.os.Bundle)>($r4, i0, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplBase", "Error in sending");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void sendControllerResultWhenReady(int, com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        com.google.common.util.concurrent.ListenableFuture r1;
        java.lang.Runnable $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerImplBase,com.google.common.util.concurrent.ListenableFuture,int)>(r0, r1, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$sendControllerResultWhenReady$74(com.google.common.util.concurrent.ListenableFuture,int)>, methodtype: void __METHODTYPE__());

        $r3 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r2, $r3);

        return;
    }

    void onCustomCommand(int, androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2;
        boolean $z0;
        androidx.media3.session.MediaController $r3;
        androidx.media3.common.util.Consumer $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionCommand;

        r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r4 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplBase,androidx.media3.session.SessionCommand,android.os.Bundle,int)>(r0, r1, r2, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$onCustomCommand$75(androidx.media3.session.SessionCommand,android.os.Bundle,int,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r3.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r4);

        return;
    }

    void onPlayerInfoChanged(androidx.media3.session.PlayerInfo, androidx.media3.session.PlayerInfo$BundlingExclusions)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo r1, $r6, $r11, $r95, r98, r102;
        androidx.media3.common.PlaybackException r2, r3, $r89;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        androidx.media3.common.MediaItem r4, r5;
        androidx.media3.common.Player$Commands $r7, $r93;
        androidx.media3.session.PlayerInfo$BundlingExclusions $r8, $r92, $r94, r99;
        android.util.Pair $r9, r100;
        java.lang.Object $r10, $r96, $r97;
        androidx.media3.common.Tracks $r12, $r13;
        androidx.media3.common.PlaybackParameters $r14, $r15;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.media3.common.Timeline $r16, $r17;
        androidx.media3.common.MediaMetadata $r18, $r19, $r103, $r104;
        float $f0, $f1;
        byte $b2, $b11, $b14, $b17;
        androidx.media3.common.AudioAttributes $r20, $r21;
        androidx.media3.common.text.CueGroup $r22, $r23;
        com.google.common.collect.ImmutableList $r24, $r25;
        androidx.media3.common.DeviceInfo $r26, $r27;
        androidx.media3.common.util.ListenerSet $r28, $r34, $r38, $r39, $r41, $r43, $r45, $r47, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r90;
        androidx.media3.common.util.ListenerSet$Event $r29, $r35, $r40, $r42, $r44, $r46, $r48, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r91;
        androidx.media3.common.VideoSize $r30, $r31;
        androidx.media3.common.Player$PositionInfo $r32, $r33, $r49, $r50;
        long $l9, $l10, $l12, $l13, $l15, $l16;
        androidx.media3.common.TrackSelectionParameters $r36, $r37;
        androidx.collection.ArraySet $r101;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r98 := @parameter0: androidx.media3.session.PlayerInfo;

        r99 := @parameter1: androidx.media3.session.PlayerInfo$BundlingExclusions;

        $z1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isConnected()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        $r6 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo pendingPlayerInfo>;

        if $r6 == null goto label02;

        $r92 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo$BundlingExclusions pendingBundlingExclusions>;

        if $r92 == null goto label02;

        $r95 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo pendingPlayerInfo>;

        $r94 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo$BundlingExclusions pendingBundlingExclusions>;

        $r93 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        r100 = staticinvoke <androidx.media3.session.MediaUtils: android.util.Pair mergePlayerInfo(androidx.media3.session.PlayerInfo,androidx.media3.session.PlayerInfo$BundlingExclusions,androidx.media3.session.PlayerInfo,androidx.media3.session.PlayerInfo$BundlingExclusions,androidx.media3.common.Player$Commands)>($r95, $r94, r98, r99, $r93);

        $r96 = r100.<android.util.Pair: java.lang.Object first>;

        r98 = (androidx.media3.session.PlayerInfo) $r96;

        $r97 = r100.<android.util.Pair: java.lang.Object second>;

        r99 = (androidx.media3.session.PlayerInfo$BundlingExclusions) $r97;

     label02:
        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo pendingPlayerInfo> = null;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo$BundlingExclusions pendingBundlingExclusions> = null;

        $r101 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.collection.ArraySet pendingMaskingSequencedFutureNumbers>;

        $z22 = virtualinvoke $r101.<androidx.collection.ArraySet: boolean isEmpty()>();

        if $z22 != 0 goto label03;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo pendingPlayerInfo> = r98;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo$BundlingExclusions pendingBundlingExclusions> = r99;

        return;

     label03:
        r102 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = <androidx.media3.session.PlayerInfo$BundlingExclusions: androidx.media3.session.PlayerInfo$BundlingExclusions NONE>;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        $r9 = staticinvoke <androidx.media3.session.MediaUtils: android.util.Pair mergePlayerInfo(androidx.media3.session.PlayerInfo,androidx.media3.session.PlayerInfo$BundlingExclusions,androidx.media3.session.PlayerInfo,androidx.media3.session.PlayerInfo$BundlingExclusions,androidx.media3.common.Player$Commands)>(r102, $r8, r98, r99, $r7);

        $r10 = $r9.<android.util.Pair: java.lang.Object first>;

        $r11 = (androidx.media3.session.PlayerInfo) $r10;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r11;

        r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        r2 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        r3 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        if r2 == r3 goto label04;

        if r2 == null goto label05;

        $z21 = virtualinvoke r2.<androidx.media3.common.PlaybackException: boolean errorInfoEquals(androidx.media3.common.PlaybackException)>(r3);

        if $z21 == 0 goto label05;

     label04:
        $z23 = 1;

        goto label06;

     label05:
        $z23 = 0;

     label06:
        z0 = $z23;

        if z0 != 0 goto label07;

        $r87 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r88 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$76(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r87.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(10, $r88);

        $r89 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        if $r89 == null goto label07;

        $r90 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r91 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$77(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r90.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(10, $r91);

     label07:
        r4 = virtualinvoke r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        r5 = virtualinvoke r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        $z24 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, r5);

        if $z24 != 0 goto label08;

        $r85 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r86 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.common.MediaItem,androidx.media3.session.PlayerInfo)>(r5, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$78(androidx.media3.common.MediaItem,androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r85.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(1, $r86);

     label08:
        $r13 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.Tracks currentTracks>;

        $r12 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Tracks currentTracks>;

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z2 != 0 goto label09;

        $r83 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r84 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$79(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r83.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(2, $r84);

     label09:
        $r15 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        $r14 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        $z3 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r15, $r14);

        if $z3 != 0 goto label10;

        $r81 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r82 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$80(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r81.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(12, $r82);

     label10:
        $i1 = r102.<androidx.media3.session.PlayerInfo: int repeatMode>;

        $i0 = r1.<androidx.media3.session.PlayerInfo: int repeatMode>;

        if $i1 == $i0 goto label11;

        $r79 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r80 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$81(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r79.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(8, $r80);

     label11:
        $z5 = r102.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        $z4 = r1.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        if $z5 == $z4 goto label12;

        $r77 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r78 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$82(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r77.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(9, $r78);

     label12:
        $r17 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r16 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z6 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r17, $r16);

        if $z6 != 0 goto label13;

        $r75 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r76 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$83(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r75.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(0, $r76);

     label13:
        $r19 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata playlistMetadata>;

        $r18 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata playlistMetadata>;

        $z7 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r19, $r18);

        if $z7 != 0 goto label14;

        $r73 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r74 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$84(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r73.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(15, $r74);

     label14:
        $f1 = r102.<androidx.media3.session.PlayerInfo: float volume>;

        $f0 = r1.<androidx.media3.session.PlayerInfo: float volume>;

        $b2 = $f1 cmpl $f0;

        if $b2 == 0 goto label15;

        $r71 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r72 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$85(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r71.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(22, $r72);

     label15:
        $r21 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.AudioAttributes audioAttributes>;

        $r20 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.AudioAttributes audioAttributes>;

        $z8 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r21, $r20);

        if $z8 != 0 goto label16;

        $r69 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r70 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$86(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r69.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(20, $r70);

     label16:
        $r22 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.text.CueGroup cueGroup>;

        $r25 = $r22.<androidx.media3.common.text.CueGroup: com.google.common.collect.ImmutableList cues>;

        $r23 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.text.CueGroup cueGroup>;

        $r24 = $r23.<androidx.media3.common.text.CueGroup: com.google.common.collect.ImmutableList cues>;

        $z9 = virtualinvoke $r25.<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>($r24);

        if $z9 != 0 goto label17;

        $r65 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r66 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$87(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r65.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(27, $r66);

        $r67 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r68 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$88(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r67.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(27, $r68);

     label17:
        $r27 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        $r26 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        $z10 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r27, $r26);

        if $z10 != 0 goto label18;

        $r63 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r64 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$89(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r63.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(29, $r64);

     label18:
        $i4 = r102.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        $i3 = r1.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        if $i4 != $i3 goto label19;

        $z20 = r102.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        $z19 = r1.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        if $z20 == $z19 goto label20;

     label19:
        $r28 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r29 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$90(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r28.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(30, $r29);

     label20:
        $z25 = r102.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        $z26 = r1.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z25 == $z26 goto label21;

        $r61 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r62 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$91(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r61.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(5, $r62);

     label21:
        $i6 = r102.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        $i5 = r1.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        if $i6 == $i5 goto label22;

        $r59 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r60 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$92(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r59.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(6, $r60);

     label22:
        $i8 = r102.<androidx.media3.session.PlayerInfo: int playbackState>;

        $i7 = r1.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i8 == $i7 goto label23;

        $r57 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r58 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$93(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r57.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(4, $r58);

     label23:
        $z12 = r102.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        $z11 = r1.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        if $z12 == $z11 goto label24;

        $r55 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r56 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$94(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r55.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(7, $r56);

     label24:
        $z14 = r102.<androidx.media3.session.PlayerInfo: boolean isLoading>;

        $z13 = r1.<androidx.media3.session.PlayerInfo: boolean isLoading>;

        if $z14 == $z13 goto label25;

        $r53 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r54 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$95(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r53.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(3, $r54);

     label25:
        $r31 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.VideoSize videoSize>;

        $r30 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.VideoSize videoSize>;

        $z15 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r31, $r30);

        if $z15 != 0 goto label26;

        $r51 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r52 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$96(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r51.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(25, $r52);

     label26:
        $r33 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.Player$PositionInfo oldPositionInfo>;

        $r32 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Player$PositionInfo oldPositionInfo>;

        $z16 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r33, $r32);

        if $z16 == 0 goto label27;

        $r50 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.Player$PositionInfo newPositionInfo>;

        $r49 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.Player$PositionInfo newPositionInfo>;

        $z18 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r50, $r49);

        if $z18 != 0 goto label28;

     label27:
        $r34 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r35 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$97(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r34.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(11, $r35);

     label28:
        $r103 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata mediaMetadata>;

        $r104 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata mediaMetadata>;

        $z27 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r103, $r104);

        if $z27 != 0 goto label29;

        $r47 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r48 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$98(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r47.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(14, $r48);

     label29:
        $l10 = r102.<androidx.media3.session.PlayerInfo: long seekBackIncrementMs>;

        $l9 = r1.<androidx.media3.session.PlayerInfo: long seekBackIncrementMs>;

        $b11 = $l10 cmp $l9;

        if $b11 == 0 goto label30;

        $r45 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r46 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$99(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r45.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(16, $r46);

     label30:
        $l13 = r102.<androidx.media3.session.PlayerInfo: long seekForwardIncrementMs>;

        $l12 = r1.<androidx.media3.session.PlayerInfo: long seekForwardIncrementMs>;

        $b14 = $l13 cmp $l12;

        if $b14 == 0 goto label31;

        $r43 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r44 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$100(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r43.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(17, $r44);

     label31:
        $l16 = r102.<androidx.media3.session.PlayerInfo: long maxSeekToPreviousPositionMs>;

        $l15 = r1.<androidx.media3.session.PlayerInfo: long maxSeekToPreviousPositionMs>;

        $b17 = $l16 cmp $l15;

        if $b17 == 0 goto label32;

        $r41 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r42 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$101(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r41.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(18, $r42);

     label32:
        $r37 = r102.<androidx.media3.session.PlayerInfo: androidx.media3.common.TrackSelectionParameters trackSelectionParameters>;

        $r36 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.common.TrackSelectionParameters trackSelectionParameters>;

        $z17 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r37, $r36);

        if $z17 != 0 goto label33;

        $r39 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r40 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.PlayerInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplBase: void lambda$onPlayerInfoChanged$102(androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r39.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(19, $r40);

     label33:
        $r38 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r38.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

        return;
    }

    void onAvailableCommandsChangedFromSession(androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionCommands r1, $r5;
        androidx.media3.common.Player$Commands r2, r3, $r4, $r10, $r11, $r12, $r13;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9;
        androidx.media3.session.MediaController $r6;
        androidx.media3.common.util.Consumer $r7;
        androidx.media3.common.util.ListenerSet $r8;
        androidx.media3.common.util.ListenerSet$Event $r9;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionCommands;

        r2 := @parameter1: androidx.media3.common.Player$Commands;

        $z2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isConnected()>();

        if $z2 != 0 goto label01;

        return;

     label01:
        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromSession>;

        $z3 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z3 != 0 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z0 = $z6;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands>;

        $z4 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z4 != 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z1 = $z7;

        if z0 != 0 goto label06;

        if z1 != 0 goto label06;

        return;

     label06:
        z8 = 0;

        if z0 == 0 goto label09;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromSession> = r2;

        r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        $r11 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromSession>;

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromPlayer>;

        $r12 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.Player$Commands intersect(androidx.media3.common.Player$Commands,androidx.media3.common.Player$Commands)>($r11, $r10);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands> = $r12;

        $r13 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        $z5 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, r3);

        if $z5 != 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z8 = $z9;

     label09:
        if z1 == 0 goto label10;

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands> = r1;

     label10:
        if z8 == 0 goto label11;

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r9 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$onAvailableCommandsChangedFromSession$103(androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r8.<androidx.media3.common.util.ListenerSet: void sendEvent(int,androidx.media3.common.util.ListenerSet$Event)>(13, $r9);

     label11:
        if z1 == 0 goto label12;

        $r6 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r7 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplBase,androidx.media3.session.SessionCommands)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$onAvailableCommandsChangedFromSession$104(androidx.media3.session.SessionCommands,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r6.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r7);

     label12:
        return;
    }

    void onAvailableCommandsChangedFromPlayer(androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Player$Commands r1, r2, $r3, $r4, $r5, $r6, $r7;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.media3.common.util.ListenerSet $r8;
        androidx.media3.common.util.ListenerSet$Event $r9;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Player$Commands;

        $z1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isConnected()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromPlayer>;

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z2 == 0 goto label2;

        return;

     label2:
        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromPlayer> = r1;

        r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromSession>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands playerCommandsFromPlayer>;

        $r6 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.Player$Commands intersect(androidx.media3.common.Player$Commands,androidx.media3.common.Player$Commands)>($r5, $r4);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands> = $r6;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        $z3 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r2);

        if $z3 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z0 = $z4;

        if z0 == 0 goto label5;

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r9 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplBase)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$onAvailableCommandsChangedFromPlayer$105(androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r8.<androidx.media3.common.util.ListenerSet: void sendEvent(int,androidx.media3.common.util.ListenerSet$Event)>(13, $r9);

     label5:
        return;
    }

    void onSetCustomLayout(int, java.util.List)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.util.List r1;
        java.util.ArrayList r2, $r4;
        androidx.media3.session.CommandButton r3;
        boolean $z0, $z1, $z3, $z4;
        androidx.media3.session.MediaController $r5;
        androidx.media3.common.util.Consumer $r6;
        java.lang.Object $r7;
        androidx.media3.common.Player$Commands $r8;
        androidx.media3.session.SessionCommand $r9, $r11;
        androidx.media3.session.SessionCommands $r10, $r12;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        i5 = 0;

     label2:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i5 >= $i1 goto label6;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        r3 = (androidx.media3.session.CommandButton) $r7;

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        $i2 = r3.<androidx.media3.session.CommandButton: int playerCommand>;

        $z1 = virtualinvoke $r8.<androidx.media3.common.Player$Commands: boolean contains(int)>($i2);

        if $z1 != 0 goto label4;

        $r9 = r3.<androidx.media3.session.CommandButton: androidx.media3.session.SessionCommand sessionCommand>;

        if $r9 == null goto label3;

        $r12 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands>;

        $r11 = r3.<androidx.media3.session.CommandButton: androidx.media3.session.SessionCommand sessionCommand>;

        $z4 = virtualinvoke $r12.<androidx.media3.session.SessionCommands: boolean contains(androidx.media3.session.SessionCommand)>($r11);

        if $z4 != 0 goto label4;

     label3:
        $i3 = r3.<androidx.media3.session.CommandButton: int playerCommand>;

        if $i3 == -1 goto label5;

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionCommands sessionCommands>;

        $i4 = r3.<androidx.media3.session.CommandButton: int playerCommand>;

        $z3 = virtualinvoke $r10.<androidx.media3.session.SessionCommands: boolean contains(int)>($i4);

        if $z3 == 0 goto label5;

     label4:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label5:
        i5 = i5 + 1;

        goto label2;

     label6:
        $r5 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r6 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplBase,java.util.List,int)>(r0, r2, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$onSetCustomLayout$106(java.util.List,int,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r5.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r6);

        return;
    }

    public void onExtrasChanged(android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.os.Bundle r1;
        boolean $z0;
        androidx.media3.session.MediaController $r2;
        androidx.media3.common.util.Consumer $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r3 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplBase,android.os.Bundle)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase: void lambda$onExtrasChanged$107(android.os.Bundle,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r2.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r3);

        return;
    }

    public void onRenderedFirstFrame()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.util.ListenerSet $r1;
        androidx.media3.common.util.ListenerSet$Event $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.util.ListenerSet listeners>;

        $r2 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player$Listener: void onRenderedFirstFrame()>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r1.<androidx.media3.common.util.ListenerSet: void sendEvent(int,androidx.media3.common.util.ListenerSet$Event)>(26, $r2);

        return;
    }

    private void updateSessionPositionInfoIfNeeded(androidx.media3.session.SessionPositionInfo)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionPositionInfo r1, $r4;
        androidx.collection.ArraySet $r2;
        boolean $z0;
        androidx.media3.session.PlayerInfo $r3, $r5, $r6;
        long $l0, $l1;
        byte $b2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionPositionInfo;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.collection.ArraySet pendingMaskingSequencedFutureNumbers>;

        $z0 = virtualinvoke $r2.<androidx.collection.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l1 = $r4.<androidx.media3.session.SessionPositionInfo: long eventTimeMs>;

        $l0 = r1.<androidx.media3.session.SessionPositionInfo: long eventTimeMs>;

        $b2 = $l1 cmp $l0;

        if $b2 >= 0 goto label1;

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithSessionPositionInfo(androidx.media3.session.SessionPositionInfo)>(r1);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo> = $r6;

     label1:
        return;
    }

    private static int convertRepeatModeForNavigation(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    private boolean isPlayerCommandAvailable(int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.common.Player$Commands $r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        $z0 = virtualinvoke $r1.<androidx.media3.common.Player$Commands: boolean contains(int)>(i0);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Controller isn\'t allowed to call command= ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplBase", $r5);

        return 0;

     label1:
        return 1;
    }

    private androidx.media3.session.PlayerInfo maskPositionInfo(androidx.media3.session.PlayerInfo, androidx.media3.common.Timeline, androidx.media3.session.MediaControllerImplBase$PeriodInfo)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        androidx.media3.session.MediaControllerImplBase$PeriodInfo r2;
        int i0, i1, $i9, $i12, $i17, $i20, $i34, $i48;
        androidx.media3.common.Timeline$Period r3, r4, $r10, $r12;
        boolean z0, $z1, $z2;
        long l2, l3, l4, l5, $l6, $l7, $l8, $l10, $l11, $l13, $l14, $l15, $l16, $l18, $l19, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l35, $l36, $l37, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l49, $l50;
        androidx.media3.common.Player$PositionInfo r5, r7, $r9, $r15, $r16, $r18, $r23;
        androidx.media3.common.Timeline$Window r6, $r21;
        androidx.media3.session.SessionPositionInfo $r8, $r14, $r17, $r25, $r26, $r27;
        androidx.media3.common.MediaItem $r19, $r24;
        byte $b38, $b51;
        androidx.media3.session.PlayerInfo r28, r29, r30;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r28 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Timeline;

        r2 := @parameter2: androidx.media3.session.MediaControllerImplBase$PeriodInfo;

        $r8 = r28.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r9 = $r8.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        i0 = $r9.<androidx.media3.common.Player$PositionInfo: int periodIndex>;

        i1 = staticinvoke <androidx.media3.session.MediaControllerImplBase$PeriodInfo: int access$100(androidx.media3.session.MediaControllerImplBase$PeriodInfo)>(r2);

        $r10 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r10.<androidx.media3.common.Timeline$Period: void <init>()>();

        r3 = $r10;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i0, r3);

        $r12 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r12.<androidx.media3.common.Timeline$Period: void <init>()>();

        r4 = $r12;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i1, r4);

        if i0 == i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        l2 = staticinvoke <androidx.media3.session.MediaControllerImplBase$PeriodInfo: long access$200(androidx.media3.session.MediaControllerImplBase$PeriodInfo)>(r2);

        $l6 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: long getCurrentPosition()>();

        $l7 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l6);

        $l8 = virtualinvoke r3.<androidx.media3.common.Timeline$Period: long getPositionInWindowUs()>();

        l3 = $l7 - $l8;

        if z0 != 0 goto label3;

        $b51 = l2 cmp l3;

        if $b51 != 0 goto label3;

        return r28;

     label3:
        $r14 = r28.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r15 = $r14.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i9 = $r15.<androidx.media3.common.Player$PositionInfo: int adGroupIndex>;

        if $i9 != -1 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        $r16 = new androidx.media3.common.Player$PositionInfo;

        $i12 = r3.<androidx.media3.common.Timeline$Period: int windowIndex>;

        $r17 = r28.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r18 = $r17.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $r19 = $r18.<androidx.media3.common.Player$PositionInfo: androidx.media3.common.MediaItem mediaItem>;

        $l10 = r3.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $l11 = $l10 + l3;

        $l13 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l11);

        $l14 = r3.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $l15 = $l14 + l3;

        $l16 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l15);

        specialinvoke $r16.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, $i12, $r19, null, i0, $l13, $l16, -1, -1);

        r5 = $r16;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i1, r4);

        $r21 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r21.<androidx.media3.common.Timeline$Window: void <init>()>();

        r6 = $r21;

        $i17 = r4.<androidx.media3.common.Timeline$Period: int windowIndex>;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>($i17, r6);

        $r23 = new androidx.media3.common.Player$PositionInfo;

        $i20 = r4.<androidx.media3.common.Timeline$Period: int windowIndex>;

        $r24 = r6.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        $l18 = r4.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $l19 = $l18 + l2;

        $l21 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l19);

        $l22 = r4.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $l23 = $l22 + l2;

        $l24 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l23);

        specialinvoke $r23.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, $i20, $r24, null, i1, $l21, $l24, -1, -1);

        r7 = $r23;

        r29 = virtualinvoke r28.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPositionInfos(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int)>(r5, r7, 1);

        if z0 != 0 goto label6;

        $b38 = l2 cmp l3;

        if $b38 >= 0 goto label7;

     label6:
        $r25 = new androidx.media3.session.SessionPositionInfo;

        $l25 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l26 = virtualinvoke r6.<androidx.media3.common.Timeline$Window: long getDurationMs()>();

        $l27 = r4.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $l28 = $l27 + l2;

        $l29 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l28);

        $l30 = r4.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $l31 = $l30 + l2;

        $l32 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l31);

        $l33 = virtualinvoke r6.<androidx.media3.common.Timeline$Window: long getDurationMs()>();

        $i34 = staticinvoke <androidx.media3.session.MediaUtils: int calculateBufferedPercentage(long,long)>($l32, $l33);

        $l35 = r4.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $l36 = $l35 + l2;

        $l37 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l36);

        specialinvoke $r25.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>(r7, 0, $l25, $l26, $l29, $i34, 0L, -9223372036854775807L, -9223372036854775807L, $l37);

        r30 = virtualinvoke r29.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithSessionPositionInfo(androidx.media3.session.SessionPositionInfo)>($r25);

        goto label8;

     label7:
        $r26 = r29.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l39 = $r26.<androidx.media3.session.SessionPositionInfo: long totalBufferedDurationMs>;

        $l40 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l39);

        $l41 = l2 - l3;

        $l42 = $l40 - $l41;

        l4 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l42);

        l5 = l2 + l4;

        $r27 = new androidx.media3.session.SessionPositionInfo;

        $l43 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l44 = virtualinvoke r6.<androidx.media3.common.Timeline$Window: long getDurationMs()>();

        $l45 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>(l5);

        $l46 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>(l5);

        $l47 = virtualinvoke r6.<androidx.media3.common.Timeline$Window: long getDurationMs()>();

        $i48 = staticinvoke <androidx.media3.session.MediaUtils: int calculateBufferedPercentage(long,long)>($l46, $l47);

        $l49 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>(l4);

        $l50 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>(l5);

        specialinvoke $r27.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>(r7, 0, $l43, $l44, $l45, $i48, $l49, -9223372036854775807L, -9223372036854775807L, $l50);

        r30 = virtualinvoke r29.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithSessionPositionInfo(androidx.media3.session.SessionPositionInfo)>($r27);

     label8:
        return r30;
    }

    private androidx.media3.session.MediaControllerImplBase$PeriodInfo getPeriodInfo(androidx.media3.common.Timeline, int, long)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        androidx.media3.common.Timeline$Window r2, $r4, $r6;
        androidx.media3.common.Timeline$Period r3, $r5;
        boolean $z0, $z1;
        int $i0, i1;
        long l2, $l3;
        androidx.media3.session.MediaControllerImplBase$PeriodInfo $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Timeline;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $z0 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r4.<androidx.media3.common.Timeline$Window: void <init>()>();

        r2 = $r4;

        $r5 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r5.<androidx.media3.common.Timeline$Period: void <init>()>();

        r3 = $r5;

        if i1 == -1 goto label2;

        $i0 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i1 < $i0 goto label3;

     label2:
        $z1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean getShuffleModeEnabled()>();

        i1 = virtualinvoke r1.<androidx.media3.common.Timeline: int getFirstWindowIndex(boolean)>($z1);

        $r6 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i1, r2);

        l2 = virtualinvoke $r6.<androidx.media3.common.Timeline$Window: long getDefaultPositionMs()>();

     label3:
        $l3 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>(l2);

        $r7 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$PeriodInfo getPeriodInfo(androidx.media3.common.Timeline,androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period,int,long)>(r1, r2, r3, i1, $l3);

        return $r7;
    }

    private androidx.media3.session.MediaControllerImplBase$PeriodInfo getPeriodInfo(androidx.media3.common.Timeline, androidx.media3.common.Timeline$Window, androidx.media3.common.Timeline$Period, int, long)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        androidx.media3.common.Timeline$Window r2;
        androidx.media3.common.Timeline$Period r3, $r7;
        int i0, $i2, $i7, i12, $i13;
        long l1, $l5, $l8, l11, $l14;
        byte $b4, $b6, $b9, $b10;
        androidx.media3.session.MediaControllerImplBase$PeriodInfo $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Timeline;

        r2 := @parameter1: androidx.media3.common.Timeline$Window;

        r3 := @parameter2: androidx.media3.common.Timeline$Period;

        i0 := @parameter3: int;

        l11 := @parameter4: long;

        $i2 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        staticinvoke <androidx.media3.common.util.Assertions: int checkIndex(int,int,int)>(i0, 0, $i2);

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i0, r2);

        $b4 = l11 cmp -9223372036854775807L;

        if $b4 != 0 goto label1;

        l11 = virtualinvoke r2.<androidx.media3.common.Timeline$Window: long getDefaultPositionUs()>();

        $b10 = l11 cmp -9223372036854775807L;

        if $b10 != 0 goto label1;

        return null;

     label1:
        i12 = r2.<androidx.media3.common.Timeline$Window: int firstPeriodIndex>;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i12, r3);

     label2:
        $i13 = r2.<androidx.media3.common.Timeline$Window: int lastPeriodIndex>;

        if i12 >= $i13 goto label3;

        $l5 = r3.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $b6 = $l5 cmp l11;

        if $b6 == 0 goto label3;

        $i7 = i12 + 1;

        $r7 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>($i7, r3);

        $l8 = $r7.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        $b9 = $l8 cmp l11;

        if $b9 > 0 goto label3;

        i12 = i12 + 1;

        goto label2;

     label3:
        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i12, r3);

        $l14 = r3.<androidx.media3.common.Timeline$Period: long positionInWindowUs>;

        l1 = l11 - $l14;

        $r8 = new androidx.media3.session.MediaControllerImplBase$PeriodInfo;

        specialinvoke $r8.<androidx.media3.session.MediaControllerImplBase$PeriodInfo: void <init>(int,long)>(i12, l1);

        return $r8;
    }

    private androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo, androidx.media3.common.Timeline, int, int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.PlayerInfo r1, $r25;
        androidx.media3.common.Timeline r2;
        int i0, i1, i2, $i3, $i4, $i12;
        androidx.media3.common.Player$PositionInfo r3, $r4, $r8, $r10, $r12, $r14;
        androidx.media3.common.Timeline$Window $r5, $r6;
        androidx.media3.session.SessionPositionInfo $r7, $r9, $r11, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        long $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l13, $l14;
        androidx.media3.common.MediaItem $r15;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.PlayerInfo;

        r2 := @parameter1: androidx.media3.common.Timeline;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r4 = new androidx.media3.common.Player$PositionInfo;

        $r5 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r5.<androidx.media3.common.Timeline$Window: void <init>()>();

        $r6 = virtualinvoke r2.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i0, $r5);

        $r15 = $r6.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        $r7 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r8 = $r7.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l6 = $r8.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $r9 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r10 = $r9.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l5 = $r10.<androidx.media3.common.Player$PositionInfo: long contentPositionMs>;

        $r11 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r12 = $r11.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i4 = $r12.<androidx.media3.common.Player$PositionInfo: int adGroupIndex>;

        $r13 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r14 = $r13.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i3 = $r14.<androidx.media3.common.Player$PositionInfo: int adIndexInAdGroup>;

        specialinvoke $r4.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, i0, $r15, null, i1, $l6, $l5, $i4, $i3);

        r3 = $r4;

        $r16 = new androidx.media3.session.SessionPositionInfo;

        $r17 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $z0 = $r17.<androidx.media3.session.SessionPositionInfo: boolean isPlayingAd>;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r18 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l14 = $r18.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        $r19 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l13 = $r19.<androidx.media3.session.SessionPositionInfo: long bufferedPositionMs>;

        $r20 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $i12 = $r20.<androidx.media3.session.SessionPositionInfo: int bufferedPercentage>;

        $r21 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l11 = $r21.<androidx.media3.session.SessionPositionInfo: long totalBufferedDurationMs>;

        $r22 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l10 = $r22.<androidx.media3.session.SessionPositionInfo: long currentLiveOffsetMs>;

        $r23 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l9 = $r23.<androidx.media3.session.SessionPositionInfo: long contentDurationMs>;

        $r24 = r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l8 = $r24.<androidx.media3.session.SessionPositionInfo: long contentBufferedPositionMs>;

        specialinvoke $r16.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>(r3, $z0, $l7, $l14, $l13, $i12, $l11, $l10, $l9, $l8);

        $r25 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo,androidx.media3.common.Timeline,androidx.media3.common.Player$PositionInfo,androidx.media3.session.SessionPositionInfo,int)>(r1, r2, r3, $r16, i2);

        return $r25;
    }

    private androidx.media3.session.PlayerInfo maskTimelineAndPositionInfo(androidx.media3.session.PlayerInfo, androidx.media3.common.Timeline, androidx.media3.common.Player$PositionInfo, androidx.media3.session.SessionPositionInfo, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        androidx.media3.common.Player$PositionInfo r2, $r7;
        androidx.media3.session.SessionPositionInfo r3, $r6;
        int i0;
        androidx.media3.session.PlayerInfo$Builder $r4, $r5, $r8, $r9, $r10, $r11;
        androidx.media3.session.PlayerInfo r12, r13;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r12 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Timeline;

        r2 := @parameter2: androidx.media3.common.Player$PositionInfo;

        r3 := @parameter3: androidx.media3.session.SessionPositionInfo;

        i0 := @parameter4: int;

        $r4 = new androidx.media3.session.PlayerInfo$Builder;

        specialinvoke $r4.<androidx.media3.session.PlayerInfo$Builder: void <init>(androidx.media3.session.PlayerInfo)>(r12);

        $r5 = virtualinvoke $r4.<androidx.media3.session.PlayerInfo$Builder: androidx.media3.session.PlayerInfo$Builder setTimeline(androidx.media3.common.Timeline)>(r1);

        $r6 = r12.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r7 = $r6.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $r8 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo$Builder: androidx.media3.session.PlayerInfo$Builder setOldPositionInfo(androidx.media3.common.Player$PositionInfo)>($r7);

        $r9 = virtualinvoke $r8.<androidx.media3.session.PlayerInfo$Builder: androidx.media3.session.PlayerInfo$Builder setNewPositionInfo(androidx.media3.common.Player$PositionInfo)>(r2);

        $r10 = virtualinvoke $r9.<androidx.media3.session.PlayerInfo$Builder: androidx.media3.session.PlayerInfo$Builder setSessionPositionInfo(androidx.media3.session.SessionPositionInfo)>(r3);

        $r11 = virtualinvoke $r10.<androidx.media3.session.PlayerInfo$Builder: androidx.media3.session.PlayerInfo$Builder setDiscontinuityReason(int)>(i0);

        r13 = virtualinvoke $r11.<androidx.media3.session.PlayerInfo$Builder: androidx.media3.session.PlayerInfo build()>();

        return r13;
    }

    private void maybeUpdateCurrentPositionMs()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0, $z1, $z2;
        long l0, $l1, $l2, $l4, $l6, $l7, $l8, $l9, $l10, $l12, $l13, $l15, $l16, $l18, l19;
        androidx.media3.session.PlayerInfo $r1, $r3, $r5, $r7, $r10, $r12, $r14, $r17;
        androidx.media3.session.SessionPositionInfo $r2, $r6, $r8, $r13, $r15, $r18;
        byte $b3, $b5, $b11, $b14, $b17;
        androidx.media3.session.MediaController $r4, $r16;
        androidx.media3.common.Player$PositionInfo $r9, $r19;
        androidx.media3.common.PlaybackParameters $r11;
        float $f0, $f1, $f2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $l2 = r0.<androidx.media3.session.MediaControllerImplBase: long lastSetPlayWhenReadyCalledTimeMs>;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r2 = $r1.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l1 = $r2.<androidx.media3.session.SessionPositionInfo: long eventTimeMs>;

        $b3 = $l2 cmp $l1;

        if $b3 >= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z1 = $r3.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        if $z1 != 0 goto label5;

        if z0 != 0 goto label3;

        $l16 = r0.<androidx.media3.session.MediaControllerImplBase: long currentPositionMs>;

        $b17 = $l16 cmp -9223372036854775807L;

        if $b17 != 0 goto label4;

     label3:
        $r17 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r18 = $r17.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r19 = $r18.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l15 = $r19.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        r0.<androidx.media3.session.MediaControllerImplBase: long currentPositionMs> = $l15;

     label4:
        return;

     label5:
        if z0 != 0 goto label6;

        $l13 = r0.<androidx.media3.session.MediaControllerImplBase: long currentPositionMs>;

        $b14 = $l13 cmp -9223372036854775807L;

        if $b14 == 0 goto label6;

        return;

     label6:
        $r4 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $l4 = virtualinvoke $r4.<androidx.media3.session.MediaController: long getTimeDiffMs()>();

        $b5 = $l4 cmp -9223372036854775807L;

        if $b5 == 0 goto label7;

        $r16 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $l18 = virtualinvoke $r16.<androidx.media3.session.MediaController: long getTimeDiffMs()>();

        goto label8;

     label7:
        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r5 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l7 = $r6.<androidx.media3.session.SessionPositionInfo: long eventTimeMs>;

        $l18 = $l6 - $l7;

     label8:
        l0 = $l18;

        $r7 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = $r7.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r9 = $r8.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l9 = $r9.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $f1 = (float) l0;

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r11 = $r10.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        $f0 = $r11.<androidx.media3.common.PlaybackParameters: float speed>;

        $f2 = $f1 * $f0;

        $l8 = (long) $f2;

        l19 = $l9 + $l8;

        $r12 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r13 = $r12.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l10 = $r13.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        $b11 = $l10 cmp -9223372036854775807L;

        if $b11 == 0 goto label9;

        $r14 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $r15 = $r14.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l12 = $r15.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        l19 = staticinvoke <java.lang.Math: long min(long,long)>(l19, $l12);

     label9:
        r0.<androidx.media3.session.MediaControllerImplBase: long currentPositionMs> = l19;

        return;
    }

    private androidx.media3.common.Timeline$Period getPeriodWithNewWindowIndex(androidx.media3.common.Timeline, int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        int i0, i1;
        androidx.media3.common.Timeline$Period r2, $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Timeline;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r3.<androidx.media3.common.Timeline$Period: void <init>()>();

        r2 = $r3;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i0, r2);

        r2.<androidx.media3.common.Timeline$Period: int windowIndex> = i1;

        return r2;
    }

    private int getNewPeriodIndexWithoutRemovedPeriods(androidx.media3.common.Timeline, int, int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, i8;
        androidx.media3.common.Timeline$Window r2, $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Timeline;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i0 != -1 goto label1;

        return i0;

     label1:
        i7 = i0;

        i8 = i1;

     label2:
        if i8 >= i2 goto label3;

        $r3 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r3.<androidx.media3.common.Timeline$Window: void <init>()>();

        r2 = $r3;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i8, r2);

        $i5 = r2.<androidx.media3.common.Timeline$Window: int lastPeriodIndex>;

        $i4 = r2.<androidx.media3.common.Timeline$Window: int firstPeriodIndex>;

        $i6 = $i5 - $i4;

        i3 = $i6 + 1;

        i7 = i7 - i3;

        i8 = i8 + 1;

        goto label2;

     label3:
        return i7;
    }

    private static androidx.media3.common.Timeline$Window createNewWindow(androidx.media3.common.MediaItem)
    {
        androidx.media3.common.MediaItem r0;
        androidx.media3.common.Timeline$Window $r1, $r3;
        java.lang.Integer $r2;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        $r1 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r1.<androidx.media3.common.Timeline$Window: void <init>()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r1.<androidx.media3.common.Timeline$Window: androidx.media3.common.Timeline$Window set(java.lang.Object,androidx.media3.common.MediaItem,java.lang.Object,long,long,long,boolean,boolean,androidx.media3.common.MediaItem$LiveConfiguration,long,long,int,int,long)>($r2, r0, null, 0L, 0L, 0L, 1, 0, null, 0L, -9223372036854775807L, -1, -1, 0L);

        return $r3;
    }

    private static androidx.media3.common.Timeline$Period createNewPeriod(int)
    {
        int i0;
        androidx.media3.common.Timeline$Period $r0, $r2;
        androidx.media3.common.AdPlaybackState $r1;

        i0 := @parameter0: int;

        $r0 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r0.<androidx.media3.common.Timeline$Period: void <init>()>();

        $r1 = <androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState NONE>;

        $r2 = virtualinvoke $r0.<androidx.media3.common.Timeline$Period: androidx.media3.common.Timeline$Period set(java.lang.Object,java.lang.Object,int,long,long,androidx.media3.common.AdPlaybackState,boolean)>(null, null, i0, -9223372036854775807L, 0L, $r1, 1);

        return $r2;
    }

    private void rebuildPeriods(androidx.media3.common.Timeline, java.util.List, java.util.List)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Timeline r1;
        java.util.List r2, r3;
        androidx.media3.common.Timeline$Window r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        java.lang.Object $r5;
        androidx.media3.common.Timeline$Period $r6, $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Timeline;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        i9 = 0;

     label1:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if i9 >= $i2 goto label6;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);

        r4 = (androidx.media3.common.Timeline$Window) $r5;

        i0 = r4.<androidx.media3.common.Timeline$Window: int firstPeriodIndex>;

        i1 = r4.<androidx.media3.common.Timeline$Window: int lastPeriodIndex>;

        if i0 == -1 goto label2;

        if i1 != -1 goto label3;

     label2:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        r4.<androidx.media3.common.Timeline$Window: int firstPeriodIndex> = $i3;

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        r4.<androidx.media3.common.Timeline$Window: int lastPeriodIndex> = $i4;

        $r6 = staticinvoke <androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline$Period createNewPeriod(int)>(i9);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label5;

     label3:
        $i5 = interfaceinvoke r3.<java.util.List: int size()>();

        r4.<androidx.media3.common.Timeline$Window: int firstPeriodIndex> = $i5;

        $i6 = interfaceinvoke r3.<java.util.List: int size()>();

        $i7 = i1 - i0;

        $i8 = $i6 + $i7;

        r4.<androidx.media3.common.Timeline$Window: int lastPeriodIndex> = $i8;

        i10 = i0;

     label4:
        if i10 > i1 goto label5;

        $r7 = specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Timeline$Period getPeriodWithNewWindowIndex(androidx.media3.common.Timeline,int,int)>(r1, i10, i9);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        i10 = i10 + 1;

        goto label4;

     label5:
        i9 = i9 + 1;

        goto label1;

     label6:
        return;
    }

    private static int resolveSubsequentMediaItemIndex(int, boolean, int, androidx.media3.common.Timeline, int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6;
        boolean z0;
        androidx.media3.common.Timeline r0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i4 := @parameter2: int;

        r0 := @parameter3: androidx.media3.common.Timeline;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i5 = -1;

        i3 = virtualinvoke r0.<androidx.media3.common.Timeline: int getWindowCount()>();

        i6 = 0;

     label1:
        if i6 >= i3 goto label5;

        i4 = virtualinvoke r0.<androidx.media3.common.Timeline: int getNextWindowIndex(int,int,boolean)>(i4, i0, z0);

        if i4 != -1 goto label2;

        goto label5;

     label2:
        if i4 < i1 goto label3;

        if i4 < i2 goto label4;

     label3:
        i5 = i4;

        goto label5;

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        return i5;
    }

    private void lambda$onExtrasChanged$107(android.os.Bundle, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaController$Listener r2;
        androidx.media3.session.MediaController $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: androidx.media3.session.MediaController$Listener;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        interfaceinvoke r2.<androidx.media3.session.MediaController$Listener: void onExtrasChanged(androidx.media3.session.MediaController,android.os.Bundle)>($r3, r1);

        return;
    }

    private void lambda$onSetCustomLayout$106(java.util.List, int, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        int i0;
        androidx.media3.session.MediaController$Listener r2;
        com.google.common.util.concurrent.ListenableFuture r3, $r5;
        androidx.media3.session.MediaController $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.session.MediaController$Listener;

        $r4 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r5 = interfaceinvoke r2.<androidx.media3.session.MediaController$Listener: com.google.common.util.concurrent.ListenableFuture onSetCustomLayout(androidx.media3.session.MediaController,java.util.List)>($r4, r1);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r5, "MediaController.Listener#onSetCustomLayout() must not return null");

        r3 = (com.google.common.util.concurrent.ListenableFuture) $r6;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void sendControllerResultWhenReady(int,com.google.common.util.concurrent.ListenableFuture)>(i0, r3);

        return;
    }

    private void lambda$onAvailableCommandsChangedFromPlayer$105(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.Player$Commands $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onAvailableCommandsChanged(androidx.media3.common.Player$Commands)>($r2);

        return;
    }

    private void lambda$onAvailableCommandsChangedFromSession$104(androidx.media3.session.SessionCommands, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionCommands r1;
        androidx.media3.session.MediaController$Listener r2;
        androidx.media3.session.MediaController $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionCommands;

        r2 := @parameter1: androidx.media3.session.MediaController$Listener;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        interfaceinvoke r2.<androidx.media3.session.MediaController$Listener: void onAvailableSessionCommandsChanged(androidx.media3.session.MediaController,androidx.media3.session.SessionCommands)>($r3, r1);

        return;
    }

    private void lambda$onAvailableCommandsChangedFromSession$103(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.Player$Commands $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.common.Player$Commands intersectedPlayerCommands>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onAvailableCommandsChanged(androidx.media3.common.Player$Commands)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$102(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.TrackSelectionParameters $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.TrackSelectionParameters trackSelectionParameters>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onTrackSelectionParametersChanged(androidx.media3.common.TrackSelectionParameters)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$101(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        long $l0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $l0 = r0.<androidx.media3.session.PlayerInfo: long maxSeekToPreviousPositionMs>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onMaxSeekToPreviousPositionChanged(long)>($l0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$100(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        long $l0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $l0 = r0.<androidx.media3.session.PlayerInfo: long seekForwardIncrementMs>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onSeekForwardIncrementChanged(long)>($l0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$99(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        long $l0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $l0 = r0.<androidx.media3.session.PlayerInfo: long seekBackIncrementMs>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onSeekBackIncrementChanged(long)>($l0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$98(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.MediaMetadata $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata mediaMetadata>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onMediaMetadataChanged(androidx.media3.common.MediaMetadata)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$97(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        int $i0;
        androidx.media3.common.Player$PositionInfo $r2, $r3;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r3 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.Player$PositionInfo oldPositionInfo>;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.Player$PositionInfo newPositionInfo>;

        $i0 = r0.<androidx.media3.session.PlayerInfo: int discontinuityReason>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPositionDiscontinuity(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int)>($r3, $r2, $i0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$96(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.VideoSize $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.VideoSize videoSize>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onVideoSizeChanged(androidx.media3.common.VideoSize)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$95(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $z0 = r0.<androidx.media3.session.PlayerInfo: boolean isLoading>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onIsLoadingChanged(boolean)>($z0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$94(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $z0 = r0.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onIsPlayingChanged(boolean)>($z0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$93(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        int $i0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $i0 = r0.<androidx.media3.session.PlayerInfo: int playbackState>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackStateChanged(int)>($i0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$92(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        int $i0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $i0 = r0.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackSuppressionReasonChanged(int)>($i0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$91(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $z0 = r0.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        $i0 = r0.<androidx.media3.session.PlayerInfo: int playWhenReadyChangedReason>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlayWhenReadyChanged(boolean,int)>($z0, $i0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$90(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        boolean $z0;
        int $i0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $i0 = r0.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        $z0 = r0.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onDeviceVolumeChanged(int,boolean)>($i0, $z0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$89(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.DeviceInfo $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onDeviceInfoChanged(androidx.media3.common.DeviceInfo)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$88(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.text.CueGroup $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.text.CueGroup cueGroup>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onCues(androidx.media3.common.text.CueGroup)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$87(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.text.CueGroup $r2;
        com.google.common.collect.ImmutableList $r3;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.text.CueGroup cueGroup>;

        $r3 = $r2.<androidx.media3.common.text.CueGroup: com.google.common.collect.ImmutableList cues>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onCues(java.util.List)>($r3);

        return;
    }

    private static void lambda$onPlayerInfoChanged$86(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.AudioAttributes $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.AudioAttributes audioAttributes>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onAudioAttributesChanged(androidx.media3.common.AudioAttributes)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$85(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        float $f0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $f0 = r0.<androidx.media3.session.PlayerInfo: float volume>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onVolumeChanged(float)>($f0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$84(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.MediaMetadata $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata playlistMetadata>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaylistMetadataChanged(androidx.media3.common.MediaMetadata)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$83(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.Timeline $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onTimelineChanged(androidx.media3.common.Timeline,int)>($r2, 1);

        return;
    }

    private static void lambda$onPlayerInfoChanged$82(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $z0 = r0.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onShuffleModeEnabledChanged(boolean)>($z0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$81(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        int $i0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $i0 = r0.<androidx.media3.session.PlayerInfo: int repeatMode>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onRepeatModeChanged(int)>($i0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$80(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.PlaybackParameters $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$79(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.Tracks $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.Tracks currentTracks>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onTracksChanged(androidx.media3.common.Tracks)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$78(androidx.media3.common.MediaItem, androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.common.MediaItem r0;
        androidx.media3.session.PlayerInfo r1;
        androidx.media3.common.Player$Listener r2;
        int $i0;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        r1 := @parameter1: androidx.media3.session.PlayerInfo;

        r2 := @parameter2: androidx.media3.common.Player$Listener;

        $i0 = r1.<androidx.media3.session.PlayerInfo: int mediaItemTransitionReason>;

        interfaceinvoke r2.<androidx.media3.common.Player$Listener: void onMediaItemTransition(androidx.media3.common.MediaItem,int)>(r0, $i0);

        return;
    }

    private static void lambda$onPlayerInfoChanged$77(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.PlaybackException $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlayerError(androidx.media3.common.PlaybackException)>($r2);

        return;
    }

    private static void lambda$onPlayerInfoChanged$76(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.PlaybackException $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlayerErrorChanged(androidx.media3.common.PlaybackException)>($r2);

        return;
    }

    private void lambda$onCustomCommand$75(androidx.media3.session.SessionCommand, android.os.Bundle, int, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2;
        int i0;
        androidx.media3.session.MediaController$Listener r3;
        com.google.common.util.concurrent.ListenableFuture r4, $r6;
        androidx.media3.session.MediaController $r5;
        java.lang.Object $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media3.session.MediaController$Listener;

        $r5 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r6 = interfaceinvoke r3.<androidx.media3.session.MediaController$Listener: com.google.common.util.concurrent.ListenableFuture onCustomCommand(androidx.media3.session.MediaController,androidx.media3.session.SessionCommand,android.os.Bundle)>($r5, r1, r2);

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r6, "ControllerCallback#onCustomCommand() must not return null");

        r4 = (com.google.common.util.concurrent.ListenableFuture) $r7;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void sendControllerResultWhenReady(int,com.google.common.util.concurrent.ListenableFuture)>(i0, r4);

        return;
    }

    private void lambda$sendControllerResultWhenReady$74(com.google.common.util.concurrent.ListenableFuture, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        int i0;
        java.lang.Object $r2, $r4;
        androidx.media3.session.SessionResult $r3, $r6, $r8, r9;
        java.lang.Throwable $r5, $r7, r10, r11;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        i0 := @parameter1: int;

     label1:
        $r2 = interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r3 = (androidx.media3.session.SessionResult) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "SessionResult must not be null");

        r9 = (androidx.media3.session.SessionResult) $r4;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r10 = $r5;

        $r6 = new androidx.media3.session.SessionResult;

        specialinvoke $r6.<androidx.media3.session.SessionResult: void <init>(int)>(1);

        r9 = $r6;

        goto label5;

     label4:
        $r7 := @caughtexception;

        r11 = $r7;

        $r8 = new androidx.media3.session.SessionResult;

        specialinvoke $r8.<androidx.media3.session.SessionResult: void <init>(int)>(-1);

        r9 = $r8;

     label5:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void sendControllerResult(int,androidx.media3.session.SessionResult)>(i0, r9);

        return;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    private void lambda$setFutureResult$73(int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.collection.ArraySet $r1;
        java.lang.Integer $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.collection.ArraySet pendingMaskingSequencedFutureNumbers>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<androidx.collection.ArraySet: boolean remove(java.lang.Object)>($r2);

        return;
    }

    private static void lambda$maybeNotifySurfaceSizeChanged$72(int, int, androidx.media3.common.Player$Listener)
    {
        int i0, i1;
        androidx.media3.common.Player$Listener r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.media3.common.Player$Listener;

        interfaceinvoke r0.<androidx.media3.common.Player$Listener: void onSurfaceSizeChanged(int,int)>(i0, i1);

        return;
    }

    private static void lambda$updatePlayerInfo$71(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $z0 = r0.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onIsPlayingChanged(boolean)>($z0);

        return;
    }

    private static void lambda$updatePlayerInfo$70(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        int $i0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $i0 = r0.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackSuppressionReasonChanged(int)>($i0);

        return;
    }

    private static void lambda$updatePlayerInfo$69(androidx.media3.session.PlayerInfo, int, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        int i0;
        androidx.media3.common.Player$Listener r1;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.common.Player$Listener;

        $z0 = r0.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlayWhenReadyChanged(boolean,int)>($z0, i0);

        return;
    }

    private static void lambda$updatePlayerInfo$68(androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.common.Player$Listener r1;
        int $i0;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $i0 = r0.<androidx.media3.session.PlayerInfo: int playbackState>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackStateChanged(int)>($i0);

        return;
    }

    private static void lambda$updatePlayerInfo$67(androidx.media3.session.PlayerInfo, int, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        int i0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.Timeline $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onTimelineChanged(androidx.media3.common.Timeline,int)>($r2, i0);

        return;
    }

    private static void lambda$updatePlayerInfo$66(androidx.media3.session.PlayerInfo, int, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        int i0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.Player$PositionInfo $r2, $r3;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.common.Player$Listener;

        $r3 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.Player$PositionInfo oldPositionInfo>;

        $r2 = r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.Player$PositionInfo newPositionInfo>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPositionDiscontinuity(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int)>($r3, $r2, i0);

        return;
    }

    private static void lambda$updatePlayerInfo$65(androidx.media3.session.PlayerInfo, int, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerInfo r0;
        int i0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.MediaItem $r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.common.Player$Listener;

        $r2 = virtualinvoke r0.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onMediaItemTransition(androidx.media3.common.MediaItem,int)>($r2, i0);

        return;
    }

    private static void lambda$setTrackSelectionParameters$64(androidx.media3.common.TrackSelectionParameters, androidx.media3.common.Player$Listener)
    {
        androidx.media3.common.TrackSelectionParameters r0;
        androidx.media3.common.Player$Listener r1;

        r0 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onTrackSelectionParametersChanged(androidx.media3.common.TrackSelectionParameters)>(r0);

        return;
    }

    private void lambda$setTrackSelectionParameters$63(androidx.media3.common.TrackSelectionParameters, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.TrackSelectionParameters r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.TrackSelectionParameters: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setTrackSelectionParameters(androidx.media3.session.IMediaController,int,android.os.Bundle)>($r3, i0, $r4);

        return;
    }

    private void lambda$setVideoTextureView$62(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        android.view.Surface $r2;
        androidx.media3.session.MediaControllerStub $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r3, i0, $r2);

        return;
    }

    private void lambda$setVideoTextureView$61(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r2, i0, null);

        return;
    }

    private void lambda$setVideoSurfaceHolder$60(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r2, i0, null);

        return;
    }

    private void lambda$setVideoSurfaceHolder$59(android.view.Surface, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.Surface r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.Surface;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r3, i0, r1);

        return;
    }

    private void lambda$setVideoSurface$58(android.view.Surface, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.Surface r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: android.view.Surface;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r3, i0, r1);

        return;
    }

    private void lambda$clearVideoSurface$57(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r2, i0, null);

        return;
    }

    private void lambda$setDeviceMuted$56(boolean, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r2.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onDeviceVolumeChanged(int,boolean)>($i0, z0);

        return;
    }

    private void lambda$setDeviceMuted$55(boolean, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setDeviceMuted(androidx.media3.session.IMediaController,int,boolean)>($r2, i0, z0);

        return;
    }

    private void lambda$decreaseDeviceVolume$54(int, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onDeviceVolumeChanged(int,boolean)>(i0, $z0);

        return;
    }

    private void lambda$decreaseDeviceVolume$53(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void decreaseDeviceVolume(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$increaseDeviceVolume$52(int, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onDeviceVolumeChanged(int,boolean)>(i0, $z0);

        return;
    }

    private void lambda$increaseDeviceVolume$51(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void increaseDeviceVolume(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$setDeviceVolume$50(int, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onDeviceVolumeChanged(int,boolean)>(i0, $z0);

        return;
    }

    private void lambda$setDeviceVolume$49(int, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setDeviceVolume(androidx.media3.session.IMediaController,int,int)>($r2, i1, i0);

        return;
    }

    private static void lambda$setVolume$48(float, androidx.media3.common.Player$Listener)
    {
        float f0;
        androidx.media3.common.Player$Listener r0;

        f0 := @parameter0: float;

        r0 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r0.<androidx.media3.common.Player$Listener: void onVolumeChanged(float)>(f0);

        return;
    }

    private void lambda$setVolume$47(float, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        float f0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVolume(androidx.media3.session.IMediaController,int,float)>($r2, i0, f0);

        return;
    }

    private static void lambda$setShuffleModeEnabled$46(boolean, androidx.media3.common.Player$Listener)
    {
        boolean z0;
        androidx.media3.common.Player$Listener r0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r0.<androidx.media3.common.Player$Listener: void onShuffleModeEnabledChanged(boolean)>(z0);

        return;
    }

    private void lambda$setShuffleModeEnabled$45(boolean, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setShuffleModeEnabled(androidx.media3.session.IMediaController,int,boolean)>($r2, i0, z0);

        return;
    }

    private static void lambda$setRepeatMode$44(int, androidx.media3.common.Player$Listener)
    {
        int i0;
        androidx.media3.common.Player$Listener r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r0.<androidx.media3.common.Player$Listener: void onRepeatModeChanged(int)>(i0);

        return;
    }

    private void lambda$setRepeatMode$43(int, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setRepeatMode(androidx.media3.session.IMediaController,int,int)>($r2, i1, i0);

        return;
    }

    private void lambda$seekToNext$42(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekToNext(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$seekToPrevious$41(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekToPrevious(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$seekToNextMediaItem$40(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekToNextMediaItem(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$seekToPreviousMediaItem$39(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekToPreviousMediaItem(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$moveMediaItems$38(int, int, int, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1, i2, i3;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: androidx.media3.session.IMediaSession;

        i3 := @parameter4: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void moveMediaItems(androidx.media3.session.IMediaController,int,int,int,int)>($r2, i3, i0, i1, i2);

        return;
    }

    private void lambda$moveMediaItem$37(int, int, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1, i2;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.session.IMediaSession;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void moveMediaItem(androidx.media3.session.IMediaController,int,int,int)>($r2, i2, i0, i1);

        return;
    }

    private void lambda$clearMediaItems$36(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void clearMediaItems(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$removeMediaItems$35(int, int, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1, i2;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.session.IMediaSession;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void removeMediaItems(androidx.media3.session.IMediaController,int,int,int)>($r2, i2, i0, i1);

        return;
    }

    private void lambda$removeMediaItem$34(int, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void removeMediaItem(androidx.media3.session.IMediaController,int,int)>($r2, i1, i0);

        return;
    }

    private void lambda$addMediaItems$33(int, java.util.List, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1;
        java.util.List r1;
        androidx.media3.session.IMediaSession r2;
        androidx.media3.common.BundleListRetriever $r3;
        androidx.media3.session.MediaControllerStub $r4;
        com.google.common.collect.ImmutableList $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: androidx.media3.session.IMediaSession;

        i1 := @parameter3: int;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r3 = new androidx.media3.common.BundleListRetriever;

        $r5 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList toBundleList(java.util.List)>(r1);

        specialinvoke $r3.<androidx.media3.common.BundleListRetriever: void <init>(java.util.List)>($r5);

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void addMediaItemsWithIndex(androidx.media3.session.IMediaController,int,int,android.os.IBinder)>($r4, i1, i0, $r3);

        return;
    }

    private void lambda$addMediaItems$32(java.util.List, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.common.BundleListRetriever $r3;
        androidx.media3.session.MediaControllerStub $r4;
        com.google.common.collect.ImmutableList $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r3 = new androidx.media3.common.BundleListRetriever;

        $r5 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList toBundleList(java.util.List)>(r1);

        specialinvoke $r3.<androidx.media3.common.BundleListRetriever: void <init>(java.util.List)>($r5);

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void addMediaItems(androidx.media3.session.IMediaController,int,android.os.IBinder)>($r4, i0, $r3);

        return;
    }

    private void lambda$addMediaItem$31(int, androidx.media3.common.MediaItem, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1;
        androidx.media3.common.MediaItem r1;
        androidx.media3.session.IMediaSession r2;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        r2 := @parameter2: androidx.media3.session.IMediaSession;

        i1 := @parameter3: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.MediaItem: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void addMediaItemWithIndex(androidx.media3.session.IMediaController,int,int,android.os.Bundle)>($r3, i1, i0, $r4);

        return;
    }

    private void lambda$addMediaItem$30(androidx.media3.common.MediaItem, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.MediaItem: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void addMediaItem(androidx.media3.session.IMediaController,int,android.os.Bundle)>($r3, i0, $r4);

        return;
    }

    private static void lambda$setPlaylistMetadata$29(androidx.media3.common.MediaMetadata, androidx.media3.common.Player$Listener)
    {
        androidx.media3.common.MediaMetadata r0;
        androidx.media3.common.Player$Listener r1;

        r0 := @parameter0: androidx.media3.common.MediaMetadata;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaylistMetadataChanged(androidx.media3.common.MediaMetadata)>(r0);

        return;
    }

    private void lambda$setPlaylistMetadata$28(androidx.media3.common.MediaMetadata, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaMetadata r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaMetadata;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.MediaMetadata: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setPlaylistMetadata(androidx.media3.session.IMediaController,int,android.os.Bundle)>($r3, i0, $r4);

        return;
    }

    private void lambda$setMediaItems$27(java.util.List, int, long, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        int i0, i2;
        long l1;
        androidx.media3.session.IMediaSession r2;
        androidx.media3.common.BundleListRetriever $r3;
        androidx.media3.session.MediaControllerStub $r4;
        com.google.common.collect.ImmutableList $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 := @parameter3: androidx.media3.session.IMediaSession;

        i2 := @parameter4: int;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r3 = new androidx.media3.common.BundleListRetriever;

        $r5 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList toBundleList(java.util.List)>(r1);

        specialinvoke $r3.<androidx.media3.common.BundleListRetriever: void <init>(java.util.List)>($r5);

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setMediaItemsWithStartIndex(androidx.media3.session.IMediaController,int,android.os.IBinder,int,long)>($r4, i2, $r3, i0, l1);

        return;
    }

    private void lambda$setMediaItems$26(java.util.List, boolean, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        boolean z0;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.common.BundleListRetriever $r3;
        androidx.media3.session.MediaControllerStub $r4;
        com.google.common.collect.ImmutableList $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.media3.session.IMediaSession;

        i0 := @parameter3: int;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r3 = new androidx.media3.common.BundleListRetriever;

        $r5 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList toBundleList(java.util.List)>(r1);

        specialinvoke $r3.<androidx.media3.common.BundleListRetriever: void <init>(java.util.List)>($r5);

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setMediaItemsWithResetPosition(androidx.media3.session.IMediaController,int,android.os.IBinder,boolean)>($r4, i0, $r3, z0);

        return;
    }

    private void lambda$setMediaItems$25(java.util.List, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.util.List r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.common.BundleListRetriever $r3;
        androidx.media3.session.MediaControllerStub $r4;
        com.google.common.collect.ImmutableList $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r3 = new androidx.media3.common.BundleListRetriever;

        $r5 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList toBundleList(java.util.List)>(r1);

        specialinvoke $r3.<androidx.media3.common.BundleListRetriever: void <init>(java.util.List)>($r5);

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setMediaItems(androidx.media3.session.IMediaController,int,android.os.IBinder)>($r4, i0, $r3);

        return;
    }

    private void lambda$setMediaItem$24(androidx.media3.common.MediaItem, boolean, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaItem r1;
        boolean z0;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.media3.session.IMediaSession;

        i0 := @parameter3: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.MediaItem: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setMediaItemWithResetPosition(androidx.media3.session.IMediaController,int,android.os.Bundle,boolean)>($r3, i0, $r4, z0);

        return;
    }

    private void lambda$setMediaItem$23(androidx.media3.common.MediaItem, long, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaItem r1;
        long l0;
        androidx.media3.session.IMediaSession r2;
        int i1;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.media3.session.IMediaSession;

        i1 := @parameter3: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.MediaItem: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setMediaItemWithStartPosition(androidx.media3.session.IMediaController,int,android.os.Bundle,long)>($r3, i1, $r4, l0);

        return;
    }

    private void lambda$setMediaItem$22(androidx.media3.common.MediaItem, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.MediaItem: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setMediaItem(androidx.media3.session.IMediaController,int,android.os.Bundle)>($r3, i0, $r4);

        return;
    }

    private void lambda$sendCustomCommand$21(androidx.media3.session.SessionCommand, android.os.Bundle, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2, $r5;
        androidx.media3.session.IMediaSession r3;
        int i0;
        androidx.media3.session.MediaControllerStub $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: androidx.media3.session.IMediaSession;

        i0 := @parameter3: int;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r5 = virtualinvoke r1.<androidx.media3.session.SessionCommand: android.os.Bundle toBundle()>();

        interfaceinvoke r3.<androidx.media3.session.IMediaSession: void onCustomCommand(androidx.media3.session.IMediaController,int,android.os.Bundle,android.os.Bundle)>($r4, i0, $r5, r2);

        return;
    }

    private void lambda$setRating$20(androidx.media3.common.Rating, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Rating r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Rating;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.Rating: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setRating(androidx.media3.session.IMediaController,int,android.os.Bundle)>($r3, i0, $r4);

        return;
    }

    private void lambda$setRating$19(java.lang.String, androidx.media3.common.Rating, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        java.lang.String r1;
        androidx.media3.common.Rating r2;
        androidx.media3.session.IMediaSession r3;
        int i0;
        androidx.media3.session.MediaControllerStub $r4;
        android.os.Bundle $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.common.Rating;

        r3 := @parameter2: androidx.media3.session.IMediaSession;

        i0 := @parameter3: int;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r5 = virtualinvoke r2.<androidx.media3.common.Rating: android.os.Bundle toBundle()>();

        interfaceinvoke r3.<androidx.media3.session.IMediaSession: void setRatingWithMediaId(androidx.media3.session.IMediaController,int,java.lang.String,android.os.Bundle)>($r4, i0, r1, $r5);

        return;
    }

    private static void lambda$setPlaybackSpeed$18(androidx.media3.common.PlaybackParameters, androidx.media3.common.Player$Listener)
    {
        androidx.media3.common.PlaybackParameters r0;
        androidx.media3.common.Player$Listener r1;

        r0 := @parameter0: androidx.media3.common.PlaybackParameters;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters)>(r0);

        return;
    }

    private void lambda$setPlaybackSpeed$17(float, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        float f0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setPlaybackSpeed(androidx.media3.session.IMediaController,int,float)>($r2, i0, f0);

        return;
    }

    private static void lambda$setPlaybackParameters$16(androidx.media3.common.PlaybackParameters, androidx.media3.common.Player$Listener)
    {
        androidx.media3.common.PlaybackParameters r0;
        androidx.media3.common.Player$Listener r1;

        r0 := @parameter0: androidx.media3.common.PlaybackParameters;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters)>(r0);

        return;
    }

    private void lambda$setPlaybackParameters$15(androidx.media3.common.PlaybackParameters, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.PlaybackParameters r1;
        androidx.media3.session.IMediaSession r2;
        int i0;
        androidx.media3.session.MediaControllerStub $r3;
        android.os.Bundle $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.PlaybackParameters;

        r2 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r4 = virtualinvoke r1.<androidx.media3.common.PlaybackParameters: android.os.Bundle toBundle()>();

        interfaceinvoke r2.<androidx.media3.session.IMediaSession: void setPlaybackParameters(androidx.media3.session.IMediaController,int,android.os.Bundle)>($r3, i0, $r4);

        return;
    }

    private void lambda$setPlayWhenReady$14(boolean, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        boolean z0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i0 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setPlayWhenReady(androidx.media3.session.IMediaController,int,boolean)>($r2, i0, z0);

        return;
    }

    private void lambda$seekForward$13(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekForward(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$seekBack$12(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekBack(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$seekTo$11(int, long, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i2;
        long l1;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: androidx.media3.session.IMediaSession;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekToWithMediaItemIndex(androidx.media3.session.IMediaController,int,int,long)>($r2, i2, i0, l1);

        return;
    }

    private void lambda$seekTo$10(long, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        long l0;
        androidx.media3.session.IMediaSession r1;
        int i1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekTo(androidx.media3.session.IMediaController,int,long)>($r2, i1, l0);

        return;
    }

    private void lambda$seekToDefaultPosition$9(int, androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1;
        androidx.media3.session.IMediaSession r1;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.IMediaSession;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekToDefaultPositionWithMediaItemIndex(androidx.media3.session.IMediaController,int,int)>($r2, i1, i0);

        return;
    }

    private void lambda$seekToDefaultPosition$8(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void seekToDefaultPosition(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$prepare$7(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void prepare(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$pause$6(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void pause(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$play$5(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void play(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$release$4()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.MediaControllerImplBase$SessionServiceConnection $r1, $r3;
        androidx.media3.session.MediaControllerStub $r2;
        android.content.Context $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection serviceConnection>;

        if $r1 == null goto label1;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase: android.content.Context context>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection serviceConnection>;

        virtualinvoke $r4.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r3);

        r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection serviceConnection> = null;

     label1:
        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        virtualinvoke $r2.<androidx.media3.session.MediaControllerStub: void destroy()>();

        return;
    }

    private static void lambda$stop$3(androidx.media3.common.Player$Listener)
    {
        androidx.media3.common.Player$Listener r0;

        r0 := @parameter0: androidx.media3.common.Player$Listener;

        interfaceinvoke r0.<androidx.media3.common.Player$Listener: void onPlaybackStateChanged(int)>(1);

        return;
    }

    private void lambda$stop$2(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerStub $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void stop(androidx.media3.session.IMediaController,int)>($r2, i0);

        return;
    }

    private void lambda$new$1()
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.MediaController $r1, $r2;
        java.lang.Runnable $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        $r1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r2);

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r1.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r4);

        return;
    }

    private void lambda$new$0(androidx.media3.common.Player$Listener, androidx.media3.common.FlagSet)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.FlagSet r2;
        androidx.media3.session.MediaController $r3;
        androidx.media3.common.Player$Events $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        r2 := @parameter1: androidx.media3.common.FlagSet;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r4 = new androidx.media3.common.Player$Events;

        specialinvoke $r4.<androidx.media3.common.Player$Events: void <init>(androidx.media3.common.FlagSet)>(r2);

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onEvents(androidx.media3.common.Player,androidx.media3.common.Player$Events)>($r3, $r4);

        return;
    }

    static androidx.media3.session.SessionToken access$300(androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.SessionToken $r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken token>;

        return $r1;
    }

    static android.view.SurfaceHolder access$400(androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.SurfaceHolder $r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder videoSurfaceHolder>;

        return $r1;
    }

    static android.view.Surface access$502(androidx.media3.session.MediaControllerImplBase, android.view.Surface)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.Surface r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter1: android.view.Surface;

        r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface> = r1;

        return r1;
    }

    static void access$600(androidx.media3.session.MediaControllerImplBase, androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplBase$RemoteSessionTask;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void dispatchRemoteSessionTaskWithPlayerCommandAndWaitForFuture(androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>(r1);

        return;
    }

    static void access$700(androidx.media3.session.MediaControllerImplBase, int, int)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        int i0, i1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase: void maybeNotifySurfaceSizeChanged(int,int)>(i0, i1);

        return;
    }

    static android.view.TextureView access$800(androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.TextureView $r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.TextureView videoTextureView>;

        return $r1;
    }

    static android.view.Surface access$500(androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        android.view.Surface $r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: android.view.Surface videoSurface>;

        return $r1;
    }

    static androidx.media3.session.IMediaSession access$900(androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.IMediaSession $r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession iSession>;

        return $r1;
    }

androidx.media3.session.MediaControllerImplBase$1
androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler
<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: int MSG_FLUSH_COMMAND_QUEUE>
<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: android.os.Handler handler>
<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: androidx.media3.session.MediaControllerImplBase this$0>
    public void <init>(androidx.media3.session.MediaControllerImplBase, android.os.Looper)
    {
        androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler r0;
        androidx.media3.session.MediaControllerImplBase r1;
        android.os.Looper r2;
        android.os.Handler $r3;
        android.os.Handler$Callback $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        r2 := @parameter1: android.os.Looper;

        r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: androidx.media3.session.MediaControllerImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.Handler;

        $r4 = dynamicinvoke "handleMessage" <android.os.Handler$Callback (androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(android.os.Message), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: boolean handleMessage(android.os.Message)>, methodtype: boolean __METHODTYPE__(android.os.Message));

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>(r2, $r4);

        r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: android.os.Handler handler> = $r3;

        return;
    }

    public void sendFlushCommandQueueMessage()
    {
        androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler r0;
        androidx.media3.session.MediaControllerImplBase $r1;
        androidx.media3.session.IMediaSession $r2;
        android.os.Handler $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: androidx.media3.session.MediaControllerImplBase this$0>;

        $r2 = staticinvoke <androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession access$900(androidx.media3.session.MediaControllerImplBase)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: android.os.Handler handler>;

        $z0 = virtualinvoke $r3.<android.os.Handler: boolean hasMessages(int)>(1);

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: android.os.Handler handler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

     label1:
        return;
    }

    public void release()
    {
        androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler r0;
        android.os.Handler $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler;

        $r1 = r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: android.os.Handler handler>;

        $z0 = virtualinvoke $r1.<android.os.Handler: boolean hasMessages(int)>(1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: void flushCommandQueue()>();

     label1:
        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: android.os.Handler handler>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        return;
    }

    private boolean handleMessage(android.os.Message)
    {
        androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler r0;
        android.os.Message r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 != 1 goto label1;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: void flushCommandQueue()>();

     label1:
        return 1;
    }

    private void flushCommandQueue()
    {
        androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler r0;
        java.lang.Throwable r1, $r6;
        androidx.media3.session.MediaControllerImplBase $r2, $r4;
        androidx.media3.session.IMediaSession $r3;
        androidx.media3.session.MediaControllerStub $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler;

     label1:
        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaControllerImplBase: androidx.media3.session.IMediaSession access$900(androidx.media3.session.MediaControllerImplBase)>($r2);

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$FlushCommandQueueHandler: androidx.media3.session.MediaControllerImplBase this$0>;

        $r5 = $r4.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke $r3.<androidx.media3.session.IMediaSession: void flushCommandQueue(androidx.media3.session.IMediaController)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplBase", "Error in sending flushCommandQueue");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

androidx.media3.session.MediaControllerImplBase$PeriodInfo
<androidx.media3.session.MediaControllerImplBase$PeriodInfo: int index>
<androidx.media3.session.MediaControllerImplBase$PeriodInfo: long periodPositionUs>
    public void <init>(int, long)
    {
        androidx.media3.session.MediaControllerImplBase$PeriodInfo r0;
        int i0;
        long l1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$PeriodInfo;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplBase$PeriodInfo: int index> = i0;

        r0.<androidx.media3.session.MediaControllerImplBase$PeriodInfo: long periodPositionUs> = l1;

        return;
    }

    static int access$100(androidx.media3.session.MediaControllerImplBase$PeriodInfo)
    {
        androidx.media3.session.MediaControllerImplBase$PeriodInfo r0;
        int $i0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase$PeriodInfo;

        $i0 = r0.<androidx.media3.session.MediaControllerImplBase$PeriodInfo: int index>;

        return $i0;
    }

    static long access$200(androidx.media3.session.MediaControllerImplBase$PeriodInfo)
    {
        androidx.media3.session.MediaControllerImplBase$PeriodInfo r0;
        long $l0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase$PeriodInfo;

        $l0 = r0.<androidx.media3.session.MediaControllerImplBase$PeriodInfo: long periodPositionUs>;

        return $l0;
    }

androidx.media3.session.MediaControllerImplBase$RemoteSessionTask
<androidx.media3.session.MediaControllerImplBase$RemoteSessionTask: void run(androidx.media3.session.IMediaSession,int)>
androidx.media3.session.MediaControllerImplBase$SessionServiceConnection
<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: android.os.Bundle connectionHints>
<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>
    public void <init>(androidx.media3.session.MediaControllerImplBase, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplBase$SessionServiceConnection r0;
        androidx.media3.session.MediaControllerImplBase r1;
        android.os.Bundle r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        r2 := @parameter1: android.os.Bundle;

        r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: android.os.Bundle connectionHints> = r2;

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.media3.session.MediaControllerImplBase$SessionServiceConnection r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        androidx.media3.session.ConnectionRequest r3, $r9;
        java.lang.Throwable r4, $r44, $r51, r64;
        androidx.media3.session.MediaControllerImplBase $r5, $r10, $r14, $r17, $r19, $r23, $r25, $r31, $r38, $r40, $r45, $r47, $r57, $r59;
        androidx.media3.session.SessionToken $r6, $r32;
        java.lang.String $r7, $r8, $r12, $r33, $r37, $r56;
        boolean $z0, z1, z2;
        android.content.Context $r11;
        int $i0;
        android.os.Bundle $r13, $r16;
        androidx.media3.session.MediaControllerStub $r15;
        androidx.media3.session.MediaController $r18, $r20, $r24, $r26, $r39, $r41, $r46, $r48, $r58, $r60;
        java.lang.Runnable $r22, $r28, $r43, $r50, $r62;
        java.lang.StringBuilder $r29, $r30, $r34, $r35, $r36, $r52, $r53, $r54, $r55;
        androidx.media3.session.IMediaSessionService r63;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        z1 = 0;

     label01:
        $r5 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken access$300(androidx.media3.session.MediaControllerImplBase)>($r5);

        $r7 = virtualinvoke $r6.<androidx.media3.session.SessionToken: java.lang.String getPackageName()>();

        $r8 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label04;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected connection to ");

        $r31 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r32 = staticinvoke <androidx.media3.session.MediaControllerImplBase: androidx.media3.session.SessionToken access$300(androidx.media3.session.MediaControllerImplBase)>($r31);

        $r33 = virtualinvoke $r32.<androidx.media3.session.SessionToken: java.lang.String getPackageName()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is connected to ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("MCImplBase", $r37);

     label02:
        if z1 != 0 goto label03;

        $r38 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r39 = virtualinvoke $r38.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r40 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r41 = virtualinvoke $r40.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r41);

        $r43 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r41) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r39.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r43);

     label03:
        return;

     label04:
        r63 = staticinvoke <androidx.media3.session.IMediaSessionService$Stub: androidx.media3.session.IMediaSessionService asInterface(android.os.IBinder)>(r2);

        if r63 != null goto label07;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("MCImplBase", "Service interface is missing.");

     label05:
        if z1 != 0 goto label06;

        $r23 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r24 = virtualinvoke $r23.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r25 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r26 = virtualinvoke $r25.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r26);

        $r28 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r26) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r24.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r28);

     label06:
        return;

     label07:
        $r9 = new androidx.media3.session.ConnectionRequest;

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r11 = virtualinvoke $r10.<androidx.media3.session.MediaControllerImplBase: android.content.Context getContext()>();

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $r13 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: android.os.Bundle connectionHints>;

        specialinvoke $r9.<androidx.media3.session.ConnectionRequest: void <init>(java.lang.String,int,android.os.Bundle)>($r12, $i0, $r13);

        r3 = $r9;

        $r14 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r15 = $r14.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r16 = virtualinvoke r3.<androidx.media3.session.ConnectionRequest: android.os.Bundle toBundle()>();

        interfaceinvoke r63.<androidx.media3.session.IMediaSessionService: void connect(androidx.media3.session.IMediaController,android.os.Bundle)>($r15, $r16);

        z2 = 1;

     label08:
        if z2 != 0 goto label14;

        $r17 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r18 = virtualinvoke $r17.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r19 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r20 = virtualinvoke $r19.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r20);

        $r22 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r20) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r18.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r22);

        goto label14;

     label09:
        $r51 := @caughtexception;

        r64 = $r51;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has died prematurely");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplBase", $r56);

     label10:
        if z1 != 0 goto label14;

        $r57 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r58 = virtualinvoke $r57.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r59 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r60 = virtualinvoke $r59.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r60);

        $r62 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r60) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r58.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r62);

        goto label14;

     label11:
        $r44 := @caughtexception;

        r4 = $r44;

     label12:
        if z1 != 0 goto label13;

        $r45 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r46 = virtualinvoke $r45.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r47 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r48 = virtualinvoke $r47.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r48);

        $r50 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r48) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r46.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r50);

     label13:
        throw r4;

     label14:
        return;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.RemoteException from label04 to label05 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        androidx.media3.session.MediaControllerImplBase$SessionServiceConnection r0;
        android.content.ComponentName r1;
        androidx.media3.session.MediaControllerImplBase $r2, $r4;
        androidx.media3.session.MediaController $r3, $r5;
        java.lang.Runnable $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r5);

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r3.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r7);

        return;
    }

    public void onBindingDied(android.content.ComponentName)
    {
        androidx.media3.session.MediaControllerImplBase$SessionServiceConnection r0;
        android.content.ComponentName r1;
        androidx.media3.session.MediaControllerImplBase $r2, $r4;
        androidx.media3.session.MediaController $r3, $r5;
        java.lang.Runnable $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SessionServiceConnection;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$SessionServiceConnection: androidx.media3.session.MediaControllerImplBase this$0>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r5);

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r3.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r7);

        return;
    }

androidx.media3.session.MediaControllerImplBase$SurfaceCallback
<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>
    private void <init>(androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        androidx.media3.session.MediaControllerImplBase r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        android.view.SurfaceHolder r1, $r4;
        android.graphics.Rect r2;
        androidx.media3.session.MediaControllerImplBase $r3, $r5, $r8, $r10;
        android.view.Surface $r6;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r9;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: android.view.SurfaceHolder;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder access$400(androidx.media3.session.MediaControllerImplBase)>($r3);

        if $r4 == r1 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r6 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.Surface access$502(androidx.media3.session.MediaControllerImplBase,android.view.Surface)>($r5, $r6);

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase$SurfaceCallback)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase$SurfaceCallback: void lambda$surfaceCreated$0(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$600(androidx.media3.session.MediaControllerImplBase,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r8, $r9);

        r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>();

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $i0 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$700(androidx.media3.session.MediaControllerImplBase,int,int)>($r10, $i0, $i1);

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        android.view.SurfaceHolder r1, $r3;
        int i0, i1, i2;
        androidx.media3.session.MediaControllerImplBase $r2, $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder access$400(androidx.media3.session.MediaControllerImplBase)>($r2);

        if $r3 == r1 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$700(androidx.media3.session.MediaControllerImplBase,int,int)>($r4, i1, i2);

        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        android.view.SurfaceHolder r1, $r3;
        androidx.media3.session.MediaControllerImplBase $r2, $r4, $r6, $r8;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: android.view.SurfaceHolder;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.SurfaceHolder access$400(androidx.media3.session.MediaControllerImplBase)>($r2);

        if $r3 == r1 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.Surface access$502(androidx.media3.session.MediaControllerImplBase,android.view.Surface)>($r4, null);

        $r6 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase$SurfaceCallback)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase$SurfaceCallback: void lambda$surfaceDestroyed$1(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$600(androidx.media3.session.MediaControllerImplBase,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r6, $r7);

        $r8 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$700(androidx.media3.session.MediaControllerImplBase,int,int)>($r8, 0, 0);

        return;
    }

    public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture, int, int)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        android.graphics.SurfaceTexture r1, $r6;
        int i0, i1;
        androidx.media3.session.MediaControllerImplBase $r2, $r4, $r8, $r10, $r12;
        android.view.TextureView $r3, $r5;
        android.view.Surface $r7;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r11;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.TextureView access$800(androidx.media3.session.MediaControllerImplBase)>($r2);

        if $r3 == null goto label1;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.TextureView access$800(androidx.media3.session.MediaControllerImplBase)>($r4);

        $r6 = virtualinvoke $r5.<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>();

        if $r6 == r1 goto label2;

     label1:
        return;

     label2:
        $r8 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r7 = new android.view.Surface;

        specialinvoke $r7.<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>(r1);

        staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.Surface access$502(androidx.media3.session.MediaControllerImplBase,android.view.Surface)>($r8, $r7);

        $r10 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r11 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase$SurfaceCallback)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase$SurfaceCallback: void lambda$onSurfaceTextureAvailable$2(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$600(androidx.media3.session.MediaControllerImplBase,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r10, $r11);

        $r12 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$700(androidx.media3.session.MediaControllerImplBase,int,int)>($r12, i0, i1);

        return;
    }

    public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture, int, int)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        android.graphics.SurfaceTexture r1, $r6;
        int i0, i1;
        androidx.media3.session.MediaControllerImplBase $r2, $r4, $r7;
        android.view.TextureView $r3, $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.TextureView access$800(androidx.media3.session.MediaControllerImplBase)>($r2);

        if $r3 == null goto label1;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.TextureView access$800(androidx.media3.session.MediaControllerImplBase)>($r4);

        $r6 = virtualinvoke $r5.<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>();

        if $r6 == r1 goto label2;

     label1:
        return;

     label2:
        $r7 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$700(androidx.media3.session.MediaControllerImplBase,int,int)>($r7, i0, i1);

        return;
    }

    public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        android.graphics.SurfaceTexture r1, $r6;
        androidx.media3.session.MediaControllerImplBase $r2, $r4, $r7, $r9, $r11;
        android.view.TextureView $r3, $r5;
        androidx.media3.session.MediaControllerImplBase$RemoteSessionTask $r10;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.TextureView access$800(androidx.media3.session.MediaControllerImplBase)>($r2);

        if $r3 == null goto label1;

        $r4 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.TextureView access$800(androidx.media3.session.MediaControllerImplBase)>($r4);

        $r6 = virtualinvoke $r5.<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>();

        if $r6 == r1 goto label2;

     label1:
        return 1;

     label2:
        $r7 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.Surface access$502(androidx.media3.session.MediaControllerImplBase,android.view.Surface)>($r7, null);

        $r9 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaControllerImplBase$RemoteSessionTask (androidx.media3.session.MediaControllerImplBase$SurfaceCallback)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplBase$SurfaceCallback: void lambda$onSurfaceTextureDestroyed$3(androidx.media3.session.IMediaSession,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.IMediaSession,int));

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$600(androidx.media3.session.MediaControllerImplBase,androidx.media3.session.MediaControllerImplBase$RemoteSessionTask)>($r9, $r10);

        $r11 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        staticinvoke <androidx.media3.session.MediaControllerImplBase: void access$700(androidx.media3.session.MediaControllerImplBase,int,int)>($r11, 0, 0);

        return 1;
    }

    public void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        android.graphics.SurfaceTexture r1;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        return;
    }

    private void lambda$onSurfaceTextureDestroyed$3(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerImplBase $r2;
        androidx.media3.session.MediaControllerStub $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = $r2.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r3, i0, null);

        return;
    }

    private void lambda$onSurfaceTextureAvailable$2(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerImplBase $r2, $r3;
        androidx.media3.session.MediaControllerStub $r4;
        android.view.Surface $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r4 = $r2.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.Surface access$500(androidx.media3.session.MediaControllerImplBase)>($r3);

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r4, i0, $r5);

        return;
    }

    private void lambda$surfaceDestroyed$1(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerImplBase $r2;
        androidx.media3.session.MediaControllerStub $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r3 = $r2.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r3, i0, null);

        return;
    }

    private void lambda$surfaceCreated$0(androidx.media3.session.IMediaSession, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        androidx.media3.session.IMediaSession r1;
        int i0;
        androidx.media3.session.MediaControllerImplBase $r2, $r3;
        androidx.media3.session.MediaControllerStub $r4;
        android.view.Surface $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: androidx.media3.session.IMediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r4 = $r2.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaControllerStub controllerStub>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: androidx.media3.session.MediaControllerImplBase this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaControllerImplBase: android.view.Surface access$500(androidx.media3.session.MediaControllerImplBase)>($r3);

        interfaceinvoke r1.<androidx.media3.session.IMediaSession: void setVideoSurface(androidx.media3.session.IMediaController,int,android.view.Surface)>($r4, i0, $r5);

        return;
    }

    void <init>(androidx.media3.session.MediaControllerImplBase, androidx.media3.session.MediaControllerImplBase$1)
    {
        androidx.media3.session.MediaControllerImplBase$SurfaceCallback r0;
        androidx.media3.session.MediaControllerImplBase r1;
        androidx.media3.session.MediaControllerImplBase$1 r2;

        r0 := @this: androidx.media3.session.MediaControllerImplBase$SurfaceCallback;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        r2 := @parameter1: androidx.media3.session.MediaControllerImplBase$1;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplBase$SurfaceCallback: void <init>(androidx.media3.session.MediaControllerImplBase)>(r1);

        return;
    }

